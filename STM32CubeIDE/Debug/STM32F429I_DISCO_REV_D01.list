
STM32F429I_DISCO_REV_D01.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00026158  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002a48  08026308  08026308  00027308  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000079a  08028d50  08028d50  00029d50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000024  080294ec  080294ec  0002a4ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000007e  08029510  08029510  0002a510  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 0019e978  08029590  08029590  0002a590  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  081c7f08  081c7f08  001c9380  2**0
                  CONTENTS
  8 .ARM          00000008  081c7f08  081c7f08  001c8f08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  081c7f10  081c7f10  001c9380  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  081c7f10  081c7f10  001c8f10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  081c7f24  081c7f24  001c8f24  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000164  20000000  081c7f2c  001c9000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  20000180  081c8090  001c9180  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  20000280  081c8190  001c9280  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          00015bf8  20000380  081c8290  001c9380  2**2
                  ALLOC
 16 ._user_heap_stack 00001400  20015f78  081c8290  001c9f78  2**0
                  ALLOC
 17 .ARM.attributes 00000030  00000000  00000000  001c9380  2**0
                  CONTENTS, READONLY
 18 TouchGFX_Framebuffer 00070800  d0000000  d0000000  001ca000  2**2
                  ALLOC
 19 .debug_line   00061c01  00000000  00000000  001c93b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line_str 00000066  00000000  00000000  0022afb1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_info   000ff4e2  00000000  00000000  0022b017  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_abbrev 0001b421  00000000  00000000  0032a4f9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_aranges 00003c10  00000000  00000000  00345920  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_str    001150c7  00000000  00000000  00349530  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_rnglists 0000515d  00000000  00000000  0045e5f7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_loclists 000234d5  00000000  00000000  00463754  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_macro  0003420c  00000000  00000000  00486c29  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .comment      000000c2  00000000  00000000  004bae35  2**0
                  CONTENTS, READONLY
 29 .debug_frame  0000a67c  00000000  00000000  004baef8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000380 	.word	0x20000380
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080262f0 	.word	0x080262f0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000384 	.word	0x20000384
 80001ec:	080262f0 	.word	0x080262f0

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_ldivmod>:
 8000290:	b97b      	cbnz	r3, 80002b2 <__aeabi_ldivmod+0x22>
 8000292:	b972      	cbnz	r2, 80002b2 <__aeabi_ldivmod+0x22>
 8000294:	2900      	cmp	r1, #0
 8000296:	bfbe      	ittt	lt
 8000298:	2000      	movlt	r0, #0
 800029a:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 800029e:	e006      	blt.n	80002ae <__aeabi_ldivmod+0x1e>
 80002a0:	bf08      	it	eq
 80002a2:	2800      	cmpeq	r0, #0
 80002a4:	bf1c      	itt	ne
 80002a6:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 80002aa:	f04f 30ff 	movne.w	r0, #4294967295
 80002ae:	f000 b9d3 	b.w	8000658 <__aeabi_idiv0>
 80002b2:	f1ad 0c08 	sub.w	ip, sp, #8
 80002b6:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002ba:	2900      	cmp	r1, #0
 80002bc:	db09      	blt.n	80002d2 <__aeabi_ldivmod+0x42>
 80002be:	2b00      	cmp	r3, #0
 80002c0:	db1a      	blt.n	80002f8 <__aeabi_ldivmod+0x68>
 80002c2:	f000 f84d 	bl	8000360 <__udivmoddi4>
 80002c6:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002ca:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ce:	b004      	add	sp, #16
 80002d0:	4770      	bx	lr
 80002d2:	4240      	negs	r0, r0
 80002d4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002d8:	2b00      	cmp	r3, #0
 80002da:	db1b      	blt.n	8000314 <__aeabi_ldivmod+0x84>
 80002dc:	f000 f840 	bl	8000360 <__udivmoddi4>
 80002e0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002e8:	b004      	add	sp, #16
 80002ea:	4240      	negs	r0, r0
 80002ec:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002f0:	4252      	negs	r2, r2
 80002f2:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002f6:	4770      	bx	lr
 80002f8:	4252      	negs	r2, r2
 80002fa:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002fe:	f000 f82f 	bl	8000360 <__udivmoddi4>
 8000302:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000306:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800030a:	b004      	add	sp, #16
 800030c:	4240      	negs	r0, r0
 800030e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000312:	4770      	bx	lr
 8000314:	4252      	negs	r2, r2
 8000316:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800031a:	f000 f821 	bl	8000360 <__udivmoddi4>
 800031e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000322:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000326:	b004      	add	sp, #16
 8000328:	4252      	negs	r2, r2
 800032a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800032e:	4770      	bx	lr

08000330 <__aeabi_uldivmod>:
 8000330:	b953      	cbnz	r3, 8000348 <__aeabi_uldivmod+0x18>
 8000332:	b94a      	cbnz	r2, 8000348 <__aeabi_uldivmod+0x18>
 8000334:	2900      	cmp	r1, #0
 8000336:	bf08      	it	eq
 8000338:	2800      	cmpeq	r0, #0
 800033a:	bf1c      	itt	ne
 800033c:	f04f 31ff 	movne.w	r1, #4294967295
 8000340:	f04f 30ff 	movne.w	r0, #4294967295
 8000344:	f000 b988 	b.w	8000658 <__aeabi_idiv0>
 8000348:	f1ad 0c08 	sub.w	ip, sp, #8
 800034c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000350:	f000 f806 	bl	8000360 <__udivmoddi4>
 8000354:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000358:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800035c:	b004      	add	sp, #16
 800035e:	4770      	bx	lr

08000360 <__udivmoddi4>:
 8000360:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000364:	9d08      	ldr	r5, [sp, #32]
 8000366:	468e      	mov	lr, r1
 8000368:	4604      	mov	r4, r0
 800036a:	4688      	mov	r8, r1
 800036c:	2b00      	cmp	r3, #0
 800036e:	d14a      	bne.n	8000406 <__udivmoddi4+0xa6>
 8000370:	428a      	cmp	r2, r1
 8000372:	4617      	mov	r7, r2
 8000374:	d962      	bls.n	800043c <__udivmoddi4+0xdc>
 8000376:	fab2 f682 	clz	r6, r2
 800037a:	b14e      	cbz	r6, 8000390 <__udivmoddi4+0x30>
 800037c:	f1c6 0320 	rsb	r3, r6, #32
 8000380:	fa01 f806 	lsl.w	r8, r1, r6
 8000384:	fa20 f303 	lsr.w	r3, r0, r3
 8000388:	40b7      	lsls	r7, r6
 800038a:	ea43 0808 	orr.w	r8, r3, r8
 800038e:	40b4      	lsls	r4, r6
 8000390:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000394:	fa1f fc87 	uxth.w	ip, r7
 8000398:	fbb8 f1fe 	udiv	r1, r8, lr
 800039c:	0c23      	lsrs	r3, r4, #16
 800039e:	fb0e 8811 	mls	r8, lr, r1, r8
 80003a2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80003a6:	fb01 f20c 	mul.w	r2, r1, ip
 80003aa:	429a      	cmp	r2, r3
 80003ac:	d909      	bls.n	80003c2 <__udivmoddi4+0x62>
 80003ae:	18fb      	adds	r3, r7, r3
 80003b0:	f101 30ff 	add.w	r0, r1, #4294967295
 80003b4:	f080 80ea 	bcs.w	800058c <__udivmoddi4+0x22c>
 80003b8:	429a      	cmp	r2, r3
 80003ba:	f240 80e7 	bls.w	800058c <__udivmoddi4+0x22c>
 80003be:	3902      	subs	r1, #2
 80003c0:	443b      	add	r3, r7
 80003c2:	1a9a      	subs	r2, r3, r2
 80003c4:	b2a3      	uxth	r3, r4
 80003c6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ca:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ce:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003d2:	fb00 fc0c 	mul.w	ip, r0, ip
 80003d6:	459c      	cmp	ip, r3
 80003d8:	d909      	bls.n	80003ee <__udivmoddi4+0x8e>
 80003da:	18fb      	adds	r3, r7, r3
 80003dc:	f100 32ff 	add.w	r2, r0, #4294967295
 80003e0:	f080 80d6 	bcs.w	8000590 <__udivmoddi4+0x230>
 80003e4:	459c      	cmp	ip, r3
 80003e6:	f240 80d3 	bls.w	8000590 <__udivmoddi4+0x230>
 80003ea:	443b      	add	r3, r7
 80003ec:	3802      	subs	r0, #2
 80003ee:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80003f2:	eba3 030c 	sub.w	r3, r3, ip
 80003f6:	2100      	movs	r1, #0
 80003f8:	b11d      	cbz	r5, 8000402 <__udivmoddi4+0xa2>
 80003fa:	40f3      	lsrs	r3, r6
 80003fc:	2200      	movs	r2, #0
 80003fe:	e9c5 3200 	strd	r3, r2, [r5]
 8000402:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000406:	428b      	cmp	r3, r1
 8000408:	d905      	bls.n	8000416 <__udivmoddi4+0xb6>
 800040a:	b10d      	cbz	r5, 8000410 <__udivmoddi4+0xb0>
 800040c:	e9c5 0100 	strd	r0, r1, [r5]
 8000410:	2100      	movs	r1, #0
 8000412:	4608      	mov	r0, r1
 8000414:	e7f5      	b.n	8000402 <__udivmoddi4+0xa2>
 8000416:	fab3 f183 	clz	r1, r3
 800041a:	2900      	cmp	r1, #0
 800041c:	d146      	bne.n	80004ac <__udivmoddi4+0x14c>
 800041e:	4573      	cmp	r3, lr
 8000420:	d302      	bcc.n	8000428 <__udivmoddi4+0xc8>
 8000422:	4282      	cmp	r2, r0
 8000424:	f200 8105 	bhi.w	8000632 <__udivmoddi4+0x2d2>
 8000428:	1a84      	subs	r4, r0, r2
 800042a:	eb6e 0203 	sbc.w	r2, lr, r3
 800042e:	2001      	movs	r0, #1
 8000430:	4690      	mov	r8, r2
 8000432:	2d00      	cmp	r5, #0
 8000434:	d0e5      	beq.n	8000402 <__udivmoddi4+0xa2>
 8000436:	e9c5 4800 	strd	r4, r8, [r5]
 800043a:	e7e2      	b.n	8000402 <__udivmoddi4+0xa2>
 800043c:	2a00      	cmp	r2, #0
 800043e:	f000 8090 	beq.w	8000562 <__udivmoddi4+0x202>
 8000442:	fab2 f682 	clz	r6, r2
 8000446:	2e00      	cmp	r6, #0
 8000448:	f040 80a4 	bne.w	8000594 <__udivmoddi4+0x234>
 800044c:	1a8a      	subs	r2, r1, r2
 800044e:	0c03      	lsrs	r3, r0, #16
 8000450:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000454:	b280      	uxth	r0, r0
 8000456:	b2bc      	uxth	r4, r7
 8000458:	2101      	movs	r1, #1
 800045a:	fbb2 fcfe 	udiv	ip, r2, lr
 800045e:	fb0e 221c 	mls	r2, lr, ip, r2
 8000462:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000466:	fb04 f20c 	mul.w	r2, r4, ip
 800046a:	429a      	cmp	r2, r3
 800046c:	d907      	bls.n	800047e <__udivmoddi4+0x11e>
 800046e:	18fb      	adds	r3, r7, r3
 8000470:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000474:	d202      	bcs.n	800047c <__udivmoddi4+0x11c>
 8000476:	429a      	cmp	r2, r3
 8000478:	f200 80e0 	bhi.w	800063c <__udivmoddi4+0x2dc>
 800047c:	46c4      	mov	ip, r8
 800047e:	1a9b      	subs	r3, r3, r2
 8000480:	fbb3 f2fe 	udiv	r2, r3, lr
 8000484:	fb0e 3312 	mls	r3, lr, r2, r3
 8000488:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 800048c:	fb02 f404 	mul.w	r4, r2, r4
 8000490:	429c      	cmp	r4, r3
 8000492:	d907      	bls.n	80004a4 <__udivmoddi4+0x144>
 8000494:	18fb      	adds	r3, r7, r3
 8000496:	f102 30ff 	add.w	r0, r2, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x142>
 800049c:	429c      	cmp	r4, r3
 800049e:	f200 80ca 	bhi.w	8000636 <__udivmoddi4+0x2d6>
 80004a2:	4602      	mov	r2, r0
 80004a4:	1b1b      	subs	r3, r3, r4
 80004a6:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 80004aa:	e7a5      	b.n	80003f8 <__udivmoddi4+0x98>
 80004ac:	f1c1 0620 	rsb	r6, r1, #32
 80004b0:	408b      	lsls	r3, r1
 80004b2:	fa22 f706 	lsr.w	r7, r2, r6
 80004b6:	431f      	orrs	r7, r3
 80004b8:	fa0e f401 	lsl.w	r4, lr, r1
 80004bc:	fa20 f306 	lsr.w	r3, r0, r6
 80004c0:	fa2e fe06 	lsr.w	lr, lr, r6
 80004c4:	ea4f 4917 	mov.w	r9, r7, lsr #16
 80004c8:	4323      	orrs	r3, r4
 80004ca:	fa00 f801 	lsl.w	r8, r0, r1
 80004ce:	fa1f fc87 	uxth.w	ip, r7
 80004d2:	fbbe f0f9 	udiv	r0, lr, r9
 80004d6:	0c1c      	lsrs	r4, r3, #16
 80004d8:	fb09 ee10 	mls	lr, r9, r0, lr
 80004dc:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 80004e0:	fb00 fe0c 	mul.w	lr, r0, ip
 80004e4:	45a6      	cmp	lr, r4
 80004e6:	fa02 f201 	lsl.w	r2, r2, r1
 80004ea:	d909      	bls.n	8000500 <__udivmoddi4+0x1a0>
 80004ec:	193c      	adds	r4, r7, r4
 80004ee:	f100 3aff 	add.w	sl, r0, #4294967295
 80004f2:	f080 809c 	bcs.w	800062e <__udivmoddi4+0x2ce>
 80004f6:	45a6      	cmp	lr, r4
 80004f8:	f240 8099 	bls.w	800062e <__udivmoddi4+0x2ce>
 80004fc:	3802      	subs	r0, #2
 80004fe:	443c      	add	r4, r7
 8000500:	eba4 040e 	sub.w	r4, r4, lr
 8000504:	fa1f fe83 	uxth.w	lr, r3
 8000508:	fbb4 f3f9 	udiv	r3, r4, r9
 800050c:	fb09 4413 	mls	r4, r9, r3, r4
 8000510:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000514:	fb03 fc0c 	mul.w	ip, r3, ip
 8000518:	45a4      	cmp	ip, r4
 800051a:	d908      	bls.n	800052e <__udivmoddi4+0x1ce>
 800051c:	193c      	adds	r4, r7, r4
 800051e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000522:	f080 8082 	bcs.w	800062a <__udivmoddi4+0x2ca>
 8000526:	45a4      	cmp	ip, r4
 8000528:	d97f      	bls.n	800062a <__udivmoddi4+0x2ca>
 800052a:	3b02      	subs	r3, #2
 800052c:	443c      	add	r4, r7
 800052e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000532:	eba4 040c 	sub.w	r4, r4, ip
 8000536:	fba0 ec02 	umull	lr, ip, r0, r2
 800053a:	4564      	cmp	r4, ip
 800053c:	4673      	mov	r3, lr
 800053e:	46e1      	mov	r9, ip
 8000540:	d362      	bcc.n	8000608 <__udivmoddi4+0x2a8>
 8000542:	d05f      	beq.n	8000604 <__udivmoddi4+0x2a4>
 8000544:	b15d      	cbz	r5, 800055e <__udivmoddi4+0x1fe>
 8000546:	ebb8 0203 	subs.w	r2, r8, r3
 800054a:	eb64 0409 	sbc.w	r4, r4, r9
 800054e:	fa04 f606 	lsl.w	r6, r4, r6
 8000552:	fa22 f301 	lsr.w	r3, r2, r1
 8000556:	431e      	orrs	r6, r3
 8000558:	40cc      	lsrs	r4, r1
 800055a:	e9c5 6400 	strd	r6, r4, [r5]
 800055e:	2100      	movs	r1, #0
 8000560:	e74f      	b.n	8000402 <__udivmoddi4+0xa2>
 8000562:	fbb1 fcf2 	udiv	ip, r1, r2
 8000566:	0c01      	lsrs	r1, r0, #16
 8000568:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 800056c:	b280      	uxth	r0, r0
 800056e:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000572:	463b      	mov	r3, r7
 8000574:	4638      	mov	r0, r7
 8000576:	463c      	mov	r4, r7
 8000578:	46b8      	mov	r8, r7
 800057a:	46be      	mov	lr, r7
 800057c:	2620      	movs	r6, #32
 800057e:	fbb1 f1f7 	udiv	r1, r1, r7
 8000582:	eba2 0208 	sub.w	r2, r2, r8
 8000586:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800058a:	e766      	b.n	800045a <__udivmoddi4+0xfa>
 800058c:	4601      	mov	r1, r0
 800058e:	e718      	b.n	80003c2 <__udivmoddi4+0x62>
 8000590:	4610      	mov	r0, r2
 8000592:	e72c      	b.n	80003ee <__udivmoddi4+0x8e>
 8000594:	f1c6 0220 	rsb	r2, r6, #32
 8000598:	fa2e f302 	lsr.w	r3, lr, r2
 800059c:	40b7      	lsls	r7, r6
 800059e:	40b1      	lsls	r1, r6
 80005a0:	fa20 f202 	lsr.w	r2, r0, r2
 80005a4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80005a8:	430a      	orrs	r2, r1
 80005aa:	fbb3 f8fe 	udiv	r8, r3, lr
 80005ae:	b2bc      	uxth	r4, r7
 80005b0:	fb0e 3318 	mls	r3, lr, r8, r3
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80005ba:	fb08 f904 	mul.w	r9, r8, r4
 80005be:	40b0      	lsls	r0, r6
 80005c0:	4589      	cmp	r9, r1
 80005c2:	ea4f 4310 	mov.w	r3, r0, lsr #16
 80005c6:	b280      	uxth	r0, r0
 80005c8:	d93e      	bls.n	8000648 <__udivmoddi4+0x2e8>
 80005ca:	1879      	adds	r1, r7, r1
 80005cc:	f108 3cff 	add.w	ip, r8, #4294967295
 80005d0:	d201      	bcs.n	80005d6 <__udivmoddi4+0x276>
 80005d2:	4589      	cmp	r9, r1
 80005d4:	d81f      	bhi.n	8000616 <__udivmoddi4+0x2b6>
 80005d6:	eba1 0109 	sub.w	r1, r1, r9
 80005da:	fbb1 f9fe 	udiv	r9, r1, lr
 80005de:	fb09 f804 	mul.w	r8, r9, r4
 80005e2:	fb0e 1119 	mls	r1, lr, r9, r1
 80005e6:	b292      	uxth	r2, r2
 80005e8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005ec:	4542      	cmp	r2, r8
 80005ee:	d229      	bcs.n	8000644 <__udivmoddi4+0x2e4>
 80005f0:	18ba      	adds	r2, r7, r2
 80005f2:	f109 31ff 	add.w	r1, r9, #4294967295
 80005f6:	d2c4      	bcs.n	8000582 <__udivmoddi4+0x222>
 80005f8:	4542      	cmp	r2, r8
 80005fa:	d2c2      	bcs.n	8000582 <__udivmoddi4+0x222>
 80005fc:	f1a9 0102 	sub.w	r1, r9, #2
 8000600:	443a      	add	r2, r7
 8000602:	e7be      	b.n	8000582 <__udivmoddi4+0x222>
 8000604:	45f0      	cmp	r8, lr
 8000606:	d29d      	bcs.n	8000544 <__udivmoddi4+0x1e4>
 8000608:	ebbe 0302 	subs.w	r3, lr, r2
 800060c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000610:	3801      	subs	r0, #1
 8000612:	46e1      	mov	r9, ip
 8000614:	e796      	b.n	8000544 <__udivmoddi4+0x1e4>
 8000616:	eba7 0909 	sub.w	r9, r7, r9
 800061a:	4449      	add	r1, r9
 800061c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000620:	fbb1 f9fe 	udiv	r9, r1, lr
 8000624:	fb09 f804 	mul.w	r8, r9, r4
 8000628:	e7db      	b.n	80005e2 <__udivmoddi4+0x282>
 800062a:	4673      	mov	r3, lr
 800062c:	e77f      	b.n	800052e <__udivmoddi4+0x1ce>
 800062e:	4650      	mov	r0, sl
 8000630:	e766      	b.n	8000500 <__udivmoddi4+0x1a0>
 8000632:	4608      	mov	r0, r1
 8000634:	e6fd      	b.n	8000432 <__udivmoddi4+0xd2>
 8000636:	443b      	add	r3, r7
 8000638:	3a02      	subs	r2, #2
 800063a:	e733      	b.n	80004a4 <__udivmoddi4+0x144>
 800063c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000640:	443b      	add	r3, r7
 8000642:	e71c      	b.n	800047e <__udivmoddi4+0x11e>
 8000644:	4649      	mov	r1, r9
 8000646:	e79c      	b.n	8000582 <__udivmoddi4+0x222>
 8000648:	eba1 0109 	sub.w	r1, r1, r9
 800064c:	46c4      	mov	ip, r8
 800064e:	fbb1 f9fe 	udiv	r9, r1, lr
 8000652:	fb09 f804 	mul.w	r8, r9, r4
 8000656:	e7c4      	b.n	80005e2 <__udivmoddi4+0x282>

08000658 <__aeabi_idiv0>:
 8000658:	4770      	bx	lr
 800065a:	bf00      	nop

0800065c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800065c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8000694 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000660:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000662:	e003      	b.n	800066c <LoopCopyDataInit>

08000664 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000664:	4b0c      	ldr	r3, [pc, #48]	@ (8000698 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000666:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000668:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800066a:	3104      	adds	r1, #4

0800066c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800066c:	480b      	ldr	r0, [pc, #44]	@ (800069c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800066e:	4b0c      	ldr	r3, [pc, #48]	@ (80006a0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000670:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000674:	d3f6      	bcc.n	8000664 <CopyDataInit>
  ldr  r2, =_sbss
 8000676:	4a0b      	ldr	r2, [pc, #44]	@ (80006a4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000678:	e002      	b.n	8000680 <LoopFillZerobss>

0800067a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800067a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800067c:	f842 3b04 	str.w	r3, [r2], #4

08000680 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000680:	4b09      	ldr	r3, [pc, #36]	@ (80006a8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000682:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000684:	d3f9      	bcc.n	800067a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000686:	f006 ff43 	bl	8007510 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800068a:	f025 f8c3 	bl	8025814 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800068e:	f000 f9e7 	bl	8000a60 <main>
  bx  lr    
 8000692:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000694:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000698:	081c7f2c 	.word	0x081c7f2c
  ldr  r0, =_sdata
 800069c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80006a0:	20000164 	.word	0x20000164
  ldr  r2, =_sbss
 80006a4:	20000380 	.word	0x20000380
  ldr  r3, = _ebss
 80006a8:	20015f78 	.word	0x20015f78

080006ac <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80006ac:	e7fe      	b.n	80006ac <ADC_IRQHandler>
	...

080006b0 <PAJ7620_WriteRegister>:
  * @brief Ghi một byte dữ liệu vào thanh ghi của PAJ7620U2 qua I2C.
  * @param reg_addr: Địa chỉ thanh ghi cần ghi.
  * @param data: Dữ liệu cần ghi.
  * @retval HAL_StatusTypeDef: Trạng thái HAL_OK nếu thành công.
  */
static HAL_StatusTypeDef PAJ7620_WriteRegister(uint8_t reg_addr, uint8_t data) {
 80006b0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    return HAL_I2C_Mem_Write(&hi2c3, PAJ7620_I2C_BUS_ADDR, reg_addr, I2C_MEMADD_SIZE_8BIT, &data, 1, 100);
 80006b2:	2301      	movs	r3, #1
static HAL_StatusTypeDef PAJ7620_WriteRegister(uint8_t reg_addr, uint8_t data) {
 80006b4:	f88d 1017 	strb.w	r1, [sp, #23]
    return HAL_I2C_Mem_Write(&hi2c3, PAJ7620_I2C_BUS_ADDR, reg_addr, I2C_MEMADD_SIZE_8BIT, &data, 1, 100);
 80006b8:	2164      	movs	r1, #100	@ 0x64
 80006ba:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80006be:	f10d 0117 	add.w	r1, sp, #23
static HAL_StatusTypeDef PAJ7620_WriteRegister(uint8_t reg_addr, uint8_t data) {
 80006c2:	4602      	mov	r2, r0
    return HAL_I2C_Mem_Write(&hi2c3, PAJ7620_I2C_BUS_ADDR, reg_addr, I2C_MEMADD_SIZE_8BIT, &data, 1, 100);
 80006c4:	9100      	str	r1, [sp, #0]
 80006c6:	4803      	ldr	r0, [pc, #12]	@ (80006d4 <PAJ7620_WriteRegister+0x24>)
 80006c8:	21e6      	movs	r1, #230	@ 0xe6
 80006ca:	f007 fc6b 	bl	8007fa4 <HAL_I2C_Mem_Write>
}
 80006ce:	b007      	add	sp, #28
 80006d0:	f85d fb04 	ldr.w	pc, [sp], #4
 80006d4:	200004f4 	.word	0x200004f4

080006d8 <PAJ7620_SelectRegisterBank.isra.0>:
/**
  * @brief Chọn bank thanh ghi (Bank 0 hoặc Bank 1) của PAJ7620U2.
  * @param bank: 0 cho Bank 0, 1 cho Bank 1.
  * @retval HAL_StatusTypeDef: Trạng thái HAL_OK nếu thành công.
  */
static HAL_StatusTypeDef PAJ7620_SelectRegisterBank(uint8_t bank) {
 80006d8:	4601      	mov	r1, r0
    return PAJ7620_WriteRegister(PAJ7620_REGISTER_BANK_SEL, bank);
 80006da:	20ef      	movs	r0, #239	@ 0xef
 80006dc:	f7ff bfe8 	b.w	80006b0 <PAJ7620_WriteRegister>

080006e0 <PAJ7620_WriteRegisterArray>:
  * @brief Ghi một mảng các cặp địa chỉ/giá trị vào các thanh ghi.
  * @param settings: Mảng các cấu hình thanh ghi.
  * @param size: Kích thước của mảng.
  * @retval HAL_StatusTypeDef: Trạng thái HAL_OK nếu thành công.
  */
static HAL_StatusTypeDef PAJ7620_WriteRegisterArray(const PAJ7620_RegSetting_t settings[], uint16_t size) {
 80006e0:	b570      	push	{r4, r5, r6, lr}
 80006e2:	4604      	mov	r4, r0
 80006e4:	eb00 0641 	add.w	r6, r0, r1, lsl #1
    HAL_StatusTypeDef status;
    for (uint16_t i = 0; i < size; i++) {
        status = PAJ7620_WriteRegister(settings[i].address, settings[i].value);
 80006e8:	7861      	ldrb	r1, [r4, #1]
 80006ea:	7820      	ldrb	r0, [r4, #0]
 80006ec:	f7ff ffe0 	bl	80006b0 <PAJ7620_WriteRegister>
        if (status != HAL_OK) {
 80006f0:	4605      	mov	r5, r0
 80006f2:	b920      	cbnz	r0, 80006fe <PAJ7620_WriteRegisterArray+0x1e>
    for (uint16_t i = 0; i < size; i++) {
 80006f4:	3402      	adds	r4, #2
 80006f6:	42b4      	cmp	r4, r6
 80006f8:	d1f6      	bne.n	80006e8 <PAJ7620_WriteRegisterArray+0x8>
            return status;
        }
    }
    PAJ7620_SelectRegisterBank(0); // Luôn về Bank 0 sau khi cấu hình
 80006fa:	f7ff ffed 	bl	80006d8 <PAJ7620_SelectRegisterBank.isra.0>
    return HAL_OK;
}
 80006fe:	4628      	mov	r0, r5
 8000700:	bd70      	pop	{r4, r5, r6, pc}
	...

08000704 <PAJ7620_ReadRegister.isra.0>:
static HAL_StatusTypeDef PAJ7620_ReadRegister(uint8_t reg_addr, uint8_t *data) {
 8000704:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000706:	4602      	mov	r2, r0
    return HAL_I2C_Mem_Read(&hi2c3, PAJ7620_I2C_BUS_ADDR, reg_addr, I2C_MEMADD_SIZE_8BIT, data, 1, 100);
 8000708:	2301      	movs	r3, #1
 800070a:	2064      	movs	r0, #100	@ 0x64
 800070c:	e9cd 3001 	strd	r3, r0, [sp, #4]
 8000710:	9100      	str	r1, [sp, #0]
 8000712:	4803      	ldr	r0, [pc, #12]	@ (8000720 <PAJ7620_ReadRegister.isra.0+0x1c>)
 8000714:	21e6      	movs	r1, #230	@ 0xe6
 8000716:	f007 fcd5 	bl	80080c4 <HAL_I2C_Mem_Read>
}
 800071a:	b005      	add	sp, #20
 800071c:	f85d fb04 	ldr.w	pc, [sp], #4
 8000720:	200004f4 	.word	0x200004f4

08000724 <PAJ7620_ForwardBackwardGestureCheck>:
/**
  * @brief Kiểm tra các cử chỉ Tiến/Lùi.
  * @param initialGesture: Cử chỉ ban đầu được phát hiện.
  * @retval PAJ7620_Gesture_t: Cử chỉ cuối cùng (có thể là Tiến/Lùi).
  */
static PAJ7620_Gesture_t PAJ7620_ForwardBackwardGestureCheck(PAJ7620_Gesture_t initialGesture) {
 8000724:	b513      	push	{r0, r1, r4, lr}
    uint8_t data = 0;
 8000726:	2300      	movs	r3, #0
static PAJ7620_Gesture_t PAJ7620_ForwardBackwardGestureCheck(PAJ7620_Gesture_t initialGesture) {
 8000728:	4604      	mov	r4, r0
    // Delay ngắn để cho cử chỉ Z-axis (tiến/lùi) có thời gian hoàn thành
    HAL_Delay(10); // Có thể điều chỉnh delay này nếu cần
 800072a:	200a      	movs	r0, #10
    uint8_t data = 0;
 800072c:	f88d 3007 	strb.w	r3, [sp, #7]
    HAL_Delay(10); // Có thể điều chỉnh delay này nếu cần
 8000730:	f006 ff28 	bl	8007584 <HAL_Delay>

    PAJ7620_ReadRegister(PAJ7620_ADDR_GES_PS_DET_FLAG_0, &data); // Đọc lại thanh ghi cử chỉ
 8000734:	f10d 0107 	add.w	r1, sp, #7
 8000738:	2043      	movs	r0, #67	@ 0x43
 800073a:	f7ff ffe3 	bl	8000704 <PAJ7620_ReadRegister.isra.0>

    if (data == GES_FORWARD_FLAG) {
 800073e:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8000742:	2b10      	cmp	r3, #16
 8000744:	d106      	bne.n	8000754 <PAJ7620_ForwardBackwardGestureCheck+0x30>
        HAL_Delay(200); // Delay sau khi phát hiện để người dùng rút tay ra
 8000746:	20c8      	movs	r0, #200	@ 0xc8
 8000748:	f006 ff1c 	bl	8007584 <HAL_Delay>
        return GES_FORWARD;
 800074c:	2405      	movs	r4, #5
    } else if (data == GES_BACKWARD_FLAG) {
        HAL_Delay(200); // Delay sau khi phát hiện để người dùng rút tay ra
        return GES_BACKWARD;
    }
    return initialGesture;
}
 800074e:	4620      	mov	r0, r4
 8000750:	b002      	add	sp, #8
 8000752:	bd10      	pop	{r4, pc}
    } else if (data == GES_BACKWARD_FLAG) {
 8000754:	2b20      	cmp	r3, #32
 8000756:	d1fa      	bne.n	800074e <PAJ7620_ForwardBackwardGestureCheck+0x2a>
        HAL_Delay(200); // Delay sau khi phát hiện để người dùng rút tay ra
 8000758:	20c8      	movs	r0, #200	@ 0xc8
 800075a:	f006 ff13 	bl	8007584 <HAL_Delay>
        return GES_BACKWARD;
 800075e:	2406      	movs	r4, #6
 8000760:	e7f5      	b.n	800074e <PAJ7620_ForwardBackwardGestureCheck+0x2a>
	...

08000764 <PAJ7620_SetGestureMode>:
  * @brief Đặt cảm biến vào chế độ cử chỉ.
  * @param None
  * @retval None
  */
void PAJ7620_SetGestureMode(void) {
    PAJ7620_WriteRegisterArray(setGestureModeRegisterArray, SET_GES_MODE_REG_ARRAY_SIZE);
 8000764:	4801      	ldr	r0, [pc, #4]	@ (800076c <PAJ7620_SetGestureMode+0x8>)
 8000766:	211d      	movs	r1, #29
 8000768:	f7ff bfba 	b.w	80006e0 <PAJ7620_WriteRegisterArray>
 800076c:	08026348 	.word	0x08026348

08000770 <PAJ7620_Init>:
HAL_StatusTypeDef PAJ7620_Init(void) {
 8000770:	b513      	push	{r0, r1, r4, lr}
    HAL_Delay(1); // Chờ 700us trong thư viện gốc, HAL_Delay(1) là đủ cho 1ms. Cảm biến cần thời gian ổn định.
 8000772:	2001      	movs	r0, #1
 8000774:	f006 ff06 	bl	8007584 <HAL_Delay>
    PAJ7620_SelectRegisterBank(0);
 8000778:	2000      	movs	r0, #0
 800077a:	f7ff ffad 	bl	80006d8 <PAJ7620_SelectRegisterBank.isra.0>
    uint8_t data0 = 0, data1 = 0;
 800077e:	2400      	movs	r4, #0
    PAJ7620_SelectRegisterBank(0);
 8000780:	2000      	movs	r0, #0
 8000782:	f7ff ffa9 	bl	80006d8 <PAJ7620_SelectRegisterBank.isra.0>
    PAJ7620_SelectRegisterBank(0); // ID ở Bank 0
 8000786:	4620      	mov	r0, r4
    uint8_t data0 = 0, data1 = 0;
 8000788:	f88d 4006 	strb.w	r4, [sp, #6]
 800078c:	f88d 4007 	strb.w	r4, [sp, #7]
    PAJ7620_SelectRegisterBank(0); // ID ở Bank 0
 8000790:	f7ff ffa2 	bl	80006d8 <PAJ7620_SelectRegisterBank.isra.0>
    PAJ7620_ReadRegister(PAJ7620_ADDR_PART_ID_0, &data0);
 8000794:	f10d 0106 	add.w	r1, sp, #6
 8000798:	4620      	mov	r0, r4
 800079a:	f7ff ffb3 	bl	8000704 <PAJ7620_ReadRegister.isra.0>
    PAJ7620_ReadRegister(PAJ7620_ADDR_PART_ID_1, &data1);
 800079e:	f10d 0107 	add.w	r1, sp, #7
 80007a2:	2001      	movs	r0, #1
 80007a4:	f7ff ffae 	bl	8000704 <PAJ7620_ReadRegister.isra.0>
    if ((data0 != PAJ7620_PART_ID_LSB) || (data1 != PAJ7620_PART_ID_MSB)) {
 80007a8:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80007ac:	2b20      	cmp	r3, #32
 80007ae:	d10c      	bne.n	80007ca <PAJ7620_Init+0x5a>
 80007b0:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80007b4:	2b76      	cmp	r3, #118	@ 0x76
 80007b6:	d108      	bne.n	80007ca <PAJ7620_Init+0x5a>
    status = PAJ7620_WriteRegisterArray(initRegisterArray, INIT_REG_ARRAY_SIZE);
 80007b8:	4806      	ldr	r0, [pc, #24]	@ (80007d4 <PAJ7620_Init+0x64>)
 80007ba:	2137      	movs	r1, #55	@ 0x37
 80007bc:	f7ff ff90 	bl	80006e0 <PAJ7620_WriteRegisterArray>
    if (status != HAL_OK) return status;
 80007c0:	4604      	mov	r4, r0
 80007c2:	b918      	cbnz	r0, 80007cc <PAJ7620_Init+0x5c>
    PAJ7620_SetGestureMode();
 80007c4:	f7ff ffce 	bl	8000764 <PAJ7620_SetGestureMode>
    return HAL_OK;
 80007c8:	e000      	b.n	80007cc <PAJ7620_Init+0x5c>
        return HAL_ERROR; // Thiết bị không khớp
 80007ca:	2401      	movs	r4, #1
}
 80007cc:	4620      	mov	r0, r4
 80007ce:	b002      	add	sp, #8
 80007d0:	bd10      	pop	{r4, pc}
 80007d2:	bf00      	nop
 80007d4:	08026382 	.word	0x08026382

080007d8 <PAJ7620_ReadGesture>:
/**
  * @brief Đọc cử chỉ hiện tại từ cảm biến.
  * @param None
  * @retval PAJ7620_Gesture_t: Cử chỉ được phát hiện (ví dụ: GES_UP), hoặc GES_NONE nếu không có.
  */
PAJ7620_Gesture_t PAJ7620_ReadGesture(void) {
 80007d8:	b507      	push	{r0, r1, r2, lr}
    uint8_t data0 = 0, data1 = 0;
 80007da:	2300      	movs	r3, #0
    PAJ7620_Gesture_t result = GES_NONE;

    PAJ7620_ReadRegister(PAJ7620_ADDR_GES_PS_DET_FLAG_0, &data0); // Đọc thanh ghi cử chỉ chính
 80007dc:	f10d 0106 	add.w	r1, sp, #6
 80007e0:	2043      	movs	r0, #67	@ 0x43
    uint8_t data0 = 0, data1 = 0;
 80007e2:	f88d 3006 	strb.w	r3, [sp, #6]
 80007e6:	f88d 3007 	strb.w	r3, [sp, #7]
    PAJ7620_ReadRegister(PAJ7620_ADDR_GES_PS_DET_FLAG_0, &data0); // Đọc thanh ghi cử chỉ chính
 80007ea:	f7ff ff8b 	bl	8000704 <PAJ7620_ReadRegister.isra.0>

    switch (data0) {
 80007ee:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80007f2:	2b10      	cmp	r3, #16
 80007f4:	d02a      	beq.n	800084c <PAJ7620_ReadGesture+0x74>
 80007f6:	d80b      	bhi.n	8000810 <PAJ7620_ReadGesture+0x38>
 80007f8:	3b01      	subs	r3, #1
 80007fa:	b2da      	uxtb	r2, r3
 80007fc:	2a07      	cmp	r2, #7
 80007fe:	d80d      	bhi.n	800081c <PAJ7620_ReadGesture+0x44>
 8000800:	2b07      	cmp	r3, #7
 8000802:	d80b      	bhi.n	800081c <PAJ7620_ReadGesture+0x44>
 8000804:	e8df f003 	tbb	[pc, r3]
 8000808:	1c0a201e 	.word	0x1c0a201e
 800080c:	160a0a0a 	.word	0x160a0a0a
 8000810:	2b40      	cmp	r3, #64	@ 0x40
 8000812:	d025      	beq.n	8000860 <PAJ7620_ReadGesture+0x88>
 8000814:	2b80      	cmp	r3, #128	@ 0x80
 8000816:	d025      	beq.n	8000864 <PAJ7620_ReadGesture+0x8c>
 8000818:	2b20      	cmp	r3, #32
 800081a:	d01c      	beq.n	8000856 <PAJ7620_ReadGesture+0x7e>
        case GES_ANTI_CLOCKWISE_FLAG:
            result = GES_ANTICLOCKWISE;
            break;
        default:
            // Kiểm tra cử chỉ WAVE (nằm ở thanh ghi khác)
            PAJ7620_ReadRegister(PAJ7620_ADDR_GES_PS_DET_FLAG_1, &data1);
 800081c:	2044      	movs	r0, #68	@ 0x44
 800081e:	f10d 0107 	add.w	r1, sp, #7
 8000822:	f7ff ff6f 	bl	8000704 <PAJ7620_ReadRegister.isra.0>
            if (data1 == GES_WAVE_FLAG) {
 8000826:	f89d 3007 	ldrb.w	r3, [sp, #7]
    PAJ7620_Gesture_t result = GES_NONE;
 800082a:	2b01      	cmp	r3, #1
 800082c:	bf0c      	ite	eq
 800082e:	2009      	moveq	r0, #9
 8000830:	2000      	movne	r0, #0
 8000832:	e002      	b.n	800083a <PAJ7620_ReadGesture+0x62>
            result = PAJ7620_ForwardBackwardGestureCheck(GES_RIGHT);
 8000834:	2004      	movs	r0, #4
            result = PAJ7620_ForwardBackwardGestureCheck(GES_LEFT);
 8000836:	f7ff ff75 	bl	8000724 <PAJ7620_ForwardBackwardGestureCheck>
                result = GES_WAVE;
            }
            break;
    }
    return result;
}
 800083a:	b003      	add	sp, #12
 800083c:	f85d fb04 	ldr.w	pc, [sp], #4
            result = PAJ7620_ForwardBackwardGestureCheck(GES_LEFT);
 8000840:	2003      	movs	r0, #3
 8000842:	e7f8      	b.n	8000836 <PAJ7620_ReadGesture+0x5e>
            result = PAJ7620_ForwardBackwardGestureCheck(GES_UP);
 8000844:	2001      	movs	r0, #1
 8000846:	e7f6      	b.n	8000836 <PAJ7620_ReadGesture+0x5e>
            result = PAJ7620_ForwardBackwardGestureCheck(GES_DOWN);
 8000848:	2002      	movs	r0, #2
 800084a:	e7f4      	b.n	8000836 <PAJ7620_ReadGesture+0x5e>
            HAL_Delay(200); // Delay sau khi phát hiện
 800084c:	20c8      	movs	r0, #200	@ 0xc8
 800084e:	f006 fe99 	bl	8007584 <HAL_Delay>
            result = GES_FORWARD;
 8000852:	2005      	movs	r0, #5
            break;
 8000854:	e7f1      	b.n	800083a <PAJ7620_ReadGesture+0x62>
            HAL_Delay(200); // Delay sau khi phát hiện
 8000856:	20c8      	movs	r0, #200	@ 0xc8
 8000858:	f006 fe94 	bl	8007584 <HAL_Delay>
            result = GES_BACKWARD;
 800085c:	2006      	movs	r0, #6
            break;
 800085e:	e7ec      	b.n	800083a <PAJ7620_ReadGesture+0x62>
            result = GES_CLOCKWISE;
 8000860:	2007      	movs	r0, #7
 8000862:	e7ea      	b.n	800083a <PAJ7620_ReadGesture+0x62>
    switch (data0) {
 8000864:	2008      	movs	r0, #8
 8000866:	e7e8      	b.n	800083a <PAJ7620_ReadGesture+0x62>

08000868 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8000868:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800086a:	4b06      	ldr	r3, [pc, #24]	@ (8000884 <SPI5_Write+0x1c>)
{
 800086c:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8000870:	681b      	ldr	r3, [r3, #0]
 8000872:	4805      	ldr	r0, [pc, #20]	@ (8000888 <SPI5_Write+0x20>)
 8000874:	2201      	movs	r2, #1
 8000876:	f10d 0106 	add.w	r1, sp, #6
 800087a:	f008 fc85 	bl	8009188 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800087e:	b003      	add	sp, #12
 8000880:	f85d fb04 	ldr.w	pc, [sp], #4
 8000884:	20000004 	.word	0x20000004
 8000888:	200003f4 	.word	0x200003f4

0800088c <StartTask03>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask03 */
void StartTask03(void *argument)
{
 800088c:	b573      	push	{r0, r1, r4, r5, r6, lr}
  /* USER CODE BEGIN StartTask03 */
  /* Infinite loop */
  for(;;)
  {
    uint8_t msg = 'O';
    if(HAL_GPIO_ReadPin(GPIOG, GPIO_PIN_2) == GPIO_PIN_SET) {
 800088e:	4d28      	ldr	r5, [pc, #160]	@ (8000930 <StartTask03+0xa4>)
    if(HAL_GPIO_ReadPin(GPIOG, GPIO_PIN_3) == GPIO_PIN_SET) {
      msg = 'R';
    }
    
    // Check PB12 - Down
    if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET) {
 8000890:	4e28      	ldr	r6, [pc, #160]	@ (8000934 <StartTask03+0xa8>)
    // Check PB13 - Rotate
    if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_13) == GPIO_PIN_SET) {
      msg = 'C';
    }

    uint32_t count = osMessageQueueGetCount(Queue1Handle);
 8000892:	4c29      	ldr	r4, [pc, #164]	@ (8000938 <StartTask03+0xac>)
    uint8_t msg = 'O';
 8000894:	234f      	movs	r3, #79	@ 0x4f
    if(HAL_GPIO_ReadPin(GPIOG, GPIO_PIN_2) == GPIO_PIN_SET) {
 8000896:	2104      	movs	r1, #4
 8000898:	4628      	mov	r0, r5
    uint8_t msg = 'O';
 800089a:	f88d 3007 	strb.w	r3, [sp, #7]
    if(HAL_GPIO_ReadPin(GPIOG, GPIO_PIN_2) == GPIO_PIN_SET) {
 800089e:	f007 f8c5 	bl	8007a2c <HAL_GPIO_ReadPin>
 80008a2:	2801      	cmp	r0, #1
      msg = 'L';
 80008a4:	bf08      	it	eq
 80008a6:	234c      	moveq	r3, #76	@ 0x4c
    if(HAL_GPIO_ReadPin(GPIOG, GPIO_PIN_3) == GPIO_PIN_SET) {
 80008a8:	f04f 0108 	mov.w	r1, #8
 80008ac:	4628      	mov	r0, r5
      msg = 'L';
 80008ae:	bf08      	it	eq
 80008b0:	f88d 3007 	strbeq.w	r3, [sp, #7]
    if(HAL_GPIO_ReadPin(GPIOG, GPIO_PIN_3) == GPIO_PIN_SET) {
 80008b4:	f007 f8ba 	bl	8007a2c <HAL_GPIO_ReadPin>
 80008b8:	2801      	cmp	r0, #1
      msg = 'R';
 80008ba:	bf08      	it	eq
 80008bc:	2352      	moveq	r3, #82	@ 0x52
    if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET) {
 80008be:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80008c2:	4630      	mov	r0, r6
      msg = 'R';
 80008c4:	bf08      	it	eq
 80008c6:	f88d 3007 	strbeq.w	r3, [sp, #7]
    if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET) {
 80008ca:	f007 f8af 	bl	8007a2c <HAL_GPIO_ReadPin>
 80008ce:	2801      	cmp	r0, #1
      msg = 'D';
 80008d0:	bf08      	it	eq
 80008d2:	2344      	moveq	r3, #68	@ 0x44
    if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_13) == GPIO_PIN_SET) {
 80008d4:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80008d8:	4630      	mov	r0, r6
      msg = 'D';
 80008da:	bf08      	it	eq
 80008dc:	f88d 3007 	strbeq.w	r3, [sp, #7]
    if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_13) == GPIO_PIN_SET) {
 80008e0:	f007 f8a4 	bl	8007a2c <HAL_GPIO_ReadPin>
 80008e4:	2801      	cmp	r0, #1
      msg = 'C';
 80008e6:	bf08      	it	eq
 80008e8:	2343      	moveq	r3, #67	@ 0x43
    uint32_t count = osMessageQueueGetCount(Queue1Handle);
 80008ea:	6820      	ldr	r0, [r4, #0]
      msg = 'C';
 80008ec:	bf08      	it	eq
 80008ee:	f88d 3007 	strbeq.w	r3, [sp, #7]
    uint32_t count = osMessageQueueGetCount(Queue1Handle);
 80008f2:	f009 fa89 	bl	8009e08 <osMessageQueueGetCount>
    if (count < 1)
 80008f6:	4602      	mov	r2, r0
 80008f8:	b9a8      	cbnz	r0, 8000926 <StartTask03+0x9a>
    {
      if(msg == 'L' || msg == 'R' || msg == 'D' || msg == 'C') {
 80008fa:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80008fe:	3b43      	subs	r3, #67	@ 0x43
 8000900:	b2db      	uxtb	r3, r3
 8000902:	2b0f      	cmp	r3, #15
 8000904:	d80f      	bhi.n	8000926 <StartTask03+0x9a>
 8000906:	f248 2103 	movw	r1, #33283	@ 0x8203
 800090a:	fa21 f303 	lsr.w	r3, r1, r3
 800090e:	07db      	lsls	r3, r3, #31
 8000910:	d509      	bpl.n	8000926 <StartTask03+0x9a>
        osMessageQueuePut(Queue1Handle, &msg, 0, 10);
 8000912:	6820      	ldr	r0, [r4, #0]
 8000914:	230a      	movs	r3, #10
 8000916:	f10d 0107 	add.w	r1, sp, #7
 800091a:	f009 fa14 	bl	8009d46 <osMessageQueuePut>
        osDelay(400);
 800091e:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 8000922:	f009 f921 	bl	8009b68 <osDelay>
      }
    }
    osDelay(10);
 8000926:	200a      	movs	r0, #10
 8000928:	f009 f91e 	bl	8009b68 <osDelay>
  {
 800092c:	e7b2      	b.n	8000894 <StartTask03+0x8>
 800092e:	bf00      	nop
 8000930:	40021800 	.word	0x40021800
 8000934:	40020400 	.word	0x40020400
 8000938:	200003a8 	.word	0x200003a8

0800093c <StartTask04>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask04 */
void StartTask04(void *argument)
{
 800093c:	b537      	push	{r0, r1, r2, r4, r5, lr}
        case GES_ANTICLOCKWISE:   	data = 'A'; break;
        default:                  	data = 'O'; break;
      }
    }
    if(data == 'R' || data == 'L' || data == 'D' || data == 'C') {
      uint32_t count = osMessageQueueGetCount(Queue1Handle);
 800093e:	4c20      	ldr	r4, [pc, #128]	@ (80009c0 <StartTask04+0x84>)
    uint8_t data = 'O';
 8000940:	254f      	movs	r5, #79	@ 0x4f
    currentGesture = PAJ7620_ReadGesture();
 8000942:	f7ff ff49 	bl	80007d8 <PAJ7620_ReadGesture>
    uint8_t data = 'O';
 8000946:	f88d 5007 	strb.w	r5, [sp, #7]
    if (currentGesture != GES_NONE) {
 800094a:	b158      	cbz	r0, 8000964 <StartTask04+0x28>
      switch (currentGesture) {
 800094c:	3801      	subs	r0, #1
 800094e:	2807      	cmp	r0, #7
 8000950:	d808      	bhi.n	8000964 <StartTask04+0x28>
 8000952:	e8df f000 	tbb	[pc, r0]
 8000956:	2a28      	.short	0x2a28
 8000958:	2e2c0426 	.word	0x2e2c0426
 800095c:	3230      	.short	0x3230
        case GES_RIGHT:        		data = 'R'; break;
 800095e:	2352      	movs	r3, #82	@ 0x52
        case GES_ANTICLOCKWISE:   	data = 'A'; break;
 8000960:	f88d 3007 	strb.w	r3, [sp, #7]
    if(data == 'R' || data == 'L' || data == 'D' || data == 'C') {
 8000964:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8000968:	3b43      	subs	r3, #67	@ 0x43
 800096a:	b2db      	uxtb	r3, r3
 800096c:	2b0f      	cmp	r3, #15
 800096e:	d814      	bhi.n	800099a <StartTask04+0x5e>
 8000970:	f248 2203 	movw	r2, #33283	@ 0x8203
 8000974:	fa22 f303 	lsr.w	r3, r2, r3
 8000978:	07db      	lsls	r3, r3, #31
 800097a:	d50e      	bpl.n	800099a <StartTask04+0x5e>
      uint32_t count = osMessageQueueGetCount(Queue1Handle);
 800097c:	6820      	ldr	r0, [r4, #0]
 800097e:	f009 fa43 	bl	8009e08 <osMessageQueueGetCount>
      if (count < 1)
 8000982:	4602      	mov	r2, r0
 8000984:	b948      	cbnz	r0, 800099a <StartTask04+0x5e>
      {
        osMessageQueuePut(Queue1Handle, &data, 0, 10);
 8000986:	6820      	ldr	r0, [r4, #0]
 8000988:	230a      	movs	r3, #10
 800098a:	f10d 0107 	add.w	r1, sp, #7
 800098e:	f009 f9da 	bl	8009d46 <osMessageQueuePut>
        osDelay(400);
 8000992:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 8000996:	f009 f8e7 	bl	8009b68 <osDelay>
      }
    }
    osDelay(10);
 800099a:	200a      	movs	r0, #10
 800099c:	f009 f8e4 	bl	8009b68 <osDelay>
  {
 80009a0:	e7cf      	b.n	8000942 <StartTask04+0x6>
        case GES_LEFT:         		data = 'L'; break;
 80009a2:	234c      	movs	r3, #76	@ 0x4c
 80009a4:	e7dc      	b.n	8000960 <StartTask04+0x24>
        case GES_UP:           		data = 'U'; break;
 80009a6:	2355      	movs	r3, #85	@ 0x55
 80009a8:	e7da      	b.n	8000960 <StartTask04+0x24>
        case GES_DOWN:         		data = 'D'; break;
 80009aa:	2344      	movs	r3, #68	@ 0x44
 80009ac:	e7d8      	b.n	8000960 <StartTask04+0x24>
        case GES_FORWARD:      		data = 'F'; break;
 80009ae:	2346      	movs	r3, #70	@ 0x46
 80009b0:	e7d6      	b.n	8000960 <StartTask04+0x24>
        case GES_BACKWARD:     		data = 'B'; break;
 80009b2:	2342      	movs	r3, #66	@ 0x42
 80009b4:	e7d4      	b.n	8000960 <StartTask04+0x24>
        case GES_CLOCKWISE:       	data = 'C'; break;
 80009b6:	2343      	movs	r3, #67	@ 0x43
 80009b8:	e7d2      	b.n	8000960 <StartTask04+0x24>
        case GES_ANTICLOCKWISE:   	data = 'A'; break;
 80009ba:	2341      	movs	r3, #65	@ 0x41
 80009bc:	e7d0      	b.n	8000960 <StartTask04+0x24>
 80009be:	bf00      	nop
 80009c0:	200003a8 	.word	0x200003a8

080009c4 <SystemClock_Config>:
{
 80009c4:	b530      	push	{r4, r5, lr}
 80009c6:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80009c8:	2210      	movs	r2, #16
 80009ca:	2100      	movs	r1, #0
 80009cc:	a80a      	add	r0, sp, #40	@ 0x28
 80009ce:	f024 fe78 	bl	80256c2 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80009d2:	2214      	movs	r2, #20
 80009d4:	2100      	movs	r1, #0
 80009d6:	a803      	add	r0, sp, #12
 80009d8:	f024 fe73 	bl	80256c2 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 80009dc:	2400      	movs	r4, #0
 80009de:	4b1e      	ldr	r3, [pc, #120]	@ (8000a58 <SystemClock_Config+0x94>)
 80009e0:	9401      	str	r4, [sp, #4]
 80009e2:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80009e4:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80009e8:	641a      	str	r2, [r3, #64]	@ 0x40
 80009ea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80009ec:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80009f0:	9301      	str	r3, [sp, #4]
 80009f2:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80009f4:	4b19      	ldr	r3, [pc, #100]	@ (8000a5c <SystemClock_Config+0x98>)
 80009f6:	9402      	str	r4, [sp, #8]
 80009f8:	681a      	ldr	r2, [r3, #0]
 80009fa:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 80009fe:	601a      	str	r2, [r3, #0]
 8000a00:	681b      	ldr	r3, [r3, #0]
 8000a02:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000a06:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000a08:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000a0a:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000a0c:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000a10:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000a14:	2502      	movs	r5, #2
 8000a16:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 8000a1a:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000a1c:	e9cd 530e 	strd	r5, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 360;
 8000a20:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 8000a24:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000a28:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8000a2a:	2304      	movs	r3, #4
 8000a2c:	9313      	str	r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000a2e:	9512      	str	r5, [sp, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000a30:	f007 fe62 	bl	80086f8 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8000a34:	f007 fe26 	bl	8008684 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000a38:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000a3a:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000a3e:	f44f 50a0 	mov.w	r0, #5120	@ 0x1400
 8000a42:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000a46:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000a4a:	2105      	movs	r1, #5
 8000a4c:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000a4e:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000a50:	f008 f82e 	bl	8008ab0 <HAL_RCC_ClockConfig>
}
 8000a54:	b015      	add	sp, #84	@ 0x54
 8000a56:	bd30      	pop	{r4, r5, pc}
 8000a58:	40023800 	.word	0x40023800
 8000a5c:	40007000 	.word	0x40007000

08000a60 <main>:
{
 8000a60:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8000a64:	b09b      	sub	sp, #108	@ 0x6c
  HAL_Init();
 8000a66:	f006 fd61 	bl	800752c <HAL_Init>
  SystemClock_Config();
 8000a6a:	f7ff ffab 	bl	80009c4 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000a6e:	2214      	movs	r2, #20
 8000a70:	2100      	movs	r1, #0
 8000a72:	a80d      	add	r0, sp, #52	@ 0x34
 8000a74:	f024 fe25 	bl	80256c2 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000a78:	2400      	movs	r4, #0
 8000a7a:	4bc8      	ldr	r3, [pc, #800]	@ (8000d9c <main+0x33c>)
 8000a7c:	9400      	str	r4, [sp, #0]
 8000a7e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8000a80:	48c7      	ldr	r0, [pc, #796]	@ (8000da0 <main+0x340>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000a82:	f8df 835c 	ldr.w	r8, [pc, #860]	@ 8000de0 <main+0x380>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000a86:	f042 0210 	orr.w	r2, r2, #16
 8000a8a:	631a      	str	r2, [r3, #48]	@ 0x30
 8000a8c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000a8e:	f002 0210 	and.w	r2, r2, #16
 8000a92:	9200      	str	r2, [sp, #0]
 8000a94:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a96:	9401      	str	r4, [sp, #4]
 8000a98:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000a9a:	f042 0220 	orr.w	r2, r2, #32
 8000a9e:	631a      	str	r2, [r3, #48]	@ 0x30
 8000aa0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000aa2:	f002 0220 	and.w	r2, r2, #32
 8000aa6:	9201      	str	r2, [sp, #4]
 8000aa8:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000aaa:	9402      	str	r4, [sp, #8]
 8000aac:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000aae:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8000ab2:	631a      	str	r2, [r3, #48]	@ 0x30
 8000ab4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000ab6:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 8000aba:	9202      	str	r2, [sp, #8]
 8000abc:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000abe:	9403      	str	r4, [sp, #12]
 8000ac0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000ac2:	f042 0204 	orr.w	r2, r2, #4
 8000ac6:	631a      	str	r2, [r3, #48]	@ 0x30
 8000ac8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000aca:	f002 0204 	and.w	r2, r2, #4
 8000ace:	9203      	str	r2, [sp, #12]
 8000ad0:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000ad2:	9404      	str	r4, [sp, #16]
 8000ad4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000ad6:	f042 0201 	orr.w	r2, r2, #1
 8000ada:	631a      	str	r2, [r3, #48]	@ 0x30
 8000adc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000ade:	f002 0201 	and.w	r2, r2, #1
 8000ae2:	9204      	str	r2, [sp, #16]
 8000ae4:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000ae6:	9405      	str	r4, [sp, #20]
 8000ae8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000aea:	f042 0202 	orr.w	r2, r2, #2
 8000aee:	631a      	str	r2, [r3, #48]	@ 0x30
 8000af0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000af2:	f002 0202 	and.w	r2, r2, #2
 8000af6:	9205      	str	r2, [sp, #20]
 8000af8:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000afa:	9406      	str	r4, [sp, #24]
 8000afc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000afe:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8000b02:	631a      	str	r2, [r3, #48]	@ 0x30
 8000b04:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000b06:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8000b0a:	9206      	str	r2, [sp, #24]
 8000b0c:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000b0e:	9407      	str	r4, [sp, #28]
 8000b10:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000b12:	f042 0208 	orr.w	r2, r2, #8
 8000b16:	631a      	str	r2, [r3, #48]	@ 0x30
 8000b18:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b1a:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8000b1e:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000b20:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8000b22:	213c      	movs	r1, #60	@ 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000b24:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8000b26:	f006 ff87 	bl	8007a38 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8000b2a:	489e      	ldr	r0, [pc, #632]	@ (8000da4 <main+0x344>)
 8000b2c:	2201      	movs	r2, #1
 8000b2e:	2102      	movs	r1, #2
 8000b30:	f006 ff82 	bl	8007a38 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8000b34:	4622      	mov	r2, r4
 8000b36:	489b      	ldr	r0, [pc, #620]	@ (8000da4 <main+0x344>)
 8000b38:	2104      	movs	r1, #4
 8000b3a:	f006 ff7d 	bl	8007a38 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8000b3e:	4622      	mov	r2, r4
 8000b40:	4899      	ldr	r0, [pc, #612]	@ (8000da8 <main+0x348>)
 8000b42:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 8000b46:	f006 ff77 	bl	8007a38 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13|GPIO_PIN_14, GPIO_PIN_RESET);
 8000b4a:	4622      	mov	r2, r4
 8000b4c:	4897      	ldr	r0, [pc, #604]	@ (8000dac <main+0x34c>)
 8000b4e:	f44f 41c0 	mov.w	r1, #24576	@ 0x6000
 8000b52:	f006 ff71 	bl	8007a38 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000b56:	2601      	movs	r6, #1
 8000b58:	233c      	movs	r3, #60	@ 0x3c
 8000b5a:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000b5e:	4890      	ldr	r0, [pc, #576]	@ (8000da0 <main+0x340>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b60:	940f      	str	r4, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000b62:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000b64:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = SPI5_NCS_Pin;
 8000b66:	2702      	movs	r7, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000b68:	9310      	str	r3, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000b6a:	f006 fe7b 	bl	8007864 <HAL_GPIO_Init>
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 8000b6e:	488d      	ldr	r0, [pc, #564]	@ (8000da4 <main+0x344>)
 8000b70:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000b72:	e9cd 760d 	strd	r7, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000b76:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 8000b7a:	f006 fe73 	bl	8007864 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000b7e:	2304      	movs	r3, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000b80:	4888      	ldr	r0, [pc, #544]	@ (8000da4 <main+0x344>)
 8000b82:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000b84:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000b88:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000b8c:	f44f 5540 	mov.w	r5, #12288	@ 0x3000
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000b90:	f006 fe68 	bl	8007864 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000b94:	4886      	ldr	r0, [pc, #536]	@ (8000db0 <main+0x350>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b96:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000b98:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000b9a:	e9cd 540d 	strd	r5, r4, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000b9e:	f006 fe61 	bl	8007864 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000ba2:	4881      	ldr	r0, [pc, #516]	@ (8000da8 <main+0x348>)
 8000ba4:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ba6:	e9cd 560d 	strd	r5, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000baa:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000bae:	f006 fe59 	bl	8007864 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8000bb2:	230c      	movs	r3, #12
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000bb4:	487d      	ldr	r0, [pc, #500]	@ (8000dac <main+0x34c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000bb6:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000bb8:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000bba:	e9cd 340d 	strd	r3, r4, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000bbe:	f006 fe51 	bl	8007864 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14;
 8000bc2:	f44f 43c0 	mov.w	r3, #24576	@ 0x6000
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000bc6:	4879      	ldr	r0, [pc, #484]	@ (8000dac <main+0x34c>)
  hi2c3.Instance = I2C3;
 8000bc8:	4d7a      	ldr	r5, [pc, #488]	@ (8000db4 <main+0x354>)
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000bca:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000bcc:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000bd0:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000bd4:	f006 fe46 	bl	8007864 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000bd8:	a90d      	add	r1, sp, #52	@ 0x34
 8000bda:	4877      	ldr	r0, [pc, #476]	@ (8000db8 <main+0x358>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000bdc:	940f      	str	r4, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000bde:	e9cd 640d 	strd	r6, r4, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000be2:	f006 fe3f 	bl	8007864 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8000be6:	4875      	ldr	r0, [pc, #468]	@ (8000dbc <main+0x35c>)
 8000be8:	4b75      	ldr	r3, [pc, #468]	@ (8000dc0 <main+0x360>)
 8000bea:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000bec:	f006 fd30 	bl	8007650 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8000bf0:	f8df e1f0 	ldr.w	lr, [pc, #496]	@ 8000de4 <main+0x384>
 8000bf4:	4b73      	ldr	r3, [pc, #460]	@ (8000dc4 <main+0x364>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000bf6:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8000bf8:	e9c5 e300 	strd	lr, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000bfc:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000bfe:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000c02:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8000c06:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000c0a:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000c0e:	f007 f921 	bl	8007e54 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8000c12:	2110      	movs	r1, #16
 8000c14:	4628      	mov	r0, r5
 8000c16:	f007 fb65 	bl	80082e4 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000c1a:	4621      	mov	r1, r4
 8000c1c:	4628      	mov	r0, r5
  hspi5.Instance = SPI5;
 8000c1e:	4d6a      	ldr	r5, [pc, #424]	@ (8000dc8 <main+0x368>)
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000c20:	f007 fb7f 	bl	8008322 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000c24:	f44f 7382 	mov.w	r3, #260	@ 0x104
 8000c28:	e9c5 8300 	strd	r8, r3, [r5]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8000c2c:	f44f 7900 	mov.w	r9, #512	@ 0x200
 8000c30:	2318      	movs	r3, #24
 8000c32:	e9c5 9306 	strd	r9, r3, [r5, #24]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8000c36:	4628      	mov	r0, r5
  hspi5.Init.CRCPolynomial = 10;
 8000c38:	230a      	movs	r3, #10
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8000c3a:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000c3e:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8000c42:	e9c5 4408 	strd	r4, r4, [r5, #32]
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000c46:	62ac      	str	r4, [r5, #40]	@ 0x28
  hspi5.Init.CRCPolynomial = 10;
 8000c48:	62eb      	str	r3, [r5, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8000c4a:	f008 fa41 	bl	80090d0 <HAL_SPI_Init>
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 8000c4e:	238f      	movs	r3, #143	@ 0x8f
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 8000c50:	4622      	mov	r2, r4
 8000c52:	4639      	mov	r1, r7
 8000c54:	4853      	ldr	r0, [pc, #332]	@ (8000da4 <main+0x344>)
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 8000c56:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
  uint8_t pdata = 0;
 8000c5a:	f88d 4034 	strb.w	r4, [sp, #52]	@ 0x34
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 8000c5e:	f006 feeb 	bl	8007a38 <HAL_GPIO_WritePin>
  HAL_SPI_Transmit(&hspi5, &READ_ID_CMD, 1, 1000);
 8000c62:	4632      	mov	r2, r6
 8000c64:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000c68:	a909      	add	r1, sp, #36	@ 0x24
 8000c6a:	4628      	mov	r0, r5
 8000c6c:	f008 fa8c 	bl	8009188 <HAL_SPI_Transmit>
  HAL_SPI_Receive(&hspi5, &pdata, 1, 1000);
 8000c70:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000c74:	4632      	mov	r2, r6
 8000c76:	a90d      	add	r1, sp, #52	@ 0x34
 8000c78:	4628      	mov	r0, r5
 8000c7a:	f008 fc31 	bl	80094e0 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8000c7e:	4632      	mov	r2, r6
 8000c80:	4639      	mov	r1, r7
 8000c82:	4848      	ldr	r0, [pc, #288]	@ (8000da4 <main+0x344>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000c84:	4d51      	ldr	r5, [pc, #324]	@ (8000dcc <main+0x36c>)
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8000c86:	f006 fed7 	bl	8007a38 <HAL_GPIO_WritePin>
  if (pdata == 0xD3) // 0b11010011
 8000c8a:	f89d 3034 	ldrb.w	r3, [sp, #52]	@ 0x34
 8000c8e:	2bd3      	cmp	r3, #211	@ 0xd3
    isRevD = 1;
 8000c90:	bf04      	itt	eq
 8000c92:	4b4f      	ldreq	r3, [pc, #316]	@ (8000dd0 <main+0x370>)
 8000c94:	701e      	strbeq	r6, [r3, #0]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8000c96:	4b4f      	ldr	r3, [pc, #316]	@ (8000dd4 <main+0x374>)
 8000c98:	2601      	movs	r6, #1
 8000c9a:	e9c5 3600 	strd	r3, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8000c9e:	2210      	movs	r2, #16
 8000ca0:	2340      	movs	r3, #64	@ 0x40
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8000ca2:	2400      	movs	r4, #0
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8000ca4:	e9c5 2304 	strd	r2, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000ca8:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000cac:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8000cb0:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000cb4:	f04f 0902 	mov.w	r9, #2
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8000cb8:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8000cbc:	f04f 0a04 	mov.w	sl, #4
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000cc0:	2307      	movs	r3, #7
  SdramTiming.WriteRecoveryTime = 3;
 8000cc2:	f04f 0b03 	mov.w	fp, #3
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000cc6:	a90d      	add	r1, sp, #52	@ 0x34
 8000cc8:	4628      	mov	r0, r5
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000cca:	f44f 5800 	mov.w	r8, #8192	@ 0x2000
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000cce:	e9cd 930d 	strd	r9, r3, [sp, #52]	@ 0x34
  SdramTiming.RowCycleDelay = 7;
 8000cd2:	e9cd a30f 	strd	sl, r3, [sp, #60]	@ 0x3c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000cd6:	2708      	movs	r7, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8000cd8:	e9c5 4a02 	strd	r4, sl, [r5, #8]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000cdc:	f8c5 8028 	str.w	r8, [r5, #40]	@ 0x28
  SdramTiming.RPDelay = 2;
 8000ce0:	e9cd b911 	strd	fp, r9, [sp, #68]	@ 0x44
  SdramTiming.RCDDelay = 2;
 8000ce4:	f8cd 904c 	str.w	r9, [sp, #76]	@ 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000ce8:	f008 f8d6 	bl	8008e98 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000cec:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000cf0:	a909      	add	r1, sp, #36	@ 0x24
 8000cf2:	4628      	mov	r0, r5
 __IO uint32_t tmpmrd =0;
 8000cf4:	9408      	str	r4, [sp, #32]
  Command->ModeRegisterDefinition  = 0;
 8000cf6:	940c      	str	r4, [sp, #48]	@ 0x30
  Command->AutoRefreshNumber       = 1;
 8000cf8:	e9cd 760a 	strd	r7, r6, [sp, #40]	@ 0x28
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8000cfc:	9609      	str	r6, [sp, #36]	@ 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000cfe:	f008 f8eb 	bl	8008ed8 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8000d02:	4630      	mov	r0, r6
 8000d04:	f006 fc3e 	bl	8007584 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000d08:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000d0c:	a909      	add	r1, sp, #36	@ 0x24
 8000d0e:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 8000d10:	e9cd 640b 	strd	r6, r4, [sp, #44]	@ 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000d14:	e9cd 9709 	strd	r9, r7, [sp, #36]	@ 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000d18:	f008 f8de 	bl	8008ed8 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000d1c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000d20:	a909      	add	r1, sp, #36	@ 0x24
 8000d22:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 8000d24:	e9cd a40b 	strd	sl, r4, [sp, #44]	@ 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000d28:	e9cd b709 	strd	fp, r7, [sp, #36]	@ 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000d2c:	f008 f8d4 	bl	8008ed8 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8000d30:	f44f 730c 	mov.w	r3, #560	@ 0x230
 8000d34:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8000d36:	9b08      	ldr	r3, [sp, #32]
 8000d38:	930c      	str	r3, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000d3a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000d3e:	a909      	add	r1, sp, #36	@ 0x24
 8000d40:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000d42:	e9cd a709 	strd	sl, r7, [sp, #36]	@ 0x24
  Command->AutoRefreshNumber       = 1;
 8000d46:	960b      	str	r6, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000d48:	f008 f8c6 	bl	8008ed8 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8000d4c:	f240 516a 	movw	r1, #1386	@ 0x56a
 8000d50:	4628      	mov	r0, r5
 8000d52:	f008 f8df 	bl	8008f14 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000d56:	2234      	movs	r2, #52	@ 0x34
 8000d58:	4621      	mov	r1, r4
 8000d5a:	eb0d 0002 	add.w	r0, sp, r2
 8000d5e:	f024 fcb0 	bl	80256c2 <memset>
  hltdc.Instance = LTDC;
 8000d62:	4d1d      	ldr	r5, [pc, #116]	@ (8000dd8 <main+0x378>)
 8000d64:	4b1d      	ldr	r3, [pc, #116]	@ (8000ddc <main+0x37c>)
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000d66:	612c      	str	r4, [r5, #16]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8000d68:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 8000d6c:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8000d6e:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8000d72:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 8000d74:	e9c5 3b07 	strd	r3, fp, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8000d78:	f240 110d 	movw	r1, #269	@ 0x10d
 8000d7c:	f240 1343 	movw	r3, #323	@ 0x143
 8000d80:	e9c5 1309 	strd	r1, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 327;
 8000d84:	f240 1017 	movw	r0, #279	@ 0x117
 8000d88:	f240 1347 	movw	r3, #327	@ 0x147
 8000d8c:	e9c5 030b 	strd	r0, r3, [r5, #44]	@ 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000d90:	4628      	mov	r0, r5
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8000d92:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.Backcolor.Blue = 0;
 8000d96:	86ac      	strh	r4, [r5, #52]	@ 0x34
 8000d98:	e026      	b.n	8000de8 <main+0x388>
 8000d9a:	bf00      	nop
 8000d9c:	40023800 	.word	0x40023800
 8000da0:	40021000 	.word	0x40021000
 8000da4:	40020800 	.word	0x40020800
 8000da8:	40020c00 	.word	0x40020c00
 8000dac:	40021800 	.word	0x40021800
 8000db0:	40020400 	.word	0x40020400
 8000db4:	200004f4 	.word	0x200004f4
 8000db8:	40020000 	.word	0x40020000
 8000dbc:	20000588 	.word	0x20000588
 8000dc0:	40023000 	.word	0x40023000
 8000dc4:	000186a0 	.word	0x000186a0
 8000dc8:	200003f4 	.word	0x200003f4
 8000dcc:	200003c0 	.word	0x200003c0
 8000dd0:	200003ac 	.word	0x200003ac
 8000dd4:	a0000140 	.word	0xa0000140
 8000dd8:	2000044c 	.word	0x2000044c
 8000ddc:	40016800 	.word	0x40016800
 8000de0:	40015000 	.word	0x40015000
 8000de4:	40005c00 	.word	0x40005c00
  hltdc.Init.Backcolor.Red = 0;
 8000de8:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000dec:	f007 fb34 	bl	8008458 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8000df0:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000df2:	f44f 6c80 	mov.w	ip, #1024	@ 0x400
  pLayerCfg.Alpha0 = 0;
 8000df6:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.WindowX1 = 240;
 8000dfa:	22f0      	movs	r2, #240	@ 0xf0
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000dfc:	2105      	movs	r1, #5
 8000dfe:	e9cd c114 	strd	ip, r1, [sp, #80]	@ 0x50
  pLayerCfg.WindowY1 = 320;
 8000e02:	f44f 73a0 	mov.w	r3, #320	@ 0x140
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000e06:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.WindowY0 = 0;
 8000e08:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  pLayerCfg.ImageWidth = 240;
 8000e0c:	e9cd 4216 	strd	r4, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000e10:	4628      	mov	r0, r5
 8000e12:	4622      	mov	r2, r4
  LcdDrv = &ili9341_drv;
 8000e14:	4d32      	ldr	r5, [pc, #200]	@ (8000ee0 <main+0x480>)
  pLayerCfg.WindowX0 = 0;
 8000e16:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000e18:	e9cd 3910 	strd	r3, r9, [sp, #64]	@ 0x40
  pLayerCfg.ImageHeight = 320;
 8000e1c:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8000e1e:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 8000e22:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000e26:	f007 fbe2 	bl	80085ee <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8000e2a:	4b2e      	ldr	r3, [pc, #184]	@ (8000ee4 <main+0x484>)
 8000e2c:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8000e2e:	681b      	ldr	r3, [r3, #0]
 8000e30:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8000e32:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8000e34:	4d2c      	ldr	r5, [pc, #176]	@ (8000ee8 <main+0x488>)
  LcdDrv->DisplayOff();
 8000e36:	68db      	ldr	r3, [r3, #12]
 8000e38:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8000e3a:	4b2c      	ldr	r3, [pc, #176]	@ (8000eec <main+0x48c>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8000e3c:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8000e3e:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8000e42:	e9c5 9402 	strd	r9, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8000e46:	e9c5 490a 	strd	r4, r9, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8000e4a:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8000e4e:	f006 fc0f 	bl	8007670 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8000e52:	4631      	mov	r1, r6
 8000e54:	4628      	mov	r0, r5
 8000e56:	f006 fcc1 	bl	80077dc <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 8000e5a:	f000 fc92 	bl	8001782 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8000e5e:	f000 fc8f 	bl	8001780 <MX_TouchGFX_PreOSInit>
 if (PAJ7620_Init() != HAL_OK)
 8000e62:	f7ff fc85 	bl	8000770 <PAJ7620_Init>
 8000e66:	4604      	mov	r4, r0
 8000e68:	b118      	cbz	r0, 8000e72 <main+0x412>
		  HAL_Delay(100);
 8000e6a:	2064      	movs	r0, #100	@ 0x64
 8000e6c:	f006 fb8a 	bl	8007584 <HAL_Delay>
	  while(1) {
 8000e70:	e7fb      	b.n	8000e6a <main+0x40a>
  osKernelInitialize();
 8000e72:	f008 fdd9 	bl	8009a28 <osKernelInitialize>
  Queue1Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue1_Attributes);
 8000e76:	4a1e      	ldr	r2, [pc, #120]	@ (8000ef0 <main+0x490>)
 8000e78:	4631      	mov	r1, r6
 8000e7a:	4638      	mov	r0, r7
 8000e7c:	f008 ff28 	bl	8009cd0 <osMessageQueueNew>
 8000e80:	4b1c      	ldr	r3, [pc, #112]	@ (8000ef4 <main+0x494>)
  Queue2Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue2_Attributes);
 8000e82:	4a1d      	ldr	r2, [pc, #116]	@ (8000ef8 <main+0x498>)
  Queue1Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue1_Attributes);
 8000e84:	6018      	str	r0, [r3, #0]
  Queue2Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue2_Attributes);
 8000e86:	4631      	mov	r1, r6
 8000e88:	4638      	mov	r0, r7
 8000e8a:	f008 ff21 	bl	8009cd0 <osMessageQueueNew>
 8000e8e:	4b1b      	ldr	r3, [pc, #108]	@ (8000efc <main+0x49c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000e90:	4a1b      	ldr	r2, [pc, #108]	@ (8000f00 <main+0x4a0>)
  Queue2Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue2_Attributes);
 8000e92:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000e94:	4621      	mov	r1, r4
 8000e96:	481b      	ldr	r0, [pc, #108]	@ (8000f04 <main+0x4a4>)
 8000e98:	f008 fdf2 	bl	8009a80 <osThreadNew>
 8000e9c:	4b1a      	ldr	r3, [pc, #104]	@ (8000f08 <main+0x4a8>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8000e9e:	4a1b      	ldr	r2, [pc, #108]	@ (8000f0c <main+0x4ac>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000ea0:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8000ea2:	4621      	mov	r1, r4
 8000ea4:	481a      	ldr	r0, [pc, #104]	@ (8000f10 <main+0x4b0>)
 8000ea6:	f008 fdeb 	bl	8009a80 <osThreadNew>
 8000eaa:	4b1a      	ldr	r3, [pc, #104]	@ (8000f14 <main+0x4b4>)
  myTask03Handle = osThreadNew(StartTask03, NULL, &myTask03_attributes);
 8000eac:	4a1a      	ldr	r2, [pc, #104]	@ (8000f18 <main+0x4b8>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8000eae:	6018      	str	r0, [r3, #0]
  myTask03Handle = osThreadNew(StartTask03, NULL, &myTask03_attributes);
 8000eb0:	4621      	mov	r1, r4
 8000eb2:	481a      	ldr	r0, [pc, #104]	@ (8000f1c <main+0x4bc>)
 8000eb4:	f008 fde4 	bl	8009a80 <osThreadNew>
 8000eb8:	4b19      	ldr	r3, [pc, #100]	@ (8000f20 <main+0x4c0>)
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_SET);
 8000eba:	4632      	mov	r2, r6
  myTask03Handle = osThreadNew(StartTask03, NULL, &myTask03_attributes);
 8000ebc:	6018      	str	r0, [r3, #0]
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_SET);
 8000ebe:	4641      	mov	r1, r8
 8000ec0:	4818      	ldr	r0, [pc, #96]	@ (8000f24 <main+0x4c4>)
 8000ec2:	f006 fdb9 	bl	8007a38 <HAL_GPIO_WritePin>
  myTask04Handle = osThreadNew(StartTask04, NULL, &myTask04_attributes);
 8000ec6:	4a18      	ldr	r2, [pc, #96]	@ (8000f28 <main+0x4c8>)
 8000ec8:	4818      	ldr	r0, [pc, #96]	@ (8000f2c <main+0x4cc>)
 8000eca:	4621      	mov	r1, r4
 8000ecc:	f008 fdd8 	bl	8009a80 <osThreadNew>
 8000ed0:	4b17      	ldr	r3, [pc, #92]	@ (8000f30 <main+0x4d0>)
 8000ed2:	6018      	str	r0, [r3, #0]
  osThreadSuspend(myTask04Handle);
 8000ed4:	f008 fe2a 	bl	8009b2c <osThreadSuspend>
  osKernelStart();
 8000ed8:	f008 fdb8 	bl	8009a4c <osKernelStart>
  while (1)
 8000edc:	e7fe      	b.n	8000edc <main+0x47c>
 8000ede:	bf00      	nop
 8000ee0:	2000039c 	.word	0x2000039c
 8000ee4:	20000014 	.word	0x20000014
 8000ee8:	20000548 	.word	0x20000548
 8000eec:	4002b000 	.word	0x4002b000
 8000ef0:	080272dc 	.word	0x080272dc
 8000ef4:	200003a8 	.word	0x200003a8
 8000ef8:	080272c4 	.word	0x080272c4
 8000efc:	200003a4 	.word	0x200003a4
 8000f00:	08027360 	.word	0x08027360
 8000f04:	0800111d 	.word	0x0800111d
 8000f08:	200003bc 	.word	0x200003bc
 8000f0c:	0802733c 	.word	0x0802733c
 8000f10:	08001791 	.word	0x08001791
 8000f14:	200003b8 	.word	0x200003b8
 8000f18:	08027318 	.word	0x08027318
 8000f1c:	0800088d 	.word	0x0800088d
 8000f20:	200003b4 	.word	0x200003b4
 8000f24:	40021800 	.word	0x40021800
 8000f28:	080272f4 	.word	0x080272f4
 8000f2c:	0800093d 	.word	0x0800093d
 8000f30:	200003b0 	.word	0x200003b0

08000f34 <IOE_Init>:
void IOE_Init(void)
 8000f34:	4770      	bx	lr

08000f36 <IOE_ITConfig>:
void IOE_ITConfig(void)
 8000f36:	4770      	bx	lr

08000f38 <IOE_Write>:
{
 8000f38:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8000f3a:	4b09      	ldr	r3, [pc, #36]	@ (8000f60 <IOE_Write+0x28>)
 8000f3c:	f88d 2017 	strb.w	r2, [sp, #23]
 8000f40:	681b      	ldr	r3, [r3, #0]
 8000f42:	9302      	str	r3, [sp, #8]
 8000f44:	f10d 0217 	add.w	r2, sp, #23
 8000f48:	2301      	movs	r3, #1
 8000f4a:	9200      	str	r2, [sp, #0]
 8000f4c:	9301      	str	r3, [sp, #4]
 8000f4e:	460a      	mov	r2, r1
 8000f50:	4601      	mov	r1, r0
 8000f52:	4804      	ldr	r0, [pc, #16]	@ (8000f64 <IOE_Write+0x2c>)
 8000f54:	f007 f826 	bl	8007fa4 <HAL_I2C_Mem_Write>
}
 8000f58:	b007      	add	sp, #28
 8000f5a:	f85d fb04 	ldr.w	pc, [sp], #4
 8000f5e:	bf00      	nop
 8000f60:	20000008 	.word	0x20000008
 8000f64:	200004f4 	.word	0x200004f4

08000f68 <IOE_Read>:
{
 8000f68:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8000f6a:	2300      	movs	r3, #0
 8000f6c:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8000f70:	4b08      	ldr	r3, [pc, #32]	@ (8000f94 <IOE_Read+0x2c>)
 8000f72:	681b      	ldr	r3, [r3, #0]
 8000f74:	9302      	str	r3, [sp, #8]
{
 8000f76:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8000f78:	2301      	movs	r3, #1
 8000f7a:	f10d 0117 	add.w	r1, sp, #23
 8000f7e:	9100      	str	r1, [sp, #0]
 8000f80:	9301      	str	r3, [sp, #4]
 8000f82:	4601      	mov	r1, r0
 8000f84:	4804      	ldr	r0, [pc, #16]	@ (8000f98 <IOE_Read+0x30>)
 8000f86:	f007 f89d 	bl	80080c4 <HAL_I2C_Mem_Read>
}
 8000f8a:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8000f8e:	b007      	add	sp, #28
 8000f90:	f85d fb04 	ldr.w	pc, [sp], #4
 8000f94:	20000008 	.word	0x20000008
 8000f98:	200004f4 	.word	0x200004f4

08000f9c <IOE_ReadMultiple>:
{
 8000f9c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8000f9e:	4c08      	ldr	r4, [pc, #32]	@ (8000fc0 <IOE_ReadMultiple+0x24>)
 8000fa0:	6824      	ldr	r4, [r4, #0]
 8000fa2:	9200      	str	r2, [sp, #0]
 8000fa4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8000fa8:	460a      	mov	r2, r1
 8000faa:	2301      	movs	r3, #1
 8000fac:	4601      	mov	r1, r0
 8000fae:	4805      	ldr	r0, [pc, #20]	@ (8000fc4 <IOE_ReadMultiple+0x28>)
 8000fb0:	f007 f888 	bl	80080c4 <HAL_I2C_Mem_Read>
}
 8000fb4:	3800      	subs	r0, #0
 8000fb6:	bf18      	it	ne
 8000fb8:	2001      	movne	r0, #1
 8000fba:	b004      	add	sp, #16
 8000fbc:	bd10      	pop	{r4, pc}
 8000fbe:	bf00      	nop
 8000fc0:	20000008 	.word	0x20000008
 8000fc4:	200004f4 	.word	0x200004f4

08000fc8 <IOE_Delay>:
void IOE_Delay(uint32_t Delay)
 8000fc8:	f006 badc 	b.w	8007584 <HAL_Delay>

08000fcc <LCD_IO_Init>:
{
 8000fcc:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8000fce:	4c06      	ldr	r4, [pc, #24]	@ (8000fe8 <LCD_IO_Init+0x1c>)
 8000fd0:	2200      	movs	r2, #0
 8000fd2:	4620      	mov	r0, r4
 8000fd4:	2104      	movs	r1, #4
 8000fd6:	f006 fd2f 	bl	8007a38 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8000fda:	4620      	mov	r0, r4
 8000fdc:	2201      	movs	r2, #1
}
 8000fde:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8000fe2:	2104      	movs	r1, #4
 8000fe4:	f006 bd28 	b.w	8007a38 <HAL_GPIO_WritePin>
 8000fe8:	40020800 	.word	0x40020800

08000fec <LCD_IO_WriteData>:
{
 8000fec:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8000fee:	4d0b      	ldr	r5, [pc, #44]	@ (800101c <LCD_IO_WriteData+0x30>)
{
 8000ff0:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8000ff2:	2201      	movs	r2, #1
 8000ff4:	480a      	ldr	r0, [pc, #40]	@ (8001020 <LCD_IO_WriteData+0x34>)
 8000ff6:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000ffa:	f006 fd1d 	bl	8007a38 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8000ffe:	2200      	movs	r2, #0
 8001000:	2104      	movs	r1, #4
 8001002:	4628      	mov	r0, r5
 8001004:	f006 fd18 	bl	8007a38 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001008:	4620      	mov	r0, r4
 800100a:	f7ff fc2d 	bl	8000868 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800100e:	4628      	mov	r0, r5
 8001010:	2201      	movs	r2, #1
}
 8001012:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001016:	2104      	movs	r1, #4
 8001018:	f006 bd0e 	b.w	8007a38 <HAL_GPIO_WritePin>
 800101c:	40020800 	.word	0x40020800
 8001020:	40020c00 	.word	0x40020c00

08001024 <LCD_IO_WriteReg>:
{
 8001024:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001026:	4d0b      	ldr	r5, [pc, #44]	@ (8001054 <LCD_IO_WriteReg+0x30>)
{
 8001028:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800102a:	2200      	movs	r2, #0
 800102c:	480a      	ldr	r0, [pc, #40]	@ (8001058 <LCD_IO_WriteReg+0x34>)
 800102e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001032:	f006 fd01 	bl	8007a38 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001036:	2200      	movs	r2, #0
 8001038:	2104      	movs	r1, #4
 800103a:	4628      	mov	r0, r5
 800103c:	f006 fcfc 	bl	8007a38 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001040:	4620      	mov	r0, r4
 8001042:	f7ff fc11 	bl	8000868 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001046:	4628      	mov	r0, r5
 8001048:	2201      	movs	r2, #1
}
 800104a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800104e:	2104      	movs	r1, #4
 8001050:	f006 bcf2 	b.w	8007a38 <HAL_GPIO_WritePin>
 8001054:	40020800 	.word	0x40020800
 8001058:	40020c00 	.word	0x40020c00

0800105c <LCD_IO_ReadData>:
{
 800105c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800105e:	4e14      	ldr	r6, [pc, #80]	@ (80010b0 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001060:	4f14      	ldr	r7, [pc, #80]	@ (80010b4 <LCD_IO_ReadData+0x58>)
{
 8001062:	4605      	mov	r5, r0
 8001064:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001066:	4630      	mov	r0, r6
 8001068:	2200      	movs	r2, #0
 800106a:	2104      	movs	r1, #4
 800106c:	f006 fce4 	bl	8007a38 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001070:	2200      	movs	r2, #0
 8001072:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001076:	4638      	mov	r0, r7
 8001078:	f006 fcde 	bl	8007a38 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 800107c:	4628      	mov	r0, r5
 800107e:	f7ff fbf3 	bl	8000868 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001082:	4b0d      	ldr	r3, [pc, #52]	@ (80010b8 <LCD_IO_ReadData+0x5c>)
 8001084:	480d      	ldr	r0, [pc, #52]	@ (80010bc <LCD_IO_ReadData+0x60>)
 8001086:	681b      	ldr	r3, [r3, #0]
 8001088:	4622      	mov	r2, r4
 800108a:	a901      	add	r1, sp, #4
 800108c:	f008 fa28 	bl	80094e0 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001090:	4638      	mov	r0, r7
 8001092:	2201      	movs	r2, #1
 8001094:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  return readvalue;
 8001098:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800109a:	f006 fccd 	bl	8007a38 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800109e:	4630      	mov	r0, r6
 80010a0:	2201      	movs	r2, #1
 80010a2:	2104      	movs	r1, #4
 80010a4:	f006 fcc8 	bl	8007a38 <HAL_GPIO_WritePin>
}
 80010a8:	4620      	mov	r0, r4
 80010aa:	b003      	add	sp, #12
 80010ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80010ae:	bf00      	nop
 80010b0:	40020800 	.word	0x40020800
 80010b4:	40020c00 	.word	0x40020c00
 80010b8:	20000004 	.word	0x20000004
 80010bc:	200003f4 	.word	0x200003f4

080010c0 <LCD_Delay>:
  HAL_Delay(Delay);
 80010c0:	f006 ba60 	b.w	8007584 <HAL_Delay>

080010c4 <updateTasksBasedOnMode>:
void updateTasksBasedOnMode(void) {
 80010c4:	b510      	push	{r4, lr}
  switch (currentMode) {
 80010c6:	4b12      	ldr	r3, [pc, #72]	@ (8001110 <updateTasksBasedOnMode+0x4c>)
 80010c8:	781b      	ldrb	r3, [r3, #0]
 80010ca:	b113      	cbz	r3, 80010d2 <updateTasksBasedOnMode+0xe>
 80010cc:	2b01      	cmp	r3, #1
 80010ce:	d014      	beq.n	80010fa <updateTasksBasedOnMode+0x36>
}
 80010d0:	bd10      	pop	{r4, pc}
      if (osThreadGetState(myTask03Handle) == osThreadBlocked) {
 80010d2:	4c10      	ldr	r4, [pc, #64]	@ (8001114 <updateTasksBasedOnMode+0x50>)
 80010d4:	6820      	ldr	r0, [r4, #0]
 80010d6:	f008 fd17 	bl	8009b08 <osThreadGetState>
 80010da:	2803      	cmp	r0, #3
 80010dc:	d102      	bne.n	80010e4 <updateTasksBasedOnMode+0x20>
          osThreadResume(myTask03Handle);    // Khôi phục Task3 nếu đang tạm dừng
 80010de:	6820      	ldr	r0, [r4, #0]
 80010e0:	f008 fd33 	bl	8009b4a <osThreadResume>
      if (osThreadGetState(myTask04Handle) != osThreadBlocked) {
 80010e4:	4c0c      	ldr	r4, [pc, #48]	@ (8001118 <updateTasksBasedOnMode+0x54>)
      if (osThreadGetState(myTask03Handle) != osThreadBlocked) {
 80010e6:	6820      	ldr	r0, [r4, #0]
 80010e8:	f008 fd0e 	bl	8009b08 <osThreadGetState>
 80010ec:	2803      	cmp	r0, #3
 80010ee:	d0ef      	beq.n	80010d0 <updateTasksBasedOnMode+0xc>
          osThreadSuspend(myTask03Handle);   // Tạm dừng Task3 nếu đang chạy
 80010f0:	6820      	ldr	r0, [r4, #0]
}
 80010f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
          osThreadSuspend(myTask03Handle);   // Tạm dừng Task3 nếu đang chạy
 80010f6:	f008 bd19 	b.w	8009b2c <osThreadSuspend>
      if (osThreadGetState(myTask04Handle) == osThreadBlocked) {
 80010fa:	4c07      	ldr	r4, [pc, #28]	@ (8001118 <updateTasksBasedOnMode+0x54>)
 80010fc:	6820      	ldr	r0, [r4, #0]
 80010fe:	f008 fd03 	bl	8009b08 <osThreadGetState>
 8001102:	2803      	cmp	r0, #3
 8001104:	d102      	bne.n	800110c <updateTasksBasedOnMode+0x48>
          osThreadResume(myTask04Handle);    // Khôi phục Task4 nếu đang tạm dừng
 8001106:	6820      	ldr	r0, [r4, #0]
 8001108:	f008 fd1f 	bl	8009b4a <osThreadResume>
      if (osThreadGetState(myTask03Handle) != osThreadBlocked) {
 800110c:	4c01      	ldr	r4, [pc, #4]	@ (8001114 <updateTasksBasedOnMode+0x50>)
 800110e:	e7ea      	b.n	80010e6 <updateTasksBasedOnMode+0x22>
 8001110:	200003a0 	.word	0x200003a0
 8001114:	200003b4 	.word	0x200003b4
 8001118:	200003b0 	.word	0x200003b0

0800111c <StartDefaultTask>:
{
 800111c:	b573      	push	{r0, r1, r4, r5, r6, lr}
      uint32_t count = osMessageQueueGetCount(Queue2Handle);
 800111e:	4c18      	ldr	r4, [pc, #96]	@ (8001180 <StartDefaultTask+0x64>)
        currentMode = mode == 0 ? MODE_TASK3 : MODE_TASK4; // Cập nhật chế độ hiện tại dựa trên giá trị nhận được từ Queue2
 8001120:	4e18      	ldr	r6, [pc, #96]	@ (8001184 <StartDefaultTask+0x68>)
      uint32_t count = osMessageQueueGetCount(Queue2Handle);
 8001122:	6820      	ldr	r0, [r4, #0]
 8001124:	f008 fe70 	bl	8009e08 <osMessageQueueGetCount>
      if (count > 0) {
 8001128:	b1e8      	cbz	r0, 8001166 <StartDefaultTask+0x4a>
        osMessageQueueGet(Queue2Handle, &mode, NULL, 0);
 800112a:	2300      	movs	r3, #0
 800112c:	461a      	mov	r2, r3
 800112e:	6820      	ldr	r0, [r4, #0]
 8001130:	f10d 0107 	add.w	r1, sp, #7
 8001134:	f008 fe38 	bl	8009da8 <osMessageQueueGet>
        currentMode = mode == 0 ? MODE_TASK3 : MODE_TASK4; // Cập nhật chế độ hiện tại dựa trên giá trị nhận được từ Queue2
 8001138:	f89d 5007 	ldrb.w	r5, [sp, #7]
 800113c:	2d00      	cmp	r5, #0
 800113e:	bf14      	ite	ne
 8001140:	2301      	movne	r3, #1
 8001142:	2300      	moveq	r3, #0
          HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_SET);
 8001144:	f04f 0201 	mov.w	r2, #1
        currentMode = mode == 0 ? MODE_TASK3 : MODE_TASK4; // Cập nhật chế độ hiện tại dựa trên giá trị nhận được từ Queue2
 8001148:	7033      	strb	r3, [r6, #0]
        if (currentMode == 0) {
 800114a:	d110      	bne.n	800116e <StartDefaultTask+0x52>
          HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_SET);
 800114c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001150:	480d      	ldr	r0, [pc, #52]	@ (8001188 <StartDefaultTask+0x6c>)
 8001152:	f006 fc71 	bl	8007a38 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(GPIOG, GPIO_PIN_14, GPIO_PIN_RESET);
 8001156:	462a      	mov	r2, r5
 8001158:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
          HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800115c:	480a      	ldr	r0, [pc, #40]	@ (8001188 <StartDefaultTask+0x6c>)
 800115e:	f006 fc6b 	bl	8007a38 <HAL_GPIO_WritePin>
        updateTasksBasedOnMode(); // Cập nhật trạng thái của các task dựa trên chế độ hiện tại
 8001162:	f7ff ffaf 	bl	80010c4 <updateTasksBasedOnMode>
      osDelay(1);
 8001166:	2001      	movs	r0, #1
 8001168:	f008 fcfe 	bl	8009b68 <osDelay>
    {
 800116c:	e7d9      	b.n	8001122 <StartDefaultTask+0x6>
          HAL_GPIO_WritePin(GPIOG, GPIO_PIN_14, GPIO_PIN_SET);
 800116e:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001172:	4805      	ldr	r0, [pc, #20]	@ (8001188 <StartDefaultTask+0x6c>)
 8001174:	f006 fc60 	bl	8007a38 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 8001178:	2200      	movs	r2, #0
 800117a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800117e:	e7ed      	b.n	800115c <StartDefaultTask+0x40>
 8001180:	200003a4 	.word	0x200003a4
 8001184:	200003a0 	.word	0x200003a0
 8001188:	40021800 	.word	0x40021800

0800118c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
 800118c:	6802      	ldr	r2, [r0, #0]
 800118e:	4b03      	ldr	r3, [pc, #12]	@ (800119c <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001190:	429a      	cmp	r2, r3
 8001192:	d101      	bne.n	8001198 <HAL_TIM_PeriodElapsedCallback+0xc>
  {
    HAL_IncTick();
 8001194:	f006 b9e4 	b.w	8007560 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001198:	4770      	bx	lr
 800119a:	bf00      	nop
 800119c:	40001000 	.word	0x40001000

080011a0 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80011a0:	4770      	bx	lr
	...

080011a4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80011a4:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80011a6:	4b0e      	ldr	r3, [pc, #56]	@ (80011e0 <HAL_MspInit+0x3c>)
 80011a8:	2200      	movs	r2, #0
 80011aa:	9200      	str	r2, [sp, #0]
 80011ac:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 80011ae:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 80011b2:	6459      	str	r1, [r3, #68]	@ 0x44
 80011b4:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 80011b6:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 80011ba:	9100      	str	r1, [sp, #0]
 80011bc:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80011be:	9201      	str	r2, [sp, #4]
 80011c0:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 80011c2:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 80011c6:	6419      	str	r1, [r3, #64]	@ 0x40
 80011c8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80011ca:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80011ce:	9301      	str	r3, [sp, #4]
 80011d0:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80011d2:	210f      	movs	r1, #15
 80011d4:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80011d8:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80011da:	f006 b9f9 	b.w	80075d0 <HAL_NVIC_SetPriority>
 80011de:	bf00      	nop
 80011e0:	40023800 	.word	0x40023800

080011e4 <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80011e4:	6802      	ldr	r2, [r0, #0]
 80011e6:	4b09      	ldr	r3, [pc, #36]	@ (800120c <HAL_CRC_MspInit+0x28>)
 80011e8:	429a      	cmp	r2, r3
{
 80011ea:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80011ec:	d10b      	bne.n	8001206 <HAL_CRC_MspInit+0x22>
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80011ee:	2300      	movs	r3, #0
 80011f0:	9301      	str	r3, [sp, #4]
 80011f2:	4b07      	ldr	r3, [pc, #28]	@ (8001210 <HAL_CRC_MspInit+0x2c>)
 80011f4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80011f6:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80011fa:	631a      	str	r2, [r3, #48]	@ 0x30
 80011fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011fe:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001202:	9301      	str	r3, [sp, #4]
 8001204:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
 8001206:	b002      	add	sp, #8
 8001208:	4770      	bx	lr
 800120a:	bf00      	nop
 800120c:	40023000 	.word	0x40023000
 8001210:	40023800 	.word	0x40023800

08001214 <HAL_DMA2D_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001214:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001216:	4b0f      	ldr	r3, [pc, #60]	@ (8001254 <HAL_DMA2D_MspInit+0x40>)
 8001218:	6802      	ldr	r2, [r0, #0]
 800121a:	429a      	cmp	r2, r3
 800121c:	d116      	bne.n	800124c <HAL_DMA2D_MspInit+0x38>
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800121e:	2200      	movs	r2, #0
 8001220:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 8001224:	9201      	str	r2, [sp, #4]
 8001226:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8001228:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 800122c:	6319      	str	r1, [r3, #48]	@ 0x30
 800122e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001230:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8001234:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001236:	2105      	movs	r1, #5
 8001238:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800123a:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800123c:	f006 f9c8 	bl	80075d0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001240:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
 8001242:	b003      	add	sp, #12
 8001244:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001248:	f006 b9f4 	b.w	8007634 <HAL_NVIC_EnableIRQ>
}
 800124c:	b003      	add	sp, #12
 800124e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001252:	bf00      	nop
 8001254:	4002b000 	.word	0x4002b000

08001258 <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001258:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800125c:	4604      	mov	r4, r0
 800125e:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001260:	2214      	movs	r2, #20
 8001262:	2100      	movs	r1, #0
 8001264:	a803      	add	r0, sp, #12
 8001266:	f024 fa2c 	bl	80256c2 <memset>
  if(hi2c->Instance==I2C3)
 800126a:	6822      	ldr	r2, [r4, #0]
 800126c:	4b24      	ldr	r3, [pc, #144]	@ (8001300 <HAL_I2C_MspInit+0xa8>)
 800126e:	429a      	cmp	r2, r3
 8001270:	d143      	bne.n	80012fa <HAL_I2C_MspInit+0xa2>
  {
    /* USER CODE BEGIN I2C3_MspInit 0 */

    /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001272:	4c24      	ldr	r4, [pc, #144]	@ (8001304 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001274:	4824      	ldr	r0, [pc, #144]	@ (8001308 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001276:	2500      	movs	r5, #0
 8001278:	9500      	str	r5, [sp, #0]
 800127a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800127c:	f043 0304 	orr.w	r3, r3, #4
 8001280:	6323      	str	r3, [r4, #48]	@ 0x30
 8001282:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001284:	f003 0304 	and.w	r3, r3, #4
 8001288:	9300      	str	r3, [sp, #0]
 800128a:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800128c:	9501      	str	r5, [sp, #4]
 800128e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001290:	f043 0301 	orr.w	r3, r3, #1
 8001294:	6323      	str	r3, [r4, #48]	@ 0x30
 8001296:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001298:	f003 0301 	and.w	r3, r3, #1
 800129c:	9301      	str	r3, [sp, #4]
 800129e:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80012a0:	f04f 0912 	mov.w	r9, #18
 80012a4:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012a8:	f04f 0801 	mov.w	r8, #1
 80012ac:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80012ae:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80012b0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80012b2:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012b6:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80012ba:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80012bc:	f006 fad2 	bl	8007864 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80012c0:	f44f 7380 	mov.w	r3, #256	@ 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80012c4:	4811      	ldr	r0, [pc, #68]	@ (800130c <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80012c6:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80012c8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80012ca:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012ce:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80012d2:	f006 fac7 	bl	8007864 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 80012d6:	9502      	str	r5, [sp, #8]
 80012d8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80012da:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80012de:	6423      	str	r3, [r4, #64]	@ 0x40
 80012e0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80012e2:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80012e6:	9302      	str	r3, [sp, #8]
 80012e8:	9b02      	ldr	r3, [sp, #8]
    /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 80012ea:	6a23      	ldr	r3, [r4, #32]
 80012ec:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80012f0:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 80012f2:	6a23      	ldr	r3, [r4, #32]
 80012f4:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 80012f8:	6223      	str	r3, [r4, #32]
    /* USER CODE END I2C3_MspInit 1 */

  }

}
 80012fa:	b009      	add	sp, #36	@ 0x24
 80012fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001300:	40005c00 	.word	0x40005c00
 8001304:	40023800 	.word	0x40023800
 8001308:	40020800 	.word	0x40020800
 800130c:	40020000 	.word	0x40020000

08001310 <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001310:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001312:	b099      	sub	sp, #100	@ 0x64
 8001314:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001316:	2214      	movs	r2, #20
 8001318:	2100      	movs	r1, #0
 800131a:	a807      	add	r0, sp, #28
 800131c:	f024 f9d1 	bl	80256c2 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001320:	2230      	movs	r2, #48	@ 0x30
 8001322:	eb0d 0002 	add.w	r0, sp, r2
 8001326:	2100      	movs	r1, #0
 8001328:	f024 f9cb 	bl	80256c2 <memset>
  if(hltdc->Instance==LTDC)
 800132c:	6822      	ldr	r2, [r4, #0]
 800132e:	4b5e      	ldr	r3, [pc, #376]	@ (80014a8 <HAL_LTDC_MspInit+0x198>)
 8001330:	429a      	cmp	r2, r3
 8001332:	f040 80b7 	bne.w	80014a4 <HAL_LTDC_MspInit+0x194>

    /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001336:	2308      	movs	r3, #8
 8001338:	930c      	str	r3, [sp, #48]	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800133a:	23c0      	movs	r3, #192	@ 0xc0
 800133c:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800133e:	2304      	movs	r3, #4
 8001340:	9312      	str	r3, [sp, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001342:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001344:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8001348:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800134a:	f007 fc79 	bl	8008c40 <HAL_RCCEx_PeriphCLKConfig>
 800134e:	b108      	cbz	r0, 8001354 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 8001350:	f7ff ff26 	bl	80011a0 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001354:	4b55      	ldr	r3, [pc, #340]	@ (80014ac <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001356:	4856      	ldr	r0, [pc, #344]	@ (80014b0 <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001358:	2400      	movs	r4, #0
 800135a:	9400      	str	r4, [sp, #0]
 800135c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800135e:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8001362:	645a      	str	r2, [r3, #68]	@ 0x44
 8001364:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001366:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 800136a:	9200      	str	r2, [sp, #0]
 800136c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800136e:	9401      	str	r4, [sp, #4]
 8001370:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001372:	f042 0220 	orr.w	r2, r2, #32
 8001376:	631a      	str	r2, [r3, #48]	@ 0x30
 8001378:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800137a:	f002 0220 	and.w	r2, r2, #32
 800137e:	9201      	str	r2, [sp, #4]
 8001380:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001382:	9402      	str	r4, [sp, #8]
 8001384:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001386:	f042 0201 	orr.w	r2, r2, #1
 800138a:	631a      	str	r2, [r3, #48]	@ 0x30
 800138c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800138e:	f002 0201 	and.w	r2, r2, #1
 8001392:	9202      	str	r2, [sp, #8]
 8001394:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001396:	9403      	str	r4, [sp, #12]
 8001398:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800139a:	f042 0202 	orr.w	r2, r2, #2
 800139e:	631a      	str	r2, [r3, #48]	@ 0x30
 80013a0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80013a2:	f002 0202 	and.w	r2, r2, #2
 80013a6:	9203      	str	r2, [sp, #12]
 80013a8:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80013aa:	9404      	str	r4, [sp, #16]
 80013ac:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80013ae:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80013b2:	631a      	str	r2, [r3, #48]	@ 0x30
 80013b4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80013b6:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 80013ba:	9204      	str	r2, [sp, #16]
 80013bc:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80013be:	9405      	str	r4, [sp, #20]
 80013c0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80013c2:	f042 0204 	orr.w	r2, r2, #4
 80013c6:	631a      	str	r2, [r3, #48]	@ 0x30
 80013c8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80013ca:	f002 0204 	and.w	r2, r2, #4
 80013ce:	9205      	str	r2, [sp, #20]
 80013d0:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80013d2:	9406      	str	r4, [sp, #24]
 80013d4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80013d6:	f042 0208 	orr.w	r2, r2, #8
 80013da:	631a      	str	r2, [r3, #48]	@ 0x30
 80013dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013de:	f003 0308 	and.w	r3, r3, #8
 80013e2:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013e4:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80013e6:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80013e8:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80013ea:	960b      	str	r6, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013ec:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80013f0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013f2:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80013f6:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80013fa:	f006 fa33 	bl	8007864 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80013fe:	f641 0358 	movw	r3, #6232	@ 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001402:	482c      	ldr	r0, [pc, #176]	@ (80014b4 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001404:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001406:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001408:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800140c:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800140e:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001412:	f006 fa27 	bl	8007864 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001416:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001418:	4827      	ldr	r0, [pc, #156]	@ (80014b8 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800141a:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800141c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800141e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001422:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001426:	f006 fa1d 	bl	8007864 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 800142a:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800142e:	4822      	ldr	r0, [pc, #136]	@ (80014b8 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001430:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001432:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001434:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001438:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800143c:	f006 fa12 	bl	8007864 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001440:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001444:	481d      	ldr	r0, [pc, #116]	@ (80014bc <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001446:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001448:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800144a:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800144e:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001452:	f006 fa07 	bl	8007864 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001456:	23c0      	movs	r3, #192	@ 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001458:	4819      	ldr	r0, [pc, #100]	@ (80014c0 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800145a:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800145c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800145e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001462:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001466:	f006 f9fd 	bl	8007864 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800146a:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800146c:	4815      	ldr	r0, [pc, #84]	@ (80014c4 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800146e:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001470:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001472:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001476:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800147a:	f006 f9f3 	bl	8007864 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800147e:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001482:	480e      	ldr	r0, [pc, #56]	@ (80014bc <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001484:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001486:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001488:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800148c:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001490:	f006 f9e8 	bl	8007864 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001494:	2058      	movs	r0, #88	@ 0x58
 8001496:	4622      	mov	r2, r4
 8001498:	2105      	movs	r1, #5
 800149a:	f006 f899 	bl	80075d0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800149e:	2058      	movs	r0, #88	@ 0x58
 80014a0:	f006 f8c8 	bl	8007634 <HAL_NVIC_EnableIRQ>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
 80014a4:	b019      	add	sp, #100	@ 0x64
 80014a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80014a8:	40016800 	.word	0x40016800
 80014ac:	40023800 	.word	0x40023800
 80014b0:	40021400 	.word	0x40021400
 80014b4:	40020000 	.word	0x40020000
 80014b8:	40020400 	.word	0x40020400
 80014bc:	40021800 	.word	0x40021800
 80014c0:	40020800 	.word	0x40020800
 80014c4:	40020c00 	.word	0x40020c00

080014c8 <HAL_SPI_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hspi: SPI handle pointer
  * @retval None
  */
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80014c8:	b510      	push	{r4, lr}
 80014ca:	4604      	mov	r4, r0
 80014cc:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014ce:	2214      	movs	r2, #20
 80014d0:	2100      	movs	r1, #0
 80014d2:	a803      	add	r0, sp, #12
 80014d4:	f024 f8f5 	bl	80256c2 <memset>
  if(hspi->Instance==SPI5)
 80014d8:	6822      	ldr	r2, [r4, #0]
 80014da:	4b14      	ldr	r3, [pc, #80]	@ (800152c <HAL_SPI_MspInit+0x64>)
 80014dc:	429a      	cmp	r2, r3
 80014de:	d123      	bne.n	8001528 <HAL_SPI_MspInit+0x60>
  {
    /* USER CODE BEGIN SPI5_MspInit 0 */

    /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 80014e0:	f503 4368 	add.w	r3, r3, #59392	@ 0xe800
 80014e4:	2100      	movs	r1, #0
 80014e6:	9101      	str	r1, [sp, #4]
 80014e8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80014ea:	4811      	ldr	r0, [pc, #68]	@ (8001530 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 80014ec:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 80014f0:	645a      	str	r2, [r3, #68]	@ 0x44
 80014f2:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80014f4:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 80014f8:	9201      	str	r2, [sp, #4]
 80014fa:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80014fc:	9102      	str	r1, [sp, #8]
 80014fe:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001500:	f042 0220 	orr.w	r2, r2, #32
 8001504:	631a      	str	r2, [r3, #48]	@ 0x30
 8001506:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001508:	f003 0320 	and.w	r3, r3, #32
 800150c:	9302      	str	r3, [sp, #8]
 800150e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001510:	f44f 7260 	mov.w	r2, #896	@ 0x380
 8001514:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001516:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001518:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800151c:	2305      	movs	r3, #5
 800151e:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001522:	a903      	add	r1, sp, #12
 8001524:	f006 f99e 	bl	8007864 <HAL_GPIO_Init>

    /* USER CODE END SPI5_MspInit 1 */

  }

}
 8001528:	b008      	add	sp, #32
 800152a:	bd10      	pop	{r4, pc}
 800152c:	40015000 	.word	0x40015000
 8001530:	40021400 	.word	0x40021400

08001534 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001534:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001538:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 800153a:	2300      	movs	r3, #0
 800153c:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 800153e:	4b2b      	ldr	r3, [pc, #172]	@ (80015ec <HAL_SDRAM_MspInit+0xb8>)
 8001540:	681c      	ldr	r4, [r3, #0]
 8001542:	2c00      	cmp	r4, #0
 8001544:	d14f      	bne.n	80015e6 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001546:	f04f 0801 	mov.w	r8, #1
 800154a:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 800154e:	4b28      	ldr	r3, [pc, #160]	@ (80015f0 <HAL_SDRAM_MspInit+0xbc>)
 8001550:	9400      	str	r4, [sp, #0]
 8001552:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001554:	4827      	ldr	r0, [pc, #156]	@ (80015f4 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001556:	ea42 0208 	orr.w	r2, r2, r8
 800155a:	639a      	str	r2, [r3, #56]	@ 0x38
 800155c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800155e:	ea03 0308 	and.w	r3, r3, r8
 8001562:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001564:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001566:	2603      	movs	r6, #3
 8001568:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 800156a:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800156c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800156e:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 8001572:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001576:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800157a:	f006 f973 	bl	8007864 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800157e:	481e      	ldr	r0, [pc, #120]	@ (80015f8 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001580:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001582:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001584:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001588:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800158c:	f006 f96a 	bl	8007864 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001590:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001594:	4819      	ldr	r0, [pc, #100]	@ (80015fc <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001596:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001598:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800159a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800159e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80015a2:	f006 f95f 	bl	8007864 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80015a6:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80015aa:	4815      	ldr	r0, [pc, #84]	@ (8001600 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80015ac:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80015ae:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80015b0:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015b4:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80015b8:	f006 f954 	bl	8007864 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80015bc:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015c0:	4810      	ldr	r0, [pc, #64]	@ (8001604 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80015c2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015c4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80015c6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015ca:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015ce:	f006 f949 	bl	8007864 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80015d2:	2360      	movs	r3, #96	@ 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015d4:	480c      	ldr	r0, [pc, #48]	@ (8001608 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80015d6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015d8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80015da:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015de:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015e2:	f006 f93f 	bl	8007864 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80015e6:	b006      	add	sp, #24
 80015e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80015ec:	20000590 	.word	0x20000590
 80015f0:	40023800 	.word	0x40023800
 80015f4:	40021400 	.word	0x40021400
 80015f8:	40020800 	.word	0x40020800
 80015fc:	40021800 	.word	0x40021800
 8001600:	40021000 	.word	0x40021000
 8001604:	40020c00 	.word	0x40020c00
 8001608:	40020400 	.word	0x40020400

0800160c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800160c:	b570      	push	{r4, r5, r6, lr}
 800160e:	b088      	sub	sp, #32
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001610:	2300      	movs	r3, #0
 8001612:	9302      	str	r3, [sp, #8]
 8001614:	4b20      	ldr	r3, [pc, #128]	@ (8001698 <HAL_InitTick+0x8c>)
 8001616:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001618:	f042 0210 	orr.w	r2, r2, #16
 800161c:	641a      	str	r2, [r3, #64]	@ 0x40
 800161e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001620:	f003 0310 	and.w	r3, r3, #16
 8001624:	9302      	str	r3, [sp, #8]
{
 8001626:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001628:	a901      	add	r1, sp, #4
 800162a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 800162c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800162e:	f007 fae9 	bl	8008c04 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001632:	9b06      	ldr	r3, [sp, #24]
 8001634:	bb4b      	cbnz	r3, 800168a <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001636:	f007 fad5 	bl	8008be4 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 800163a:	4e18      	ldr	r6, [pc, #96]	@ (800169c <HAL_InitTick+0x90>)
 800163c:	4b18      	ldr	r3, [pc, #96]	@ (80016a0 <HAL_InitTick+0x94>)
 800163e:	6033      	str	r3, [r6, #0]
   * Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
   * Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001640:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8001644:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001646:	4b17      	ldr	r3, [pc, #92]	@ (80016a4 <HAL_InitTick+0x98>)
 8001648:	fbb0 f3f3 	udiv	r3, r0, r3
 800164c:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 800164e:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8001650:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 8001652:	2300      	movs	r3, #0
 8001654:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001656:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001658:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 800165a:	f008 f911 	bl	8009880 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 800165e:	4604      	mov	r4, r0
 8001660:	b980      	cbnz	r0, 8001684 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8001662:	4630      	mov	r0, r6
 8001664:	f007 ffe2 	bl	800962c <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8001668:	4604      	mov	r4, r0
 800166a:	b958      	cbnz	r0, 8001684 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 800166c:	2036      	movs	r0, #54	@ 0x36
 800166e:	f005 ffe1 	bl	8007634 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001672:	2d0f      	cmp	r5, #15
 8001674:	d80d      	bhi.n	8001692 <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8001676:	4622      	mov	r2, r4
 8001678:	4629      	mov	r1, r5
 800167a:	2036      	movs	r0, #54	@ 0x36
 800167c:	f005 ffa8 	bl	80075d0 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001680:	4b09      	ldr	r3, [pc, #36]	@ (80016a8 <HAL_InitTick+0x9c>)
 8001682:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8001684:	4620      	mov	r0, r4
 8001686:	b008      	add	sp, #32
 8001688:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 800168a:	f007 faab 	bl	8008be4 <HAL_RCC_GetPCLK1Freq>
 800168e:	0040      	lsls	r0, r0, #1
 8001690:	e7d3      	b.n	800163a <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 8001692:	2401      	movs	r4, #1
 8001694:	e7f6      	b.n	8001684 <HAL_InitTick+0x78>
 8001696:	bf00      	nop
 8001698:	40023800 	.word	0x40023800
 800169c:	20000594 	.word	0x20000594
 80016a0:	40001000 	.word	0x40001000
 80016a4:	000f4240 	.word	0x000f4240
 80016a8:	2000007c 	.word	0x2000007c

080016ac <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80016ac:	4770      	bx	lr

080016ae <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80016ae:	e7fe      	b.n	80016ae <HardFault_Handler>

080016b0 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80016b0:	e7fe      	b.n	80016b0 <MemManage_Handler>

080016b2 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80016b2:	e7fe      	b.n	80016b2 <BusFault_Handler>

080016b4 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80016b4:	e7fe      	b.n	80016b4 <UsageFault_Handler>

080016b6 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 80016b6:	4770      	bx	lr

080016b8 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80016b8:	4801      	ldr	r0, [pc, #4]	@ (80016c0 <TIM6_DAC_IRQHandler+0x8>)
 80016ba:	f007 bff5 	b.w	80096a8 <HAL_TIM_IRQHandler>
 80016be:	bf00      	nop
 80016c0:	20000594 	.word	0x20000594

080016c4 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80016c4:	4801      	ldr	r0, [pc, #4]	@ (80016cc <LTDC_IRQHandler+0x8>)
 80016c6:	f006 bf35 	b.w	8008534 <HAL_LTDC_IRQHandler>
 80016ca:	bf00      	nop
 80016cc:	2000044c 	.word	0x2000044c

080016d0 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 80016d0:	4801      	ldr	r0, [pc, #4]	@ (80016d8 <DMA2D_IRQHandler+0x8>)
 80016d2:	f005 bff9 	b.w	80076c8 <HAL_DMA2D_IRQHandler>
 80016d6:	bf00      	nop
 80016d8:	20000548 	.word	0x20000548

080016dc <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80016dc:	2001      	movs	r0, #1
 80016de:	4770      	bx	lr

080016e0 <_kill>:

int _kill(int pid, int sig)
{
 80016e0:	b508      	push	{r3, lr}
	errno = EINVAL;
 80016e2:	f024 f891 	bl	8025808 <__errno>
 80016e6:	2316      	movs	r3, #22
 80016e8:	6003      	str	r3, [r0, #0]
	return -1;
}
 80016ea:	f04f 30ff 	mov.w	r0, #4294967295
 80016ee:	bd08      	pop	{r3, pc}

080016f0 <_exit>:

void _exit (int status)
{
 80016f0:	b508      	push	{r3, lr}
	errno = EINVAL;
 80016f2:	f024 f889 	bl	8025808 <__errno>
 80016f6:	2316      	movs	r3, #22
 80016f8:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 80016fa:	e7fe      	b.n	80016fa <_exit+0xa>

080016fc <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80016fc:	b570      	push	{r4, r5, r6, lr}
 80016fe:	460d      	mov	r5, r1
 8001700:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001702:	460e      	mov	r6, r1
 8001704:	1b73      	subs	r3, r6, r5
 8001706:	429c      	cmp	r4, r3
 8001708:	dc01      	bgt.n	800170e <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 800170a:	4620      	mov	r0, r4
 800170c:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 800170e:	f3af 8000 	nop.w
 8001712:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001716:	e7f5      	b.n	8001704 <_read+0x8>

08001718 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001718:	b570      	push	{r4, r5, r6, lr}
 800171a:	460d      	mov	r5, r1
 800171c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800171e:	460e      	mov	r6, r1
 8001720:	1b73      	subs	r3, r6, r5
 8001722:	429c      	cmp	r4, r3
 8001724:	dc01      	bgt.n	800172a <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001726:	4620      	mov	r0, r4
 8001728:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 800172a:	f816 0b01 	ldrb.w	r0, [r6], #1
 800172e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001732:	e7f5      	b.n	8001720 <_write+0x8>

08001734 <_close>:

int _close(int file)
{
	return -1;
}
 8001734:	f04f 30ff 	mov.w	r0, #4294967295
 8001738:	4770      	bx	lr

0800173a <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 800173a:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800173e:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001740:	2000      	movs	r0, #0
 8001742:	4770      	bx	lr

08001744 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001744:	2001      	movs	r0, #1
 8001746:	4770      	bx	lr

08001748 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001748:	2000      	movs	r0, #0
 800174a:	4770      	bx	lr

0800174c <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 800174c:	4a0a      	ldr	r2, [pc, #40]	@ (8001778 <_sbrk+0x2c>)
 800174e:	6811      	ldr	r1, [r2, #0]
{
 8001750:	b508      	push	{r3, lr}
 8001752:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001754:	b909      	cbnz	r1, 800175a <_sbrk+0xe>
		heap_end = &end;
 8001756:	4909      	ldr	r1, [pc, #36]	@ (800177c <_sbrk+0x30>)
 8001758:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 800175a:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 800175c:	4669      	mov	r1, sp
 800175e:	4403      	add	r3, r0
 8001760:	428b      	cmp	r3, r1
 8001762:	d906      	bls.n	8001772 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001764:	f024 f850 	bl	8025808 <__errno>
 8001768:	230c      	movs	r3, #12
 800176a:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 800176c:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001770:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001772:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8001774:	e7fc      	b.n	8001770 <_sbrk+0x24>
 8001776:	bf00      	nop
 8001778:	200005dc 	.word	0x200005dc
 800177c:	20015f78 	.word	0x20015f78

08001780 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8001780:	4770      	bx	lr

08001782 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001782:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 8001784:	f000 fdbe 	bl	8002304 <touchgfx_components_init>
    touchgfx_init();
}
 8001788:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 800178c:	f000 bd40 	b.w	8002210 <touchgfx_init>

08001790 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 8001790:	f000 bdba 	b.w	8002308 <touchgfx_taskEntry>

08001794 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001794:	4770      	bx	lr

08001796 <_ZN20STM32TouchControllerD0Ev>:
 8001796:	b510      	push	{r4, lr}
 8001798:	2104      	movs	r1, #4
 800179a:	4604      	mov	r4, r0
 800179c:	f022 fe4d 	bl	802443a <_ZdlPvj>
 80017a0:	4620      	mov	r0, r4
 80017a2:	bd10      	pop	{r4, pc}

080017a4 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80017a4:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80017a6:	4b0c      	ldr	r3, [pc, #48]	@ (80017d8 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80017a8:	4c0c      	ldr	r4, [pc, #48]	@ (80017dc <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80017aa:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80017ac:	4b0c      	ldr	r3, [pc, #48]	@ (80017e0 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80017ae:	2082      	movs	r0, #130	@ 0x82
    TsYBoundary = YSize;
 80017b0:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80017b2:	6863      	ldr	r3, [r4, #4]
 80017b4:	4798      	blx	r3
 80017b6:	f640 0311 	movw	r3, #2065	@ 0x811
 80017ba:	4298      	cmp	r0, r3
 80017bc:	d10a      	bne.n	80017d4 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80017be:	4d09      	ldr	r5, [pc, #36]	@ (80017e4 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 80017c0:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 80017c2:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 80017c4:	2082      	movs	r0, #130	@ 0x82
 80017c6:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 80017c8:	682b      	ldr	r3, [r5, #0]
 80017ca:	2082      	movs	r0, #130	@ 0x82
 80017cc:	68db      	ldr	r3, [r3, #12]
 80017ce:	4798      	blx	r3
 80017d0:	2000      	movs	r0, #0
    }

    return ret;
}
 80017d2:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 80017d4:	2001      	movs	r0, #1
 80017d6:	e7fc      	b.n	80017d2 <_Z11BSP_TS_Inittt+0x2e>
 80017d8:	200005ea 	.word	0x200005ea
 80017dc:	2000004c 	.word	0x2000004c
 80017e0:	200005e8 	.word	0x200005e8
 80017e4:	200005ec 	.word	0x200005ec

080017e8 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 80017e8:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80017ec:	20f0      	movs	r0, #240	@ 0xf0
 80017ee:	f7ff bfd9 	b.w	80017a4 <_Z11BSP_TS_Inittt>
	...

080017f4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 80017f4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 80017f6:	4d39      	ldr	r5, [pc, #228]	@ (80018dc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe8>)
 80017f8:	682b      	ldr	r3, [r5, #0]
{
 80017fa:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 80017fc:	691b      	ldr	r3, [r3, #16]
 80017fe:	2082      	movs	r0, #130	@ 0x82
 8001800:	4798      	blx	r3
 8001802:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8001804:	2800      	cmp	r0, #0
 8001806:	d04e      	beq.n	80018a6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb2>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8001808:	682b      	ldr	r3, [r5, #0]
 800180a:	f10d 0206 	add.w	r2, sp, #6
 800180e:	695b      	ldr	r3, [r3, #20]
 8001810:	a901      	add	r1, sp, #4
 8001812:	2082      	movs	r0, #130	@ 0x82
 8001814:	4798      	blx	r3

        if (isRevD)
 8001816:	4b32      	ldr	r3, [pc, #200]	@ (80018e0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xec>)
 8001818:	781b      	ldrb	r3, [r3, #0]
 800181a:	2b00      	cmp	r3, #0
 800181c:	d04b      	beq.n	80018b6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc2>
        {
            //Ensures the coordinates are within the screen
            if (y > 3700)
 800181e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8001822:	f640 6374 	movw	r3, #3700	@ 0xe74
 8001826:	429a      	cmp	r2, r3
 8001828:	d93f      	bls.n	80018aa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb6>
            {
                y = 3700;
 800182a:	f8ad 3006 	strh.w	r3, [sp, #6]

            /* Y value first correction */
            y -= 180;

            /* Y value second correction */
            y = 3520 - y;
 800182e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8001832:	1a9b      	subs	r3, r3, r2
        }
        else
        {
            /* Y value first correction */
            y -= 360;
 8001834:	b29b      	uxth	r3, r3

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8001836:	2b0a      	cmp	r3, #10
 8001838:	d942      	bls.n	80018c0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xcc>
        yr = y / 11;
 800183a:	220b      	movs	r2, #11
 800183c:	fbb3 f3f2 	udiv	r3, r3, r2
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8001840:	4a28      	ldr	r2, [pc, #160]	@ (80018e4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf0>)
 8001842:	8812      	ldrh	r2, [r2, #0]
 8001844:	4293      	cmp	r3, r2
 8001846:	d901      	bls.n	800184c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
        {
            yr = TsYBoundary - 1;
 8001848:	3a01      	subs	r2, #1
 800184a:	b293      	uxth	r3, r2
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800184c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8001850:	4825      	ldr	r0, [pc, #148]	@ (80018e8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf4>)
 8001852:	f640 31b8 	movw	r1, #3000	@ 0xbb8
 8001856:	428a      	cmp	r2, r1
 8001858:	d834      	bhi.n	80018c4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>
        {
            x = 3870 - x;
 800185a:	f5c2 6271 	rsb	r2, r2, #3856	@ 0xf10
 800185e:	320e      	adds	r2, #14
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001860:	6801      	ldr	r1, [r0, #0]
            x = 3870 - x;
 8001862:	b292      	uxth	r2, r2
        xr = x / 15;
 8001864:	250f      	movs	r5, #15
 8001866:	fbb2 f2f5 	udiv	r2, r2, r5
        else if (xr > TsXBoundary)
 800186a:	4d20      	ldr	r5, [pc, #128]	@ (80018ec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf8>)
 800186c:	882d      	ldrh	r5, [r5, #0]
 800186e:	42aa      	cmp	r2, r5
            xr = TsXBoundary - 1;
 8001870:	bf84      	itt	hi
 8001872:	f105 35ff 	addhi.w	r5, r5, #4294967295
 8001876:	b2aa      	uxthhi	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001878:	428a      	cmp	r2, r1
 800187a:	4615      	mov	r5, r2
 800187c:	b28e      	uxth	r6, r1
 800187e:	d92a      	bls.n	80018d6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe2>
 8001880:	1b92      	subs	r2, r2, r6
 8001882:	b291      	uxth	r1, r2
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001884:	4e1a      	ldr	r6, [pc, #104]	@ (80018f0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xfc>)
 8001886:	6837      	ldr	r7, [r6, #0]
 8001888:	42bb      	cmp	r3, r7
 800188a:	b2ba      	uxth	r2, r7
 800188c:	bf8c      	ite	hi
 800188e:	1a9a      	subhi	r2, r3, r2
 8001890:	1ad2      	subls	r2, r2, r3
 8001892:	b292      	uxth	r2, r2

        if (xDiff + yDiff > 5)
 8001894:	4411      	add	r1, r2
 8001896:	2905      	cmp	r1, #5
        {
            _x = x;
 8001898:	bfc4      	itt	gt
 800189a:	6005      	strgt	r5, [r0, #0]
            _y = y;
 800189c:	6033      	strgt	r3, [r6, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 800189e:	6803      	ldr	r3, [r0, #0]
 80018a0:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80018a2:	6833      	ldr	r3, [r6, #0]
 80018a4:	80a3      	strh	r3, [r4, #4]
    }
}
 80018a6:	b003      	add	sp, #12
 80018a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
            else if (y < 180)
 80018aa:	2ab3      	cmp	r2, #179	@ 0xb3
                y = 180;
 80018ac:	bf9c      	itt	ls
 80018ae:	22b4      	movls	r2, #180	@ 0xb4
 80018b0:	f8ad 2006 	strhls.w	r2, [sp, #6]
 80018b4:	e7bb      	b.n	800182e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x3a>
            y -= 360;
 80018b6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80018ba:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 80018be:	e7b9      	b.n	8001834 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x40>
            yr = 0;
 80018c0:	2300      	movs	r3, #0
 80018c2:	e7c3      	b.n	800184c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            x = 3800 - x;
 80018c4:	f5c2 626d 	rsb	r2, r2, #3792	@ 0xed0
 80018c8:	3208      	adds	r2, #8
 80018ca:	b292      	uxth	r2, r2
        if (xr <= 0)
 80018cc:	2a0e      	cmp	r2, #14
        xDiff = x > _x ? (x - _x) : (_x - x);
 80018ce:	6801      	ldr	r1, [r0, #0]
        if (xr <= 0)
 80018d0:	d8c8      	bhi.n	8001864 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x70>
        xDiff = x > _x ? (x - _x) : (_x - x);
 80018d2:	2500      	movs	r5, #0
            xr = 0;
 80018d4:	462a      	mov	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 80018d6:	1a89      	subs	r1, r1, r2
 80018d8:	b289      	uxth	r1, r1
 80018da:	e7d3      	b.n	8001884 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x90>
 80018dc:	200005ec 	.word	0x200005ec
 80018e0:	200003ac 	.word	0x200003ac
 80018e4:	200005e8 	.word	0x200005e8
 80018e8:	200005e4 	.word	0x200005e4
 80018ec:	200005ea 	.word	0x200005ea
 80018f0:	200005e0 	.word	0x200005e0

080018f4 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 80018f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 80018f6:	4668      	mov	r0, sp
{
 80018f8:	460d      	mov	r5, r1
 80018fa:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 80018fc:	f7ff ff7a 	bl	80017f4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8001900:	f8bd 0000 	ldrh.w	r0, [sp]
 8001904:	b130      	cbz	r0, 8001914 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8001906:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800190a:	602b      	str	r3, [r5, #0]
        y = state.Y;
 800190c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001910:	6023      	str	r3, [r4, #0]
        return true;
 8001912:	2001      	movs	r0, #1
}
 8001914:	b003      	add	sp, #12
 8001916:	bd30      	pop	{r4, r5, pc}

08001918 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001918:	2803      	cmp	r0, #3
 800191a:	d821      	bhi.n	8001960 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 800191c:	e8df f000 	tbb	[pc, r0]
 8001920:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8001924:	4b0f      	ldr	r3, [pc, #60]	@ (8001964 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8001926:	681a      	ldr	r2, [r3, #0]
 8001928:	fab2 f282 	clz	r2, r2
 800192c:	0952      	lsrs	r2, r2, #5
 800192e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8001930:	480d      	ldr	r0, [pc, #52]	@ (8001968 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8001932:	f006 b881 	b.w	8007a38 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8001936:	4b0b      	ldr	r3, [pc, #44]	@ (8001964 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8001938:	685a      	ldr	r2, [r3, #4]
 800193a:	fab2 f282 	clz	r2, r2
 800193e:	0952      	lsrs	r2, r2, #5
 8001940:	2108      	movs	r1, #8
 8001942:	e7f5      	b.n	8001930 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8001944:	4b07      	ldr	r3, [pc, #28]	@ (8001964 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8001946:	689a      	ldr	r2, [r3, #8]
 8001948:	fab2 f282 	clz	r2, r2
 800194c:	0952      	lsrs	r2, r2, #5
 800194e:	2110      	movs	r1, #16
 8001950:	e7ee      	b.n	8001930 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8001952:	4b04      	ldr	r3, [pc, #16]	@ (8001964 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8001954:	68da      	ldr	r2, [r3, #12]
 8001956:	fab2 f282 	clz	r2, r2
 800195a:	0952      	lsrs	r2, r2, #5
 800195c:	2120      	movs	r1, #32
 800195e:	e7e7      	b.n	8001930 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8001960:	4770      	bx	lr
 8001962:	bf00      	nop
 8001964:	200005f0 	.word	0x200005f0
 8001968:	40021000 	.word	0x40021000

0800196c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800196c:	2803      	cmp	r0, #3
 800196e:	d821      	bhi.n	80019b4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 8001970:	e8df f000 	tbb	[pc, r0]
 8001974:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001978:	4b0f      	ldr	r3, [pc, #60]	@ (80019b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 800197a:	681a      	ldr	r2, [r3, #0]
 800197c:	3a00      	subs	r2, #0
 800197e:	bf18      	it	ne
 8001980:	2201      	movne	r2, #1
 8001982:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8001984:	480d      	ldr	r0, [pc, #52]	@ (80019bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8001986:	f006 b857 	b.w	8007a38 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 800198a:	4b0b      	ldr	r3, [pc, #44]	@ (80019b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 800198c:	685a      	ldr	r2, [r3, #4]
 800198e:	3a00      	subs	r2, #0
 8001990:	bf18      	it	ne
 8001992:	2201      	movne	r2, #1
 8001994:	2108      	movs	r1, #8
 8001996:	e7f5      	b.n	8001984 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001998:	4b07      	ldr	r3, [pc, #28]	@ (80019b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 800199a:	689a      	ldr	r2, [r3, #8]
 800199c:	3a00      	subs	r2, #0
 800199e:	bf18      	it	ne
 80019a0:	2201      	movne	r2, #1
 80019a2:	2110      	movs	r1, #16
 80019a4:	e7ee      	b.n	8001984 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80019a6:	4b04      	ldr	r3, [pc, #16]	@ (80019b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80019a8:	68da      	ldr	r2, [r3, #12]
 80019aa:	3a00      	subs	r2, #0
 80019ac:	bf18      	it	ne
 80019ae:	2201      	movne	r2, #1
 80019b0:	2120      	movs	r1, #32
 80019b2:	e7e7      	b.n	8001984 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80019b4:	4770      	bx	lr
 80019b6:	bf00      	nop
 80019b8:	200005f0 	.word	0x200005f0
 80019bc:	40021000 	.word	0x40021000

080019c0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80019c0:	2803      	cmp	r0, #3
 80019c2:	d80d      	bhi.n	80019e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 80019c4:	e8df f000 	tbb	[pc, r0]
 80019c8:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80019cc:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80019ce:	4805      	ldr	r0, [pc, #20]	@ (80019e4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 80019d0:	f006 b837 	b.w	8007a42 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80019d4:	2108      	movs	r1, #8
 80019d6:	e7fa      	b.n	80019ce <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80019d8:	2110      	movs	r1, #16
 80019da:	e7f8      	b.n	80019ce <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80019dc:	2120      	movs	r1, #32
 80019de:	e7f6      	b.n	80019ce <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 80019e0:	4770      	bx	lr
 80019e2:	bf00      	nop
 80019e4:	40021000 	.word	0x40021000

080019e8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80019e8:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80019ea:	2803      	cmp	r0, #3
 80019ec:	d811      	bhi.n	8001a12 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 80019ee:	e8df f000 	tbb	[pc, r0]
 80019f2:	0a02      	.short	0x0a02
 80019f4:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80019f6:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80019f8:	4807      	ldr	r0, [pc, #28]	@ (8001a18 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 80019fa:	f006 f817 	bl	8007a2c <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80019fe:	1e43      	subs	r3, r0, #1
 8001a00:	4258      	negs	r0, r3
 8001a02:	4158      	adcs	r0, r3
 8001a04:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8001a06:	2108      	movs	r1, #8
 8001a08:	e7f6      	b.n	80019f8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001a0a:	2110      	movs	r1, #16
 8001a0c:	e7f4      	b.n	80019f8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001a0e:	2120      	movs	r1, #32
 8001a10:	e7f2      	b.n	80019f8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8001a12:	2000      	movs	r0, #0
 8001a14:	e7f3      	b.n	80019fe <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8001a16:	bf00      	nop
 8001a18:	40021000 	.word	0x40021000

08001a1c <_ZN8touchgfx4GPIO4initEv>:
{
 8001a1c:	b570      	push	{r4, r5, r6, lr}
 8001a1e:	4d08      	ldr	r5, [pc, #32]	@ (8001a40 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8001a20:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8001a22:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8001a24:	b2e0      	uxtb	r0, r4
 8001a26:	f7ff ffdf 	bl	80019e8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8001a2a:	b118      	cbz	r0, 8001a34 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8001a2c:	682b      	ldr	r3, [r5, #0]
 8001a2e:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8001a30:	bf18      	it	ne
 8001a32:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8001a34:	3401      	adds	r4, #1
 8001a36:	2c05      	cmp	r4, #5
 8001a38:	f105 0504 	add.w	r5, r5, #4
 8001a3c:	d1f2      	bne.n	8001a24 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8001a3e:	bd70      	pop	{r4, r5, r6, pc}
 8001a40:	200005f0 	.word	0x200005f0

08001a44 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8001a44:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8001a46:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 8001a4a:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 8001a4e:	4770      	bx	lr

08001a50 <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
 8001a50:	4770      	bx	lr

08001a52 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8001a52:	2000      	movs	r0, #0
 8001a54:	4770      	bx	lr
	...

08001a58 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001a58:	4b03      	ldr	r3, [pc, #12]	@ (8001a68 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001a5a:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001a5c:	3900      	subs	r1, #0
 8001a5e:	bf18      	it	ne
 8001a60:	2101      	movne	r1, #1
 8001a62:	7019      	strb	r1, [r3, #0]
    }
 8001a64:	4770      	bx	lr
 8001a66:	bf00      	nop
 8001a68:	20015237 	.word	0x20015237

08001a6c <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
 8001a6c:	4770      	bx	lr

08001a6e <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001a6e:	2000      	movs	r0, #0
 8001a70:	4770      	bx	lr

08001a72 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001a72:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8001a74:	b10b      	cbz	r3, 8001a7a <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001a76:	4608      	mov	r0, r1
 8001a78:	4718      	bx	r3
        }
    }
 8001a7a:	4770      	bx	lr

08001a7c <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001a7c:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8001a80:	4770      	bx	lr

08001a82 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001a82:	6840      	ldr	r0, [r0, #4]
 8001a84:	6803      	ldr	r3, [r0, #0]
 8001a86:	699b      	ldr	r3, [r3, #24]
 8001a88:	4718      	bx	r3

08001a8a <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
 8001a8a:	4770      	bx	lr

08001a8c <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001a8c:	4770      	bx	lr

08001a8e <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001a8e:	4770      	bx	lr

08001a90 <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
 8001a90:	4770      	bx	lr

08001a92 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001a92:	4770      	bx	lr

08001a94 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA_NOLOAD("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE_NOLOAD("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8001a94:	b510      	push	{r4, lr}
 8001a96:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001a98:	f000 fd4c 	bl	8002534 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8001a9c:	6823      	ldr	r3, [r4, #0]
 8001a9e:	4903      	ldr	r1, [pc, #12]	@ (8001aac <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8001aa0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8001aa4:	4620      	mov	r0, r4
}
 8001aa6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8001aaa:	4718      	bx	r3
 8001aac:	d0000000 	.word	0xd0000000

08001ab0 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8001ab0:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8001ab2:	6803      	ldr	r3, [r0, #0]
{
 8001ab4:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8001ab6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8001aba:	4798      	blx	r3
    enableInterrupts();
 8001abc:	6823      	ldr	r3, [r4, #0]
 8001abe:	4620      	mov	r0, r4
 8001ac0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8001ac2:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8001ac4:	f000 f8ec 	bl	8001ca0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001ac8:	6823      	ldr	r3, [r4, #0]
 8001aca:	4620      	mov	r0, r4
 8001acc:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8001ace:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8001ad0:	2029      	movs	r0, #41	@ 0x29
 8001ad2:	f7ff faa7 	bl	8001024 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8001ad6:	f000 f8e3 	bl	8001ca0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001ada:	6823      	ldr	r3, [r4, #0]
 8001adc:	4620      	mov	r0, r4
 8001ade:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8001ae0:	4798      	blx	r3
    for (;;)
 8001ae2:	e7f8      	b.n	8001ad6 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08001ae4 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001ae4:	b510      	push	{r4, lr}
 8001ae6:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001ae8:	f00b fa4a 	bl	800cf80 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001aec:	6823      	ldr	r3, [r4, #0]
 8001aee:	4620      	mov	r0, r4
 8001af0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
    }
 8001af4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001af8:	4718      	bx	r3

08001afa <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001afa:	f000 bcff 	b.w	80024fc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08001afe <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001afe:	f000 bd03 	b.w	8002508 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001b02 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001b02:	f000 bd35 	b.w	8002570 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08001b06 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001b06:	f000 bcd5 	b.w	80024b4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001b0a <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001b0a:	f000 bd45 	b.w	8002598 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001b0e <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001b0e:	f000 bd4d 	b.w	80025ac <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08001b12 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001b12:	f000 bcd9 	b.w	80024c8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001b16 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001b16:	f00a bc61 	b.w	800c3dc <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001b1a <_ZN11TouchGFXHALD0Ev>:
 8001b1a:	b510      	push	{r4, lr}
 8001b1c:	2184      	movs	r1, #132	@ 0x84
 8001b1e:	4604      	mov	r4, r0
 8001b20:	f022 fc8b 	bl	802443a <_ZdlPvj>
 8001b24:	4620      	mov	r0, r4
 8001b26:	bd10      	pop	{r4, pc}

08001b28 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8001b28:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8001b2a:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 8001b2e:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 8001b32:	4b0c      	ldr	r3, [pc, #48]	@ (8001b64 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8001b34:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8001b36:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001b38:	d009      	beq.n	8001b4e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001b3a:	b93a      	cbnz	r2, 8001b4c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001b3c:	4a0a      	ldr	r2, [pc, #40]	@ (8001b68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001b3e:	490b      	ldr	r1, [pc, #44]	@ (8001b6c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001b40:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001b42:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8001b44:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001b46:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8001b48:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8001b4a:	701a      	strb	r2, [r3, #0]
    }
 8001b4c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8001b4e:	2a00      	cmp	r2, #0
 8001b50:	d0fc      	beq.n	8001b4c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001b52:	4a05      	ldr	r2, [pc, #20]	@ (8001b68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001b54:	4905      	ldr	r1, [pc, #20]	@ (8001b6c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001b56:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001b58:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001b5a:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001b5c:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8001b5e:	2200      	movs	r2, #0
 8001b60:	e7f3      	b.n	8001b4a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8001b62:	bf00      	nop
 8001b64:	20015230 	.word	0x20015230
 8001b68:	2001522c 	.word	0x2001522c
 8001b6c:	2001522e 	.word	0x2001522e

08001b70 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8001b70:	b570      	push	{r4, r5, r6, lr}
 8001b72:	460d      	mov	r5, r1
 8001b74:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001b76:	b935      	cbnz	r5, 8001b86 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001b78:	4b09      	ldr	r3, [pc, #36]	@ (8001ba0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8001b7a:	4a0a      	ldr	r2, [pc, #40]	@ (8001ba4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8001b7c:	480a      	ldr	r0, [pc, #40]	@ (8001ba8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8001b7e:	f240 21ff 	movw	r1, #767	@ 0x2ff
 8001b82:	f023 fb97 	bl	80252b4 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001b86:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8001b8a:	4b08      	ldr	r3, [pc, #32]	@ (8001bac <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001b8c:	3a00      	subs	r2, #0
 8001b8e:	bf18      	it	ne
 8001b90:	2201      	movne	r2, #1
 8001b92:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001b94:	6803      	ldr	r3, [r0, #0]
    }
 8001b96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8001b9a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8001b9e:	4718      	bx	r3
 8001ba0:	08026425 	.word	0x08026425
 8001ba4:	0802645d 	.word	0x0802645d
 8001ba8:	080264ab 	.word	0x080264ab
 8001bac:	20015236 	.word	0x20015236

08001bb0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001bb0:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8001bb2:	4b09      	ldr	r3, [pc, #36]	@ (8001bd8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001bb4:	881b      	ldrh	r3, [r3, #0]
 8001bb6:	428b      	cmp	r3, r1
 8001bb8:	d803      	bhi.n	8001bc2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001bba:	4b08      	ldr	r3, [pc, #32]	@ (8001bdc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001bbc:	881b      	ldrh	r3, [r3, #0]
 8001bbe:	4293      	cmp	r3, r2
 8001bc0:	d905      	bls.n	8001bce <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8001bc2:	4b07      	ldr	r3, [pc, #28]	@ (8001be0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001bc4:	4a07      	ldr	r2, [pc, #28]	@ (8001be4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001bc6:	4808      	ldr	r0, [pc, #32]	@ (8001be8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001bc8:	21a3      	movs	r1, #163	@ 0xa3
 8001bca:	f023 fb73 	bl	80252b4 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8001bce:	4b07      	ldr	r3, [pc, #28]	@ (8001bec <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8001bd0:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8001bd2:	4b07      	ldr	r3, [pc, #28]	@ (8001bf0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8001bd4:	801a      	strh	r2, [r3, #0]
    }
 8001bd6:	bd08      	pop	{r3, pc}
 8001bd8:	2001522c 	.word	0x2001522c
 8001bdc:	2001522e 	.word	0x2001522e
 8001be0:	080264f0 	.word	0x080264f0
 8001be4:	08026553 	.word	0x08026553
 8001be8:	080264ab 	.word	0x080264ab
 8001bec:	20015232 	.word	0x20015232
 8001bf0:	20015234 	.word	0x20015234

08001bf4 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8001bf4:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8001bf6:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8001bfa:	b118      	cbz	r0, 8001c04 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8001bfc:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 8001bfe:	6803      	ldr	r3, [r0, #0]
 8001c00:	681b      	ldr	r3, [r3, #0]
 8001c02:	4718      	bx	r3
    }
 8001c04:	4770      	bx	lr
	...

08001c08 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001c08:	2101      	movs	r1, #1
{
 8001c0a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001c0c:	2200      	movs	r2, #0
 8001c0e:	4608      	mov	r0, r1
 8001c10:	f007 ffb6 	bl	8009b80 <osSemaphoreNew>
 8001c14:	4b0a      	ldr	r3, [pc, #40]	@ (8001c40 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001c16:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001c18:	b928      	cbnz	r0, 8001c26 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8001c1a:	4b0a      	ldr	r3, [pc, #40]	@ (8001c44 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001c1c:	4a0a      	ldr	r2, [pc, #40]	@ (8001c48 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001c1e:	2128      	movs	r1, #40	@ 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001c20:	480a      	ldr	r0, [pc, #40]	@ (8001c4c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001c22:	f023 fb47 	bl	80252b4 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001c26:	2200      	movs	r2, #0
 8001c28:	2104      	movs	r1, #4
 8001c2a:	2001      	movs	r0, #1
 8001c2c:	f008 f850 	bl	8009cd0 <osMessageQueueNew>
 8001c30:	4b07      	ldr	r3, [pc, #28]	@ (8001c50 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001c32:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001c34:	b918      	cbnz	r0, 8001c3e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001c36:	4b07      	ldr	r3, [pc, #28]	@ (8001c54 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001c38:	4a03      	ldr	r2, [pc, #12]	@ (8001c48 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001c3a:	212c      	movs	r1, #44	@ 0x2c
 8001c3c:	e7f0      	b.n	8001c20 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8001c3e:	bd08      	pop	{r3, pc}
 8001c40:	20000604 	.word	0x20000604
 8001c44:	08026596 	.word	0x08026596
 8001c48:	080265df 	.word	0x080265df
 8001c4c:	0802660e 	.word	0x0802660e
 8001c50:	20000600 	.word	0x20000600
 8001c54:	08026652 	.word	0x08026652

08001c58 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001c58:	4b02      	ldr	r3, [pc, #8]	@ (8001c64 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8001c5a:	f04f 31ff 	mov.w	r1, #4294967295
 8001c5e:	6818      	ldr	r0, [r3, #0]
 8001c60:	f007 bfd8 	b.w	8009c14 <osSemaphoreAcquire>
 8001c64:	20000604 	.word	0x20000604

08001c68 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001c68:	4b01      	ldr	r3, [pc, #4]	@ (8001c70 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8001c6a:	6818      	ldr	r0, [r3, #0]
 8001c6c:	f007 bffe 	b.w	8009c6c <osSemaphoreRelease>
 8001c70:	20000604 	.word	0x20000604

08001c74 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8001c74:	4b02      	ldr	r3, [pc, #8]	@ (8001c80 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8001c76:	2100      	movs	r1, #0
 8001c78:	6818      	ldr	r0, [r3, #0]
 8001c7a:	f007 bfcb 	b.w	8009c14 <osSemaphoreAcquire>
 8001c7e:	bf00      	nop
 8001c80:	20000604 	.word	0x20000604

08001c84 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8001c84:	f7ff bff0 	b.w	8001c68 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08001c88 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001c88:	4803      	ldr	r0, [pc, #12]	@ (8001c98 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8001c8a:	4904      	ldr	r1, [pc, #16]	@ (8001c9c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001c8c:	6800      	ldr	r0, [r0, #0]
 8001c8e:	2300      	movs	r3, #0
 8001c90:	461a      	mov	r2, r3
 8001c92:	f008 b858 	b.w	8009d46 <osMessageQueuePut>
 8001c96:	bf00      	nop
 8001c98:	20000600 	.word	0x20000600
 8001c9c:	2000000c 	.word	0x2000000c

08001ca0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8001ca0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8001ca2:	4c08      	ldr	r4, [pc, #32]	@ (8001cc4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8001ca4:	2300      	movs	r3, #0
 8001ca6:	461a      	mov	r2, r3
 8001ca8:	a901      	add	r1, sp, #4
 8001caa:	6820      	ldr	r0, [r4, #0]
 8001cac:	f008 f87c 	bl	8009da8 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8001cb0:	6820      	ldr	r0, [r4, #0]
 8001cb2:	f04f 33ff 	mov.w	r3, #4294967295
 8001cb6:	2200      	movs	r2, #0
 8001cb8:	a901      	add	r1, sp, #4
 8001cba:	f008 f875 	bl	8009da8 <osMessageQueueGet>
}
 8001cbe:	b002      	add	sp, #8
 8001cc0:	bd10      	pop	{r4, pc}
 8001cc2:	bf00      	nop
 8001cc4:	20000600 	.word	0x20000600

08001cc8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001cc8:	6803      	ldr	r3, [r0, #0]
 8001cca:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001ccc:	4718      	bx	r3

08001cce <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8001cce:	2001      	movs	r0, #1
 8001cd0:	4770      	bx	lr

08001cd2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8001cd2:	6803      	ldr	r3, [r0, #0]
 8001cd4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001cd6:	4718      	bx	r3

08001cd8 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
 8001cd8:	e7fe      	b.n	8001cd8 <DMA2D_XferErrorCallback>

08001cda <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001cda:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8001cde:	4770      	bx	lr

08001ce0 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8001ce0:	4b05      	ldr	r3, [pc, #20]	@ (8001cf8 <_ZN8STM32DMAD1Ev+0x18>)
 8001ce2:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001ce4:	4b05      	ldr	r3, [pc, #20]	@ (8001cfc <_ZN8STM32DMAD1Ev+0x1c>)
 8001ce6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001cea:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001cee:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001cf2:	f3bf 8f6f 	isb	sy
}
 8001cf6:	4770      	bx	lr
 8001cf8:	08027490 	.word	0x08027490
 8001cfc:	e000e100 	.word	0xe000e100

08001d00 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001d00:	b510      	push	{r4, lr}
 8001d02:	4604      	mov	r4, r0
}
 8001d04:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8001d08:	f7ff ffea 	bl	8001ce0 <_ZN8STM32DMAD1Ev>
 8001d0c:	4620      	mov	r0, r4
 8001d0e:	f022 fb94 	bl	802443a <_ZdlPvj>
 8001d12:	4620      	mov	r0, r4
 8001d14:	bd10      	pop	{r4, pc}
	...

08001d18 <_ZN8STM32DMA10initializeEv>:
{
 8001d18:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001d1a:	2300      	movs	r3, #0
 8001d1c:	9301      	str	r3, [sp, #4]
 8001d1e:	4b0e      	ldr	r3, [pc, #56]	@ (8001d58 <_ZN8STM32DMA10initializeEv+0x40>)
 8001d20:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001d22:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8001d26:	631a      	str	r2, [r3, #48]	@ 0x30
 8001d28:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001d2a:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 8001d2e:	9201      	str	r2, [sp, #4]
 8001d30:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8001d32:	691a      	ldr	r2, [r3, #16]
 8001d34:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8001d38:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8001d3a:	691a      	ldr	r2, [r3, #16]
 8001d3c:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8001d40:	611a      	str	r2, [r3, #16]
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8001d42:	4b06      	ldr	r3, [pc, #24]	@ (8001d5c <_ZN8STM32DMA10initializeEv+0x44>)
 8001d44:	4a06      	ldr	r2, [pc, #24]	@ (8001d60 <_ZN8STM32DMA10initializeEv+0x48>)
 8001d46:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8001d48:	4a06      	ldr	r2, [pc, #24]	@ (8001d64 <_ZN8STM32DMA10initializeEv+0x4c>)
 8001d4a:	615a      	str	r2, [r3, #20]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001d4c:	4b06      	ldr	r3, [pc, #24]	@ (8001d68 <_ZN8STM32DMA10initializeEv+0x50>)
 8001d4e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001d52:	609a      	str	r2, [r3, #8]
}
 8001d54:	b002      	add	sp, #8
 8001d56:	4770      	bx	lr
 8001d58:	40023800 	.word	0x40023800
 8001d5c:	20000548 	.word	0x20000548
 8001d60:	08001fb9 	.word	0x08001fb9
 8001d64:	08001cd9 	.word	0x08001cd9
 8001d68:	e000e100 	.word	0xe000e100

08001d6c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8001d6c:	b508      	push	{r3, lr}
    switch (format)
 8001d6e:	280a      	cmp	r0, #10
 8001d70:	d809      	bhi.n	8001d86 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8001d72:	e8df f000 	tbb	[pc, r0]
 8001d76:	1006      	.short	0x1006
 8001d78:	0808080e 	.word	0x0808080e
 8001d7c:	10101008 	.word	0x10101008
 8001d80:	10          	.byte	0x10
 8001d81:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8001d82:	2002      	movs	r0, #2
}
 8001d84:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8001d86:	4b05      	ldr	r3, [pc, #20]	@ (8001d9c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8001d88:	4a05      	ldr	r2, [pc, #20]	@ (8001da0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8001d8a:	4806      	ldr	r0, [pc, #24]	@ (8001da4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8001d8c:	2190      	movs	r1, #144	@ 0x90
 8001d8e:	f023 fa91 	bl	80252b4 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8001d92:	2000      	movs	r0, #0
 8001d94:	e7f6      	b.n	8001d84 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8001d96:	2001      	movs	r0, #1
    return dma2dColorMode;
 8001d98:	e7f4      	b.n	8001d84 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8001d9a:	bf00      	nop
 8001d9c:	08026694 	.word	0x08026694
 8001da0:	080266af 	.word	0x080266af
 8001da4:	080266fa 	.word	0x080266fa

08001da8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8001da8:	b538      	push	{r3, r4, r5, lr}
 8001daa:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001dac:	7f88      	ldrb	r0, [r1, #30]
 8001dae:	f7ff ffdd 	bl	8001d6c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001db2:	8aa5      	ldrh	r5, [r4, #20]
 8001db4:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001db6:	4b16      	ldr	r3, [pc, #88]	@ (8001e10 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001db8:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001dba:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001dbc:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8001dc0:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001dc2:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001dc4:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001dc6:	1b52      	subs	r2, r2, r5
 8001dc8:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8001dca:	6825      	ldr	r5, [r4, #0]
 8001dcc:	2d08      	cmp	r5, #8
 8001dce:	d10e      	bne.n	8001dee <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001dd0:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001dd2:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001dd4:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001dd6:	7f20      	ldrb	r0, [r4, #28]
 8001dd8:	4a0e      	ldr	r2, [pc, #56]	@ (8001e14 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8001dda:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001dde:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8001de0:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001de2:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 8001de4:	4a0c      	ldr	r2, [pc, #48]	@ (8001e18 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001de6:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001de8:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8001dea:	601a      	str	r2, [r3, #0]
    }
}
 8001dec:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8001dee:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001df0:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8001df2:	611a      	str	r2, [r3, #16]
 8001df4:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8001df6:	0a0a      	lsrs	r2, r1, #8
 8001df8:	0948      	lsrs	r0, r1, #5
 8001dfa:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8001dfe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8001e02:	4302      	orrs	r2, r0
 8001e04:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8001e08:	430a      	orrs	r2, r1
 8001e0a:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8001e0c:	4a03      	ldr	r2, [pc, #12]	@ (8001e1c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8001e0e:	e7ec      	b.n	8001dea <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8001e10:	4002b000 	.word	0x4002b000
 8001e14:	00010009 	.word	0x00010009
 8001e18:	00022301 	.word	0x00022301
 8001e1c:	00032301 	.word	0x00032301

08001e20 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8001e20:	b508      	push	{r3, lr}
    switch (format)
 8001e22:	280b      	cmp	r0, #11
 8001e24:	d80b      	bhi.n	8001e3e <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8001e26:	e8df f000 	tbb	[pc, r0]
 8001e2a:	1206      	.short	0x1206
 8001e2c:	0a0a0a10 	.word	0x0a0a0a10
 8001e30:	0808080a 	.word	0x0808080a
 8001e34:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8001e36:	2002      	movs	r0, #2
}
 8001e38:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8001e3a:	2005      	movs	r0, #5
        break;
 8001e3c:	e7fc      	b.n	8001e38 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8001e3e:	4b05      	ldr	r3, [pc, #20]	@ (8001e54 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8001e40:	4a05      	ldr	r2, [pc, #20]	@ (8001e58 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8001e42:	4806      	ldr	r0, [pc, #24]	@ (8001e5c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8001e44:	216f      	movs	r1, #111	@ 0x6f
 8001e46:	f023 fa35 	bl	80252b4 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8001e4a:	2000      	movs	r0, #0
 8001e4c:	e7f4      	b.n	8001e38 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8001e4e:	2001      	movs	r0, #1
    return dma2dColorMode;
 8001e50:	e7f2      	b.n	8001e38 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8001e52:	bf00      	nop
 8001e54:	08026694 	.word	0x08026694
 8001e58:	0802673c 	.word	0x0802673c
 8001e5c:	080266fa 	.word	0x080266fa

08001e60 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8001e60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001e64:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8001e68:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001e6a:	4640      	mov	r0, r8
 8001e6c:	f7ff ffd8 	bl	8001e20 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001e70:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001e72:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001e74:	4638      	mov	r0, r7
 8001e76:	f7ff ffd3 	bl	8001e20 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8001e7a:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001e7c:	4638      	mov	r0, r7
 8001e7e:	f7ff ff75 	bl	8001d6c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001e82:	8aa1      	ldrh	r1, [r4, #20]
 8001e84:	8b62      	ldrh	r2, [r4, #26]
 8001e86:	4b44      	ldr	r3, [pc, #272]	@ (8001f98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001e88:	1a52      	subs	r2, r2, r1
 8001e8a:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001e8c:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001e8e:	8b22      	ldrh	r2, [r4, #24]
 8001e90:	1a52      	subs	r2, r2, r1
 8001e92:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001e94:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001e96:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001e98:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8001e9c:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001e9e:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001ea0:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001ea2:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001ea4:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 8001ea6:	6820      	ldr	r0, [r4, #0]
 8001ea8:	2880      	cmp	r0, #128	@ 0x80
 8001eaa:	d028      	beq.n	8001efe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8001eac:	7f22      	ldrb	r2, [r4, #28]
 8001eae:	d80f      	bhi.n	8001ed0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8001eb0:	2820      	cmp	r0, #32
 8001eb2:	d067      	beq.n	8001f84 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8001eb4:	2840      	cmp	r0, #64	@ 0x40
 8001eb6:	d065      	beq.n	8001f84 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8001eb8:	2804      	cmp	r0, #4
 8001eba:	d01a      	beq.n	8001ef2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001ebc:	4b36      	ldr	r3, [pc, #216]	@ (8001f98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001ebe:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001ec2:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001ec6:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001ec8:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001eca:	d061      	beq.n	8001f90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001ecc:	4a33      	ldr	r2, [pc, #204]	@ (8001f9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8001ece:	e044      	b.n	8001f5a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8001ed0:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8001ed4:	d004      	beq.n	8001ee0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 8001ed6:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8001eda:	d1ef      	bne.n	8001ebc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001edc:	4830      	ldr	r0, [pc, #192]	@ (8001fa0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8001ede:	e000      	b.n	8001ee2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001ee0:	4830      	ldr	r0, [pc, #192]	@ (8001fa4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001ee2:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 8001ee6:	61da      	str	r2, [r3, #28]
 8001ee8:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001eea:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001eec:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001eee:	6159      	str	r1, [r3, #20]
 8001ef0:	e032      	b.n	8001f58 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001ef2:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001ef6:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001efa:	61da      	str	r2, [r3, #28]
 8001efc:	e7f6      	b.n	8001eec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8001efe:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8001f00:	1d02      	adds	r2, r0, #4
 8001f02:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001f04:	7f22      	ldrb	r2, [r4, #28]
 8001f06:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001f0a:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8001f0e:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001f10:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001f12:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8001f14:	7801      	ldrb	r1, [r0, #0]
 8001f16:	b141      	cbz	r1, 8001f2a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8001f18:	2901      	cmp	r1, #1
 8001f1a:	d021      	beq.n	8001f60 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8001f1c:	4b22      	ldr	r3, [pc, #136]	@ (8001fa8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8001f1e:	4a23      	ldr	r2, [pc, #140]	@ (8001fac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8001f20:	4823      	ldr	r0, [pc, #140]	@ (8001fb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8001f22:	f44f 718d 	mov.w	r1, #282	@ 0x11a
 8001f26:	f023 f9c5 	bl	80252b4 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001f2a:	69da      	ldr	r2, [r3, #28]
 8001f2c:	8841      	ldrh	r1, [r0, #2]
 8001f2e:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8001f32:	3901      	subs	r1, #1
 8001f34:	f022 0210 	bic.w	r2, r2, #16
 8001f38:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001f3c:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8001f3e:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8001f40:	4b15      	ldr	r3, [pc, #84]	@ (8001f98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001f42:	69da      	ldr	r2, [r3, #28]
 8001f44:	f042 0220 	orr.w	r2, r2, #32
 8001f48:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8001f4a:	69da      	ldr	r2, [r3, #28]
 8001f4c:	0692      	lsls	r2, r2, #26
 8001f4e:	d4fc      	bmi.n	8001f4a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8001f50:	2210      	movs	r2, #16
 8001f52:	609a      	str	r2, [r3, #8]
            if (blend)
 8001f54:	2900      	cmp	r1, #0
 8001f56:	d0b9      	beq.n	8001ecc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001f58:	4a16      	ldr	r2, [pc, #88]	@ (8001fb4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001f5a:	601a      	str	r2, [r3, #0]
}
 8001f5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 8001f60:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001f64:	69da      	ldr	r2, [r3, #28]
 8001f66:	8840      	ldrh	r0, [r0, #2]
 8001f68:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8001f6c:	f100 30ff 	add.w	r0, r0, #4294967295
 8001f70:	f022 0210 	bic.w	r2, r2, #16
 8001f74:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8001f78:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8001f7c:	bf18      	it	ne
 8001f7e:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001f80:	61da      	str	r2, [r3, #28]
                break;
 8001f82:	e7dd      	b.n	8001f40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001f84:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001f88:	4b03      	ldr	r3, [pc, #12]	@ (8001f98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001f8a:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8001f8e:	e7b4      	b.n	8001efa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001f90:	f242 3201 	movw	r2, #8961	@ 0x2301
 8001f94:	e7e1      	b.n	8001f5a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8001f96:	bf00      	nop
 8001f98:	4002b000 	.word	0x4002b000
 8001f9c:	00012301 	.word	0x00012301
 8001fa0:	00020009 	.word	0x00020009
 8001fa4:	0002000a 	.word	0x0002000a
 8001fa8:	08026786 	.word	0x08026786
 8001fac:	080267a0 	.word	0x080267a0
 8001fb0:	080266fa 	.word	0x080266fa
 8001fb4:	00022301 	.word	0x00022301

08001fb8 <DMA2D_XferCpltCallback>:
        return instance;
 8001fb8:	4b02      	ldr	r3, [pc, #8]	@ (8001fc4 <DMA2D_XferCpltCallback+0xc>)
 8001fba:	681b      	ldr	r3, [r3, #0]
 8001fbc:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8001fbe:	6803      	ldr	r3, [r0, #0]
 8001fc0:	695b      	ldr	r3, [r3, #20]
 8001fc2:	4718      	bx	r3
 8001fc4:	20015238 	.word	0x20015238

08001fc8 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001fc8:	b570      	push	{r4, r5, r6, lr}
 8001fca:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001fcc:	4625      	mov	r5, r4
 8001fce:	4b0a      	ldr	r3, [pc, #40]	@ (8001ff8 <_ZN8STM32DMAC1Ev+0x30>)
 8001fd0:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001fd2:	2600      	movs	r6, #0
 8001fd4:	6060      	str	r0, [r4, #4]
 8001fd6:	7226      	strb	r6, [r4, #8]
 8001fd8:	7266      	strb	r6, [r4, #9]
 8001fda:	f845 3b20 	str.w	r3, [r5], #32
 8001fde:	2260      	movs	r2, #96	@ 0x60
 8001fe0:	4629      	mov	r1, r5
 8001fe2:	f00b f923 	bl	800d22c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8001fe6:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8001fea:	60ee      	str	r6, [r5, #12]
 8001fec:	3524      	adds	r5, #36	@ 0x24
 8001fee:	429d      	cmp	r5, r3
 8001ff0:	d1fb      	bne.n	8001fea <_ZN8STM32DMAC1Ev+0x22>
}
 8001ff2:	4620      	mov	r0, r4
 8001ff4:	bd70      	pop	{r4, r5, r6, pc}
 8001ff6:	bf00      	nop
 8001ff8:	08027490 	.word	0x08027490

08001ffc <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001ffc:	4b03      	ldr	r3, [pc, #12]	@ (800200c <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8001ffe:	681a      	ldr	r2, [r3, #0]
 8002000:	07d2      	lsls	r2, r2, #31
 8002002:	d4fc      	bmi.n	8001ffe <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8002004:	2223      	movs	r2, #35	@ 0x23
 8002006:	609a      	str	r2, [r3, #8]
}
 8002008:	4770      	bx	lr
 800200a:	bf00      	nop
 800200c:	4002b000 	.word	0x4002b000

08002010 <_ZN8touchgfx5paint9flushLineEPmi>:
 *
 * @brief Flushes decoded RGB pixels when rendering compressed images
 */
void flushLine(uint32_t* addr, int sizebytes)
{
}
 8002010:	4770      	bx	lr
	...

08002014 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8002014:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8002016:	4c0f      	ldr	r4, [pc, #60]	@ (8002054 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8002018:	6825      	ldr	r5, [r4, #0]
 800201a:	07ed      	lsls	r5, r5, #31
 800201c:	d4fc      	bmi.n	8002018 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800201e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8002020:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8002022:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8002024:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8002028:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 800202a:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 800202c:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800202e:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8002030:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
 8002032:	d00a      	beq.n	800204a <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8002034:	4908      	ldr	r1, [pc, #32]	@ (8002058 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002036:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8002038:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 800203c:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 800203e:	4b07      	ldr	r3, [pc, #28]	@ (800205c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8002040:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8002042:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8002044:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8002046:	6023      	str	r3, [r4, #0]
    }
}
 8002048:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 800204a:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 800204c:	9b03      	ldr	r3, [sp, #12]
 800204e:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8002050:	4b03      	ldr	r3, [pc, #12]	@ (8002060 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8002052:	e7f8      	b.n	8002046 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8002054:	4002b000 	.word	0x4002b000
 8002058:	00010009 	.word	0x00010009
 800205c:	00020001 	.word	0x00020001
 8002060:	00030001 	.word	0x00030001

08002064 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 8002064:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8002066:	4c0e      	ldr	r4, [pc, #56]	@ (80020a0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x3c>)
 8002068:	6825      	ldr	r5, [r4, #0]
 800206a:	07ed      	lsls	r5, r5, #31
 800206c:	d4fc      	bmi.n	8002068 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800206e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8002070:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8002072:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8002074:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8002078:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
 800207a:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 800207c:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800207e:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8002080:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 8002082:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
 8002084:	d008      	beq.n	8002098 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x34>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8002086:	061b      	lsls	r3, r3, #24
 8002088:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 800208c:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 800208e:	4b05      	ldr	r3, [pc, #20]	@ (80020a4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x40>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002090:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8002092:	6160      	str	r0, [r4, #20]
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8002094:	6023      	str	r3, [r4, #0]
    }
}
 8002096:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8002098:	4b03      	ldr	r3, [pc, #12]	@ (80020a8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
 800209a:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 800209c:	2301      	movs	r3, #1
 800209e:	e7f9      	b.n	8002094 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x30>
 80020a0:	4002b000 	.word	0x4002b000
 80020a4:	00020001 	.word	0x00020001
 80020a8:	ff020002 	.word	0xff020002

080020ac <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 80020ac:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 80020ae:	4c0b      	ldr	r4, [pc, #44]	@ (80020dc <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x30>)
 80020b0:	6825      	ldr	r5, [r4, #0]
 80020b2:	07ed      	lsls	r5, r5, #31
 80020b4:	d4fc      	bmi.n	80020b0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80020b6:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80020b8:	0412      	lsls	r2, r2, #16

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80020ba:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80020bc:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80020be:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80020c2:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80020c4:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80020c8:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80020ca:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 80020cc:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 80020ce:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80020d0:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 80020d2:	4b03      	ldr	r3, [pc, #12]	@ (80020e0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80020d4:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 80020d6:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 80020d8:	6023      	str	r3, [r4, #0]
}
 80020da:	bd30      	pop	{r4, r5, pc}
 80020dc:	4002b000 	.word	0x4002b000
 80020e0:	00020001 	.word	0x00020001

080020e4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80020e4:	2001      	movs	r0, #1
 80020e6:	4770      	bx	lr

080020e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80020e8:	200c      	movs	r0, #12
 80020ea:	4770      	bx	lr

080020ec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80020ec:	230c      	movs	r3, #12
 80020ee:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80020f2:	3008      	adds	r0, #8
 80020f4:	4770      	bx	lr

080020f6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80020f6:	230c      	movs	r3, #12
 80020f8:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80020fc:	3008      	adds	r0, #8
 80020fe:	4770      	bx	lr

08002100 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002100:	2001      	movs	r0, #1
 8002102:	4770      	bx	lr

08002104 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002104:	f642 40d8 	movw	r0, #11480	@ 0x2cd8
 8002108:	4770      	bx	lr

0800210a <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800210a:	f642 43d8 	movw	r3, #11480	@ 0x2cd8
 800210e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002112:	3008      	adds	r0, #8
 8002114:	4770      	bx	lr

08002116 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002116:	f642 43d8 	movw	r3, #11480	@ 0x2cd8
 800211a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800211e:	3008      	adds	r0, #8
 8002120:	4770      	bx	lr

08002122 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002122:	2001      	movs	r0, #1
 8002124:	4770      	bx	lr

08002126 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002126:	2010      	movs	r0, #16
 8002128:	4770      	bx	lr

0800212a <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800212a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800212e:	3008      	adds	r0, #8
 8002130:	4770      	bx	lr

08002132 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002132:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002136:	3008      	adds	r0, #8
 8002138:	4770      	bx	lr

0800213a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen2ScreenNoTransition();
 800213a:	4608      	mov	r0, r1
 800213c:	f000 bc12 	b.w	8002964 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>

08002140 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8002140:	b510      	push	{r4, lr}
 8002142:	4b03      	ldr	r3, [pc, #12]	@ (8002150 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002144:	6003      	str	r3, [r0, #0]
 8002146:	4604      	mov	r4, r0
 8002148:	f009 fe9f 	bl	800be8a <_ZN8touchgfx17AbstractPartitionD1Ev>
 800214c:	4620      	mov	r0, r4
 800214e:	bd10      	pop	{r4, pc}
 8002150:	08027548 	.word	0x08027548

08002154 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002154:	b510      	push	{r4, lr}
 8002156:	4604      	mov	r4, r0
 8002158:	f7ff fff2 	bl	8002140 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800215c:	4620      	mov	r0, r4
 800215e:	2114      	movs	r1, #20
 8002160:	f022 f96b 	bl	802443a <_ZdlPvj>
 8002164:	4620      	mov	r0, r4
 8002166:	bd10      	pop	{r4, pc}

08002168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002168:	b510      	push	{r4, lr}
 800216a:	4b03      	ldr	r3, [pc, #12]	@ (8002178 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800216c:	6003      	str	r3, [r0, #0]
 800216e:	4604      	mov	r4, r0
 8002170:	f009 fe8b 	bl	800be8a <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002174:	4620      	mov	r0, r4
 8002176:	bd10      	pop	{r4, pc}
 8002178:	08027514 	.word	0x08027514

0800217c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800217c:	b510      	push	{r4, lr}
 800217e:	4604      	mov	r4, r0
 8002180:	f7ff fff2 	bl	8002168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002184:	4620      	mov	r0, r4
 8002186:	f642 41e0 	movw	r1, #11488	@ 0x2ce0
 800218a:	f022 f956 	bl	802443a <_ZdlPvj>
 800218e:	4620      	mov	r0, r4
 8002190:	bd10      	pop	{r4, pc}
	...

08002194 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002194:	b510      	push	{r4, lr}
 8002196:	4b03      	ldr	r3, [pc, #12]	@ (80021a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002198:	6003      	str	r3, [r0, #0]
 800219a:	4604      	mov	r4, r0
 800219c:	f009 fe75 	bl	800be8a <_ZN8touchgfx17AbstractPartitionD1Ev>
 80021a0:	4620      	mov	r0, r4
 80021a2:	bd10      	pop	{r4, pc}
 80021a4:	080274e0 	.word	0x080274e0

080021a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80021a8:	b510      	push	{r4, lr}
 80021aa:	4604      	mov	r4, r0
 80021ac:	f7ff fff2 	bl	8002194 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80021b0:	4620      	mov	r0, r4
 80021b2:	2118      	movs	r1, #24
 80021b4:	f022 f941 	bl	802443a <_ZdlPvj>
 80021b8:	4620      	mov	r0, r4
 80021ba:	bd10      	pop	{r4, pc}

080021bc <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80021bc:	b510      	push	{r4, lr}
 80021be:	4b09      	ldr	r3, [pc, #36]	@ (80021e4 <_ZN12FrontendHeapD1Ev+0x28>)
 80021c0:	6003      	str	r3, [r0, #0]
 80021c2:	4604      	mov	r4, r0
 80021c4:	f500 5034 	add.w	r0, r0, #11520	@ 0x2d00
 80021c8:	300c      	adds	r0, #12
 80021ca:	f7ff ffb9 	bl	8002140 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80021ce:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 80021d2:	f7ff ffc9 	bl	8002168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80021d6:	f104 0014 	add.w	r0, r4, #20
 80021da:	f7ff ffdb 	bl	8002194 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80021de:	4620      	mov	r0, r4
 80021e0:	bd10      	pop	{r4, pc}
 80021e2:	bf00      	nop
 80021e4:	0802757c 	.word	0x0802757c

080021e8 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80021e8:	b508      	push	{r3, lr}
 80021ea:	4802      	ldr	r0, [pc, #8]	@ (80021f4 <__tcf_0+0xc>)
 80021ec:	f7ff ffe6 	bl	80021bc <_ZN12FrontendHeapD1Ev>
 80021f0:	bd08      	pop	{r3, pc}
 80021f2:	bf00      	nop
 80021f4:	200014e0 	.word	0x200014e0

080021f8 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80021f8:	b510      	push	{r4, lr}
 80021fa:	4604      	mov	r4, r0
 80021fc:	f7ff ffde 	bl	80021bc <_ZN12FrontendHeapD1Ev>
 8002200:	4620      	mov	r0, r4
 8002202:	f44f 513a 	mov.w	r1, #11904	@ 0x2e80
 8002206:	f022 f918 	bl	802443a <_ZdlPvj>
 800220a:	4620      	mov	r0, r4
 800220c:	bd10      	pop	{r4, pc}
	...

08002210 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8002210:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002214:	f000 fac2 	bl	800279c <_ZN14BitmapDatabase11getInstanceEv>
 8002218:	4605      	mov	r5, r0
 800221a:	f000 fac3 	bl	80027a4 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800221e:	2400      	movs	r4, #0
 8002220:	4601      	mov	r1, r0
 8002222:	4623      	mov	r3, r4
 8002224:	4628      	mov	r0, r5
 8002226:	4622      	mov	r2, r4
 8002228:	9400      	str	r4, [sp, #0]
 800222a:	f013 f873 	bl	8015314 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 800222e:	4b27      	ldr	r3, [pc, #156]	@ (80022cc <touchgfx_init+0xbc>)
 8002230:	4a27      	ldr	r2, [pc, #156]	@ (80022d0 <touchgfx_init+0xc0>)
 8002232:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8002234:	4620      	mov	r0, r4
 8002236:	f002 fb5f 	bl	80048f8 <_ZN8touchgfx5Texts11setLanguageEt>
        static FrontendHeap instance;
 800223a:	4d26      	ldr	r5, [pc, #152]	@ (80022d4 <touchgfx_init+0xc4>)
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 800223c:	4b26      	ldr	r3, [pc, #152]	@ (80022d8 <touchgfx_init+0xc8>)
 800223e:	4a27      	ldr	r2, [pc, #156]	@ (80022dc <touchgfx_init+0xcc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 8002240:	4827      	ldr	r0, [pc, #156]	@ (80022e0 <touchgfx_init+0xd0>)
 8002242:	609a      	str	r2, [r3, #8]
 8002244:	f012 ffce 	bl	80151e4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8002248:	682b      	ldr	r3, [r5, #0]
 800224a:	f3bf 8f5b 	dmb	ish
 800224e:	07db      	lsls	r3, r3, #31
 8002250:	d436      	bmi.n	80022c0 <touchgfx_init+0xb0>
 8002252:	4628      	mov	r0, r5
 8002254:	f022 f8f3 	bl	802443e <__cxa_guard_acquire>
 8002258:	b390      	cbz	r0, 80022c0 <touchgfx_init+0xb0>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 800225a:	4c22      	ldr	r4, [pc, #136]	@ (80022e4 <touchgfx_init+0xd4>)
          screenStorage(scr),
          transitionStorage(tra),
 800225c:	4f22      	ldr	r7, [pc, #136]	@ (80022e8 <touchgfx_init+0xd8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 800225e:	4b23      	ldr	r3, [pc, #140]	@ (80022ec <touchgfx_init+0xdc>)
 8002260:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8002262:	f107 0618 	add.w	r6, r7, #24
        : presenterStorage(pres),
 8002266:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 800226a:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
        : presenterStorage(pres),
 800226e:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8002270:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8002274:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8002276:	6126      	str	r6, [r4, #16]
 8002278:	f009 fe08 	bl	800be8c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800227c:	4b1c      	ldr	r3, [pc, #112]	@ (80022f0 <touchgfx_init+0xe0>)
 800227e:	6163      	str	r3, [r4, #20]
 8002280:	4640      	mov	r0, r8
 8002282:	f009 fe03 	bl	800be8c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002286:	4b1b      	ldr	r3, [pc, #108]	@ (80022f4 <touchgfx_init+0xe4>)
 8002288:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800228a:	4638      	mov	r0, r7
 800228c:	f009 fdfe 	bl	800be8c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002290:	f504 5300 	add.w	r3, r4, #8192	@ 0x2000
 8002294:	f503 6052 	add.w	r0, r3, #3360	@ 0xd20
 8002298:	4a17      	ldr	r2, [pc, #92]	@ (80022f8 <touchgfx_init+0xe8>)
 800229a:	f8c3 2d0c 	str.w	r2, [r3, #3340]	@ 0xd0c
 800229e:	f002 fbaf 	bl	8004a00 <_ZN5ModelC1Ev>
 80022a2:	4622      	mov	r2, r4
 80022a4:	f107 0114 	add.w	r1, r7, #20
 80022a8:	4630      	mov	r0, r6
 80022aa:	f002 fb9f 	bl	80049ec <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80022ae:	4630      	mov	r0, r6
 80022b0:	f000 fb58 	bl	8002964 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
        static FrontendHeap instance;
 80022b4:	4811      	ldr	r0, [pc, #68]	@ (80022fc <touchgfx_init+0xec>)
 80022b6:	f023 f81b 	bl	80252f0 <atexit>
 80022ba:	4628      	mov	r0, r5
 80022bc:	f022 f8cb 	bl	8024456 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80022c0:	480f      	ldr	r0, [pc, #60]	@ (8002300 <touchgfx_init+0xf0>)
}
 80022c2:	b002      	add	sp, #8
 80022c4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 80022c8:	f7ff bbe4 	b.w	8001a94 <_ZN11TouchGFXHAL10initializeEv>
 80022cc:	2001529c 	.word	0x2001529c
 80022d0:	2000068c 	.word	0x2000068c
 80022d4:	200014dc 	.word	0x200014dc
 80022d8:	200006ac 	.word	0x200006ac
 80022dc:	20000690 	.word	0x20000690
 80022e0:	20000010 	.word	0x20000010
 80022e4:	200014e0 	.word	0x200014e0
 80022e8:	200041ec 	.word	0x200041ec
 80022ec:	0802757c 	.word	0x0802757c
 80022f0:	080274e0 	.word	0x080274e0
 80022f4:	08027514 	.word	0x08027514
 80022f8:	08027548 	.word	0x08027548
 80022fc:	080021e9 	.word	0x080021e9
 8002300:	20000608 	.word	0x20000608

08002304 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8002304:	4770      	bx	lr
	...

08002308 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8002308:	4801      	ldr	r0, [pc, #4]	@ (8002310 <touchgfx_taskEntry+0x8>)
 800230a:	f7ff bbd1 	b.w	8001ab0 <_ZN11TouchGFXHAL9taskEntryEv>
 800230e:	bf00      	nop
 8002310:	20000608 	.word	0x20000608

08002314 <_GLOBAL__sub_I_touchgfx_init>:
}
 8002314:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8002316:	4e26      	ldr	r6, [pc, #152]	@ (80023b0 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
{
public:

    STM32TouchController() {}
 8002318:	4c26      	ldr	r4, [pc, #152]	@ (80023b4 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
 800231a:	4d27      	ldr	r5, [pc, #156]	@ (80023b8 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 800231c:	4b27      	ldr	r3, [pc, #156]	@ (80023bc <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 800231e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8002320:	4630      	mov	r0, r6
 8002322:	f7ff fe51 	bl	8001fc8 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8002326:	4628      	mov	r0, r5
 8002328:	f018 f8fa 	bl	801a520 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 800232c:	4824      	ldr	r0, [pc, #144]	@ (80023c0 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 800232e:	f010 fd1b 	bl	8012d68 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
 8002332:	4b24      	ldr	r3, [pc, #144]	@ (80023c4 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          isFrontPorchEntered(false),
 8002334:	4824      	ldr	r0, [pc, #144]	@ (80023c8 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          touchController(touchCtrl),
 8002336:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8002338:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800233a:	f44f 7180 	mov.w	r1, #256	@ 0x100
          auxiliaryLCD(0),
 800233e:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 8002342:	4922      	ldr	r1, [pc, #136]	@ (80023cc <_GLOBAL__sub_I_touchgfx_init+0xb8>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8002344:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
 8002346:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          isFrontPorchEntered(false),
 800234a:	4921      	ldr	r1, [pc, #132]	@ (80023d0 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          useAuxiliaryLCD(false),
 800234c:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          isFrontPorchEntered(false),
 8002350:	e9c3 011e 	strd	r0, r1, [r3, #120]	@ 0x78
          minDrawingHeight(maxDrawingHeight / 3),    // Best guess based on testing (but not ideal in all cases)
 8002354:	491f      	ldr	r1, [pc, #124]	@ (80023d4 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8002356:	f8c3 1080 	str.w	r1, [r3, #128]	@ 0x80
        instance = this;
 800235a:	491f      	ldr	r1, [pc, #124]	@ (80023d8 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800235c:	481f      	ldr	r0, [pc, #124]	@ (80023dc <_GLOBAL__sub_I_touchgfx_init+0xc8>)
        instance = this;
 800235e:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002360:	21f0      	movs	r1, #240	@ 0xf0
          buttonController(0),
 8002362:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8002366:	e9c3 2206 	strd	r2, r2, [r3, #24]
 800236a:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800236e:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 8002372:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 8002376:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 800237a:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 800237e:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          lastY(0),
 8002382:	665a      	str	r2, [r3, #100]	@ 0x64
          updateMCULoad(0),
 8002384:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 8002388:	675a      	str	r2, [r3, #116]	@ 0x74
          lcdRef(display),
 800238a:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800238e:	8001      	strh	r1, [r0, #0]
 8002390:	4813      	ldr	r0, [pc, #76]	@ (80023e0 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 8002392:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002394:	4813      	ldr	r0, [pc, #76]	@ (80023e4 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 8002396:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 800239a:	8001      	strh	r1, [r0, #0]
 800239c:	4812      	ldr	r0, [pc, #72]	@ (80023e8 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 800239e:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80023a0:	4912      	ldr	r1, [pc, #72]	@ (80023ec <_GLOBAL__sub_I_touchgfx_init+0xd8>)
 80023a2:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80023a4:	2201      	movs	r2, #1
 80023a6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80023aa:	4a11      	ldr	r2, [pc, #68]	@ (80023f0 <_GLOBAL__sub_I_touchgfx_init+0xdc>)
 80023ac:	601a      	str	r2, [r3, #0]
}
 80023ae:	bd70      	pop	{r4, r5, r6, pc}
 80023b0:	20000738 	.word	0x20000738
 80023b4:	200014d8 	.word	0x200014d8
 80023b8:	200006ac 	.word	0x200006ac
 80023bc:	0802738c 	.word	0x0802738c
 80023c0:	20000690 	.word	0x20000690
 80023c4:	20000608 	.word	0x20000608
 80023c8:	01010000 	.word	0x01010000
 80023cc:	01000001 	.word	0x01000001
 80023d0:	00500400 	.word	0x00500400
 80023d4:	0014001a 	.word	0x0014001a
 80023d8:	20015238 	.word	0x20015238
 80023dc:	2001522c 	.word	0x2001522c
 80023e0:	20015232 	.word	0x20015232
 80023e4:	2001522e 	.word	0x2001522e
 80023e8:	20015234 	.word	0x20015234
 80023ec:	20015230 	.word	0x20015230
 80023f0:	080273a4 	.word	0x080273a4

080023f4 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 80023f4:	4801      	ldr	r0, [pc, #4]	@ (80023fc <_GLOBAL__sub_D_touchgfx_init+0x8>)
 80023f6:	f7ff bc73 	b.w	8001ce0 <_ZN8STM32DMAD1Ev>
 80023fa:	bf00      	nop
 80023fc:	20000738 	.word	0x20000738

08002400 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002400:	2000      	movs	r0, #0
 8002402:	4770      	bx	lr

08002404 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002404:	8081      	strh	r1, [r0, #4]
    }
 8002406:	4770      	bx	lr

08002408 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002408:	80c1      	strh	r1, [r0, #6]
    }
 800240a:	4770      	bx	lr

0800240c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800240c:	8101      	strh	r1, [r0, #8]
    }
 800240e:	4770      	bx	lr

08002410 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002410:	8141      	strh	r1, [r0, #10]
    }
 8002412:	4770      	bx	lr

08002414 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002414:	4770      	bx	lr

08002416 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002416:	4770      	bx	lr

08002418 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002418:	4770      	bx	lr

0800241a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800241a:	4770      	bx	lr

0800241c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800241c:	4770      	bx	lr

0800241e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800241e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002420:	88c4      	ldrh	r4, [r0, #6]
 8002422:	6803      	ldr	r3, [r0, #0]
 8002424:	1b12      	subs	r2, r2, r4
 8002426:	8884      	ldrh	r4, [r0, #4]
 8002428:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800242a:	1b09      	subs	r1, r1, r4
 800242c:	b212      	sxth	r2, r2
    }
 800242e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002432:	b209      	sxth	r1, r1
 8002434:	4718      	bx	r3

08002436 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002436:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800243a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800243c:	f04f 33ff 	mov.w	r3, #4294967295
 8002440:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002442:	6813      	ldr	r3, [r2, #0]
 8002444:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002446:	6010      	str	r0, [r2, #0]
    }
 8002448:	4770      	bx	lr

0800244a <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800244a:	2000      	movs	r0, #0
 800244c:	4770      	bx	lr

0800244e <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800244e:	888b      	ldrh	r3, [r1, #4]
 8002450:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8002452:	2001      	movs	r0, #1
 8002454:	4770      	bx	lr

08002456 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8002456:	4770      	bx	lr

08002458 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002458:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
 800245c:	4770      	bx	lr

0800245e <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800245e:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 8002462:	4770      	bx	lr

08002464 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8002464:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002466:	2200      	movs	r2, #0
        return rect.width;
 8002468:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 800246c:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8002470:	8002      	strh	r2, [r0, #0]
 8002472:	8042      	strh	r2, [r0, #2]
 8002474:	8084      	strh	r4, [r0, #4]
 8002476:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8002478:	bd10      	pop	{r4, pc}

0800247a <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 800247a:	2200      	movs	r2, #0
 800247c:	8002      	strh	r2, [r0, #0]
 800247e:	8042      	strh	r2, [r0, #2]
 8002480:	8082      	strh	r2, [r0, #4]
 8002482:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002484:	4770      	bx	lr

08002486 <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
 8002486:	7701      	strb	r1, [r0, #28]
    }
 8002488:	4770      	bx	lr

0800248a <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
 800248a:	ed80 0a08 	vstr	s0, [r0, #32]
    }
 800248e:	4770      	bx	lr

08002490 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
 8002490:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
 8002494:	4770      	bx	lr

08002496 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
 8002496:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
 800249a:	4770      	bx	lr

0800249c <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
 800249c:	2001      	movs	r0, #1
 800249e:	4770      	bx	lr

080024a0 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
 80024a0:	3098      	adds	r0, #152	@ 0x98
 80024a2:	4770      	bx	lr

080024a4 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
 80024a4:	308c      	adds	r0, #140	@ 0x8c
 80024a6:	4770      	bx	lr

080024a8 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
 80024a8:	3084      	adds	r0, #132	@ 0x84
 80024aa:	4770      	bx	lr

080024ac <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 80024ac:	4770      	bx	lr

080024ae <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 80024ae:	4770      	bx	lr

080024b0 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
 80024b0:	4770      	bx	lr
	...

080024b4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80024b4:	4b03      	ldr	r3, [pc, #12]	@ (80024c4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80024b6:	2290      	movs	r2, #144	@ 0x90
 80024b8:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 80024bc:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80024c0:	4770      	bx	lr
 80024c2:	bf00      	nop
 80024c4:	e000e100 	.word	0xe000e100

080024c8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 80024c8:	4a09      	ldr	r2, [pc, #36]	@ (80024f0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80024ca:	490a      	ldr	r1, [pc, #40]	@ (80024f4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80024cc:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 80024ce:	480a      	ldr	r0, [pc, #40]	@ (80024f8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 80024d0:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80024d4:	3b01      	subs	r3, #1
 80024d6:	b29b      	uxth	r3, r3
 80024d8:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 80024da:	6911      	ldr	r1, [r2, #16]
 80024dc:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80024e0:	3901      	subs	r1, #1
 80024e2:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80024e4:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80024e6:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 80024e8:	f043 0301 	orr.w	r3, r3, #1
 80024ec:	6353      	str	r3, [r2, #52]	@ 0x34
}
 80024ee:	4770      	bx	lr
 80024f0:	40016800 	.word	0x40016800
 80024f4:	20004362 	.word	0x20004362
 80024f8:	20004360 	.word	0x20004360

080024fc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80024fc:	4b01      	ldr	r3, [pc, #4]	@ (8002504 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80024fe:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 8002502:	4770      	bx	lr
 8002504:	40016800 	.word	0x40016800

08002508 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002508:	4b02      	ldr	r3, [pc, #8]	@ (8002514 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800250a:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800250c:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002510:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8002512:	4770      	bx	lr
 8002514:	40016800 	.word	0x40016800

08002518 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8002518:	b510      	push	{r4, lr}
 800251a:	212c      	movs	r1, #44	@ 0x2c
 800251c:	4604      	mov	r4, r0
 800251e:	f021 ff8c 	bl	802443a <_ZdlPvj>
 8002522:	4620      	mov	r0, r4
 8002524:	bd10      	pop	{r4, pc}

08002526 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8002526:	b510      	push	{r4, lr}
 8002528:	21bc      	movs	r1, #188	@ 0xbc
 800252a:	4604      	mov	r4, r0
 800252c:	f021 ff85 	bl	802443a <_ZdlPvj>
 8002530:	4620      	mov	r0, r4
 8002532:	bd10      	pop	{r4, pc}

08002534 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002534:	b570      	push	{r4, r5, r6, lr}
 8002536:	4604      	mov	r4, r0
    HAL::initialize();
 8002538:	f009 ffa5 	bl	800c486 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800253c:	6823      	ldr	r3, [r4, #0]
 800253e:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
 8002540:	f00f f9aa 	bl	8011898 <_ZN8touchgfx11Application11getInstanceEv>
 8002544:	4601      	mov	r1, r0
 8002546:	4620      	mov	r0, r4
 8002548:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800254a:	6823      	ldr	r3, [r4, #0]
 800254c:	4a05      	ldr	r2, [pc, #20]	@ (8002564 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800254e:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
 8002552:	4620      	mov	r0, r4
 8002554:	46ac      	mov	ip, r5
 8002556:	2300      	movs	r3, #0
}
 8002558:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800255c:	f5a2 3116 	sub.w	r1, r2, #153600	@ 0x25800
 8002560:	4760      	bx	ip
 8002562:	bf00      	nop
 8002564:	d004b000 	.word	0xd004b000

08002568 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8002568:	f009 bf74 	b.w	800c454 <_ZN8touchgfx3HAL10beginFrameEv>

0800256c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 800256c:	f009 bf7e 	b.w	800c46c <_ZN8touchgfx3HAL8endFrameEv>

08002570 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8002570:	f009 bf3a 	b.w	800c3e8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002574 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8002574:	f00a b8a9 	b.w	800c6ca <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08002578 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002578:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800257c:	b112      	cbz	r2, 8002584 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800257e:	6803      	ldr	r3, [r0, #0]
 8002580:	695b      	ldr	r3, [r3, #20]
 8002582:	4718      	bx	r3
    }
 8002584:	4770      	bx	lr

08002586 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002586:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800258a:	b11a      	cbz	r2, 8002594 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800258c:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 8002590:	b102      	cbz	r2, 8002594 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002592:	6018      	str	r0, [r3, #0]
        }
    }
 8002594:	4770      	bx	lr
	...

08002598 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002598:	4b03      	ldr	r3, [pc, #12]	@ (80025a8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 800259a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800259e:	609a      	str	r2, [r3, #8]
 80025a0:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80025a4:	609a      	str	r2, [r3, #8]
}
 80025a6:	4770      	bx	lr
 80025a8:	e000e100 	.word	0xe000e100

080025ac <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80025ac:	4b08      	ldr	r3, [pc, #32]	@ (80025d0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80025ae:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80025b2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80025b6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80025ba:	f3bf 8f6f 	isb	sy
 80025be:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80025c2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80025c6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80025ca:	f3bf 8f6f 	isb	sy
}
 80025ce:	4770      	bx	lr
 80025d0:	e000e100 	.word	0xe000e100

080025d4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80025d4:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80025d6:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80025d8:	4e12      	ldr	r6, [pc, #72]	@ (8002624 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80025da:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80025dc:	4b12      	ldr	r3, [pc, #72]	@ (8002628 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80025de:	6003      	str	r3, [r0, #0]
 80025e0:	6833      	ldr	r3, [r6, #0]
 80025e2:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
    AbstractPainterRGB565()
 80025e6:	4605      	mov	r5, r0
 80025e8:	b10a      	cbz	r2, 80025ee <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80025ea:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80025ec:	b900      	cbnz	r0, 80025f0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80025ee:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80025f0:	6803      	ldr	r3, [r0, #0]
 80025f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80025f4:	4798      	blx	r3
        return auxiliaryLCD;
 80025f6:	6833      	ldr	r3, [r6, #0]
 80025f8:	fab0 f480 	clz	r4, r0
 80025fc:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80025fe:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8002600:	b130      	cbz	r0, 8002610 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8002602:	6803      	ldr	r3, [r0, #0]
 8002604:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002606:	4798      	blx	r3
 8002608:	2800      	cmp	r0, #0
 800260a:	bf08      	it	eq
 800260c:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8002610:	b92c      	cbnz	r4, 800261e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8002612:	4b06      	ldr	r3, [pc, #24]	@ (800262c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8002614:	4a06      	ldr	r2, [pc, #24]	@ (8002630 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8002616:	4807      	ldr	r0, [pc, #28]	@ (8002634 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8002618:	212c      	movs	r1, #44	@ 0x2c
 800261a:	f022 fe4b 	bl	80252b4 <__assert_func>
    }
 800261e:	4628      	mov	r0, r5
 8002620:	bd70      	pop	{r4, r5, r6, pc}
 8002622:	bf00      	nop
 8002624:	20015238 	.word	0x20015238
 8002628:	08027590 	.word	0x08027590
 800262c:	080267de 	.word	0x080267de
 8002630:	0802683c 	.word	0x0802683c
 8002634:	08026875 	.word	0x08026875

08002638 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8002638:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
 800263a:	4e25      	ldr	r6, [pc, #148]	@ (80026d0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
 800263c:	6835      	ldr	r5, [r6, #0]
 800263e:	f3bf 8f5b 	dmb	ish
 8002642:	f015 0501 	ands.w	r5, r5, #1
 8002646:	d140      	bne.n	80026ca <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
 8002648:	4630      	mov	r0, r6
 800264a:	f021 fef8 	bl	802443e <__cxa_guard_acquire>
 800264e:	2800      	cmp	r0, #0
 8002650:	d03b      	beq.n	80026ca <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
class CWRVectorRenderer : public VectorRenderer
 8002652:	4c20      	ldr	r4, [pc, #128]	@ (80026d4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 8002654:	4b20      	ldr	r3, [pc, #128]	@ (80026d8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa0>)
 8002656:	6125      	str	r5, [r4, #16]
 8002658:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 800265c:	e9c4 3500 	strd	r3, r5, [r4]
 8002660:	e9c4 5502 	strd	r5, r5, [r4, #8]
 8002664:	84e5      	strh	r5, [r4, #38]	@ 0x26
 8002666:	62a5      	str	r5, [r4, #40]	@ 0x28
 8002668:	85a5      	strh	r5, [r4, #44]	@ 0x2c
 800266a:	f010 fe62 	bl	8013332 <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
 800266e:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8002672:	f00c fa91 	bl	800eb98 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8002676:	4b19      	ldr	r3, [pc, #100]	@ (80026dc <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa4>)
 8002678:	65a3      	str	r3, [r4, #88]	@ 0x58
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 800267a:	4620      	mov	r0, r4
 800267c:	4b18      	ldr	r3, [pc, #96]	@ (80026e0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa8>)
 800267e:	f840 3b84 	str.w	r3, [r0], #132
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002682:	f7ff ffa7 	bl	80025d4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002686:	4b17      	ldr	r3, [pc, #92]	@ (80026e4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xac>)
 8002688:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 800268c:	3324      	adds	r3, #36	@ 0x24
 800268e:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
class AbstractPainterLinearGradient : public AbstractPainter
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
 8002692:	f44f 03c8 	mov.w	r3, #6553600	@ 0x640000
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
 8002696:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 800269a:	2300      	movs	r3, #0
 800269c:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
 80026a0:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 80026a4:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 80026a8:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 80026ac:	480e      	ldr	r0, [pc, #56]	@ (80026e8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb0>)
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
 80026ae:	4b0f      	ldr	r3, [pc, #60]	@ (80026ec <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb4>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 80026b0:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        : AbstractPainter(),
 80026b4:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 80026b8:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 80026bc:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 80026c0:	f022 fe16 	bl	80252f0 <atexit>
 80026c4:	4630      	mov	r0, r6
 80026c6:	f021 fec6 	bl	8024456 <__cxa_guard_release>
}
 80026ca:	4802      	ldr	r0, [pc, #8]	@ (80026d4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 80026cc:	bd70      	pop	{r4, r5, r6, pc}
 80026ce:	bf00      	nop
 80026d0:	20004364 	.word	0x20004364
 80026d4:	20004368 	.word	0x20004368
 80026d8:	0802828c 	.word	0x0802828c
 80026dc:	080275b0 	.word	0x080275b0
 80026e0:	08027628 	.word	0x08027628
 80026e4:	08028240 	.word	0x08028240
 80026e8:	080024b1 	.word	0x080024b1
 80026ec:	08028220 	.word	0x08028220

080026f0 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 80026f0:	b538      	push	{r3, r4, r5, lr}
        return instance;
 80026f2:	4c18      	ldr	r4, [pc, #96]	@ (8002754 <HAL_LTDC_LineEventCallback+0x64>)
        if (!HAL::getInstance())
 80026f4:	6823      	ldr	r3, [r4, #0]
 80026f6:	b35b      	cbz	r3, 8002750 <HAL_LTDC_LineEventCallback+0x60>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 80026f8:	4b17      	ldr	r3, [pc, #92]	@ (8002758 <HAL_LTDC_LineEventCallback+0x68>)
 80026fa:	4a18      	ldr	r2, [pc, #96]	@ (800275c <HAL_LTDC_LineEventCallback+0x6c>)
 80026fc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80026fe:	8811      	ldrh	r1, [r2, #0]
 8002700:	428b      	cmp	r3, r1
 8002702:	d116      	bne.n	8002732 <HAL_LTDC_LineEventCallback+0x42>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8002704:	4b16      	ldr	r3, [pc, #88]	@ (8002760 <HAL_LTDC_LineEventCallback+0x70>)
 8002706:	8819      	ldrh	r1, [r3, #0]
 8002708:	f005 ff9e 	bl	8008648 <HAL_LTDC_ProgramLineEvent>
 800270c:	6823      	ldr	r3, [r4, #0]
        vSyncCnt++;
 800270e:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 8002712:	2500      	movs	r5, #0
        vSyncCnt++;
 8002714:	3201      	adds	r2, #1
 8002716:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 800271a:	f883 507c 	strb.w	r5, [r3, #124]	@ 0x7c
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800271e:	f7ff fab3 	bl	8001c88 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8002722:	6820      	ldr	r0, [r4, #0]
 8002724:	f00a fc2c 	bl	800cf80 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 8002728:	4628      	mov	r0, r5

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 800272a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800272e:	f7ff b8f3 	b.w	8001918 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8002732:	f005 ff89 	bl	8008648 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8002736:	6824      	ldr	r4, [r4, #0]
        allowDMATransfers();
 8002738:	6823      	ldr	r3, [r4, #0]
 800273a:	4620      	mov	r0, r4
 800273c:	6a1b      	ldr	r3, [r3, #32]
 800273e:	4798      	blx	r3
        isFrontPorchEntered = true;
 8002740:	2301      	movs	r3, #1
 8002742:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002746:	2000      	movs	r0, #0
    }
 8002748:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 800274c:	f7ff b90e 	b.w	800196c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8002750:	bd38      	pop	{r3, r4, r5, pc}
 8002752:	bf00      	nop
 8002754:	20015238 	.word	0x20015238
 8002758:	40016800 	.word	0x40016800
 800275c:	20004362 	.word	0x20004362
 8002760:	20004360 	.word	0x20004360

08002764 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002764:	4770      	bx	lr

08002766 <_ZN23ApplicationFontProviderD0Ev>:
 8002766:	b510      	push	{r4, lr}
 8002768:	2104      	movs	r1, #4
 800276a:	4604      	mov	r4, r0
 800276c:	f021 fe65 	bl	802443a <_ZdlPvj>
 8002770:	4620      	mov	r0, r4
 8002772:	bd10      	pop	{r4, pc}

08002774 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002774:	2901      	cmp	r1, #1
{
 8002776:	b508      	push	{r3, lr}
    switch (typography)
 8002778:	d006      	beq.n	8002788 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 800277a:	2902      	cmp	r1, #2
 800277c:	d008      	beq.n	8002790 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 800277e:	b959      	cbnz	r1, 8002798 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002780:	f002 f906 	bl	8004990 <_ZN17TypedTextDatabase8getFontsEv>
 8002784:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8002786:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002788:	f002 f902 	bl	8004990 <_ZN17TypedTextDatabase8getFontsEv>
 800278c:	6840      	ldr	r0, [r0, #4]
 800278e:	e7fa      	b.n	8002786 <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002790:	f002 f8fe 	bl	8004990 <_ZN17TypedTextDatabase8getFontsEv>
 8002794:	6880      	ldr	r0, [r0, #8]
 8002796:	e7f6      	b.n	8002786 <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002798:	2000      	movs	r0, #0
 800279a:	e7f4      	b.n	8002786 <_ZN23ApplicationFontProvider7getFontEt+0x12>

0800279c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 800279c:	4800      	ldr	r0, [pc, #0]	@ (80027a0 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800279e:	4770      	bx	lr
 80027a0:	08027680 	.word	0x08027680

080027a4 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80027a4:	2016      	movs	r0, #22
 80027a6:	4770      	bx	lr

080027a8 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80027a8:	b513      	push	{r0, r1, r4, lr}
 80027aa:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80027ac:	b151      	cbz	r1, 80027c4 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80027ae:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80027b0:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80027b2:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80027b6:	aa01      	add	r2, sp, #4
 80027b8:	689c      	ldr	r4, [r3, #8]
 80027ba:	f10d 0303 	add.w	r3, sp, #3
 80027be:	47a0      	blx	r4
        return glyph;
    }
 80027c0:	b002      	add	sp, #8
 80027c2:	bd10      	pop	{r4, pc}
            return 0;
 80027c4:	4608      	mov	r0, r1
 80027c6:	e7fb      	b.n	80027c0 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080027c8 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80027c8:	89c0      	ldrh	r0, [r0, #14]
 80027ca:	4770      	bx	lr

080027cc <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80027cc:	8a00      	ldrh	r0, [r0, #16]
 80027ce:	4770      	bx	lr

080027d0 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80027d0:	88c0      	ldrh	r0, [r0, #6]
 80027d2:	4770      	bx	lr

080027d4 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80027d4:	8880      	ldrh	r0, [r0, #4]
 80027d6:	4770      	bx	lr

080027d8 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80027d8:	7a80      	ldrb	r0, [r0, #10]
    }
 80027da:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 80027de:	4770      	bx	lr

080027e0 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80027e0:	7a80      	ldrb	r0, [r0, #10]
    }
 80027e2:	09c0      	lsrs	r0, r0, #7
 80027e4:	4770      	bx	lr

080027e6 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 80027e6:	2000      	movs	r0, #0
 80027e8:	4770      	bx	lr
	...

080027ec <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 80027ec:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 80027f4 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 80027f0:	4770      	bx	lr
 80027f2:	bf00      	nop
 80027f4:	00000000 	.word	0x00000000

080027f8 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80027f8:	4770      	bx	lr

080027fa <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80027fa:	b510      	push	{r4, lr}
    }
 80027fc:	2108      	movs	r1, #8
    virtual ~TypedText()
 80027fe:	4604      	mov	r4, r0
    }
 8002800:	f021 fe1b 	bl	802443a <_ZdlPvj>
 8002804:	4620      	mov	r0, r4
 8002806:	bd10      	pop	{r4, pc}

08002808 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002808:	4770      	bx	lr

0800280a <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 800280a:	4770      	bx	lr

0800280c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 800280c:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 8002810:	6808      	ldr	r0, [r1, #0]
 8002812:	6849      	ldr	r1, [r1, #4]
 8002814:	c303      	stmia	r3!, {r0, r1}
    }
 8002816:	4770      	bx	lr

08002818 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002818:	4770      	bx	lr

0800281a <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 800281a:	4770      	bx	lr

0800281c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800281c:	6041      	str	r1, [r0, #4]
    }
 800281e:	4770      	bx	lr

08002820 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002820:	4770      	bx	lr

08002822 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002822:	4770      	bx	lr

08002824 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 8002824:	4b06      	ldr	r3, [pc, #24]	@ (8002840 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002826:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800282a:	2300      	movs	r3, #0
 800282c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen2

void FrontendApplicationBase::gotoScreen2ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen2ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002830:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002834:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002838:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoScreen2ScreenNoTransition();
    }
 800283c:	4770      	bx	lr
 800283e:	bf00      	nop
 8002840:	08002f39 	.word	0x08002f39

08002844 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002844:	2301      	movs	r3, #1
 8002846:	7203      	strb	r3, [r0, #8]
    }
 8002848:	4770      	bx	lr

0800284a <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800284a:	4770      	bx	lr

0800284c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800284c:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800284e:	68c2      	ldr	r2, [r0, #12]
 8002850:	6841      	ldr	r1, [r0, #4]
 8002852:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002854:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002856:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800285a:	07d2      	lsls	r2, r2, #31
 800285c:	bf48      	it	mi
 800285e:	590a      	ldrmi	r2, [r1, r4]
 8002860:	689b      	ldr	r3, [r3, #8]
    }
 8002862:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002866:	bf48      	it	mi
 8002868:	58d3      	ldrmi	r3, [r2, r3]
 800286a:	4718      	bx	r3

0800286c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 800286c:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 800286e:	6840      	ldr	r0, [r0, #4]
 8002870:	b130      	cbz	r0, 8002880 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002872:	689a      	ldr	r2, [r3, #8]
 8002874:	b91a      	cbnz	r2, 800287e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8002876:	68d8      	ldr	r0, [r3, #12]
 8002878:	f000 0001 	and.w	r0, r0, #1
 800287c:	4770      	bx	lr
 800287e:	2001      	movs	r0, #1
    }
 8002880:	4770      	bx	lr

08002882 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002882:	b510      	push	{r4, lr}
 8002884:	210c      	movs	r1, #12
 8002886:	4604      	mov	r4, r0
 8002888:	f021 fdd7 	bl	802443a <_ZdlPvj>
 800288c:	4620      	mov	r0, r4
 800288e:	bd10      	pop	{r4, pc}

08002890 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002890:	b510      	push	{r4, lr}
 8002892:	2110      	movs	r1, #16
 8002894:	4604      	mov	r4, r0
 8002896:	f021 fdd0 	bl	802443a <_ZdlPvj>
 800289a:	4620      	mov	r0, r4
 800289c:	bd10      	pop	{r4, pc}

0800289e <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 800289e:	b510      	push	{r4, lr}
 80028a0:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 80028a4:	4604      	mov	r4, r0
 80028a6:	f021 fdc8 	bl	802443a <_ZdlPvj>
 80028aa:	4620      	mov	r0, r4
 80028ac:	bd10      	pop	{r4, pc}

080028ae <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80028ae:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80028b0:	f00e fff2 	bl	8011898 <_ZN8touchgfx11Application11getInstanceEv>
 80028b4:	6803      	ldr	r3, [r0, #0]
    }
 80028b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80028ba:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80028bc:	4718      	bx	r3

080028be <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80028be:	b510      	push	{r4, lr}
 80028c0:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80028c2:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 80028c6:	b158      	cbz	r0, 80028e0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80028c8:	6803      	ldr	r3, [r0, #0]
 80028ca:	68db      	ldr	r3, [r3, #12]
 80028cc:	4798      	blx	r3
 80028ce:	b138      	cbz	r0, 80028e0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80028d0:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 80028d4:	6803      	ldr	r3, [r0, #0]
 80028d6:	689b      	ldr	r3, [r3, #8]
 80028d8:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80028da:	2300      	movs	r3, #0
 80028dc:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 80028e0:	bd10      	pop	{r4, pc}
	...

080028e4 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80028e4:	4b04      	ldr	r3, [pc, #16]	@ (80028f8 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80028e6:	681b      	ldr	r3, [r3, #0]
 80028e8:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80028ec:	b10a      	cbz	r2, 80028f2 <_ZN8touchgfx3HAL3lcdEv+0xe>
 80028ee:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80028f0:	b900      	cbnz	r0, 80028f4 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80028f2:	6898      	ldr	r0, [r3, #8]
    }
 80028f4:	4770      	bx	lr
 80028f6:	bf00      	nop
 80028f8:	20015238 	.word	0x20015238

080028fc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80028fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80028fe:	4617      	mov	r7, r2
 8002900:	4604      	mov	r4, r0
 8002902:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002904:	f00f f88a 	bl	8011a1c <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002908:	4b12      	ldr	r3, [pc, #72]	@ (8002954 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 800290a:	601c      	str	r4, [r3, #0]
      model(m)
 800290c:	4b12      	ldr	r3, [pc, #72]	@ (8002958 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 800290e:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8002910:	4b12      	ldr	r3, [pc, #72]	@ (800295c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>)
        : currentPresenter(0),
 8002912:	2500      	movs	r5, #0
 8002914:	e9c4 3551 	strd	r3, r5, [r4, #324]	@ 0x144
        return instance;
 8002918:	4b11      	ldr	r3, [pc, #68]	@ (8002960 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 800291a:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
 800291e:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002920:	6803      	ldr	r3, [r0, #0]
 8002922:	2101      	movs	r1, #1
 8002924:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8002926:	e9c4 554f 	strd	r5, r5, [r4, #316]	@ 0x13c
      model(m)
 800292a:	e9c4 7655 	strd	r7, r6, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800292e:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002930:	4628      	mov	r0, r5
 8002932:	f001 ffe1 	bl	80048f8 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002936:	f7ff ffd5 	bl	80028e4 <_ZN8touchgfx3HAL3lcdEv>
 800293a:	f019 fc9a 	bl	801c272 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800293e:	f7ff ffd1 	bl	80028e4 <_ZN8touchgfx3HAL3lcdEv>
 8002942:	f019 fd11 	bl	801c368 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 8002946:	f7ff ffcd 	bl	80028e4 <_ZN8touchgfx3HAL3lcdEv>
 800294a:	f019 fd19 	bl	801c380 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 800294e:	4620      	mov	r0, r4
 8002950:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002952:	bf00      	nop
 8002954:	2001528c 	.word	0x2001528c
 8002958:	08027868 	.word	0x08027868
 800295c:	08027850 	.word	0x08027850
 8002960:	20015238 	.word	0x20015238

08002964 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002964:	4b06      	ldr	r3, [pc, #24]	@ (8002980 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv+0x1c>)
 8002966:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800296a:	2300      	movs	r3, #0
 800296c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002970:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002974:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002978:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 800297c:	4770      	bx	lr
 800297e:	bf00      	nop
 8002980:	08002f39 	.word	0x08002f39

08002984 <_ZN23FrontendApplicationBase32gotoScreenWaitScreenNoTransitionEv>:
 8002984:	4b06      	ldr	r3, [pc, #24]	@ (80029a0 <_ZN23FrontendApplicationBase32gotoScreenWaitScreenNoTransitionEv+0x1c>)
 8002986:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800298a:	2300      	movs	r3, #0
 800298c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// ScreenWait

void FrontendApplicationBase::gotoScreenWaitScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreenWaitScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002990:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002994:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002998:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 800299c:	4770      	bx	lr
 800299e:	bf00      	nop
 80029a0:	08002df1 	.word	0x08002df1

080029a4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
 80029a4:	4b06      	ldr	r3, [pc, #24]	@ (80029c0 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 80029a6:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80029aa:	2300      	movs	r3, #0
 80029ac:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80029b0:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80029b4:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80029b8:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80029bc:	4770      	bx	lr
 80029be:	bf00      	nop
 80029c0:	08002ca5 	.word	0x08002ca5

080029c4 <_ZN23FrontendApplicationBase29gotoScreen3ScreenNoTransitionEv>:
 80029c4:	4b06      	ldr	r3, [pc, #24]	@ (80029e0 <_ZN23FrontendApplicationBase29gotoScreen3ScreenNoTransitionEv+0x1c>)
 80029c6:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80029ca:	2300      	movs	r3, #0
 80029cc:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen3

void FrontendApplicationBase::gotoScreen3ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen3ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80029d0:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80029d4:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80029d8:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80029dc:	4770      	bx	lr
 80029de:	bf00      	nop
 80029e0:	08002b59 	.word	0x08002b59

080029e4 <_ZN23FrontendApplicationBase29gotoScreen4ScreenNoTransitionEv>:
 80029e4:	4b06      	ldr	r3, [pc, #24]	@ (8002a00 <_ZN23FrontendApplicationBase29gotoScreen4ScreenNoTransitionEv+0x1c>)
 80029e6:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80029ea:	2300      	movs	r3, #0
 80029ec:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen4

void FrontendApplicationBase::gotoScreen4ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen4ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80029f0:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80029f4:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80029f8:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80029fc:	4770      	bx	lr
 80029fe:	bf00      	nop
 8002a00:	08002a0d 	.word	0x08002a0d

08002a04 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002a04:	6803      	ldr	r3, [r0, #0]
 8002a06:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a08:	4718      	bx	r3
	...

08002a0c <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen4ScreenNoTransitionImpl()
{
 8002a0c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen4View, Screen4Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002a10:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002a14:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002a16:	68b0      	ldr	r0, [r6, #8]
 8002a18:	6803      	ldr	r3, [r0, #0]
 8002a1a:	6a1b      	ldr	r3, [r3, #32]
 8002a1c:	4798      	blx	r3
 8002a1e:	f642 43c7 	movw	r3, #11463	@ 0x2cc7
 8002a22:	4298      	cmp	r0, r3
 8002a24:	d805      	bhi.n	8002a32 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x26>
 8002a26:	4b44      	ldr	r3, [pc, #272]	@ (8002b38 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x12c>)
 8002a28:	4a44      	ldr	r2, [pc, #272]	@ (8002b3c <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x130>)
 8002a2a:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002a2c:	4844      	ldr	r0, [pc, #272]	@ (8002b40 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x134>)
 8002a2e:	f022 fc41 	bl	80252b4 <__assert_func>
 8002a32:	6870      	ldr	r0, [r6, #4]
 8002a34:	6803      	ldr	r3, [r0, #0]
 8002a36:	6a1b      	ldr	r3, [r3, #32]
 8002a38:	4798      	blx	r3
 8002a3a:	280f      	cmp	r0, #15
 8002a3c:	d803      	bhi.n	8002a46 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x3a>
 8002a3e:	4b41      	ldr	r3, [pc, #260]	@ (8002b44 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x138>)
 8002a40:	4a3e      	ldr	r2, [pc, #248]	@ (8002b3c <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x130>)
 8002a42:	21a4      	movs	r1, #164	@ 0xa4
 8002a44:	e7f2      	b.n	8002a2c <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002a46:	68f0      	ldr	r0, [r6, #12]
 8002a48:	6803      	ldr	r3, [r0, #0]
 8002a4a:	6a1b      	ldr	r3, [r3, #32]
 8002a4c:	4798      	blx	r3
 8002a4e:	280b      	cmp	r0, #11
 8002a50:	d803      	bhi.n	8002a5a <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x4e>
 8002a52:	4b3d      	ldr	r3, [pc, #244]	@ (8002b48 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x13c>)
 8002a54:	4a39      	ldr	r2, [pc, #228]	@ (8002b3c <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x130>)
 8002a56:	21a5      	movs	r1, #165	@ 0xa5
 8002a58:	e7e8      	b.n	8002a2c <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8002a5a:	f00e ff1d 	bl	8011898 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002a5e:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8002b50 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x144>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8002a62:	3004      	adds	r0, #4
 8002a64:	f00e ff3d 	bl	80118e2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002a68:	f8d9 0000 	ldr.w	r0, [r9]
 8002a6c:	b110      	cbz	r0, 8002a74 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8002a6e:	6803      	ldr	r3, [r0, #0]
 8002a70:	68db      	ldr	r3, [r3, #12]
 8002a72:	4798      	blx	r3
    if (*currentTrans)
 8002a74:	f8d9 0000 	ldr.w	r0, [r9]
 8002a78:	b110      	cbz	r0, 8002a80 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8002a7a:	6803      	ldr	r3, [r0, #0]
 8002a7c:	681b      	ldr	r3, [r3, #0]
 8002a7e:	4798      	blx	r3
    if (*currentScreen)
 8002a80:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8002b54 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x148>
 8002a84:	f8d8 0000 	ldr.w	r0, [r8]
 8002a88:	b110      	cbz	r0, 8002a90 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8002a8a:	6803      	ldr	r3, [r0, #0]
 8002a8c:	695b      	ldr	r3, [r3, #20]
 8002a8e:	4798      	blx	r3
    if (*currentPresenter)
 8002a90:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002a94:	b110      	cbz	r0, 8002a9c <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8002a96:	6803      	ldr	r3, [r0, #0]
 8002a98:	685b      	ldr	r3, [r3, #4]
 8002a9a:	4798      	blx	r3
    if (*currentScreen)
 8002a9c:	f8d8 0000 	ldr.w	r0, [r8]
 8002aa0:	b110      	cbz	r0, 8002aa8 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8002aa2:	6803      	ldr	r3, [r0, #0]
 8002aa4:	681b      	ldr	r3, [r3, #0]
 8002aa6:	4798      	blx	r3
    if (*currentPresenter)
 8002aa8:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002aac:	b110      	cbz	r0, 8002ab4 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8002aae:	6803      	ldr	r3, [r0, #0]
 8002ab0:	689b      	ldr	r3, [r3, #8]
 8002ab2:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002ab4:	68f0      	ldr	r0, [r6, #12]
 8002ab6:	2100      	movs	r1, #0
 8002ab8:	f7ff ffa4 	bl	8002a04 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
        : screenContainer(0), done(false)
 8002abc:	f04f 0b00 	mov.w	fp, #0
 8002ac0:	4b22      	ldr	r3, [pc, #136]	@ (8002b4c <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x140>)
 8002ac2:	f8c0 b004 	str.w	fp, [r0, #4]
 8002ac6:	4604      	mov	r4, r0
 8002ac8:	f880 b008 	strb.w	fp, [r0, #8]
 8002acc:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002ace:	68b0      	ldr	r0, [r6, #8]
 8002ad0:	6803      	ldr	r3, [r0, #0]
 8002ad2:	4659      	mov	r1, fp
 8002ad4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002ad6:	4798      	blx	r3
 8002ad8:	4605      	mov	r5, r0
 8002ada:	f003 fe01 	bl	80066e0 <_ZN11Screen4ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002ade:	6870      	ldr	r0, [r6, #4]
 8002ae0:	6803      	ldr	r3, [r0, #0]
 8002ae2:	4659      	mov	r1, fp
 8002ae4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002ae6:	4798      	blx	r3
 8002ae8:	4629      	mov	r1, r5
 8002aea:	4606      	mov	r6, r0
 8002aec:	f003 fc1a 	bl	8006324 <_ZN16Screen4PresenterC1ER11Screen4View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8002af0:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002af2:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8002af6:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002afa:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002afe:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002b02:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002b04:	f8c6 a008 	str.w	sl, [r6, #8]
 8002b08:	4628      	mov	r0, r5
 8002b0a:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002b0c:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002b0e:	4798      	blx	r3
    newPresenter->activate();
 8002b10:	6833      	ldr	r3, [r6, #0]
 8002b12:	4630      	mov	r0, r6
 8002b14:	681b      	ldr	r3, [r3, #0]
 8002b16:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002b18:	4621      	mov	r1, r4
 8002b1a:	4628      	mov	r0, r5
 8002b1c:	f011 f86c 	bl	8013bf8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002b20:	6823      	ldr	r3, [r4, #0]
 8002b22:	4620      	mov	r0, r4
 8002b24:	691b      	ldr	r3, [r3, #16]
 8002b26:	4798      	blx	r3
    newTransition->invalidate();
 8002b28:	6823      	ldr	r3, [r4, #0]
 8002b2a:	695b      	ldr	r3, [r3, #20]
 8002b2c:	4620      	mov	r0, r4
}
 8002b2e:	b001      	add	sp, #4
 8002b30:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002b34:	4718      	bx	r3
 8002b36:	bf00      	nop
 8002b38:	080268d7 	.word	0x080268d7
 8002b3c:	08026965 	.word	0x08026965
 8002b40:	08026a37 	.word	0x08026a37
 8002b44:	08026a7e 	.word	0x08026a7e
 8002b48:	08026b21 	.word	0x08026b21
 8002b4c:	080278bc 	.word	0x080278bc
 8002b50:	20015280 	.word	0x20015280
 8002b54:	2001527c 	.word	0x2001527c

08002b58 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv>:
{
 8002b58:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen3View, Screen3Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002b5c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002b60:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002b62:	68b0      	ldr	r0, [r6, #8]
 8002b64:	6803      	ldr	r3, [r0, #0]
 8002b66:	6a1b      	ldr	r3, [r3, #32]
 8002b68:	4798      	blx	r3
 8002b6a:	f642 43d7 	movw	r3, #11479	@ 0x2cd7
 8002b6e:	4298      	cmp	r0, r3
 8002b70:	d805      	bhi.n	8002b7e <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x26>
 8002b72:	4b44      	ldr	r3, [pc, #272]	@ (8002c84 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x12c>)
 8002b74:	4a44      	ldr	r2, [pc, #272]	@ (8002c88 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x130>)
 8002b76:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002b78:	4844      	ldr	r0, [pc, #272]	@ (8002c8c <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x134>)
 8002b7a:	f022 fb9b 	bl	80252b4 <__assert_func>
 8002b7e:	6870      	ldr	r0, [r6, #4]
 8002b80:	6803      	ldr	r3, [r0, #0]
 8002b82:	6a1b      	ldr	r3, [r3, #32]
 8002b84:	4798      	blx	r3
 8002b86:	280f      	cmp	r0, #15
 8002b88:	d803      	bhi.n	8002b92 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x3a>
 8002b8a:	4b41      	ldr	r3, [pc, #260]	@ (8002c90 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x138>)
 8002b8c:	4a3e      	ldr	r2, [pc, #248]	@ (8002c88 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x130>)
 8002b8e:	21a4      	movs	r1, #164	@ 0xa4
 8002b90:	e7f2      	b.n	8002b78 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002b92:	68f0      	ldr	r0, [r6, #12]
 8002b94:	6803      	ldr	r3, [r0, #0]
 8002b96:	6a1b      	ldr	r3, [r3, #32]
 8002b98:	4798      	blx	r3
 8002b9a:	280b      	cmp	r0, #11
 8002b9c:	d803      	bhi.n	8002ba6 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x4e>
 8002b9e:	4b3d      	ldr	r3, [pc, #244]	@ (8002c94 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x13c>)
 8002ba0:	4a39      	ldr	r2, [pc, #228]	@ (8002c88 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x130>)
 8002ba2:	21a5      	movs	r1, #165	@ 0xa5
 8002ba4:	e7e8      	b.n	8002b78 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8002ba6:	f00e fe77 	bl	8011898 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002baa:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8002c9c <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x144>
 8002bae:	3004      	adds	r0, #4
 8002bb0:	f00e fe97 	bl	80118e2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002bb4:	f8d9 0000 	ldr.w	r0, [r9]
 8002bb8:	b110      	cbz	r0, 8002bc0 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8002bba:	6803      	ldr	r3, [r0, #0]
 8002bbc:	68db      	ldr	r3, [r3, #12]
 8002bbe:	4798      	blx	r3
    if (*currentTrans)
 8002bc0:	f8d9 0000 	ldr.w	r0, [r9]
 8002bc4:	b110      	cbz	r0, 8002bcc <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8002bc6:	6803      	ldr	r3, [r0, #0]
 8002bc8:	681b      	ldr	r3, [r3, #0]
 8002bca:	4798      	blx	r3
    if (*currentScreen)
 8002bcc:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8002ca0 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x148>
 8002bd0:	f8d8 0000 	ldr.w	r0, [r8]
 8002bd4:	b110      	cbz	r0, 8002bdc <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8002bd6:	6803      	ldr	r3, [r0, #0]
 8002bd8:	695b      	ldr	r3, [r3, #20]
 8002bda:	4798      	blx	r3
    if (*currentPresenter)
 8002bdc:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002be0:	b110      	cbz	r0, 8002be8 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8002be2:	6803      	ldr	r3, [r0, #0]
 8002be4:	685b      	ldr	r3, [r3, #4]
 8002be6:	4798      	blx	r3
    if (*currentScreen)
 8002be8:	f8d8 0000 	ldr.w	r0, [r8]
 8002bec:	b110      	cbz	r0, 8002bf4 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8002bee:	6803      	ldr	r3, [r0, #0]
 8002bf0:	681b      	ldr	r3, [r3, #0]
 8002bf2:	4798      	blx	r3
    if (*currentPresenter)
 8002bf4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002bf8:	b110      	cbz	r0, 8002c00 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8002bfa:	6803      	ldr	r3, [r0, #0]
 8002bfc:	689b      	ldr	r3, [r3, #8]
 8002bfe:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002c00:	68f0      	ldr	r0, [r6, #12]
 8002c02:	2100      	movs	r1, #0
 8002c04:	f7ff fefe 	bl	8002a04 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8002c08:	f04f 0b00 	mov.w	fp, #0
 8002c0c:	4b22      	ldr	r3, [pc, #136]	@ (8002c98 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x140>)
 8002c0e:	f8c0 b004 	str.w	fp, [r0, #4]
 8002c12:	4604      	mov	r4, r0
 8002c14:	f880 b008 	strb.w	fp, [r0, #8]
 8002c18:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002c1a:	68b0      	ldr	r0, [r6, #8]
 8002c1c:	6803      	ldr	r3, [r0, #0]
 8002c1e:	4659      	mov	r1, fp
 8002c20:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002c22:	4798      	blx	r3
 8002c24:	4605      	mov	r5, r0
 8002c26:	f002 ff33 	bl	8005a90 <_ZN11Screen3ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002c2a:	6870      	ldr	r0, [r6, #4]
 8002c2c:	6803      	ldr	r3, [r0, #0]
 8002c2e:	4659      	mov	r1, fp
 8002c30:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002c32:	4798      	blx	r3
 8002c34:	4629      	mov	r1, r5
 8002c36:	4606      	mov	r6, r0
 8002c38:	f002 fd4c 	bl	80056d4 <_ZN16Screen3PresenterC1ER11Screen3View>
    model->bind(newPresenter);
 8002c3c:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002c3e:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8002c42:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002c46:	f8c8 5000 	str.w	r5, [r8]
 8002c4a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002c4e:	682b      	ldr	r3, [r5, #0]
 8002c50:	f8c6 a008 	str.w	sl, [r6, #8]
 8002c54:	4628      	mov	r0, r5
 8002c56:	68db      	ldr	r3, [r3, #12]
 8002c58:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002c5a:	4798      	blx	r3
    newPresenter->activate();
 8002c5c:	6833      	ldr	r3, [r6, #0]
 8002c5e:	4630      	mov	r0, r6
 8002c60:	681b      	ldr	r3, [r3, #0]
 8002c62:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002c64:	4621      	mov	r1, r4
 8002c66:	4628      	mov	r0, r5
 8002c68:	f010 ffc6 	bl	8013bf8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002c6c:	6823      	ldr	r3, [r4, #0]
 8002c6e:	4620      	mov	r0, r4
 8002c70:	691b      	ldr	r3, [r3, #16]
 8002c72:	4798      	blx	r3
    newTransition->invalidate();
 8002c74:	6823      	ldr	r3, [r4, #0]
 8002c76:	695b      	ldr	r3, [r3, #20]
 8002c78:	4620      	mov	r0, r4
}
 8002c7a:	b001      	add	sp, #4
 8002c7c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002c80:	4718      	bx	r3
 8002c82:	bf00      	nop
 8002c84:	080268d7 	.word	0x080268d7
 8002c88:	08026bc4 	.word	0x08026bc4
 8002c8c:	08026a37 	.word	0x08026a37
 8002c90:	08026a7e 	.word	0x08026a7e
 8002c94:	08026b21 	.word	0x08026b21
 8002c98:	080278bc 	.word	0x080278bc
 8002c9c:	20015280 	.word	0x20015280
 8002ca0:	2001527c 	.word	0x2001527c

08002ca4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
{
 8002ca4:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002ca8:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002cac:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002cae:	68b0      	ldr	r0, [r6, #8]
 8002cb0:	6803      	ldr	r3, [r0, #0]
 8002cb2:	6a1b      	ldr	r3, [r3, #32]
 8002cb4:	4798      	blx	r3
 8002cb6:	f642 438b 	movw	r3, #11403	@ 0x2c8b
 8002cba:	4298      	cmp	r0, r3
 8002cbc:	d805      	bhi.n	8002cca <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x26>
 8002cbe:	4b44      	ldr	r3, [pc, #272]	@ (8002dd0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
 8002cc0:	4a44      	ldr	r2, [pc, #272]	@ (8002dd4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002cc2:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002cc4:	4844      	ldr	r0, [pc, #272]	@ (8002dd8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002cc6:	f022 faf5 	bl	80252b4 <__assert_func>
 8002cca:	6870      	ldr	r0, [r6, #4]
 8002ccc:	6803      	ldr	r3, [r0, #0]
 8002cce:	6a1b      	ldr	r3, [r3, #32]
 8002cd0:	4798      	blx	r3
 8002cd2:	280f      	cmp	r0, #15
 8002cd4:	d803      	bhi.n	8002cde <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x3a>
 8002cd6:	4b41      	ldr	r3, [pc, #260]	@ (8002ddc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002cd8:	4a3e      	ldr	r2, [pc, #248]	@ (8002dd4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002cda:	21a4      	movs	r1, #164	@ 0xa4
 8002cdc:	e7f2      	b.n	8002cc4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002cde:	68f0      	ldr	r0, [r6, #12]
 8002ce0:	6803      	ldr	r3, [r0, #0]
 8002ce2:	6a1b      	ldr	r3, [r3, #32]
 8002ce4:	4798      	blx	r3
 8002ce6:	280b      	cmp	r0, #11
 8002ce8:	d803      	bhi.n	8002cf2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4e>
 8002cea:	4b3d      	ldr	r3, [pc, #244]	@ (8002de0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 8002cec:	4a39      	ldr	r2, [pc, #228]	@ (8002dd4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002cee:	21a5      	movs	r1, #165	@ 0xa5
 8002cf0:	e7e8      	b.n	8002cc4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8002cf2:	f00e fdd1 	bl	8011898 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002cf6:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8002de8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>
 8002cfa:	3004      	adds	r0, #4
 8002cfc:	f00e fdf1 	bl	80118e2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002d00:	f8d9 0000 	ldr.w	r0, [r9]
 8002d04:	b110      	cbz	r0, 8002d0c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8002d06:	6803      	ldr	r3, [r0, #0]
 8002d08:	68db      	ldr	r3, [r3, #12]
 8002d0a:	4798      	blx	r3
    if (*currentTrans)
 8002d0c:	f8d9 0000 	ldr.w	r0, [r9]
 8002d10:	b110      	cbz	r0, 8002d18 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8002d12:	6803      	ldr	r3, [r0, #0]
 8002d14:	681b      	ldr	r3, [r3, #0]
 8002d16:	4798      	blx	r3
    if (*currentScreen)
 8002d18:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8002dec <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
 8002d1c:	f8d8 0000 	ldr.w	r0, [r8]
 8002d20:	b110      	cbz	r0, 8002d28 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8002d22:	6803      	ldr	r3, [r0, #0]
 8002d24:	695b      	ldr	r3, [r3, #20]
 8002d26:	4798      	blx	r3
    if (*currentPresenter)
 8002d28:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002d2c:	b110      	cbz	r0, 8002d34 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8002d2e:	6803      	ldr	r3, [r0, #0]
 8002d30:	685b      	ldr	r3, [r3, #4]
 8002d32:	4798      	blx	r3
    if (*currentScreen)
 8002d34:	f8d8 0000 	ldr.w	r0, [r8]
 8002d38:	b110      	cbz	r0, 8002d40 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8002d3a:	6803      	ldr	r3, [r0, #0]
 8002d3c:	681b      	ldr	r3, [r3, #0]
 8002d3e:	4798      	blx	r3
    if (*currentPresenter)
 8002d40:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002d44:	b110      	cbz	r0, 8002d4c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8002d46:	6803      	ldr	r3, [r0, #0]
 8002d48:	689b      	ldr	r3, [r3, #8]
 8002d4a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002d4c:	68f0      	ldr	r0, [r6, #12]
 8002d4e:	2100      	movs	r1, #0
 8002d50:	f7ff fe58 	bl	8002a04 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8002d54:	f04f 0b00 	mov.w	fp, #0
 8002d58:	4b22      	ldr	r3, [pc, #136]	@ (8002de4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 8002d5a:	f8c0 b004 	str.w	fp, [r0, #4]
 8002d5e:	4604      	mov	r4, r0
 8002d60:	f880 b008 	strb.w	fp, [r0, #8]
 8002d64:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002d66:	68b0      	ldr	r0, [r6, #8]
 8002d68:	6803      	ldr	r3, [r0, #0]
 8002d6a:	4659      	mov	r1, fp
 8002d6c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002d6e:	4798      	blx	r3
 8002d70:	4605      	mov	r5, r0
 8002d72:	f002 f88b 	bl	8004e8c <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002d76:	6870      	ldr	r0, [r6, #4]
 8002d78:	6803      	ldr	r3, [r0, #0]
 8002d7a:	4659      	mov	r1, fp
 8002d7c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002d7e:	4798      	blx	r3
 8002d80:	4629      	mov	r1, r5
 8002d82:	4606      	mov	r6, r0
 8002d84:	f001 fe4e 	bl	8004a24 <_ZN16Screen1PresenterC1ER11Screen1View>
    model->bind(newPresenter);
 8002d88:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002d8a:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8002d8e:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002d92:	f8c8 5000 	str.w	r5, [r8]
 8002d96:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002d9a:	682b      	ldr	r3, [r5, #0]
 8002d9c:	f8c6 a008 	str.w	sl, [r6, #8]
 8002da0:	4628      	mov	r0, r5
 8002da2:	68db      	ldr	r3, [r3, #12]
 8002da4:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002da6:	4798      	blx	r3
    newPresenter->activate();
 8002da8:	6833      	ldr	r3, [r6, #0]
 8002daa:	4630      	mov	r0, r6
 8002dac:	681b      	ldr	r3, [r3, #0]
 8002dae:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002db0:	4621      	mov	r1, r4
 8002db2:	4628      	mov	r0, r5
 8002db4:	f010 ff20 	bl	8013bf8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002db8:	6823      	ldr	r3, [r4, #0]
 8002dba:	4620      	mov	r0, r4
 8002dbc:	691b      	ldr	r3, [r3, #16]
 8002dbe:	4798      	blx	r3
    newTransition->invalidate();
 8002dc0:	6823      	ldr	r3, [r4, #0]
 8002dc2:	695b      	ldr	r3, [r3, #20]
 8002dc4:	4620      	mov	r0, r4
}
 8002dc6:	b001      	add	sp, #4
 8002dc8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002dcc:	4718      	bx	r3
 8002dce:	bf00      	nop
 8002dd0:	080268d7 	.word	0x080268d7
 8002dd4:	08026c96 	.word	0x08026c96
 8002dd8:	08026a37 	.word	0x08026a37
 8002ddc:	08026a7e 	.word	0x08026a7e
 8002de0:	08026b21 	.word	0x08026b21
 8002de4:	080278bc 	.word	0x080278bc
 8002de8:	20015280 	.word	0x20015280
 8002dec:	2001527c 	.word	0x2001527c

08002df0 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv>:
{
 8002df0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<ScreenWaitView, ScreenWaitPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002df4:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002df8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002dfa:	68b0      	ldr	r0, [r6, #8]
 8002dfc:	6803      	ldr	r3, [r0, #0]
 8002dfe:	6a1b      	ldr	r3, [r3, #32]
 8002e00:	4798      	blx	r3
 8002e02:	f5b0 7fcc 	cmp.w	r0, #408	@ 0x198
 8002e06:	d205      	bcs.n	8002e14 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x24>
 8002e08:	4b43      	ldr	r3, [pc, #268]	@ (8002f18 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x128>)
 8002e0a:	4a44      	ldr	r2, [pc, #272]	@ (8002f1c <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x12c>)
 8002e0c:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002e0e:	4844      	ldr	r0, [pc, #272]	@ (8002f20 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x130>)
 8002e10:	f022 fa50 	bl	80252b4 <__assert_func>
 8002e14:	6870      	ldr	r0, [r6, #4]
 8002e16:	6803      	ldr	r3, [r0, #0]
 8002e18:	6a1b      	ldr	r3, [r3, #32]
 8002e1a:	4798      	blx	r3
 8002e1c:	280f      	cmp	r0, #15
 8002e1e:	d803      	bhi.n	8002e28 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x38>
 8002e20:	4b40      	ldr	r3, [pc, #256]	@ (8002f24 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x134>)
 8002e22:	4a3e      	ldr	r2, [pc, #248]	@ (8002f1c <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x12c>)
 8002e24:	21a4      	movs	r1, #164	@ 0xa4
 8002e26:	e7f2      	b.n	8002e0e <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002e28:	68f0      	ldr	r0, [r6, #12]
 8002e2a:	6803      	ldr	r3, [r0, #0]
 8002e2c:	6a1b      	ldr	r3, [r3, #32]
 8002e2e:	4798      	blx	r3
 8002e30:	280b      	cmp	r0, #11
 8002e32:	d803      	bhi.n	8002e3c <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x4c>
 8002e34:	4b3c      	ldr	r3, [pc, #240]	@ (8002f28 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x138>)
 8002e36:	4a39      	ldr	r2, [pc, #228]	@ (8002f1c <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x12c>)
 8002e38:	21a5      	movs	r1, #165	@ 0xa5
 8002e3a:	e7e8      	b.n	8002e0e <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8002e3c:	f00e fd2c 	bl	8011898 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002e40:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8002f30 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x140>
 8002e44:	3004      	adds	r0, #4
 8002e46:	f00e fd4c 	bl	80118e2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002e4a:	f8d9 0000 	ldr.w	r0, [r9]
 8002e4e:	b110      	cbz	r0, 8002e56 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8002e50:	6803      	ldr	r3, [r0, #0]
 8002e52:	68db      	ldr	r3, [r3, #12]
 8002e54:	4798      	blx	r3
    if (*currentTrans)
 8002e56:	f8d9 0000 	ldr.w	r0, [r9]
 8002e5a:	b110      	cbz	r0, 8002e62 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8002e5c:	6803      	ldr	r3, [r0, #0]
 8002e5e:	681b      	ldr	r3, [r3, #0]
 8002e60:	4798      	blx	r3
    if (*currentScreen)
 8002e62:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8002f34 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x144>
 8002e66:	f8d8 0000 	ldr.w	r0, [r8]
 8002e6a:	b110      	cbz	r0, 8002e72 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002e6c:	6803      	ldr	r3, [r0, #0]
 8002e6e:	695b      	ldr	r3, [r3, #20]
 8002e70:	4798      	blx	r3
    if (*currentPresenter)
 8002e72:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002e76:	b110      	cbz	r0, 8002e7e <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002e78:	6803      	ldr	r3, [r0, #0]
 8002e7a:	685b      	ldr	r3, [r3, #4]
 8002e7c:	4798      	blx	r3
    if (*currentScreen)
 8002e7e:	f8d8 0000 	ldr.w	r0, [r8]
 8002e82:	b110      	cbz	r0, 8002e8a <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002e84:	6803      	ldr	r3, [r0, #0]
 8002e86:	681b      	ldr	r3, [r3, #0]
 8002e88:	4798      	blx	r3
    if (*currentPresenter)
 8002e8a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002e8e:	b110      	cbz	r0, 8002e96 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002e90:	6803      	ldr	r3, [r0, #0]
 8002e92:	689b      	ldr	r3, [r3, #8]
 8002e94:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002e96:	68f0      	ldr	r0, [r6, #12]
 8002e98:	2100      	movs	r1, #0
 8002e9a:	f7ff fdb3 	bl	8002a04 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8002e9e:	f04f 0b00 	mov.w	fp, #0
 8002ea2:	4b22      	ldr	r3, [pc, #136]	@ (8002f2c <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x13c>)
 8002ea4:	f8c0 b004 	str.w	fp, [r0, #4]
 8002ea8:	4604      	mov	r4, r0
 8002eaa:	f880 b008 	strb.w	fp, [r0, #8]
 8002eae:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002eb0:	68b0      	ldr	r0, [r6, #8]
 8002eb2:	6803      	ldr	r3, [r0, #0]
 8002eb4:	4659      	mov	r1, fp
 8002eb6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002eb8:	4798      	blx	r3
 8002eba:	4605      	mov	r5, r0
 8002ebc:	f004 f87c 	bl	8006fb8 <_ZN14ScreenWaitViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002ec0:	6870      	ldr	r0, [r6, #4]
 8002ec2:	6803      	ldr	r3, [r0, #0]
 8002ec4:	4659      	mov	r1, fp
 8002ec6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002ec8:	4798      	blx	r3
 8002eca:	4629      	mov	r1, r5
 8002ecc:	4606      	mov	r6, r0
 8002ece:	f004 f851 	bl	8006f74 <_ZN19ScreenWaitPresenterC1ER14ScreenWaitView>
    model->bind(newPresenter);
 8002ed2:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002ed4:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8002ed8:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002edc:	f8c8 5000 	str.w	r5, [r8]
 8002ee0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002ee4:	682b      	ldr	r3, [r5, #0]
 8002ee6:	f8c6 a008 	str.w	sl, [r6, #8]
 8002eea:	4628      	mov	r0, r5
 8002eec:	68db      	ldr	r3, [r3, #12]
 8002eee:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002ef0:	4798      	blx	r3
    newPresenter->activate();
 8002ef2:	6833      	ldr	r3, [r6, #0]
 8002ef4:	4630      	mov	r0, r6
 8002ef6:	681b      	ldr	r3, [r3, #0]
 8002ef8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002efa:	4621      	mov	r1, r4
 8002efc:	4628      	mov	r0, r5
 8002efe:	f010 fe7b 	bl	8013bf8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002f02:	6823      	ldr	r3, [r4, #0]
 8002f04:	4620      	mov	r0, r4
 8002f06:	691b      	ldr	r3, [r3, #16]
 8002f08:	4798      	blx	r3
    newTransition->invalidate();
 8002f0a:	6823      	ldr	r3, [r4, #0]
 8002f0c:	695b      	ldr	r3, [r3, #20]
 8002f0e:	4620      	mov	r0, r4
}
 8002f10:	b001      	add	sp, #4
 8002f12:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002f16:	4718      	bx	r3
 8002f18:	080268d7 	.word	0x080268d7
 8002f1c:	08026d68 	.word	0x08026d68
 8002f20:	08026a37 	.word	0x08026a37
 8002f24:	08026a7e 	.word	0x08026a7e
 8002f28:	08026b21 	.word	0x08026b21
 8002f2c:	080278bc 	.word	0x080278bc
 8002f30:	20015280 	.word	0x20015280
 8002f34:	2001527c 	.word	0x2001527c

08002f38 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv>:
{
 8002f38:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002f3c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002f40:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002f42:	68b0      	ldr	r0, [r6, #8]
 8002f44:	6803      	ldr	r3, [r0, #0]
 8002f46:	6a1b      	ldr	r3, [r3, #32]
 8002f48:	4798      	blx	r3
 8002f4a:	f5b0 7f26 	cmp.w	r0, #664	@ 0x298
 8002f4e:	d205      	bcs.n	8002f5c <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x24>
 8002f50:	4b43      	ldr	r3, [pc, #268]	@ (8003060 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x128>)
 8002f52:	4a44      	ldr	r2, [pc, #272]	@ (8003064 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x12c>)
 8002f54:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002f56:	4844      	ldr	r0, [pc, #272]	@ (8003068 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x130>)
 8002f58:	f022 f9ac 	bl	80252b4 <__assert_func>
 8002f5c:	6870      	ldr	r0, [r6, #4]
 8002f5e:	6803      	ldr	r3, [r0, #0]
 8002f60:	6a1b      	ldr	r3, [r3, #32]
 8002f62:	4798      	blx	r3
 8002f64:	280f      	cmp	r0, #15
 8002f66:	d803      	bhi.n	8002f70 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x38>
 8002f68:	4b40      	ldr	r3, [pc, #256]	@ (800306c <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x134>)
 8002f6a:	4a3e      	ldr	r2, [pc, #248]	@ (8003064 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x12c>)
 8002f6c:	21a4      	movs	r1, #164	@ 0xa4
 8002f6e:	e7f2      	b.n	8002f56 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002f70:	68f0      	ldr	r0, [r6, #12]
 8002f72:	6803      	ldr	r3, [r0, #0]
 8002f74:	6a1b      	ldr	r3, [r3, #32]
 8002f76:	4798      	blx	r3
 8002f78:	280b      	cmp	r0, #11
 8002f7a:	d803      	bhi.n	8002f84 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x4c>
 8002f7c:	4b3c      	ldr	r3, [pc, #240]	@ (8003070 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x138>)
 8002f7e:	4a39      	ldr	r2, [pc, #228]	@ (8003064 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x12c>)
 8002f80:	21a5      	movs	r1, #165	@ 0xa5
 8002f82:	e7e8      	b.n	8002f56 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8002f84:	f00e fc88 	bl	8011898 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002f88:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8003078 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x140>
 8002f8c:	3004      	adds	r0, #4
 8002f8e:	f00e fca8 	bl	80118e2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002f92:	f8d9 0000 	ldr.w	r0, [r9]
 8002f96:	b110      	cbz	r0, 8002f9e <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8002f98:	6803      	ldr	r3, [r0, #0]
 8002f9a:	68db      	ldr	r3, [r3, #12]
 8002f9c:	4798      	blx	r3
    if (*currentTrans)
 8002f9e:	f8d9 0000 	ldr.w	r0, [r9]
 8002fa2:	b110      	cbz	r0, 8002faa <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8002fa4:	6803      	ldr	r3, [r0, #0]
 8002fa6:	681b      	ldr	r3, [r3, #0]
 8002fa8:	4798      	blx	r3
    if (*currentScreen)
 8002faa:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 800307c <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x144>
 8002fae:	f8d8 0000 	ldr.w	r0, [r8]
 8002fb2:	b110      	cbz	r0, 8002fba <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002fb4:	6803      	ldr	r3, [r0, #0]
 8002fb6:	695b      	ldr	r3, [r3, #20]
 8002fb8:	4798      	blx	r3
    if (*currentPresenter)
 8002fba:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002fbe:	b110      	cbz	r0, 8002fc6 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002fc0:	6803      	ldr	r3, [r0, #0]
 8002fc2:	685b      	ldr	r3, [r3, #4]
 8002fc4:	4798      	blx	r3
    if (*currentScreen)
 8002fc6:	f8d8 0000 	ldr.w	r0, [r8]
 8002fca:	b110      	cbz	r0, 8002fd2 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002fcc:	6803      	ldr	r3, [r0, #0]
 8002fce:	681b      	ldr	r3, [r3, #0]
 8002fd0:	4798      	blx	r3
    if (*currentPresenter)
 8002fd2:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002fd6:	b110      	cbz	r0, 8002fde <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002fd8:	6803      	ldr	r3, [r0, #0]
 8002fda:	689b      	ldr	r3, [r3, #8]
 8002fdc:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002fde:	68f0      	ldr	r0, [r6, #12]
 8002fe0:	2100      	movs	r1, #0
 8002fe2:	f7ff fd0f 	bl	8002a04 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8002fe6:	f04f 0b00 	mov.w	fp, #0
 8002fea:	4b22      	ldr	r3, [pc, #136]	@ (8003074 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x13c>)
 8002fec:	f8c0 b004 	str.w	fp, [r0, #4]
 8002ff0:	4604      	mov	r4, r0
 8002ff2:	f880 b008 	strb.w	fp, [r0, #8]
 8002ff6:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002ff8:	68b0      	ldr	r0, [r6, #8]
 8002ffa:	6803      	ldr	r3, [r0, #0]
 8002ffc:	4659      	mov	r1, fp
 8002ffe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003000:	4798      	blx	r3
 8003002:	4605      	mov	r5, r0
 8003004:	f002 fb0e 	bl	8005624 <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003008:	6870      	ldr	r0, [r6, #4]
 800300a:	6803      	ldr	r3, [r0, #0]
 800300c:	4659      	mov	r1, fp
 800300e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003010:	4798      	blx	r3
 8003012:	4629      	mov	r1, r5
 8003014:	4606      	mov	r6, r0
 8003016:	f002 fabb 	bl	8005590 <_ZN16Screen2PresenterC1ER11Screen2View>
    model->bind(newPresenter);
 800301a:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 800301c:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003020:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003024:	f8c8 5000 	str.w	r5, [r8]
 8003028:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800302c:	682b      	ldr	r3, [r5, #0]
 800302e:	f8c6 a008 	str.w	sl, [r6, #8]
 8003032:	4628      	mov	r0, r5
 8003034:	68db      	ldr	r3, [r3, #12]
 8003036:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8003038:	4798      	blx	r3
    newPresenter->activate();
 800303a:	6833      	ldr	r3, [r6, #0]
 800303c:	4630      	mov	r0, r6
 800303e:	681b      	ldr	r3, [r3, #0]
 8003040:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003042:	4621      	mov	r1, r4
 8003044:	4628      	mov	r0, r5
 8003046:	f010 fdd7 	bl	8013bf8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800304a:	6823      	ldr	r3, [r4, #0]
 800304c:	4620      	mov	r0, r4
 800304e:	691b      	ldr	r3, [r3, #16]
 8003050:	4798      	blx	r3
    newTransition->invalidate();
 8003052:	6823      	ldr	r3, [r4, #0]
 8003054:	695b      	ldr	r3, [r3, #20]
 8003056:	4620      	mov	r0, r4
}
 8003058:	b001      	add	sp, #4
 800305a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800305e:	4718      	bx	r3
 8003060:	080268d7 	.word	0x080268d7
 8003064:	08026e40 	.word	0x08026e40
 8003068:	08026a37 	.word	0x08026a37
 800306c:	08026a7e 	.word	0x08026a7e
 8003070:	08026b21 	.word	0x08026b21
 8003074:	080278bc 	.word	0x080278bc
 8003078:	20015280 	.word	0x20015280
 800307c:	2001527c 	.word	0x2001527c

08003080 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8003080:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8003082:	4770      	bx	lr

08003084 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8003084:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8003086:	4770      	bx	lr

08003088 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8003088:	4770      	bx	lr

0800308a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
    offset |= dataOffset[1] << 16;

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    const uint8_t* pixels = table[glyph->unicode / 2048];
 800308a:	888a      	ldrh	r2, [r1, #4]
    uint32_t offset = dataOffset[0];
 800308c:	880b      	ldrh	r3, [r1, #0]
{
 800308e:	b510      	push	{r4, lr}
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8003090:	0ad2      	lsrs	r2, r2, #11
    offset |= dataOffset[1] << 16;
 8003092:	884c      	ldrh	r4, [r1, #2]
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8003094:	69c1      	ldr	r1, [r0, #28]
    uint32_t offset = dataOffset[0];
 8003096:	b29b      	uxth	r3, r3
    return pixels + offset;
 8003098:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
    offset |= dataOffset[1] << 16;
 800309c:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
}
 80030a0:	4418      	add	r0, r3
 80030a2:	bd10      	pop	{r4, pc}

080030a4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80030a4:	b510      	push	{r4, lr}
 80030a6:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 80030a8:	b1ba      	cbz	r2, 80030da <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80030aa:	7b10      	ldrb	r0, [r2, #12]
 80030ac:	b168      	cbz	r0, 80030ca <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80030ae:	7b53      	ldrb	r3, [r2, #13]
 80030b0:	7ad2      	ldrb	r2, [r2, #11]
 80030b2:	021b      	lsls	r3, r3, #8
 80030b4:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80030b8:	431a      	orrs	r2, r3
 80030ba:	6a23      	ldr	r3, [r4, #32]
 80030bc:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 80030c0:	881a      	ldrh	r2, [r3, #0]
 80030c2:	428a      	cmp	r2, r1
 80030c4:	d102      	bne.n	80030cc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80030c6:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 80030ca:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80030cc:	d805      	bhi.n	80030da <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80030ce:	3801      	subs	r0, #1
 80030d0:	b280      	uxth	r0, r0
 80030d2:	3304      	adds	r3, #4
 80030d4:	2800      	cmp	r0, #0
 80030d6:	d1f3      	bne.n	80030c0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80030d8:	e7f7      	b.n	80030ca <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80030da:	2000      	movs	r0, #0
 80030dc:	e7f5      	b.n	80030ca <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080030de <_ZN8touchgfx13GeneratedFontD0Ev>:
 80030de:	b510      	push	{r4, lr}
 80030e0:	212c      	movs	r1, #44	@ 0x2c
 80030e2:	4604      	mov	r4, r0
 80030e4:	f021 f9a9 	bl	802443a <_ZdlPvj>
 80030e8:	4620      	mov	r0, r4
 80030ea:	bd10      	pop	{r4, pc}

080030ec <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80030ec:	b530      	push	{r4, r5, lr}
 80030ee:	b08b      	sub	sp, #44	@ 0x2c
 80030f0:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80030f2:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 80030f6:	9508      	str	r5, [sp, #32]
 80030f8:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 80030fc:	9507      	str	r5, [sp, #28]
 80030fe:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8003102:	9506      	str	r5, [sp, #24]
 8003104:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 8003108:	9505      	str	r5, [sp, #20]
 800310a:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800310e:	9504      	str	r5, [sp, #16]
 8003110:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8003114:	9503      	str	r5, [sp, #12]
 8003116:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 800311a:	9502      	str	r5, [sp, #8]
 800311c:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 8003120:	9501      	str	r5, [sp, #4]
 8003122:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8003126:	9500      	str	r5, [sp, #0]
 8003128:	f010 f9c0 	bl	80134ac <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800312c:	4b06      	ldr	r3, [pc, #24]	@ (8003148 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 800312e:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8003130:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8003132:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8003134:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8003136:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8003138:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800313a:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 800313c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 800313e:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 8003140:	4620      	mov	r0, r4
 8003142:	b00b      	add	sp, #44	@ 0x2c
 8003144:	bd30      	pop	{r4, r5, pc}
 8003146:	bf00      	nop
 8003148:	080278e0 	.word	0x080278e0

0800314c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 800314c:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800314e:	4770      	bx	lr

08003150 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8003150:	4770      	bx	lr

08003152 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8003152:	4770      	bx	lr

08003154 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8003154:	4770      	bx	lr

08003156 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8003156:	4770      	bx	lr

08003158 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8003158:	4770      	bx	lr

0800315a <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 800315a:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 800315c:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
 800315e:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8003160:	466d      	mov	r5, sp
        rect.width = width;
 8003162:	8101      	strh	r1, [r0, #8]
 8003164:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8003168:	4601      	mov	r1, r0
    virtual void setWidth(int16_t width)
 800316a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 800316c:	4628      	mov	r0, r5
 800316e:	4798      	blx	r3
 8003170:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003174:	343c      	adds	r4, #60	@ 0x3c
 8003176:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800317a:	b005      	add	sp, #20
 800317c:	bd30      	pop	{r4, r5, pc}

0800317e <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800317e:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8003180:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
 8003182:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8003184:	466d      	mov	r5, sp
        rect.height = height;
 8003186:	8141      	strh	r1, [r0, #10]
 8003188:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800318c:	4601      	mov	r1, r0
    virtual void setHeight(int16_t height)
 800318e:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8003190:	4628      	mov	r0, r5
 8003192:	4798      	blx	r3
 8003194:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003198:	343c      	adds	r4, #60	@ 0x3c
 800319a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800319e:	b005      	add	sp, #20
 80031a0:	bd30      	pop	{r4, r5, pc}

080031a2 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80031a2:	2200      	movs	r2, #0
 80031a4:	8002      	strh	r2, [r0, #0]
 80031a6:	8042      	strh	r2, [r0, #2]
 80031a8:	8082      	strh	r2, [r0, #4]
 80031aa:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80031ac:	4770      	bx	lr

080031ae <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80031ae:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
 80031b2:	4770      	bx	lr

080031b4 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80031b4:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80031b6:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80031b8:	4604      	mov	r4, r0
        setX(x);
 80031ba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80031bc:	4615      	mov	r5, r2
        setX(x);
 80031be:	4798      	blx	r3
        setBaselineY(baselineY);
 80031c0:	6823      	ldr	r3, [r4, #0]
 80031c2:	4629      	mov	r1, r5
 80031c4:	4620      	mov	r0, r4
 80031c6:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
    }
 80031c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80031cc:	4718      	bx	r3

080031ce <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80031ce:	2000      	movs	r0, #0
 80031d0:	4770      	bx	lr

080031d2 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80031d2:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 80031d4:	4770      	bx	lr

080031d6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 80031d6:	4770      	bx	lr

080031d8 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80031d8:	4770      	bx	lr

080031da <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80031da:	4770      	bx	lr

080031dc <_ZN15Screen1ViewBaseD1Ev>:
}

Screen1ViewBase::~Screen1ViewBase()
{

}
 80031dc:	4770      	bx	lr

080031de <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{

}
 80031de:	4770      	bx	lr

080031e0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed() const
    {
        return pressed;
 80031e0:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 80031e4:	b14b      	cbz	r3, 80031fa <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 80031e6:	f100 026c 	add.w	r2, r0, #108	@ 0x6c
 80031ea:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80031ec:	65c2      	str	r2, [r0, #92]	@ 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80031ee:	b13b      	cbz	r3, 8003200 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 80031f0:	f100 0374 	add.w	r3, r0, #116	@ 0x74
 80031f4:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 80031f6:	6603      	str	r3, [r0, #96]	@ 0x60
        T::handlePressedUpdated();
    }
 80031f8:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 80031fa:	f100 0268 	add.w	r2, r0, #104	@ 0x68
 80031fe:	e7f4      	b.n	80031ea <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8003200:	f100 0370 	add.w	r3, r0, #112	@ 0x70
 8003204:	e7f6      	b.n	80031f4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

08003206 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003206:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003208:	68c2      	ldr	r2, [r0, #12]
 800320a:	6844      	ldr	r4, [r0, #4]
 800320c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800320e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003210:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003214:	07d2      	lsls	r2, r2, #31
 8003216:	bf48      	it	mi
 8003218:	5962      	ldrmi	r2, [r4, r5]
 800321a:	689b      	ldr	r3, [r3, #8]
    }
 800321c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800321e:	bf48      	it	mi
 8003220:	58d3      	ldrmi	r3, [r2, r3]
 8003222:	4718      	bx	r3

08003224 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8003224:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8003226:	6840      	ldr	r0, [r0, #4]
 8003228:	b130      	cbz	r0, 8003238 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 800322a:	689a      	ldr	r2, [r3, #8]
 800322c:	b91a      	cbnz	r2, 8003236 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 800322e:	68d8      	ldr	r0, [r3, #12]
 8003230:	f000 0001 	and.w	r0, r0, #1
 8003234:	4770      	bx	lr
 8003236:	2001      	movs	r0, #1
    }
 8003238:	4770      	bx	lr

0800323a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800323a:	f890 302d 	ldrb.w	r3, [r0, #45]	@ 0x2d
 800323e:	f880 305a 	strb.w	r3, [r0, #90]	@ 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8003242:	4770      	bx	lr

08003244 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8003244:	b510      	push	{r4, lr}
 8003246:	214c      	movs	r1, #76	@ 0x4c
 8003248:	4604      	mov	r4, r0
 800324a:	f021 f8f6 	bl	802443a <_ZdlPvj>
 800324e:	4620      	mov	r0, r4
 8003250:	bd10      	pop	{r4, pc}

08003252 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8003252:	b510      	push	{r4, lr}
 8003254:	2178      	movs	r1, #120	@ 0x78
 8003256:	4604      	mov	r4, r0
 8003258:	f021 f8ef 	bl	802443a <_ZdlPvj>
 800325c:	4620      	mov	r0, r4
 800325e:	bd10      	pop	{r4, pc}

08003260 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003260:	b510      	push	{r4, lr}
 8003262:	2110      	movs	r1, #16
 8003264:	4604      	mov	r4, r0
 8003266:	f021 f8e8 	bl	802443a <_ZdlPvj>
 800326a:	4620      	mov	r0, r4
 800326c:	bd10      	pop	{r4, pc}

0800326e <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 800326e:	b510      	push	{r4, lr}
}
 8003270:	f44f 7135 	mov.w	r1, #724	@ 0x2d4
Screen1ViewBase::~Screen1ViewBase()
 8003274:	4604      	mov	r4, r0
}
 8003276:	f021 f8e0 	bl	802443a <_ZdlPvj>
 800327a:	4620      	mov	r0, r4
 800327c:	bd10      	pop	{r4, pc}

0800327e <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 800327e:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8003280:	f7ff f97a 	bl	8002578 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8003284:	bd08      	pop	{r3, pc}

08003286 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8003286:	b510      	push	{r4, lr}
 8003288:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 800328a:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 800328c:	b150      	cbz	r0, 80032a4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 800328e:	6803      	ldr	r3, [r0, #0]
 8003290:	68db      	ldr	r3, [r3, #12]
 8003292:	4798      	blx	r3
 8003294:	b130      	cbz	r0, 80032a4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8003296:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8003298:	6803      	ldr	r3, [r0, #0]
 800329a:	4621      	mov	r1, r4
 800329c:	689b      	ldr	r3, [r3, #8]
        }
    }
 800329e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 80032a2:	4718      	bx	r3
    }
 80032a4:	bd10      	pop	{r4, pc}

080032a6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 80032a6:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 80032a8:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 80032aa:	f890 602c 	ldrb.w	r6, [r0, #44]	@ 0x2c
 80032ae:	4604      	mov	r4, r0
 80032b0:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 80032b2:	b90b      	cbnz	r3, 80032b8 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x12>
 80032b4:	b116      	cbz	r6, 80032bc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
        {
            executeAction();
        }
    }
 80032b6:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 80032b8:	2e00      	cmp	r6, #0
 80032ba:	d0fc      	beq.n	80032b6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 80032bc:	fab3 f383 	clz	r3, r3
 80032c0:	095b      	lsrs	r3, r3, #5
 80032c2:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
        handlePressedUpdated();
 80032c6:	6823      	ldr	r3, [r4, #0]
 80032c8:	4620      	mov	r0, r4
 80032ca:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80032ce:	4798      	blx	r3
            invalidate();
 80032d0:	6823      	ldr	r3, [r4, #0]
 80032d2:	4620      	mov	r0, r4
 80032d4:	695b      	ldr	r3, [r3, #20]
 80032d6:	4798      	blx	r3
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 80032d8:	2e00      	cmp	r6, #0
 80032da:	d0ec      	beq.n	80032b6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
 80032dc:	792b      	ldrb	r3, [r5, #4]
 80032de:	2b01      	cmp	r3, #1
 80032e0:	d1e9      	bne.n	80032b6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 80032e2:	6823      	ldr	r3, [r4, #0]
 80032e4:	4620      	mov	r0, r4
 80032e6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    }
 80032ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 80032ee:	4718      	bx	r3

080032f0 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80032f0:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80032f2:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80032f4:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80032f6:	4b12      	ldr	r3, [pc, #72]	@ (8003340 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80032f8:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80032fa:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80032fc:	b28d      	uxth	r5, r1
 80032fe:	b92b      	cbnz	r3, 800330c <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8003300:	4b10      	ldr	r3, [pc, #64]	@ (8003344 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8003302:	4a11      	ldr	r2, [pc, #68]	@ (8003348 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003304:	216c      	movs	r1, #108	@ 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003306:	4811      	ldr	r0, [pc, #68]	@ (800334c <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8003308:	f021 ffd4 	bl	80252b4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800330c:	4910      	ldr	r1, [pc, #64]	@ (8003350 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800330e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003310:	8809      	ldrh	r1, [r1, #0]
 8003312:	4291      	cmp	r1, r2
 8003314:	d803      	bhi.n	800331e <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8003316:	4b0f      	ldr	r3, [pc, #60]	@ (8003354 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8003318:	4a0b      	ldr	r2, [pc, #44]	@ (8003348 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800331a:	216d      	movs	r1, #109	@ 0x6d
 800331c:	e7f3      	b.n	8003306 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 800331e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8003322:	4b0d      	ldr	r3, [pc, #52]	@ (8003358 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8003324:	681b      	ldr	r3, [r3, #0]
 8003326:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800332a:	6803      	ldr	r3, [r0, #0]
 800332c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800332e:	4798      	blx	r3
 8003330:	1a29      	subs	r1, r5, r0
 8003332:	4633      	mov	r3, r6
 8003334:	4620      	mov	r0, r4
 8003336:	b209      	sxth	r1, r1
    }
 8003338:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800333c:	4718      	bx	r3
 800333e:	bf00      	nop
 8003340:	20015290 	.word	0x20015290
 8003344:	08026f12 	.word	0x08026f12
 8003348:	08026f54 	.word	0x08026f54
 800334c:	08026f8f 	.word	0x08026f8f
 8003350:	20015294 	.word	0x20015294
 8003354:	08026fd6 	.word	0x08026fd6
 8003358:	20015298 	.word	0x20015298

0800335c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800335c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &flexButton1)
 800335e:	f100 0398 	add.w	r3, r0, #152	@ 0x98
 8003362:	4299      	cmp	r1, r3
{
 8003364:	4604      	mov	r4, r0
 8003366:	460d      	mov	r5, r1
    if (&src == &flexButton1)
 8003368:	d103      	bne.n	8003372 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~Screen1ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800336a:	f00e fa95 	bl	8011898 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When flexButton1 clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
 800336e:	f7ff faf9 	bl	8002964 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
    }
    if (&src == &flexButton2)
 8003372:	f504 73c4 	add.w	r3, r4, #392	@ 0x188
 8003376:	429d      	cmp	r5, r3
 8003378:	d103      	bne.n	8003382 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
 800337a:	f00e fa8d 	bl	8011898 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When flexButton2 clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
 800337e:	f7ff faf1 	bl	8002964 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
    }
    if (&src == &flexButton3)
 8003382:	f504 7400 	add.w	r4, r4, #512	@ 0x200
 8003386:	42a5      	cmp	r5, r4
 8003388:	d105      	bne.n	8003396 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3a>
 800338a:	f00e fa85 	bl	8011898 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When flexButton3 clicked change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
    }
}
 800338e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoScreen1ScreenNoTransition();
 8003392:	f7ff bb07 	b.w	80029a4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
}
 8003396:	bd38      	pop	{r3, r4, r5, pc}

08003398 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8003398:	2200      	movs	r2, #0
 800339a:	f04f 31ff 	mov.w	r1, #4294967295
 800339e:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 80033a2:	6082      	str	r2, [r0, #8]
    }
 80033a4:	4770      	bx	lr

080033a6 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80033a6:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80033a8:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80033aa:	4604      	mov	r4, r0
        setX(x);
 80033ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
 80033ae:	4615      	mov	r5, r2
        setX(x);
 80033b0:	4798      	blx	r3
        setY(y);
 80033b2:	6823      	ldr	r3, [r4, #0]
 80033b4:	4629      	mov	r1, r5
 80033b6:	4620      	mov	r0, r4
 80033b8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
 80033ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80033be:	4718      	bx	r3

080033c0 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80033c0:	b570      	push	{r4, r5, r6, lr}
 80033c2:	4604      	mov	r4, r0
 80033c4:	461d      	mov	r5, r3
 80033c6:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 80033ca:	f7ff ffec 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80033ce:	6823      	ldr	r3, [r4, #0]
 80033d0:	4629      	mov	r1, r5
 80033d2:	4620      	mov	r0, r4
 80033d4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80033d6:	4798      	blx	r3
        setHeight(height);
 80033d8:	6823      	ldr	r3, [r4, #0]
 80033da:	4631      	mov	r1, r6
 80033dc:	4620      	mov	r0, r4
 80033de:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 80033e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80033e4:	4718      	bx	r3
	...

080033e8 <_ZN8touchgfx6WidgetC1Ev>:
 80033e8:	2200      	movs	r2, #0
 80033ea:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80033ee:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80033f2:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80033f6:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80033fa:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80033fe:	8482      	strh	r2, [r0, #36]	@ 0x24
class Widget : public Drawable
 8003400:	4a01      	ldr	r2, [pc, #4]	@ (8003408 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8003402:	6002      	str	r2, [r0, #0]
 8003404:	4770      	bx	lr
 8003406:	bf00      	nop
 8003408:	08027948 	.word	0x08027948

0800340c <_ZN8touchgfx3BoxC1Ev>:
    Box()
 800340c:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 800340e:	2226      	movs	r2, #38	@ 0x26
    Box()
 8003410:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8003412:	2100      	movs	r1, #0
 8003414:	f022 f955 	bl	80256c2 <memset>
 8003418:	4620      	mov	r0, r4
 800341a:	f7ff ffe5 	bl	80033e8 <_ZN8touchgfx6WidgetC1Ev>
 800341e:	4b04      	ldr	r3, [pc, #16]	@ (8003430 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8003420:	6023      	str	r3, [r4, #0]
 8003422:	23ff      	movs	r3, #255	@ 0xff
 8003424:	f884 3026 	strb.w	r3, [r4, #38]	@ 0x26
        : color(col)
 8003428:	2300      	movs	r3, #0
 800342a:	62a3      	str	r3, [r4, #40]	@ 0x28
    }
 800342c:	4620      	mov	r0, r4
 800342e:	bd10      	pop	{r4, pc}
 8003430:	08028350 	.word	0x08028350

08003434 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 8003434:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8003436:	2226      	movs	r2, #38	@ 0x26
    Image(const Bitmap& bmp = Bitmap())
 8003438:	4604      	mov	r4, r0
 800343a:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 800343c:	2100      	movs	r1, #0
 800343e:	f022 f940 	bl	80256c2 <memset>
 8003442:	4620      	mov	r0, r4
 8003444:	f7ff ffd0 	bl	80033e8 <_ZN8touchgfx6WidgetC1Ev>
 8003448:	4b06      	ldr	r3, [pc, #24]	@ (8003464 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 800344a:	6023      	str	r3, [r4, #0]
 800344c:	882b      	ldrh	r3, [r5, #0]
 800344e:	84e3      	strh	r3, [r4, #38]	@ 0x26
 8003450:	23ff      	movs	r3, #255	@ 0xff
    {
        Image::setBitmap(bmp);
 8003452:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8003454:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
        Image::setBitmap(bmp);
 8003458:	4629      	mov	r1, r5
 800345a:	f00b fe21 	bl	800f0a0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 800345e:	4620      	mov	r0, r4
 8003460:	bd38      	pop	{r3, r4, r5, pc}
 8003462:	bf00      	nop
 8003464:	08028420 	.word	0x08028420

08003468 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>:
        handleAlphaUpdated();
 8003468:	6803      	ldr	r3, [r0, #0]
        alpha = newAlpha;
 800346a:	f880 102d 	strb.w	r1, [r0, #45]	@ 0x2d
        handleAlphaUpdated();
 800346e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8003472:	4718      	bx	r3

08003474 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8003474:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003476:	2226      	movs	r2, #38	@ 0x26
 8003478:	4604      	mov	r4, r0
 800347a:	2100      	movs	r1, #0
 800347c:	f022 f921 	bl	80256c2 <memset>
 8003480:	4620      	mov	r0, r4
 8003482:	f7ff ffb1 	bl	80033e8 <_ZN8touchgfx6WidgetC1Ev>
        : typedTextId(id)
 8003486:	4b0a      	ldr	r3, [pc, #40]	@ (80034b0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x3c>)
 8003488:	62a3      	str	r3, [r4, #40]	@ 0x28
 800348a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800348e:	85a3      	strh	r3, [r4, #44]	@ 0x2c
 8003490:	f44f 027f 	mov.w	r2, #16711680	@ 0xff0000
 8003494:	2300      	movs	r3, #0
 8003496:	e9c4 320c 	strd	r3, r2, [r4, #48]	@ 0x30
        : TextAreaWithWildcardBase(), wc1(0)
 800349a:	4a06      	ldr	r2, [pc, #24]	@ (80034b4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x40>)
 800349c:	6022      	str	r2, [r4, #0]
 800349e:	8723      	strh	r3, [r4, #56]	@ 0x38
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80034a0:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 80034a4:	e9c4 2310 	strd	r2, r3, [r4, #64]	@ 0x40
 80034a8:	63e3      	str	r3, [r4, #60]	@ 0x3c
 80034aa:	64a3      	str	r3, [r4, #72]	@ 0x48
    }
 80034ac:	4620      	mov	r0, r4
 80034ae:	bd10      	pop	{r4, pc}
 80034b0:	08027840 	.word	0x08027840
 80034b4:	080279b0 	.word	0x080279b0

080034b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 80034b8:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
    BoxWithBorderButtonStyle()
 80034bc:	b570      	push	{r4, r5, r6, lr}
        : T(), up(), down()
 80034be:	4606      	mov	r6, r0
 80034c0:	8583      	strh	r3, [r0, #44]	@ 0x2c
        touchable = touch;
 80034c2:	f240 1301 	movw	r3, #257	@ 0x101
          firstChild(0)
 80034c6:	2500      	movs	r5, #0
 80034c8:	8483      	strh	r3, [r0, #36]	@ 0x24
 80034ca:	4b12      	ldr	r3, [pc, #72]	@ (8003514 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x5c>)
 80034cc:	6285      	str	r5, [r0, #40]	@ 0x28
        : x(0), y(0), width(0), height(0)
 80034ce:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80034d2:	e9c0 5503 	strd	r5, r5, [r0, #12]
          nextSibling(0),
 80034d6:	e9c0 5505 	strd	r5, r5, [r0, #20]
          cachedAbsX(0),
 80034da:	e9c0 5507 	strd	r5, r5, [r0, #28]
 80034de:	6305      	str	r5, [r0, #48]	@ 0x30
 80034e0:	f846 3b34 	str.w	r3, [r6], #52
    BoxWithBorderButtonStyle()
 80034e4:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 80034e6:	4630      	mov	r0, r6
 80034e8:	f7ff ff90 	bl	800340c <_ZN8touchgfx3BoxC1Ev>
 80034ec:	4b0a      	ldr	r3, [pc, #40]	@ (8003518 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x60>)
 80034ee:	6363      	str	r3, [r4, #52]	@ 0x34
        borderBox.setXY(0, 0);
 80034f0:	462a      	mov	r2, r5
 80034f2:	4629      	mov	r1, r5
 80034f4:	4630      	mov	r0, r6
        : color(0)
 80034f6:	e9c4 551a 	strd	r5, r5, [r4, #104]	@ 0x68
 80034fa:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
        : color(col)
 80034fe:	6625      	str	r5, [r4, #96]	@ 0x60
 8003500:	f8a4 5064 	strh.w	r5, [r4, #100]	@ 0x64
 8003504:	f7ff ff4f 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8003508:	4620      	mov	r0, r4
 800350a:	4631      	mov	r1, r6
 800350c:	f008 fcd0 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8003510:	4620      	mov	r0, r4
 8003512:	bd70      	pop	{r4, r5, r6, pc}
 8003514:	08027a40 	.word	0x08027a40
 8003518:	080283b8 	.word	0x080283b8

0800351c <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 800351c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003520:	4604      	mov	r4, r0
 8003522:	b08d      	sub	sp, #52	@ 0x34
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8003524:	46a1      	mov	r9, r4
        : presenter(0)
 8003526:	2500      	movs	r5, #0
 8003528:	f010 f9ba 	bl	80138a0 <_ZN8touchgfx6ScreenC1Ev>
 800352c:	4bc2      	ldr	r3, [pc, #776]	@ (8003838 <_ZN15Screen1ViewBaseC1Ev+0x31c>)
 800352e:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8003530:	f849 3b40 	str.w	r3, [r9], #64
 8003534:	f104 0b6c 	add.w	fp, r4, #108	@ 0x6c
 8003538:	4648      	mov	r0, r9
 800353a:	f7ff ff67 	bl	800340c <_ZN8touchgfx3BoxC1Ev>
 800353e:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 8003542:	a90a      	add	r1, sp, #40	@ 0x28
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003544:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8003548:	4658      	mov	r0, fp
 800354a:	f504 7788 	add.w	r7, r4, #272	@ 0x110
 800354e:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
 8003552:	f7ff ff6f 	bl	8003434 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003556:	4640      	mov	r0, r8
 8003558:	f7ff ffae 	bl	80034b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800355c:	4638      	mov	r0, r7
 800355e:	f7ff ff89 	bl	8003474 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003562:	f504 73ae 	add.w	r3, r4, #348	@ 0x15c
 8003566:	a90a      	add	r1, sp, #40	@ 0x28
 8003568:	4618      	mov	r0, r3
 800356a:	9304      	str	r3, [sp, #16]
 800356c:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
 8003570:	f7ff ff60 	bl	8003434 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003574:	f504 73c4 	add.w	r3, r4, #392	@ 0x188
 8003578:	4618      	mov	r0, r3
 800357a:	9302      	str	r3, [sp, #8]
 800357c:	f7ff ff9c 	bl	80034b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003580:	f504 7300 	add.w	r3, r4, #512	@ 0x200
 8003584:	4618      	mov	r0, r3
 8003586:	f504 7a1e 	add.w	sl, r4, #632	@ 0x278
 800358a:	9303      	str	r3, [sp, #12]
 800358c:	f7ff ff94 	bl	80034b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003590:	4650      	mov	r0, sl
 8003592:	f7ff ff6f 	bl	8003474 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003596:	4ba9      	ldr	r3, [pc, #676]	@ (800383c <_ZN15Screen1ViewBaseC1Ev+0x320>)
 8003598:	e9c4 34b1 	strd	r3, r4, [r4, #708]	@ 0x2c4
 800359c:	4ba8      	ldr	r3, [pc, #672]	@ (8003840 <_ZN15Screen1ViewBaseC1Ev+0x324>)
 800359e:	e9c4 35b3 	strd	r3, r5, [r4, #716]	@ 0x2cc
    __background.setPosition(0, 0, 240, 320);
 80035a2:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80035a6:	462a      	mov	r2, r5
 80035a8:	4648      	mov	r0, r9
 80035aa:	9300      	str	r3, [sp, #0]
 80035ac:	4629      	mov	r1, r5
 80035ae:	23f0      	movs	r3, #240	@ 0xf0
 80035b0:	f7ff ff06 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80035b4:	1d26      	adds	r6, r4, #4
        color = newColor;
 80035b6:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80035ba:	66a3      	str	r3, [r4, #104]	@ 0x68
 80035bc:	4649      	mov	r1, r9
 80035be:	4630      	mov	r0, r6
 80035c0:	f008 fc76 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80035c4:	462a      	mov	r2, r5
 80035c6:	4658      	mov	r0, fp
 80035c8:	4629      	mov	r1, r5
 80035ca:	f7ff feec 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
 80035ce:	230e      	movs	r3, #14
    image1.setBitmap(touchgfx::Bitmap(BITMAP_PLAY_SCREEN_MIN_ID));
 80035d0:	4658      	mov	r0, fp
 80035d2:	a90a      	add	r1, sp, #40	@ 0x28
        borderBox.setPosition(x, y, width, height);
 80035d4:	f04f 092a 	mov.w	r9, #42	@ 0x2a
 80035d8:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 80035dc:	f00b fd60 	bl	800f0a0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80035e0:	4659      	mov	r1, fp
 80035e2:	4630      	mov	r0, r6
 80035e4:	f008 fc64 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035e8:	462a      	mov	r2, r5
 80035ea:	464b      	mov	r3, r9
 80035ec:	4629      	mov	r1, r5
 80035ee:	f8cd 9000 	str.w	r9, [sp]
 80035f2:	f104 00cc 	add.w	r0, r4, #204	@ 0xcc
 80035f6:	f7ff fee3 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
        up = colorReleased;
 80035fa:	4b92      	ldr	r3, [pc, #584]	@ (8003844 <_ZN15Screen1ViewBaseC1Ev+0x328>)
 80035fc:	f8c4 3100 	str.w	r3, [r4, #256]	@ 0x100
        down = colorPressed;
 8003600:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 8003604:	3333      	adds	r3, #51	@ 0x33
 8003606:	f8c4 3104 	str.w	r3, [r4, #260]	@ 0x104
        borderUp = borderColorReleased;
 800360a:	f5a3 43cc 	sub.w	r3, r3, #26112	@ 0x6600
 800360e:	3b66      	subs	r3, #102	@ 0x66
 8003610:	f8c4 3108 	str.w	r3, [r4, #264]	@ 0x108
        borderDown = borderColorPressed;
 8003614:	f103 1333 	add.w	r3, r3, #3342387	@ 0x330033
 8003618:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 800361c:	f04f 0b05 	mov.w	fp, #5
 8003620:	f8c4 310c 	str.w	r3, [r4, #268]	@ 0x10c
        handlePressedUpdated();
 8003624:	4640      	mov	r0, r8
 8003626:	f8a4 b0fc 	strh.w	fp, [r4, #252]	@ 0xfc
 800362a:	f7ff fdd9 	bl	80031e0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    flexButton1.setAlpha(0);
 800362e:	4640      	mov	r0, r8
 8003630:	4629      	mov	r1, r5
 8003632:	f7ff ff19 	bl	8003468 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    flexButton1.setAction(flexButtonCallback);
 8003636:	f504 7331 	add.w	r3, r4, #708	@ 0x2c4
        action = &callback;
 800363a:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
    flexButton1.setPosition(184, 271, 42, 42);
 800363e:	f240 120f 	movw	r2, #271	@ 0x10f
 8003642:	4640      	mov	r0, r8
    flexButton1.setAction(flexButtonCallback);
 8003644:	9305      	str	r3, [sp, #20]
    flexButton1.setPosition(184, 271, 42, 42);
 8003646:	f8cd 9000 	str.w	r9, [sp]
 800364a:	464b      	mov	r3, r9
 800364c:	21b8      	movs	r1, #184	@ 0xb8
 800364e:	f7ff feb7 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003652:	4641      	mov	r1, r8
 8003654:	4630      	mov	r0, r6
 8003656:	f008 fc2b 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setPosition(119, 190, 172, 30);
 800365a:	231e      	movs	r3, #30
 800365c:	22be      	movs	r2, #190	@ 0xbe
 800365e:	9300      	str	r3, [sp, #0]
 8003660:	2177      	movs	r1, #119	@ 0x77
 8003662:	23ac      	movs	r3, #172	@ 0xac
 8003664:	4638      	mov	r0, r7
 8003666:	f7ff feab 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800366a:	f04f 33ff 	mov.w	r3, #4294967295
 800366e:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
        boundingArea = calculateBoundingArea();
 8003672:	f8d4 3110 	ldr.w	r3, [r4, #272]	@ 0x110
        linespace = space;
 8003676:	f8a4 5144 	strh.w	r5, [r4, #324]	@ 0x144
        boundingArea = calculateBoundingArea();
 800367a:	f10d 0818 	add.w	r8, sp, #24
 800367e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003682:	f8df 91ec 	ldr.w	r9, [pc, #492]	@ 8003870 <_ZN15Screen1ViewBaseC1Ev+0x354>
 8003686:	4639      	mov	r1, r7
 8003688:	4640      	mov	r0, r8
 800368a:	4798      	blx	r3
 800368c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003690:	f504 73a6 	add.w	r3, r4, #332	@ 0x14c
 8003694:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003698:	f8d9 3000 	ldr.w	r3, [r9]
 800369c:	b92b      	cbnz	r3, 80036aa <_ZN15Screen1ViewBaseC1Ev+0x18e>
 800369e:	4b6a      	ldr	r3, [pc, #424]	@ (8003848 <_ZN15Screen1ViewBaseC1Ev+0x32c>)
 80036a0:	4a6a      	ldr	r2, [pc, #424]	@ (800384c <_ZN15Screen1ViewBaseC1Ev+0x330>)
 80036a2:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80036a4:	486a      	ldr	r0, [pc, #424]	@ (8003850 <_ZN15Screen1ViewBaseC1Ev+0x334>)
 80036a6:	f021 fe05 	bl	80252b4 <__assert_func>
 80036aa:	4b6a      	ldr	r3, [pc, #424]	@ (8003854 <_ZN15Screen1ViewBaseC1Ev+0x338>)
 80036ac:	881b      	ldrh	r3, [r3, #0]
 80036ae:	2b09      	cmp	r3, #9
 80036b0:	d803      	bhi.n	80036ba <_ZN15Screen1ViewBaseC1Ev+0x19e>
 80036b2:	4b69      	ldr	r3, [pc, #420]	@ (8003858 <_ZN15Screen1ViewBaseC1Ev+0x33c>)
 80036b4:	4a65      	ldr	r2, [pc, #404]	@ (800384c <_ZN15Screen1ViewBaseC1Ev+0x330>)
 80036b6:	2161      	movs	r1, #97	@ 0x61
 80036b8:	e7f4      	b.n	80036a4 <_ZN15Screen1ViewBaseC1Ev+0x188>
        return texts->getText(typedTextId);
 80036ba:	4b68      	ldr	r3, [pc, #416]	@ (800385c <_ZN15Screen1ViewBaseC1Ev+0x340>)
 80036bc:	2109      	movs	r1, #9
 80036be:	6818      	ldr	r0, [r3, #0]
 80036c0:	f001 f956 	bl	8004970 <_ZNK8touchgfx5Texts7getTextEt>
        : typedTextId(id)
 80036c4:	230a      	movs	r3, #10
 80036c6:	4a66      	ldr	r2, [pc, #408]	@ (8003860 <_ZN15Screen1ViewBaseC1Ev+0x344>)
        wc1 = value;
 80036c8:	f8c4 0158 	str.w	r0, [r4, #344]	@ 0x158
    textArea1.setTypedText(touchgfx::TypedText(T_MAN1));
 80036cc:	a90a      	add	r1, sp, #40	@ 0x28
 80036ce:	4638      	mov	r0, r7
 80036d0:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 80036d4:	920a      	str	r2, [sp, #40]	@ 0x28
 80036d6:	f00b fb87 	bl	800ede8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80036da:	4639      	mov	r1, r7
 80036dc:	4630      	mov	r0, r6
 80036de:	f008 fbe7 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2.setXY(0, 0);
 80036e2:	462a      	mov	r2, r5
 80036e4:	9804      	ldr	r0, [sp, #16]
 80036e6:	4629      	mov	r1, r5
 80036e8:	f7ff fe5d 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
 80036ec:	2313      	movs	r3, #19
    image2.setBitmap(touchgfx::Bitmap(BITMAP_SCORE_ID));
 80036ee:	9804      	ldr	r0, [sp, #16]
 80036f0:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 80036f4:	a90a      	add	r1, sp, #40	@ 0x28
 80036f6:	f00b fcd3 	bl	800f0a0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setPosition(x, y, width, height);
 80036fa:	271f      	movs	r7, #31
 80036fc:	9904      	ldr	r1, [sp, #16]
        visible = vis;
 80036fe:	f884 5181 	strb.w	r5, [r4, #385]	@ 0x181
 8003702:	4630      	mov	r0, r6
 8003704:	f008 fbd4 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003708:	2341      	movs	r3, #65	@ 0x41
 800370a:	462a      	mov	r2, r5
 800370c:	4629      	mov	r1, r5
 800370e:	f504 70de 	add.w	r0, r4, #444	@ 0x1bc
 8003712:	9700      	str	r7, [sp, #0]
 8003714:	f7ff fe54 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 8003718:	4b52      	ldr	r3, [pc, #328]	@ (8003864 <_ZN15Screen1ViewBaseC1Ev+0x348>)
 800371a:	4a53      	ldr	r2, [pc, #332]	@ (8003868 <_ZN15Screen1ViewBaseC1Ev+0x34c>)
        down = colorPressed;
 800371c:	4949      	ldr	r1, [pc, #292]	@ (8003844 <_ZN15Screen1ViewBaseC1Ev+0x328>)
 800371e:	4853      	ldr	r0, [pc, #332]	@ (800386c <_ZN15Screen1ViewBaseC1Ev+0x350>)
 8003720:	f8a4 b1ec 	strh.w	fp, [r4, #492]	@ 0x1ec
        borderDown = borderColorPressed;
 8003724:	e9c4 327e 	strd	r3, r2, [r4, #504]	@ 0x1f8
        down = colorPressed;
 8003728:	e9c4 107c 	strd	r1, r0, [r4, #496]	@ 0x1f0
        handlePressedUpdated();
 800372c:	9802      	ldr	r0, [sp, #8]
 800372e:	f7ff fd57 	bl	80031e0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    flexButton2.setAlpha(0);
 8003732:	9802      	ldr	r0, [sp, #8]
 8003734:	4629      	mov	r1, r5
 8003736:	f7ff fe97 	bl	8003468 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
 800373a:	9805      	ldr	r0, [sp, #20]
 800373c:	f8c4 01b8 	str.w	r0, [r4, #440]	@ 0x1b8
    flexButton2.setPosition(43, 127, 65, 31);
 8003740:	2341      	movs	r3, #65	@ 0x41
 8003742:	227f      	movs	r2, #127	@ 0x7f
 8003744:	9802      	ldr	r0, [sp, #8]
 8003746:	f884 51ad 	strb.w	r5, [r4, #429]	@ 0x1ad
 800374a:	212b      	movs	r1, #43	@ 0x2b
 800374c:	9700      	str	r7, [sp, #0]
 800374e:	f7ff fe37 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003752:	9902      	ldr	r1, [sp, #8]
 8003754:	4630      	mov	r0, r6
 8003756:	f008 fbab 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 800375a:	2341      	movs	r3, #65	@ 0x41
 800375c:	462a      	mov	r2, r5
 800375e:	4629      	mov	r1, r5
 8003760:	f504 700d 	add.w	r0, r4, #564	@ 0x234
 8003764:	9700      	str	r7, [sp, #0]
 8003766:	f7ff fe2b 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 800376a:	4936      	ldr	r1, [pc, #216]	@ (8003844 <_ZN15Screen1ViewBaseC1Ev+0x328>)
 800376c:	483f      	ldr	r0, [pc, #252]	@ (800386c <_ZN15Screen1ViewBaseC1Ev+0x350>)
 800376e:	f8a4 b264 	strh.w	fp, [r4, #612]	@ 0x264
 8003772:	e9c4 109a 	strd	r1, r0, [r4, #616]	@ 0x268
        borderUp = borderColorReleased;
 8003776:	f5a1 514c 	sub.w	r1, r1, #13056	@ 0x3300
 800377a:	3933      	subs	r1, #51	@ 0x33
 800377c:	f8c4 1270 	str.w	r1, [r4, #624]	@ 0x270
        borderDown = borderColorPressed;
 8003780:	f101 1133 	add.w	r1, r1, #3342387	@ 0x330033
 8003784:	f501 514c 	add.w	r1, r1, #13056	@ 0x3300
        handlePressedUpdated();
 8003788:	9803      	ldr	r0, [sp, #12]
        borderDown = borderColorPressed;
 800378a:	f8c4 1274 	str.w	r1, [r4, #628]	@ 0x274
        handlePressedUpdated();
 800378e:	f7ff fd27 	bl	80031e0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    flexButton3.setAlpha(0);
 8003792:	9803      	ldr	r0, [sp, #12]
 8003794:	4629      	mov	r1, r5
 8003796:	f7ff fe67 	bl	8003468 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
 800379a:	9905      	ldr	r1, [sp, #20]
 800379c:	f8c4 1230 	str.w	r1, [r4, #560]	@ 0x230
    flexButton3.setPosition(133, 127, 65, 31);
 80037a0:	2341      	movs	r3, #65	@ 0x41
 80037a2:	227f      	movs	r2, #127	@ 0x7f
 80037a4:	9803      	ldr	r0, [sp, #12]
 80037a6:	f884 5225 	strb.w	r5, [r4, #549]	@ 0x225
 80037aa:	2185      	movs	r1, #133	@ 0x85
 80037ac:	9700      	str	r7, [sp, #0]
 80037ae:	f7ff fe07 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80037b2:	9903      	ldr	r1, [sp, #12]
 80037b4:	4630      	mov	r0, r6
 80037b6:	f008 fb7b 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setPosition(55, 99, 130, 20);
 80037ba:	2314      	movs	r3, #20
 80037bc:	2263      	movs	r2, #99	@ 0x63
 80037be:	9300      	str	r3, [sp, #0]
 80037c0:	2137      	movs	r1, #55	@ 0x37
 80037c2:	2382      	movs	r3, #130	@ 0x82
 80037c4:	4650      	mov	r0, sl
 80037c6:	f7ff fdfb 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80037ca:	f8d4 3278 	ldr.w	r3, [r4, #632]	@ 0x278
        linespace = space;
 80037ce:	f8a4 52ac 	strh.w	r5, [r4, #684]	@ 0x2ac
        color = newColor;
 80037d2:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 80037d6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 80037da:	f8c4 12a8 	str.w	r1, [r4, #680]	@ 0x2a8
        boundingArea = calculateBoundingArea();
 80037de:	4640      	mov	r0, r8
 80037e0:	4651      	mov	r1, sl
 80037e2:	4798      	blx	r3
 80037e4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80037e8:	f504 732d 	add.w	r3, r4, #692	@ 0x2b4
 80037ec:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80037f0:	f8d9 3000 	ldr.w	r3, [r9]
 80037f4:	2b00      	cmp	r3, #0
 80037f6:	f43f af52 	beq.w	800369e <_ZN15Screen1ViewBaseC1Ev+0x182>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80037fa:	4916      	ldr	r1, [pc, #88]	@ (8003854 <_ZN15Screen1ViewBaseC1Ev+0x338>)
 80037fc:	880b      	ldrh	r3, [r1, #0]
 80037fe:	2b07      	cmp	r3, #7
 8003800:	f67f af57 	bls.w	80036b2 <_ZN15Screen1ViewBaseC1Ev+0x196>
        return texts->getText(typedTextId);
 8003804:	4b15      	ldr	r3, [pc, #84]	@ (800385c <_ZN15Screen1ViewBaseC1Ev+0x340>)
 8003806:	2107      	movs	r1, #7
 8003808:	6818      	ldr	r0, [r3, #0]
 800380a:	f001 f8b1 	bl	8004970 <_ZNK8touchgfx5Texts7getTextEt>
        : typedTextId(id)
 800380e:	4a14      	ldr	r2, [pc, #80]	@ (8003860 <_ZN15Screen1ViewBaseC1Ev+0x344>)
 8003810:	f8c4 02c0 	str.w	r0, [r4, #704]	@ 0x2c0
 8003814:	2308      	movs	r3, #8
    textArea2.setTypedText(touchgfx::TypedText(T_MAN1SCORE));
 8003816:	a90a      	add	r1, sp, #40	@ 0x28
 8003818:	4650      	mov	r0, sl
 800381a:	920a      	str	r2, [sp, #40]	@ 0x28
 800381c:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8003820:	f00b fae2 	bl	800ede8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003824:	4630      	mov	r0, r6
 8003826:	f884 529d 	strb.w	r5, [r4, #669]	@ 0x29d
 800382a:	4651      	mov	r1, sl
 800382c:	f008 fb40 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003830:	4620      	mov	r0, r4
 8003832:	b00d      	add	sp, #52	@ 0x34
 8003834:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003838:	08027af4 	.word	0x08027af4
 800383c:	08027adc 	.word	0x08027adc
 8003840:	0800335d 	.word	0x0800335d
 8003844:	ff006699 	.word	0xff006699
 8003848:	08026f12 	.word	0x08026f12
 800384c:	08027014 	.word	0x08027014
 8003850:	08026f8f 	.word	0x08026f8f
 8003854:	20015294 	.word	0x20015294
 8003858:	08026fd6 	.word	0x08026fd6
 800385c:	2001529c 	.word	0x2001529c
 8003860:	08027840 	.word	0x08027840
 8003864:	ff003366 	.word	0xff003366
 8003868:	ff336699 	.word	0xff336699
 800386c:	ff0099cc 	.word	0xff0099cc
 8003870:	20015290 	.word	0x20015290

08003874 <_ZN15Screen2ViewBase11turnOnMode1Ev>:
     * Virtual Action Handlers
     */
    virtual void turnOnMode1()
    {
        // Override and implement this function in Screen2
    }
 8003874:	4770      	bx	lr

08003876 <_ZN15Screen2ViewBase11turnOnMode2Ev>:
    virtual void turnOnMode2()
    {
        // Override and implement this function in Screen2
    }
 8003876:	4770      	bx	lr

08003878 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003878:	4770      	bx	lr

0800387a <_ZN15Screen2ViewBaseD1Ev>:
}

Screen2ViewBase::~Screen2ViewBase()
{

}
 800387a:	4770      	bx	lr

0800387c <_ZN15Screen2ViewBase11setupScreenEv>:

void Screen2ViewBase::setupScreen()
{

}
 800387c:	4770      	bx	lr

0800387e <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800387e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003880:	68c2      	ldr	r2, [r0, #12]
 8003882:	6844      	ldr	r4, [r0, #4]
 8003884:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003886:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003888:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800388c:	07d2      	lsls	r2, r2, #31
 800388e:	bf48      	it	mi
 8003890:	5962      	ldrmi	r2, [r4, r5]
 8003892:	689b      	ldr	r3, [r3, #8]
    }
 8003894:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003896:	bf48      	it	mi
 8003898:	58d3      	ldrmi	r3, [r2, r3]
 800389a:	4718      	bx	r3

0800389c <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 800389c:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 800389e:	6840      	ldr	r0, [r0, #4]
 80038a0:	b130      	cbz	r0, 80038b0 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80038a2:	689a      	ldr	r2, [r3, #8]
 80038a4:	b91a      	cbnz	r2, 80038ae <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 80038a6:	68d8      	ldr	r0, [r3, #12]
 80038a8:	f000 0001 	and.w	r0, r0, #1
 80038ac:	4770      	bx	lr
 80038ae:	2001      	movs	r0, #1
    }
 80038b0:	4770      	bx	lr

080038b2 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80038b2:	b510      	push	{r4, lr}
 80038b4:	2110      	movs	r1, #16
 80038b6:	4604      	mov	r4, r0
 80038b8:	f020 fdbf 	bl	802443a <_ZdlPvj>
 80038bc:	4620      	mov	r0, r4
 80038be:	bd10      	pop	{r4, pc}

080038c0 <_ZN15Screen2ViewBaseD0Ev>:
Screen2ViewBase::~Screen2ViewBase()
 80038c0:	b510      	push	{r4, lr}
}
 80038c2:	f44f 7125 	mov.w	r1, #660	@ 0x294
Screen2ViewBase::~Screen2ViewBase()
 80038c6:	4604      	mov	r4, r0
}
 80038c8:	f020 fdb7 	bl	802443a <_ZdlPvj>
 80038cc:	4620      	mov	r0, r4
 80038ce:	bd10      	pop	{r4, pc}

080038d0 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
 80038d0:	f500 7303 	add.w	r3, r0, #524	@ 0x20c
 80038d4:	4299      	cmp	r1, r3
{
 80038d6:	b570      	push	{r4, r5, r6, lr}
 80038d8:	4604      	mov	r4, r0
 80038da:	460d      	mov	r5, r1
    if (&src == &flexButton1)
 80038dc:	d103      	bne.n	80038e6 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80038de:	f00d ffdb 	bl	8011898 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When flexButton1 clicked change screen to ScreenWait
        //Go to ScreenWait with no screen transition
        application().gotoScreenWaitScreenNoTransition();
 80038e2:	f7ff f84f 	bl	8002984 <_ZN23FrontendApplicationBase32gotoScreenWaitScreenNoTransitionEv>
    }
    if (&src == &flexButton2)
 80038e6:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 80038ea:	429d      	cmp	r5, r3
 80038ec:	d103      	bne.n	80038f6 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
    {
        //Interaction2
        //When flexButton2 clicked call virtual function
        //Call turnOnMode1
        turnOnMode1();
 80038ee:	6823      	ldr	r3, [r4, #0]
 80038f0:	4620      	mov	r0, r4
 80038f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80038f4:	4798      	blx	r3
    }
    if (&src == &flexButton3)
 80038f6:	f504 73ca 	add.w	r3, r4, #404	@ 0x194
 80038fa:	429d      	cmp	r5, r3
 80038fc:	d105      	bne.n	800390a <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3a>
    {
        //Interaction3
        //When flexButton3 clicked call virtual function
        //Call turnOnMode2
        turnOnMode2();
 80038fe:	6823      	ldr	r3, [r4, #0]
 8003900:	4620      	mov	r0, r4
 8003902:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    }
}
 8003904:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        turnOnMode2();
 8003908:	4718      	bx	r3
}
 800390a:	bd70      	pop	{r4, r5, r6, pc}

0800390c <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 800390c:	4a07      	ldr	r2, [pc, #28]	@ (800392c <_ZN8touchgfx8DrawableC1Ev+0x20>)
 800390e:	6002      	str	r2, [r0, #0]
        : x(0), y(0), width(0), height(0)
 8003910:	2200      	movs	r2, #0
 8003912:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8003916:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 800391a:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 800391e:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8003922:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8003926:	8482      	strh	r2, [r0, #36]	@ 0x24
    }
 8003928:	4770      	bx	lr
 800392a:	bf00      	nop
 800392c:	080284f0 	.word	0x080284f0

08003930 <_ZN15Screen2ViewBaseC1Ev>:
Screen2ViewBase::Screen2ViewBase() :
 8003930:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003934:	4604      	mov	r4, r0
 8003936:	b089      	sub	sp, #36	@ 0x24
    flexButtonCallback(this, &Screen2ViewBase::flexButtonCallbackHandler)
 8003938:	4627      	mov	r7, r4
 800393a:	2500      	movs	r5, #0
 800393c:	f00f ffb0 	bl	80138a0 <_ZN8touchgfx6ScreenC1Ev>
 8003940:	4b87      	ldr	r3, [pc, #540]	@ (8003b60 <_ZN15Screen2ViewBaseC1Ev+0x230>)
 8003942:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8003944:	f847 3b40 	str.w	r3, [r7], #64
 8003948:	f104 0b6c 	add.w	fp, r4, #108	@ 0x6c
 800394c:	4638      	mov	r0, r7
 800394e:	f7ff fd5d 	bl	800340c <_ZN8touchgfx3BoxC1Ev>
 8003952:	f104 0a98 	add.w	sl, r4, #152	@ 0x98
 8003956:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800395a:	a907      	add	r1, sp, #28
 800395c:	4658      	mov	r0, fp
 800395e:	f104 09c4 	add.w	r9, r4, #196	@ 0xc4
 8003962:	f8ad 601c 	strh.w	r6, [sp, #28]
 8003966:	f7ff fd65 	bl	8003434 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800396a:	a907      	add	r1, sp, #28
 800396c:	4650      	mov	r0, sl
 800396e:	f104 08f0 	add.w	r8, r4, #240	@ 0xf0
 8003972:	f8ad 601c 	strh.w	r6, [sp, #28]
 8003976:	f7ff fd5d 	bl	8003434 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800397a:	a907      	add	r1, sp, #28
 800397c:	4648      	mov	r0, r9
 800397e:	f8ad 601c 	strh.w	r6, [sp, #28]
 8003982:	f7ff fd57 	bl	8003434 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003986:	a907      	add	r1, sp, #28
 8003988:	f8ad 601c 	strh.w	r6, [sp, #28]
 800398c:	4640      	mov	r0, r8
 800398e:	f504 768e 	add.w	r6, r4, #284	@ 0x11c
 8003992:	f7ff fd4f 	bl	8003434 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003996:	4630      	mov	r0, r6
 8003998:	f7ff fd8e 	bl	80034b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800399c:	f504 73ca 	add.w	r3, r4, #404	@ 0x194
 80039a0:	4618      	mov	r0, r3
 80039a2:	9303      	str	r3, [sp, #12]
 80039a4:	f7ff fd88 	bl	80034b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 80039a8:	f504 7303 	add.w	r3, r4, #524	@ 0x20c
 80039ac:	4618      	mov	r0, r3
 80039ae:	9304      	str	r3, [sp, #16]
 80039b0:	f7ff fd82 	bl	80034b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80039b4:	4b6b      	ldr	r3, [pc, #428]	@ (8003b64 <_ZN15Screen2ViewBaseC1Ev+0x234>)
 80039b6:	e9c4 34a1 	strd	r3, r4, [r4, #644]	@ 0x284
 80039ba:	4b6b      	ldr	r3, [pc, #428]	@ (8003b68 <_ZN15Screen2ViewBaseC1Ev+0x238>)
 80039bc:	e9c4 35a3 	strd	r3, r5, [r4, #652]	@ 0x28c
    __background.setPosition(0, 0, 240, 320);
 80039c0:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80039c4:	462a      	mov	r2, r5
 80039c6:	9300      	str	r3, [sp, #0]
 80039c8:	4629      	mov	r1, r5
 80039ca:	4638      	mov	r0, r7
 80039cc:	23f0      	movs	r3, #240	@ 0xf0
 80039ce:	f7ff fcf7 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80039d2:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80039d6:	66a3      	str	r3, [r4, #104]	@ 0x68
 80039d8:	4639      	mov	r1, r7
 80039da:	1d20      	adds	r0, r4, #4
 80039dc:	f008 fa68 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image8.setXY(0, 0);
 80039e0:	462a      	mov	r2, r5
 80039e2:	4629      	mov	r1, r5
 80039e4:	4658      	mov	r0, fp
 80039e6:	f7ff fcde 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
 80039ea:	2308      	movs	r3, #8
    image8.setBitmap(touchgfx::Bitmap(BITMAP_GEM_SCREEN_ID));
 80039ec:	a907      	add	r1, sp, #28
 80039ee:	4658      	mov	r0, fp
 80039f0:	f8ad 301c 	strh.w	r3, [sp, #28]
 80039f4:	f00b fb54 	bl	800f0a0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80039f8:	4659      	mov	r1, fp
 80039fa:	1d20      	adds	r0, r4, #4
 80039fc:	f008 fa58 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image5.setXY(86, 16);
 8003a00:	2210      	movs	r2, #16
 8003a02:	4650      	mov	r0, sl
 8003a04:	2156      	movs	r1, #86	@ 0x56
 8003a06:	f7ff fcce 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
 8003a0a:	2302      	movs	r3, #2
    image5.setBitmap(touchgfx::Bitmap(BITMAP_BLOCK___ID));
 8003a0c:	a907      	add	r1, sp, #28
 8003a0e:	4650      	mov	r0, sl
 8003a10:	f8ad 301c 	strh.w	r3, [sp, #28]
 8003a14:	f00b fb44 	bl	800f0a0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003a18:	4651      	mov	r1, sl
 8003a1a:	1d20      	adds	r0, r4, #4
 8003a1c:	f008 fa48 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image6.setXY(-73, 10);
 8003a20:	220a      	movs	r2, #10
 8003a22:	4648      	mov	r0, r9
 8003a24:	f06f 0148 	mvn.w	r1, #72	@ 0x48
 8003a28:	f7ff fcbd 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
 8003a2c:	2301      	movs	r3, #1
    image6.setBitmap(touchgfx::Bitmap(BITMAP_BLOCK__ID));
 8003a2e:	a907      	add	r1, sp, #28
 8003a30:	4648      	mov	r0, r9
 8003a32:	f8ad 301c 	strh.w	r3, [sp, #28]
 8003a36:	f00b fb33 	bl	800f0a0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003a3a:	4649      	mov	r1, r9
 8003a3c:	1d20      	adds	r0, r4, #4
 8003a3e:	f008 fa37 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image7.setXY(13, 23);
 8003a42:	2217      	movs	r2, #23
 8003a44:	4640      	mov	r0, r8
 8003a46:	210d      	movs	r1, #13
 8003a48:	f7ff fcad 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
    image7.setBitmap(touchgfx::Bitmap(BITMAP_BLOCK_ID));
 8003a4c:	a907      	add	r1, sp, #28
 8003a4e:	4640      	mov	r0, r8
        borderBox.setPosition(x, y, width, height);
 8003a50:	2720      	movs	r7, #32
 8003a52:	f8ad 501c 	strh.w	r5, [sp, #28]
 8003a56:	f00b fb23 	bl	800f0a0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003a5a:	4641      	mov	r1, r8
 8003a5c:	1d20      	adds	r0, r4, #4
 8003a5e:	f008 fa27 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003a62:	462a      	mov	r2, r5
 8003a64:	4629      	mov	r1, r5
 8003a66:	463b      	mov	r3, r7
 8003a68:	f504 70a8 	add.w	r0, r4, #336	@ 0x150
 8003a6c:	9700      	str	r7, [sp, #0]
 8003a6e:	f7ff fca7 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 8003a72:	f8df 90fc 	ldr.w	r9, [pc, #252]	@ 8003b70 <_ZN15Screen2ViewBaseC1Ev+0x240>
 8003a76:	f8df a0fc 	ldr.w	sl, [pc, #252]	@ 8003b74 <_ZN15Screen2ViewBaseC1Ev+0x244>
        borderDown = borderColorPressed;
 8003a7a:	f8df b0fc 	ldr.w	fp, [pc, #252]	@ 8003b78 <_ZN15Screen2ViewBaseC1Ev+0x248>
 8003a7e:	4b3b      	ldr	r3, [pc, #236]	@ (8003b6c <_ZN15Screen2ViewBaseC1Ev+0x23c>)
 8003a80:	f04f 0805 	mov.w	r8, #5
 8003a84:	e9c4 b363 	strd	fp, r3, [r4, #396]	@ 0x18c
        handlePressedUpdated();
 8003a88:	4630      	mov	r0, r6
        down = colorPressed;
 8003a8a:	e9c4 9a61 	strd	r9, sl, [r4, #388]	@ 0x184
 8003a8e:	f8a4 8180 	strh.w	r8, [r4, #384]	@ 0x180
        handlePressedUpdated();
 8003a92:	f7ff fba5 	bl	80031e0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    flexButton2.setAlpha(0);
 8003a96:	4629      	mov	r1, r5
 8003a98:	4630      	mov	r0, r6
 8003a9a:	f7ff fce5 	bl	8003468 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    flexButton2.setAction(flexButtonCallback);
 8003a9e:	f504 7221 	add.w	r2, r4, #644	@ 0x284
 8003aa2:	f8c4 214c 	str.w	r2, [r4, #332]	@ 0x14c
    flexButton2.setPosition(151, 7, 32, 32);
 8003aa6:	463b      	mov	r3, r7
    flexButton2.setAction(flexButtonCallback);
 8003aa8:	9205      	str	r2, [sp, #20]
    flexButton2.setPosition(151, 7, 32, 32);
 8003aaa:	4630      	mov	r0, r6
 8003aac:	2207      	movs	r2, #7
 8003aae:	9700      	str	r7, [sp, #0]
 8003ab0:	2197      	movs	r1, #151	@ 0x97
 8003ab2:	f7ff fc85 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003ab6:	4631      	mov	r1, r6
 8003ab8:	1d20      	adds	r0, r4, #4
 8003aba:	f008 f9f9 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 8003abe:	462a      	mov	r2, r5
 8003ac0:	4629      	mov	r1, r5
 8003ac2:	463b      	mov	r3, r7
 8003ac4:	f504 70e4 	add.w	r0, r4, #456	@ 0x1c8
 8003ac8:	9700      	str	r7, [sp, #0]
 8003aca:	f7ff fc79 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 8003ace:	4b27      	ldr	r3, [pc, #156]	@ (8003b6c <_ZN15Screen2ViewBaseC1Ev+0x23c>)
 8003ad0:	f8c4 3208 	str.w	r3, [r4, #520]	@ 0x208
        handlePressedUpdated();
 8003ad4:	9803      	ldr	r0, [sp, #12]
 8003ad6:	f8a4 81f8 	strh.w	r8, [r4, #504]	@ 0x1f8
        down = colorPressed;
 8003ada:	e9c4 9a7f 	strd	r9, sl, [r4, #508]	@ 0x1fc
        borderUp = borderColorReleased;
 8003ade:	f8c4 b204 	str.w	fp, [r4, #516]	@ 0x204
        handlePressedUpdated();
 8003ae2:	f7ff fb7d 	bl	80031e0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    flexButton3.setAlpha(0);
 8003ae6:	9803      	ldr	r0, [sp, #12]
 8003ae8:	4629      	mov	r1, r5
 8003aea:	f7ff fcbd 	bl	8003468 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
 8003aee:	9a05      	ldr	r2, [sp, #20]
 8003af0:	f8c4 21c4 	str.w	r2, [r4, #452]	@ 0x1c4
    flexButton3.setPosition(199, 7, 32, 32);
 8003af4:	463b      	mov	r3, r7
 8003af6:	9803      	ldr	r0, [sp, #12]
 8003af8:	9700      	str	r7, [sp, #0]
 8003afa:	2207      	movs	r2, #7
 8003afc:	21c7      	movs	r1, #199	@ 0xc7
 8003afe:	f7ff fc5f 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderBox.setPosition(x, y, width, height);
 8003b02:	261c      	movs	r6, #28
 8003b04:	9903      	ldr	r1, [sp, #12]
 8003b06:	1d20      	adds	r0, r4, #4
 8003b08:	f008 f9d2 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003b0c:	462a      	mov	r2, r5
 8003b0e:	4629      	mov	r1, r5
 8003b10:	f504 7010 	add.w	r0, r4, #576	@ 0x240
 8003b14:	9600      	str	r6, [sp, #0]
 8003b16:	2353      	movs	r3, #83	@ 0x53
 8003b18:	f7ff fc52 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 8003b1c:	4b13      	ldr	r3, [pc, #76]	@ (8003b6c <_ZN15Screen2ViewBaseC1Ev+0x23c>)
 8003b1e:	f8c4 3280 	str.w	r3, [r4, #640]	@ 0x280
        handlePressedUpdated();
 8003b22:	9804      	ldr	r0, [sp, #16]
 8003b24:	f8a4 8270 	strh.w	r8, [r4, #624]	@ 0x270
        down = colorPressed;
 8003b28:	e9c4 9a9d 	strd	r9, sl, [r4, #628]	@ 0x274
        borderUp = borderColorReleased;
 8003b2c:	f8c4 b27c 	str.w	fp, [r4, #636]	@ 0x27c
        handlePressedUpdated();
 8003b30:	f7ff fb56 	bl	80031e0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    flexButton1.setAlpha(0);
 8003b34:	9804      	ldr	r0, [sp, #16]
 8003b36:	4629      	mov	r1, r5
 8003b38:	f7ff fc96 	bl	8003468 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
 8003b3c:	9b05      	ldr	r3, [sp, #20]
 8003b3e:	f8c4 323c 	str.w	r3, [r4, #572]	@ 0x23c
    flexButton1.setPosition(77, 126, 83, 28);
 8003b42:	9804      	ldr	r0, [sp, #16]
 8003b44:	9600      	str	r6, [sp, #0]
 8003b46:	2353      	movs	r3, #83	@ 0x53
 8003b48:	227e      	movs	r2, #126	@ 0x7e
 8003b4a:	214d      	movs	r1, #77	@ 0x4d
 8003b4c:	f7ff fc38 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003b50:	1d20      	adds	r0, r4, #4
 8003b52:	9904      	ldr	r1, [sp, #16]
 8003b54:	f008 f9ac 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003b58:	4620      	mov	r0, r4
 8003b5a:	b009      	add	sp, #36	@ 0x24
 8003b5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b60:	08027b40 	.word	0x08027b40
 8003b64:	08027b28 	.word	0x08027b28
 8003b68:	080038d1 	.word	0x080038d1
 8003b6c:	ff336699 	.word	0xff336699
 8003b70:	ff006699 	.word	0xff006699
 8003b74:	ff0099cc 	.word	0xff0099cc
 8003b78:	ff003366 	.word	0xff003366

08003b7c <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003b7c:	4770      	bx	lr

08003b7e <_ZN15Screen3ViewBaseD1Ev>:
}

Screen3ViewBase::~Screen3ViewBase()
{

}
 8003b7e:	4770      	bx	lr

08003b80 <_ZN15Screen3ViewBase11setupScreenEv>:

void Screen3ViewBase::setupScreen()
{

}
 8003b80:	4770      	bx	lr

08003b82 <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003b82:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003b84:	68c2      	ldr	r2, [r0, #12]
 8003b86:	6844      	ldr	r4, [r0, #4]
 8003b88:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003b8a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003b8c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003b90:	07d2      	lsls	r2, r2, #31
 8003b92:	bf48      	it	mi
 8003b94:	5962      	ldrmi	r2, [r4, r5]
 8003b96:	689b      	ldr	r3, [r3, #8]
    }
 8003b98:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003b9a:	bf48      	it	mi
 8003b9c:	58d3      	ldrmi	r3, [r2, r3]
 8003b9e:	4718      	bx	r3

08003ba0 <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8003ba0:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8003ba2:	6840      	ldr	r0, [r0, #4]
 8003ba4:	b130      	cbz	r0, 8003bb4 <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8003ba6:	689a      	ldr	r2, [r3, #8]
 8003ba8:	b91a      	cbnz	r2, 8003bb2 <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 8003baa:	68d8      	ldr	r0, [r3, #12]
 8003bac:	f000 0001 	and.w	r0, r0, #1
 8003bb0:	4770      	bx	lr
 8003bb2:	2001      	movs	r0, #1
    }
 8003bb4:	4770      	bx	lr

08003bb6 <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003bb6:	b510      	push	{r4, lr}
 8003bb8:	2110      	movs	r1, #16
 8003bba:	4604      	mov	r4, r0
 8003bbc:	f020 fc3d 	bl	802443a <_ZdlPvj>
 8003bc0:	4620      	mov	r0, r4
 8003bc2:	bd10      	pop	{r4, pc}

08003bc4 <_ZN15Screen3ViewBaseD0Ev>:
Screen3ViewBase::~Screen3ViewBase()
 8003bc4:	b510      	push	{r4, lr}
}
 8003bc6:	f44f 717c 	mov.w	r1, #1008	@ 0x3f0
Screen3ViewBase::~Screen3ViewBase()
 8003bca:	4604      	mov	r4, r0
}
 8003bcc:	f020 fc35 	bl	802443a <_ZdlPvj>
 8003bd0:	4620      	mov	r0, r4
 8003bd2:	bd10      	pop	{r4, pc}

08003bd4 <_ZN15Screen3ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen3ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 8003bd4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &flexButton1)
 8003bd6:	f100 0398 	add.w	r3, r0, #152	@ 0x98
 8003bda:	4299      	cmp	r1, r3
{
 8003bdc:	4604      	mov	r4, r0
 8003bde:	460d      	mov	r5, r1
    if (&src == &flexButton1)
 8003be0:	d103      	bne.n	8003bea <_ZN15Screen3ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~Screen3ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003be2:	f00d fe59 	bl	8011898 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When flexButton1 clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
 8003be6:	f7fe febd 	bl	8002964 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
    }
    if (&src == &flexButton2)
 8003bea:	f504 73da 	add.w	r3, r4, #436	@ 0x1b4
 8003bee:	429d      	cmp	r5, r3
 8003bf0:	d103      	bne.n	8003bfa <_ZN15Screen3ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
 8003bf2:	f00d fe51 	bl	8011898 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When flexButton2 clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
 8003bf6:	f7fe feb5 	bl	8002964 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
    }
    if (&src == &flexButton3)
 8003bfa:	f504 730b 	add.w	r3, r4, #556	@ 0x22c
 8003bfe:	429d      	cmp	r5, r3
 8003c00:	d103      	bne.n	8003c0a <_ZN15Screen3ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x36>
 8003c02:	f00d fe49 	bl	8011898 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When flexButton3 clicked change screen to Screen3
        //Go to Screen3 with no screen transition
        application().gotoScreen3ScreenNoTransition();
 8003c06:	f7fe fedd 	bl	80029c4 <_ZN23FrontendApplicationBase29gotoScreen3ScreenNoTransitionEv>
    }
    if (&src == &flexButton4)
 8003c0a:	f504 7329 	add.w	r3, r4, #676	@ 0x2a4
 8003c0e:	429d      	cmp	r5, r3
 8003c10:	d103      	bne.n	8003c1a <_ZN15Screen3ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x46>
 8003c12:	f00d fe41 	bl	8011898 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction4
        //When flexButton4 clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
 8003c16:	f7fe fea5 	bl	8002964 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
    }
    if (&src == &flexButton5)
 8003c1a:	f504 7447 	add.w	r4, r4, #796	@ 0x31c
 8003c1e:	42a5      	cmp	r5, r4
 8003c20:	d105      	bne.n	8003c2e <_ZN15Screen3ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x5a>
 8003c22:	f00d fe39 	bl	8011898 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When flexButton5 clicked change screen to Screen4
        //Go to Screen4 with no screen transition
        application().gotoScreen4ScreenNoTransition();
    }
}
 8003c26:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoScreen4ScreenNoTransition();
 8003c2a:	f7fe bedb 	b.w	80029e4 <_ZN23FrontendApplicationBase29gotoScreen4ScreenNoTransitionEv>
}
 8003c2e:	bd38      	pop	{r3, r4, r5, pc}

08003c30 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 8003c30:	b410      	push	{r4}
        borderUp = borderColorReleased;
 8003c32:	6703      	str	r3, [r0, #112]	@ 0x70
        borderDown = borderColorPressed;
 8003c34:	9b01      	ldr	r3, [sp, #4]
 8003c36:	6743      	str	r3, [r0, #116]	@ 0x74
        handlePressedUpdated();
 8003c38:	6803      	ldr	r3, [r0, #0]
    }
 8003c3a:	f85d 4b04 	ldr.w	r4, [sp], #4
        handlePressedUpdated();
 8003c3e:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
        down = colorPressed;
 8003c42:	e9c0 121a 	strd	r1, r2, [r0, #104]	@ 0x68
        handlePressedUpdated();
 8003c46:	4718      	bx	r3

08003c48 <_ZN15Screen3ViewBaseC1Ev>:
Screen3ViewBase::Screen3ViewBase() :
 8003c48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c4c:	4604      	mov	r4, r0
 8003c4e:	b091      	sub	sp, #68	@ 0x44
    flexButtonCallback(this, &Screen3ViewBase::flexButtonCallbackHandler)
 8003c50:	46a1      	mov	r9, r4
 8003c52:	2500      	movs	r5, #0
 8003c54:	f00f fe24 	bl	80138a0 <_ZN8touchgfx6ScreenC1Ev>
 8003c58:	4b68      	ldr	r3, [pc, #416]	@ (8003dfc <_ZN15Screen3ViewBaseC1Ev+0x1b4>)
 8003c5a:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8003c5c:	f849 3b40 	str.w	r3, [r9], #64
 8003c60:	f104 0b6c 	add.w	fp, r4, #108	@ 0x6c
 8003c64:	4648      	mov	r0, r9
 8003c66:	f7ff fbd1 	bl	800340c <_ZN8touchgfx3BoxC1Ev>
 8003c6a:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 8003c6e:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8003c72:	a90e      	add	r1, sp, #56	@ 0x38
 8003c74:	4658      	mov	r0, fp
 8003c76:	f504 7788 	add.w	r7, r4, #272	@ 0x110
 8003c7a:	f8ad 6038 	strh.w	r6, [sp, #56]	@ 0x38
 8003c7e:	f7ff fbd9 	bl	8003434 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003c82:	4640      	mov	r0, r8
 8003c84:	f7ff fc18 	bl	80034b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003c88:	4638      	mov	r0, r7
 8003c8a:	f7ff fbf3 	bl	8003474 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003c8e:	f504 73ae 	add.w	r3, r4, #348	@ 0x15c
 8003c92:	a90e      	add	r1, sp, #56	@ 0x38
 8003c94:	4618      	mov	r0, r3
 8003c96:	9308      	str	r3, [sp, #32]
 8003c98:	f8ad 6038 	strh.w	r6, [sp, #56]	@ 0x38
 8003c9c:	f7ff fbca 	bl	8003434 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003ca0:	f504 73c4 	add.w	r3, r4, #392	@ 0x188
 8003ca4:	a90e      	add	r1, sp, #56	@ 0x38
 8003ca6:	4618      	mov	r0, r3
 8003ca8:	9309      	str	r3, [sp, #36]	@ 0x24
 8003caa:	f8ad 6038 	strh.w	r6, [sp, #56]	@ 0x38
 8003cae:	f7ff fbc1 	bl	8003434 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003cb2:	f504 73da 	add.w	r3, r4, #436	@ 0x1b4
 8003cb6:	4618      	mov	r0, r3
 8003cb8:	9303      	str	r3, [sp, #12]
 8003cba:	f7ff fbfd 	bl	80034b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003cbe:	f504 730b 	add.w	r3, r4, #556	@ 0x22c
 8003cc2:	4618      	mov	r0, r3
 8003cc4:	9304      	str	r3, [sp, #16]
 8003cc6:	f7ff fbf7 	bl	80034b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003cca:	f504 7329 	add.w	r3, r4, #676	@ 0x2a4
 8003cce:	4618      	mov	r0, r3
 8003cd0:	9305      	str	r3, [sp, #20]
 8003cd2:	f7ff fbf1 	bl	80034b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003cd6:	f504 7347 	add.w	r3, r4, #796	@ 0x31c
 8003cda:	4618      	mov	r0, r3
 8003cdc:	9306      	str	r3, [sp, #24]
 8003cde:	f7ff fbeb 	bl	80034b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003ce2:	f504 7365 	add.w	r3, r4, #916	@ 0x394
 8003ce6:	4618      	mov	r0, r3
 8003ce8:	9307      	str	r3, [sp, #28]
 8003cea:	f7ff fbc3 	bl	8003474 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003cee:	4b44      	ldr	r3, [pc, #272]	@ (8003e00 <_ZN15Screen3ViewBaseC1Ev+0x1b8>)
 8003cf0:	e9c4 34f8 	strd	r3, r4, [r4, #992]	@ 0x3e0
 8003cf4:	4b43      	ldr	r3, [pc, #268]	@ (8003e04 <_ZN15Screen3ViewBaseC1Ev+0x1bc>)
 8003cf6:	e9c4 35fa 	strd	r3, r5, [r4, #1000]	@ 0x3e8
    __background.setPosition(0, 0, 240, 320);
 8003cfa:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8003cfe:	462a      	mov	r2, r5
 8003d00:	4648      	mov	r0, r9
 8003d02:	9300      	str	r3, [sp, #0]
 8003d04:	4629      	mov	r1, r5
 8003d06:	23f0      	movs	r3, #240	@ 0xf0
 8003d08:	f7ff fb5a 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003d0c:	1d26      	adds	r6, r4, #4
 8003d0e:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8003d12:	66a3      	str	r3, [r4, #104]	@ 0x68
 8003d14:	4649      	mov	r1, r9
 8003d16:	4630      	mov	r0, r6
 8003d18:	f008 f8ca 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8003d1c:	462a      	mov	r2, r5
 8003d1e:	4658      	mov	r0, fp
 8003d20:	4629      	mov	r1, r5
 8003d22:	f7ff fb40 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
 8003d26:	230e      	movs	r3, #14
    image1.setBitmap(touchgfx::Bitmap(BITMAP_PLAY_SCREEN_MIN_ID));
 8003d28:	4658      	mov	r0, fp
 8003d2a:	a90e      	add	r1, sp, #56	@ 0x38
 8003d2c:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
        borderBox.setPosition(x, y, width, height);
 8003d30:	f04f 092d 	mov.w	r9, #45	@ 0x2d
 8003d34:	f00b f9b4 	bl	800f0a0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003d38:	4659      	mov	r1, fp
 8003d3a:	4630      	mov	r0, r6
 8003d3c:	f008 f8b8 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003d40:	f8cd 9000 	str.w	r9, [sp]
 8003d44:	232b      	movs	r3, #43	@ 0x2b
 8003d46:	462a      	mov	r2, r5
 8003d48:	4629      	mov	r1, r5
 8003d4a:	f104 00cc 	add.w	r0, r4, #204	@ 0xcc
 8003d4e:	f7ff fb37 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003d52:	4b2d      	ldr	r3, [pc, #180]	@ (8003e08 <_ZN15Screen3ViewBaseC1Ev+0x1c0>)
 8003d54:	4a2d      	ldr	r2, [pc, #180]	@ (8003e0c <_ZN15Screen3ViewBaseC1Ev+0x1c4>)
 8003d56:	492e      	ldr	r1, [pc, #184]	@ (8003e10 <_ZN15Screen3ViewBaseC1Ev+0x1c8>)
 8003d58:	f04f 0a05 	mov.w	sl, #5
 8003d5c:	f8a4 a0fc 	strh.w	sl, [r4, #252]	@ 0xfc
 8003d60:	9300      	str	r3, [sp, #0]
 8003d62:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 8003d66:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 8003d6a:	4640      	mov	r0, r8
 8003d6c:	f7ff ff60 	bl	8003c30 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1.setAction(flexButtonCallback);
 8003d70:	f504 7b78 	add.w	fp, r4, #992	@ 0x3e0
    flexButton1.setAlpha(0);
 8003d74:	4640      	mov	r0, r8
 8003d76:	4629      	mov	r1, r5
 8003d78:	f7ff fb76 	bl	8003468 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    flexButton1.setPosition(183, 269, 43, 45);
 8003d7c:	232b      	movs	r3, #43	@ 0x2b
 8003d7e:	f240 120d 	movw	r2, #269	@ 0x10d
 8003d82:	4640      	mov	r0, r8
 8003d84:	f8c4 b0c8 	str.w	fp, [r4, #200]	@ 0xc8
 8003d88:	21b7      	movs	r1, #183	@ 0xb7
 8003d8a:	f8cd 9000 	str.w	r9, [sp]
 8003d8e:	f7ff fb17 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003d92:	4641      	mov	r1, r8
 8003d94:	4630      	mov	r0, r6
 8003d96:	f008 f88b 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setPosition(119, 190, 172, 30);
 8003d9a:	231e      	movs	r3, #30
 8003d9c:	22be      	movs	r2, #190	@ 0xbe
 8003d9e:	9300      	str	r3, [sp, #0]
 8003da0:	2177      	movs	r1, #119	@ 0x77
 8003da2:	23ac      	movs	r3, #172	@ 0xac
 8003da4:	4638      	mov	r0, r7
 8003da6:	f7ff fb0b 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003daa:	f04f 33ff 	mov.w	r3, #4294967295
 8003dae:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
        boundingArea = calculateBoundingArea();
 8003db2:	f8d4 3110 	ldr.w	r3, [r4, #272]	@ 0x110
        linespace = space;
 8003db6:	f8a4 5144 	strh.w	r5, [r4, #324]	@ 0x144
        boundingArea = calculateBoundingArea();
 8003dba:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 8003dbe:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003dc2:	f8df 9064 	ldr.w	r9, [pc, #100]	@ 8003e28 <_ZN15Screen3ViewBaseC1Ev+0x1e0>
 8003dc6:	4639      	mov	r1, r7
 8003dc8:	4640      	mov	r0, r8
 8003dca:	4798      	blx	r3
 8003dcc:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003dd0:	f504 73a6 	add.w	r3, r4, #332	@ 0x14c
 8003dd4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003dd8:	f8d9 3000 	ldr.w	r3, [r9]
 8003ddc:	b92b      	cbnz	r3, 8003dea <_ZN15Screen3ViewBaseC1Ev+0x1a2>
 8003dde:	4b0d      	ldr	r3, [pc, #52]	@ (8003e14 <_ZN15Screen3ViewBaseC1Ev+0x1cc>)
 8003de0:	4a0d      	ldr	r2, [pc, #52]	@ (8003e18 <_ZN15Screen3ViewBaseC1Ev+0x1d0>)
 8003de2:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003de4:	480d      	ldr	r0, [pc, #52]	@ (8003e1c <_ZN15Screen3ViewBaseC1Ev+0x1d4>)
 8003de6:	f021 fa65 	bl	80252b4 <__assert_func>
 8003dea:	4b0d      	ldr	r3, [pc, #52]	@ (8003e20 <_ZN15Screen3ViewBaseC1Ev+0x1d8>)
 8003dec:	881b      	ldrh	r3, [r3, #0]
 8003dee:	2b0b      	cmp	r3, #11
 8003df0:	d81c      	bhi.n	8003e2c <_ZN15Screen3ViewBaseC1Ev+0x1e4>
 8003df2:	4b0c      	ldr	r3, [pc, #48]	@ (8003e24 <_ZN15Screen3ViewBaseC1Ev+0x1dc>)
 8003df4:	4a08      	ldr	r2, [pc, #32]	@ (8003e18 <_ZN15Screen3ViewBaseC1Ev+0x1d0>)
 8003df6:	2161      	movs	r1, #97	@ 0x61
 8003df8:	e7f4      	b.n	8003de4 <_ZN15Screen3ViewBaseC1Ev+0x19c>
 8003dfa:	bf00      	nop
 8003dfc:	08027b94 	.word	0x08027b94
 8003e00:	08027b7c 	.word	0x08027b7c
 8003e04:	08003bd5 	.word	0x08003bd5
 8003e08:	ff336699 	.word	0xff336699
 8003e0c:	ff0099cc 	.word	0xff0099cc
 8003e10:	ff006699 	.word	0xff006699
 8003e14:	08026f12 	.word	0x08026f12
 8003e18:	08027014 	.word	0x08027014
 8003e1c:	08026f8f 	.word	0x08026f8f
 8003e20:	20015294 	.word	0x20015294
 8003e24:	08026fd6 	.word	0x08026fd6
 8003e28:	20015290 	.word	0x20015290
        return texts->getText(typedTextId);
 8003e2c:	4b8b      	ldr	r3, [pc, #556]	@ (800405c <_ZN15Screen3ViewBaseC1Ev+0x414>)
 8003e2e:	210b      	movs	r1, #11
 8003e30:	6818      	ldr	r0, [r3, #0]
 8003e32:	f000 fd9d 	bl	8004970 <_ZNK8touchgfx5Texts7getTextEt>
        : typedTextId(id)
 8003e36:	230c      	movs	r3, #12
 8003e38:	4a89      	ldr	r2, [pc, #548]	@ (8004060 <_ZN15Screen3ViewBaseC1Ev+0x418>)
 8003e3a:	f8c4 0158 	str.w	r0, [r4, #344]	@ 0x158
    textArea1.setTypedText(touchgfx::TypedText(T_TOADOX));
 8003e3e:	a90e      	add	r1, sp, #56	@ 0x38
 8003e40:	4638      	mov	r0, r7
 8003e42:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8003e46:	920e      	str	r2, [sp, #56]	@ 0x38
 8003e48:	f00a ffce 	bl	800ede8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003e4c:	4639      	mov	r1, r7
 8003e4e:	4630      	mov	r0, r6
 8003e50:	f008 f82e 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2.setXY(0, 0);
 8003e54:	462a      	mov	r2, r5
 8003e56:	9808      	ldr	r0, [sp, #32]
 8003e58:	4629      	mov	r1, r5
 8003e5a:	f7ff faa4 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
 8003e5e:	2313      	movs	r3, #19
    image2.setBitmap(touchgfx::Bitmap(BITMAP_SCORE_ID));
 8003e60:	9808      	ldr	r0, [sp, #32]
 8003e62:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8003e66:	a90e      	add	r1, sp, #56	@ 0x38
 8003e68:	f00b f91a 	bl	800f0a0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003e6c:	9908      	ldr	r1, [sp, #32]
        visible = vis;
 8003e6e:	f884 5181 	strb.w	r5, [r4, #385]	@ 0x181
 8003e72:	4630      	mov	r0, r6
 8003e74:	f008 f81c 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image3.setXY(0, 0);
 8003e78:	462a      	mov	r2, r5
 8003e7a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003e7c:	4629      	mov	r1, r5
 8003e7e:	f7ff fa92 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
 8003e82:	230b      	movs	r3, #11
    image3.setBitmap(touchgfx::Bitmap(BITMAP_NEXT_LEVEL_ID));
 8003e84:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003e86:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8003e8a:	a90e      	add	r1, sp, #56	@ 0x38
 8003e8c:	271f      	movs	r7, #31
 8003e8e:	f00b f907 	bl	800f0a0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003e92:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003e94:	f884 51ad 	strb.w	r5, [r4, #429]	@ 0x1ad
 8003e98:	4630      	mov	r0, r6
 8003e9a:	f008 f809 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003e9e:	2341      	movs	r3, #65	@ 0x41
 8003ea0:	462a      	mov	r2, r5
 8003ea2:	4629      	mov	r1, r5
 8003ea4:	f504 70f4 	add.w	r0, r4, #488	@ 0x1e8
 8003ea8:	9700      	str	r7, [sp, #0]
 8003eaa:	f7ff fa89 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003eae:	4b6d      	ldr	r3, [pc, #436]	@ (8004064 <_ZN15Screen3ViewBaseC1Ev+0x41c>)
 8003eb0:	f8a4 a218 	strh.w	sl, [r4, #536]	@ 0x218
 8003eb4:	9300      	str	r3, [sp, #0]
 8003eb6:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 8003eba:	4a6b      	ldr	r2, [pc, #428]	@ (8004068 <_ZN15Screen3ViewBaseC1Ev+0x420>)
 8003ebc:	496b      	ldr	r1, [pc, #428]	@ (800406c <_ZN15Screen3ViewBaseC1Ev+0x424>)
 8003ebe:	9803      	ldr	r0, [sp, #12]
 8003ec0:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 8003ec4:	f7ff feb4 	bl	8003c30 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton2.setAlpha(0);
 8003ec8:	9803      	ldr	r0, [sp, #12]
 8003eca:	4629      	mov	r1, r5
 8003ecc:	f7ff facc 	bl	8003468 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    flexButton2.setPosition(43, 127, 65, 31);
 8003ed0:	2341      	movs	r3, #65	@ 0x41
 8003ed2:	227f      	movs	r2, #127	@ 0x7f
 8003ed4:	9803      	ldr	r0, [sp, #12]
 8003ed6:	f884 51d9 	strb.w	r5, [r4, #473]	@ 0x1d9
 8003eda:	f8c4 b1e4 	str.w	fp, [r4, #484]	@ 0x1e4
 8003ede:	212b      	movs	r1, #43	@ 0x2b
 8003ee0:	9700      	str	r7, [sp, #0]
 8003ee2:	f7ff fa6d 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003ee6:	9903      	ldr	r1, [sp, #12]
 8003ee8:	4630      	mov	r0, r6
 8003eea:	f007 ffe1 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003eee:	2341      	movs	r3, #65	@ 0x41
 8003ef0:	462a      	mov	r2, r5
 8003ef2:	4629      	mov	r1, r5
 8003ef4:	f504 7018 	add.w	r0, r4, #608	@ 0x260
 8003ef8:	9700      	str	r7, [sp, #0]
 8003efa:	f7ff fa61 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003efe:	4b59      	ldr	r3, [pc, #356]	@ (8004064 <_ZN15Screen3ViewBaseC1Ev+0x41c>)
 8003f00:	f8a4 a290 	strh.w	sl, [r4, #656]	@ 0x290
 8003f04:	9300      	str	r3, [sp, #0]
 8003f06:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 8003f0a:	4a57      	ldr	r2, [pc, #348]	@ (8004068 <_ZN15Screen3ViewBaseC1Ev+0x420>)
 8003f0c:	4957      	ldr	r1, [pc, #348]	@ (800406c <_ZN15Screen3ViewBaseC1Ev+0x424>)
 8003f0e:	9804      	ldr	r0, [sp, #16]
 8003f10:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 8003f14:	f7ff fe8c 	bl	8003c30 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton3.setAlpha(0);
 8003f18:	9804      	ldr	r0, [sp, #16]
 8003f1a:	4629      	mov	r1, r5
 8003f1c:	f7ff faa4 	bl	8003468 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    flexButton3.setPosition(133, 127, 65, 31);
 8003f20:	2341      	movs	r3, #65	@ 0x41
 8003f22:	227f      	movs	r2, #127	@ 0x7f
 8003f24:	9804      	ldr	r0, [sp, #16]
 8003f26:	f884 5251 	strb.w	r5, [r4, #593]	@ 0x251
 8003f2a:	f8c4 b25c 	str.w	fp, [r4, #604]	@ 0x25c
 8003f2e:	2185      	movs	r1, #133	@ 0x85
 8003f30:	9700      	str	r7, [sp, #0]
 8003f32:	f7ff fa45 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003f36:	9904      	ldr	r1, [sp, #16]
 8003f38:	4630      	mov	r0, r6
 8003f3a:	f007 ffb9 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f3e:	2341      	movs	r3, #65	@ 0x41
 8003f40:	462a      	mov	r2, r5
 8003f42:	4629      	mov	r1, r5
 8003f44:	f504 7036 	add.w	r0, r4, #728	@ 0x2d8
 8003f48:	9700      	str	r7, [sp, #0]
 8003f4a:	f7ff fa39 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003f4e:	4b45      	ldr	r3, [pc, #276]	@ (8004064 <_ZN15Screen3ViewBaseC1Ev+0x41c>)
 8003f50:	f8a4 a308 	strh.w	sl, [r4, #776]	@ 0x308
 8003f54:	9300      	str	r3, [sp, #0]
 8003f56:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 8003f5a:	4a43      	ldr	r2, [pc, #268]	@ (8004068 <_ZN15Screen3ViewBaseC1Ev+0x420>)
 8003f5c:	4943      	ldr	r1, [pc, #268]	@ (800406c <_ZN15Screen3ViewBaseC1Ev+0x424>)
 8003f5e:	9805      	ldr	r0, [sp, #20]
 8003f60:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 8003f64:	f7ff fe64 	bl	8003c30 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton4.setAlpha(0);
 8003f68:	9805      	ldr	r0, [sp, #20]
 8003f6a:	4629      	mov	r1, r5
 8003f6c:	f7ff fa7c 	bl	8003468 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    flexButton4.setPosition(38, 121, 65, 31);
 8003f70:	2341      	movs	r3, #65	@ 0x41
 8003f72:	2279      	movs	r2, #121	@ 0x79
 8003f74:	9805      	ldr	r0, [sp, #20]
 8003f76:	f884 52c9 	strb.w	r5, [r4, #713]	@ 0x2c9
 8003f7a:	f8c4 b2d4 	str.w	fp, [r4, #724]	@ 0x2d4
 8003f7e:	2126      	movs	r1, #38	@ 0x26
 8003f80:	9700      	str	r7, [sp, #0]
 8003f82:	f7ff fa1d 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003f86:	9905      	ldr	r1, [sp, #20]
 8003f88:	4630      	mov	r0, r6
 8003f8a:	f007 ff91 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f8e:	2341      	movs	r3, #65	@ 0x41
 8003f90:	462a      	mov	r2, r5
 8003f92:	4629      	mov	r1, r5
 8003f94:	f504 7054 	add.w	r0, r4, #848	@ 0x350
 8003f98:	9700      	str	r7, [sp, #0]
 8003f9a:	f7ff fa11 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003f9e:	4b31      	ldr	r3, [pc, #196]	@ (8004064 <_ZN15Screen3ViewBaseC1Ev+0x41c>)
 8003fa0:	f8a4 a380 	strh.w	sl, [r4, #896]	@ 0x380
 8003fa4:	9300      	str	r3, [sp, #0]
 8003fa6:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 8003faa:	4a2f      	ldr	r2, [pc, #188]	@ (8004068 <_ZN15Screen3ViewBaseC1Ev+0x420>)
 8003fac:	492f      	ldr	r1, [pc, #188]	@ (800406c <_ZN15Screen3ViewBaseC1Ev+0x424>)
 8003fae:	9806      	ldr	r0, [sp, #24]
 8003fb0:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 8003fb4:	f7ff fe3c 	bl	8003c30 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton5.setAlpha(0);
 8003fb8:	9806      	ldr	r0, [sp, #24]
 8003fba:	4629      	mov	r1, r5
 8003fbc:	f7ff fa54 	bl	8003468 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    flexButton5.setPosition(142, 121, 65, 31);
 8003fc0:	2341      	movs	r3, #65	@ 0x41
 8003fc2:	2279      	movs	r2, #121	@ 0x79
 8003fc4:	9806      	ldr	r0, [sp, #24]
 8003fc6:	f884 5341 	strb.w	r5, [r4, #833]	@ 0x341
 8003fca:	f8c4 b34c 	str.w	fp, [r4, #844]	@ 0x34c
 8003fce:	218e      	movs	r1, #142	@ 0x8e
 8003fd0:	9700      	str	r7, [sp, #0]
 8003fd2:	f7ff f9f5 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003fd6:	9906      	ldr	r1, [sp, #24]
 8003fd8:	4630      	mov	r0, r6
 8003fda:	f007 ff69 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setPosition(55, 99, 130, 20);
 8003fde:	2314      	movs	r3, #20
 8003fe0:	2263      	movs	r2, #99	@ 0x63
 8003fe2:	9807      	ldr	r0, [sp, #28]
 8003fe4:	9300      	str	r3, [sp, #0]
 8003fe6:	2137      	movs	r1, #55	@ 0x37
 8003fe8:	2382      	movs	r3, #130	@ 0x82
 8003fea:	f7ff f9e9 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003fee:	f8d4 3394 	ldr.w	r3, [r4, #916]	@ 0x394
        linespace = space;
 8003ff2:	f8a4 53c8 	strh.w	r5, [r4, #968]	@ 0x3c8
        color = newColor;
 8003ff6:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8003ffa:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 8003ffe:	f8c4 13c4 	str.w	r1, [r4, #964]	@ 0x3c4
        boundingArea = calculateBoundingArea();
 8004002:	4640      	mov	r0, r8
 8004004:	9907      	ldr	r1, [sp, #28]
 8004006:	4798      	blx	r3
 8004008:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800400c:	f504 7374 	add.w	r3, r4, #976	@ 0x3d0
 8004010:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004014:	f8d9 3000 	ldr.w	r3, [r9]
 8004018:	2b00      	cmp	r3, #0
 800401a:	f43f aee0 	beq.w	8003dde <_ZN15Screen3ViewBaseC1Ev+0x196>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800401e:	4914      	ldr	r1, [pc, #80]	@ (8004070 <_ZN15Screen3ViewBaseC1Ev+0x428>)
 8004020:	880b      	ldrh	r3, [r1, #0]
 8004022:	2b04      	cmp	r3, #4
 8004024:	f67f aee5 	bls.w	8003df2 <_ZN15Screen3ViewBaseC1Ev+0x1aa>
        return texts->getText(typedTextId);
 8004028:	4b0c      	ldr	r3, [pc, #48]	@ (800405c <_ZN15Screen3ViewBaseC1Ev+0x414>)
 800402a:	2104      	movs	r1, #4
 800402c:	6818      	ldr	r0, [r3, #0]
 800402e:	f000 fc9f 	bl	8004970 <_ZNK8touchgfx5Texts7getTextEt>
        : typedTextId(id)
 8004032:	4a0b      	ldr	r2, [pc, #44]	@ (8004060 <_ZN15Screen3ViewBaseC1Ev+0x418>)
 8004034:	f8c4 03dc 	str.w	r0, [r4, #988]	@ 0x3dc
 8004038:	2306      	movs	r3, #6
    textArea2.setTypedText(touchgfx::TypedText(T_MAN3SCORE));
 800403a:	9807      	ldr	r0, [sp, #28]
 800403c:	920e      	str	r2, [sp, #56]	@ 0x38
 800403e:	a90e      	add	r1, sp, #56	@ 0x38
 8004040:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8004044:	f00a fed0 	bl	800ede8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004048:	4630      	mov	r0, r6
 800404a:	9907      	ldr	r1, [sp, #28]
 800404c:	f884 53b9 	strb.w	r5, [r4, #953]	@ 0x3b9
 8004050:	f007 ff2e 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004054:	4620      	mov	r0, r4
 8004056:	b011      	add	sp, #68	@ 0x44
 8004058:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800405c:	2001529c 	.word	0x2001529c
 8004060:	08027840 	.word	0x08027840
 8004064:	ff336699 	.word	0xff336699
 8004068:	ff0099cc 	.word	0xff0099cc
 800406c:	ff006699 	.word	0xff006699
 8004070:	20015294 	.word	0x20015294

08004074 <_ZN15Screen4ViewBaseD1Ev>:
}

Screen4ViewBase::~Screen4ViewBase()
{

}
 8004074:	4770      	bx	lr

08004076 <_ZN15Screen4ViewBase11setupScreenEv>:

void Screen4ViewBase::setupScreen()
{

}
 8004076:	4770      	bx	lr

08004078 <_ZN15Screen4ViewBaseD0Ev>:
Screen4ViewBase::~Screen4ViewBase()
 8004078:	b510      	push	{r4, lr}
}
 800407a:	f44f 7178 	mov.w	r1, #992	@ 0x3e0
Screen4ViewBase::~Screen4ViewBase()
 800407e:	4604      	mov	r4, r0
}
 8004080:	f020 f9db 	bl	802443a <_ZdlPvj>
 8004084:	4620      	mov	r0, r4
 8004086:	bd10      	pop	{r4, pc}

08004088 <_ZN15Screen4ViewBaseC1Ev>:
Screen4ViewBase::Screen4ViewBase()
 8004088:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800408c:	4604      	mov	r4, r0
 800408e:	b08f      	sub	sp, #60	@ 0x3c
 8004090:	46a1      	mov	r9, r4
 8004092:	2500      	movs	r5, #0
 8004094:	f00f fc04 	bl	80138a0 <_ZN8touchgfx6ScreenC1Ev>
 8004098:	4b62      	ldr	r3, [pc, #392]	@ (8004224 <_ZN15Screen4ViewBaseC1Ev+0x19c>)
 800409a:	63e5      	str	r5, [r4, #60]	@ 0x3c
 800409c:	f849 3b40 	str.w	r3, [r9], #64
 80040a0:	f104 0b6c 	add.w	fp, r4, #108	@ 0x6c
 80040a4:	4648      	mov	r0, r9
 80040a6:	f7ff f9b1 	bl	800340c <_ZN8touchgfx3BoxC1Ev>
 80040aa:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 80040ae:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 80040b2:	a90c      	add	r1, sp, #48	@ 0x30
 80040b4:	4658      	mov	r0, fp
 80040b6:	f504 7788 	add.w	r7, r4, #272	@ 0x110
 80040ba:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 80040be:	f7ff f9b9 	bl	8003434 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80040c2:	4640      	mov	r0, r8
 80040c4:	f7ff f9f8 	bl	80034b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 80040c8:	4638      	mov	r0, r7
 80040ca:	f7ff f9d3 	bl	8003474 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80040ce:	f504 73ae 	add.w	r3, r4, #348	@ 0x15c
 80040d2:	a90c      	add	r1, sp, #48	@ 0x30
 80040d4:	4618      	mov	r0, r3
 80040d6:	9306      	str	r3, [sp, #24]
 80040d8:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 80040dc:	f7ff f9aa 	bl	8003434 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80040e0:	f504 73c4 	add.w	r3, r4, #392	@ 0x188
 80040e4:	a90c      	add	r1, sp, #48	@ 0x30
 80040e6:	4618      	mov	r0, r3
 80040e8:	9307      	str	r3, [sp, #28]
 80040ea:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 80040ee:	f7ff f9a1 	bl	8003434 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80040f2:	f504 73da 	add.w	r3, r4, #436	@ 0x1b4
 80040f6:	4618      	mov	r0, r3
 80040f8:	9302      	str	r3, [sp, #8]
 80040fa:	f7ff f9dd 	bl	80034b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 80040fe:	f504 730b 	add.w	r3, r4, #556	@ 0x22c
 8004102:	4618      	mov	r0, r3
 8004104:	9303      	str	r3, [sp, #12]
 8004106:	f7ff f9d7 	bl	80034b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800410a:	f504 7329 	add.w	r3, r4, #676	@ 0x2a4
 800410e:	4618      	mov	r0, r3
 8004110:	9304      	str	r3, [sp, #16]
 8004112:	f7ff f9d1 	bl	80034b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8004116:	f504 7347 	add.w	r3, r4, #796	@ 0x31c
 800411a:	4618      	mov	r0, r3
 800411c:	f504 7a65 	add.w	sl, r4, #916	@ 0x394
 8004120:	9305      	str	r3, [sp, #20]
 8004122:	f7ff f9c9 	bl	80034b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8004126:	4650      	mov	r0, sl
 8004128:	f7ff f9a4 	bl	8003474 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
    __background.setPosition(0, 0, 240, 320);
 800412c:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8004130:	462a      	mov	r2, r5
 8004132:	4648      	mov	r0, r9
 8004134:	9300      	str	r3, [sp, #0]
 8004136:	4629      	mov	r1, r5
 8004138:	23f0      	movs	r3, #240	@ 0xf0
 800413a:	f7ff f941 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 800413e:	1d26      	adds	r6, r4, #4
 8004140:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8004144:	66a3      	str	r3, [r4, #104]	@ 0x68
 8004146:	4649      	mov	r1, r9
 8004148:	4630      	mov	r0, r6
 800414a:	f007 feb1 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800414e:	462a      	mov	r2, r5
 8004150:	4658      	mov	r0, fp
 8004152:	4629      	mov	r1, r5
 8004154:	f7ff f927 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
 8004158:	230e      	movs	r3, #14
    image1.setBitmap(touchgfx::Bitmap(BITMAP_PLAY_SCREEN_MIN_ID));
 800415a:	4658      	mov	r0, fp
 800415c:	a90c      	add	r1, sp, #48	@ 0x30
 800415e:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8004162:	f04f 092b 	mov.w	r9, #43	@ 0x2b
 8004166:	f00a ff9b 	bl	800f0a0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800416a:	4659      	mov	r1, fp
 800416c:	4630      	mov	r0, r6
 800416e:	f007 fe9f 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004172:	f8cd 9000 	str.w	r9, [sp]
 8004176:	2329      	movs	r3, #41	@ 0x29
 8004178:	462a      	mov	r2, r5
 800417a:	4629      	mov	r1, r5
 800417c:	f104 00cc 	add.w	r0, r4, #204	@ 0xcc
 8004180:	f7ff f91e 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8004184:	4b28      	ldr	r3, [pc, #160]	@ (8004228 <_ZN15Screen4ViewBaseC1Ev+0x1a0>)
 8004186:	4a29      	ldr	r2, [pc, #164]	@ (800422c <_ZN15Screen4ViewBaseC1Ev+0x1a4>)
 8004188:	4929      	ldr	r1, [pc, #164]	@ (8004230 <_ZN15Screen4ViewBaseC1Ev+0x1a8>)
 800418a:	f04f 0b05 	mov.w	fp, #5
 800418e:	f8a4 b0fc 	strh.w	fp, [r4, #252]	@ 0xfc
 8004192:	9300      	str	r3, [sp, #0]
 8004194:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 8004198:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 800419c:	4640      	mov	r0, r8
 800419e:	f7ff fd47 	bl	8003c30 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1.setAlpha(0);
 80041a2:	4640      	mov	r0, r8
 80041a4:	4629      	mov	r1, r5
 80041a6:	f7ff f95f 	bl	8003468 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    flexButton1.setPosition(185, 271, 41, 43);
 80041aa:	2329      	movs	r3, #41	@ 0x29
 80041ac:	f240 120f 	movw	r2, #271	@ 0x10f
 80041b0:	4640      	mov	r0, r8
 80041b2:	f8cd 9000 	str.w	r9, [sp]
 80041b6:	21b9      	movs	r1, #185	@ 0xb9
 80041b8:	f7ff f902 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80041bc:	4641      	mov	r1, r8
 80041be:	4630      	mov	r0, r6
 80041c0:	f007 fe76 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setPosition(119, 190, 172, 30);
 80041c4:	231e      	movs	r3, #30
 80041c6:	22be      	movs	r2, #190	@ 0xbe
 80041c8:	9300      	str	r3, [sp, #0]
 80041ca:	2177      	movs	r1, #119	@ 0x77
 80041cc:	23ac      	movs	r3, #172	@ 0xac
 80041ce:	4638      	mov	r0, r7
 80041d0:	f7ff f8f6 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80041d4:	f04f 33ff 	mov.w	r3, #4294967295
 80041d8:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
        boundingArea = calculateBoundingArea();
 80041dc:	f8d4 3110 	ldr.w	r3, [r4, #272]	@ 0x110
        linespace = space;
 80041e0:	f8a4 5144 	strh.w	r5, [r4, #324]	@ 0x144
        boundingArea = calculateBoundingArea();
 80041e4:	f10d 0820 	add.w	r8, sp, #32
 80041e8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80041ec:	f8df 9058 	ldr.w	r9, [pc, #88]	@ 8004248 <_ZN15Screen4ViewBaseC1Ev+0x1c0>
 80041f0:	4639      	mov	r1, r7
 80041f2:	4640      	mov	r0, r8
 80041f4:	4798      	blx	r3
 80041f6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80041fa:	f504 73a6 	add.w	r3, r4, #332	@ 0x14c
 80041fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004202:	f8d9 3000 	ldr.w	r3, [r9]
 8004206:	b92b      	cbnz	r3, 8004214 <_ZN15Screen4ViewBaseC1Ev+0x18c>
 8004208:	4b0a      	ldr	r3, [pc, #40]	@ (8004234 <_ZN15Screen4ViewBaseC1Ev+0x1ac>)
 800420a:	4a0b      	ldr	r2, [pc, #44]	@ (8004238 <_ZN15Screen4ViewBaseC1Ev+0x1b0>)
 800420c:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800420e:	480b      	ldr	r0, [pc, #44]	@ (800423c <_ZN15Screen4ViewBaseC1Ev+0x1b4>)
 8004210:	f021 f850 	bl	80252b4 <__assert_func>
 8004214:	4b0a      	ldr	r3, [pc, #40]	@ (8004240 <_ZN15Screen4ViewBaseC1Ev+0x1b8>)
 8004216:	881b      	ldrh	r3, [r3, #0]
 8004218:	2b02      	cmp	r3, #2
 800421a:	d817      	bhi.n	800424c <_ZN15Screen4ViewBaseC1Ev+0x1c4>
 800421c:	4b09      	ldr	r3, [pc, #36]	@ (8004244 <_ZN15Screen4ViewBaseC1Ev+0x1bc>)
 800421e:	4a06      	ldr	r2, [pc, #24]	@ (8004238 <_ZN15Screen4ViewBaseC1Ev+0x1b0>)
 8004220:	2161      	movs	r1, #97	@ 0x61
 8004222:	e7f4      	b.n	800420e <_ZN15Screen4ViewBaseC1Ev+0x186>
 8004224:	08027bc8 	.word	0x08027bc8
 8004228:	ff336699 	.word	0xff336699
 800422c:	ff0099cc 	.word	0xff0099cc
 8004230:	ff006699 	.word	0xff006699
 8004234:	08026f12 	.word	0x08026f12
 8004238:	08027014 	.word	0x08027014
 800423c:	08026f8f 	.word	0x08026f8f
 8004240:	20015294 	.word	0x20015294
 8004244:	08026fd6 	.word	0x08026fd6
 8004248:	20015290 	.word	0x20015290
        return texts->getText(typedTextId);
 800424c:	4b87      	ldr	r3, [pc, #540]	@ (800446c <_ZN15Screen4ViewBaseC1Ev+0x3e4>)
 800424e:	2102      	movs	r1, #2
 8004250:	6818      	ldr	r0, [r3, #0]
 8004252:	f000 fb8d 	bl	8004970 <_ZNK8touchgfx5Texts7getTextEt>
        : typedTextId(id)
 8004256:	2303      	movs	r3, #3
 8004258:	4a85      	ldr	r2, [pc, #532]	@ (8004470 <_ZN15Screen4ViewBaseC1Ev+0x3e8>)
 800425a:	f8c4 0158 	str.w	r0, [r4, #344]	@ 0x158
    textArea1.setTypedText(touchgfx::TypedText(T_MAN4));
 800425e:	a90c      	add	r1, sp, #48	@ 0x30
 8004260:	4638      	mov	r0, r7
 8004262:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8004266:	920c      	str	r2, [sp, #48]	@ 0x30
 8004268:	f00a fdbe 	bl	800ede8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800426c:	4639      	mov	r1, r7
 800426e:	4630      	mov	r0, r6
 8004270:	f007 fe1e 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2.setXY(0, 0);
 8004274:	462a      	mov	r2, r5
 8004276:	9806      	ldr	r0, [sp, #24]
 8004278:	4629      	mov	r1, r5
 800427a:	f7ff f894 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
 800427e:	2313      	movs	r3, #19
    image2.setBitmap(touchgfx::Bitmap(BITMAP_SCORE_ID));
 8004280:	9806      	ldr	r0, [sp, #24]
 8004282:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8004286:	a90c      	add	r1, sp, #48	@ 0x30
 8004288:	f00a ff0a 	bl	800f0a0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800428c:	9906      	ldr	r1, [sp, #24]
 800428e:	f884 5181 	strb.w	r5, [r4, #385]	@ 0x181
 8004292:	4630      	mov	r0, r6
 8004294:	f007 fe0c 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image3.setXY(0, 0);
 8004298:	462a      	mov	r2, r5
 800429a:	9807      	ldr	r0, [sp, #28]
 800429c:	4629      	mov	r1, r5
 800429e:	f7ff f882 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
 80042a2:	230b      	movs	r3, #11
    image3.setBitmap(touchgfx::Bitmap(BITMAP_NEXT_LEVEL_ID));
 80042a4:	9807      	ldr	r0, [sp, #28]
 80042a6:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 80042aa:	a90c      	add	r1, sp, #48	@ 0x30
 80042ac:	271f      	movs	r7, #31
 80042ae:	f00a fef7 	bl	800f0a0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80042b2:	9907      	ldr	r1, [sp, #28]
 80042b4:	f884 51ad 	strb.w	r5, [r4, #429]	@ 0x1ad
 80042b8:	4630      	mov	r0, r6
 80042ba:	f007 fdf9 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80042be:	2341      	movs	r3, #65	@ 0x41
 80042c0:	462a      	mov	r2, r5
 80042c2:	4629      	mov	r1, r5
 80042c4:	f504 70f4 	add.w	r0, r4, #488	@ 0x1e8
 80042c8:	9700      	str	r7, [sp, #0]
 80042ca:	f7ff f879 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80042ce:	4b69      	ldr	r3, [pc, #420]	@ (8004474 <_ZN15Screen4ViewBaseC1Ev+0x3ec>)
 80042d0:	f8a4 b218 	strh.w	fp, [r4, #536]	@ 0x218
 80042d4:	9300      	str	r3, [sp, #0]
 80042d6:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 80042da:	4a67      	ldr	r2, [pc, #412]	@ (8004478 <_ZN15Screen4ViewBaseC1Ev+0x3f0>)
 80042dc:	4967      	ldr	r1, [pc, #412]	@ (800447c <_ZN15Screen4ViewBaseC1Ev+0x3f4>)
 80042de:	9802      	ldr	r0, [sp, #8]
 80042e0:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 80042e4:	f7ff fca4 	bl	8003c30 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton2.setAlpha(0);
 80042e8:	9802      	ldr	r0, [sp, #8]
 80042ea:	4629      	mov	r1, r5
 80042ec:	f7ff f8bc 	bl	8003468 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    flexButton2.setPosition(42, 127, 65, 31);
 80042f0:	2341      	movs	r3, #65	@ 0x41
 80042f2:	227f      	movs	r2, #127	@ 0x7f
 80042f4:	9802      	ldr	r0, [sp, #8]
 80042f6:	f884 51d9 	strb.w	r5, [r4, #473]	@ 0x1d9
 80042fa:	212a      	movs	r1, #42	@ 0x2a
 80042fc:	9700      	str	r7, [sp, #0]
 80042fe:	f7ff f85f 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004302:	9902      	ldr	r1, [sp, #8]
 8004304:	4630      	mov	r0, r6
 8004306:	f007 fdd3 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800430a:	2341      	movs	r3, #65	@ 0x41
 800430c:	462a      	mov	r2, r5
 800430e:	4629      	mov	r1, r5
 8004310:	f504 7018 	add.w	r0, r4, #608	@ 0x260
 8004314:	9700      	str	r7, [sp, #0]
 8004316:	f7ff f853 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800431a:	4b56      	ldr	r3, [pc, #344]	@ (8004474 <_ZN15Screen4ViewBaseC1Ev+0x3ec>)
 800431c:	f8a4 b290 	strh.w	fp, [r4, #656]	@ 0x290
 8004320:	9300      	str	r3, [sp, #0]
 8004322:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 8004326:	4a54      	ldr	r2, [pc, #336]	@ (8004478 <_ZN15Screen4ViewBaseC1Ev+0x3f0>)
 8004328:	4954      	ldr	r1, [pc, #336]	@ (800447c <_ZN15Screen4ViewBaseC1Ev+0x3f4>)
 800432a:	9803      	ldr	r0, [sp, #12]
 800432c:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 8004330:	f7ff fc7e 	bl	8003c30 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton3.setAlpha(0);
 8004334:	9803      	ldr	r0, [sp, #12]
 8004336:	4629      	mov	r1, r5
 8004338:	f7ff f896 	bl	8003468 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    flexButton3.setPosition(133, 127, 65, 31);
 800433c:	2341      	movs	r3, #65	@ 0x41
 800433e:	227f      	movs	r2, #127	@ 0x7f
 8004340:	9803      	ldr	r0, [sp, #12]
 8004342:	f884 5251 	strb.w	r5, [r4, #593]	@ 0x251
 8004346:	2185      	movs	r1, #133	@ 0x85
 8004348:	9700      	str	r7, [sp, #0]
 800434a:	f7ff f839 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 800434e:	9903      	ldr	r1, [sp, #12]
 8004350:	4630      	mov	r0, r6
 8004352:	f007 fdad 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004356:	2341      	movs	r3, #65	@ 0x41
 8004358:	462a      	mov	r2, r5
 800435a:	4629      	mov	r1, r5
 800435c:	f504 7036 	add.w	r0, r4, #728	@ 0x2d8
 8004360:	9700      	str	r7, [sp, #0]
 8004362:	f7ff f82d 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8004366:	4b43      	ldr	r3, [pc, #268]	@ (8004474 <_ZN15Screen4ViewBaseC1Ev+0x3ec>)
 8004368:	f8a4 b308 	strh.w	fp, [r4, #776]	@ 0x308
 800436c:	9300      	str	r3, [sp, #0]
 800436e:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 8004372:	4a41      	ldr	r2, [pc, #260]	@ (8004478 <_ZN15Screen4ViewBaseC1Ev+0x3f0>)
 8004374:	4941      	ldr	r1, [pc, #260]	@ (800447c <_ZN15Screen4ViewBaseC1Ev+0x3f4>)
 8004376:	9804      	ldr	r0, [sp, #16]
 8004378:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 800437c:	f7ff fc58 	bl	8003c30 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton4.setAlpha(0);
 8004380:	9804      	ldr	r0, [sp, #16]
 8004382:	4629      	mov	r1, r5
 8004384:	f7ff f870 	bl	8003468 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    flexButton4.setPosition(38, 121, 65, 31);
 8004388:	2341      	movs	r3, #65	@ 0x41
 800438a:	2279      	movs	r2, #121	@ 0x79
 800438c:	9804      	ldr	r0, [sp, #16]
 800438e:	f884 52c9 	strb.w	r5, [r4, #713]	@ 0x2c9
 8004392:	2126      	movs	r1, #38	@ 0x26
 8004394:	9700      	str	r7, [sp, #0]
 8004396:	f7ff f813 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 800439a:	9904      	ldr	r1, [sp, #16]
 800439c:	4630      	mov	r0, r6
 800439e:	f007 fd87 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80043a2:	2341      	movs	r3, #65	@ 0x41
 80043a4:	462a      	mov	r2, r5
 80043a6:	4629      	mov	r1, r5
 80043a8:	f504 7054 	add.w	r0, r4, #848	@ 0x350
 80043ac:	9700      	str	r7, [sp, #0]
 80043ae:	f7ff f807 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80043b2:	4b30      	ldr	r3, [pc, #192]	@ (8004474 <_ZN15Screen4ViewBaseC1Ev+0x3ec>)
 80043b4:	f8a4 b380 	strh.w	fp, [r4, #896]	@ 0x380
 80043b8:	9300      	str	r3, [sp, #0]
 80043ba:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 80043be:	4a2e      	ldr	r2, [pc, #184]	@ (8004478 <_ZN15Screen4ViewBaseC1Ev+0x3f0>)
 80043c0:	492e      	ldr	r1, [pc, #184]	@ (800447c <_ZN15Screen4ViewBaseC1Ev+0x3f4>)
 80043c2:	9805      	ldr	r0, [sp, #20]
 80043c4:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 80043c8:	f7ff fc32 	bl	8003c30 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton5.setAlpha(0);
 80043cc:	9805      	ldr	r0, [sp, #20]
 80043ce:	4629      	mov	r1, r5
 80043d0:	f7ff f84a 	bl	8003468 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    flexButton5.setPosition(142, 121, 65, 31);
 80043d4:	2341      	movs	r3, #65	@ 0x41
 80043d6:	2279      	movs	r2, #121	@ 0x79
 80043d8:	9805      	ldr	r0, [sp, #20]
 80043da:	f884 5341 	strb.w	r5, [r4, #833]	@ 0x341
 80043de:	218e      	movs	r1, #142	@ 0x8e
 80043e0:	9700      	str	r7, [sp, #0]
 80043e2:	f7fe ffed 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80043e6:	9905      	ldr	r1, [sp, #20]
 80043e8:	4630      	mov	r0, r6
 80043ea:	f007 fd61 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setPosition(55, 99, 130, 20);
 80043ee:	2314      	movs	r3, #20
 80043f0:	2263      	movs	r2, #99	@ 0x63
 80043f2:	9300      	str	r3, [sp, #0]
 80043f4:	2137      	movs	r1, #55	@ 0x37
 80043f6:	2382      	movs	r3, #130	@ 0x82
 80043f8:	4650      	mov	r0, sl
 80043fa:	f7fe ffe1 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80043fe:	f8d4 3394 	ldr.w	r3, [r4, #916]	@ 0x394
        linespace = space;
 8004402:	f8a4 53c8 	strh.w	r5, [r4, #968]	@ 0x3c8
        color = newColor;
 8004406:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 800440a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 800440e:	f8c4 13c4 	str.w	r1, [r4, #964]	@ 0x3c4
        boundingArea = calculateBoundingArea();
 8004412:	4640      	mov	r0, r8
 8004414:	4651      	mov	r1, sl
 8004416:	4798      	blx	r3
 8004418:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800441c:	f504 7374 	add.w	r3, r4, #976	@ 0x3d0
 8004420:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004424:	f8d9 3000 	ldr.w	r3, [r9]
 8004428:	2b00      	cmp	r3, #0
 800442a:	f43f aeed 	beq.w	8004208 <_ZN15Screen4ViewBaseC1Ev+0x180>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800442e:	4914      	ldr	r1, [pc, #80]	@ (8004480 <_ZN15Screen4ViewBaseC1Ev+0x3f8>)
 8004430:	880b      	ldrh	r3, [r1, #0]
 8004432:	2b00      	cmp	r3, #0
 8004434:	f43f aef2 	beq.w	800421c <_ZN15Screen4ViewBaseC1Ev+0x194>
        return texts->getText(typedTextId);
 8004438:	4b0c      	ldr	r3, [pc, #48]	@ (800446c <_ZN15Screen4ViewBaseC1Ev+0x3e4>)
 800443a:	4629      	mov	r1, r5
 800443c:	6818      	ldr	r0, [r3, #0]
 800443e:	f000 fa97 	bl	8004970 <_ZNK8touchgfx5Texts7getTextEt>
        : typedTextId(id)
 8004442:	4a0b      	ldr	r2, [pc, #44]	@ (8004470 <_ZN15Screen4ViewBaseC1Ev+0x3e8>)
 8004444:	f8c4 03dc 	str.w	r0, [r4, #988]	@ 0x3dc
 8004448:	2301      	movs	r3, #1
    textArea2.setTypedText(touchgfx::TypedText(T_MAN4SCORE));
 800444a:	a90c      	add	r1, sp, #48	@ 0x30
 800444c:	4650      	mov	r0, sl
 800444e:	920c      	str	r2, [sp, #48]	@ 0x30
 8004450:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8004454:	f00a fcc8 	bl	800ede8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004458:	4630      	mov	r0, r6
 800445a:	f884 53b9 	strb.w	r5, [r4, #953]	@ 0x3b9
 800445e:	4651      	mov	r1, sl
 8004460:	f007 fd26 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004464:	4620      	mov	r0, r4
 8004466:	b00f      	add	sp, #60	@ 0x3c
 8004468:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800446c:	2001529c 	.word	0x2001529c
 8004470:	08027840 	.word	0x08027840
 8004474:	ff336699 	.word	0xff336699
 8004478:	ff0099cc 	.word	0xff0099cc
 800447c:	ff006699 	.word	0xff006699
 8004480:	20015294 	.word	0x20015294

08004484 <_ZN8touchgfx8CallbackI18ScreenWaitViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004484:	4770      	bx	lr

08004486 <_ZN18ScreenWaitViewBaseD1Ev>:
}

ScreenWaitViewBase::~ScreenWaitViewBase()
{

}
 8004486:	4770      	bx	lr

08004488 <_ZN18ScreenWaitViewBase11setupScreenEv>:

void ScreenWaitViewBase::setupScreen()
{

}
 8004488:	4770      	bx	lr

0800448a <_ZN8touchgfx8CallbackI18ScreenWaitViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800448a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800448c:	68c2      	ldr	r2, [r0, #12]
 800448e:	6844      	ldr	r4, [r0, #4]
 8004490:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8004492:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8004494:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8004498:	07d2      	lsls	r2, r2, #31
 800449a:	bf48      	it	mi
 800449c:	5962      	ldrmi	r2, [r4, r5]
 800449e:	689b      	ldr	r3, [r3, #8]
    }
 80044a0:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80044a2:	bf48      	it	mi
 80044a4:	58d3      	ldrmi	r3, [r2, r3]
 80044a6:	4718      	bx	r3

080044a8 <_ZNK8touchgfx8CallbackI18ScreenWaitViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 80044a8:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 80044aa:	6840      	ldr	r0, [r0, #4]
 80044ac:	b130      	cbz	r0, 80044bc <_ZNK8touchgfx8CallbackI18ScreenWaitViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80044ae:	689a      	ldr	r2, [r3, #8]
 80044b0:	b91a      	cbnz	r2, 80044ba <_ZNK8touchgfx8CallbackI18ScreenWaitViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 80044b2:	68d8      	ldr	r0, [r3, #12]
 80044b4:	f000 0001 	and.w	r0, r0, #1
 80044b8:	4770      	bx	lr
 80044ba:	2001      	movs	r0, #1
    }
 80044bc:	4770      	bx	lr

080044be <_ZN8touchgfx8CallbackI18ScreenWaitViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80044be:	b510      	push	{r4, lr}
 80044c0:	2110      	movs	r1, #16
 80044c2:	4604      	mov	r4, r0
 80044c4:	f01f ffb9 	bl	802443a <_ZdlPvj>
 80044c8:	4620      	mov	r0, r4
 80044ca:	bd10      	pop	{r4, pc}

080044cc <_ZN18ScreenWaitViewBaseD0Ev>:
ScreenWaitViewBase::~ScreenWaitViewBase()
 80044cc:	b510      	push	{r4, lr}
}
 80044ce:	f44f 71cc 	mov.w	r1, #408	@ 0x198
ScreenWaitViewBase::~ScreenWaitViewBase()
 80044d2:	4604      	mov	r4, r0
}
 80044d4:	f01f ffb1 	bl	802443a <_ZdlPvj>
 80044d8:	4620      	mov	r0, r4
 80044da:	bd10      	pop	{r4, pc}

080044dc <_ZN18ScreenWaitViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void ScreenWaitViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 80044dc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &flexButton1)
 80044de:	f100 0398 	add.w	r3, r0, #152	@ 0x98
 80044e2:	4299      	cmp	r1, r3
{
 80044e4:	4604      	mov	r4, r0
 80044e6:	460d      	mov	r5, r1
    if (&src == &flexButton1)
 80044e8:	d103      	bne.n	80044f2 <_ZN18ScreenWaitViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~ScreenWaitViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80044ea:	f00d f9d5 	bl	8011898 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When flexButton1 clicked change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
 80044ee:	f7fe fa59 	bl	80029a4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    }
    if (&src == &flexButton2)
 80044f2:	f504 7488 	add.w	r4, r4, #272	@ 0x110
 80044f6:	42a5      	cmp	r5, r4
 80044f8:	d105      	bne.n	8004506 <_ZN18ScreenWaitViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
 80044fa:	f00d f9cd 	bl	8011898 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction2
        //When flexButton2 clicked change screen to Screen3
        //Go to Screen3 with no screen transition
        application().gotoScreen3ScreenNoTransition();
    }
}
 80044fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoScreen3ScreenNoTransition();
 8004502:	f7fe ba5f 	b.w	80029c4 <_ZN23FrontendApplicationBase29gotoScreen3ScreenNoTransitionEv>
}
 8004506:	bd38      	pop	{r3, r4, r5, pc}

08004508 <_ZN18ScreenWaitViewBaseC1Ev>:
ScreenWaitViewBase::ScreenWaitViewBase() :
 8004508:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800450c:	4604      	mov	r4, r0
 800450e:	b085      	sub	sp, #20
    flexButtonCallback(this, &ScreenWaitViewBase::flexButtonCallbackHandler)
 8004510:	46a2      	mov	sl, r4
 8004512:	2500      	movs	r5, #0
 8004514:	f00f f9c4 	bl	80138a0 <_ZN8touchgfx6ScreenC1Ev>
 8004518:	4b5a      	ldr	r3, [pc, #360]	@ (8004684 <_ZN18ScreenWaitViewBaseC1Ev+0x17c>)
 800451a:	63e5      	str	r5, [r4, #60]	@ 0x3c
 800451c:	f84a 3b40 	str.w	r3, [sl], #64
 8004520:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 8004524:	4650      	mov	r0, sl
 8004526:	f7fe ff71 	bl	800340c <_ZN8touchgfx3BoxC1Ev>
 800452a:	f64f 76ff 	movw	r6, #65535	@ 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 800452e:	2226      	movs	r2, #38	@ 0x26
 8004530:	4629      	mov	r1, r5
 8004532:	4648      	mov	r0, r9
 8004534:	f8ad 600c 	strh.w	r6, [sp, #12]
 8004538:	f021 f8c3 	bl	80256c2 <memset>
 800453c:	4648      	mov	r0, r9
 800453e:	f7ff f9e5 	bl	800390c <_ZN8touchgfx8DrawableC1Ev>
 8004542:	4b51      	ldr	r3, [pc, #324]	@ (8004688 <_ZN18ScreenWaitViewBaseC1Ev+0x180>)
 8004544:	66e3      	str	r3, [r4, #108]	@ 0x6c
 8004546:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800454a:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
 800454e:	f104 0798 	add.w	r7, r4, #152	@ 0x98
        Image::setBitmap(bmp);
 8004552:	a903      	add	r1, sp, #12
        : Widget(), bitmap(bmp), alpha(255)
 8004554:	f884 6094 	strb.w	r6, [r4, #148]	@ 0x94
        Image::setBitmap(bmp);
 8004558:	4648      	mov	r0, r9
 800455a:	f00a fda1 	bl	800f0a0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800455e:	f504 7688 	add.w	r6, r4, #272	@ 0x110
 8004562:	4638      	mov	r0, r7
 8004564:	f7fe ffa8 	bl	80034b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8004568:	4630      	mov	r0, r6
 800456a:	f7fe ffa5 	bl	80034b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800456e:	4b47      	ldr	r3, [pc, #284]	@ (800468c <_ZN18ScreenWaitViewBaseC1Ev+0x184>)
 8004570:	e9c4 3462 	strd	r3, r4, [r4, #392]	@ 0x188
 8004574:	4b46      	ldr	r3, [pc, #280]	@ (8004690 <_ZN18ScreenWaitViewBaseC1Ev+0x188>)
 8004576:	e9c4 3564 	strd	r3, r5, [r4, #400]	@ 0x190
    __background.setPosition(0, 0, 240, 320);
 800457a:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800457e:	462a      	mov	r2, r5
 8004580:	9300      	str	r3, [sp, #0]
 8004582:	4629      	mov	r1, r5
 8004584:	4650      	mov	r0, sl
 8004586:	23f0      	movs	r3, #240	@ 0xf0
 8004588:	f7fe ff1a 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 800458c:	f104 0804 	add.w	r8, r4, #4
 8004590:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8004594:	66a3      	str	r3, [r4, #104]	@ 0x68
 8004596:	4651      	mov	r1, sl
 8004598:	4640      	mov	r0, r8
 800459a:	f007 fc89 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800459e:	462a      	mov	r2, r5
 80045a0:	4629      	mov	r1, r5
 80045a2:	4648      	mov	r0, r9
 80045a4:	f7fe feff 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
 80045a8:	2307      	movs	r3, #7
    image1.setBitmap(touchgfx::Bitmap(BITMAP_CHOOSE_MODE_QUES_ID));
 80045aa:	a903      	add	r1, sp, #12
 80045ac:	4648      	mov	r0, r9
 80045ae:	f8ad 300c 	strh.w	r3, [sp, #12]
 80045b2:	f00a fd75 	bl	800f0a0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80045b6:	4649      	mov	r1, r9
 80045b8:	4640      	mov	r0, r8
 80045ba:	f04f 091d 	mov.w	r9, #29
 80045be:	f007 fc77 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80045c2:	462a      	mov	r2, r5
 80045c4:	4629      	mov	r1, r5
 80045c6:	f104 00cc 	add.w	r0, r4, #204	@ 0xcc
 80045ca:	f8cd 9000 	str.w	r9, [sp]
 80045ce:	2346      	movs	r3, #70	@ 0x46
 80045d0:	f7fe fef6 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 80045d4:	4a2f      	ldr	r2, [pc, #188]	@ (8004694 <_ZN18ScreenWaitViewBaseC1Ev+0x18c>)
        borderDown = borderColorPressed;
 80045d6:	4930      	ldr	r1, [pc, #192]	@ (8004698 <_ZN18ScreenWaitViewBaseC1Ev+0x190>)
        down = colorPressed;
 80045d8:	4b30      	ldr	r3, [pc, #192]	@ (800469c <_ZN18ScreenWaitViewBaseC1Ev+0x194>)
        borderDown = borderColorPressed;
 80045da:	4831      	ldr	r0, [pc, #196]	@ (80046a0 <_ZN18ScreenWaitViewBaseC1Ev+0x198>)
        handlePressedUpdated();
 80045dc:	f8d4 a098 	ldr.w	sl, [r4, #152]	@ 0x98
 80045e0:	f04f 0b05 	mov.w	fp, #5
        down = colorPressed;
 80045e4:	e9c4 3240 	strd	r3, r2, [r4, #256]	@ 0x100
        borderDown = borderColorPressed;
 80045e8:	e9c4 1042 	strd	r1, r0, [r4, #264]	@ 0x108
 80045ec:	f8a4 b0fc 	strh.w	fp, [r4, #252]	@ 0xfc
        handlePressedUpdated();
 80045f0:	4638      	mov	r0, r7
 80045f2:	f7fe fdf5 	bl	80031e0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 80045f6:	f884 50c5 	strb.w	r5, [r4, #197]	@ 0xc5
        handleAlphaUpdated();
 80045fa:	f8da 3090 	ldr.w	r3, [sl, #144]	@ 0x90
 80045fe:	4638      	mov	r0, r7
    flexButton1.setAction(flexButtonCallback);
 8004600:	f504 7ac4 	add.w	sl, r4, #392	@ 0x188
 8004604:	4798      	blx	r3
        action = &callback;
 8004606:	f8c4 a0c8 	str.w	sl, [r4, #200]	@ 0xc8
    flexButton1.setPosition(26, 111, 70, 29);
 800460a:	2346      	movs	r3, #70	@ 0x46
 800460c:	226f      	movs	r2, #111	@ 0x6f
 800460e:	4638      	mov	r0, r7
 8004610:	f8cd 9000 	str.w	r9, [sp]
 8004614:	211a      	movs	r1, #26
 8004616:	f7fe fed3 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 800461a:	4639      	mov	r1, r7
 800461c:	4640      	mov	r0, r8
 800461e:	f007 fc47 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 8004622:	462a      	mov	r2, r5
 8004624:	4629      	mov	r1, r5
 8004626:	f504 70a2 	add.w	r0, r4, #324	@ 0x144
 800462a:	f8cd 9000 	str.w	r9, [sp]
 800462e:	234b      	movs	r3, #75	@ 0x4b
 8004630:	f7fe fec6 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 8004634:	4a17      	ldr	r2, [pc, #92]	@ (8004694 <_ZN18ScreenWaitViewBaseC1Ev+0x18c>)
        borderDown = borderColorPressed;
 8004636:	4918      	ldr	r1, [pc, #96]	@ (8004698 <_ZN18ScreenWaitViewBaseC1Ev+0x190>)
        down = colorPressed;
 8004638:	4b18      	ldr	r3, [pc, #96]	@ (800469c <_ZN18ScreenWaitViewBaseC1Ev+0x194>)
        borderDown = borderColorPressed;
 800463a:	4819      	ldr	r0, [pc, #100]	@ (80046a0 <_ZN18ScreenWaitViewBaseC1Ev+0x198>)
        handlePressedUpdated();
 800463c:	f8d4 7110 	ldr.w	r7, [r4, #272]	@ 0x110
 8004640:	f8a4 b174 	strh.w	fp, [r4, #372]	@ 0x174
        down = colorPressed;
 8004644:	e9c4 325e 	strd	r3, r2, [r4, #376]	@ 0x178
        borderDown = borderColorPressed;
 8004648:	e9c4 1060 	strd	r1, r0, [r4, #384]	@ 0x180
        handlePressedUpdated();
 800464c:	4630      	mov	r0, r6
 800464e:	f7fe fdc7 	bl	80031e0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 8004652:	f884 513d 	strb.w	r5, [r4, #317]	@ 0x13d
        handleAlphaUpdated();
 8004656:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800465a:	4630      	mov	r0, r6
 800465c:	4798      	blx	r3
        action = &callback;
 800465e:	f8c4 a140 	str.w	sl, [r4, #320]	@ 0x140
    flexButton2.setPosition(141, 111, 75, 29);
 8004662:	234b      	movs	r3, #75	@ 0x4b
 8004664:	226f      	movs	r2, #111	@ 0x6f
 8004666:	4630      	mov	r0, r6
 8004668:	f8cd 9000 	str.w	r9, [sp]
 800466c:	218d      	movs	r1, #141	@ 0x8d
 800466e:	f7fe fea7 	bl	80033c0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004672:	4640      	mov	r0, r8
 8004674:	4631      	mov	r1, r6
 8004676:	f007 fc1b 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800467a:	4620      	mov	r0, r4
 800467c:	b005      	add	sp, #20
 800467e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004682:	bf00      	nop
 8004684:	08027c14 	.word	0x08027c14
 8004688:	08028420 	.word	0x08028420
 800468c:	08027bfc 	.word	0x08027bfc
 8004690:	080044dd 	.word	0x080044dd
 8004694:	ff0099cc 	.word	0xff0099cc
 8004698:	ff003366 	.word	0xff003366
 800469c:	ff006699 	.word	0xff006699
 80046a0:	ff336699 	.word	0xff336699

080046a4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80046a4:	4770      	bx	lr
	...

080046a8 <_Z23getFont_verdana_10_4bppv>:
{
 80046a8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80046aa:	4d16      	ldr	r5, [pc, #88]	@ (8004704 <_Z23getFont_verdana_10_4bppv+0x5c>)
 80046ac:	682c      	ldr	r4, [r5, #0]
 80046ae:	f014 0401 	ands.w	r4, r4, #1
{
 80046b2:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80046b4:	f3bf 8f5b 	dmb	ish
 80046b8:	d120      	bne.n	80046fc <_Z23getFont_verdana_10_4bppv+0x54>
 80046ba:	4628      	mov	r0, r5
 80046bc:	f01f febf 	bl	802443e <__cxa_guard_acquire>
 80046c0:	b1e0      	cbz	r0, 80046fc <_Z23getFont_verdana_10_4bppv+0x54>
 80046c2:	233f      	movs	r3, #63	@ 0x3f
 80046c4:	9309      	str	r3, [sp, #36]	@ 0x24
 80046c6:	4b10      	ldr	r3, [pc, #64]	@ (8004708 <_Z23getFont_verdana_10_4bppv+0x60>)
 80046c8:	9308      	str	r3, [sp, #32]
 80046ca:	4b10      	ldr	r3, [pc, #64]	@ (800470c <_Z23getFont_verdana_10_4bppv+0x64>)
 80046cc:	4910      	ldr	r1, [pc, #64]	@ (8004710 <_Z23getFont_verdana_10_4bppv+0x68>)
 80046ce:	4811      	ldr	r0, [pc, #68]	@ (8004714 <_Z23getFont_verdana_10_4bppv+0x6c>)
 80046d0:	940a      	str	r4, [sp, #40]	@ 0x28
 80046d2:	2201      	movs	r2, #1
 80046d4:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80046d8:	2304      	movs	r3, #4
 80046da:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80046de:	230a      	movs	r3, #10
 80046e0:	9300      	str	r3, [sp, #0]
 80046e2:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 80046e6:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80046ea:	9405      	str	r4, [sp, #20]
 80046ec:	f7fe fcfe 	bl	80030ec <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80046f0:	4809      	ldr	r0, [pc, #36]	@ (8004718 <_Z23getFont_verdana_10_4bppv+0x70>)
 80046f2:	f020 fdfd 	bl	80252f0 <atexit>
 80046f6:	4628      	mov	r0, r5
 80046f8:	f01f fead 	bl	8024456 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 80046fc:	4805      	ldr	r0, [pc, #20]	@ (8004714 <_Z23getFont_verdana_10_4bppv+0x6c>)
 80046fe:	b00f      	add	sp, #60	@ 0x3c
 8004700:	bd30      	pop	{r4, r5, pc}
 8004702:	bf00      	nop
 8004704:	20004424 	.word	0x20004424
 8004708:	080294ec 	.word	0x080294ec
 800470c:	08029504 	.word	0x08029504
 8004710:	080293d0 	.word	0x080293d0
 8004714:	20004428 	.word	0x20004428
 8004718:	080046a5 	.word	0x080046a5

0800471c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 18, 20, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800471c:	4770      	bx	lr
	...

08004720 <_Z23getFont_verdana_20_4bppv>:
{
 8004720:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 18, 20, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8004722:	4d16      	ldr	r5, [pc, #88]	@ (800477c <_Z23getFont_verdana_20_4bppv+0x5c>)
 8004724:	682c      	ldr	r4, [r5, #0]
 8004726:	f014 0401 	ands.w	r4, r4, #1
{
 800472a:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 18, 20, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800472c:	f3bf 8f5b 	dmb	ish
 8004730:	d121      	bne.n	8004776 <_Z23getFont_verdana_20_4bppv+0x56>
 8004732:	4628      	mov	r0, r5
 8004734:	f01f fe83 	bl	802443e <__cxa_guard_acquire>
 8004738:	b1e8      	cbz	r0, 8004776 <_Z23getFont_verdana_20_4bppv+0x56>
 800473a:	233f      	movs	r3, #63	@ 0x3f
 800473c:	9309      	str	r3, [sp, #36]	@ 0x24
 800473e:	4b10      	ldr	r3, [pc, #64]	@ (8004780 <_Z23getFont_verdana_20_4bppv+0x60>)
 8004740:	9308      	str	r3, [sp, #32]
 8004742:	4b10      	ldr	r3, [pc, #64]	@ (8004784 <_Z23getFont_verdana_20_4bppv+0x64>)
 8004744:	9307      	str	r3, [sp, #28]
 8004746:	2301      	movs	r3, #1
 8004748:	e9cd 4305 	strd	r4, r3, [sp, #20]
 800474c:	9304      	str	r3, [sp, #16]
 800474e:	2304      	movs	r3, #4
 8004750:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8004754:	2314      	movs	r3, #20
 8004756:	490c      	ldr	r1, [pc, #48]	@ (8004788 <_Z23getFont_verdana_20_4bppv+0x68>)
 8004758:	9300      	str	r3, [sp, #0]
 800475a:	2212      	movs	r2, #18
 800475c:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8004760:	480a      	ldr	r0, [pc, #40]	@ (800478c <_Z23getFont_verdana_20_4bppv+0x6c>)
 8004762:	940a      	str	r4, [sp, #40]	@ 0x28
 8004764:	9401      	str	r4, [sp, #4]
 8004766:	f7fe fcc1 	bl	80030ec <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800476a:	4809      	ldr	r0, [pc, #36]	@ (8004790 <_Z23getFont_verdana_20_4bppv+0x70>)
 800476c:	f020 fdc0 	bl	80252f0 <atexit>
 8004770:	4628      	mov	r0, r5
 8004772:	f01f fe70 	bl	8024456 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8004776:	4805      	ldr	r0, [pc, #20]	@ (800478c <_Z23getFont_verdana_20_4bppv+0x6c>)
 8004778:	b00f      	add	sp, #60	@ 0x3c
 800477a:	bd30      	pop	{r4, r5, pc}
 800477c:	20004454 	.word	0x20004454
 8004780:	080294f0 	.word	0x080294f0
 8004784:	08029508 	.word	0x08029508
 8004788:	080293e0 	.word	0x080293e0
 800478c:	20004458 	.word	0x20004458
 8004790:	0800471d 	.word	0x0800471d

08004794 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004794:	4770      	bx	lr
	...

08004798 <_Z23getFont_verdana_40_4bppv>:
{
 8004798:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800479a:	4d16      	ldr	r5, [pc, #88]	@ (80047f4 <_Z23getFont_verdana_40_4bppv+0x5c>)
 800479c:	682c      	ldr	r4, [r5, #0]
 800479e:	f014 0401 	ands.w	r4, r4, #1
{
 80047a2:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80047a4:	f3bf 8f5b 	dmb	ish
 80047a8:	d120      	bne.n	80047ec <_Z23getFont_verdana_40_4bppv+0x54>
 80047aa:	4628      	mov	r0, r5
 80047ac:	f01f fe47 	bl	802443e <__cxa_guard_acquire>
 80047b0:	b1e0      	cbz	r0, 80047ec <_Z23getFont_verdana_40_4bppv+0x54>
 80047b2:	233f      	movs	r3, #63	@ 0x3f
 80047b4:	9309      	str	r3, [sp, #36]	@ 0x24
 80047b6:	4b10      	ldr	r3, [pc, #64]	@ (80047f8 <_Z23getFont_verdana_40_4bppv+0x60>)
 80047b8:	9308      	str	r3, [sp, #32]
 80047ba:	4b10      	ldr	r3, [pc, #64]	@ (80047fc <_Z23getFont_verdana_40_4bppv+0x64>)
 80047bc:	4910      	ldr	r1, [pc, #64]	@ (8004800 <_Z23getFont_verdana_40_4bppv+0x68>)
 80047be:	4811      	ldr	r0, [pc, #68]	@ (8004804 <_Z23getFont_verdana_40_4bppv+0x6c>)
 80047c0:	940a      	str	r4, [sp, #40]	@ 0x28
 80047c2:	2201      	movs	r2, #1
 80047c4:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80047c8:	2304      	movs	r3, #4
 80047ca:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80047ce:	2328      	movs	r3, #40	@ 0x28
 80047d0:	9300      	str	r3, [sp, #0]
 80047d2:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 80047d6:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80047da:	9405      	str	r4, [sp, #20]
 80047dc:	f7fe fc86 	bl	80030ec <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80047e0:	4809      	ldr	r0, [pc, #36]	@ (8004808 <_Z23getFont_verdana_40_4bppv+0x70>)
 80047e2:	f020 fd85 	bl	80252f0 <atexit>
 80047e6:	4628      	mov	r0, r5
 80047e8:	f01f fe35 	bl	8024456 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 80047ec:	4805      	ldr	r0, [pc, #20]	@ (8004804 <_Z23getFont_verdana_40_4bppv+0x6c>)
 80047ee:	b00f      	add	sp, #60	@ 0x3c
 80047f0:	bd30      	pop	{r4, r5, pc}
 80047f2:	bf00      	nop
 80047f4:	20004484 	.word	0x20004484
 80047f8:	08029500 	.word	0x08029500
 80047fc:	0802950c 	.word	0x0802950c
 8004800:	080294dc 	.word	0x080294dc
 8004804:	20004488 	.word	0x20004488
 8004808:	08004795 	.word	0x08004795

0800480c <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 800480c:	2000      	movs	r0, #0
 800480e:	4770      	bx	lr

08004810 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 8004810:	2000      	movs	r0, #0
 8004812:	4770      	bx	lr

08004814 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004814:	b40e      	push	{r1, r2, r3}
 8004816:	b503      	push	{r0, r1, lr}
 8004818:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800481a:	2100      	movs	r1, #0
{
 800481c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8004820:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004822:	f00e f8c1 	bl	80129a8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004826:	b002      	add	sp, #8
 8004828:	f85d eb04 	ldr.w	lr, [sp], #4
 800482c:	b003      	add	sp, #12
 800482e:	4770      	bx	lr

08004830 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004830:	b40c      	push	{r2, r3}
 8004832:	b507      	push	{r0, r1, r2, lr}
 8004834:	ab04      	add	r3, sp, #16
 8004836:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800483a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800483c:	f00e f8b4 	bl	80129a8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004840:	b003      	add	sp, #12
 8004842:	f85d eb04 	ldr.w	lr, [sp], #4
 8004846:	b002      	add	sp, #8
 8004848:	4770      	bx	lr
	...

0800484c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800484c:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 800484e:	b510      	push	{r4, lr}
 8004850:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8004852:	b373      	cbz	r3, 80048b2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8004854:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 8004856:	b92b      	cbnz	r3, 8004864 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8004858:	4b18      	ldr	r3, [pc, #96]	@ (80048bc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800485a:	4a19      	ldr	r2, [pc, #100]	@ (80048c0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 800485c:	21c5      	movs	r1, #197	@ 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800485e:	4819      	ldr	r0, [pc, #100]	@ (80048c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8004860:	f020 fd28 	bl	80252b4 <__assert_func>
            return buffer[pos];
 8004864:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8004866:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800486a:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 800486c:	b30b      	cbz	r3, 80048b2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800486e:	f00f ff02 	bl	8014676 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8004872:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8004874:	2b01      	cmp	r3, #1
 8004876:	d803      	bhi.n	8004880 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8004878:	4b13      	ldr	r3, [pc, #76]	@ (80048c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800487a:	4a14      	ldr	r2, [pc, #80]	@ (80048cc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 800487c:	21cb      	movs	r1, #203	@ 0xcb
 800487e:	e7ee      	b.n	800485e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8004880:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8004882:	1c53      	adds	r3, r2, #1
 8004884:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8004886:	2b09      	cmp	r3, #9
 8004888:	4619      	mov	r1, r3
 800488a:	bf88      	it	hi
 800488c:	f1a3 010a 	subhi.w	r1, r3, #10
 8004890:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8004894:	f640 103f 	movw	r0, #2367	@ 0x93f
 8004898:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 800489a:	4281      	cmp	r1, r0
 800489c:	d109      	bne.n	80048b2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800489e:	2b0a      	cmp	r3, #10
 80048a0:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80048a4:	bf28      	it	cs
 80048a6:	2300      	movcs	r3, #0
 80048a8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 80048ac:	8c50      	ldrh	r0, [r2, #34]	@ 0x22
            buffer[index < size ? index : 0] = newChar;
 80048ae:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 80048b0:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80048b2:	4620      	mov	r0, r4
}
 80048b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80048b8:	f00f bde0 	b.w	801447c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80048bc:	0802705f 	.word	0x0802705f
 80048c0:	08027068 	.word	0x08027068
 80048c4:	08027113 	.word	0x08027113
 80048c8:	0802715d 	.word	0x0802715d
 80048cc:	0802716b 	.word	0x0802716b

080048d0 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80048d0:	f00f bd9b 	b.w	801440a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080048d4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80048d4:	b510      	push	{r4, lr}
 80048d6:	b086      	sub	sp, #24
 80048d8:	ac02      	add	r4, sp, #8
 80048da:	e884 0006 	stmia.w	r4, {r1, r2}
 80048de:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80048e0:	ab0a      	add	r3, sp, #40	@ 0x28
 80048e2:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80048e4:	9301      	str	r3, [sp, #4]
 80048e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80048e8:	9300      	str	r3, [sp, #0]
 80048ea:	4621      	mov	r1, r4
 80048ec:	9b08      	ldr	r3, [sp, #32]
 80048ee:	f00c fb71 	bl	8010fd4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80048f2:	b006      	add	sp, #24
 80048f4:	bd10      	pop	{r4, pc}
	...

080048f8 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80048f8:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80048fa:	bb18      	cbnz	r0, 8004944 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80048fc:	4b12      	ldr	r3, [pc, #72]	@ (8004948 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80048fe:	4813      	ldr	r0, [pc, #76]	@ (800494c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8004900:	681c      	ldr	r4, [r3, #0]
 8004902:	4913      	ldr	r1, [pc, #76]	@ (8004950 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8004904:	b1b4      	cbz	r4, 8004934 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004906:	6822      	ldr	r2, [r4, #0]
 8004908:	4422      	add	r2, r4
 800490a:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800490c:	6862      	ldr	r2, [r4, #4]
 800490e:	4422      	add	r2, r4
 8004910:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004912:	68a2      	ldr	r2, [r4, #8]
 8004914:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8004916:	4b0f      	ldr	r3, [pc, #60]	@ (8004954 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8004918:	2200      	movs	r2, #0
 800491a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800491c:	f000 f838 	bl	8004990 <_ZN17TypedTextDatabase8getFontsEv>
 8004920:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8004922:	f000 f833 	bl	800498c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8004926:	4b0c      	ldr	r3, [pc, #48]	@ (8004958 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8004928:	601c      	str	r4, [r3, #0]
        fonts = f;
 800492a:	4b0c      	ldr	r3, [pc, #48]	@ (800495c <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800492c:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800492e:	4b0c      	ldr	r3, [pc, #48]	@ (8004960 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8004930:	8018      	strh	r0, [r3, #0]
    }
}
 8004932:	e007      	b.n	8004944 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8004934:	4b0b      	ldr	r3, [pc, #44]	@ (8004964 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8004936:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8004938:	4b0b      	ldr	r3, [pc, #44]	@ (8004968 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800493a:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800493c:	4b0b      	ldr	r3, [pc, #44]	@ (800496c <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800493e:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8004940:	2c00      	cmp	r4, #0
 8004942:	d1e8      	bne.n	8004916 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8004944:	bd38      	pop	{r3, r4, r5, pc}
 8004946:	bf00      	nop
 8004948:	200044c0 	.word	0x200044c0
 800494c:	200044b8 	.word	0x200044b8
 8004950:	200044b4 	.word	0x200044b4
 8004954:	200044bc 	.word	0x200044bc
 8004958:	20015290 	.word	0x20015290
 800495c:	20015298 	.word	0x20015298
 8004960:	20015294 	.word	0x20015294
 8004964:	08029544 	.word	0x08029544
 8004968:	08029510 	.word	0x08029510
 800496c:	08029570 	.word	0x08029570

08004970 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8004970:	4b04      	ldr	r3, [pc, #16]	@ (8004984 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8004972:	681b      	ldr	r3, [r3, #0]
 8004974:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8004978:	4b03      	ldr	r3, [pc, #12]	@ (8004988 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800497a:	681b      	ldr	r3, [r3, #0]
}
 800497c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8004980:	4770      	bx	lr
 8004982:	bf00      	nop
 8004984:	200044b4 	.word	0x200044b4
 8004988:	200044b8 	.word	0x200044b8

0800498c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 800498c:	200d      	movs	r0, #13
 800498e:	4770      	bx	lr

08004990 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8004990:	4800      	ldr	r0, [pc, #0]	@ (8004994 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8004992:	4770      	bx	lr
 8004994:	200044c4 	.word	0x200044c4

08004998 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8004998:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 800499a:	f7ff fec1 	bl	8004720 <_Z23getFont_verdana_20_4bppv>
};
 800499e:	4c04      	ldr	r4, [pc, #16]	@ (80049b0 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 80049a0:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80049a2:	f7ff fef9 	bl	8004798 <_Z23getFont_verdana_40_4bppv>
};
 80049a6:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 80049a8:	f7ff fe7e 	bl	80046a8 <_Z23getFont_verdana_10_4bppv>
};
 80049ac:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 80049ae:	bd10      	pop	{r4, pc}
 80049b0:	200044c4 	.word	0x200044c4

080049b4 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 80049b4:	b510      	push	{r4, lr}
    pointArray = 0;
 80049b6:	2400      	movs	r4, #0
 80049b8:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 80049ba:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 80049bc:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 80049be:	601c      	str	r4, [r3, #0]
}
 80049c0:	bd10      	pop	{r4, pc}

080049c2 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80049c2:	4770      	bx	lr

080049c4 <_ZN19FrontendApplicationD0Ev>:
 80049c4:	b510      	push	{r4, lr}
 80049c6:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 80049ca:	4604      	mov	r4, r0
 80049cc:	f01f fd35 	bl	802443a <_ZdlPvj>
 80049d0:	4620      	mov	r0, r4
 80049d2:	bd10      	pop	{r4, pc}

080049d4 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80049d4:	b510      	push	{r4, lr}
 80049d6:	4604      	mov	r4, r0
    {
        model.tick();
 80049d8:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 80049dc:	f000 f813 	bl	8004a06 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80049e0:	4620      	mov	r0, r4
    }
 80049e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80049e6:	f00c bfd9 	b.w	801199c <_ZN8touchgfx11Application15handleTickEventEv>
	...

080049ec <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80049ec:	b510      	push	{r4, lr}
 80049ee:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80049f0:	f7fd ff84 	bl	80028fc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80049f4:	4b01      	ldr	r3, [pc, #4]	@ (80049fc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80049f6:	6023      	str	r3, [r4, #0]
{

}
 80049f8:	4620      	mov	r0, r4
 80049fa:	bd10      	pop	{r4, pc}
 80049fc:	08027c48 	.word	0x08027c48

08004a00 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8004a00:	2200      	movs	r2, #0
 8004a02:	6002      	str	r2, [r0, #0]
{

}
 8004a04:	4770      	bx	lr

08004a06 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8004a06:	4770      	bx	lr

08004a08 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 8004a08:	4770      	bx	lr

08004a0a <_ZThn4_N16Screen1PresenterD1Ev>:
 8004a0a:	3804      	subs	r0, #4
 8004a0c:	4770      	bx	lr

08004a0e <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8004a0e:	4770      	bx	lr

08004a10 <_ZN16Screen1PresenterD0Ev>:
 8004a10:	b510      	push	{r4, lr}
 8004a12:	2110      	movs	r1, #16
 8004a14:	4604      	mov	r4, r0
 8004a16:	f01f fd10 	bl	802443a <_ZdlPvj>
 8004a1a:	4620      	mov	r0, r4
 8004a1c:	bd10      	pop	{r4, pc}

08004a1e <_ZThn4_N16Screen1PresenterD0Ev>:
 8004a1e:	f1a0 0004 	sub.w	r0, r0, #4
 8004a22:	e7f5      	b.n	8004a10 <_ZN16Screen1PresenterD0Ev>

08004a24 <_ZN16Screen1PresenterC1ER11Screen1View>:
    ModelListener() : model(0) {}
 8004a24:	2200      	movs	r2, #0
 8004a26:	6082      	str	r2, [r0, #8]
    : view(v)
 8004a28:	4a02      	ldr	r2, [pc, #8]	@ (8004a34 <_ZN16Screen1PresenterC1ER11Screen1View+0x10>)
 8004a2a:	6002      	str	r2, [r0, #0]
 8004a2c:	3218      	adds	r2, #24
 8004a2e:	6042      	str	r2, [r0, #4]
 8004a30:	60c1      	str	r1, [r0, #12]
}
 8004a32:	4770      	bx	lr
 8004a34:	08027c9c 	.word	0x08027c9c

08004a38 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8004a38:	4770      	bx	lr
	...

08004a3c <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8004a3c:	4b17      	ldr	r3, [pc, #92]	@ (8004a9c <_ZN11Screen1ViewD1Ev+0x60>)
 8004a3e:	b570      	push	{r4, r5, r6, lr}
 8004a40:	4605      	mov	r5, r0
 8004a42:	6003      	str	r3, [r0, #0]
 8004a44:	f642 4418 	movw	r4, #11288	@ 0x2c18
 8004a48:	f642 3648 	movw	r6, #11080	@ 0x2b48
 8004a4c:	42b4      	cmp	r4, r6
 8004a4e:	d005      	beq.n	8004a5c <_ZN11Screen1ViewD1Ev+0x20>
 8004a50:	592b      	ldr	r3, [r5, r4]
 8004a52:	1928      	adds	r0, r5, r4
 8004a54:	681b      	ldr	r3, [r3, #0]
 8004a56:	4798      	blx	r3
 8004a58:	3c34      	subs	r4, #52	@ 0x34
 8004a5a:	e7f7      	b.n	8004a4c <_ZN11Screen1ViewD1Ev+0x10>
 8004a5c:	f642 3450 	movw	r4, #11088	@ 0x2b50
 8004a60:	f642 0690 	movw	r6, #10384	@ 0x2890
 8004a64:	592b      	ldr	r3, [r5, r4]
 8004a66:	1928      	adds	r0, r5, r4
 8004a68:	681b      	ldr	r3, [r3, #0]
 8004a6a:	3c2c      	subs	r4, #44	@ 0x2c
 8004a6c:	4798      	blx	r3
 8004a6e:	42b4      	cmp	r4, r6
 8004a70:	d1f8      	bne.n	8004a64 <_ZN11Screen1ViewD1Ev+0x28>
 8004a72:	592b      	ldr	r3, [r5, r4]
 8004a74:	1928      	adds	r0, r5, r4
 8004a76:	681b      	ldr	r3, [r3, #0]
 8004a78:	3c2c      	subs	r4, #44	@ 0x2c
 8004a7a:	4798      	blx	r3
 8004a7c:	f5b4 6fc6 	cmp.w	r4, #1584	@ 0x630
 8004a80:	d1f7      	bne.n	8004a72 <_ZN11Screen1ViewD1Ev+0x36>
 8004a82:	592b      	ldr	r3, [r5, r4]
 8004a84:	1928      	adds	r0, r5, r4
 8004a86:	681b      	ldr	r3, [r3, #0]
 8004a88:	3c2c      	subs	r4, #44	@ 0x2c
 8004a8a:	4798      	blx	r3
 8004a8c:	f5b4 7f5c 	cmp.w	r4, #880	@ 0x370
 8004a90:	d1f7      	bne.n	8004a82 <_ZN11Screen1ViewD1Ev+0x46>
 8004a92:	4628      	mov	r0, r5
 8004a94:	f7fe fba2 	bl	80031dc <_ZN15Screen1ViewBaseD1Ev>
 8004a98:	4628      	mov	r0, r5
 8004a9a:	bd70      	pop	{r4, r5, r6, pc}
 8004a9c:	08027cc4 	.word	0x08027cc4

08004aa0 <_ZN11Screen1ViewD0Ev>:
 8004aa0:	b510      	push	{r4, lr}
 8004aa2:	4604      	mov	r4, r0
 8004aa4:	f7ff ffca 	bl	8004a3c <_ZN11Screen1ViewD1Ev>
 8004aa8:	4620      	mov	r0, r4
 8004aaa:	f642 418c 	movw	r1, #11404	@ 0x2c8c
 8004aae:	f01f fcc4 	bl	802443a <_ZdlPvj>
 8004ab2:	4620      	mov	r0, r4
 8004ab4:	bd10      	pop	{r4, pc}

08004ab6 <_ZN11Screen1View14checkCollisionEiii>:
        }
    }
}

bool Screen1View::checkCollision(int newX, int newY, int shape)
{
 8004ab6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004aba:	f500 5431 	add.w	r4, r0, #11328	@ 0x2c40
    for(int y = 0; y < 4; y++) {
        for(int x = 0; x < 4; x++) {
            if(currentTetromino[y][x]) {  // Thay đổi từ TETROMINOS sang currentTetromino
                int boardX = (newX - 20) / BLOCK_SIZE + x;
 8004abe:	230f      	movs	r3, #15
 8004ac0:	3914      	subs	r1, #20
                int boardY = (newY - 10) / BLOCK_SIZE + y;
 8004ac2:	3a0a      	subs	r2, #10
                int boardX = (newX - 20) / BLOCK_SIZE + x;
 8004ac4:	fb91 f1f3 	sdiv	r1, r1, r3
                int boardY = (newY - 10) / BLOCK_SIZE + y;
 8004ac8:	fb92 f2f3 	sdiv	r2, r2, r3
 8004acc:	340b      	adds	r4, #11
 8004ace:	f102 0804 	add.w	r8, r2, #4
 8004ad2:	f101 0e04 	add.w	lr, r1, #4
 8004ad6:	f500 7335 	add.w	r3, r0, #724	@ 0x2d4
 8004ada:	f04f 0c0a 	mov.w	ip, #10
        for(int x = 0; x < 4; x++) {
 8004ade:	460d      	mov	r5, r1
 8004ae0:	fb0c 3702 	mla	r7, ip, r2, r3
{
 8004ae4:	4626      	mov	r6, r4
            if(currentTetromino[y][x]) {  // Thay đổi từ TETROMINOS sang currentTetromino
 8004ae6:	f816 0f01 	ldrb.w	r0, [r6, #1]!
 8004aea:	b128      	cbz	r0, 8004af8 <_ZN11Screen1View14checkCollisionEiii+0x42>
                
                // Kiểm tra chạm đáy
                if(boardY >= BOARD_HEIGHT) return true;
 8004aec:	2a13      	cmp	r2, #19
 8004aee:	dc0d      	bgt.n	8004b0c <_ZN11Screen1View14checkCollisionEiii+0x56>
                
                // Kiểm tra chạm biên
                if(boardX < 0 || boardX >= BOARD_WIDTH) return true;
 8004af0:	2d09      	cmp	r5, #9
 8004af2:	d80b      	bhi.n	8004b0c <_ZN11Screen1View14checkCollisionEiii+0x56>
                
                // Kiểm tra chạm khối khác
                if(board[boardY][boardX]) return true;
 8004af4:	5d78      	ldrb	r0, [r7, r5]
 8004af6:	b950      	cbnz	r0, 8004b0e <_ZN11Screen1View14checkCollisionEiii+0x58>
        for(int x = 0; x < 4; x++) {
 8004af8:	3501      	adds	r5, #1
 8004afa:	4575      	cmp	r5, lr
 8004afc:	d1f3      	bne.n	8004ae6 <_ZN11Screen1View14checkCollisionEiii+0x30>
    for(int y = 0; y < 4; y++) {
 8004afe:	3201      	adds	r2, #1
 8004b00:	4542      	cmp	r2, r8
 8004b02:	f104 0404 	add.w	r4, r4, #4
 8004b06:	d1ea      	bne.n	8004ade <_ZN11Screen1View14checkCollisionEiii+0x28>
            }
        }
    }
    return false;
 8004b08:	2000      	movs	r0, #0
 8004b0a:	e000      	b.n	8004b0e <_ZN11Screen1View14checkCollisionEiii+0x58>
                if(boardY >= BOARD_HEIGHT) return true;
 8004b0c:	2001      	movs	r0, #1
}
 8004b0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004b12 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8004b12:	f7fe bb64 	b.w	80031de <_ZN15Screen1ViewBase11setupScreenEv>

08004b16 <_ZN11Screen1View11clearScreenEv>:
        invalidate();
    }
}

void Screen1View::clearScreen()
{
 8004b16:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004b1a:	4604      	mov	r4, r0
    for(int y = 0; y < 4; y++) {
        for(int x = 0; x < 4; x++) {
 8004b1c:	2500      	movs	r5, #0
 8004b1e:	f500 7967 	add.w	r9, r0, #924	@ 0x39c
     *
     * @param [in] d The Drawable to remove.
     */
    void remove(Drawable& d)
    {
        container.remove(d);
 8004b22:	f100 0804 	add.w	r8, r0, #4
 8004b26:	eb09 0705 	add.w	r7, r9, r5
 8004b2a:	2600      	movs	r6, #0
 8004b2c:	4639      	mov	r1, r7
 8004b2e:	4640      	mov	r0, r8
 8004b30:	3601      	adds	r6, #1
 8004b32:	f007 f9fe 	bl	800bf32 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8004b36:	2e04      	cmp	r6, #4
 8004b38:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 8004b3c:	d1f6      	bne.n	8004b2c <_ZN11Screen1View11clearScreenEv+0x16>
    for(int y = 0; y < 4; y++) {
 8004b3e:	35b0      	adds	r5, #176	@ 0xb0
 8004b40:	f5b5 7f30 	cmp.w	r5, #704	@ 0x2c0
 8004b44:	d1ef      	bne.n	8004b26 <_ZN11Screen1View11clearScreenEv+0x10>
 8004b46:	f06f 0a2a 	mvn.w	sl, #42	@ 0x2a
 8004b4a:	f204 29d3 	addw	r9, r4, #723	@ 0x2d3
 8004b4e:	fb04 fa0a 	mul.w	sl, r4, sl
 8004b52:	2700      	movs	r7, #0
    }

    for(int y = 0; y < BOARD_HEIGHT; y++) {
        for(int x = 0; x < BOARD_WIDTH; x++) {
            if(board[y][x]) {
                remove(staticBlocks[y][x]);
 8004b54:	f04f 0b2c 	mov.w	fp, #44	@ 0x2c
        for(int x = 0; x < 4; x++) {
 8004b58:	464e      	mov	r6, r9
 8004b5a:	250a      	movs	r5, #10
            if(board[y][x]) {
 8004b5c:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 8004b60:	b14a      	cbz	r2, 8004b76 <_ZN11Screen1View11clearScreenEv+0x60>
                remove(staticBlocks[y][x]);
 8004b62:	fb0b a106 	mla	r1, fp, r6, sl
 8004b66:	f5a1 41ec 	sub.w	r1, r1, #30208	@ 0x7600
 8004b6a:	3914      	subs	r1, #20
 8004b6c:	4640      	mov	r0, r8
 8004b6e:	f007 f9e0 	bl	800bf32 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
                board[y][x] = false;
 8004b72:	2300      	movs	r3, #0
 8004b74:	7033      	strb	r3, [r6, #0]
        for(int x = 0; x < BOARD_WIDTH; x++) {
 8004b76:	3d01      	subs	r5, #1
 8004b78:	d1f0      	bne.n	8004b5c <_ZN11Screen1View11clearScreenEv+0x46>
    for(int y = 0; y < BOARD_HEIGHT; y++) {
 8004b7a:	f507 77dc 	add.w	r7, r7, #440	@ 0x1b8
 8004b7e:	f242 2260 	movw	r2, #8800	@ 0x2260
 8004b82:	4297      	cmp	r7, r2
 8004b84:	f109 090a 	add.w	r9, r9, #10
 8004b88:	d1e6      	bne.n	8004b58 <_ZN11Screen1View11clearScreenEv+0x42>
 8004b8a:	f504 5422 	add.w	r4, r4, #10368	@ 0x2880
 8004b8e:	343c      	adds	r4, #60	@ 0x3c
            }
        }
    }

    for(int y = 0; y < 4; y++) {
        for(int x = 0; x < 4; x++) {
 8004b90:	1967      	adds	r7, r4, r5
 8004b92:	2600      	movs	r6, #0
 8004b94:	4639      	mov	r1, r7
 8004b96:	4640      	mov	r0, r8
 8004b98:	3601      	adds	r6, #1
 8004b9a:	f007 f9ca 	bl	800bf32 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8004b9e:	2e04      	cmp	r6, #4
 8004ba0:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 8004ba4:	d1f6      	bne.n	8004b94 <_ZN11Screen1View11clearScreenEv+0x7e>
    for(int y = 0; y < 4; y++) {
 8004ba6:	35b0      	adds	r5, #176	@ 0xb0
 8004ba8:	f5b5 7f30 	cmp.w	r5, #704	@ 0x2c0
 8004bac:	d1f0      	bne.n	8004b90 <_ZN11Screen1View11clearScreenEv+0x7a>
            remove(nextBlocks[y][x]);
        }
    }
 8004bae:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08004bb4 <_ZN11Screen1View13drawTetrominoEiii>:
{
 8004bb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004bb8:	b087      	sub	sp, #28
 8004bba:	461c      	mov	r4, r3
 8004bbc:	1d03      	adds	r3, r0, #4
 8004bbe:	4605      	mov	r5, r0
 8004bc0:	4617      	mov	r7, r2
        for(int x = 0; x < 4; x++) {
 8004bc2:	2600      	movs	r6, #0
 8004bc4:	f500 7a67 	add.w	sl, r0, #924	@ 0x39c
 8004bc8:	9300      	str	r3, [sp, #0]
 8004bca:	eb0a 0906 	add.w	r9, sl, r6
 8004bce:	f04f 0800 	mov.w	r8, #0
 8004bd2:	4649      	mov	r1, r9
 8004bd4:	9800      	ldr	r0, [sp, #0]
 8004bd6:	f108 0801 	add.w	r8, r8, #1
 8004bda:	f007 f9aa 	bl	800bf32 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8004bde:	f1b8 0f04 	cmp.w	r8, #4
 8004be2:	f109 092c 	add.w	r9, r9, #44	@ 0x2c
 8004be6:	d1f4      	bne.n	8004bd2 <_ZN11Screen1View13drawTetrominoEiii+0x1e>
    for(int y = 0; y < 4; y++) {
 8004be8:	36b0      	adds	r6, #176	@ 0xb0
 8004bea:	f5b6 7f30 	cmp.w	r6, #704	@ 0x2c0
 8004bee:	d1ec      	bne.n	8004bca <_ZN11Screen1View13drawTetrominoEiii+0x16>
 8004bf0:	b2bf      	uxth	r7, r7
 8004bf2:	f107 023c 	add.w	r2, r7, #60	@ 0x3c
 8004bf6:	f505 5831 	add.w	r8, r5, #11328	@ 0x2c40
 8004bfa:	b292      	uxth	r2, r2
 8004bfc:	f108 080b 	add.w	r8, r8, #11
 8004c00:	b2a4      	uxth	r4, r4
 8004c02:	2300      	movs	r3, #0
 8004c04:	9202      	str	r2, [sp, #8]
                blocks[y][x].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 8004c06:	f505 5b00 	add.w	fp, r5, #8192	@ 0x2000
        for(int x = 0; x < 4; x++) {
 8004c0a:	eb05 0a03 	add.w	sl, r5, r3
 8004c0e:	463e      	mov	r6, r7
        for(int x = 0; x < 4; x++) {
 8004c10:	f8cd 8004 	str.w	r8, [sp, #4]
            if(currentTetromino[y][x] == 1) {
 8004c14:	9901      	ldr	r1, [sp, #4]
 8004c16:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8004c1a:	9101      	str	r1, [sp, #4]
 8004c1c:	2a01      	cmp	r2, #1
 8004c1e:	d119      	bne.n	8004c54 <_ZN11Screen1View13drawTetrominoEiii+0xa0>
                blocks[y][x].setXY(
 8004c20:	f50a 7967 	add.w	r9, sl, #924	@ 0x39c
 8004c24:	b222      	sxth	r2, r4
 8004c26:	b231      	sxth	r1, r6
 8004c28:	4648      	mov	r0, r9
 8004c2a:	9303      	str	r3, [sp, #12]
 8004c2c:	f7fe fbbb 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
                blocks[y][x].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 8004c30:	4b11      	ldr	r3, [pc, #68]	@ (8004c78 <_ZN11Screen1View13drawTetrominoEiii+0xc4>)
 8004c32:	f8db 1c64 	ldr.w	r1, [fp, #3172]	@ 0xc64
 8004c36:	f8da 239c 	ldr.w	r2, [sl, #924]	@ 0x39c
 8004c3a:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8004c3e:	6e12      	ldr	r2, [r2, #96]	@ 0x60
 8004c40:	f8ad 1014 	strh.w	r1, [sp, #20]
 8004c44:	4648      	mov	r0, r9
 8004c46:	a905      	add	r1, sp, #20
 8004c48:	4790      	blx	r2
        container.add(d);
 8004c4a:	9800      	ldr	r0, [sp, #0]
 8004c4c:	4649      	mov	r1, r9
 8004c4e:	f007 f92f 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004c52:	9b03      	ldr	r3, [sp, #12]
        for(int x = 0; x < 4; x++) {
 8004c54:	9a02      	ldr	r2, [sp, #8]
 8004c56:	360f      	adds	r6, #15
 8004c58:	b2b6      	uxth	r6, r6
 8004c5a:	4296      	cmp	r6, r2
 8004c5c:	f10a 0a2c 	add.w	sl, sl, #44	@ 0x2c
 8004c60:	d1d8      	bne.n	8004c14 <_ZN11Screen1View13drawTetrominoEiii+0x60>
    for(int y = 0; y < 4; y++) {
 8004c62:	33b0      	adds	r3, #176	@ 0xb0
 8004c64:	340f      	adds	r4, #15
 8004c66:	f5b3 7f30 	cmp.w	r3, #704	@ 0x2c0
 8004c6a:	f108 0804 	add.w	r8, r8, #4
 8004c6e:	b2a4      	uxth	r4, r4
 8004c70:	d1cb      	bne.n	8004c0a <_ZN11Screen1View13drawTetrominoEiii+0x56>
}
 8004c72:	b007      	add	sp, #28
 8004c74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004c78:	08027cfe 	.word	0x08027cfe

08004c7c <_ZN11Screen1View15rotateTetrominoEv>:
{
 8004c7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    if (currentShape == 3) return;
 8004c80:	f500 5400 	add.w	r4, r0, #8192	@ 0x2000
{
 8004c84:	b089      	sub	sp, #36	@ 0x24
    if (currentShape == 3) return;
 8004c86:	f8d4 7c64 	ldr.w	r7, [r4, #3172]	@ 0xc64
 8004c8a:	2f03      	cmp	r7, #3
{
 8004c8c:	4606      	mov	r6, r0
    if (currentShape == 3) return;
 8004c8e:	d066      	beq.n	8004d5e <_ZN11Screen1View15rotateTetrominoEv+0xe2>
    uint8_t rotated[4][4] = {0};
 8004c90:	ad04      	add	r5, sp, #16
 8004c92:	2210      	movs	r2, #16
 8004c94:	2100      	movs	r1, #0
 8004c96:	4628      	mov	r0, r5
 8004c98:	f020 fd13 	bl	80256c2 <memset>
    memcpy(temp, currentTetromino, sizeof(temp));
 8004c9c:	46ec      	mov	ip, sp
 8004c9e:	f604 424c 	addw	r2, r4, #3148	@ 0xc4c
 8004ca2:	f604 485c 	addw	r8, r4, #3164	@ 0xc5c
 8004ca6:	4663      	mov	r3, ip
 8004ca8:	6810      	ldr	r0, [r2, #0]
 8004caa:	6851      	ldr	r1, [r2, #4]
 8004cac:	46e6      	mov	lr, ip
 8004cae:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8004cb2:	3208      	adds	r2, #8
 8004cb4:	4542      	cmp	r2, r8
 8004cb6:	46f4      	mov	ip, lr
 8004cb8:	d1f6      	bne.n	8004ca8 <_ZN11Screen1View15rotateTetrominoEv+0x2c>
        centerX = 2;
 8004cba:	2f00      	cmp	r7, #0
 8004cbc:	bf14      	ite	ne
 8004cbe:	f04f 0801 	movne.w	r8, #1
 8004cc2:	f04f 0802 	moveq.w	r8, #2
    for(int y = 0; y < 4; y++) {
 8004cc6:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8004cca:	2200      	movs	r2, #0
        for(int x = 0; x < 4; x++) {
 8004ccc:	4628      	mov	r0, r5
 8004cce:	eba5 0c02 	sub.w	ip, r5, r2
 8004cd2:	ebaa 0902 	sub.w	r9, sl, r2
        centerX = 1;
 8004cd6:	4619      	mov	r1, r3
        for(int x = 0; x < 4; x++) {
 8004cd8:	f04f 0e00 	mov.w	lr, #0
            if (currentShape == 0) { // Xử lý đặc biệt cho hình I
 8004cdc:	2f00      	cmp	r7, #0
 8004cde:	d141      	bne.n	8004d64 <_ZN11Screen1View15rotateTetrominoEv+0xe8>
                rotated[x][3-y] = temp[y][x];
 8004ce0:	f891 b000 	ldrb.w	fp, [r1]
 8004ce4:	f88c b003 	strb.w	fp, [ip, #3]
        for(int x = 0; x < 4; x++) {
 8004ce8:	f10e 0e01 	add.w	lr, lr, #1
 8004cec:	f1be 0f04 	cmp.w	lr, #4
 8004cf0:	f101 0101 	add.w	r1, r1, #1
 8004cf4:	f10c 0c04 	add.w	ip, ip, #4
 8004cf8:	d1f0      	bne.n	8004cdc <_ZN11Screen1View15rotateTetrominoEv+0x60>
    for(int y = 0; y < 4; y++) {
 8004cfa:	3201      	adds	r2, #1
 8004cfc:	2a04      	cmp	r2, #4
 8004cfe:	f103 0304 	add.w	r3, r3, #4
 8004d02:	d1e3      	bne.n	8004ccc <_ZN11Screen1View15rotateTetrominoEv+0x50>
    for(int y = 0; y < 4 && canRotate; y++) {
 8004d04:	2100      	movs	r1, #0
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8004d06:	f04f 0e0f 	mov.w	lr, #15
                   board[boardY][boardX]) {
 8004d0a:	f04f 080a 	mov.w	r8, #10
    for(int y = 0; y < 4; y++) {
 8004d0e:	4684      	mov	ip, r0
        for(int x = 0; x < 4; x++) {
 8004d10:	2200      	movs	r2, #0
            if(rotated[y][x]) {
 8004d12:	f81c 3b01 	ldrb.w	r3, [ip], #1
 8004d16:	b1c3      	cbz	r3, 8004d4a <_ZN11Screen1View15rotateTetrominoEv+0xce>
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8004d18:	f8d4 3c5c 	ldr.w	r3, [r4, #3164]	@ 0xc5c
 8004d1c:	f1a3 0914 	sub.w	r9, r3, #20
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8004d20:	f8d4 3c60 	ldr.w	r3, [r4, #3168]	@ 0xc60
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8004d24:	fb99 f9fe 	sdiv	r9, r9, lr
 8004d28:	4491      	add	r9, r2
                if(boardX < 0 || boardX >= BOARD_WIDTH || 
 8004d2a:	f1b9 0f09 	cmp.w	r9, #9
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8004d2e:	f1a3 030a 	sub.w	r3, r3, #10
 8004d32:	fb93 f3fe 	sdiv	r3, r3, lr
 8004d36:	440b      	add	r3, r1
                if(boardX < 0 || boardX >= BOARD_WIDTH || 
 8004d38:	d81c      	bhi.n	8004d74 <_ZN11Screen1View15rotateTetrominoEv+0xf8>
 8004d3a:	2b13      	cmp	r3, #19
 8004d3c:	d81a      	bhi.n	8004d74 <_ZN11Screen1View15rotateTetrominoEv+0xf8>
                   board[boardY][boardX]) {
 8004d3e:	fb08 6303 	mla	r3, r8, r3, r6
 8004d42:	444b      	add	r3, r9
                   boardY < 0 || boardY >= BOARD_HEIGHT ||
 8004d44:	f893 32d4 	ldrb.w	r3, [r3, #724]	@ 0x2d4
 8004d48:	b9a3      	cbnz	r3, 8004d74 <_ZN11Screen1View15rotateTetrominoEv+0xf8>
        for(int x = 0; x < 4; x++) {
 8004d4a:	3201      	adds	r2, #1
 8004d4c:	2a04      	cmp	r2, #4
 8004d4e:	d1e0      	bne.n	8004d12 <_ZN11Screen1View15rotateTetrominoEv+0x96>
 8004d50:	2301      	movs	r3, #1
    for(int y = 0; y < 4 && canRotate; y++) {
 8004d52:	3101      	adds	r1, #1
 8004d54:	2904      	cmp	r1, #4
 8004d56:	d00f      	beq.n	8004d78 <_ZN11Screen1View15rotateTetrominoEv+0xfc>
 8004d58:	3004      	adds	r0, #4
 8004d5a:	2b00      	cmp	r3, #0
 8004d5c:	d1d7      	bne.n	8004d0e <_ZN11Screen1View15rotateTetrominoEv+0x92>
}
 8004d5e:	b009      	add	sp, #36	@ 0x24
 8004d60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                if(newX >= 0 && newX < 4 && newY >= 0 && newY < 4) {
 8004d64:	f1b9 0f03 	cmp.w	r9, #3
                    rotated[newY][newX] = temp[y][x];
 8004d68:	bf9c      	itt	ls
 8004d6a:	f891 b000 	ldrbls.w	fp, [r1]
 8004d6e:	f80c b018 	strbls.w	fp, [ip, r8, lsl #1]
 8004d72:	e7b9      	b.n	8004ce8 <_ZN11Screen1View15rotateTetrominoEv+0x6c>
                    canRotate = false;
 8004d74:	2300      	movs	r3, #0
 8004d76:	e7ec      	b.n	8004d52 <_ZN11Screen1View15rotateTetrominoEv+0xd6>
    if(canRotate) {
 8004d78:	2b00      	cmp	r3, #0
 8004d7a:	d0f0      	beq.n	8004d5e <_ZN11Screen1View15rotateTetrominoEv+0xe2>
        memcpy(currentTetromino, rotated, sizeof(currentTetromino));
 8004d7c:	f604 424c 	addw	r2, r4, #3148	@ 0xc4c
 8004d80:	f10d 0c20 	add.w	ip, sp, #32
 8004d84:	462b      	mov	r3, r5
 8004d86:	cb03      	ldmia	r3!, {r0, r1}
 8004d88:	4563      	cmp	r3, ip
 8004d8a:	6010      	str	r0, [r2, #0]
 8004d8c:	6051      	str	r1, [r2, #4]
 8004d8e:	461d      	mov	r5, r3
 8004d90:	f102 0208 	add.w	r2, r2, #8
 8004d94:	d1f6      	bne.n	8004d84 <_ZN11Screen1View15rotateTetrominoEv+0x108>
        drawTetromino(currentShape, currentX, currentY);
 8004d96:	4630      	mov	r0, r6
 8004d98:	f8d4 3c60 	ldr.w	r3, [r4, #3168]	@ 0xc60
 8004d9c:	f8d4 2c5c 	ldr.w	r2, [r4, #3164]	@ 0xc5c
 8004da0:	4639      	mov	r1, r7
 8004da2:	f7ff ff07 	bl	8004bb4 <_ZN11Screen1View13drawTetrominoEiii>
        container.invalidate();
 8004da6:	1d30      	adds	r0, r6, #4
}
 8004da8:	b009      	add	sp, #36	@ 0x24
 8004daa:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004dae:	f00d bf25 	b.w	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
	...

08004db4 <_ZN11Screen1View17drawNextTetrominoEv>:
{
 8004db4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    switch(nextShape) {
 8004db8:	f500 5b00 	add.w	fp, r0, #8192	@ 0x2000
{
 8004dbc:	b085      	sub	sp, #20
    switch(nextShape) {
 8004dbe:	f8db 2c68 	ldr.w	r2, [fp, #3176]	@ 0xc68
{
 8004dc2:	4605      	mov	r5, r0
    switch(nextShape) {
 8004dc4:	2a00      	cmp	r2, #0
 8004dc6:	d057      	beq.n	8004e78 <_ZN11Screen1View17drawNextTetrominoEv+0xc4>
            NEXT_START_Y = 123;
 8004dc8:	2a03      	cmp	r2, #3
 8004dca:	f04f 0a7b 	mov.w	sl, #123	@ 0x7b
 8004dce:	bf0c      	ite	eq
 8004dd0:	f04f 09c3 	moveq.w	r9, #195	@ 0xc3
 8004dd4:	f04f 09c0 	movne.w	r9, #192	@ 0xc0
    for(int y = 0; y < 4; y++) {
 8004dd8:	f505 5822 	add.w	r8, r5, #10368	@ 0x2880
        container.remove(d);
 8004ddc:	1d2b      	adds	r3, r5, #4
        for(int x = 0; x < 4; x++) {
 8004dde:	2400      	movs	r4, #0
 8004de0:	f108 083c 	add.w	r8, r8, #60	@ 0x3c
 8004de4:	9301      	str	r3, [sp, #4]
 8004de6:	eb08 0704 	add.w	r7, r8, r4
 8004dea:	2600      	movs	r6, #0
 8004dec:	4639      	mov	r1, r7
 8004dee:	9801      	ldr	r0, [sp, #4]
 8004df0:	3601      	adds	r6, #1
 8004df2:	f007 f89e 	bl	800bf32 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8004df6:	2e04      	cmp	r6, #4
 8004df8:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 8004dfc:	d1f6      	bne.n	8004dec <_ZN11Screen1View17drawNextTetrominoEv+0x38>
    for(int y = 0; y < 4; y++) {
 8004dfe:	34b0      	adds	r4, #176	@ 0xb0
 8004e00:	f5b4 7f30 	cmp.w	r4, #704	@ 0x2c0
 8004e04:	d1ef      	bne.n	8004de6 <_ZN11Screen1View17drawNextTetrominoEv+0x32>
    for(int y = 0; y < 4; y++) {
 8004e06:	2400      	movs	r4, #0
        for(int x = 0; x < 4; x++) {
 8004e08:	f642 07bc 	movw	r7, #10428	@ 0x28bc
 8004e0c:	23b0      	movs	r3, #176	@ 0xb0
 8004e0e:	fb03 7704 	mla	r7, r3, r4, r7
 8004e12:	2600      	movs	r6, #0
            if(TETROMINOS[nextShape][y][x] == 1) {
 8004e14:	f8db 2c68 	ldr.w	r2, [fp, #3176]	@ 0xc68
 8004e18:	4b1a      	ldr	r3, [pc, #104]	@ (8004e84 <_ZN11Screen1View17drawNextTetrominoEv+0xd0>)
 8004e1a:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8004e1e:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 8004e22:	5d92      	ldrb	r2, [r2, r6]
 8004e24:	2a01      	cmp	r2, #1
 8004e26:	d11c      	bne.n	8004e62 <_ZN11Screen1View17drawNextTetrominoEv+0xae>
                nextBlocks[y][x].setXY(
 8004e28:	eb04 02c4 	add.w	r2, r4, r4, lsl #3
 8004e2c:	eb06 01c6 	add.w	r1, r6, r6, lsl #3
 8004e30:	eb05 0807 	add.w	r8, r5, r7
 8004e34:	4452      	add	r2, sl
 8004e36:	4449      	add	r1, r9
 8004e38:	b212      	sxth	r2, r2
 8004e3a:	b209      	sxth	r1, r1
 8004e3c:	4640      	mov	r0, r8
 8004e3e:	f7fe fab2 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
                nextBlocks[y][x].setBitmap(Bitmap(TETROMINO_NEXT_IMAGES[nextShape]));
 8004e42:	f8db 1c68 	ldr.w	r1, [fp, #3176]	@ 0xc68
 8004e46:	4b10      	ldr	r3, [pc, #64]	@ (8004e88 <_ZN11Screen1View17drawNextTetrominoEv+0xd4>)
 8004e48:	59ea      	ldr	r2, [r5, r7]
 8004e4a:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8004e4e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8004e52:	4640      	mov	r0, r8
 8004e54:	a903      	add	r1, sp, #12
 8004e56:	6e12      	ldr	r2, [r2, #96]	@ 0x60
 8004e58:	4790      	blx	r2
        container.add(d);
 8004e5a:	9801      	ldr	r0, [sp, #4]
 8004e5c:	4641      	mov	r1, r8
 8004e5e:	f007 f827 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        for(int x = 0; x < 4; x++) {
 8004e62:	3601      	adds	r6, #1
 8004e64:	2e04      	cmp	r6, #4
 8004e66:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 8004e6a:	d1d3      	bne.n	8004e14 <_ZN11Screen1View17drawNextTetrominoEv+0x60>
    for(int y = 0; y < 4; y++) {
 8004e6c:	3401      	adds	r4, #1
 8004e6e:	2c04      	cmp	r4, #4
 8004e70:	d1ca      	bne.n	8004e08 <_ZN11Screen1View17drawNextTetrominoEv+0x54>
}
 8004e72:	b005      	add	sp, #20
 8004e74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            NEXT_START_Y = 127;
 8004e78:	f04f 0a7f 	mov.w	sl, #127	@ 0x7f
            NEXT_START_X = 187;
 8004e7c:	f04f 09bb 	mov.w	r9, #187	@ 0xbb
 8004e80:	e7aa      	b.n	8004dd8 <_ZN11Screen1View17drawNextTetrominoEv+0x24>
 8004e82:	bf00      	nop
 8004e84:	08027d0c 	.word	0x08027d0c
 8004e88:	08027cf0 	.word	0x08027cf0

08004e8c <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View() : 
 8004e8c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8004e90:	4605      	mov	r5, r0
    isGameOver(false)
 8004e92:	f7fe fb43 	bl	800351c <_ZN15Screen1ViewBaseC1Ev>
 8004e96:	4b52      	ldr	r3, [pc, #328]	@ (8004fe0 <_ZN11Screen1ViewC1Ev+0x154>)
 8004e98:	602b      	str	r3, [r5, #0]
 8004e9a:	f505 7667 	add.w	r6, r5, #924	@ 0x39c
 8004e9e:	f205 645c 	addw	r4, r5, #1628	@ 0x65c
 8004ea2:	f64f 78ff 	movw	r8, #65535	@ 0xffff
 8004ea6:	f106 07b0 	add.w	r7, r6, #176	@ 0xb0
 8004eaa:	4630      	mov	r0, r6
 8004eac:	4669      	mov	r1, sp
 8004eae:	362c      	adds	r6, #44	@ 0x2c
 8004eb0:	f8ad 8000 	strh.w	r8, [sp]
 8004eb4:	f7fe fabe 	bl	8003434 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004eb8:	42be      	cmp	r6, r7
 8004eba:	d1f6      	bne.n	8004eaa <_ZN11Screen1ViewC1Ev+0x1e>
 8004ebc:	42a6      	cmp	r6, r4
 8004ebe:	d1f2      	bne.n	8004ea6 <_ZN11Screen1ViewC1Ev+0x1a>
 8004ec0:	f505 5622 	add.w	r6, r5, #10368	@ 0x2880
 8004ec4:	363c      	adds	r6, #60	@ 0x3c
 8004ec6:	f64f 78ff 	movw	r8, #65535	@ 0xffff
 8004eca:	f504 77dc 	add.w	r7, r4, #440	@ 0x1b8
 8004ece:	4620      	mov	r0, r4
 8004ed0:	4669      	mov	r1, sp
 8004ed2:	342c      	adds	r4, #44	@ 0x2c
 8004ed4:	f8ad 8000 	strh.w	r8, [sp]
 8004ed8:	f7fe faac 	bl	8003434 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004edc:	42bc      	cmp	r4, r7
 8004ede:	d1f6      	bne.n	8004ece <_ZN11Screen1ViewC1Ev+0x42>
 8004ee0:	42b4      	cmp	r4, r6
 8004ee2:	d1f2      	bne.n	8004eca <_ZN11Screen1ViewC1Ev+0x3e>
 8004ee4:	f505 572d 	add.w	r7, r5, #11072	@ 0x2b40
 8004ee8:	373c      	adds	r7, #60	@ 0x3c
 8004eea:	f64f 78ff 	movw	r8, #65535	@ 0xffff
Screen1View::Screen1View() : 
 8004eee:	4634      	mov	r4, r6
    isGameOver(false)
 8004ef0:	36b0      	adds	r6, #176	@ 0xb0
 8004ef2:	4620      	mov	r0, r4
 8004ef4:	4669      	mov	r1, sp
 8004ef6:	342c      	adds	r4, #44	@ 0x2c
 8004ef8:	f8ad 8000 	strh.w	r8, [sp]
 8004efc:	f7fe fa9a 	bl	8003434 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004f00:	42b4      	cmp	r4, r6
 8004f02:	d1f6      	bne.n	8004ef2 <_ZN11Screen1ViewC1Ev+0x66>
 8004f04:	42bc      	cmp	r4, r7
 8004f06:	4626      	mov	r6, r4
 8004f08:	d1f1      	bne.n	8004eee <_ZN11Screen1ViewC1Ev+0x62>
 8004f0a:	4623      	mov	r3, r4
 8004f0c:	f505 5131 	add.w	r1, r5, #11328	@ 0x2c40
        : Box(), borderColor(0), borderSize(0)
 8004f10:	4c34      	ldr	r4, [pc, #208]	@ (8004fe4 <_ZN11Screen1ViewC1Ev+0x158>)
 8004f12:	310c      	adds	r1, #12
 8004f14:	2200      	movs	r2, #0
          visible(true)
 8004f16:	2001      	movs	r0, #1
        : Widget(), alpha(255), color(0)
 8004f18:	26ff      	movs	r6, #255	@ 0xff
 8004f1a:	809a      	strh	r2, [r3, #4]
 8004f1c:	80da      	strh	r2, [r3, #6]
 8004f1e:	811a      	strh	r2, [r3, #8]
 8004f20:	815a      	strh	r2, [r3, #10]
 8004f22:	819a      	strh	r2, [r3, #12]
 8004f24:	81da      	strh	r2, [r3, #14]
 8004f26:	821a      	strh	r2, [r3, #16]
 8004f28:	825a      	strh	r2, [r3, #18]
          nextDrawChainElement(0),
 8004f2a:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 8004f2c:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 8004f2e:	845a      	strh	r2, [r3, #34]	@ 0x22
          touchable(false),
 8004f30:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
          visible(true)
 8004f34:	f883 0025 	strb.w	r0, [r3, #37]	@ 0x25
 8004f38:	f883 6026 	strb.w	r6, [r3, #38]	@ 0x26
        : color(col)
 8004f3c:	629a      	str	r2, [r3, #40]	@ 0x28
 8004f3e:	601c      	str	r4, [r3, #0]
 8004f40:	62da      	str	r2, [r3, #44]	@ 0x2c
 8004f42:	861a      	strh	r2, [r3, #48]	@ 0x30
          nextSibling(0),
 8004f44:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8004f48:	3334      	adds	r3, #52	@ 0x34
 8004f4a:	428b      	cmp	r3, r1
 8004f4c:	d1e5      	bne.n	8004f1a <_ZN11Screen1ViewC1Ev+0x8e>
    currentX(80),
 8004f4e:	f505 5400 	add.w	r4, r5, #8192	@ 0x2000
 8004f52:	2350      	movs	r3, #80	@ 0x50
 8004f54:	f8c4 3c5c 	str.w	r3, [r4, #3164]	@ 0xc5c
    currentY(10),
 8004f58:	230a      	movs	r3, #10
 8004f5a:	f8c4 3c60 	str.w	r3, [r4, #3168]	@ 0xc60
    currentShape(0),
 8004f5e:	f8c4 2c64 	str.w	r2, [r4, #3172]	@ 0xc64
    nextShape(1),  // Khởi tạo shape tiếp theo
 8004f62:	f8c4 0c68 	str.w	r0, [r4, #3176]	@ 0xc68
    tickCount(0),
 8004f66:	f8c4 2c6c 	str.w	r2, [r4, #3180]	@ 0xc6c
    isGameOver(false)
 8004f6a:	f884 2c74 	strb.w	r2, [r4, #3188]	@ 0xc74
    memset(board, 0, sizeof(board));
 8004f6e:	2100      	movs	r1, #0
 8004f70:	22c8      	movs	r2, #200	@ 0xc8
 8004f72:	f505 7035 	add.w	r0, r5, #724	@ 0x2d4
 8004f76:	f020 fba4 	bl	80256c2 <memset>
    memcpy(currentTetromino, TETROMINOS[currentShape], sizeof(currentTetromino));
 8004f7a:	4b1b      	ldr	r3, [pc, #108]	@ (8004fe8 <_ZN11Screen1ViewC1Ev+0x15c>)
 8004f7c:	f604 424c 	addw	r2, r4, #3148	@ 0xc4c
 8004f80:	f103 0110 	add.w	r1, r3, #16
 8004f84:	f853 0b04 	ldr.w	r0, [r3], #4
 8004f88:	f842 0b04 	str.w	r0, [r2], #4
 8004f8c:	428b      	cmp	r3, r1
 8004f8e:	d1f9      	bne.n	8004f84 <_ZN11Screen1ViewC1Ev+0xf8>
    drawTetromino(currentShape, currentX, currentY);
 8004f90:	230a      	movs	r3, #10
 8004f92:	2250      	movs	r2, #80	@ 0x50
 8004f94:	2100      	movs	r1, #0
 8004f96:	4628      	mov	r0, r5
 8004f98:	f7ff fe0c 	bl	8004bb4 <_ZN11Screen1View13drawTetrominoEiii>
    drawNextTetromino();
 8004f9c:	4628      	mov	r0, r5
 8004f9e:	f7ff ff09 	bl	8004db4 <_ZN11Screen1View17drawNextTetrominoEv>
    score = 0;
 8004fa2:	2300      	movs	r3, #0
 8004fa4:	f8c4 3c70 	str.w	r3, [r4, #3184]	@ 0xc70
    Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 8004fa8:	f505 5431 	add.w	r4, r5, #11328	@ 0x2c40
 8004fac:	3436      	adds	r4, #54	@ 0x36
 8004fae:	4a0f      	ldr	r2, [pc, #60]	@ (8004fec <_ZN11Screen1ViewC1Ev+0x160>)
 8004fb0:	2114      	movs	r1, #20
 8004fb2:	4620      	mov	r0, r4
 8004fb4:	f010 f908 	bl	80151c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8004fb8:	f8c5 4158 	str.w	r4, [r5, #344]	@ 0x158
        : typedTextId(id)
 8004fbc:	4b0c      	ldr	r3, [pc, #48]	@ (8004ff0 <_ZN11Screen1ViewC1Ev+0x164>)
 8004fbe:	9300      	str	r3, [sp, #0]
    textArea1.setTypedText(touchgfx::TypedText(T_MAN1));
 8004fc0:	f505 7488 	add.w	r4, r5, #272	@ 0x110
 8004fc4:	230a      	movs	r3, #10
 8004fc6:	4669      	mov	r1, sp
 8004fc8:	4620      	mov	r0, r4
 8004fca:	f8ad 3004 	strh.w	r3, [sp, #4]
 8004fce:	f009 ff0b 	bl	800ede8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea1.invalidate(); // Vẽ lại nội dung
 8004fd2:	4620      	mov	r0, r4
 8004fd4:	f00d fe12 	bl	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8004fd8:	4628      	mov	r0, r5
 8004fda:	b002      	add	sp, #8
 8004fdc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004fe0:	08027cc4 	.word	0x08027cc4
 8004fe4:	080283b8 	.word	0x080283b8
 8004fe8:	08027d0c 	.word	0x08027d0c
 8004fec:	0802723d 	.word	0x0802723d
 8004ff0:	08027840 	.word	0x08027840

08004ff4 <_ZN11Screen1View18createNewTetrominoEv>:
{
 8004ff4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    if (isGameOver) {
 8004ff6:	f500 5500 	add.w	r5, r0, #8192	@ 0x2000
{
 8004ffa:	4604      	mov	r4, r0
    if (isGameOver) {
 8004ffc:	f895 3c74 	ldrb.w	r3, [r5, #3188]	@ 0xc74
 8005000:	2b00      	cmp	r3, #0
 8005002:	f040 8093 	bne.w	800512c <_ZN11Screen1View18createNewTetrominoEv+0x138>
    currentShape = nextShape;
 8005006:	f8d5 1c68 	ldr.w	r1, [r5, #3176]	@ 0xc68
 800500a:	f8c5 1c64 	str.w	r1, [r5, #3172]	@ 0xc64
    currentY = 10;
 800500e:	230a      	movs	r3, #10
 8005010:	f8c5 3c60 	str.w	r3, [r5, #3168]	@ 0xc60
    currentX = 80;
 8005014:	2350      	movs	r3, #80	@ 0x50
    nextShape = (nextShape + 1) % TETRIS_SHAPES;
 8005016:	1c4a      	adds	r2, r1, #1
    currentX = 80;
 8005018:	f8c5 3c5c 	str.w	r3, [r5, #3164]	@ 0xc5c
    nextShape = (nextShape + 1) % TETRIS_SHAPES;
 800501c:	2307      	movs	r3, #7
 800501e:	fb92 f3f3 	sdiv	r3, r2, r3
 8005022:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 8005026:	1ad2      	subs	r2, r2, r3
    memcpy(currentTetromino, TETROMINOS[currentShape], sizeof(currentTetromino));
 8005028:	4b41      	ldr	r3, [pc, #260]	@ (8005130 <_ZN11Screen1View18createNewTetrominoEv+0x13c>)
    nextShape = (nextShape + 1) % TETRIS_SHAPES;
 800502a:	f8c5 2c68 	str.w	r2, [r5, #3176]	@ 0xc68
    memcpy(currentTetromino, TETROMINOS[currentShape], sizeof(currentTetromino));
 800502e:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 8005032:	f500 5231 	add.w	r2, r0, #11328	@ 0x2c40
 8005036:	320c      	adds	r2, #12
 8005038:	f103 0110 	add.w	r1, r3, #16
 800503c:	f853 0b04 	ldr.w	r0, [r3], #4
 8005040:	f842 0b04 	str.w	r0, [r2], #4
 8005044:	428b      	cmp	r3, r1
 8005046:	d1f9      	bne.n	800503c <_ZN11Screen1View18createNewTetrominoEv+0x48>
    drawNextTetromino();
 8005048:	4620      	mov	r0, r4
 800504a:	f7ff feb3 	bl	8004db4 <_ZN11Screen1View17drawNextTetrominoEv>
    for(int y = 0; y < 4 && canCreate; y++) {
 800504e:	f504 5131 	add.w	r1, r4, #11328	@ 0x2c40
 8005052:	310b      	adds	r1, #11
 8005054:	2600      	movs	r6, #0
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8005056:	f04f 0c0f 	mov.w	ip, #15
{
 800505a:	460f      	mov	r7, r1
        for(int x = 0; x < 4; x++) {
 800505c:	2000      	movs	r0, #0
            if(currentTetromino[y][x]) {  // Nếu ô này có khối
 800505e:	f817 3f01 	ldrb.w	r3, [r7, #1]!
 8005062:	b1c3      	cbz	r3, 8005096 <_ZN11Screen1View18createNewTetrominoEv+0xa2>
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8005064:	f8d5 2c5c 	ldr.w	r2, [r5, #3164]	@ 0xc5c
 8005068:	3a14      	subs	r2, #20
 800506a:	fb92 f2fc 	sdiv	r2, r2, ip
 800506e:	4402      	add	r2, r0
                if(boardX >= 0 && boardX < BOARD_WIDTH && 
 8005070:	2a09      	cmp	r2, #9
 8005072:	d810      	bhi.n	8005096 <_ZN11Screen1View18createNewTetrominoEv+0xa2>
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8005074:	f8d5 3c60 	ldr.w	r3, [r5, #3168]	@ 0xc60
 8005078:	3b0a      	subs	r3, #10
 800507a:	fb93 f3fc 	sdiv	r3, r3, ip
 800507e:	4433      	add	r3, r6
                if(boardX >= 0 && boardX < BOARD_WIDTH && 
 8005080:	2b13      	cmp	r3, #19
 8005082:	d808      	bhi.n	8005096 <_ZN11Screen1View18createNewTetrominoEv+0xa2>
                   board[boardY][boardX]) {
 8005084:	f04f 0e0a 	mov.w	lr, #10
 8005088:	fb0e 4303 	mla	r3, lr, r3, r4
 800508c:	4413      	add	r3, r2
                   boardY >= 0 && boardY < BOARD_HEIGHT && 
 800508e:	f893 32d4 	ldrb.w	r3, [r3, #724]	@ 0x2d4
 8005092:	2b00      	cmp	r3, #0
 8005094:	d13a      	bne.n	800510c <_ZN11Screen1View18createNewTetrominoEv+0x118>
        for(int x = 0; x < 4; x++) {
 8005096:	3001      	adds	r0, #1
 8005098:	2804      	cmp	r0, #4
 800509a:	d1e0      	bne.n	800505e <_ZN11Screen1View18createNewTetrominoEv+0x6a>
 800509c:	2301      	movs	r3, #1
    for(int y = 0; y < 4 && canCreate; y++) {
 800509e:	3601      	adds	r6, #1
 80050a0:	2e04      	cmp	r6, #4
 80050a2:	d035      	beq.n	8005110 <_ZN11Screen1View18createNewTetrominoEv+0x11c>
 80050a4:	3104      	adds	r1, #4
 80050a6:	2b00      	cmp	r3, #0
 80050a8:	d1d7      	bne.n	800505a <_ZN11Screen1View18createNewTetrominoEv+0x66>
        isGameOver = true;
 80050aa:	2601      	movs	r6, #1
 80050ac:	f885 6c74 	strb.w	r6, [r5, #3188]	@ 0xc74
        clearScreen();
 80050b0:	4620      	mov	r0, r4
        Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 80050b2:	f504 5731 	add.w	r7, r4, #11328	@ 0x2c40
        clearScreen();
 80050b6:	f7ff fd2e 	bl	8004b16 <_ZN11Screen1View11clearScreenEv>
        Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 80050ba:	3736      	adds	r7, #54	@ 0x36
        visible = vis;
 80050bc:	2300      	movs	r3, #0
 80050be:	4a1d      	ldr	r2, [pc, #116]	@ (8005134 <_ZN11Screen1View18createNewTetrominoEv+0x140>)
 80050c0:	f884 30bd 	strb.w	r3, [r4, #189]	@ 0xbd
 80050c4:	f884 6181 	strb.w	r6, [r4, #385]	@ 0x181
 80050c8:	f8d5 3c70 	ldr.w	r3, [r5, #3184]	@ 0xc70
 80050cc:	f884 61ad 	strb.w	r6, [r4, #429]	@ 0x1ad
 80050d0:	f884 6225 	strb.w	r6, [r4, #549]	@ 0x225
 80050d4:	2114      	movs	r1, #20
 80050d6:	4638      	mov	r0, r7
 80050d8:	f010 f876 	bl	80151c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        textArea2.setTypedText(touchgfx::TypedText(T_MAN1SCORE));
 80050dc:	f504 751e 	add.w	r5, r4, #632	@ 0x278
 80050e0:	4b15      	ldr	r3, [pc, #84]	@ (8005138 <_ZN11Screen1View18createNewTetrominoEv+0x144>)
 80050e2:	9300      	str	r3, [sp, #0]
 80050e4:	4669      	mov	r1, sp
 80050e6:	2308      	movs	r3, #8
 80050e8:	4628      	mov	r0, r5
 80050ea:	f884 629d 	strb.w	r6, [r4, #669]	@ 0x29d
 80050ee:	f8c4 72c0 	str.w	r7, [r4, #704]	@ 0x2c0
 80050f2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80050f6:	f009 fe77 	bl	800ede8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        textArea2.invalidate(); // Vẽ lại nội dung
 80050fa:	4628      	mov	r0, r5
 80050fc:	f00d fd7e 	bl	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
        container.invalidate();
 8005100:	1d20      	adds	r0, r4, #4
}
 8005102:	b003      	add	sp, #12
 8005104:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8005108:	f00d bd78 	b.w	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
                    canCreate = false;
 800510c:	2300      	movs	r3, #0
 800510e:	e7c6      	b.n	800509e <_ZN11Screen1View18createNewTetrominoEv+0xaa>
    if (!canCreate) {
 8005110:	2b00      	cmp	r3, #0
 8005112:	d0ca      	beq.n	80050aa <_ZN11Screen1View18createNewTetrominoEv+0xb6>
        drawTetromino(currentShape, currentX, currentY);
 8005114:	f8d5 3c60 	ldr.w	r3, [r5, #3168]	@ 0xc60
 8005118:	f8d5 2c5c 	ldr.w	r2, [r5, #3164]	@ 0xc5c
 800511c:	f8d5 1c64 	ldr.w	r1, [r5, #3172]	@ 0xc64
 8005120:	4620      	mov	r0, r4
}
 8005122:	b003      	add	sp, #12
 8005124:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
        drawTetromino(currentShape, currentX, currentY);
 8005128:	f7ff bd44 	b.w	8004bb4 <_ZN11Screen1View13drawTetrominoEiii>
}
 800512c:	b003      	add	sp, #12
 800512e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005130:	08027d0c 	.word	0x08027d0c
 8005134:	0802723d 	.word	0x0802723d
 8005138:	08027840 	.word	0x08027840

0800513c <_ZN11Screen1View18checkAndClearLinesEv>:
{
 800513c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005140:	b09d      	sub	sp, #116	@ 0x74
 8005142:	4605      	mov	r5, r0
    int fullLines[BOARD_HEIGHT] = {0};  // Track which lines are full
 8005144:	2250      	movs	r2, #80	@ 0x50
 8005146:	2100      	movs	r1, #0
 8005148:	a808      	add	r0, sp, #32
 800514a:	f020 faba 	bl	80256c2 <memset>
    int numFullLines = 0;
 800514e:	2400      	movs	r4, #0
 8005150:	f205 3291 	addw	r2, r5, #913	@ 0x391
    for(int y = BOARD_HEIGHT - 1; y >= 0; y--) {
 8005154:	2313      	movs	r3, #19
{
 8005156:	4610      	mov	r0, r2
        for(int x = 0; x < BOARD_WIDTH; x++) {
 8005158:	2100      	movs	r1, #0
            if(!board[y][x]) {
 800515a:	f810 6f01 	ldrb.w	r6, [r0, #1]!
 800515e:	b146      	cbz	r6, 8005172 <_ZN11Screen1View18checkAndClearLinesEv+0x36>
        for(int x = 0; x < BOARD_WIDTH; x++) {
 8005160:	3101      	adds	r1, #1
 8005162:	290a      	cmp	r1, #10
 8005164:	d1f9      	bne.n	800515a <_ZN11Screen1View18checkAndClearLinesEv+0x1e>
            fullLines[numFullLines++] = y;
 8005166:	a91c      	add	r1, sp, #112	@ 0x70
 8005168:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800516c:	3401      	adds	r4, #1
 800516e:	f841 3c50 	str.w	r3, [r1, #-80]
    for(int y = BOARD_HEIGHT - 1; y >= 0; y--) {
 8005172:	3b01      	subs	r3, #1
 8005174:	1c59      	adds	r1, r3, #1
 8005176:	f1a2 020a 	sub.w	r2, r2, #10
 800517a:	d1ec      	bne.n	8005156 <_ZN11Screen1View18checkAndClearLinesEv+0x1a>
    if(numFullLines > 0) {
 800517c:	2c00      	cmp	r4, #0
 800517e:	f340 80e7 	ble.w	8005350 <_ZN11Screen1View18checkAndClearLinesEv+0x214>
            score += 10; // 1 line cleared
 8005182:	f505 5200 	add.w	r2, r5, #8192	@ 0x2000
        if (numFullLines == 1) {
 8005186:	2c01      	cmp	r4, #1
            score += 10; // 1 line cleared
 8005188:	f8d2 3c70 	ldr.w	r3, [r2, #3184]	@ 0xc70
        if (numFullLines == 1) {
 800518c:	d14c      	bne.n	8005228 <_ZN11Screen1View18checkAndClearLinesEv+0xec>
            score += 10; // 1 line cleared
 800518e:	330a      	adds	r3, #10
        Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 8005190:	f505 5631 	add.w	r6, r5, #11328	@ 0x2c40
 8005194:	3636      	adds	r6, #54	@ 0x36
            score += 10; // 1 line cleared
 8005196:	f8c2 3c70 	str.w	r3, [r2, #3184]	@ 0xc70
        Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 800519a:	2114      	movs	r1, #20
 800519c:	4a6e      	ldr	r2, [pc, #440]	@ (8005358 <_ZN11Screen1View18checkAndClearLinesEv+0x21c>)
 800519e:	4630      	mov	r0, r6
 80051a0:	f010 f812 	bl	80151c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80051a4:	f8c5 6158 	str.w	r6, [r5, #344]	@ 0x158
        textArea1.setTypedText(touchgfx::TypedText(T_MAN1));
 80051a8:	f505 7688 	add.w	r6, r5, #272	@ 0x110
 80051ac:	4b6b      	ldr	r3, [pc, #428]	@ (800535c <_ZN11Screen1View18checkAndClearLinesEv+0x220>)
 80051ae:	9306      	str	r3, [sp, #24]
 80051b0:	4630      	mov	r0, r6
 80051b2:	a906      	add	r1, sp, #24
 80051b4:	f04f 090a 	mov.w	r9, #10
 80051b8:	f8ad 901c 	strh.w	r9, [sp, #28]
 80051bc:	f009 fe14 	bl	800ede8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        textArea1.invalidate(); // Vẽ lại nội dung
 80051c0:	4630      	mov	r0, r6
 80051c2:	f06f 062a 	mvn.w	r6, #42	@ 0x2a
 80051c6:	436e      	muls	r6, r5
 80051c8:	f00d fd18 	bl	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
                remove(staticBlocks[lineY][x]);
 80051cc:	f5a6 46eb 	sub.w	r6, r6, #30080	@ 0x7580
        for(int i = 0; i < numFullLines; i++) {
 80051d0:	2300      	movs	r3, #0
        textArea1.invalidate(); // Vẽ lại nội dung
 80051d2:	f10d 0b20 	add.w	fp, sp, #32
        for(int i = 0; i < numFullLines; i++) {
 80051d6:	9301      	str	r3, [sp, #4]
        container.remove(d);
 80051d8:	f105 0a04 	add.w	sl, r5, #4
                remove(staticBlocks[lineY][x]);
 80051dc:	3e68      	subs	r6, #104	@ 0x68
            int lineY = fullLines[i];
 80051de:	f85b 7b04 	ldr.w	r7, [fp], #4
            for(int x = 0; x < BOARD_WIDTH; x++) {
 80051e2:	fb09 5707 	mla	r7, r9, r7, r5
 80051e6:	f207 27d3 	addw	r7, r7, #723	@ 0x2d3
 80051ea:	f04f 0800 	mov.w	r8, #0
                remove(staticBlocks[lineY][x]);
 80051ee:	222c      	movs	r2, #44	@ 0x2c
 80051f0:	fb02 6107 	mla	r1, r2, r7, r6
 80051f4:	4650      	mov	r0, sl
            for(int x = 0; x < BOARD_WIDTH; x++) {
 80051f6:	f108 0801 	add.w	r8, r8, #1
 80051fa:	f006 fe9a 	bl	800bf32 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
                board[lineY][x] = false;
 80051fe:	2300      	movs	r3, #0
            for(int x = 0; x < BOARD_WIDTH; x++) {
 8005200:	f1b8 0f0a 	cmp.w	r8, #10
                board[lineY][x] = false;
 8005204:	f807 3f01 	strb.w	r3, [r7, #1]!
            for(int x = 0; x < BOARD_WIDTH; x++) {
 8005208:	f04f 022c 	mov.w	r2, #44	@ 0x2c
 800520c:	d1f0      	bne.n	80051f0 <_ZN11Screen1View18checkAndClearLinesEv+0xb4>
        for(int i = 0; i < numFullLines; i++) {
 800520e:	9a01      	ldr	r2, [sp, #4]
 8005210:	3201      	adds	r2, #1
 8005212:	4294      	cmp	r4, r2
 8005214:	d111      	bne.n	800523a <_ZN11Screen1View18checkAndClearLinesEv+0xfe>
        for(int y = fullLines[0]; y >= 0; y--) {
 8005216:	9f08      	ldr	r7, [sp, #32]
 8005218:	2f00      	cmp	r7, #0
 800521a:	da1f      	bge.n	800525c <_ZN11Screen1View18checkAndClearLinesEv+0x120>
        container.invalidate();
 800521c:	4650      	mov	r0, sl
}
 800521e:	b01d      	add	sp, #116	@ 0x74
 8005220:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005224:	f00d bcea 	b.w	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
        } else if (numFullLines == 2) {
 8005228:	2c02      	cmp	r4, #2
 800522a:	d101      	bne.n	8005230 <_ZN11Screen1View18checkAndClearLinesEv+0xf4>
            score += 30; // 2 lines cleared
 800522c:	331e      	adds	r3, #30
 800522e:	e7af      	b.n	8005190 <_ZN11Screen1View18checkAndClearLinesEv+0x54>
        } else if (numFullLines == 3) {
 8005230:	2c03      	cmp	r4, #3
            score += 50; // 3 lines cleared
 8005232:	bf0c      	ite	eq
 8005234:	3332      	addeq	r3, #50	@ 0x32
            score += 100; // 4 or more lines cleared
 8005236:	3364      	addne	r3, #100	@ 0x64
 8005238:	e7aa      	b.n	8005190 <_ZN11Screen1View18checkAndClearLinesEv+0x54>
 800523a:	9201      	str	r2, [sp, #4]
 800523c:	e7cf      	b.n	80051de <_ZN11Screen1View18checkAndClearLinesEv+0xa2>
 800523e:	4622      	mov	r2, r4
                if(fullLines[i] > y) shiftDown++;
 8005240:	f850 4b04 	ldr.w	r4, [r0], #4
            for(int i = 0; i < numFullLines; i++) {
 8005244:	9e01      	ldr	r6, [sp, #4]
                if(fullLines[i] > y) shiftDown++;
 8005246:	42bc      	cmp	r4, r7
 8005248:	bfc8      	it	gt
 800524a:	3101      	addgt	r1, #1
            for(int i = 0; i < numFullLines; i++) {
 800524c:	4296      	cmp	r6, r2
 800524e:	f102 0401 	add.w	r4, r2, #1
 8005252:	d1f4      	bne.n	800523e <_ZN11Screen1View18checkAndClearLinesEv+0x102>
            if(shiftDown > 0) {
 8005254:	2900      	cmp	r1, #0
 8005256:	dc05      	bgt.n	8005264 <_ZN11Screen1View18checkAndClearLinesEv+0x128>
        for(int y = fullLines[0]; y >= 0; y--) {
 8005258:	3f01      	subs	r7, #1
 800525a:	e7dd      	b.n	8005218 <_ZN11Screen1View18checkAndClearLinesEv+0xdc>
            for(int i = 0; i < numFullLines; i++) {
 800525c:	2200      	movs	r2, #0
 800525e:	a808      	add	r0, sp, #32
            int shiftDown = 0;
 8005260:	4611      	mov	r1, r2
 8005262:	e7ed      	b.n	8005240 <_ZN11Screen1View18checkAndClearLinesEv+0x104>
                        board[y + shiftDown][x] = true;
 8005264:	4439      	add	r1, r7
 8005266:	200a      	movs	r0, #10
 8005268:	fb00 f407 	mul.w	r4, r0, r7
                            10 + ((y + shiftDown) * BLOCK_SIZE)
 800526c:	ebc1 1201 	rsb	r2, r1, r1, lsl #4
 8005270:	f44f 7cdc 	mov.w	ip, #440	@ 0x1b8
 8005274:	f205 29d3 	addw	r9, r5, #723	@ 0x2d3
 8005278:	fb0c 5601 	mla	r6, ip, r1, r5
 800527c:	320a      	adds	r2, #10
 800527e:	9402      	str	r4, [sp, #8]
 8005280:	44a1      	add	r9, r4
 8005282:	4341      	muls	r1, r0
 8005284:	f205 645c 	addw	r4, r5, #1628	@ 0x65c
                        staticBlocks[y + shiftDown][x].setXY(
 8005288:	b212      	sxth	r2, r2
 800528a:	fb0c 4407 	mla	r4, ip, r7, r4
 800528e:	9103      	str	r1, [sp, #12]
 8005290:	46b3      	mov	fp, r6
 8005292:	f04f 0814 	mov.w	r8, #20
                    if(board[y][x]) {
 8005296:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 800529a:	2900      	cmp	r1, #0
 800529c:	d04a      	beq.n	8005334 <_ZN11Screen1View18checkAndClearLinesEv+0x1f8>
                        board[y + shiftDown][x] = true;
 800529e:	9902      	ldr	r1, [sp, #8]
 80052a0:	9803      	ldr	r0, [sp, #12]
                        staticBlocks[y + shiftDown][x].setXY(
 80052a2:	9205      	str	r2, [sp, #20]
                        board[y + shiftDown][x] = true;
 80052a4:	eba9 0101 	sub.w	r1, r9, r1
 80052a8:	f04f 0c01 	mov.w	ip, #1
 80052ac:	f801 c000 	strb.w	ip, [r1, r0]
class Drawable
 80052b0:	e9d4 0101 	ldrd	r0, r1, [r4, #4]
 80052b4:	f506 6ecc 	add.w	lr, r6, #1632	@ 0x660
                        board[y][x] = false;
 80052b8:	f889 3000 	strb.w	r3, [r9]
 80052bc:	e88e 0003 	stmia.w	lr, {r0, r1}
 80052c0:	e9d4 0103 	ldrd	r0, r1, [r4, #12]
 80052c4:	f506 6ecd 	add.w	lr, r6, #1640	@ 0x668
 80052c8:	e88e 0003 	stmia.w	lr, {r0, r1}
 80052cc:	6961      	ldr	r1, [r4, #20]
 80052ce:	f8c6 1670 	str.w	r1, [r6, #1648]	@ 0x670
 80052d2:	69a1      	ldr	r1, [r4, #24]
 80052d4:	f8c6 1674 	str.w	r1, [r6, #1652]	@ 0x674
 80052d8:	69e1      	ldr	r1, [r4, #28]
 80052da:	f8c6 1678 	str.w	r1, [r6, #1656]	@ 0x678
 80052de:	f9b4 1020 	ldrsh.w	r1, [r4, #32]
 80052e2:	f8a6 167c 	strh.w	r1, [r6, #1660]	@ 0x67c
 80052e6:	f9b4 1022 	ldrsh.w	r1, [r4, #34]	@ 0x22
 80052ea:	f8a6 167e 	strh.w	r1, [r6, #1662]	@ 0x67e
 80052ee:	f894 1024 	ldrb.w	r1, [r4, #36]	@ 0x24
 80052f2:	f886 1680 	strb.w	r1, [r6, #1664]	@ 0x680
 80052f6:	f894 1025 	ldrb.w	r1, [r4, #37]	@ 0x25
 80052fa:	f886 1681 	strb.w	r1, [r6, #1665]	@ 0x681
class Image : public Widget
 80052fe:	8ce1      	ldrh	r1, [r4, #38]	@ 0x26
 8005300:	f8ab 1682 	strh.w	r1, [fp, #1666]	@ 0x682
                        staticBlocks[y + shiftDown][x] = staticBlocks[y][x];
 8005304:	f206 6c5c 	addw	ip, r6, #1628	@ 0x65c
 8005308:	f894 1028 	ldrb.w	r1, [r4, #40]	@ 0x28
 800530c:	f88b 1684 	strb.w	r1, [fp, #1668]	@ 0x684
                        staticBlocks[y + shiftDown][x].setXY(
 8005310:	4660      	mov	r0, ip
 8005312:	fa0f f188 	sxth.w	r1, r8
 8005316:	f8cd c010 	str.w	ip, [sp, #16]
 800531a:	f7fe f844 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
        container.add(d);
 800531e:	9804      	ldr	r0, [sp, #16]
 8005320:	4601      	mov	r1, r0
 8005322:	4650      	mov	r0, sl
 8005324:	f006 fdc4 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        container.remove(d);
 8005328:	4621      	mov	r1, r4
 800532a:	4650      	mov	r0, sl
 800532c:	f006 fe01 	bl	800bf32 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8005330:	9a05      	ldr	r2, [sp, #20]
 8005332:	2300      	movs	r3, #0
                for(int x = 0; x < BOARD_WIDTH; x++) {
 8005334:	f108 080f 	add.w	r8, r8, #15
 8005338:	fa1f f888 	uxth.w	r8, r8
 800533c:	f1b8 0faa 	cmp.w	r8, #170	@ 0xaa
 8005340:	f106 062c 	add.w	r6, r6, #44	@ 0x2c
 8005344:	f10b 0b2c 	add.w	fp, fp, #44	@ 0x2c
 8005348:	f104 042c 	add.w	r4, r4, #44	@ 0x2c
 800534c:	d1a3      	bne.n	8005296 <_ZN11Screen1View18checkAndClearLinesEv+0x15a>
 800534e:	e783      	b.n	8005258 <_ZN11Screen1View18checkAndClearLinesEv+0x11c>
}
 8005350:	b01d      	add	sp, #116	@ 0x74
 8005352:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005356:	bf00      	nop
 8005358:	0802723d 	.word	0x0802723d
 800535c:	08027840 	.word	0x08027840

08005360 <_ZN11Screen1View15freezeTetrominoEv>:
{
 8005360:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005364:	f500 5a31 	add.w	sl, r0, #11328	@ 0x2c40
 8005368:	b085      	sub	sp, #20
 800536a:	4605      	mov	r5, r0
 800536c:	f10a 0a0b 	add.w	sl, sl, #11
    for(int y = 0; y < 4; y++) {
 8005370:	f04f 0900 	mov.w	r9, #0
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8005374:	f500 5b00 	add.w	fp, r0, #8192	@ 0x2000
        for(int x = 0; x < 4; x++) {
 8005378:	ebc9 1309 	rsb	r3, r9, r9, lsl #4
 800537c:	b29b      	uxth	r3, r3
 800537e:	9300      	str	r3, [sp, #0]
 8005380:	f04f 0800 	mov.w	r8, #0
{
 8005384:	4653      	mov	r3, sl
            if(currentTetromino[y][x]) {
 8005386:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800538a:	2a00      	cmp	r2, #0
 800538c:	d03d      	beq.n	800540a <_ZN11Screen1View15freezeTetrominoEv+0xaa>
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 800538e:	f8db 2c60 	ldr.w	r2, [fp, #3168]	@ 0xc60
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8005392:	f8db 1c5c 	ldr.w	r1, [fp, #3164]	@ 0xc5c
 8005396:	9301      	str	r3, [sp, #4]
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8005398:	f1a2 060a 	sub.w	r6, r2, #10
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 800539c:	230f      	movs	r3, #15
                board[boardY][boardX] = true;
 800539e:	200a      	movs	r0, #10
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 80053a0:	fb96 f6f3 	sdiv	r6, r6, r3
 80053a4:	444e      	add	r6, r9
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 80053a6:	f1a1 0414 	sub.w	r4, r1, #20
                board[boardY][boardX] = true;
 80053aa:	fb00 5006 	mla	r0, r0, r6, r5
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 80053ae:	fb94 f4f3 	sdiv	r4, r4, r3
 80053b2:	4444      	add	r4, r8
                board[boardY][boardX] = true;
 80053b4:	4420      	add	r0, r4
 80053b6:	2701      	movs	r7, #1
 80053b8:	f880 72d4 	strb.w	r7, [r0, #724]	@ 0x2d4
                staticBlocks[boardY][boardX].setXY(
 80053bc:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 80053c0:	4346      	muls	r6, r0
 80053c2:	202c      	movs	r0, #44	@ 0x2c
                    currentY + (y * BLOCK_SIZE)
 80053c4:	9b00      	ldr	r3, [sp, #0]
                staticBlocks[boardY][boardX].setXY(
 80053c6:	4344      	muls	r4, r0
 80053c8:	f206 675c 	addw	r7, r6, #1628	@ 0x65c
 80053cc:	4427      	add	r7, r4
                    currentX + (x * BLOCK_SIZE),
 80053ce:	ebc8 1008 	rsb	r0, r8, r8, lsl #4
                staticBlocks[boardY][boardX].setXY(
 80053d2:	442f      	add	r7, r5
                    currentY + (y * BLOCK_SIZE)
 80053d4:	441a      	add	r2, r3
                    currentX + (x * BLOCK_SIZE),
 80053d6:	4401      	add	r1, r0
                staticBlocks[boardY][boardX].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 80053d8:	4434      	add	r4, r6
                staticBlocks[boardY][boardX].setXY(
 80053da:	b212      	sxth	r2, r2
 80053dc:	b209      	sxth	r1, r1
 80053de:	4638      	mov	r0, r7
                staticBlocks[boardY][boardX].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 80053e0:	442c      	add	r4, r5
                staticBlocks[boardY][boardX].setXY(
 80053e2:	f7fd ffe0 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
                staticBlocks[boardY][boardX].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 80053e6:	4b12      	ldr	r3, [pc, #72]	@ (8005430 <_ZN11Screen1View15freezeTetrominoEv+0xd0>)
 80053e8:	f8db 1c64 	ldr.w	r1, [fp, #3172]	@ 0xc64
 80053ec:	f8d4 265c 	ldr.w	r2, [r4, #1628]	@ 0x65c
 80053f0:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 80053f4:	6e12      	ldr	r2, [r2, #96]	@ 0x60
 80053f6:	f8ad 100c 	strh.w	r1, [sp, #12]
 80053fa:	4638      	mov	r0, r7
 80053fc:	a903      	add	r1, sp, #12
 80053fe:	4790      	blx	r2
        container.add(d);
 8005400:	4639      	mov	r1, r7
 8005402:	1d28      	adds	r0, r5, #4
 8005404:	f006 fd54 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005408:	9b01      	ldr	r3, [sp, #4]
        for(int x = 0; x < 4; x++) {
 800540a:	f108 0801 	add.w	r8, r8, #1
 800540e:	f1b8 0f04 	cmp.w	r8, #4
 8005412:	d1b8      	bne.n	8005386 <_ZN11Screen1View15freezeTetrominoEv+0x26>
    for(int y = 0; y < 4; y++) {
 8005414:	f109 0901 	add.w	r9, r9, #1
 8005418:	f1b9 0f04 	cmp.w	r9, #4
 800541c:	f10a 0a04 	add.w	sl, sl, #4
 8005420:	d1aa      	bne.n	8005378 <_ZN11Screen1View15freezeTetrominoEv+0x18>
    checkAndClearLines();
 8005422:	4628      	mov	r0, r5
}
 8005424:	b005      	add	sp, #20
 8005426:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    checkAndClearLines();
 800542a:	f7ff be87 	b.w	800513c <_ZN11Screen1View18checkAndClearLinesEv>
 800542e:	bf00      	nop
 8005430:	08027cfe 	.word	0x08027cfe

08005434 <_ZN11Screen1View15handleTickEventEv>:
{
 8005434:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    if (isGameOver) {
 8005438:	f500 5400 	add.w	r4, r0, #8192	@ 0x2000
{
 800543c:	4605      	mov	r5, r0
    if (isGameOver) {
 800543e:	f894 6c74 	ldrb.w	r6, [r4, #3188]	@ 0xc74
 8005442:	2e00      	cmp	r6, #0
 8005444:	f040 8090 	bne.w	8005568 <_ZN11Screen1View15handleTickEventEv+0x134>
    tickCount++;
 8005448:	f8d4 3c6c 	ldr.w	r3, [r4, #3180]	@ 0xc6c
 800544c:	2219      	movs	r2, #25
 800544e:	3301      	adds	r3, #1
 8005450:	f8c4 3c6c 	str.w	r3, [r4, #3180]	@ 0xc6c
 8005454:	fbb3 f1f2 	udiv	r1, r3, r2
 8005458:	fb02 3311 	mls	r3, r2, r1, r3
    if (tickCount % 25 == 12) {
 800545c:	2b0c      	cmp	r3, #12
 800545e:	d117      	bne.n	8005490 <_ZN11Screen1View15handleTickEventEv+0x5c>
        uint32_t count = osMessageQueueGetCount(Queue1Handle);
 8005460:	4f43      	ldr	r7, [pc, #268]	@ (8005570 <_ZN11Screen1View15handleTickEventEv+0x13c>)
        uint8_t res = 0;
 8005462:	f88d 6007 	strb.w	r6, [sp, #7]
        uint32_t count = osMessageQueueGetCount(Queue1Handle);
 8005466:	6838      	ldr	r0, [r7, #0]
 8005468:	f004 fcce 	bl	8009e08 <osMessageQueueGetCount>
        if (count > 0)
 800546c:	b180      	cbz	r0, 8005490 <_ZN11Screen1View15handleTickEventEv+0x5c>
            osMessageQueueGet(Queue1Handle, &res, NULL, osWaitForever);
 800546e:	f04f 33ff 	mov.w	r3, #4294967295
 8005472:	6838      	ldr	r0, [r7, #0]
 8005474:	4632      	mov	r2, r6
 8005476:	f10d 0107 	add.w	r1, sp, #7
 800547a:	f004 fc95 	bl	8009da8 <osMessageQueueGet>
            if (res == 'L') 
 800547e:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8005482:	2b4c      	cmp	r3, #76	@ 0x4c
 8005484:	d02d      	beq.n	80054e2 <_ZN11Screen1View15handleTickEventEv+0xae>
 8005486:	d826      	bhi.n	80054d6 <_ZN11Screen1View15handleTickEventEv+0xa2>
 8005488:	2b43      	cmp	r3, #67	@ 0x43
 800548a:	d060      	beq.n	800554e <_ZN11Screen1View15handleTickEventEv+0x11a>
 800548c:	2b44      	cmp	r3, #68	@ 0x44
 800548e:	d048      	beq.n	8005522 <_ZN11Screen1View15handleTickEventEv+0xee>
    if (tickCount % 50 == 0) 
 8005490:	f8d4 3c6c 	ldr.w	r3, [r4, #3180]	@ 0xc6c
 8005494:	2232      	movs	r2, #50	@ 0x32
 8005496:	fbb3 f1f2 	udiv	r1, r3, r2
 800549a:	fb02 3311 	mls	r3, r2, r1, r3
 800549e:	b9a3      	cbnz	r3, 80054ca <_ZN11Screen1View15handleTickEventEv+0x96>
        if (checkCollision(currentX, currentY + BLOCK_SIZE, currentShape))
 80054a0:	f8d4 6c60 	ldr.w	r6, [r4, #3168]	@ 0xc60
 80054a4:	f8d4 8c5c 	ldr.w	r8, [r4, #3164]	@ 0xc5c
 80054a8:	f8d4 7c64 	ldr.w	r7, [r4, #3172]	@ 0xc64
 80054ac:	360f      	adds	r6, #15
 80054ae:	463b      	mov	r3, r7
 80054b0:	4632      	mov	r2, r6
 80054b2:	4641      	mov	r1, r8
 80054b4:	4628      	mov	r0, r5
 80054b6:	f7ff fafe 	bl	8004ab6 <_ZN11Screen1View14checkCollisionEiii>
 80054ba:	2800      	cmp	r0, #0
 80054bc:	d04b      	beq.n	8005556 <_ZN11Screen1View15handleTickEventEv+0x122>
            freezeTetromino();
 80054be:	4628      	mov	r0, r5
 80054c0:	f7ff ff4e 	bl	8005360 <_ZN11Screen1View15freezeTetrominoEv>
            createNewTetromino();
 80054c4:	4628      	mov	r0, r5
 80054c6:	f7ff fd95 	bl	8004ff4 <_ZN11Screen1View18createNewTetrominoEv>
        container.invalidate();
 80054ca:	1d28      	adds	r0, r5, #4
}
 80054cc:	b002      	add	sp, #8
 80054ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80054d2:	f00d bb93 	b.w	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
 80054d6:	2b52      	cmp	r3, #82	@ 0x52
 80054d8:	d1da      	bne.n	8005490 <_ZN11Screen1View15handleTickEventEv+0x5c>
                if (!checkCollision(currentX + BLOCK_SIZE, currentY, currentShape)) 
 80054da:	f8d4 6c5c 	ldr.w	r6, [r4, #3164]	@ 0xc5c
 80054de:	360f      	adds	r6, #15
 80054e0:	e002      	b.n	80054e8 <_ZN11Screen1View15handleTickEventEv+0xb4>
                if (!checkCollision(currentX - BLOCK_SIZE, currentY, currentShape)) 
 80054e2:	f8d4 6c5c 	ldr.w	r6, [r4, #3164]	@ 0xc5c
 80054e6:	3e0f      	subs	r6, #15
                if (!checkCollision(currentX + BLOCK_SIZE, currentY, currentShape)) 
 80054e8:	f8d4 8c60 	ldr.w	r8, [r4, #3168]	@ 0xc60
 80054ec:	f8d4 7c64 	ldr.w	r7, [r4, #3172]	@ 0xc64
 80054f0:	4642      	mov	r2, r8
 80054f2:	463b      	mov	r3, r7
 80054f4:	4631      	mov	r1, r6
 80054f6:	4628      	mov	r0, r5
 80054f8:	f7ff fadd 	bl	8004ab6 <_ZN11Screen1View14checkCollisionEiii>
 80054fc:	2800      	cmp	r0, #0
 80054fe:	d1c7      	bne.n	8005490 <_ZN11Screen1View15handleTickEventEv+0x5c>
                    currentX += BLOCK_SIZE;
 8005500:	f8c4 6c5c 	str.w	r6, [r4, #3164]	@ 0xc5c
                    drawTetromino(currentShape, currentX, currentY);
 8005504:	4643      	mov	r3, r8
 8005506:	4632      	mov	r2, r6
 8005508:	4639      	mov	r1, r7
 800550a:	4628      	mov	r0, r5
 800550c:	f7ff fb52 	bl	8004bb4 <_ZN11Screen1View13drawTetrominoEiii>
 8005510:	e7be      	b.n	8005490 <_ZN11Screen1View15handleTickEventEv+0x5c>
                    currentY += BLOCK_SIZE;
 8005512:	f8c4 6c60 	str.w	r6, [r4, #3168]	@ 0xc60
                    drawTetromino(currentShape, currentX, currentY);
 8005516:	4633      	mov	r3, r6
 8005518:	463a      	mov	r2, r7
 800551a:	4641      	mov	r1, r8
 800551c:	4628      	mov	r0, r5
 800551e:	f7ff fb49 	bl	8004bb4 <_ZN11Screen1View13drawTetrominoEiii>
                while (!checkCollision(currentX, currentY + BLOCK_SIZE, currentShape)) 
 8005522:	f8d4 6c60 	ldr.w	r6, [r4, #3168]	@ 0xc60
 8005526:	f8d4 7c5c 	ldr.w	r7, [r4, #3164]	@ 0xc5c
 800552a:	f8d4 8c64 	ldr.w	r8, [r4, #3172]	@ 0xc64
 800552e:	360f      	adds	r6, #15
 8005530:	4643      	mov	r3, r8
 8005532:	4632      	mov	r2, r6
 8005534:	4639      	mov	r1, r7
 8005536:	4628      	mov	r0, r5
 8005538:	f7ff fabd 	bl	8004ab6 <_ZN11Screen1View14checkCollisionEiii>
 800553c:	2800      	cmp	r0, #0
 800553e:	d0e8      	beq.n	8005512 <_ZN11Screen1View15handleTickEventEv+0xde>
                freezeTetromino();
 8005540:	4628      	mov	r0, r5
 8005542:	f7ff ff0d 	bl	8005360 <_ZN11Screen1View15freezeTetrominoEv>
                createNewTetromino();
 8005546:	4628      	mov	r0, r5
 8005548:	f7ff fd54 	bl	8004ff4 <_ZN11Screen1View18createNewTetrominoEv>
 800554c:	e7a0      	b.n	8005490 <_ZN11Screen1View15handleTickEventEv+0x5c>
                rotateTetromino(); // Xoay hình nếu nhận được lệnh
 800554e:	4628      	mov	r0, r5
 8005550:	f7ff fb94 	bl	8004c7c <_ZN11Screen1View15rotateTetrominoEv>
 8005554:	e79c      	b.n	8005490 <_ZN11Screen1View15handleTickEventEv+0x5c>
            currentY += BLOCK_SIZE;
 8005556:	f8c4 6c60 	str.w	r6, [r4, #3168]	@ 0xc60
            drawTetromino(currentShape, currentX, currentY);
 800555a:	4633      	mov	r3, r6
 800555c:	4642      	mov	r2, r8
 800555e:	4639      	mov	r1, r7
 8005560:	4628      	mov	r0, r5
 8005562:	f7ff fb27 	bl	8004bb4 <_ZN11Screen1View13drawTetrominoEiii>
 8005566:	e7b0      	b.n	80054ca <_ZN11Screen1View15handleTickEventEv+0x96>
}
 8005568:	b002      	add	sp, #8
 800556a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800556e:	bf00      	nop
 8005570:	200003a8 	.word	0x200003a8

08005574 <_ZN16Screen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen2Presenter() {}
 8005574:	4770      	bx	lr

08005576 <_ZThn4_N16Screen2PresenterD1Ev>:
 8005576:	3804      	subs	r0, #4
 8005578:	4770      	bx	lr

0800557a <_ZN16Screen2Presenter10deactivateEv>:
}

void Screen2Presenter::activate()
{

}
 800557a:	4770      	bx	lr

0800557c <_ZN16Screen2PresenterD0Ev>:
 800557c:	b510      	push	{r4, lr}
 800557e:	2110      	movs	r1, #16
 8005580:	4604      	mov	r4, r0
 8005582:	f01e ff5a 	bl	802443a <_ZdlPvj>
 8005586:	4620      	mov	r0, r4
 8005588:	bd10      	pop	{r4, pc}

0800558a <_ZThn4_N16Screen2PresenterD0Ev>:
 800558a:	f1a0 0004 	sub.w	r0, r0, #4
 800558e:	e7f5      	b.n	800557c <_ZN16Screen2PresenterD0Ev>

08005590 <_ZN16Screen2PresenterC1ER11Screen2View>:
 8005590:	2200      	movs	r2, #0
 8005592:	6082      	str	r2, [r0, #8]
    : view(v)
 8005594:	4a02      	ldr	r2, [pc, #8]	@ (80055a0 <_ZN16Screen2PresenterC1ER11Screen2View+0x10>)
 8005596:	6002      	str	r2, [r0, #0]
 8005598:	3218      	adds	r2, #24
 800559a:	6042      	str	r2, [r0, #4]
 800559c:	60c1      	str	r1, [r0, #12]
}
 800559e:	4770      	bx	lr
 80055a0:	08027d84 	.word	0x08027d84

080055a4 <_ZN11Screen2View14tearDownScreenEv>:
}

void Screen2View::tearDownScreen()
{
    Screen2ViewBase::tearDownScreen();
}
 80055a4:	4770      	bx	lr
	...

080055a8 <_ZN11Screen2View11turnOnMode1Ev>:

void Screen2View::turnOnMode1()
{
 80055a8:	b513      	push	{r0, r1, r4, lr}
    // Implementation for turning on mode 1
    uint8_t mode = 0; 
    uint32_t count = osMessageQueueGetCount(Queue2Handle);
 80055aa:	4c08      	ldr	r4, [pc, #32]	@ (80055cc <_ZN11Screen2View11turnOnMode1Ev+0x24>)
    uint8_t mode = 0; 
 80055ac:	2300      	movs	r3, #0
    uint32_t count = osMessageQueueGetCount(Queue2Handle);
 80055ae:	6820      	ldr	r0, [r4, #0]
    uint8_t mode = 0; 
 80055b0:	f88d 3007 	strb.w	r3, [sp, #7]
    uint32_t count = osMessageQueueGetCount(Queue2Handle);
 80055b4:	f004 fc28 	bl	8009e08 <osMessageQueueGetCount>
    if (count < 1) 
 80055b8:	4602      	mov	r2, r0
 80055ba:	b928      	cbnz	r0, 80055c8 <_ZN11Screen2View11turnOnMode1Ev+0x20>
    {
        osMessageQueuePut(Queue2Handle, &mode, 0, 10);
 80055bc:	6820      	ldr	r0, [r4, #0]
 80055be:	230a      	movs	r3, #10
 80055c0:	f10d 0107 	add.w	r1, sp, #7
 80055c4:	f004 fbbf 	bl	8009d46 <osMessageQueuePut>
    }
}
 80055c8:	b002      	add	sp, #8
 80055ca:	bd10      	pop	{r4, pc}
 80055cc:	200003a4 	.word	0x200003a4

080055d0 <_ZN11Screen2View11turnOnMode2Ev>:

void Screen2View::turnOnMode2()
{
 80055d0:	b513      	push	{r0, r1, r4, lr}
    // Implementation for turning on mode 2
    uint8_t mode = 1; 
    uint32_t count = osMessageQueueGetCount(Queue2Handle);
 80055d2:	4c08      	ldr	r4, [pc, #32]	@ (80055f4 <_ZN11Screen2View11turnOnMode2Ev+0x24>)
    uint8_t mode = 1; 
 80055d4:	2301      	movs	r3, #1
    uint32_t count = osMessageQueueGetCount(Queue2Handle);
 80055d6:	6820      	ldr	r0, [r4, #0]
    uint8_t mode = 1; 
 80055d8:	f88d 3007 	strb.w	r3, [sp, #7]
    uint32_t count = osMessageQueueGetCount(Queue2Handle);
 80055dc:	f004 fc14 	bl	8009e08 <osMessageQueueGetCount>
    if (count < 1) 
 80055e0:	4602      	mov	r2, r0
 80055e2:	b928      	cbnz	r0, 80055f0 <_ZN11Screen2View11turnOnMode2Ev+0x20>
    {
        osMessageQueuePut(Queue2Handle, &mode, 0, 10);
 80055e4:	6820      	ldr	r0, [r4, #0]
 80055e6:	230a      	movs	r3, #10
 80055e8:	f10d 0107 	add.w	r1, sp, #7
 80055ec:	f004 fbab 	bl	8009d46 <osMessageQueuePut>
    }
}
 80055f0:	b002      	add	sp, #8
 80055f2:	bd10      	pop	{r4, pc}
 80055f4:	200003a4 	.word	0x200003a4

080055f8 <_ZN11Screen2ViewD1Ev>:

class Screen2View : public Screen2ViewBase
{
public:
    Screen2View();
    virtual ~Screen2View() {}
 80055f8:	b510      	push	{r4, lr}
 80055fa:	4b03      	ldr	r3, [pc, #12]	@ (8005608 <_ZN11Screen2ViewD1Ev+0x10>)
 80055fc:	6003      	str	r3, [r0, #0]
 80055fe:	4604      	mov	r4, r0
 8005600:	f7fe f93b 	bl	800387a <_ZN15Screen2ViewBaseD1Ev>
 8005604:	4620      	mov	r0, r4
 8005606:	bd10      	pop	{r4, pc}
 8005608:	08027dac 	.word	0x08027dac

0800560c <_ZN11Screen2ViewD0Ev>:
 800560c:	b510      	push	{r4, lr}
 800560e:	4604      	mov	r4, r0
 8005610:	f7ff fff2 	bl	80055f8 <_ZN11Screen2ViewD1Ev>
 8005614:	4620      	mov	r0, r4
 8005616:	f44f 7126 	mov.w	r1, #664	@ 0x298
 800561a:	f01e ff0e 	bl	802443a <_ZdlPvj>
 800561e:	4620      	mov	r0, r4
 8005620:	bd10      	pop	{r4, pc}
	...

08005624 <_ZN11Screen2ViewC1Ev>:
Screen2View::Screen2View()
 8005624:	b510      	push	{r4, lr}
 8005626:	4604      	mov	r4, r0
 8005628:	f7fe f982 	bl	8003930 <_ZN15Screen2ViewBaseC1Ev>
 800562c:	4b03      	ldr	r3, [pc, #12]	@ (800563c <_ZN11Screen2ViewC1Ev+0x18>)
 800562e:	6023      	str	r3, [r4, #0]
    tickCount = 0;
 8005630:	2300      	movs	r3, #0
 8005632:	f8c4 3294 	str.w	r3, [r4, #660]	@ 0x294
}
 8005636:	4620      	mov	r0, r4
 8005638:	bd10      	pop	{r4, pc}
 800563a:	bf00      	nop
 800563c:	08027dac 	.word	0x08027dac

08005640 <_ZN11Screen2View11setupScreenEv>:
    Screen2ViewBase::setupScreen();
 8005640:	f7fe b91c 	b.w	800387c <_ZN15Screen2ViewBase11setupScreenEv>

08005644 <_ZN11Screen2View15handleTickEventEv>:

void Screen2View::handleTickEvent()
{
    tickCount++;
 8005644:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
    switch(tickCount % 18) {
 8005648:	2212      	movs	r2, #18
    tickCount++;
 800564a:	3301      	adds	r3, #1
 800564c:	f8c0 3294 	str.w	r3, [r0, #660]	@ 0x294
    switch(tickCount % 18) {
 8005650:	fbb3 f1f2 	udiv	r1, r3, r2
 8005654:	fb02 3311 	mls	r3, r2, r1, r3
 8005658:	2b0f      	cmp	r3, #15
 800565a:	d818      	bhi.n	800568e <_ZN11Screen2View15handleTickEventEv+0x4a>
 800565c:	e8df f003 	tbb	[pc, r3]
 8005660:	0f171708 	.word	0x0f171708
 8005664:	171a1717 	.word	0x171a1717
 8005668:	17171e17 	.word	0x17171e17
 800566c:	2a171723 	.word	0x2a171723
        visible = vis;
 8005670:	2300      	movs	r3, #0
 8005672:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9
 8005676:	2301      	movs	r3, #1
 8005678:	f880 3115 	strb.w	r3, [r0, #277]	@ 0x115
 800567c:	e005      	b.n	800568a <_ZN11Screen2View15handleTickEventEv+0x46>
 800567e:	2300      	movs	r3, #0
 8005680:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9
 8005684:	f880 3115 	strb.w	r3, [r0, #277]	@ 0x115
 8005688:	2301      	movs	r3, #1
 800568a:	f880 30bd 	strb.w	r3, [r0, #189]	@ 0xbd
 800568e:	3004      	adds	r0, #4
 8005690:	f00d bab4 	b.w	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
 8005694:	2300      	movs	r3, #0
 8005696:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9
 800569a:	e7ed      	b.n	8005678 <_ZN11Screen2View15handleTickEventEv+0x34>
 800569c:	2301      	movs	r3, #1
 800569e:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9
 80056a2:	2300      	movs	r3, #0
 80056a4:	e7e8      	b.n	8005678 <_ZN11Screen2View15handleTickEventEv+0x34>
 80056a6:	2301      	movs	r3, #1
 80056a8:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9
 80056ac:	f880 3115 	strb.w	r3, [r0, #277]	@ 0x115
 80056b0:	2300      	movs	r3, #0
 80056b2:	e7ea      	b.n	800568a <_ZN11Screen2View15handleTickEventEv+0x46>
 80056b4:	2301      	movs	r3, #1
 80056b6:	e7ee      	b.n	8005696 <_ZN11Screen2View15handleTickEventEv+0x52>

080056b8 <_ZN16Screen3PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen3Presenter() {}
 80056b8:	4770      	bx	lr

080056ba <_ZThn4_N16Screen3PresenterD1Ev>:
 80056ba:	3804      	subs	r0, #4
 80056bc:	4770      	bx	lr

080056be <_ZN16Screen3Presenter10deactivateEv>:
}

void Screen3Presenter::activate()
{

}
 80056be:	4770      	bx	lr

080056c0 <_ZN16Screen3PresenterD0Ev>:
 80056c0:	b510      	push	{r4, lr}
 80056c2:	2110      	movs	r1, #16
 80056c4:	4604      	mov	r4, r0
 80056c6:	f01e feb8 	bl	802443a <_ZdlPvj>
 80056ca:	4620      	mov	r0, r4
 80056cc:	bd10      	pop	{r4, pc}

080056ce <_ZThn4_N16Screen3PresenterD0Ev>:
 80056ce:	f1a0 0004 	sub.w	r0, r0, #4
 80056d2:	e7f5      	b.n	80056c0 <_ZN16Screen3PresenterD0Ev>

080056d4 <_ZN16Screen3PresenterC1ER11Screen3View>:
 80056d4:	2200      	movs	r2, #0
 80056d6:	6082      	str	r2, [r0, #8]
    : view(v)
 80056d8:	4a02      	ldr	r2, [pc, #8]	@ (80056e4 <_ZN16Screen3PresenterC1ER11Screen3View+0x10>)
 80056da:	6002      	str	r2, [r0, #0]
 80056dc:	3218      	adds	r2, #24
 80056de:	6042      	str	r2, [r0, #4]
 80056e0:	60c1      	str	r1, [r0, #12]
}
 80056e2:	4770      	bx	lr
 80056e4:	08027de8 	.word	0x08027de8

080056e8 <_ZN11Screen3View14tearDownScreenEv>:
}

void Screen3View::tearDownScreen()
{
    Screen3ViewBase::tearDownScreen();
}
 80056e8:	4770      	bx	lr
	...

080056ec <_ZN11Screen3ViewD1Ev>:

class Screen3View : public Screen3ViewBase
{
public:
    Screen3View();
    virtual ~Screen3View() {}
 80056ec:	4b13      	ldr	r3, [pc, #76]	@ (800573c <_ZN11Screen3ViewD1Ev+0x50>)
 80056ee:	b570      	push	{r4, r5, r6, lr}
 80056f0:	4605      	mov	r5, r0
 80056f2:	6003      	str	r3, [r0, #0]
 80056f4:	f642 446c 	movw	r4, #11372	@ 0x2c6c
 80056f8:	f642 16ac 	movw	r6, #10668	@ 0x29ac
 80056fc:	42b4      	cmp	r4, r6
 80056fe:	d116      	bne.n	800572e <_ZN11Screen3ViewD1Ev+0x42>
 8005700:	f240 764c 	movw	r6, #1868	@ 0x74c
 8005704:	592b      	ldr	r3, [r5, r4]
 8005706:	1928      	adds	r0, r5, r4
 8005708:	681b      	ldr	r3, [r3, #0]
 800570a:	3c2c      	subs	r4, #44	@ 0x2c
 800570c:	4798      	blx	r3
 800570e:	42b4      	cmp	r4, r6
 8005710:	d1f8      	bne.n	8005704 <_ZN11Screen3ViewD1Ev+0x18>
 8005712:	f240 468c 	movw	r6, #1164	@ 0x48c
 8005716:	592b      	ldr	r3, [r5, r4]
 8005718:	1928      	adds	r0, r5, r4
 800571a:	681b      	ldr	r3, [r3, #0]
 800571c:	3c2c      	subs	r4, #44	@ 0x2c
 800571e:	4798      	blx	r3
 8005720:	42b4      	cmp	r4, r6
 8005722:	d1f8      	bne.n	8005716 <_ZN11Screen3ViewD1Ev+0x2a>
 8005724:	4628      	mov	r0, r5
 8005726:	f7fe fa2a 	bl	8003b7e <_ZN15Screen3ViewBaseD1Ev>
 800572a:	4628      	mov	r0, r5
 800572c:	bd70      	pop	{r4, r5, r6, pc}
 800572e:	592b      	ldr	r3, [r5, r4]
 8005730:	1928      	adds	r0, r5, r4
 8005732:	681b      	ldr	r3, [r3, #0]
 8005734:	4798      	blx	r3
 8005736:	3c2c      	subs	r4, #44	@ 0x2c
 8005738:	e7e0      	b.n	80056fc <_ZN11Screen3ViewD1Ev+0x10>
 800573a:	bf00      	nop
 800573c:	08027e10 	.word	0x08027e10

08005740 <_ZN11Screen3ViewD0Ev>:
 8005740:	b510      	push	{r4, lr}
 8005742:	4604      	mov	r4, r0
 8005744:	f7ff ffd2 	bl	80056ec <_ZN11Screen3ViewD1Ev>
 8005748:	4620      	mov	r0, r4
 800574a:	f642 41d8 	movw	r1, #11480	@ 0x2cd8
 800574e:	f01e fe74 	bl	802443a <_ZdlPvj>
 8005752:	4620      	mov	r0, r4
 8005754:	bd10      	pop	{r4, pc}

08005756 <_ZN11Screen3View14checkCollisionEiii>:
        }
    }
}

bool Screen3View::checkCollision(int newX, int newY, int shape)
{
 8005756:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800575a:	f500 5432 	add.w	r4, r0, #11392	@ 0x2c80
    for(int y = 0; y < 4; y++) {
        for(int x = 0; x < 4; x++) {
            if(currentTetromino[y][x]) {  // Thay đổi từ TETROMINOS sang currentTetromino
                int boardX = (newX - 20) / BLOCK_SIZE + x;
 800575e:	230f      	movs	r3, #15
 8005760:	3914      	subs	r1, #20
                int boardY = (newY - 10) / BLOCK_SIZE + y;
 8005762:	3a0a      	subs	r2, #10
                int boardX = (newX - 20) / BLOCK_SIZE + x;
 8005764:	fb91 f1f3 	sdiv	r1, r1, r3
                int boardY = (newY - 10) / BLOCK_SIZE + y;
 8005768:	fb92 f2f3 	sdiv	r2, r2, r3
 800576c:	3417      	adds	r4, #23
 800576e:	f102 0804 	add.w	r8, r2, #4
 8005772:	f101 0e04 	add.w	lr, r1, #4
 8005776:	f500 737c 	add.w	r3, r0, #1008	@ 0x3f0
 800577a:	f04f 0c0a 	mov.w	ip, #10
        for(int x = 0; x < 4; x++) {
 800577e:	460d      	mov	r5, r1
 8005780:	fb0c 3702 	mla	r7, ip, r2, r3
{
 8005784:	4626      	mov	r6, r4
            if(currentTetromino[y][x]) {  // Thay đổi từ TETROMINOS sang currentTetromino
 8005786:	f816 0f01 	ldrb.w	r0, [r6, #1]!
 800578a:	b128      	cbz	r0, 8005798 <_ZN11Screen3View14checkCollisionEiii+0x42>
                
                // Kiểm tra chạm đáy
                if(boardY >= BOARD_HEIGHT) return true;
 800578c:	2a13      	cmp	r2, #19
 800578e:	dc0d      	bgt.n	80057ac <_ZN11Screen3View14checkCollisionEiii+0x56>
                
                // Kiểm tra chạm biên
                if(boardX < 0 || boardX >= BOARD_WIDTH) return true;
 8005790:	2d09      	cmp	r5, #9
 8005792:	d80b      	bhi.n	80057ac <_ZN11Screen3View14checkCollisionEiii+0x56>
                
                // Kiểm tra chạm khối khác
                if(board[boardY][boardX]) return true;
 8005794:	5d78      	ldrb	r0, [r7, r5]
 8005796:	b950      	cbnz	r0, 80057ae <_ZN11Screen3View14checkCollisionEiii+0x58>
        for(int x = 0; x < 4; x++) {
 8005798:	3501      	adds	r5, #1
 800579a:	4575      	cmp	r5, lr
 800579c:	d1f3      	bne.n	8005786 <_ZN11Screen3View14checkCollisionEiii+0x30>
    for(int y = 0; y < 4; y++) {
 800579e:	3201      	adds	r2, #1
 80057a0:	4542      	cmp	r2, r8
 80057a2:	f104 0404 	add.w	r4, r4, #4
 80057a6:	d1ea      	bne.n	800577e <_ZN11Screen3View14checkCollisionEiii+0x28>
            }
        }
    }
    return false;
 80057a8:	2000      	movs	r0, #0
 80057aa:	e000      	b.n	80057ae <_ZN11Screen3View14checkCollisionEiii+0x58>
                if(boardY >= BOARD_HEIGHT) return true;
 80057ac:	2001      	movs	r0, #1
}
 80057ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080057b2 <_ZN11Screen3View11setupScreenEv>:
    Screen3ViewBase::setupScreen();
 80057b2:	f7fe b9e5 	b.w	8003b80 <_ZN15Screen3ViewBase11setupScreenEv>
	...

080057b8 <_ZN11Screen3View13drawTetrominoEiii>:
{
 80057b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80057bc:	b087      	sub	sp, #28
 80057be:	461c      	mov	r4, r3
        container.remove(d);
 80057c0:	1d03      	adds	r3, r0, #4
 80057c2:	4605      	mov	r5, r0
 80057c4:	4617      	mov	r7, r2
        for(int x = 0; x < 4; x++) {
 80057c6:	2600      	movs	r6, #0
 80057c8:	f500 6a97 	add.w	sl, r0, #1208	@ 0x4b8
 80057cc:	9300      	str	r3, [sp, #0]
 80057ce:	eb0a 0906 	add.w	r9, sl, r6
 80057d2:	f04f 0800 	mov.w	r8, #0
 80057d6:	4649      	mov	r1, r9
 80057d8:	9800      	ldr	r0, [sp, #0]
 80057da:	f108 0801 	add.w	r8, r8, #1
 80057de:	f006 fba8 	bl	800bf32 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80057e2:	f1b8 0f04 	cmp.w	r8, #4
 80057e6:	f109 092c 	add.w	r9, r9, #44	@ 0x2c
 80057ea:	d1f4      	bne.n	80057d6 <_ZN11Screen3View13drawTetrominoEiii+0x1e>
    for(int y = 0; y < 4; y++) {
 80057ec:	36b0      	adds	r6, #176	@ 0xb0
 80057ee:	f5b6 7f30 	cmp.w	r6, #704	@ 0x2c0
 80057f2:	d1ec      	bne.n	80057ce <_ZN11Screen3View13drawTetrominoEiii+0x16>
 80057f4:	b2bf      	uxth	r7, r7
 80057f6:	f107 023c 	add.w	r2, r7, #60	@ 0x3c
 80057fa:	f505 5832 	add.w	r8, r5, #11392	@ 0x2c80
 80057fe:	b292      	uxth	r2, r2
 8005800:	f108 0817 	add.w	r8, r8, #23
 8005804:	b2a4      	uxth	r4, r4
 8005806:	2300      	movs	r3, #0
 8005808:	9202      	str	r2, [sp, #8]
                blocks[y][x].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 800580a:	f505 5b00 	add.w	fp, r5, #8192	@ 0x2000
        for(int x = 0; x < 4; x++) {
 800580e:	eb05 0a03 	add.w	sl, r5, r3
 8005812:	463e      	mov	r6, r7
        for(int x = 0; x < 4; x++) {
 8005814:	f8cd 8004 	str.w	r8, [sp, #4]
            if(currentTetromino[y][x] == 1) {
 8005818:	9901      	ldr	r1, [sp, #4]
 800581a:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800581e:	9101      	str	r1, [sp, #4]
 8005820:	2a01      	cmp	r2, #1
 8005822:	d119      	bne.n	8005858 <_ZN11Screen3View13drawTetrominoEiii+0xa0>
                blocks[y][x].setXY(
 8005824:	f50a 6997 	add.w	r9, sl, #1208	@ 0x4b8
 8005828:	b222      	sxth	r2, r4
 800582a:	b231      	sxth	r1, r6
 800582c:	4648      	mov	r0, r9
 800582e:	9303      	str	r3, [sp, #12]
 8005830:	f7fd fdb9 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
                blocks[y][x].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 8005834:	4b11      	ldr	r3, [pc, #68]	@ (800587c <_ZN11Screen3View13drawTetrominoEiii+0xc4>)
 8005836:	f8db 1cb0 	ldr.w	r1, [fp, #3248]	@ 0xcb0
 800583a:	f8da 24b8 	ldr.w	r2, [sl, #1208]	@ 0x4b8
 800583e:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8005842:	6e12      	ldr	r2, [r2, #96]	@ 0x60
 8005844:	f8ad 1014 	strh.w	r1, [sp, #20]
 8005848:	4648      	mov	r0, r9
 800584a:	a905      	add	r1, sp, #20
 800584c:	4790      	blx	r2
        container.add(d);
 800584e:	9800      	ldr	r0, [sp, #0]
 8005850:	4649      	mov	r1, r9
 8005852:	f006 fb2d 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005856:	9b03      	ldr	r3, [sp, #12]
        for(int x = 0; x < 4; x++) {
 8005858:	9a02      	ldr	r2, [sp, #8]
 800585a:	360f      	adds	r6, #15
 800585c:	b2b6      	uxth	r6, r6
 800585e:	4296      	cmp	r6, r2
 8005860:	f10a 0a2c 	add.w	sl, sl, #44	@ 0x2c
 8005864:	d1d8      	bne.n	8005818 <_ZN11Screen3View13drawTetrominoEiii+0x60>
    for(int y = 0; y < 4; y++) {
 8005866:	33b0      	adds	r3, #176	@ 0xb0
 8005868:	340f      	adds	r4, #15
 800586a:	f5b3 7f30 	cmp.w	r3, #704	@ 0x2c0
 800586e:	f108 0804 	add.w	r8, r8, #4
 8005872:	b2a4      	uxth	r4, r4
 8005874:	d1cb      	bne.n	800580e <_ZN11Screen3View13drawTetrominoEiii+0x56>
}
 8005876:	b007      	add	sp, #28
 8005878:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800587c:	08027ec2 	.word	0x08027ec2

08005880 <_ZN11Screen3View15rotateTetrominoEv>:
        drawTetromino(currentShape, currentX, currentY);
    }
}

void Screen3View::rotateTetromino()
{
 8005880:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    // Hình O không cần xoay
    if (currentShape == 3) return;
 8005884:	f500 5400 	add.w	r4, r0, #8192	@ 0x2000
{
 8005888:	b089      	sub	sp, #36	@ 0x24
    if (currentShape == 3) return;
 800588a:	f8d4 7cb0 	ldr.w	r7, [r4, #3248]	@ 0xcb0
 800588e:	2f03      	cmp	r7, #3
{
 8005890:	4606      	mov	r6, r0
    if (currentShape == 3) return;
 8005892:	d066      	beq.n	8005962 <_ZN11Screen3View15rotateTetrominoEv+0xe2>
    
    uint8_t temp[4][4] = {0};
    uint8_t rotated[4][4] = {0};
 8005894:	ad04      	add	r5, sp, #16
 8005896:	2210      	movs	r2, #16
 8005898:	2100      	movs	r1, #0
 800589a:	4628      	mov	r0, r5
 800589c:	f01f ff11 	bl	80256c2 <memset>
    
    // Copy currentTetromino vào temp
    memcpy(temp, currentTetromino, sizeof(temp));
 80058a0:	46ec      	mov	ip, sp
 80058a2:	f604 4298 	addw	r2, r4, #3224	@ 0xc98
 80058a6:	f604 48a8 	addw	r8, r4, #3240	@ 0xca8
 80058aa:	4663      	mov	r3, ip
 80058ac:	6810      	ldr	r0, [r2, #0]
 80058ae:	6851      	ldr	r1, [r2, #4]
 80058b0:	46e6      	mov	lr, ip
 80058b2:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80058b6:	3208      	adds	r2, #8
 80058b8:	4542      	cmp	r2, r8
 80058ba:	46f4      	mov	ip, lr
 80058bc:	d1f6      	bne.n	80058ac <_ZN11Screen3View15rotateTetrominoEv+0x2c>

    // Xác định điểm trung tâm để xoay dựa vào loại hình
    int centerX, centerY;
    if (currentShape == 0) { // Hình I
        centerX = 2;
 80058be:	2f00      	cmp	r7, #0
 80058c0:	bf14      	ite	ne
 80058c2:	f04f 0801 	movne.w	r8, #1
 80058c6:	f04f 0802 	moveq.w	r8, #2
        centerX = 1;
        centerY = 1;
    }

    // Xoay 90 độ quanh điểm trung tâm
    for(int y = 0; y < 4; y++) {
 80058ca:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 80058ce:	2200      	movs	r2, #0
        for(int x = 0; x < 4; x++) {
 80058d0:	4628      	mov	r0, r5
 80058d2:	eba5 0c02 	sub.w	ip, r5, r2
 80058d6:	ebaa 0902 	sub.w	r9, sl, r2
        centerX = 1;
 80058da:	4619      	mov	r1, r3
        for(int x = 0; x < 4; x++) {
 80058dc:	f04f 0e00 	mov.w	lr, #0
            if (currentShape == 0) { // Xử lý đặc biệt cho hình I
 80058e0:	2f00      	cmp	r7, #0
 80058e2:	d141      	bne.n	8005968 <_ZN11Screen3View15rotateTetrominoEv+0xe8>
                rotated[x][3-y] = temp[y][x];
 80058e4:	f891 b000 	ldrb.w	fp, [r1]
 80058e8:	f88c b003 	strb.w	fp, [ip, #3]
        for(int x = 0; x < 4; x++) {
 80058ec:	f10e 0e01 	add.w	lr, lr, #1
 80058f0:	f1be 0f04 	cmp.w	lr, #4
 80058f4:	f101 0101 	add.w	r1, r1, #1
 80058f8:	f10c 0c04 	add.w	ip, ip, #4
 80058fc:	d1f0      	bne.n	80058e0 <_ZN11Screen3View15rotateTetrominoEv+0x60>
    for(int y = 0; y < 4; y++) {
 80058fe:	3201      	adds	r2, #1
 8005900:	2a04      	cmp	r2, #4
 8005902:	f103 0304 	add.w	r3, r3, #4
 8005906:	d1e3      	bne.n	80058d0 <_ZN11Screen3View15rotateTetrominoEv+0x50>
        }
    }

    // Kiểm tra va chạm với hình đã xoay
    bool canRotate = true;
    for(int y = 0; y < 4 && canRotate; y++) {
 8005908:	2100      	movs	r1, #0
        for(int x = 0; x < 4; x++) {
            if(rotated[y][x]) {
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 800590a:	f04f 0e0f 	mov.w	lr, #15
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
                
                if(boardX < 0 || boardX >= BOARD_WIDTH || 
                   boardY < 0 || boardY >= BOARD_HEIGHT ||
                   board[boardY][boardX]) {
 800590e:	f04f 080a 	mov.w	r8, #10
    for(int y = 0; y < 4; y++) {
 8005912:	4684      	mov	ip, r0
        for(int x = 0; x < 4; x++) {
 8005914:	2200      	movs	r2, #0
            if(rotated[y][x]) {
 8005916:	f81c 3b01 	ldrb.w	r3, [ip], #1
 800591a:	b1c3      	cbz	r3, 800594e <_ZN11Screen3View15rotateTetrominoEv+0xce>
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 800591c:	f8d4 3ca8 	ldr.w	r3, [r4, #3240]	@ 0xca8
 8005920:	f1a3 0914 	sub.w	r9, r3, #20
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8005924:	f8d4 3cac 	ldr.w	r3, [r4, #3244]	@ 0xcac
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8005928:	fb99 f9fe 	sdiv	r9, r9, lr
 800592c:	4491      	add	r9, r2
                if(boardX < 0 || boardX >= BOARD_WIDTH || 
 800592e:	f1b9 0f09 	cmp.w	r9, #9
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8005932:	f1a3 030a 	sub.w	r3, r3, #10
 8005936:	fb93 f3fe 	sdiv	r3, r3, lr
 800593a:	440b      	add	r3, r1
                if(boardX < 0 || boardX >= BOARD_WIDTH || 
 800593c:	d81c      	bhi.n	8005978 <_ZN11Screen3View15rotateTetrominoEv+0xf8>
 800593e:	2b13      	cmp	r3, #19
 8005940:	d81a      	bhi.n	8005978 <_ZN11Screen3View15rotateTetrominoEv+0xf8>
                   board[boardY][boardX]) {
 8005942:	fb08 6303 	mla	r3, r8, r3, r6
 8005946:	444b      	add	r3, r9
                   boardY < 0 || boardY >= BOARD_HEIGHT ||
 8005948:	f893 33f0 	ldrb.w	r3, [r3, #1008]	@ 0x3f0
 800594c:	b9a3      	cbnz	r3, 8005978 <_ZN11Screen3View15rotateTetrominoEv+0xf8>
        for(int x = 0; x < 4; x++) {
 800594e:	3201      	adds	r2, #1
 8005950:	2a04      	cmp	r2, #4
 8005952:	d1e0      	bne.n	8005916 <_ZN11Screen3View15rotateTetrominoEv+0x96>
 8005954:	2301      	movs	r3, #1
    for(int y = 0; y < 4 && canRotate; y++) {
 8005956:	3101      	adds	r1, #1
 8005958:	2904      	cmp	r1, #4
 800595a:	d00f      	beq.n	800597c <_ZN11Screen3View15rotateTetrominoEv+0xfc>
 800595c:	3004      	adds	r0, #4
 800595e:	2b00      	cmp	r3, #0
 8005960:	d1d7      	bne.n	8005912 <_ZN11Screen3View15rotateTetrominoEv+0x92>
        // Cập nhật currentTetromino với hình đã xoay
        memcpy(currentTetromino, rotated, sizeof(currentTetromino));
        drawTetromino(currentShape, currentX, currentY);
        invalidate();
    }
}
 8005962:	b009      	add	sp, #36	@ 0x24
 8005964:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                if(newX >= 0 && newX < 4 && newY >= 0 && newY < 4) {
 8005968:	f1b9 0f03 	cmp.w	r9, #3
                    rotated[newY][newX] = temp[y][x];
 800596c:	bf9c      	itt	ls
 800596e:	f891 b000 	ldrbls.w	fp, [r1]
 8005972:	f80c b018 	strbls.w	fp, [ip, r8, lsl #1]
 8005976:	e7b9      	b.n	80058ec <_ZN11Screen3View15rotateTetrominoEv+0x6c>
                    canRotate = false;
 8005978:	2300      	movs	r3, #0
 800597a:	e7ec      	b.n	8005956 <_ZN11Screen3View15rotateTetrominoEv+0xd6>
    if(canRotate) {
 800597c:	2b00      	cmp	r3, #0
 800597e:	d0f0      	beq.n	8005962 <_ZN11Screen3View15rotateTetrominoEv+0xe2>
        memcpy(currentTetromino, rotated, sizeof(currentTetromino));
 8005980:	f604 4298 	addw	r2, r4, #3224	@ 0xc98
 8005984:	f10d 0c20 	add.w	ip, sp, #32
 8005988:	462b      	mov	r3, r5
 800598a:	cb03      	ldmia	r3!, {r0, r1}
 800598c:	4563      	cmp	r3, ip
 800598e:	6010      	str	r0, [r2, #0]
 8005990:	6051      	str	r1, [r2, #4]
 8005992:	461d      	mov	r5, r3
 8005994:	f102 0208 	add.w	r2, r2, #8
 8005998:	d1f6      	bne.n	8005988 <_ZN11Screen3View15rotateTetrominoEv+0x108>
        drawTetromino(currentShape, currentX, currentY);
 800599a:	4630      	mov	r0, r6
 800599c:	f8d4 3cac 	ldr.w	r3, [r4, #3244]	@ 0xcac
 80059a0:	f8d4 2ca8 	ldr.w	r2, [r4, #3240]	@ 0xca8
 80059a4:	4639      	mov	r1, r7
 80059a6:	f7ff ff07 	bl	80057b8 <_ZN11Screen3View13drawTetrominoEiii>
        container.invalidate();
 80059aa:	1d30      	adds	r0, r6, #4
}
 80059ac:	b009      	add	sp, #36	@ 0x24
 80059ae:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80059b2:	f00d b923 	b.w	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
	...

080059b8 <_ZN11Screen3View17drawNextTetrominoEv>:
{
 80059b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    switch(nextShape) {
 80059bc:	f500 5b00 	add.w	fp, r0, #8192	@ 0x2000
{
 80059c0:	b085      	sub	sp, #20
    switch(nextShape) {
 80059c2:	f8db 2cb4 	ldr.w	r2, [fp, #3252]	@ 0xcb4
{
 80059c6:	4605      	mov	r5, r0
    switch(nextShape) {
 80059c8:	2a00      	cmp	r2, #0
 80059ca:	d057      	beq.n	8005a7c <_ZN11Screen3View17drawNextTetrominoEv+0xc4>
            NEXT_START_Y = 123;
 80059cc:	2a03      	cmp	r2, #3
 80059ce:	f04f 0a7b 	mov.w	sl, #123	@ 0x7b
 80059d2:	bf0c      	ite	eq
 80059d4:	f04f 09c3 	moveq.w	r9, #195	@ 0xc3
 80059d8:	f04f 09c0 	movne.w	r9, #192	@ 0xc0
    for(int y = 0; y < 4; y++) {
 80059dc:	f505 5827 	add.w	r8, r5, #10688	@ 0x29c0
        container.remove(d);
 80059e0:	1d2b      	adds	r3, r5, #4
        for(int x = 0; x < 4; x++) {
 80059e2:	2400      	movs	r4, #0
 80059e4:	f108 0818 	add.w	r8, r8, #24
 80059e8:	9301      	str	r3, [sp, #4]
 80059ea:	eb08 0704 	add.w	r7, r8, r4
 80059ee:	2600      	movs	r6, #0
 80059f0:	4639      	mov	r1, r7
 80059f2:	9801      	ldr	r0, [sp, #4]
 80059f4:	3601      	adds	r6, #1
 80059f6:	f006 fa9c 	bl	800bf32 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80059fa:	2e04      	cmp	r6, #4
 80059fc:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 8005a00:	d1f6      	bne.n	80059f0 <_ZN11Screen3View17drawNextTetrominoEv+0x38>
    for(int y = 0; y < 4; y++) {
 8005a02:	34b0      	adds	r4, #176	@ 0xb0
 8005a04:	f5b4 7f30 	cmp.w	r4, #704	@ 0x2c0
 8005a08:	d1ef      	bne.n	80059ea <_ZN11Screen3View17drawNextTetrominoEv+0x32>
    for(int y = 0; y < 4; y++) {
 8005a0a:	2400      	movs	r4, #0
        for(int x = 0; x < 4; x++) {
 8005a0c:	f642 17d8 	movw	r7, #10712	@ 0x29d8
 8005a10:	23b0      	movs	r3, #176	@ 0xb0
 8005a12:	fb03 7704 	mla	r7, r3, r4, r7
 8005a16:	2600      	movs	r6, #0
            if(TETROMINOS[nextShape][y][x] == 1) {
 8005a18:	f8db 2cb4 	ldr.w	r2, [fp, #3252]	@ 0xcb4
 8005a1c:	4b1a      	ldr	r3, [pc, #104]	@ (8005a88 <_ZN11Screen3View17drawNextTetrominoEv+0xd0>)
 8005a1e:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8005a22:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 8005a26:	5d92      	ldrb	r2, [r2, r6]
 8005a28:	2a01      	cmp	r2, #1
 8005a2a:	d11c      	bne.n	8005a66 <_ZN11Screen3View17drawNextTetrominoEv+0xae>
                nextBlocks[y][x].setXY(
 8005a2c:	eb04 02c4 	add.w	r2, r4, r4, lsl #3
 8005a30:	eb06 01c6 	add.w	r1, r6, r6, lsl #3
 8005a34:	eb05 0807 	add.w	r8, r5, r7
 8005a38:	4452      	add	r2, sl
 8005a3a:	4449      	add	r1, r9
 8005a3c:	b212      	sxth	r2, r2
 8005a3e:	b209      	sxth	r1, r1
 8005a40:	4640      	mov	r0, r8
 8005a42:	f7fd fcb0 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
                nextBlocks[y][x].setBitmap(Bitmap(TETROMINO_NEXT_IMAGES[nextShape]));
 8005a46:	f8db 1cb4 	ldr.w	r1, [fp, #3252]	@ 0xcb4
 8005a4a:	4b10      	ldr	r3, [pc, #64]	@ (8005a8c <_ZN11Screen3View17drawNextTetrominoEv+0xd4>)
 8005a4c:	59ea      	ldr	r2, [r5, r7]
 8005a4e:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8005a52:	f8ad 100c 	strh.w	r1, [sp, #12]
 8005a56:	4640      	mov	r0, r8
 8005a58:	a903      	add	r1, sp, #12
 8005a5a:	6e12      	ldr	r2, [r2, #96]	@ 0x60
 8005a5c:	4790      	blx	r2
        container.add(d);
 8005a5e:	9801      	ldr	r0, [sp, #4]
 8005a60:	4641      	mov	r1, r8
 8005a62:	f006 fa25 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        for(int x = 0; x < 4; x++) {
 8005a66:	3601      	adds	r6, #1
 8005a68:	2e04      	cmp	r6, #4
 8005a6a:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 8005a6e:	d1d3      	bne.n	8005a18 <_ZN11Screen3View17drawNextTetrominoEv+0x60>
    for(int y = 0; y < 4; y++) {
 8005a70:	3401      	adds	r4, #1
 8005a72:	2c04      	cmp	r4, #4
 8005a74:	d1ca      	bne.n	8005a0c <_ZN11Screen3View17drawNextTetrominoEv+0x54>
}
 8005a76:	b005      	add	sp, #20
 8005a78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            NEXT_START_Y = 127;
 8005a7c:	f04f 0a7f 	mov.w	sl, #127	@ 0x7f
            NEXT_START_X = 187;
 8005a80:	f04f 09bb 	mov.w	r9, #187	@ 0xbb
 8005a84:	e7aa      	b.n	80059dc <_ZN11Screen3View17drawNextTetrominoEv+0x24>
 8005a86:	bf00      	nop
 8005a88:	08027ed0 	.word	0x08027ed0
 8005a8c:	08027eb4 	.word	0x08027eb4

08005a90 <_ZN11Screen3ViewC1Ev>:
Screen3View::Screen3View() : 
 8005a90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005a94:	4604      	mov	r4, r0
 8005a96:	b08d      	sub	sp, #52	@ 0x34
    isWin(false)
 8005a98:	f7fe f8d6 	bl	8003c48 <_ZN15Screen3ViewBaseC1Ev>
 8005a9c:	4b7c      	ldr	r3, [pc, #496]	@ (8005c90 <_ZN11Screen3ViewC1Ev+0x200>)
 8005a9e:	6023      	str	r3, [r4, #0]
 8005aa0:	f504 6597 	add.w	r5, r4, #1208	@ 0x4b8
 8005aa4:	f504 66ef 	add.w	r6, r4, #1912	@ 0x778
 8005aa8:	f64f 78ff 	movw	r8, #65535	@ 0xffff
 8005aac:	f105 07b0 	add.w	r7, r5, #176	@ 0xb0
 8005ab0:	4628      	mov	r0, r5
 8005ab2:	a90a      	add	r1, sp, #40	@ 0x28
 8005ab4:	352c      	adds	r5, #44	@ 0x2c
 8005ab6:	f8ad 8028 	strh.w	r8, [sp, #40]	@ 0x28
 8005aba:	f7fd fcbb 	bl	8003434 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8005abe:	42bd      	cmp	r5, r7
 8005ac0:	d1f6      	bne.n	8005ab0 <_ZN11Screen3ViewC1Ev+0x20>
 8005ac2:	42b5      	cmp	r5, r6
 8005ac4:	d1f2      	bne.n	8005aac <_ZN11Screen3ViewC1Ev+0x1c>
 8005ac6:	f504 5527 	add.w	r5, r4, #10688	@ 0x29c0
 8005aca:	3518      	adds	r5, #24
 8005acc:	f64f 78ff 	movw	r8, #65535	@ 0xffff
 8005ad0:	f506 77dc 	add.w	r7, r6, #440	@ 0x1b8
 8005ad4:	4630      	mov	r0, r6
 8005ad6:	a90a      	add	r1, sp, #40	@ 0x28
 8005ad8:	362c      	adds	r6, #44	@ 0x2c
 8005ada:	f8ad 8028 	strh.w	r8, [sp, #40]	@ 0x28
 8005ade:	f7fd fca9 	bl	8003434 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8005ae2:	42be      	cmp	r6, r7
 8005ae4:	d1f6      	bne.n	8005ad4 <_ZN11Screen3ViewC1Ev+0x44>
 8005ae6:	42ae      	cmp	r6, r5
 8005ae8:	d1f2      	bne.n	8005ad0 <_ZN11Screen3ViewC1Ev+0x40>
 8005aea:	f504 5632 	add.w	r6, r4, #11392	@ 0x2c80
 8005aee:	3618      	adds	r6, #24
 8005af0:	f64f 78ff 	movw	r8, #65535	@ 0xffff
 8005af4:	f105 07b0 	add.w	r7, r5, #176	@ 0xb0
 8005af8:	4628      	mov	r0, r5
 8005afa:	a90a      	add	r1, sp, #40	@ 0x28
 8005afc:	352c      	adds	r5, #44	@ 0x2c
 8005afe:	f8ad 8028 	strh.w	r8, [sp, #40]	@ 0x28
 8005b02:	f7fd fc97 	bl	8003434 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8005b06:	42bd      	cmp	r5, r7
 8005b08:	d1f6      	bne.n	8005af8 <_ZN11Screen3ViewC1Ev+0x68>
 8005b0a:	42b5      	cmp	r5, r6
 8005b0c:	d1f2      	bne.n	8005af4 <_ZN11Screen3ViewC1Ev+0x64>
    currentX(80),
 8005b0e:	f504 5500 	add.w	r5, r4, #8192	@ 0x2000
 8005b12:	2350      	movs	r3, #80	@ 0x50
 8005b14:	f8c5 3ca8 	str.w	r3, [r5, #3240]	@ 0xca8
    currentY(10),
 8005b18:	230a      	movs	r3, #10
    currentShape(0),
 8005b1a:	2100      	movs	r1, #0
    currentY(10),
 8005b1c:	f8c5 3cac 	str.w	r3, [r5, #3244]	@ 0xcac
    nextShape(1),  // Khởi tạo shape tiếp theo
 8005b20:	2301      	movs	r3, #1
 8005b22:	f8c5 3cb4 	str.w	r3, [r5, #3252]	@ 0xcb4
    currentShape(0),
 8005b26:	f8c5 1cb0 	str.w	r1, [r5, #3248]	@ 0xcb0
    tickCount(0),
 8005b2a:	f8c5 1cb8 	str.w	r1, [r5, #3256]	@ 0xcb8
    isGameOver(false),
 8005b2e:	f8a5 1cc0 	strh.w	r1, [r5, #3264]	@ 0xcc0
    memset(board, 0, sizeof(board));
 8005b32:	22c8      	movs	r2, #200	@ 0xc8
 8005b34:	f504 707c 	add.w	r0, r4, #1008	@ 0x3f0
 8005b38:	f01f fdc3 	bl	80256c2 <memset>
    memcpy(currentTetromino, TETROMINOS[currentShape], sizeof(currentTetromino));
 8005b3c:	4b55      	ldr	r3, [pc, #340]	@ (8005c94 <_ZN11Screen3ViewC1Ev+0x204>)
 8005b3e:	f605 4598 	addw	r5, r5, #3224	@ 0xc98
 8005b42:	f103 0210 	add.w	r2, r3, #16
 8005b46:	f853 1b04 	ldr.w	r1, [r3], #4
 8005b4a:	f845 1b04 	str.w	r1, [r5], #4
 8005b4e:	4293      	cmp	r3, r2
 8005b50:	d1f9      	bne.n	8005b46 <_ZN11Screen3ViewC1Ev+0xb6>
    drawTetromino(currentShape, currentX, currentY);
 8005b52:	230a      	movs	r3, #10
 8005b54:	2250      	movs	r2, #80	@ 0x50
 8005b56:	2100      	movs	r1, #0
 8005b58:	4620      	mov	r0, r4
 8005b5a:	f7ff fe2d 	bl	80057b8 <_ZN11Screen3View13drawTetrominoEiii>
    drawNextTetromino();
 8005b5e:	4620      	mov	r0, r4
 8005b60:	f7ff ff2a 	bl	80059b8 <_ZN11Screen3View17drawNextTetrominoEv>
    for(int i = 0; i < 7; i++) {
 8005b64:	f8df a13c 	ldr.w	sl, [pc, #316]	@ 8005ca4 <_ZN11Screen3ViewC1Ev+0x214>
    drawNextTetromino();
 8005b68:	f04f 0907 	mov.w	r9, #7
        int shape = INIT_BLOCKS[i][2];
 8005b6c:	f8da 3008 	ldr.w	r3, [sl, #8]
 8005b70:	9303      	str	r3, [sp, #12]
        int blockY = INIT_BLOCKS[i][1];
 8005b72:	e9da 0500 	ldrd	r0, r5, [sl]
        for(int y = 0; y < 4; y++) {
 8005b76:	9a03      	ldr	r2, [sp, #12]
 8005b78:	4b46      	ldr	r3, [pc, #280]	@ (8005c94 <_ZN11Screen3ViewC1Ev+0x204>)
                    int boardY = (blockY - 10) / BLOCK_SIZE + y;
 8005b7a:	260f      	movs	r6, #15
 8005b7c:	f1a5 010a 	sub.w	r1, r5, #10
 8005b80:	f44f 7bdc 	mov.w	fp, #440	@ 0x1b8
 8005b84:	fb91 f1f6 	sdiv	r1, r1, r6
 8005b88:	b2ad      	uxth	r5, r5
 8005b8a:	eb03 1302 	add.w	r3, r3, r2, lsl #4
                    int boardX = (blockX - 20) / BLOCK_SIZE + x;
 8005b8e:	f1a0 0214 	sub.w	r2, r0, #20
 8005b92:	fb92 f2f6 	sdiv	r2, r2, r6
 8005b96:	260a      	movs	r6, #10
 8005b98:	f502 777c 	add.w	r7, r2, #1008	@ 0x3f0
 8005b9c:	fb06 7701 	mla	r7, r6, r1, r7
 8005ba0:	fb0b fb01 	mul.w	fp, fp, r1
 8005ba4:	f105 013c 	add.w	r1, r5, #60	@ 0x3c
 8005ba8:	b289      	uxth	r1, r1
 8005baa:	9107      	str	r1, [sp, #28]
 8005bac:	212c      	movs	r1, #44	@ 0x2c
 8005bae:	fb01 4202 	mla	r2, r1, r2, r4
 8005bb2:	9208      	str	r2, [sp, #32]
 8005bb4:	b282      	uxth	r2, r0
 8005bb6:	9204      	str	r2, [sp, #16]
 8005bb8:	323c      	adds	r2, #60	@ 0x3c
 8005bba:	b292      	uxth	r2, r2
 8005bbc:	4427      	add	r7, r4
 8005bbe:	9206      	str	r2, [sp, #24]
                    staticBlocks[boardY][boardX].setXY(
 8005bc0:	b22a      	sxth	r2, r5
 8005bc2:	9205      	str	r2, [sp, #20]
 8005bc4:	9a08      	ldr	r2, [sp, #32]
 8005bc6:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8005bca:	e9cd 7301 	strd	r7, r3, [sp, #4]
 8005bce:	f502 66ef 	add.w	r6, r2, #1912	@ 0x778
 8005bd2:	445e      	add	r6, fp
                if(TETROMINOS[shape][y][x]) {
 8005bd4:	9902      	ldr	r1, [sp, #8]
 8005bd6:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005bda:	9102      	str	r1, [sp, #8]
 8005bdc:	b1d2      	cbz	r2, 8005c14 <_ZN11Screen3ViewC1Ev+0x184>
 8005bde:	9309      	str	r3, [sp, #36]	@ 0x24
                    board[boardY][boardX] = true;
 8005be0:	9b01      	ldr	r3, [sp, #4]
 8005be2:	f04f 0201 	mov.w	r2, #1
 8005be6:	701a      	strb	r2, [r3, #0]
                    staticBlocks[boardY][boardX].setXY(
 8005be8:	fa0f f188 	sxth.w	r1, r8
 8005bec:	9a05      	ldr	r2, [sp, #20]
 8005bee:	4630      	mov	r0, r6
 8005bf0:	f7fd fbd9 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
                    staticBlocks[boardY][boardX].setBitmap(Bitmap(TETROMINO_IMAGES[shape]));
 8005bf4:	4b28      	ldr	r3, [pc, #160]	@ (8005c98 <_ZN11Screen3ViewC1Ev+0x208>)
 8005bf6:	9903      	ldr	r1, [sp, #12]
 8005bf8:	6832      	ldr	r2, [r6, #0]
 8005bfa:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8005bfe:	6e12      	ldr	r2, [r2, #96]	@ 0x60
 8005c00:	f8ad 1028 	strh.w	r1, [sp, #40]	@ 0x28
 8005c04:	4630      	mov	r0, r6
 8005c06:	a90a      	add	r1, sp, #40	@ 0x28
 8005c08:	4790      	blx	r2
 8005c0a:	4631      	mov	r1, r6
 8005c0c:	1d20      	adds	r0, r4, #4
 8005c0e:	f006 f94f 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005c12:	9b09      	ldr	r3, [sp, #36]	@ 0x24
            for(int x = 0; x < 4; x++) {
 8005c14:	9a01      	ldr	r2, [sp, #4]
 8005c16:	3201      	adds	r2, #1
 8005c18:	9201      	str	r2, [sp, #4]
 8005c1a:	f108 080f 	add.w	r8, r8, #15
 8005c1e:	9a06      	ldr	r2, [sp, #24]
 8005c20:	fa1f f888 	uxth.w	r8, r8
 8005c24:	4590      	cmp	r8, r2
 8005c26:	f106 062c 	add.w	r6, r6, #44	@ 0x2c
 8005c2a:	d1d3      	bne.n	8005bd4 <_ZN11Screen3ViewC1Ev+0x144>
        for(int y = 0; y < 4; y++) {
 8005c2c:	9a07      	ldr	r2, [sp, #28]
 8005c2e:	350f      	adds	r5, #15
 8005c30:	b2ad      	uxth	r5, r5
 8005c32:	4295      	cmp	r5, r2
 8005c34:	f50b 7bdc 	add.w	fp, fp, #440	@ 0x1b8
 8005c38:	f103 0304 	add.w	r3, r3, #4
 8005c3c:	f107 070a 	add.w	r7, r7, #10
 8005c40:	d1be      	bne.n	8005bc0 <_ZN11Screen3ViewC1Ev+0x130>
    for(int i = 0; i < 7; i++) {
 8005c42:	f1b9 0901 	subs.w	r9, r9, #1
 8005c46:	f10a 0a0c 	add.w	sl, sl, #12
 8005c4a:	d18f      	bne.n	8005b6c <_ZN11Screen3ViewC1Ev+0xdc>
    score = 0;
 8005c4c:	f504 5300 	add.w	r3, r4, #8192	@ 0x2000
    Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 8005c50:	f504 5533 	add.w	r5, r4, #11456	@ 0x2cc0
 8005c54:	3502      	adds	r5, #2
 8005c56:	4a11      	ldr	r2, [pc, #68]	@ (8005c9c <_ZN11Screen3ViewC1Ev+0x20c>)
    score = 0;
 8005c58:	f8c3 9cbc 	str.w	r9, [r3, #3260]	@ 0xcbc
    Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 8005c5c:	2114      	movs	r1, #20
 8005c5e:	464b      	mov	r3, r9
 8005c60:	4628      	mov	r0, r5
 8005c62:	f00f fab1 	bl	80151c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8005c66:	f8c4 5158 	str.w	r5, [r4, #344]	@ 0x158
 8005c6a:	4b0d      	ldr	r3, [pc, #52]	@ (8005ca0 <_ZN11Screen3ViewC1Ev+0x210>)
 8005c6c:	930a      	str	r3, [sp, #40]	@ 0x28
    textArea1.setTypedText(touchgfx::TypedText(T_TOADOX));
 8005c6e:	f504 7588 	add.w	r5, r4, #272	@ 0x110
 8005c72:	230c      	movs	r3, #12
 8005c74:	a90a      	add	r1, sp, #40	@ 0x28
 8005c76:	4628      	mov	r0, r5
 8005c78:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8005c7c:	f009 f8b4 	bl	800ede8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea1.invalidate(); // Vẽ lại nội dung};
 8005c80:	4628      	mov	r0, r5
 8005c82:	f00c ffbb 	bl	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8005c86:	4620      	mov	r0, r4
 8005c88:	b00d      	add	sp, #52	@ 0x34
 8005c8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005c8e:	bf00      	nop
 8005c90:	08027e10 	.word	0x08027e10
 8005c94:	08027ed0 	.word	0x08027ed0
 8005c98:	08027ec2 	.word	0x08027ec2
 8005c9c:	0802723d 	.word	0x0802723d
 8005ca0:	08027840 	.word	0x08027840
 8005ca4:	08027e3c 	.word	0x08027e3c

08005ca8 <_ZN11Screen3View11clearScreenEv>:

void Screen3View::clearScreen()
{
 8005ca8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005cac:	4604      	mov	r4, r0
    for(int y = 0; y < 4; y++) {
        for(int x = 0; x < 4; x++) {
 8005cae:	2500      	movs	r5, #0
 8005cb0:	f500 6997 	add.w	r9, r0, #1208	@ 0x4b8
        container.remove(d);
 8005cb4:	f100 0804 	add.w	r8, r0, #4
 8005cb8:	eb09 0705 	add.w	r7, r9, r5
 8005cbc:	2600      	movs	r6, #0
 8005cbe:	4639      	mov	r1, r7
 8005cc0:	4640      	mov	r0, r8
 8005cc2:	3601      	adds	r6, #1
 8005cc4:	f006 f935 	bl	800bf32 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8005cc8:	2e04      	cmp	r6, #4
 8005cca:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 8005cce:	d1f6      	bne.n	8005cbe <_ZN11Screen3View11clearScreenEv+0x16>
    for(int y = 0; y < 4; y++) {
 8005cd0:	35b0      	adds	r5, #176	@ 0xb0
 8005cd2:	f5b5 7f30 	cmp.w	r5, #704	@ 0x2c0
 8005cd6:	d1ef      	bne.n	8005cb8 <_ZN11Screen3View11clearScreenEv+0x10>
 8005cd8:	f06f 0a2a 	mvn.w	sl, #42	@ 0x2a
 8005cdc:	f204 39ef 	addw	r9, r4, #1007	@ 0x3ef
 8005ce0:	fb04 fa0a 	mul.w	sl, r4, sl
 8005ce4:	2700      	movs	r7, #0
    
    // Xóa tất cả khối cố định trên board
    for(int y = 0; y < BOARD_HEIGHT; y++) {
        for(int x = 0; x < BOARD_WIDTH; x++) {
            if(board[y][x]) {
                remove(staticBlocks[y][x]);
 8005ce6:	f04f 0b2c 	mov.w	fp, #44	@ 0x2c
        for(int x = 0; x < 4; x++) {
 8005cea:	464e      	mov	r6, r9
 8005cec:	250a      	movs	r5, #10
            if(board[y][x]) {
 8005cee:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 8005cf2:	b14a      	cbz	r2, 8005d08 <_ZN11Screen3View11clearScreenEv+0x60>
                remove(staticBlocks[y][x]);
 8005cf4:	fb0b a106 	mla	r1, fp, r6, sl
 8005cf8:	f5a1 4125 	sub.w	r1, r1, #42240	@ 0xa500
 8005cfc:	39c8      	subs	r1, #200	@ 0xc8
 8005cfe:	4640      	mov	r0, r8
 8005d00:	f006 f917 	bl	800bf32 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
                board[y][x] = false;
 8005d04:	2300      	movs	r3, #0
 8005d06:	7033      	strb	r3, [r6, #0]
        for(int x = 0; x < BOARD_WIDTH; x++) {
 8005d08:	3d01      	subs	r5, #1
 8005d0a:	d1f0      	bne.n	8005cee <_ZN11Screen3View11clearScreenEv+0x46>
    for(int y = 0; y < BOARD_HEIGHT; y++) {
 8005d0c:	f507 77dc 	add.w	r7, r7, #440	@ 0x1b8
 8005d10:	f242 2260 	movw	r2, #8800	@ 0x2260
 8005d14:	4297      	cmp	r7, r2
 8005d16:	f109 090a 	add.w	r9, r9, #10
 8005d1a:	d1e6      	bne.n	8005cea <_ZN11Screen3View11clearScreenEv+0x42>
 8005d1c:	f504 5427 	add.w	r4, r4, #10688	@ 0x29c0
 8005d20:	3418      	adds	r4, #24
        }
    }
    
    // Xóa khối tiếp theo
    for(int y = 0; y < 4; y++) {
        for(int x = 0; x < 4; x++) {
 8005d22:	1967      	adds	r7, r4, r5
 8005d24:	2600      	movs	r6, #0
 8005d26:	4639      	mov	r1, r7
 8005d28:	4640      	mov	r0, r8
 8005d2a:	3601      	adds	r6, #1
 8005d2c:	f006 f901 	bl	800bf32 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8005d30:	2e04      	cmp	r6, #4
 8005d32:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 8005d36:	d1f6      	bne.n	8005d26 <_ZN11Screen3View11clearScreenEv+0x7e>
    for(int y = 0; y < 4; y++) {
 8005d38:	35b0      	adds	r5, #176	@ 0xb0
 8005d3a:	f5b5 7f30 	cmp.w	r5, #704	@ 0x2c0
 8005d3e:	d1f0      	bne.n	8005d22 <_ZN11Screen3View11clearScreenEv+0x7a>
            remove(nextBlocks[y][x]);
        }
    }
}
 8005d40:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005d44 <_ZN11Screen3View18createNewTetrominoEv>:
{
 8005d44:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    if (isGameOver || isWin) {
 8005d46:	f500 5500 	add.w	r5, r0, #8192	@ 0x2000
{
 8005d4a:	4604      	mov	r4, r0
    if (isGameOver || isWin) {
 8005d4c:	f895 3cc0 	ldrb.w	r3, [r5, #3264]	@ 0xcc0
 8005d50:	2b00      	cmp	r3, #0
 8005d52:	f040 8098 	bne.w	8005e86 <_ZN11Screen3View18createNewTetrominoEv+0x142>
 8005d56:	f895 3cc1 	ldrb.w	r3, [r5, #3265]	@ 0xcc1
 8005d5a:	2b00      	cmp	r3, #0
 8005d5c:	f040 8093 	bne.w	8005e86 <_ZN11Screen3View18createNewTetrominoEv+0x142>
    currentShape = nextShape;
 8005d60:	f8d5 1cb4 	ldr.w	r1, [r5, #3252]	@ 0xcb4
 8005d64:	f8c5 1cb0 	str.w	r1, [r5, #3248]	@ 0xcb0
    currentY = 10;
 8005d68:	230a      	movs	r3, #10
 8005d6a:	f8c5 3cac 	str.w	r3, [r5, #3244]	@ 0xcac
    currentX = 80;
 8005d6e:	2350      	movs	r3, #80	@ 0x50
    nextShape = (nextShape + 1) % TETRIS_SHAPES;
 8005d70:	1c4a      	adds	r2, r1, #1
    currentX = 80;
 8005d72:	f8c5 3ca8 	str.w	r3, [r5, #3240]	@ 0xca8
    nextShape = (nextShape + 1) % TETRIS_SHAPES;
 8005d76:	2307      	movs	r3, #7
 8005d78:	fb92 f3f3 	sdiv	r3, r2, r3
 8005d7c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 8005d80:	1ad2      	subs	r2, r2, r3
    memcpy(currentTetromino, TETROMINOS[currentShape], sizeof(currentTetromino));
 8005d82:	4b42      	ldr	r3, [pc, #264]	@ (8005e8c <_ZN11Screen3View18createNewTetrominoEv+0x148>)
    nextShape = (nextShape + 1) % TETRIS_SHAPES;
 8005d84:	f8c5 2cb4 	str.w	r2, [r5, #3252]	@ 0xcb4
    memcpy(currentTetromino, TETROMINOS[currentShape], sizeof(currentTetromino));
 8005d88:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 8005d8c:	f500 5232 	add.w	r2, r0, #11392	@ 0x2c80
 8005d90:	3218      	adds	r2, #24
 8005d92:	f103 0110 	add.w	r1, r3, #16
 8005d96:	f853 0b04 	ldr.w	r0, [r3], #4
 8005d9a:	f842 0b04 	str.w	r0, [r2], #4
 8005d9e:	428b      	cmp	r3, r1
 8005da0:	d1f9      	bne.n	8005d96 <_ZN11Screen3View18createNewTetrominoEv+0x52>
    drawNextTetromino();
 8005da2:	4620      	mov	r0, r4
 8005da4:	f7ff fe08 	bl	80059b8 <_ZN11Screen3View17drawNextTetrominoEv>
    for(int y = 0; y < 4 && canCreate; y++) {
 8005da8:	f504 5132 	add.w	r1, r4, #11392	@ 0x2c80
 8005dac:	3117      	adds	r1, #23
 8005dae:	2600      	movs	r6, #0
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8005db0:	f04f 0c0f 	mov.w	ip, #15
{
 8005db4:	460f      	mov	r7, r1
        for(int x = 0; x < 4; x++) {
 8005db6:	2000      	movs	r0, #0
            if(currentTetromino[y][x]) {  // Nếu ô này có khối
 8005db8:	f817 3f01 	ldrb.w	r3, [r7, #1]!
 8005dbc:	b1c3      	cbz	r3, 8005df0 <_ZN11Screen3View18createNewTetrominoEv+0xac>
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8005dbe:	f8d5 2ca8 	ldr.w	r2, [r5, #3240]	@ 0xca8
 8005dc2:	3a14      	subs	r2, #20
 8005dc4:	fb92 f2fc 	sdiv	r2, r2, ip
 8005dc8:	4402      	add	r2, r0
                if(boardX >= 0 && boardX < BOARD_WIDTH && 
 8005dca:	2a09      	cmp	r2, #9
 8005dcc:	d810      	bhi.n	8005df0 <_ZN11Screen3View18createNewTetrominoEv+0xac>
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8005dce:	f8d5 3cac 	ldr.w	r3, [r5, #3244]	@ 0xcac
 8005dd2:	3b0a      	subs	r3, #10
 8005dd4:	fb93 f3fc 	sdiv	r3, r3, ip
 8005dd8:	4433      	add	r3, r6
                if(boardX >= 0 && boardX < BOARD_WIDTH && 
 8005dda:	2b13      	cmp	r3, #19
 8005ddc:	d808      	bhi.n	8005df0 <_ZN11Screen3View18createNewTetrominoEv+0xac>
                   board[boardY][boardX]) {
 8005dde:	f04f 0e0a 	mov.w	lr, #10
 8005de2:	fb0e 4303 	mla	r3, lr, r3, r4
 8005de6:	4413      	add	r3, r2
                   boardY >= 0 && boardY < BOARD_HEIGHT && 
 8005de8:	f893 33f0 	ldrb.w	r3, [r3, #1008]	@ 0x3f0
 8005dec:	2b00      	cmp	r3, #0
 8005dee:	d13a      	bne.n	8005e66 <_ZN11Screen3View18createNewTetrominoEv+0x122>
        for(int x = 0; x < 4; x++) {
 8005df0:	3001      	adds	r0, #1
 8005df2:	2804      	cmp	r0, #4
 8005df4:	d1e0      	bne.n	8005db8 <_ZN11Screen3View18createNewTetrominoEv+0x74>
 8005df6:	2301      	movs	r3, #1
    for(int y = 0; y < 4 && canCreate; y++) {
 8005df8:	3601      	adds	r6, #1
 8005dfa:	2e04      	cmp	r6, #4
 8005dfc:	d035      	beq.n	8005e6a <_ZN11Screen3View18createNewTetrominoEv+0x126>
 8005dfe:	3104      	adds	r1, #4
 8005e00:	2b00      	cmp	r3, #0
 8005e02:	d1d7      	bne.n	8005db4 <_ZN11Screen3View18createNewTetrominoEv+0x70>
        isGameOver = true;
 8005e04:	2601      	movs	r6, #1
 8005e06:	f885 6cc0 	strb.w	r6, [r5, #3264]	@ 0xcc0
        clearScreen();
 8005e0a:	4620      	mov	r0, r4
        Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 8005e0c:	f504 5733 	add.w	r7, r4, #11456	@ 0x2cc0
        clearScreen();
 8005e10:	f7ff ff4a 	bl	8005ca8 <_ZN11Screen3View11clearScreenEv>
        Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 8005e14:	3702      	adds	r7, #2
 8005e16:	2300      	movs	r3, #0
 8005e18:	4a1d      	ldr	r2, [pc, #116]	@ (8005e90 <_ZN11Screen3View18createNewTetrominoEv+0x14c>)
 8005e1a:	f884 30bd 	strb.w	r3, [r4, #189]	@ 0xbd
 8005e1e:	f884 6181 	strb.w	r6, [r4, #385]	@ 0x181
 8005e22:	f8d5 3cbc 	ldr.w	r3, [r5, #3260]	@ 0xcbc
 8005e26:	f884 61d9 	strb.w	r6, [r4, #473]	@ 0x1d9
 8005e2a:	f884 6251 	strb.w	r6, [r4, #593]	@ 0x251
 8005e2e:	2114      	movs	r1, #20
 8005e30:	4638      	mov	r0, r7
 8005e32:	f00f f9c9 	bl	80151c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        textArea2.setTypedText(touchgfx::TypedText(T_MAN3SCORE));
 8005e36:	f504 7565 	add.w	r5, r4, #916	@ 0x394
 8005e3a:	4b16      	ldr	r3, [pc, #88]	@ (8005e94 <_ZN11Screen3View18createNewTetrominoEv+0x150>)
 8005e3c:	9300      	str	r3, [sp, #0]
 8005e3e:	4669      	mov	r1, sp
 8005e40:	2306      	movs	r3, #6
 8005e42:	4628      	mov	r0, r5
 8005e44:	f884 63b9 	strb.w	r6, [r4, #953]	@ 0x3b9
 8005e48:	f8c4 73dc 	str.w	r7, [r4, #988]	@ 0x3dc
 8005e4c:	f8ad 3004 	strh.w	r3, [sp, #4]
 8005e50:	f008 ffca 	bl	800ede8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        textArea2.invalidate(); // Vẽ lại nội dung
 8005e54:	4628      	mov	r0, r5
 8005e56:	f00c fed1 	bl	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
        container.invalidate();
 8005e5a:	1d20      	adds	r0, r4, #4
}
 8005e5c:	b003      	add	sp, #12
 8005e5e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8005e62:	f00c becb 	b.w	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
                    canCreate = false;
 8005e66:	2300      	movs	r3, #0
 8005e68:	e7c6      	b.n	8005df8 <_ZN11Screen3View18createNewTetrominoEv+0xb4>
    if (!canCreate) {
 8005e6a:	2b00      	cmp	r3, #0
 8005e6c:	d0ca      	beq.n	8005e04 <_ZN11Screen3View18createNewTetrominoEv+0xc0>
        drawTetromino(currentShape, currentX, currentY);
 8005e6e:	f8d5 3cac 	ldr.w	r3, [r5, #3244]	@ 0xcac
 8005e72:	f8d5 2ca8 	ldr.w	r2, [r5, #3240]	@ 0xca8
 8005e76:	f8d5 1cb0 	ldr.w	r1, [r5, #3248]	@ 0xcb0
 8005e7a:	4620      	mov	r0, r4
}
 8005e7c:	b003      	add	sp, #12
 8005e7e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
        drawTetromino(currentShape, currentX, currentY);
 8005e82:	f7ff bc99 	b.w	80057b8 <_ZN11Screen3View13drawTetrominoEiii>
}
 8005e86:	b003      	add	sp, #12
 8005e88:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005e8a:	bf00      	nop
 8005e8c:	08027ed0 	.word	0x08027ed0
 8005e90:	0802723d 	.word	0x0802723d
 8005e94:	08027840 	.word	0x08027840

08005e98 <_ZN11Screen3View18checkAndClearLinesEv>:
{
 8005e98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005e9c:	b09d      	sub	sp, #116	@ 0x74
 8005e9e:	4604      	mov	r4, r0
    int fullLines[BOARD_HEIGHT] = {0};  // Track which lines are full
 8005ea0:	2250      	movs	r2, #80	@ 0x50
 8005ea2:	2100      	movs	r1, #0
 8005ea4:	a808      	add	r0, sp, #32
 8005ea6:	f01f fc0c 	bl	80256c2 <memset>
    int numFullLines = 0;
 8005eaa:	2500      	movs	r5, #0
 8005eac:	f204 42ad 	addw	r2, r4, #1197	@ 0x4ad
    for(int y = BOARD_HEIGHT - 1; y >= 0; y--) {
 8005eb0:	2313      	movs	r3, #19
{
 8005eb2:	4610      	mov	r0, r2
        for(int x = 0; x < BOARD_WIDTH; x++) {
 8005eb4:	2100      	movs	r1, #0
            if(!board[y][x]) {
 8005eb6:	f810 6f01 	ldrb.w	r6, [r0, #1]!
 8005eba:	b146      	cbz	r6, 8005ece <_ZN11Screen3View18checkAndClearLinesEv+0x36>
        for(int x = 0; x < BOARD_WIDTH; x++) {
 8005ebc:	3101      	adds	r1, #1
 8005ebe:	290a      	cmp	r1, #10
 8005ec0:	d1f9      	bne.n	8005eb6 <_ZN11Screen3View18checkAndClearLinesEv+0x1e>
            fullLines[numFullLines++] = y;
 8005ec2:	a91c      	add	r1, sp, #112	@ 0x70
 8005ec4:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8005ec8:	3501      	adds	r5, #1
 8005eca:	f841 3c50 	str.w	r3, [r1, #-80]
    for(int y = BOARD_HEIGHT - 1; y >= 0; y--) {
 8005ece:	3b01      	subs	r3, #1
 8005ed0:	1c59      	adds	r1, r3, #1
 8005ed2:	f1a2 020a 	sub.w	r2, r2, #10
 8005ed6:	d1ec      	bne.n	8005eb2 <_ZN11Screen3View18checkAndClearLinesEv+0x1a>
    if(numFullLines > 0) {
 8005ed8:	2d00      	cmp	r5, #0
 8005eda:	dd50      	ble.n	8005f7e <_ZN11Screen3View18checkAndClearLinesEv+0xe6>
            score += 10; // 1 line cleared
 8005edc:	f504 5200 	add.w	r2, r4, #8192	@ 0x2000
        if (numFullLines == 1) {
 8005ee0:	2d01      	cmp	r5, #1
            score += 10; // 1 line cleared
 8005ee2:	f8d2 3cbc 	ldr.w	r3, [r2, #3260]	@ 0xcbc
        if (numFullLines == 1) {
 8005ee6:	d166      	bne.n	8005fb6 <_ZN11Screen3View18checkAndClearLinesEv+0x11e>
            score += 10; // 1 line cleared
 8005ee8:	330a      	adds	r3, #10
        Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 8005eea:	f504 5633 	add.w	r6, r4, #11456	@ 0x2cc0
 8005eee:	3602      	adds	r6, #2
            score += 10; // 1 line cleared
 8005ef0:	f8c2 3cbc 	str.w	r3, [r2, #3260]	@ 0xcbc
        Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 8005ef4:	2114      	movs	r1, #20
 8005ef6:	4a7b      	ldr	r2, [pc, #492]	@ (80060e4 <_ZN11Screen3View18checkAndClearLinesEv+0x24c>)
 8005ef8:	4630      	mov	r0, r6
 8005efa:	f00f f965 	bl	80151c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8005efe:	4b7a      	ldr	r3, [pc, #488]	@ (80060e8 <_ZN11Screen3View18checkAndClearLinesEv+0x250>)
 8005f00:	f8c4 6158 	str.w	r6, [r4, #344]	@ 0x158
        textArea1.setTypedText(touchgfx::TypedText(T_TOADOX));
 8005f04:	f504 7688 	add.w	r6, r4, #272	@ 0x110
 8005f08:	4630      	mov	r0, r6
 8005f0a:	9306      	str	r3, [sp, #24]
 8005f0c:	a906      	add	r1, sp, #24
 8005f0e:	230c      	movs	r3, #12
 8005f10:	f8ad 301c 	strh.w	r3, [sp, #28]
 8005f14:	f008 ff68 	bl	800ede8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        textArea1.invalidate(); // Vẽ lại nội dung};
 8005f18:	4630      	mov	r0, r6
 8005f1a:	f06f 062a 	mvn.w	r6, #42	@ 0x2a
 8005f1e:	4366      	muls	r6, r4
 8005f20:	f00c fe6c 	bl	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
                remove(staticBlocks[lineY][x]);
 8005f24:	f5a6 4625 	sub.w	r6, r6, #42240	@ 0xa500
        for(int i = 0; i < numFullLines; i++) {
 8005f28:	2300      	movs	r3, #0
        textArea1.invalidate(); // Vẽ lại nội dung};
 8005f2a:	f10d 0920 	add.w	r9, sp, #32
        for(int i = 0; i < numFullLines; i++) {
 8005f2e:	9301      	str	r3, [sp, #4]
 8005f30:	f04f 0b0a 	mov.w	fp, #10
        container.remove(d);
 8005f34:	f104 0a04 	add.w	sl, r4, #4
                remove(staticBlocks[lineY][x]);
 8005f38:	3e9c      	subs	r6, #156	@ 0x9c
            int lineY = fullLines[i];
 8005f3a:	f859 7b04 	ldr.w	r7, [r9], #4
            for(int x = 0; x < BOARD_WIDTH; x++) {
 8005f3e:	fb0b 4707 	mla	r7, fp, r7, r4
 8005f42:	f207 37ef 	addw	r7, r7, #1007	@ 0x3ef
 8005f46:	f04f 0800 	mov.w	r8, #0
                remove(staticBlocks[lineY][x]);
 8005f4a:	222c      	movs	r2, #44	@ 0x2c
 8005f4c:	fb02 6107 	mla	r1, r2, r7, r6
 8005f50:	4650      	mov	r0, sl
            for(int x = 0; x < BOARD_WIDTH; x++) {
 8005f52:	f108 0801 	add.w	r8, r8, #1
 8005f56:	f005 ffec 	bl	800bf32 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
                board[lineY][x] = false;
 8005f5a:	2300      	movs	r3, #0
            for(int x = 0; x < BOARD_WIDTH; x++) {
 8005f5c:	f1b8 0f0a 	cmp.w	r8, #10
                board[lineY][x] = false;
 8005f60:	f807 3f01 	strb.w	r3, [r7, #1]!
            for(int x = 0; x < BOARD_WIDTH; x++) {
 8005f64:	f04f 022c 	mov.w	r2, #44	@ 0x2c
 8005f68:	d1f0      	bne.n	8005f4c <_ZN11Screen3View18checkAndClearLinesEv+0xb4>
        for(int i = 0; i < numFullLines; i++) {
 8005f6a:	9a01      	ldr	r2, [sp, #4]
 8005f6c:	3201      	adds	r2, #1
 8005f6e:	4295      	cmp	r5, r2
 8005f70:	d12a      	bne.n	8005fc8 <_ZN11Screen3View18checkAndClearLinesEv+0x130>
        for(int y = fullLines[0]; y >= 0; y--) {
 8005f72:	9f08      	ldr	r7, [sp, #32]
 8005f74:	2f00      	cmp	r7, #0
 8005f76:	da38      	bge.n	8005fea <_ZN11Screen3View18checkAndClearLinesEv+0x152>
        container.invalidate();
 8005f78:	4650      	mov	r0, sl
 8005f7a:	f00c fe3f 	bl	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
    if (score >= 20) {
 8005f7e:	f504 5300 	add.w	r3, r4, #8192	@ 0x2000
 8005f82:	f8d3 2cbc 	ldr.w	r2, [r3, #3260]	@ 0xcbc
 8005f86:	2a13      	cmp	r2, #19
 8005f88:	f340 80a9 	ble.w	80060de <_ZN11Screen3View18checkAndClearLinesEv+0x246>
        isWin = true;
 8005f8c:	2501      	movs	r5, #1
 8005f8e:	f883 5cc1 	strb.w	r5, [r3, #3265]	@ 0xcc1
        clearScreen();
 8005f92:	4620      	mov	r0, r4
 8005f94:	f7ff fe88 	bl	8005ca8 <_ZN11Screen3View11clearScreenEv>
 8005f98:	2300      	movs	r3, #0
 8005f9a:	1d20      	adds	r0, r4, #4
 8005f9c:	f884 51ad 	strb.w	r5, [r4, #429]	@ 0x1ad
 8005fa0:	f884 30bd 	strb.w	r3, [r4, #189]	@ 0xbd
 8005fa4:	f884 52c9 	strb.w	r5, [r4, #713]	@ 0x2c9
 8005fa8:	f884 5341 	strb.w	r5, [r4, #833]	@ 0x341
}
 8005fac:	b01d      	add	sp, #116	@ 0x74
 8005fae:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005fb2:	f00c be23 	b.w	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
        } else if (numFullLines == 2) {
 8005fb6:	2d02      	cmp	r5, #2
 8005fb8:	d101      	bne.n	8005fbe <_ZN11Screen3View18checkAndClearLinesEv+0x126>
            score += 30; // 2 lines cleared
 8005fba:	331e      	adds	r3, #30
 8005fbc:	e795      	b.n	8005eea <_ZN11Screen3View18checkAndClearLinesEv+0x52>
        } else if (numFullLines == 3) {
 8005fbe:	2d03      	cmp	r5, #3
            score += 50; // 3 lines cleared
 8005fc0:	bf0c      	ite	eq
 8005fc2:	3332      	addeq	r3, #50	@ 0x32
            score += 100; // 4 or more lines cleared
 8005fc4:	3364      	addne	r3, #100	@ 0x64
 8005fc6:	e790      	b.n	8005eea <_ZN11Screen3View18checkAndClearLinesEv+0x52>
 8005fc8:	9201      	str	r2, [sp, #4]
 8005fca:	e7b6      	b.n	8005f3a <_ZN11Screen3View18checkAndClearLinesEv+0xa2>
 8005fcc:	462a      	mov	r2, r5
                if(fullLines[i] > y) shiftDown++;
 8005fce:	f850 5b04 	ldr.w	r5, [r0], #4
            for(int i = 0; i < numFullLines; i++) {
 8005fd2:	9e01      	ldr	r6, [sp, #4]
                if(fullLines[i] > y) shiftDown++;
 8005fd4:	42bd      	cmp	r5, r7
 8005fd6:	bfc8      	it	gt
 8005fd8:	3101      	addgt	r1, #1
            for(int i = 0; i < numFullLines; i++) {
 8005fda:	4296      	cmp	r6, r2
 8005fdc:	f102 0501 	add.w	r5, r2, #1
 8005fe0:	d1f4      	bne.n	8005fcc <_ZN11Screen3View18checkAndClearLinesEv+0x134>
            if(shiftDown > 0) {
 8005fe2:	2900      	cmp	r1, #0
 8005fe4:	dc05      	bgt.n	8005ff2 <_ZN11Screen3View18checkAndClearLinesEv+0x15a>
        for(int y = fullLines[0]; y >= 0; y--) {
 8005fe6:	3f01      	subs	r7, #1
 8005fe8:	e7c4      	b.n	8005f74 <_ZN11Screen3View18checkAndClearLinesEv+0xdc>
            for(int i = 0; i < numFullLines; i++) {
 8005fea:	2200      	movs	r2, #0
 8005fec:	a808      	add	r0, sp, #32
            int shiftDown = 0;
 8005fee:	4611      	mov	r1, r2
 8005ff0:	e7ed      	b.n	8005fce <_ZN11Screen3View18checkAndClearLinesEv+0x136>
                        board[y + shiftDown][x] = true;
 8005ff2:	4439      	add	r1, r7
 8005ff4:	200a      	movs	r0, #10
 8005ff6:	fb00 f507 	mul.w	r5, r0, r7
                            10 + ((y + shiftDown) * BLOCK_SIZE)
 8005ffa:	ebc1 1201 	rsb	r2, r1, r1, lsl #4
 8005ffe:	f44f 7cdc 	mov.w	ip, #440	@ 0x1b8
 8006002:	f204 39ef 	addw	r9, r4, #1007	@ 0x3ef
 8006006:	fb0c 4601 	mla	r6, ip, r1, r4
 800600a:	320a      	adds	r2, #10
 800600c:	9502      	str	r5, [sp, #8]
 800600e:	44a9      	add	r9, r5
 8006010:	4341      	muls	r1, r0
 8006012:	f504 65ef 	add.w	r5, r4, #1912	@ 0x778
                        staticBlocks[y + shiftDown][x].setXY(
 8006016:	b212      	sxth	r2, r2
 8006018:	fb0c 5507 	mla	r5, ip, r7, r5
 800601c:	9103      	str	r1, [sp, #12]
 800601e:	46b3      	mov	fp, r6
 8006020:	f04f 0814 	mov.w	r8, #20
                    if(board[y][x]) {
 8006024:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8006028:	2900      	cmp	r1, #0
 800602a:	d04a      	beq.n	80060c2 <_ZN11Screen3View18checkAndClearLinesEv+0x22a>
                        board[y + shiftDown][x] = true;
 800602c:	9902      	ldr	r1, [sp, #8]
 800602e:	9803      	ldr	r0, [sp, #12]
                        staticBlocks[y + shiftDown][x].setXY(
 8006030:	9205      	str	r2, [sp, #20]
                        board[y + shiftDown][x] = true;
 8006032:	eba9 0101 	sub.w	r1, r9, r1
 8006036:	f04f 0c01 	mov.w	ip, #1
 800603a:	f801 c000 	strb.w	ip, [r1, r0]
class Drawable
 800603e:	e9d5 0101 	ldrd	r0, r1, [r5, #4]
 8006042:	f206 7e7c 	addw	lr, r6, #1916	@ 0x77c
                        board[y][x] = false;
 8006046:	f889 3000 	strb.w	r3, [r9]
 800604a:	e88e 0003 	stmia.w	lr, {r0, r1}
 800604e:	e9d5 0103 	ldrd	r0, r1, [r5, #12]
 8006052:	f206 7e84 	addw	lr, r6, #1924	@ 0x784
 8006056:	e88e 0003 	stmia.w	lr, {r0, r1}
 800605a:	6969      	ldr	r1, [r5, #20]
 800605c:	f8c6 178c 	str.w	r1, [r6, #1932]	@ 0x78c
 8006060:	69a9      	ldr	r1, [r5, #24]
 8006062:	f8c6 1790 	str.w	r1, [r6, #1936]	@ 0x790
 8006066:	69e9      	ldr	r1, [r5, #28]
 8006068:	f8c6 1794 	str.w	r1, [r6, #1940]	@ 0x794
 800606c:	f9b5 1020 	ldrsh.w	r1, [r5, #32]
 8006070:	f8a6 1798 	strh.w	r1, [r6, #1944]	@ 0x798
 8006074:	f9b5 1022 	ldrsh.w	r1, [r5, #34]	@ 0x22
 8006078:	f8a6 179a 	strh.w	r1, [r6, #1946]	@ 0x79a
 800607c:	f895 1024 	ldrb.w	r1, [r5, #36]	@ 0x24
 8006080:	f886 179c 	strb.w	r1, [r6, #1948]	@ 0x79c
 8006084:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 8006088:	f886 179d 	strb.w	r1, [r6, #1949]	@ 0x79d
 800608c:	8ce9      	ldrh	r1, [r5, #38]	@ 0x26
 800608e:	f8ab 179e 	strh.w	r1, [fp, #1950]	@ 0x79e
                        staticBlocks[y + shiftDown][x] = staticBlocks[y][x];
 8006092:	f506 6cef 	add.w	ip, r6, #1912	@ 0x778
 8006096:	f895 1028 	ldrb.w	r1, [r5, #40]	@ 0x28
 800609a:	f88b 17a0 	strb.w	r1, [fp, #1952]	@ 0x7a0
                        staticBlocks[y + shiftDown][x].setXY(
 800609e:	4660      	mov	r0, ip
 80060a0:	fa0f f188 	sxth.w	r1, r8
 80060a4:	f8cd c010 	str.w	ip, [sp, #16]
 80060a8:	f7fd f97d 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
        container.add(d);
 80060ac:	9804      	ldr	r0, [sp, #16]
 80060ae:	4601      	mov	r1, r0
 80060b0:	4650      	mov	r0, sl
 80060b2:	f005 fefd 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        container.remove(d);
 80060b6:	4629      	mov	r1, r5
 80060b8:	4650      	mov	r0, sl
 80060ba:	f005 ff3a 	bl	800bf32 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80060be:	9a05      	ldr	r2, [sp, #20]
 80060c0:	2300      	movs	r3, #0
                for(int x = 0; x < BOARD_WIDTH; x++) {
 80060c2:	f108 080f 	add.w	r8, r8, #15
 80060c6:	fa1f f888 	uxth.w	r8, r8
 80060ca:	f1b8 0faa 	cmp.w	r8, #170	@ 0xaa
 80060ce:	f106 062c 	add.w	r6, r6, #44	@ 0x2c
 80060d2:	f10b 0b2c 	add.w	fp, fp, #44	@ 0x2c
 80060d6:	f105 052c 	add.w	r5, r5, #44	@ 0x2c
 80060da:	d1a3      	bne.n	8006024 <_ZN11Screen3View18checkAndClearLinesEv+0x18c>
 80060dc:	e783      	b.n	8005fe6 <_ZN11Screen3View18checkAndClearLinesEv+0x14e>
}
 80060de:	b01d      	add	sp, #116	@ 0x74
 80060e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80060e4:	0802723d 	.word	0x0802723d
 80060e8:	08027840 	.word	0x08027840

080060ec <_ZN11Screen3View15freezeTetrominoEv>:
{
 80060ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80060f0:	f500 5a32 	add.w	sl, r0, #11392	@ 0x2c80
 80060f4:	b085      	sub	sp, #20
 80060f6:	4605      	mov	r5, r0
 80060f8:	f10a 0a17 	add.w	sl, sl, #23
    for(int y = 0; y < 4; y++) {
 80060fc:	f04f 0900 	mov.w	r9, #0
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8006100:	f500 5b00 	add.w	fp, r0, #8192	@ 0x2000
        for(int x = 0; x < 4; x++) {
 8006104:	ebc9 1309 	rsb	r3, r9, r9, lsl #4
 8006108:	b29b      	uxth	r3, r3
 800610a:	9300      	str	r3, [sp, #0]
 800610c:	f04f 0800 	mov.w	r8, #0
{
 8006110:	4653      	mov	r3, sl
            if(currentTetromino[y][x]) {
 8006112:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8006116:	2a00      	cmp	r2, #0
 8006118:	d03d      	beq.n	8006196 <_ZN11Screen3View15freezeTetrominoEv+0xaa>
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 800611a:	f8db 2cac 	ldr.w	r2, [fp, #3244]	@ 0xcac
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 800611e:	f8db 1ca8 	ldr.w	r1, [fp, #3240]	@ 0xca8
 8006122:	9301      	str	r3, [sp, #4]
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8006124:	f1a2 060a 	sub.w	r6, r2, #10
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8006128:	230f      	movs	r3, #15
                board[boardY][boardX] = true;
 800612a:	200a      	movs	r0, #10
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 800612c:	fb96 f6f3 	sdiv	r6, r6, r3
 8006130:	444e      	add	r6, r9
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8006132:	f1a1 0414 	sub.w	r4, r1, #20
                board[boardY][boardX] = true;
 8006136:	fb00 5006 	mla	r0, r0, r6, r5
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 800613a:	fb94 f4f3 	sdiv	r4, r4, r3
 800613e:	4444      	add	r4, r8
                board[boardY][boardX] = true;
 8006140:	4420      	add	r0, r4
 8006142:	2701      	movs	r7, #1
 8006144:	f880 73f0 	strb.w	r7, [r0, #1008]	@ 0x3f0
                staticBlocks[boardY][boardX].setXY(
 8006148:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 800614c:	4346      	muls	r6, r0
 800614e:	202c      	movs	r0, #44	@ 0x2c
                    currentY + (y * BLOCK_SIZE)
 8006150:	9b00      	ldr	r3, [sp, #0]
                staticBlocks[boardY][boardX].setXY(
 8006152:	4344      	muls	r4, r0
 8006154:	f506 67ef 	add.w	r7, r6, #1912	@ 0x778
 8006158:	4427      	add	r7, r4
                    currentX + (x * BLOCK_SIZE),
 800615a:	ebc8 1008 	rsb	r0, r8, r8, lsl #4
                staticBlocks[boardY][boardX].setXY(
 800615e:	442f      	add	r7, r5
                    currentY + (y * BLOCK_SIZE)
 8006160:	441a      	add	r2, r3
                    currentX + (x * BLOCK_SIZE),
 8006162:	4401      	add	r1, r0
                staticBlocks[boardY][boardX].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 8006164:	4434      	add	r4, r6
                staticBlocks[boardY][boardX].setXY(
 8006166:	b212      	sxth	r2, r2
 8006168:	b209      	sxth	r1, r1
 800616a:	4638      	mov	r0, r7
                staticBlocks[boardY][boardX].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 800616c:	442c      	add	r4, r5
                staticBlocks[boardY][boardX].setXY(
 800616e:	f7fd f91a 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
                staticBlocks[boardY][boardX].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 8006172:	4b12      	ldr	r3, [pc, #72]	@ (80061bc <_ZN11Screen3View15freezeTetrominoEv+0xd0>)
 8006174:	f8db 1cb0 	ldr.w	r1, [fp, #3248]	@ 0xcb0
 8006178:	f8d4 2778 	ldr.w	r2, [r4, #1912]	@ 0x778
 800617c:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8006180:	6e12      	ldr	r2, [r2, #96]	@ 0x60
 8006182:	f8ad 100c 	strh.w	r1, [sp, #12]
 8006186:	4638      	mov	r0, r7
 8006188:	a903      	add	r1, sp, #12
 800618a:	4790      	blx	r2
        container.add(d);
 800618c:	4639      	mov	r1, r7
 800618e:	1d28      	adds	r0, r5, #4
 8006190:	f005 fe8e 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006194:	9b01      	ldr	r3, [sp, #4]
        for(int x = 0; x < 4; x++) {
 8006196:	f108 0801 	add.w	r8, r8, #1
 800619a:	f1b8 0f04 	cmp.w	r8, #4
 800619e:	d1b8      	bne.n	8006112 <_ZN11Screen3View15freezeTetrominoEv+0x26>
    for(int y = 0; y < 4; y++) {
 80061a0:	f109 0901 	add.w	r9, r9, #1
 80061a4:	f1b9 0f04 	cmp.w	r9, #4
 80061a8:	f10a 0a04 	add.w	sl, sl, #4
 80061ac:	d1aa      	bne.n	8006104 <_ZN11Screen3View15freezeTetrominoEv+0x18>
    checkAndClearLines();
 80061ae:	4628      	mov	r0, r5
}
 80061b0:	b005      	add	sp, #20
 80061b2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    checkAndClearLines();
 80061b6:	f7ff be6f 	b.w	8005e98 <_ZN11Screen3View18checkAndClearLinesEv>
 80061ba:	bf00      	nop
 80061bc:	08027ec2 	.word	0x08027ec2

080061c0 <_ZN11Screen3View15handleTickEventEv>:
{
 80061c0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    if (isGameOver || isWin) {
 80061c4:	f500 5400 	add.w	r4, r0, #8192	@ 0x2000
{
 80061c8:	4605      	mov	r5, r0
    if (isGameOver || isWin) {
 80061ca:	f894 3cc0 	ldrb.w	r3, [r4, #3264]	@ 0xcc0
 80061ce:	2b00      	cmp	r3, #0
 80061d0:	f040 8095 	bne.w	80062fe <_ZN11Screen3View15handleTickEventEv+0x13e>
 80061d4:	f894 6cc1 	ldrb.w	r6, [r4, #3265]	@ 0xcc1
 80061d8:	2e00      	cmp	r6, #0
 80061da:	f040 8090 	bne.w	80062fe <_ZN11Screen3View15handleTickEventEv+0x13e>
    tickCount++;
 80061de:	f8d4 3cb8 	ldr.w	r3, [r4, #3256]	@ 0xcb8
 80061e2:	2219      	movs	r2, #25
 80061e4:	3301      	adds	r3, #1
 80061e6:	f8c4 3cb8 	str.w	r3, [r4, #3256]	@ 0xcb8
 80061ea:	fbb3 f1f2 	udiv	r1, r3, r2
 80061ee:	fb02 3311 	mls	r3, r2, r1, r3
    if (tickCount % 25 == 12) {
 80061f2:	2b0c      	cmp	r3, #12
 80061f4:	d117      	bne.n	8006226 <_ZN11Screen3View15handleTickEventEv+0x66>
        uint32_t count = osMessageQueueGetCount(Queue1Handle);
 80061f6:	4f43      	ldr	r7, [pc, #268]	@ (8006304 <_ZN11Screen3View15handleTickEventEv+0x144>)
        uint8_t res = 0;
 80061f8:	f88d 6007 	strb.w	r6, [sp, #7]
        uint32_t count = osMessageQueueGetCount(Queue1Handle);
 80061fc:	6838      	ldr	r0, [r7, #0]
 80061fe:	f003 fe03 	bl	8009e08 <osMessageQueueGetCount>
        if (count > 0)
 8006202:	b180      	cbz	r0, 8006226 <_ZN11Screen3View15handleTickEventEv+0x66>
            osMessageQueueGet(Queue1Handle, &res, NULL, osWaitForever);
 8006204:	f04f 33ff 	mov.w	r3, #4294967295
 8006208:	6838      	ldr	r0, [r7, #0]
 800620a:	4632      	mov	r2, r6
 800620c:	f10d 0107 	add.w	r1, sp, #7
 8006210:	f003 fdca 	bl	8009da8 <osMessageQueueGet>
            if (res == 'L') 
 8006214:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8006218:	2b4c      	cmp	r3, #76	@ 0x4c
 800621a:	d02d      	beq.n	8006278 <_ZN11Screen3View15handleTickEventEv+0xb8>
 800621c:	d826      	bhi.n	800626c <_ZN11Screen3View15handleTickEventEv+0xac>
 800621e:	2b43      	cmp	r3, #67	@ 0x43
 8006220:	d060      	beq.n	80062e4 <_ZN11Screen3View15handleTickEventEv+0x124>
 8006222:	2b44      	cmp	r3, #68	@ 0x44
 8006224:	d048      	beq.n	80062b8 <_ZN11Screen3View15handleTickEventEv+0xf8>
    if (tickCount % 50 == 0) 
 8006226:	f8d4 3cb8 	ldr.w	r3, [r4, #3256]	@ 0xcb8
 800622a:	2232      	movs	r2, #50	@ 0x32
 800622c:	fbb3 f1f2 	udiv	r1, r3, r2
 8006230:	fb02 3311 	mls	r3, r2, r1, r3
 8006234:	b9a3      	cbnz	r3, 8006260 <_ZN11Screen3View15handleTickEventEv+0xa0>
        if (checkCollision(currentX, currentY + BLOCK_SIZE, currentShape))
 8006236:	f8d4 6cac 	ldr.w	r6, [r4, #3244]	@ 0xcac
 800623a:	f8d4 8ca8 	ldr.w	r8, [r4, #3240]	@ 0xca8
 800623e:	f8d4 7cb0 	ldr.w	r7, [r4, #3248]	@ 0xcb0
 8006242:	360f      	adds	r6, #15
 8006244:	463b      	mov	r3, r7
 8006246:	4632      	mov	r2, r6
 8006248:	4641      	mov	r1, r8
 800624a:	4628      	mov	r0, r5
 800624c:	f7ff fa83 	bl	8005756 <_ZN11Screen3View14checkCollisionEiii>
 8006250:	2800      	cmp	r0, #0
 8006252:	d04b      	beq.n	80062ec <_ZN11Screen3View15handleTickEventEv+0x12c>
            freezeTetromino();
 8006254:	4628      	mov	r0, r5
 8006256:	f7ff ff49 	bl	80060ec <_ZN11Screen3View15freezeTetrominoEv>
            createNewTetromino();
 800625a:	4628      	mov	r0, r5
 800625c:	f7ff fd72 	bl	8005d44 <_ZN11Screen3View18createNewTetrominoEv>
        container.invalidate();
 8006260:	1d28      	adds	r0, r5, #4
}
 8006262:	b002      	add	sp, #8
 8006264:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006268:	f00c bcc8 	b.w	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
 800626c:	2b52      	cmp	r3, #82	@ 0x52
 800626e:	d1da      	bne.n	8006226 <_ZN11Screen3View15handleTickEventEv+0x66>
                if (!checkCollision(currentX + BLOCK_SIZE, currentY, currentShape)) 
 8006270:	f8d4 6ca8 	ldr.w	r6, [r4, #3240]	@ 0xca8
 8006274:	360f      	adds	r6, #15
 8006276:	e002      	b.n	800627e <_ZN11Screen3View15handleTickEventEv+0xbe>
                if (!checkCollision(currentX - BLOCK_SIZE, currentY, currentShape)) 
 8006278:	f8d4 6ca8 	ldr.w	r6, [r4, #3240]	@ 0xca8
 800627c:	3e0f      	subs	r6, #15
                if (!checkCollision(currentX + BLOCK_SIZE, currentY, currentShape)) 
 800627e:	f8d4 8cac 	ldr.w	r8, [r4, #3244]	@ 0xcac
 8006282:	f8d4 7cb0 	ldr.w	r7, [r4, #3248]	@ 0xcb0
 8006286:	4642      	mov	r2, r8
 8006288:	463b      	mov	r3, r7
 800628a:	4631      	mov	r1, r6
 800628c:	4628      	mov	r0, r5
 800628e:	f7ff fa62 	bl	8005756 <_ZN11Screen3View14checkCollisionEiii>
 8006292:	2800      	cmp	r0, #0
 8006294:	d1c7      	bne.n	8006226 <_ZN11Screen3View15handleTickEventEv+0x66>
                    currentX += BLOCK_SIZE;
 8006296:	f8c4 6ca8 	str.w	r6, [r4, #3240]	@ 0xca8
                    drawTetromino(currentShape, currentX, currentY);
 800629a:	4643      	mov	r3, r8
 800629c:	4632      	mov	r2, r6
 800629e:	4639      	mov	r1, r7
 80062a0:	4628      	mov	r0, r5
 80062a2:	f7ff fa89 	bl	80057b8 <_ZN11Screen3View13drawTetrominoEiii>
 80062a6:	e7be      	b.n	8006226 <_ZN11Screen3View15handleTickEventEv+0x66>
                    currentY += BLOCK_SIZE;
 80062a8:	f8c4 6cac 	str.w	r6, [r4, #3244]	@ 0xcac
                    drawTetromino(currentShape, currentX, currentY);
 80062ac:	4633      	mov	r3, r6
 80062ae:	463a      	mov	r2, r7
 80062b0:	4641      	mov	r1, r8
 80062b2:	4628      	mov	r0, r5
 80062b4:	f7ff fa80 	bl	80057b8 <_ZN11Screen3View13drawTetrominoEiii>
                while (!checkCollision(currentX, currentY + BLOCK_SIZE, currentShape)) 
 80062b8:	f8d4 6cac 	ldr.w	r6, [r4, #3244]	@ 0xcac
 80062bc:	f8d4 7ca8 	ldr.w	r7, [r4, #3240]	@ 0xca8
 80062c0:	f8d4 8cb0 	ldr.w	r8, [r4, #3248]	@ 0xcb0
 80062c4:	360f      	adds	r6, #15
 80062c6:	4643      	mov	r3, r8
 80062c8:	4632      	mov	r2, r6
 80062ca:	4639      	mov	r1, r7
 80062cc:	4628      	mov	r0, r5
 80062ce:	f7ff fa42 	bl	8005756 <_ZN11Screen3View14checkCollisionEiii>
 80062d2:	2800      	cmp	r0, #0
 80062d4:	d0e8      	beq.n	80062a8 <_ZN11Screen3View15handleTickEventEv+0xe8>
                freezeTetromino();
 80062d6:	4628      	mov	r0, r5
 80062d8:	f7ff ff08 	bl	80060ec <_ZN11Screen3View15freezeTetrominoEv>
                createNewTetromino();
 80062dc:	4628      	mov	r0, r5
 80062de:	f7ff fd31 	bl	8005d44 <_ZN11Screen3View18createNewTetrominoEv>
 80062e2:	e7a0      	b.n	8006226 <_ZN11Screen3View15handleTickEventEv+0x66>
                rotateTetromino(); // Xoay hình nếu nhận được lệnh
 80062e4:	4628      	mov	r0, r5
 80062e6:	f7ff facb 	bl	8005880 <_ZN11Screen3View15rotateTetrominoEv>
 80062ea:	e79c      	b.n	8006226 <_ZN11Screen3View15handleTickEventEv+0x66>
            currentY += BLOCK_SIZE;
 80062ec:	f8c4 6cac 	str.w	r6, [r4, #3244]	@ 0xcac
            drawTetromino(currentShape, currentX, currentY);
 80062f0:	4633      	mov	r3, r6
 80062f2:	4642      	mov	r2, r8
 80062f4:	4639      	mov	r1, r7
 80062f6:	4628      	mov	r0, r5
 80062f8:	f7ff fa5e 	bl	80057b8 <_ZN11Screen3View13drawTetrominoEiii>
 80062fc:	e7b0      	b.n	8006260 <_ZN11Screen3View15handleTickEventEv+0xa0>
}
 80062fe:	b002      	add	sp, #8
 8006300:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006304:	200003a8 	.word	0x200003a8

08006308 <_ZN16Screen4PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen4Presenter() {}
 8006308:	4770      	bx	lr

0800630a <_ZThn4_N16Screen4PresenterD1Ev>:
 800630a:	3804      	subs	r0, #4
 800630c:	4770      	bx	lr

0800630e <_ZN16Screen4Presenter10deactivateEv>:
}

void Screen4Presenter::activate()
{

}
 800630e:	4770      	bx	lr

08006310 <_ZN16Screen4PresenterD0Ev>:
 8006310:	b510      	push	{r4, lr}
 8006312:	2110      	movs	r1, #16
 8006314:	4604      	mov	r4, r0
 8006316:	f01e f890 	bl	802443a <_ZdlPvj>
 800631a:	4620      	mov	r0, r4
 800631c:	bd10      	pop	{r4, pc}

0800631e <_ZThn4_N16Screen4PresenterD0Ev>:
 800631e:	f1a0 0004 	sub.w	r0, r0, #4
 8006322:	e7f5      	b.n	8006310 <_ZN16Screen4PresenterD0Ev>

08006324 <_ZN16Screen4PresenterC1ER11Screen4View>:
 8006324:	2200      	movs	r2, #0
 8006326:	6082      	str	r2, [r0, #8]
    : view(v)
 8006328:	4a02      	ldr	r2, [pc, #8]	@ (8006334 <_ZN16Screen4PresenterC1ER11Screen4View+0x10>)
 800632a:	6002      	str	r2, [r0, #0]
 800632c:	3218      	adds	r2, #24
 800632e:	6042      	str	r2, [r0, #4]
 8006330:	60c1      	str	r1, [r0, #12]
}
 8006332:	4770      	bx	lr
 8006334:	08027f48 	.word	0x08027f48

08006338 <_ZN11Screen4View14tearDownScreenEv>:
}

void Screen4View::tearDownScreen()
{
    Screen4ViewBase::tearDownScreen();
}
 8006338:	4770      	bx	lr
	...

0800633c <_ZN11Screen4ViewD1Ev>:

class Screen4View : public Screen4ViewBase
{
public:
    Screen4View();
    virtual ~Screen4View() {}
 800633c:	4b13      	ldr	r3, [pc, #76]	@ (800638c <_ZN11Screen4ViewD1Ev+0x50>)
 800633e:	b570      	push	{r4, r5, r6, lr}
 8006340:	4605      	mov	r5, r0
 8006342:	6003      	str	r3, [r0, #0]
 8006344:	f642 445c 	movw	r4, #11356	@ 0x2c5c
 8006348:	f642 169c 	movw	r6, #10652	@ 0x299c
 800634c:	42b4      	cmp	r4, r6
 800634e:	d116      	bne.n	800637e <_ZN11Screen4ViewD1Ev+0x42>
 8006350:	f240 763c 	movw	r6, #1852	@ 0x73c
 8006354:	592b      	ldr	r3, [r5, r4]
 8006356:	1928      	adds	r0, r5, r4
 8006358:	681b      	ldr	r3, [r3, #0]
 800635a:	3c2c      	subs	r4, #44	@ 0x2c
 800635c:	4798      	blx	r3
 800635e:	42b4      	cmp	r4, r6
 8006360:	d1f8      	bne.n	8006354 <_ZN11Screen4ViewD1Ev+0x18>
 8006362:	f240 467c 	movw	r6, #1148	@ 0x47c
 8006366:	592b      	ldr	r3, [r5, r4]
 8006368:	1928      	adds	r0, r5, r4
 800636a:	681b      	ldr	r3, [r3, #0]
 800636c:	3c2c      	subs	r4, #44	@ 0x2c
 800636e:	4798      	blx	r3
 8006370:	42b4      	cmp	r4, r6
 8006372:	d1f8      	bne.n	8006366 <_ZN11Screen4ViewD1Ev+0x2a>
 8006374:	4628      	mov	r0, r5
 8006376:	f7fd fe7d 	bl	8004074 <_ZN15Screen4ViewBaseD1Ev>
 800637a:	4628      	mov	r0, r5
 800637c:	bd70      	pop	{r4, r5, r6, pc}
 800637e:	592b      	ldr	r3, [r5, r4]
 8006380:	1928      	adds	r0, r5, r4
 8006382:	681b      	ldr	r3, [r3, #0]
 8006384:	4798      	blx	r3
 8006386:	3c2c      	subs	r4, #44	@ 0x2c
 8006388:	e7e0      	b.n	800634c <_ZN11Screen4ViewD1Ev+0x10>
 800638a:	bf00      	nop
 800638c:	08027f70 	.word	0x08027f70

08006390 <_ZN11Screen4ViewD0Ev>:
 8006390:	b510      	push	{r4, lr}
 8006392:	4604      	mov	r4, r0
 8006394:	f7ff ffd2 	bl	800633c <_ZN11Screen4ViewD1Ev>
 8006398:	4620      	mov	r0, r4
 800639a:	f642 41c8 	movw	r1, #11464	@ 0x2cc8
 800639e:	f01e f84c 	bl	802443a <_ZdlPvj>
 80063a2:	4620      	mov	r0, r4
 80063a4:	bd10      	pop	{r4, pc}

080063a6 <_ZN11Screen4View14checkCollisionEiii>:
        }
    }
}

bool Screen4View::checkCollision(int newX, int newY, int shape)
{
 80063a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80063aa:	f500 5432 	add.w	r4, r0, #11392	@ 0x2c80
    for(int y = 0; y < 4; y++) {
        for(int x = 0; x < 4; x++) {
            if(currentTetromino[y][x]) {  // Thay đổi từ TETROMINOS sang currentTetromino
                int boardX = (newX - 20) / BLOCK_SIZE + x;
 80063ae:	230f      	movs	r3, #15
 80063b0:	3914      	subs	r1, #20
                int boardY = (newY - 10) / BLOCK_SIZE + y;
 80063b2:	3a0a      	subs	r2, #10
                int boardX = (newX - 20) / BLOCK_SIZE + x;
 80063b4:	fb91 f1f3 	sdiv	r1, r1, r3
                int boardY = (newY - 10) / BLOCK_SIZE + y;
 80063b8:	fb92 f2f3 	sdiv	r2, r2, r3
 80063bc:	3407      	adds	r4, #7
 80063be:	f102 0804 	add.w	r8, r2, #4
 80063c2:	f101 0e04 	add.w	lr, r1, #4
 80063c6:	f500 7378 	add.w	r3, r0, #992	@ 0x3e0
 80063ca:	f04f 0c0a 	mov.w	ip, #10
        for(int x = 0; x < 4; x++) {
 80063ce:	460d      	mov	r5, r1
 80063d0:	fb0c 3702 	mla	r7, ip, r2, r3
{
 80063d4:	4626      	mov	r6, r4
            if(currentTetromino[y][x]) {  // Thay đổi từ TETROMINOS sang currentTetromino
 80063d6:	f816 0f01 	ldrb.w	r0, [r6, #1]!
 80063da:	b128      	cbz	r0, 80063e8 <_ZN11Screen4View14checkCollisionEiii+0x42>
                
                // Kiểm tra chạm đáy
                if(boardY >= BOARD_HEIGHT) return true;
 80063dc:	2a13      	cmp	r2, #19
 80063de:	dc0d      	bgt.n	80063fc <_ZN11Screen4View14checkCollisionEiii+0x56>
                
                // Kiểm tra chạm biên
                if(boardX < 0 || boardX >= BOARD_WIDTH) return true;
 80063e0:	2d09      	cmp	r5, #9
 80063e2:	d80b      	bhi.n	80063fc <_ZN11Screen4View14checkCollisionEiii+0x56>
                
                // Kiểm tra chạm khối khác
                if(board[boardY][boardX]) return true;
 80063e4:	5d78      	ldrb	r0, [r7, r5]
 80063e6:	b950      	cbnz	r0, 80063fe <_ZN11Screen4View14checkCollisionEiii+0x58>
        for(int x = 0; x < 4; x++) {
 80063e8:	3501      	adds	r5, #1
 80063ea:	4575      	cmp	r5, lr
 80063ec:	d1f3      	bne.n	80063d6 <_ZN11Screen4View14checkCollisionEiii+0x30>
    for(int y = 0; y < 4; y++) {
 80063ee:	3201      	adds	r2, #1
 80063f0:	4542      	cmp	r2, r8
 80063f2:	f104 0404 	add.w	r4, r4, #4
 80063f6:	d1ea      	bne.n	80063ce <_ZN11Screen4View14checkCollisionEiii+0x28>
            }
        }
    }
    return false;
 80063f8:	2000      	movs	r0, #0
 80063fa:	e000      	b.n	80063fe <_ZN11Screen4View14checkCollisionEiii+0x58>
                if(boardY >= BOARD_HEIGHT) return true;
 80063fc:	2001      	movs	r0, #1
}
 80063fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006402 <_ZN11Screen4View11setupScreenEv>:
    Screen4ViewBase::setupScreen();
 8006402:	f7fd be38 	b.w	8004076 <_ZN15Screen4ViewBase11setupScreenEv>
	...

08006408 <_ZN11Screen4View13drawTetrominoEiii>:
{
 8006408:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800640c:	b087      	sub	sp, #28
 800640e:	461c      	mov	r4, r3
        container.remove(d);
 8006410:	1d03      	adds	r3, r0, #4
 8006412:	4605      	mov	r5, r0
 8006414:	4617      	mov	r7, r2
        for(int x = 0; x < 4; x++) {
 8006416:	2600      	movs	r6, #0
 8006418:	f500 6a95 	add.w	sl, r0, #1192	@ 0x4a8
 800641c:	9300      	str	r3, [sp, #0]
 800641e:	eb0a 0906 	add.w	r9, sl, r6
 8006422:	f04f 0800 	mov.w	r8, #0
 8006426:	4649      	mov	r1, r9
 8006428:	9800      	ldr	r0, [sp, #0]
 800642a:	f108 0801 	add.w	r8, r8, #1
 800642e:	f005 fd80 	bl	800bf32 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8006432:	f1b8 0f04 	cmp.w	r8, #4
 8006436:	f109 092c 	add.w	r9, r9, #44	@ 0x2c
 800643a:	d1f4      	bne.n	8006426 <_ZN11Screen4View13drawTetrominoEiii+0x1e>
    for(int y = 0; y < 4; y++) {
 800643c:	36b0      	adds	r6, #176	@ 0xb0
 800643e:	f5b6 7f30 	cmp.w	r6, #704	@ 0x2c0
 8006442:	d1ec      	bne.n	800641e <_ZN11Screen4View13drawTetrominoEiii+0x16>
 8006444:	b2bf      	uxth	r7, r7
 8006446:	f107 023c 	add.w	r2, r7, #60	@ 0x3c
 800644a:	f505 5832 	add.w	r8, r5, #11392	@ 0x2c80
 800644e:	b292      	uxth	r2, r2
 8006450:	f108 0807 	add.w	r8, r8, #7
 8006454:	b2a4      	uxth	r4, r4
 8006456:	2300      	movs	r3, #0
 8006458:	9202      	str	r2, [sp, #8]
                blocks[y][x].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 800645a:	f505 5b00 	add.w	fp, r5, #8192	@ 0x2000
        for(int x = 0; x < 4; x++) {
 800645e:	eb05 0a03 	add.w	sl, r5, r3
 8006462:	463e      	mov	r6, r7
        for(int x = 0; x < 4; x++) {
 8006464:	f8cd 8004 	str.w	r8, [sp, #4]
            if(currentTetromino[y][x] == 1) {
 8006468:	9901      	ldr	r1, [sp, #4]
 800646a:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800646e:	9101      	str	r1, [sp, #4]
 8006470:	2a01      	cmp	r2, #1
 8006472:	d119      	bne.n	80064a8 <_ZN11Screen4View13drawTetrominoEiii+0xa0>
                blocks[y][x].setXY(
 8006474:	f50a 6995 	add.w	r9, sl, #1192	@ 0x4a8
 8006478:	b222      	sxth	r2, r4
 800647a:	b231      	sxth	r1, r6
 800647c:	4648      	mov	r0, r9
 800647e:	9303      	str	r3, [sp, #12]
 8006480:	f7fc ff91 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
                blocks[y][x].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 8006484:	4b11      	ldr	r3, [pc, #68]	@ (80064cc <_ZN11Screen4View13drawTetrominoEiii+0xc4>)
 8006486:	f8db 1ca0 	ldr.w	r1, [fp, #3232]	@ 0xca0
 800648a:	f8da 24a8 	ldr.w	r2, [sl, #1192]	@ 0x4a8
 800648e:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8006492:	6e12      	ldr	r2, [r2, #96]	@ 0x60
 8006494:	f8ad 1014 	strh.w	r1, [sp, #20]
 8006498:	4648      	mov	r0, r9
 800649a:	a905      	add	r1, sp, #20
 800649c:	4790      	blx	r2
        container.add(d);
 800649e:	9800      	ldr	r0, [sp, #0]
 80064a0:	4649      	mov	r1, r9
 80064a2:	f005 fd05 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80064a6:	9b03      	ldr	r3, [sp, #12]
        for(int x = 0; x < 4; x++) {
 80064a8:	9a02      	ldr	r2, [sp, #8]
 80064aa:	360f      	adds	r6, #15
 80064ac:	b2b6      	uxth	r6, r6
 80064ae:	4296      	cmp	r6, r2
 80064b0:	f10a 0a2c 	add.w	sl, sl, #44	@ 0x2c
 80064b4:	d1d8      	bne.n	8006468 <_ZN11Screen4View13drawTetrominoEiii+0x60>
    for(int y = 0; y < 4; y++) {
 80064b6:	33b0      	adds	r3, #176	@ 0xb0
 80064b8:	340f      	adds	r4, #15
 80064ba:	f5b3 7f30 	cmp.w	r3, #704	@ 0x2c0
 80064be:	f108 0804 	add.w	r8, r8, #4
 80064c2:	b2a4      	uxth	r4, r4
 80064c4:	d1cb      	bne.n	800645e <_ZN11Screen4View13drawTetrominoEiii+0x56>
}
 80064c6:	b007      	add	sp, #28
 80064c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80064cc:	08028022 	.word	0x08028022

080064d0 <_ZN11Screen4View15rotateTetrominoEv>:
        drawTetromino(currentShape, currentX, currentY);
    }
}

void Screen4View::rotateTetromino()
{
 80064d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    // Hình O không cần xoay
    if (currentShape == 3) return;
 80064d4:	f500 5400 	add.w	r4, r0, #8192	@ 0x2000
{
 80064d8:	b089      	sub	sp, #36	@ 0x24
    if (currentShape == 3) return;
 80064da:	f8d4 7ca0 	ldr.w	r7, [r4, #3232]	@ 0xca0
 80064de:	2f03      	cmp	r7, #3
{
 80064e0:	4606      	mov	r6, r0
    if (currentShape == 3) return;
 80064e2:	d066      	beq.n	80065b2 <_ZN11Screen4View15rotateTetrominoEv+0xe2>
    
    uint8_t temp[4][4] = {0};
    uint8_t rotated[4][4] = {0};
 80064e4:	ad04      	add	r5, sp, #16
 80064e6:	2210      	movs	r2, #16
 80064e8:	2100      	movs	r1, #0
 80064ea:	4628      	mov	r0, r5
 80064ec:	f01f f8e9 	bl	80256c2 <memset>
    
    // Copy currentTetromino vào temp
    memcpy(temp, currentTetromino, sizeof(temp));
 80064f0:	46ec      	mov	ip, sp
 80064f2:	f604 4288 	addw	r2, r4, #3208	@ 0xc88
 80064f6:	f604 4898 	addw	r8, r4, #3224	@ 0xc98
 80064fa:	4663      	mov	r3, ip
 80064fc:	6810      	ldr	r0, [r2, #0]
 80064fe:	6851      	ldr	r1, [r2, #4]
 8006500:	46e6      	mov	lr, ip
 8006502:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8006506:	3208      	adds	r2, #8
 8006508:	4542      	cmp	r2, r8
 800650a:	46f4      	mov	ip, lr
 800650c:	d1f6      	bne.n	80064fc <_ZN11Screen4View15rotateTetrominoEv+0x2c>

    // Xác định điểm trung tâm để xoay dựa vào loại hình
    int centerX, centerY;
    if (currentShape == 0) { // Hình I
        centerX = 2;
 800650e:	2f00      	cmp	r7, #0
 8006510:	bf14      	ite	ne
 8006512:	f04f 0801 	movne.w	r8, #1
 8006516:	f04f 0802 	moveq.w	r8, #2
        centerX = 1;
        centerY = 1;
    }

    // Xoay 90 độ quanh điểm trung tâm
    for(int y = 0; y < 4; y++) {
 800651a:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 800651e:	2200      	movs	r2, #0
        for(int x = 0; x < 4; x++) {
 8006520:	4628      	mov	r0, r5
 8006522:	eba5 0c02 	sub.w	ip, r5, r2
 8006526:	ebaa 0902 	sub.w	r9, sl, r2
        centerX = 1;
 800652a:	4619      	mov	r1, r3
        for(int x = 0; x < 4; x++) {
 800652c:	f04f 0e00 	mov.w	lr, #0
            if (currentShape == 0) { // Xử lý đặc biệt cho hình I
 8006530:	2f00      	cmp	r7, #0
 8006532:	d141      	bne.n	80065b8 <_ZN11Screen4View15rotateTetrominoEv+0xe8>
                rotated[x][3-y] = temp[y][x];
 8006534:	f891 b000 	ldrb.w	fp, [r1]
 8006538:	f88c b003 	strb.w	fp, [ip, #3]
        for(int x = 0; x < 4; x++) {
 800653c:	f10e 0e01 	add.w	lr, lr, #1
 8006540:	f1be 0f04 	cmp.w	lr, #4
 8006544:	f101 0101 	add.w	r1, r1, #1
 8006548:	f10c 0c04 	add.w	ip, ip, #4
 800654c:	d1f0      	bne.n	8006530 <_ZN11Screen4View15rotateTetrominoEv+0x60>
    for(int y = 0; y < 4; y++) {
 800654e:	3201      	adds	r2, #1
 8006550:	2a04      	cmp	r2, #4
 8006552:	f103 0304 	add.w	r3, r3, #4
 8006556:	d1e3      	bne.n	8006520 <_ZN11Screen4View15rotateTetrominoEv+0x50>
        }
    }

    // Kiểm tra va chạm với hình đã xoay
    bool canRotate = true;
    for(int y = 0; y < 4 && canRotate; y++) {
 8006558:	2100      	movs	r1, #0
        for(int x = 0; x < 4; x++) {
            if(rotated[y][x]) {
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 800655a:	f04f 0e0f 	mov.w	lr, #15
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
                
                if(boardX < 0 || boardX >= BOARD_WIDTH || 
                   boardY < 0 || boardY >= BOARD_HEIGHT ||
                   board[boardY][boardX]) {
 800655e:	f04f 080a 	mov.w	r8, #10
    for(int y = 0; y < 4; y++) {
 8006562:	4684      	mov	ip, r0
        for(int x = 0; x < 4; x++) {
 8006564:	2200      	movs	r2, #0
            if(rotated[y][x]) {
 8006566:	f81c 3b01 	ldrb.w	r3, [ip], #1
 800656a:	b1c3      	cbz	r3, 800659e <_ZN11Screen4View15rotateTetrominoEv+0xce>
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 800656c:	f8d4 3c98 	ldr.w	r3, [r4, #3224]	@ 0xc98
 8006570:	f1a3 0914 	sub.w	r9, r3, #20
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8006574:	f8d4 3c9c 	ldr.w	r3, [r4, #3228]	@ 0xc9c
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8006578:	fb99 f9fe 	sdiv	r9, r9, lr
 800657c:	4491      	add	r9, r2
                if(boardX < 0 || boardX >= BOARD_WIDTH || 
 800657e:	f1b9 0f09 	cmp.w	r9, #9
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8006582:	f1a3 030a 	sub.w	r3, r3, #10
 8006586:	fb93 f3fe 	sdiv	r3, r3, lr
 800658a:	440b      	add	r3, r1
                if(boardX < 0 || boardX >= BOARD_WIDTH || 
 800658c:	d81c      	bhi.n	80065c8 <_ZN11Screen4View15rotateTetrominoEv+0xf8>
 800658e:	2b13      	cmp	r3, #19
 8006590:	d81a      	bhi.n	80065c8 <_ZN11Screen4View15rotateTetrominoEv+0xf8>
                   board[boardY][boardX]) {
 8006592:	fb08 6303 	mla	r3, r8, r3, r6
 8006596:	444b      	add	r3, r9
                   boardY < 0 || boardY >= BOARD_HEIGHT ||
 8006598:	f893 33e0 	ldrb.w	r3, [r3, #992]	@ 0x3e0
 800659c:	b9a3      	cbnz	r3, 80065c8 <_ZN11Screen4View15rotateTetrominoEv+0xf8>
        for(int x = 0; x < 4; x++) {
 800659e:	3201      	adds	r2, #1
 80065a0:	2a04      	cmp	r2, #4
 80065a2:	d1e0      	bne.n	8006566 <_ZN11Screen4View15rotateTetrominoEv+0x96>
 80065a4:	2301      	movs	r3, #1
    for(int y = 0; y < 4 && canRotate; y++) {
 80065a6:	3101      	adds	r1, #1
 80065a8:	2904      	cmp	r1, #4
 80065aa:	d00f      	beq.n	80065cc <_ZN11Screen4View15rotateTetrominoEv+0xfc>
 80065ac:	3004      	adds	r0, #4
 80065ae:	2b00      	cmp	r3, #0
 80065b0:	d1d7      	bne.n	8006562 <_ZN11Screen4View15rotateTetrominoEv+0x92>
        // Cập nhật currentTetromino với hình đã xoay
        memcpy(currentTetromino, rotated, sizeof(currentTetromino));
        drawTetromino(currentShape, currentX, currentY);
        invalidate();
    }
}
 80065b2:	b009      	add	sp, #36	@ 0x24
 80065b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                if(newX >= 0 && newX < 4 && newY >= 0 && newY < 4) {
 80065b8:	f1b9 0f03 	cmp.w	r9, #3
                    rotated[newY][newX] = temp[y][x];
 80065bc:	bf9c      	itt	ls
 80065be:	f891 b000 	ldrbls.w	fp, [r1]
 80065c2:	f80c b018 	strbls.w	fp, [ip, r8, lsl #1]
 80065c6:	e7b9      	b.n	800653c <_ZN11Screen4View15rotateTetrominoEv+0x6c>
                    canRotate = false;
 80065c8:	2300      	movs	r3, #0
 80065ca:	e7ec      	b.n	80065a6 <_ZN11Screen4View15rotateTetrominoEv+0xd6>
    if(canRotate) {
 80065cc:	2b00      	cmp	r3, #0
 80065ce:	d0f0      	beq.n	80065b2 <_ZN11Screen4View15rotateTetrominoEv+0xe2>
        memcpy(currentTetromino, rotated, sizeof(currentTetromino));
 80065d0:	f604 4288 	addw	r2, r4, #3208	@ 0xc88
 80065d4:	f10d 0c20 	add.w	ip, sp, #32
 80065d8:	462b      	mov	r3, r5
 80065da:	cb03      	ldmia	r3!, {r0, r1}
 80065dc:	4563      	cmp	r3, ip
 80065de:	6010      	str	r0, [r2, #0]
 80065e0:	6051      	str	r1, [r2, #4]
 80065e2:	461d      	mov	r5, r3
 80065e4:	f102 0208 	add.w	r2, r2, #8
 80065e8:	d1f6      	bne.n	80065d8 <_ZN11Screen4View15rotateTetrominoEv+0x108>
        drawTetromino(currentShape, currentX, currentY);
 80065ea:	4630      	mov	r0, r6
 80065ec:	f8d4 3c9c 	ldr.w	r3, [r4, #3228]	@ 0xc9c
 80065f0:	f8d4 2c98 	ldr.w	r2, [r4, #3224]	@ 0xc98
 80065f4:	4639      	mov	r1, r7
 80065f6:	f7ff ff07 	bl	8006408 <_ZN11Screen4View13drawTetrominoEiii>
        container.invalidate();
 80065fa:	1d30      	adds	r0, r6, #4
}
 80065fc:	b009      	add	sp, #36	@ 0x24
 80065fe:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006602:	f00c bafb 	b.w	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
	...

08006608 <_ZN11Screen4View17drawNextTetrominoEv>:
{
 8006608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    switch(nextShape) {
 800660c:	f500 5b00 	add.w	fp, r0, #8192	@ 0x2000
{
 8006610:	b085      	sub	sp, #20
    switch(nextShape) {
 8006612:	f8db 2ca4 	ldr.w	r2, [fp, #3236]	@ 0xca4
{
 8006616:	4605      	mov	r5, r0
    switch(nextShape) {
 8006618:	2a00      	cmp	r2, #0
 800661a:	d057      	beq.n	80066cc <_ZN11Screen4View17drawNextTetrominoEv+0xc4>
            NEXT_START_Y = 123;
 800661c:	2a03      	cmp	r2, #3
 800661e:	f04f 0a7b 	mov.w	sl, #123	@ 0x7b
 8006622:	bf0c      	ite	eq
 8006624:	f04f 09c3 	moveq.w	r9, #195	@ 0xc3
 8006628:	f04f 09c0 	movne.w	r9, #192	@ 0xc0
    for(int y = 0; y < 4; y++) {
 800662c:	f505 5827 	add.w	r8, r5, #10688	@ 0x29c0
        container.remove(d);
 8006630:	1d2b      	adds	r3, r5, #4
        for(int x = 0; x < 4; x++) {
 8006632:	2400      	movs	r4, #0
 8006634:	f108 0808 	add.w	r8, r8, #8
 8006638:	9301      	str	r3, [sp, #4]
 800663a:	eb08 0704 	add.w	r7, r8, r4
 800663e:	2600      	movs	r6, #0
 8006640:	4639      	mov	r1, r7
 8006642:	9801      	ldr	r0, [sp, #4]
 8006644:	3601      	adds	r6, #1
 8006646:	f005 fc74 	bl	800bf32 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 800664a:	2e04      	cmp	r6, #4
 800664c:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 8006650:	d1f6      	bne.n	8006640 <_ZN11Screen4View17drawNextTetrominoEv+0x38>
    for(int y = 0; y < 4; y++) {
 8006652:	34b0      	adds	r4, #176	@ 0xb0
 8006654:	f5b4 7f30 	cmp.w	r4, #704	@ 0x2c0
 8006658:	d1ef      	bne.n	800663a <_ZN11Screen4View17drawNextTetrominoEv+0x32>
    for(int y = 0; y < 4; y++) {
 800665a:	2400      	movs	r4, #0
        for(int x = 0; x < 4; x++) {
 800665c:	f642 17c8 	movw	r7, #10696	@ 0x29c8
 8006660:	23b0      	movs	r3, #176	@ 0xb0
 8006662:	fb03 7704 	mla	r7, r3, r4, r7
 8006666:	2600      	movs	r6, #0
            if(TETROMINOS[nextShape][y][x] == 1) {
 8006668:	f8db 2ca4 	ldr.w	r2, [fp, #3236]	@ 0xca4
 800666c:	4b1a      	ldr	r3, [pc, #104]	@ (80066d8 <_ZN11Screen4View17drawNextTetrominoEv+0xd0>)
 800666e:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8006672:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 8006676:	5d92      	ldrb	r2, [r2, r6]
 8006678:	2a01      	cmp	r2, #1
 800667a:	d11c      	bne.n	80066b6 <_ZN11Screen4View17drawNextTetrominoEv+0xae>
                nextBlocks[y][x].setXY(
 800667c:	eb04 02c4 	add.w	r2, r4, r4, lsl #3
 8006680:	eb06 01c6 	add.w	r1, r6, r6, lsl #3
 8006684:	eb05 0807 	add.w	r8, r5, r7
 8006688:	4452      	add	r2, sl
 800668a:	4449      	add	r1, r9
 800668c:	b212      	sxth	r2, r2
 800668e:	b209      	sxth	r1, r1
 8006690:	4640      	mov	r0, r8
 8006692:	f7fc fe88 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
                nextBlocks[y][x].setBitmap(Bitmap(TETROMINO_NEXT_IMAGES[nextShape]));
 8006696:	f8db 1ca4 	ldr.w	r1, [fp, #3236]	@ 0xca4
 800669a:	4b10      	ldr	r3, [pc, #64]	@ (80066dc <_ZN11Screen4View17drawNextTetrominoEv+0xd4>)
 800669c:	59ea      	ldr	r2, [r5, r7]
 800669e:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 80066a2:	f8ad 100c 	strh.w	r1, [sp, #12]
 80066a6:	4640      	mov	r0, r8
 80066a8:	a903      	add	r1, sp, #12
 80066aa:	6e12      	ldr	r2, [r2, #96]	@ 0x60
 80066ac:	4790      	blx	r2
        container.add(d);
 80066ae:	9801      	ldr	r0, [sp, #4]
 80066b0:	4641      	mov	r1, r8
 80066b2:	f005 fbfd 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        for(int x = 0; x < 4; x++) {
 80066b6:	3601      	adds	r6, #1
 80066b8:	2e04      	cmp	r6, #4
 80066ba:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 80066be:	d1d3      	bne.n	8006668 <_ZN11Screen4View17drawNextTetrominoEv+0x60>
    for(int y = 0; y < 4; y++) {
 80066c0:	3401      	adds	r4, #1
 80066c2:	2c04      	cmp	r4, #4
 80066c4:	d1ca      	bne.n	800665c <_ZN11Screen4View17drawNextTetrominoEv+0x54>
}
 80066c6:	b005      	add	sp, #20
 80066c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            NEXT_START_Y = 127;
 80066cc:	f04f 0a7f 	mov.w	sl, #127	@ 0x7f
            NEXT_START_X = 187;
 80066d0:	f04f 09bb 	mov.w	r9, #187	@ 0xbb
 80066d4:	e7aa      	b.n	800662c <_ZN11Screen4View17drawNextTetrominoEv+0x24>
 80066d6:	bf00      	nop
 80066d8:	08028030 	.word	0x08028030
 80066dc:	08028014 	.word	0x08028014

080066e0 <_ZN11Screen4ViewC1Ev>:
Screen4View::Screen4View() : 
 80066e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80066e4:	4604      	mov	r4, r0
 80066e6:	b08d      	sub	sp, #52	@ 0x34
    isWin(false)
 80066e8:	f7fd fcce 	bl	8004088 <_ZN15Screen4ViewBaseC1Ev>
 80066ec:	4b7c      	ldr	r3, [pc, #496]	@ (80068e0 <_ZN11Screen4ViewC1Ev+0x200>)
 80066ee:	6023      	str	r3, [r4, #0]
 80066f0:	f504 6595 	add.w	r5, r4, #1192	@ 0x4a8
 80066f4:	f504 66ed 	add.w	r6, r4, #1896	@ 0x768
 80066f8:	f64f 78ff 	movw	r8, #65535	@ 0xffff
 80066fc:	f105 07b0 	add.w	r7, r5, #176	@ 0xb0
 8006700:	4628      	mov	r0, r5
 8006702:	a90a      	add	r1, sp, #40	@ 0x28
 8006704:	352c      	adds	r5, #44	@ 0x2c
 8006706:	f8ad 8028 	strh.w	r8, [sp, #40]	@ 0x28
 800670a:	f7fc fe93 	bl	8003434 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800670e:	42bd      	cmp	r5, r7
 8006710:	d1f6      	bne.n	8006700 <_ZN11Screen4ViewC1Ev+0x20>
 8006712:	42b5      	cmp	r5, r6
 8006714:	d1f2      	bne.n	80066fc <_ZN11Screen4ViewC1Ev+0x1c>
 8006716:	f504 5527 	add.w	r5, r4, #10688	@ 0x29c0
 800671a:	3508      	adds	r5, #8
 800671c:	f64f 78ff 	movw	r8, #65535	@ 0xffff
 8006720:	f506 77dc 	add.w	r7, r6, #440	@ 0x1b8
 8006724:	4630      	mov	r0, r6
 8006726:	a90a      	add	r1, sp, #40	@ 0x28
 8006728:	362c      	adds	r6, #44	@ 0x2c
 800672a:	f8ad 8028 	strh.w	r8, [sp, #40]	@ 0x28
 800672e:	f7fc fe81 	bl	8003434 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8006732:	42be      	cmp	r6, r7
 8006734:	d1f6      	bne.n	8006724 <_ZN11Screen4ViewC1Ev+0x44>
 8006736:	42ae      	cmp	r6, r5
 8006738:	d1f2      	bne.n	8006720 <_ZN11Screen4ViewC1Ev+0x40>
 800673a:	f504 5632 	add.w	r6, r4, #11392	@ 0x2c80
 800673e:	3608      	adds	r6, #8
 8006740:	f64f 78ff 	movw	r8, #65535	@ 0xffff
 8006744:	f105 07b0 	add.w	r7, r5, #176	@ 0xb0
 8006748:	4628      	mov	r0, r5
 800674a:	a90a      	add	r1, sp, #40	@ 0x28
 800674c:	352c      	adds	r5, #44	@ 0x2c
 800674e:	f8ad 8028 	strh.w	r8, [sp, #40]	@ 0x28
 8006752:	f7fc fe6f 	bl	8003434 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8006756:	42bd      	cmp	r5, r7
 8006758:	d1f6      	bne.n	8006748 <_ZN11Screen4ViewC1Ev+0x68>
 800675a:	42b5      	cmp	r5, r6
 800675c:	d1f2      	bne.n	8006744 <_ZN11Screen4ViewC1Ev+0x64>
    currentX(80),
 800675e:	f504 5500 	add.w	r5, r4, #8192	@ 0x2000
 8006762:	2350      	movs	r3, #80	@ 0x50
 8006764:	f8c5 3c98 	str.w	r3, [r5, #3224]	@ 0xc98
    currentY(10),
 8006768:	230a      	movs	r3, #10
    currentShape(0),
 800676a:	2100      	movs	r1, #0
    currentY(10),
 800676c:	f8c5 3c9c 	str.w	r3, [r5, #3228]	@ 0xc9c
    nextShape(1),  // Khởi tạo shape tiếp theo
 8006770:	2301      	movs	r3, #1
 8006772:	f8c5 3ca4 	str.w	r3, [r5, #3236]	@ 0xca4
    currentShape(0),
 8006776:	f8c5 1ca0 	str.w	r1, [r5, #3232]	@ 0xca0
    tickCount(0),
 800677a:	f8c5 1ca8 	str.w	r1, [r5, #3240]	@ 0xca8
    isGameOver(false),
 800677e:	f8a5 1cb0 	strh.w	r1, [r5, #3248]	@ 0xcb0
    memset(board, 0, sizeof(board));
 8006782:	22c8      	movs	r2, #200	@ 0xc8
 8006784:	f504 7078 	add.w	r0, r4, #992	@ 0x3e0
 8006788:	f01e ff9b 	bl	80256c2 <memset>
    memcpy(currentTetromino, TETROMINOS[currentShape], sizeof(currentTetromino));
 800678c:	4b55      	ldr	r3, [pc, #340]	@ (80068e4 <_ZN11Screen4ViewC1Ev+0x204>)
 800678e:	f605 4588 	addw	r5, r5, #3208	@ 0xc88
 8006792:	f103 0210 	add.w	r2, r3, #16
 8006796:	f853 1b04 	ldr.w	r1, [r3], #4
 800679a:	f845 1b04 	str.w	r1, [r5], #4
 800679e:	4293      	cmp	r3, r2
 80067a0:	d1f9      	bne.n	8006796 <_ZN11Screen4ViewC1Ev+0xb6>
    drawTetromino(currentShape, currentX, currentY);
 80067a2:	230a      	movs	r3, #10
 80067a4:	2250      	movs	r2, #80	@ 0x50
 80067a6:	2100      	movs	r1, #0
 80067a8:	4620      	mov	r0, r4
 80067aa:	f7ff fe2d 	bl	8006408 <_ZN11Screen4View13drawTetrominoEiii>
    drawNextTetromino();
 80067ae:	4620      	mov	r0, r4
 80067b0:	f7ff ff2a 	bl	8006608 <_ZN11Screen4View17drawNextTetrominoEv>
    for(int i = 0; i < 7; i++) {
 80067b4:	f8df a13c 	ldr.w	sl, [pc, #316]	@ 80068f4 <_ZN11Screen4ViewC1Ev+0x214>
    drawNextTetromino();
 80067b8:	f04f 0907 	mov.w	r9, #7
        int shape = INIT_BLOCKS[i][2];
 80067bc:	f8da 3008 	ldr.w	r3, [sl, #8]
 80067c0:	9303      	str	r3, [sp, #12]
        int blockY = INIT_BLOCKS[i][1];
 80067c2:	e9da 0500 	ldrd	r0, r5, [sl]
        for(int y = 0; y < 4; y++) {
 80067c6:	9a03      	ldr	r2, [sp, #12]
 80067c8:	4b46      	ldr	r3, [pc, #280]	@ (80068e4 <_ZN11Screen4ViewC1Ev+0x204>)
                    int boardY = (blockY - 10) / BLOCK_SIZE + y;
 80067ca:	260f      	movs	r6, #15
 80067cc:	f1a5 010a 	sub.w	r1, r5, #10
 80067d0:	f44f 7bdc 	mov.w	fp, #440	@ 0x1b8
 80067d4:	fb91 f1f6 	sdiv	r1, r1, r6
 80067d8:	b2ad      	uxth	r5, r5
 80067da:	eb03 1302 	add.w	r3, r3, r2, lsl #4
                    int boardX = (blockX - 20) / BLOCK_SIZE + x;
 80067de:	f1a0 0214 	sub.w	r2, r0, #20
 80067e2:	fb92 f2f6 	sdiv	r2, r2, r6
 80067e6:	260a      	movs	r6, #10
 80067e8:	f502 7778 	add.w	r7, r2, #992	@ 0x3e0
 80067ec:	fb06 7701 	mla	r7, r6, r1, r7
 80067f0:	fb0b fb01 	mul.w	fp, fp, r1
 80067f4:	f105 013c 	add.w	r1, r5, #60	@ 0x3c
 80067f8:	b289      	uxth	r1, r1
 80067fa:	9107      	str	r1, [sp, #28]
 80067fc:	212c      	movs	r1, #44	@ 0x2c
 80067fe:	fb01 4202 	mla	r2, r1, r2, r4
 8006802:	9208      	str	r2, [sp, #32]
 8006804:	b282      	uxth	r2, r0
 8006806:	9204      	str	r2, [sp, #16]
 8006808:	323c      	adds	r2, #60	@ 0x3c
 800680a:	b292      	uxth	r2, r2
 800680c:	4427      	add	r7, r4
 800680e:	9206      	str	r2, [sp, #24]
                    staticBlocks[boardY][boardX].setXY(
 8006810:	b22a      	sxth	r2, r5
 8006812:	9205      	str	r2, [sp, #20]
 8006814:	9a08      	ldr	r2, [sp, #32]
 8006816:	f8dd 8010 	ldr.w	r8, [sp, #16]
 800681a:	e9cd 7301 	strd	r7, r3, [sp, #4]
 800681e:	f502 66ed 	add.w	r6, r2, #1896	@ 0x768
 8006822:	445e      	add	r6, fp
                if(TETROMINOS[shape][y][x]) {
 8006824:	9902      	ldr	r1, [sp, #8]
 8006826:	f811 2b01 	ldrb.w	r2, [r1], #1
 800682a:	9102      	str	r1, [sp, #8]
 800682c:	b1d2      	cbz	r2, 8006864 <_ZN11Screen4ViewC1Ev+0x184>
 800682e:	9309      	str	r3, [sp, #36]	@ 0x24
                    board[boardY][boardX] = true;
 8006830:	9b01      	ldr	r3, [sp, #4]
 8006832:	f04f 0201 	mov.w	r2, #1
 8006836:	701a      	strb	r2, [r3, #0]
                    staticBlocks[boardY][boardX].setXY(
 8006838:	fa0f f188 	sxth.w	r1, r8
 800683c:	9a05      	ldr	r2, [sp, #20]
 800683e:	4630      	mov	r0, r6
 8006840:	f7fc fdb1 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
                    staticBlocks[boardY][boardX].setBitmap(Bitmap(TETROMINO_IMAGES[shape]));
 8006844:	4b28      	ldr	r3, [pc, #160]	@ (80068e8 <_ZN11Screen4ViewC1Ev+0x208>)
 8006846:	9903      	ldr	r1, [sp, #12]
 8006848:	6832      	ldr	r2, [r6, #0]
 800684a:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 800684e:	6e12      	ldr	r2, [r2, #96]	@ 0x60
 8006850:	f8ad 1028 	strh.w	r1, [sp, #40]	@ 0x28
 8006854:	4630      	mov	r0, r6
 8006856:	a90a      	add	r1, sp, #40	@ 0x28
 8006858:	4790      	blx	r2
 800685a:	4631      	mov	r1, r6
 800685c:	1d20      	adds	r0, r4, #4
 800685e:	f005 fb27 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006862:	9b09      	ldr	r3, [sp, #36]	@ 0x24
            for(int x = 0; x < 4; x++) {
 8006864:	9a01      	ldr	r2, [sp, #4]
 8006866:	3201      	adds	r2, #1
 8006868:	9201      	str	r2, [sp, #4]
 800686a:	f108 080f 	add.w	r8, r8, #15
 800686e:	9a06      	ldr	r2, [sp, #24]
 8006870:	fa1f f888 	uxth.w	r8, r8
 8006874:	4590      	cmp	r8, r2
 8006876:	f106 062c 	add.w	r6, r6, #44	@ 0x2c
 800687a:	d1d3      	bne.n	8006824 <_ZN11Screen4ViewC1Ev+0x144>
        for(int y = 0; y < 4; y++) {
 800687c:	9a07      	ldr	r2, [sp, #28]
 800687e:	350f      	adds	r5, #15
 8006880:	b2ad      	uxth	r5, r5
 8006882:	4295      	cmp	r5, r2
 8006884:	f50b 7bdc 	add.w	fp, fp, #440	@ 0x1b8
 8006888:	f103 0304 	add.w	r3, r3, #4
 800688c:	f107 070a 	add.w	r7, r7, #10
 8006890:	d1be      	bne.n	8006810 <_ZN11Screen4ViewC1Ev+0x130>
    for(int i = 0; i < 7; i++) {
 8006892:	f1b9 0901 	subs.w	r9, r9, #1
 8006896:	f10a 0a0c 	add.w	sl, sl, #12
 800689a:	d18f      	bne.n	80067bc <_ZN11Screen4ViewC1Ev+0xdc>
    score = 0;
 800689c:	f504 5300 	add.w	r3, r4, #8192	@ 0x2000
    Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 80068a0:	f504 5532 	add.w	r5, r4, #11392	@ 0x2c80
 80068a4:	3532      	adds	r5, #50	@ 0x32
 80068a6:	4a11      	ldr	r2, [pc, #68]	@ (80068ec <_ZN11Screen4ViewC1Ev+0x20c>)
    score = 0;
 80068a8:	f8c3 9cac 	str.w	r9, [r3, #3244]	@ 0xcac
    Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 80068ac:	2114      	movs	r1, #20
 80068ae:	464b      	mov	r3, r9
 80068b0:	4628      	mov	r0, r5
 80068b2:	f00e fc89 	bl	80151c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80068b6:	f8c4 5158 	str.w	r5, [r4, #344]	@ 0x158
 80068ba:	4b0d      	ldr	r3, [pc, #52]	@ (80068f0 <_ZN11Screen4ViewC1Ev+0x210>)
 80068bc:	930a      	str	r3, [sp, #40]	@ 0x28
    textArea1.setTypedText(touchgfx::TypedText(T_TOADOX));
 80068be:	f504 7588 	add.w	r5, r4, #272	@ 0x110
 80068c2:	230c      	movs	r3, #12
 80068c4:	a90a      	add	r1, sp, #40	@ 0x28
 80068c6:	4628      	mov	r0, r5
 80068c8:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 80068cc:	f008 fa8c 	bl	800ede8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea1.invalidate(); // Vẽ lại nội dung};
 80068d0:	4628      	mov	r0, r5
 80068d2:	f00c f993 	bl	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
}
 80068d6:	4620      	mov	r0, r4
 80068d8:	b00d      	add	sp, #52	@ 0x34
 80068da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80068de:	bf00      	nop
 80068e0:	08027f70 	.word	0x08027f70
 80068e4:	08028030 	.word	0x08028030
 80068e8:	08028022 	.word	0x08028022
 80068ec:	0802723d 	.word	0x0802723d
 80068f0:	08027840 	.word	0x08027840
 80068f4:	08027f9c 	.word	0x08027f9c

080068f8 <_ZN11Screen4View11clearScreenEv>:

void Screen4View::clearScreen()
{
 80068f8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80068fc:	4604      	mov	r4, r0
    for(int y = 0; y < 4; y++) {
        for(int x = 0; x < 4; x++) {
 80068fe:	2500      	movs	r5, #0
 8006900:	f500 6995 	add.w	r9, r0, #1192	@ 0x4a8
        container.remove(d);
 8006904:	f100 0804 	add.w	r8, r0, #4
 8006908:	eb09 0705 	add.w	r7, r9, r5
 800690c:	2600      	movs	r6, #0
 800690e:	4639      	mov	r1, r7
 8006910:	4640      	mov	r0, r8
 8006912:	3601      	adds	r6, #1
 8006914:	f005 fb0d 	bl	800bf32 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8006918:	2e04      	cmp	r6, #4
 800691a:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 800691e:	d1f6      	bne.n	800690e <_ZN11Screen4View11clearScreenEv+0x16>
    for(int y = 0; y < 4; y++) {
 8006920:	35b0      	adds	r5, #176	@ 0xb0
 8006922:	f5b5 7f30 	cmp.w	r5, #704	@ 0x2c0
 8006926:	d1ef      	bne.n	8006908 <_ZN11Screen4View11clearScreenEv+0x10>
 8006928:	f06f 0a2a 	mvn.w	sl, #42	@ 0x2a
 800692c:	f204 39df 	addw	r9, r4, #991	@ 0x3df
 8006930:	fb04 fa0a 	mul.w	sl, r4, sl
 8006934:	2700      	movs	r7, #0
    
    // Xóa tất cả khối cố định trên board
    for(int y = 0; y < BOARD_HEIGHT; y++) {
        for(int x = 0; x < BOARD_WIDTH; x++) {
            if(board[y][x]) {
                remove(staticBlocks[y][x]);
 8006936:	f04f 0b2c 	mov.w	fp, #44	@ 0x2c
        for(int x = 0; x < 4; x++) {
 800693a:	464e      	mov	r6, r9
 800693c:	250a      	movs	r5, #10
            if(board[y][x]) {
 800693e:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 8006942:	b14a      	cbz	r2, 8006958 <_ZN11Screen4View11clearScreenEv+0x60>
                remove(staticBlocks[y][x]);
 8006944:	fb0b a106 	mla	r1, fp, r6, sl
 8006948:	f5a1 4123 	sub.w	r1, r1, #41728	@ 0xa300
 800694c:	3918      	subs	r1, #24
 800694e:	4640      	mov	r0, r8
 8006950:	f005 faef 	bl	800bf32 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
                board[y][x] = false;
 8006954:	2300      	movs	r3, #0
 8006956:	7033      	strb	r3, [r6, #0]
        for(int x = 0; x < BOARD_WIDTH; x++) {
 8006958:	3d01      	subs	r5, #1
 800695a:	d1f0      	bne.n	800693e <_ZN11Screen4View11clearScreenEv+0x46>
    for(int y = 0; y < BOARD_HEIGHT; y++) {
 800695c:	f507 77dc 	add.w	r7, r7, #440	@ 0x1b8
 8006960:	f242 2260 	movw	r2, #8800	@ 0x2260
 8006964:	4297      	cmp	r7, r2
 8006966:	f109 090a 	add.w	r9, r9, #10
 800696a:	d1e6      	bne.n	800693a <_ZN11Screen4View11clearScreenEv+0x42>
 800696c:	f504 5427 	add.w	r4, r4, #10688	@ 0x29c0
 8006970:	3408      	adds	r4, #8
        }
    }
    
    // Xóa khối tiếp theo
    for(int y = 0; y < 4; y++) {
        for(int x = 0; x < 4; x++) {
 8006972:	1967      	adds	r7, r4, r5
 8006974:	2600      	movs	r6, #0
 8006976:	4639      	mov	r1, r7
 8006978:	4640      	mov	r0, r8
 800697a:	3601      	adds	r6, #1
 800697c:	f005 fad9 	bl	800bf32 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8006980:	2e04      	cmp	r6, #4
 8006982:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 8006986:	d1f6      	bne.n	8006976 <_ZN11Screen4View11clearScreenEv+0x7e>
    for(int y = 0; y < 4; y++) {
 8006988:	35b0      	adds	r5, #176	@ 0xb0
 800698a:	f5b5 7f30 	cmp.w	r5, #704	@ 0x2c0
 800698e:	d1f0      	bne.n	8006972 <_ZN11Screen4View11clearScreenEv+0x7a>
            remove(nextBlocks[y][x]);
        }
    }
}
 8006990:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08006994 <_ZN11Screen4View18createNewTetrominoEv>:
{
 8006994:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    if (isGameOver || isWin) {
 8006996:	f500 5500 	add.w	r5, r0, #8192	@ 0x2000
{
 800699a:	4604      	mov	r4, r0
    if (isGameOver || isWin) {
 800699c:	f895 3cb0 	ldrb.w	r3, [r5, #3248]	@ 0xcb0
 80069a0:	2b00      	cmp	r3, #0
 80069a2:	f040 8098 	bne.w	8006ad6 <_ZN11Screen4View18createNewTetrominoEv+0x142>
 80069a6:	f895 3cb1 	ldrb.w	r3, [r5, #3249]	@ 0xcb1
 80069aa:	2b00      	cmp	r3, #0
 80069ac:	f040 8093 	bne.w	8006ad6 <_ZN11Screen4View18createNewTetrominoEv+0x142>
    currentShape = nextShape;
 80069b0:	f8d5 1ca4 	ldr.w	r1, [r5, #3236]	@ 0xca4
 80069b4:	f8c5 1ca0 	str.w	r1, [r5, #3232]	@ 0xca0
    currentY = 10;
 80069b8:	230a      	movs	r3, #10
 80069ba:	f8c5 3c9c 	str.w	r3, [r5, #3228]	@ 0xc9c
    currentX = 80;
 80069be:	2350      	movs	r3, #80	@ 0x50
    nextShape = (nextShape + 1) % TETRIS_SHAPES;
 80069c0:	1c4a      	adds	r2, r1, #1
    currentX = 80;
 80069c2:	f8c5 3c98 	str.w	r3, [r5, #3224]	@ 0xc98
    nextShape = (nextShape + 1) % TETRIS_SHAPES;
 80069c6:	2307      	movs	r3, #7
 80069c8:	fb92 f3f3 	sdiv	r3, r2, r3
 80069cc:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 80069d0:	1ad2      	subs	r2, r2, r3
    memcpy(currentTetromino, TETROMINOS[currentShape], sizeof(currentTetromino));
 80069d2:	4b42      	ldr	r3, [pc, #264]	@ (8006adc <_ZN11Screen4View18createNewTetrominoEv+0x148>)
    nextShape = (nextShape + 1) % TETRIS_SHAPES;
 80069d4:	f8c5 2ca4 	str.w	r2, [r5, #3236]	@ 0xca4
    memcpy(currentTetromino, TETROMINOS[currentShape], sizeof(currentTetromino));
 80069d8:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 80069dc:	f500 5232 	add.w	r2, r0, #11392	@ 0x2c80
 80069e0:	3208      	adds	r2, #8
 80069e2:	f103 0110 	add.w	r1, r3, #16
 80069e6:	f853 0b04 	ldr.w	r0, [r3], #4
 80069ea:	f842 0b04 	str.w	r0, [r2], #4
 80069ee:	428b      	cmp	r3, r1
 80069f0:	d1f9      	bne.n	80069e6 <_ZN11Screen4View18createNewTetrominoEv+0x52>
    drawNextTetromino();
 80069f2:	4620      	mov	r0, r4
 80069f4:	f7ff fe08 	bl	8006608 <_ZN11Screen4View17drawNextTetrominoEv>
    for(int y = 0; y < 4 && canCreate; y++) {
 80069f8:	f504 5132 	add.w	r1, r4, #11392	@ 0x2c80
 80069fc:	3107      	adds	r1, #7
 80069fe:	2600      	movs	r6, #0
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8006a00:	f04f 0c0f 	mov.w	ip, #15
{
 8006a04:	460f      	mov	r7, r1
        for(int x = 0; x < 4; x++) {
 8006a06:	2000      	movs	r0, #0
            if(currentTetromino[y][x]) {  // Nếu ô này có khối
 8006a08:	f817 3f01 	ldrb.w	r3, [r7, #1]!
 8006a0c:	b1c3      	cbz	r3, 8006a40 <_ZN11Screen4View18createNewTetrominoEv+0xac>
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8006a0e:	f8d5 2c98 	ldr.w	r2, [r5, #3224]	@ 0xc98
 8006a12:	3a14      	subs	r2, #20
 8006a14:	fb92 f2fc 	sdiv	r2, r2, ip
 8006a18:	4402      	add	r2, r0
                if(boardX >= 0 && boardX < BOARD_WIDTH && 
 8006a1a:	2a09      	cmp	r2, #9
 8006a1c:	d810      	bhi.n	8006a40 <_ZN11Screen4View18createNewTetrominoEv+0xac>
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8006a1e:	f8d5 3c9c 	ldr.w	r3, [r5, #3228]	@ 0xc9c
 8006a22:	3b0a      	subs	r3, #10
 8006a24:	fb93 f3fc 	sdiv	r3, r3, ip
 8006a28:	4433      	add	r3, r6
                if(boardX >= 0 && boardX < BOARD_WIDTH && 
 8006a2a:	2b13      	cmp	r3, #19
 8006a2c:	d808      	bhi.n	8006a40 <_ZN11Screen4View18createNewTetrominoEv+0xac>
                   board[boardY][boardX]) {
 8006a2e:	f04f 0e0a 	mov.w	lr, #10
 8006a32:	fb0e 4303 	mla	r3, lr, r3, r4
 8006a36:	4413      	add	r3, r2
                   boardY >= 0 && boardY < BOARD_HEIGHT && 
 8006a38:	f893 33e0 	ldrb.w	r3, [r3, #992]	@ 0x3e0
 8006a3c:	2b00      	cmp	r3, #0
 8006a3e:	d13a      	bne.n	8006ab6 <_ZN11Screen4View18createNewTetrominoEv+0x122>
        for(int x = 0; x < 4; x++) {
 8006a40:	3001      	adds	r0, #1
 8006a42:	2804      	cmp	r0, #4
 8006a44:	d1e0      	bne.n	8006a08 <_ZN11Screen4View18createNewTetrominoEv+0x74>
 8006a46:	2301      	movs	r3, #1
    for(int y = 0; y < 4 && canCreate; y++) {
 8006a48:	3601      	adds	r6, #1
 8006a4a:	2e04      	cmp	r6, #4
 8006a4c:	d035      	beq.n	8006aba <_ZN11Screen4View18createNewTetrominoEv+0x126>
 8006a4e:	3104      	adds	r1, #4
 8006a50:	2b00      	cmp	r3, #0
 8006a52:	d1d7      	bne.n	8006a04 <_ZN11Screen4View18createNewTetrominoEv+0x70>
        isGameOver = true;
 8006a54:	2601      	movs	r6, #1
 8006a56:	f885 6cb0 	strb.w	r6, [r5, #3248]	@ 0xcb0
        clearScreen();
 8006a5a:	4620      	mov	r0, r4
        Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 8006a5c:	f504 5732 	add.w	r7, r4, #11392	@ 0x2c80
        clearScreen();
 8006a60:	f7ff ff4a 	bl	80068f8 <_ZN11Screen4View11clearScreenEv>
        Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 8006a64:	3732      	adds	r7, #50	@ 0x32
        visible = vis;
 8006a66:	2300      	movs	r3, #0
 8006a68:	4a1d      	ldr	r2, [pc, #116]	@ (8006ae0 <_ZN11Screen4View18createNewTetrominoEv+0x14c>)
 8006a6a:	f884 30bd 	strb.w	r3, [r4, #189]	@ 0xbd
 8006a6e:	f884 6181 	strb.w	r6, [r4, #385]	@ 0x181
 8006a72:	f8d5 3cac 	ldr.w	r3, [r5, #3244]	@ 0xcac
 8006a76:	f884 61d9 	strb.w	r6, [r4, #473]	@ 0x1d9
 8006a7a:	f884 6251 	strb.w	r6, [r4, #593]	@ 0x251
 8006a7e:	2114      	movs	r1, #20
 8006a80:	4638      	mov	r0, r7
 8006a82:	f00e fba1 	bl	80151c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        textArea2.setTypedText(touchgfx::TypedText(T_MAN3SCORE));
 8006a86:	f504 7565 	add.w	r5, r4, #916	@ 0x394
 8006a8a:	4b16      	ldr	r3, [pc, #88]	@ (8006ae4 <_ZN11Screen4View18createNewTetrominoEv+0x150>)
 8006a8c:	9300      	str	r3, [sp, #0]
 8006a8e:	4669      	mov	r1, sp
 8006a90:	2306      	movs	r3, #6
 8006a92:	4628      	mov	r0, r5
 8006a94:	f884 63b9 	strb.w	r6, [r4, #953]	@ 0x3b9
 8006a98:	f8c4 73dc 	str.w	r7, [r4, #988]	@ 0x3dc
 8006a9c:	f8ad 3004 	strh.w	r3, [sp, #4]
 8006aa0:	f008 f9a2 	bl	800ede8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        textArea2.invalidate(); // Vẽ lại nội dung
 8006aa4:	4628      	mov	r0, r5
 8006aa6:	f00c f8a9 	bl	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
        container.invalidate();
 8006aaa:	1d20      	adds	r0, r4, #4
}
 8006aac:	b003      	add	sp, #12
 8006aae:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8006ab2:	f00c b8a3 	b.w	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
                    canCreate = false;
 8006ab6:	2300      	movs	r3, #0
 8006ab8:	e7c6      	b.n	8006a48 <_ZN11Screen4View18createNewTetrominoEv+0xb4>
    if (!canCreate) {
 8006aba:	2b00      	cmp	r3, #0
 8006abc:	d0ca      	beq.n	8006a54 <_ZN11Screen4View18createNewTetrominoEv+0xc0>
        drawTetromino(currentShape, currentX, currentY);
 8006abe:	f8d5 3c9c 	ldr.w	r3, [r5, #3228]	@ 0xc9c
 8006ac2:	f8d5 2c98 	ldr.w	r2, [r5, #3224]	@ 0xc98
 8006ac6:	f8d5 1ca0 	ldr.w	r1, [r5, #3232]	@ 0xca0
 8006aca:	4620      	mov	r0, r4
}
 8006acc:	b003      	add	sp, #12
 8006ace:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
        drawTetromino(currentShape, currentX, currentY);
 8006ad2:	f7ff bc99 	b.w	8006408 <_ZN11Screen4View13drawTetrominoEiii>
}
 8006ad6:	b003      	add	sp, #12
 8006ad8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006ada:	bf00      	nop
 8006adc:	08028030 	.word	0x08028030
 8006ae0:	0802723d 	.word	0x0802723d
 8006ae4:	08027840 	.word	0x08027840

08006ae8 <_ZN11Screen4View18checkAndClearLinesEv>:
{
 8006ae8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006aec:	b09d      	sub	sp, #116	@ 0x74
 8006aee:	4604      	mov	r4, r0
    int fullLines[BOARD_HEIGHT] = {0};  // Track which lines are full
 8006af0:	2250      	movs	r2, #80	@ 0x50
 8006af2:	2100      	movs	r1, #0
 8006af4:	a808      	add	r0, sp, #32
 8006af6:	f01e fde4 	bl	80256c2 <memset>
    int numFullLines = 0;
 8006afa:	2500      	movs	r5, #0
 8006afc:	f204 429d 	addw	r2, r4, #1181	@ 0x49d
    for(int y = BOARD_HEIGHT - 1; y >= 0; y--) {
 8006b00:	2313      	movs	r3, #19
{
 8006b02:	4610      	mov	r0, r2
        for(int x = 0; x < BOARD_WIDTH; x++) {
 8006b04:	2100      	movs	r1, #0
            if(!board[y][x]) {
 8006b06:	f810 6f01 	ldrb.w	r6, [r0, #1]!
 8006b0a:	b146      	cbz	r6, 8006b1e <_ZN11Screen4View18checkAndClearLinesEv+0x36>
        for(int x = 0; x < BOARD_WIDTH; x++) {
 8006b0c:	3101      	adds	r1, #1
 8006b0e:	290a      	cmp	r1, #10
 8006b10:	d1f9      	bne.n	8006b06 <_ZN11Screen4View18checkAndClearLinesEv+0x1e>
            fullLines[numFullLines++] = y;
 8006b12:	a91c      	add	r1, sp, #112	@ 0x70
 8006b14:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8006b18:	3501      	adds	r5, #1
 8006b1a:	f841 3c50 	str.w	r3, [r1, #-80]
    for(int y = BOARD_HEIGHT - 1; y >= 0; y--) {
 8006b1e:	3b01      	subs	r3, #1
 8006b20:	1c59      	adds	r1, r3, #1
 8006b22:	f1a2 020a 	sub.w	r2, r2, #10
 8006b26:	d1ec      	bne.n	8006b02 <_ZN11Screen4View18checkAndClearLinesEv+0x1a>
    if(numFullLines > 0) {
 8006b28:	2d00      	cmp	r5, #0
 8006b2a:	dd50      	ble.n	8006bce <_ZN11Screen4View18checkAndClearLinesEv+0xe6>
            score += 10; // 1 line cleared
 8006b2c:	f504 5200 	add.w	r2, r4, #8192	@ 0x2000
        if (numFullLines == 1) {
 8006b30:	2d01      	cmp	r5, #1
            score += 10; // 1 line cleared
 8006b32:	f8d2 3cac 	ldr.w	r3, [r2, #3244]	@ 0xcac
        if (numFullLines == 1) {
 8006b36:	d166      	bne.n	8006c06 <_ZN11Screen4View18checkAndClearLinesEv+0x11e>
            score += 10; // 1 line cleared
 8006b38:	330a      	adds	r3, #10
        Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 8006b3a:	f504 5632 	add.w	r6, r4, #11392	@ 0x2c80
 8006b3e:	3632      	adds	r6, #50	@ 0x32
            score += 10; // 1 line cleared
 8006b40:	f8c2 3cac 	str.w	r3, [r2, #3244]	@ 0xcac
        Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 8006b44:	2114      	movs	r1, #20
 8006b46:	4a7b      	ldr	r2, [pc, #492]	@ (8006d34 <_ZN11Screen4View18checkAndClearLinesEv+0x24c>)
 8006b48:	4630      	mov	r0, r6
 8006b4a:	f00e fb3d 	bl	80151c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8006b4e:	4b7a      	ldr	r3, [pc, #488]	@ (8006d38 <_ZN11Screen4View18checkAndClearLinesEv+0x250>)
 8006b50:	f8c4 6158 	str.w	r6, [r4, #344]	@ 0x158
        textArea1.setTypedText(touchgfx::TypedText(T_TOADOX));
 8006b54:	f504 7688 	add.w	r6, r4, #272	@ 0x110
 8006b58:	4630      	mov	r0, r6
 8006b5a:	9306      	str	r3, [sp, #24]
 8006b5c:	a906      	add	r1, sp, #24
 8006b5e:	230c      	movs	r3, #12
 8006b60:	f8ad 301c 	strh.w	r3, [sp, #28]
 8006b64:	f008 f940 	bl	800ede8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        textArea1.invalidate(); // Vẽ lại nội dung};
 8006b68:	4630      	mov	r0, r6
 8006b6a:	f06f 062a 	mvn.w	r6, #42	@ 0x2a
 8006b6e:	4366      	muls	r6, r4
 8006b70:	f00c f844 	bl	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
                remove(staticBlocks[lineY][x]);
 8006b74:	f5a6 4622 	sub.w	r6, r6, #41472	@ 0xa200
        for(int i = 0; i < numFullLines; i++) {
 8006b78:	2300      	movs	r3, #0
        textArea1.invalidate(); // Vẽ lại nội dung};
 8006b7a:	f10d 0920 	add.w	r9, sp, #32
        for(int i = 0; i < numFullLines; i++) {
 8006b7e:	9301      	str	r3, [sp, #4]
 8006b80:	f04f 0b0a 	mov.w	fp, #10
        container.remove(d);
 8006b84:	f104 0a04 	add.w	sl, r4, #4
                remove(staticBlocks[lineY][x]);
 8006b88:	3eec      	subs	r6, #236	@ 0xec
            int lineY = fullLines[i];
 8006b8a:	f859 7b04 	ldr.w	r7, [r9], #4
            for(int x = 0; x < BOARD_WIDTH; x++) {
 8006b8e:	fb0b 4707 	mla	r7, fp, r7, r4
 8006b92:	f207 37df 	addw	r7, r7, #991	@ 0x3df
 8006b96:	f04f 0800 	mov.w	r8, #0
                remove(staticBlocks[lineY][x]);
 8006b9a:	222c      	movs	r2, #44	@ 0x2c
 8006b9c:	fb02 6107 	mla	r1, r2, r7, r6
 8006ba0:	4650      	mov	r0, sl
            for(int x = 0; x < BOARD_WIDTH; x++) {
 8006ba2:	f108 0801 	add.w	r8, r8, #1
 8006ba6:	f005 f9c4 	bl	800bf32 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
                board[lineY][x] = false;
 8006baa:	2300      	movs	r3, #0
            for(int x = 0; x < BOARD_WIDTH; x++) {
 8006bac:	f1b8 0f0a 	cmp.w	r8, #10
                board[lineY][x] = false;
 8006bb0:	f807 3f01 	strb.w	r3, [r7, #1]!
            for(int x = 0; x < BOARD_WIDTH; x++) {
 8006bb4:	f04f 022c 	mov.w	r2, #44	@ 0x2c
 8006bb8:	d1f0      	bne.n	8006b9c <_ZN11Screen4View18checkAndClearLinesEv+0xb4>
        for(int i = 0; i < numFullLines; i++) {
 8006bba:	9a01      	ldr	r2, [sp, #4]
 8006bbc:	3201      	adds	r2, #1
 8006bbe:	4295      	cmp	r5, r2
 8006bc0:	d12a      	bne.n	8006c18 <_ZN11Screen4View18checkAndClearLinesEv+0x130>
        for(int y = fullLines[0]; y >= 0; y--) {
 8006bc2:	9f08      	ldr	r7, [sp, #32]
 8006bc4:	2f00      	cmp	r7, #0
 8006bc6:	da38      	bge.n	8006c3a <_ZN11Screen4View18checkAndClearLinesEv+0x152>
        container.invalidate();
 8006bc8:	4650      	mov	r0, sl
 8006bca:	f00c f817 	bl	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
    if (score >= 20) {
 8006bce:	f504 5300 	add.w	r3, r4, #8192	@ 0x2000
 8006bd2:	f8d3 2cac 	ldr.w	r2, [r3, #3244]	@ 0xcac
 8006bd6:	2a13      	cmp	r2, #19
 8006bd8:	f340 80a9 	ble.w	8006d2e <_ZN11Screen4View18checkAndClearLinesEv+0x246>
        isWin = true;
 8006bdc:	2501      	movs	r5, #1
 8006bde:	f883 5cb1 	strb.w	r5, [r3, #3249]	@ 0xcb1
        clearScreen();
 8006be2:	4620      	mov	r0, r4
 8006be4:	f7ff fe88 	bl	80068f8 <_ZN11Screen4View11clearScreenEv>
 8006be8:	2300      	movs	r3, #0
 8006bea:	1d20      	adds	r0, r4, #4
 8006bec:	f884 51ad 	strb.w	r5, [r4, #429]	@ 0x1ad
 8006bf0:	f884 30bd 	strb.w	r3, [r4, #189]	@ 0xbd
 8006bf4:	f884 52c9 	strb.w	r5, [r4, #713]	@ 0x2c9
 8006bf8:	f884 5341 	strb.w	r5, [r4, #833]	@ 0x341
}
 8006bfc:	b01d      	add	sp, #116	@ 0x74
 8006bfe:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006c02:	f00b bffb 	b.w	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
        } else if (numFullLines == 2) {
 8006c06:	2d02      	cmp	r5, #2
 8006c08:	d101      	bne.n	8006c0e <_ZN11Screen4View18checkAndClearLinesEv+0x126>
            score += 30; // 2 lines cleared
 8006c0a:	331e      	adds	r3, #30
 8006c0c:	e795      	b.n	8006b3a <_ZN11Screen4View18checkAndClearLinesEv+0x52>
        } else if (numFullLines == 3) {
 8006c0e:	2d03      	cmp	r5, #3
            score += 50; // 3 lines cleared
 8006c10:	bf0c      	ite	eq
 8006c12:	3332      	addeq	r3, #50	@ 0x32
            score += 100; // 4 or more lines cleared
 8006c14:	3364      	addne	r3, #100	@ 0x64
 8006c16:	e790      	b.n	8006b3a <_ZN11Screen4View18checkAndClearLinesEv+0x52>
 8006c18:	9201      	str	r2, [sp, #4]
 8006c1a:	e7b6      	b.n	8006b8a <_ZN11Screen4View18checkAndClearLinesEv+0xa2>
 8006c1c:	462a      	mov	r2, r5
                if(fullLines[i] > y) shiftDown++;
 8006c1e:	f850 5b04 	ldr.w	r5, [r0], #4
            for(int i = 0; i < numFullLines; i++) {
 8006c22:	9e01      	ldr	r6, [sp, #4]
                if(fullLines[i] > y) shiftDown++;
 8006c24:	42bd      	cmp	r5, r7
 8006c26:	bfc8      	it	gt
 8006c28:	3101      	addgt	r1, #1
            for(int i = 0; i < numFullLines; i++) {
 8006c2a:	4296      	cmp	r6, r2
 8006c2c:	f102 0501 	add.w	r5, r2, #1
 8006c30:	d1f4      	bne.n	8006c1c <_ZN11Screen4View18checkAndClearLinesEv+0x134>
            if(shiftDown > 0) {
 8006c32:	2900      	cmp	r1, #0
 8006c34:	dc05      	bgt.n	8006c42 <_ZN11Screen4View18checkAndClearLinesEv+0x15a>
        for(int y = fullLines[0]; y >= 0; y--) {
 8006c36:	3f01      	subs	r7, #1
 8006c38:	e7c4      	b.n	8006bc4 <_ZN11Screen4View18checkAndClearLinesEv+0xdc>
            for(int i = 0; i < numFullLines; i++) {
 8006c3a:	2200      	movs	r2, #0
 8006c3c:	a808      	add	r0, sp, #32
            int shiftDown = 0;
 8006c3e:	4611      	mov	r1, r2
 8006c40:	e7ed      	b.n	8006c1e <_ZN11Screen4View18checkAndClearLinesEv+0x136>
                        board[y + shiftDown][x] = true;
 8006c42:	4439      	add	r1, r7
 8006c44:	200a      	movs	r0, #10
 8006c46:	fb00 f507 	mul.w	r5, r0, r7
                            10 + ((y + shiftDown) * BLOCK_SIZE)
 8006c4a:	ebc1 1201 	rsb	r2, r1, r1, lsl #4
 8006c4e:	f44f 7cdc 	mov.w	ip, #440	@ 0x1b8
 8006c52:	f204 39df 	addw	r9, r4, #991	@ 0x3df
 8006c56:	fb0c 4601 	mla	r6, ip, r1, r4
 8006c5a:	320a      	adds	r2, #10
 8006c5c:	9502      	str	r5, [sp, #8]
 8006c5e:	44a9      	add	r9, r5
 8006c60:	4341      	muls	r1, r0
 8006c62:	f504 65ed 	add.w	r5, r4, #1896	@ 0x768
                        staticBlocks[y + shiftDown][x].setXY(
 8006c66:	b212      	sxth	r2, r2
 8006c68:	fb0c 5507 	mla	r5, ip, r7, r5
 8006c6c:	9103      	str	r1, [sp, #12]
 8006c6e:	46b3      	mov	fp, r6
 8006c70:	f04f 0814 	mov.w	r8, #20
                    if(board[y][x]) {
 8006c74:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8006c78:	2900      	cmp	r1, #0
 8006c7a:	d04a      	beq.n	8006d12 <_ZN11Screen4View18checkAndClearLinesEv+0x22a>
                        board[y + shiftDown][x] = true;
 8006c7c:	9902      	ldr	r1, [sp, #8]
 8006c7e:	9803      	ldr	r0, [sp, #12]
                        staticBlocks[y + shiftDown][x].setXY(
 8006c80:	9205      	str	r2, [sp, #20]
                        board[y + shiftDown][x] = true;
 8006c82:	eba9 0101 	sub.w	r1, r9, r1
 8006c86:	f04f 0c01 	mov.w	ip, #1
 8006c8a:	f801 c000 	strb.w	ip, [r1, r0]
class Drawable
 8006c8e:	e9d5 0101 	ldrd	r0, r1, [r5, #4]
 8006c92:	f206 7e6c 	addw	lr, r6, #1900	@ 0x76c
                        board[y][x] = false;
 8006c96:	f889 3000 	strb.w	r3, [r9]
 8006c9a:	e88e 0003 	stmia.w	lr, {r0, r1}
 8006c9e:	e9d5 0103 	ldrd	r0, r1, [r5, #12]
 8006ca2:	f206 7e74 	addw	lr, r6, #1908	@ 0x774
 8006ca6:	e88e 0003 	stmia.w	lr, {r0, r1}
 8006caa:	6969      	ldr	r1, [r5, #20]
 8006cac:	f8c6 177c 	str.w	r1, [r6, #1916]	@ 0x77c
 8006cb0:	69a9      	ldr	r1, [r5, #24]
 8006cb2:	f8c6 1780 	str.w	r1, [r6, #1920]	@ 0x780
 8006cb6:	69e9      	ldr	r1, [r5, #28]
 8006cb8:	f8c6 1784 	str.w	r1, [r6, #1924]	@ 0x784
 8006cbc:	f9b5 1020 	ldrsh.w	r1, [r5, #32]
 8006cc0:	f8a6 1788 	strh.w	r1, [r6, #1928]	@ 0x788
 8006cc4:	f9b5 1022 	ldrsh.w	r1, [r5, #34]	@ 0x22
 8006cc8:	f8a6 178a 	strh.w	r1, [r6, #1930]	@ 0x78a
 8006ccc:	f895 1024 	ldrb.w	r1, [r5, #36]	@ 0x24
 8006cd0:	f886 178c 	strb.w	r1, [r6, #1932]	@ 0x78c
 8006cd4:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 8006cd8:	f886 178d 	strb.w	r1, [r6, #1933]	@ 0x78d
 8006cdc:	8ce9      	ldrh	r1, [r5, #38]	@ 0x26
 8006cde:	f8ab 178e 	strh.w	r1, [fp, #1934]	@ 0x78e
                        staticBlocks[y + shiftDown][x] = staticBlocks[y][x];
 8006ce2:	f506 6ced 	add.w	ip, r6, #1896	@ 0x768
 8006ce6:	f895 1028 	ldrb.w	r1, [r5, #40]	@ 0x28
 8006cea:	f88b 1790 	strb.w	r1, [fp, #1936]	@ 0x790
                        staticBlocks[y + shiftDown][x].setXY(
 8006cee:	4660      	mov	r0, ip
 8006cf0:	fa0f f188 	sxth.w	r1, r8
 8006cf4:	f8cd c010 	str.w	ip, [sp, #16]
 8006cf8:	f7fc fb55 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
        container.add(d);
 8006cfc:	9804      	ldr	r0, [sp, #16]
 8006cfe:	4601      	mov	r1, r0
 8006d00:	4650      	mov	r0, sl
 8006d02:	f005 f8d5 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        container.remove(d);
 8006d06:	4629      	mov	r1, r5
 8006d08:	4650      	mov	r0, sl
 8006d0a:	f005 f912 	bl	800bf32 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8006d0e:	9a05      	ldr	r2, [sp, #20]
 8006d10:	2300      	movs	r3, #0
                for(int x = 0; x < BOARD_WIDTH; x++) {
 8006d12:	f108 080f 	add.w	r8, r8, #15
 8006d16:	fa1f f888 	uxth.w	r8, r8
 8006d1a:	f1b8 0faa 	cmp.w	r8, #170	@ 0xaa
 8006d1e:	f106 062c 	add.w	r6, r6, #44	@ 0x2c
 8006d22:	f10b 0b2c 	add.w	fp, fp, #44	@ 0x2c
 8006d26:	f105 052c 	add.w	r5, r5, #44	@ 0x2c
 8006d2a:	d1a3      	bne.n	8006c74 <_ZN11Screen4View18checkAndClearLinesEv+0x18c>
 8006d2c:	e783      	b.n	8006c36 <_ZN11Screen4View18checkAndClearLinesEv+0x14e>
}
 8006d2e:	b01d      	add	sp, #116	@ 0x74
 8006d30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006d34:	0802723d 	.word	0x0802723d
 8006d38:	08027840 	.word	0x08027840

08006d3c <_ZN11Screen4View15freezeTetrominoEv>:
{
 8006d3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006d40:	f500 5a32 	add.w	sl, r0, #11392	@ 0x2c80
 8006d44:	b085      	sub	sp, #20
 8006d46:	4605      	mov	r5, r0
 8006d48:	f10a 0a07 	add.w	sl, sl, #7
    for(int y = 0; y < 4; y++) {
 8006d4c:	f04f 0900 	mov.w	r9, #0
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8006d50:	f500 5b00 	add.w	fp, r0, #8192	@ 0x2000
        for(int x = 0; x < 4; x++) {
 8006d54:	ebc9 1309 	rsb	r3, r9, r9, lsl #4
 8006d58:	b29b      	uxth	r3, r3
 8006d5a:	9300      	str	r3, [sp, #0]
 8006d5c:	f04f 0800 	mov.w	r8, #0
{
 8006d60:	4653      	mov	r3, sl
            if(currentTetromino[y][x]) {
 8006d62:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8006d66:	2a00      	cmp	r2, #0
 8006d68:	d03d      	beq.n	8006de6 <_ZN11Screen4View15freezeTetrominoEv+0xaa>
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8006d6a:	f8db 2c9c 	ldr.w	r2, [fp, #3228]	@ 0xc9c
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8006d6e:	f8db 1c98 	ldr.w	r1, [fp, #3224]	@ 0xc98
 8006d72:	9301      	str	r3, [sp, #4]
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8006d74:	f1a2 060a 	sub.w	r6, r2, #10
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8006d78:	230f      	movs	r3, #15
                board[boardY][boardX] = true;
 8006d7a:	200a      	movs	r0, #10
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8006d7c:	fb96 f6f3 	sdiv	r6, r6, r3
 8006d80:	444e      	add	r6, r9
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8006d82:	f1a1 0414 	sub.w	r4, r1, #20
                board[boardY][boardX] = true;
 8006d86:	fb00 5006 	mla	r0, r0, r6, r5
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8006d8a:	fb94 f4f3 	sdiv	r4, r4, r3
 8006d8e:	4444      	add	r4, r8
                board[boardY][boardX] = true;
 8006d90:	4420      	add	r0, r4
 8006d92:	2701      	movs	r7, #1
 8006d94:	f880 73e0 	strb.w	r7, [r0, #992]	@ 0x3e0
                staticBlocks[boardY][boardX].setXY(
 8006d98:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 8006d9c:	4346      	muls	r6, r0
 8006d9e:	202c      	movs	r0, #44	@ 0x2c
                    currentY + (y * BLOCK_SIZE)
 8006da0:	9b00      	ldr	r3, [sp, #0]
                staticBlocks[boardY][boardX].setXY(
 8006da2:	4344      	muls	r4, r0
 8006da4:	f506 67ed 	add.w	r7, r6, #1896	@ 0x768
 8006da8:	4427      	add	r7, r4
                    currentX + (x * BLOCK_SIZE),
 8006daa:	ebc8 1008 	rsb	r0, r8, r8, lsl #4
                staticBlocks[boardY][boardX].setXY(
 8006dae:	442f      	add	r7, r5
                    currentY + (y * BLOCK_SIZE)
 8006db0:	441a      	add	r2, r3
                    currentX + (x * BLOCK_SIZE),
 8006db2:	4401      	add	r1, r0
                staticBlocks[boardY][boardX].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 8006db4:	4434      	add	r4, r6
                staticBlocks[boardY][boardX].setXY(
 8006db6:	b212      	sxth	r2, r2
 8006db8:	b209      	sxth	r1, r1
 8006dba:	4638      	mov	r0, r7
                staticBlocks[boardY][boardX].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 8006dbc:	442c      	add	r4, r5
                staticBlocks[boardY][boardX].setXY(
 8006dbe:	f7fc faf2 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
                staticBlocks[boardY][boardX].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 8006dc2:	4b12      	ldr	r3, [pc, #72]	@ (8006e0c <_ZN11Screen4View15freezeTetrominoEv+0xd0>)
 8006dc4:	f8db 1ca0 	ldr.w	r1, [fp, #3232]	@ 0xca0
 8006dc8:	f8d4 2768 	ldr.w	r2, [r4, #1896]	@ 0x768
 8006dcc:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8006dd0:	6e12      	ldr	r2, [r2, #96]	@ 0x60
 8006dd2:	f8ad 100c 	strh.w	r1, [sp, #12]
 8006dd6:	4638      	mov	r0, r7
 8006dd8:	a903      	add	r1, sp, #12
 8006dda:	4790      	blx	r2
        container.add(d);
 8006ddc:	4639      	mov	r1, r7
 8006dde:	1d28      	adds	r0, r5, #4
 8006de0:	f005 f866 	bl	800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006de4:	9b01      	ldr	r3, [sp, #4]
        for(int x = 0; x < 4; x++) {
 8006de6:	f108 0801 	add.w	r8, r8, #1
 8006dea:	f1b8 0f04 	cmp.w	r8, #4
 8006dee:	d1b8      	bne.n	8006d62 <_ZN11Screen4View15freezeTetrominoEv+0x26>
    for(int y = 0; y < 4; y++) {
 8006df0:	f109 0901 	add.w	r9, r9, #1
 8006df4:	f1b9 0f04 	cmp.w	r9, #4
 8006df8:	f10a 0a04 	add.w	sl, sl, #4
 8006dfc:	d1aa      	bne.n	8006d54 <_ZN11Screen4View15freezeTetrominoEv+0x18>
    checkAndClearLines();
 8006dfe:	4628      	mov	r0, r5
}
 8006e00:	b005      	add	sp, #20
 8006e02:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    checkAndClearLines();
 8006e06:	f7ff be6f 	b.w	8006ae8 <_ZN11Screen4View18checkAndClearLinesEv>
 8006e0a:	bf00      	nop
 8006e0c:	08028022 	.word	0x08028022

08006e10 <_ZN11Screen4View15handleTickEventEv>:
{
 8006e10:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    if (isGameOver || isWin) {
 8006e14:	f500 5400 	add.w	r4, r0, #8192	@ 0x2000
{
 8006e18:	4605      	mov	r5, r0
    if (isGameOver || isWin) {
 8006e1a:	f894 3cb0 	ldrb.w	r3, [r4, #3248]	@ 0xcb0
 8006e1e:	2b00      	cmp	r3, #0
 8006e20:	f040 8095 	bne.w	8006f4e <_ZN11Screen4View15handleTickEventEv+0x13e>
 8006e24:	f894 6cb1 	ldrb.w	r6, [r4, #3249]	@ 0xcb1
 8006e28:	2e00      	cmp	r6, #0
 8006e2a:	f040 8090 	bne.w	8006f4e <_ZN11Screen4View15handleTickEventEv+0x13e>
    tickCount++;
 8006e2e:	f8d4 3ca8 	ldr.w	r3, [r4, #3240]	@ 0xca8
 8006e32:	2219      	movs	r2, #25
 8006e34:	3301      	adds	r3, #1
 8006e36:	f8c4 3ca8 	str.w	r3, [r4, #3240]	@ 0xca8
 8006e3a:	fbb3 f1f2 	udiv	r1, r3, r2
 8006e3e:	fb02 3311 	mls	r3, r2, r1, r3
    if (tickCount % 25 == 12) {
 8006e42:	2b0c      	cmp	r3, #12
 8006e44:	d117      	bne.n	8006e76 <_ZN11Screen4View15handleTickEventEv+0x66>
        uint32_t count = osMessageQueueGetCount(Queue1Handle);
 8006e46:	4f43      	ldr	r7, [pc, #268]	@ (8006f54 <_ZN11Screen4View15handleTickEventEv+0x144>)
        uint8_t res = 0;
 8006e48:	f88d 6007 	strb.w	r6, [sp, #7]
        uint32_t count = osMessageQueueGetCount(Queue1Handle);
 8006e4c:	6838      	ldr	r0, [r7, #0]
 8006e4e:	f002 ffdb 	bl	8009e08 <osMessageQueueGetCount>
        if (count > 0)
 8006e52:	b180      	cbz	r0, 8006e76 <_ZN11Screen4View15handleTickEventEv+0x66>
            osMessageQueueGet(Queue1Handle, &res, NULL, osWaitForever);
 8006e54:	f04f 33ff 	mov.w	r3, #4294967295
 8006e58:	6838      	ldr	r0, [r7, #0]
 8006e5a:	4632      	mov	r2, r6
 8006e5c:	f10d 0107 	add.w	r1, sp, #7
 8006e60:	f002 ffa2 	bl	8009da8 <osMessageQueueGet>
            if (res == 'L') 
 8006e64:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8006e68:	2b4c      	cmp	r3, #76	@ 0x4c
 8006e6a:	d02d      	beq.n	8006ec8 <_ZN11Screen4View15handleTickEventEv+0xb8>
 8006e6c:	d826      	bhi.n	8006ebc <_ZN11Screen4View15handleTickEventEv+0xac>
 8006e6e:	2b43      	cmp	r3, #67	@ 0x43
 8006e70:	d060      	beq.n	8006f34 <_ZN11Screen4View15handleTickEventEv+0x124>
 8006e72:	2b44      	cmp	r3, #68	@ 0x44
 8006e74:	d048      	beq.n	8006f08 <_ZN11Screen4View15handleTickEventEv+0xf8>
    if (tickCount % 50 == 0) 
 8006e76:	f8d4 3ca8 	ldr.w	r3, [r4, #3240]	@ 0xca8
 8006e7a:	2232      	movs	r2, #50	@ 0x32
 8006e7c:	fbb3 f1f2 	udiv	r1, r3, r2
 8006e80:	fb02 3311 	mls	r3, r2, r1, r3
 8006e84:	b9a3      	cbnz	r3, 8006eb0 <_ZN11Screen4View15handleTickEventEv+0xa0>
        if (checkCollision(currentX, currentY + BLOCK_SIZE, currentShape))
 8006e86:	f8d4 6c9c 	ldr.w	r6, [r4, #3228]	@ 0xc9c
 8006e8a:	f8d4 8c98 	ldr.w	r8, [r4, #3224]	@ 0xc98
 8006e8e:	f8d4 7ca0 	ldr.w	r7, [r4, #3232]	@ 0xca0
 8006e92:	360f      	adds	r6, #15
 8006e94:	463b      	mov	r3, r7
 8006e96:	4632      	mov	r2, r6
 8006e98:	4641      	mov	r1, r8
 8006e9a:	4628      	mov	r0, r5
 8006e9c:	f7ff fa83 	bl	80063a6 <_ZN11Screen4View14checkCollisionEiii>
 8006ea0:	2800      	cmp	r0, #0
 8006ea2:	d04b      	beq.n	8006f3c <_ZN11Screen4View15handleTickEventEv+0x12c>
            freezeTetromino();
 8006ea4:	4628      	mov	r0, r5
 8006ea6:	f7ff ff49 	bl	8006d3c <_ZN11Screen4View15freezeTetrominoEv>
            createNewTetromino();
 8006eaa:	4628      	mov	r0, r5
 8006eac:	f7ff fd72 	bl	8006994 <_ZN11Screen4View18createNewTetrominoEv>
        container.invalidate();
 8006eb0:	1d28      	adds	r0, r5, #4
}
 8006eb2:	b002      	add	sp, #8
 8006eb4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006eb8:	f00b bea0 	b.w	8012bfc <_ZNK8touchgfx8Drawable10invalidateEv>
 8006ebc:	2b52      	cmp	r3, #82	@ 0x52
 8006ebe:	d1da      	bne.n	8006e76 <_ZN11Screen4View15handleTickEventEv+0x66>
                if (!checkCollision(currentX + BLOCK_SIZE, currentY, currentShape)) 
 8006ec0:	f8d4 6c98 	ldr.w	r6, [r4, #3224]	@ 0xc98
 8006ec4:	360f      	adds	r6, #15
 8006ec6:	e002      	b.n	8006ece <_ZN11Screen4View15handleTickEventEv+0xbe>
                if (!checkCollision(currentX - BLOCK_SIZE, currentY, currentShape)) 
 8006ec8:	f8d4 6c98 	ldr.w	r6, [r4, #3224]	@ 0xc98
 8006ecc:	3e0f      	subs	r6, #15
                if (!checkCollision(currentX + BLOCK_SIZE, currentY, currentShape)) 
 8006ece:	f8d4 8c9c 	ldr.w	r8, [r4, #3228]	@ 0xc9c
 8006ed2:	f8d4 7ca0 	ldr.w	r7, [r4, #3232]	@ 0xca0
 8006ed6:	4642      	mov	r2, r8
 8006ed8:	463b      	mov	r3, r7
 8006eda:	4631      	mov	r1, r6
 8006edc:	4628      	mov	r0, r5
 8006ede:	f7ff fa62 	bl	80063a6 <_ZN11Screen4View14checkCollisionEiii>
 8006ee2:	2800      	cmp	r0, #0
 8006ee4:	d1c7      	bne.n	8006e76 <_ZN11Screen4View15handleTickEventEv+0x66>
                    currentX += BLOCK_SIZE;
 8006ee6:	f8c4 6c98 	str.w	r6, [r4, #3224]	@ 0xc98
                    drawTetromino(currentShape, currentX, currentY);
 8006eea:	4643      	mov	r3, r8
 8006eec:	4632      	mov	r2, r6
 8006eee:	4639      	mov	r1, r7
 8006ef0:	4628      	mov	r0, r5
 8006ef2:	f7ff fa89 	bl	8006408 <_ZN11Screen4View13drawTetrominoEiii>
 8006ef6:	e7be      	b.n	8006e76 <_ZN11Screen4View15handleTickEventEv+0x66>
                    currentY += BLOCK_SIZE;
 8006ef8:	f8c4 6c9c 	str.w	r6, [r4, #3228]	@ 0xc9c
                    drawTetromino(currentShape, currentX, currentY);
 8006efc:	4633      	mov	r3, r6
 8006efe:	463a      	mov	r2, r7
 8006f00:	4641      	mov	r1, r8
 8006f02:	4628      	mov	r0, r5
 8006f04:	f7ff fa80 	bl	8006408 <_ZN11Screen4View13drawTetrominoEiii>
                while (!checkCollision(currentX, currentY + BLOCK_SIZE, currentShape)) 
 8006f08:	f8d4 6c9c 	ldr.w	r6, [r4, #3228]	@ 0xc9c
 8006f0c:	f8d4 7c98 	ldr.w	r7, [r4, #3224]	@ 0xc98
 8006f10:	f8d4 8ca0 	ldr.w	r8, [r4, #3232]	@ 0xca0
 8006f14:	360f      	adds	r6, #15
 8006f16:	4643      	mov	r3, r8
 8006f18:	4632      	mov	r2, r6
 8006f1a:	4639      	mov	r1, r7
 8006f1c:	4628      	mov	r0, r5
 8006f1e:	f7ff fa42 	bl	80063a6 <_ZN11Screen4View14checkCollisionEiii>
 8006f22:	2800      	cmp	r0, #0
 8006f24:	d0e8      	beq.n	8006ef8 <_ZN11Screen4View15handleTickEventEv+0xe8>
                freezeTetromino();
 8006f26:	4628      	mov	r0, r5
 8006f28:	f7ff ff08 	bl	8006d3c <_ZN11Screen4View15freezeTetrominoEv>
                createNewTetromino();
 8006f2c:	4628      	mov	r0, r5
 8006f2e:	f7ff fd31 	bl	8006994 <_ZN11Screen4View18createNewTetrominoEv>
 8006f32:	e7a0      	b.n	8006e76 <_ZN11Screen4View15handleTickEventEv+0x66>
                rotateTetromino(); // Xoay hình nếu nhận được lệnh
 8006f34:	4628      	mov	r0, r5
 8006f36:	f7ff facb 	bl	80064d0 <_ZN11Screen4View15rotateTetrominoEv>
 8006f3a:	e79c      	b.n	8006e76 <_ZN11Screen4View15handleTickEventEv+0x66>
            currentY += BLOCK_SIZE;
 8006f3c:	f8c4 6c9c 	str.w	r6, [r4, #3228]	@ 0xc9c
            drawTetromino(currentShape, currentX, currentY);
 8006f40:	4633      	mov	r3, r6
 8006f42:	4642      	mov	r2, r8
 8006f44:	4639      	mov	r1, r7
 8006f46:	4628      	mov	r0, r5
 8006f48:	f7ff fa5e 	bl	8006408 <_ZN11Screen4View13drawTetrominoEiii>
 8006f4c:	e7b0      	b.n	8006eb0 <_ZN11Screen4View15handleTickEventEv+0xa0>
}
 8006f4e:	b002      	add	sp, #8
 8006f50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006f54:	200003a8 	.word	0x200003a8

08006f58 <_ZN19ScreenWaitPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ScreenWaitPresenter() {}
 8006f58:	4770      	bx	lr

08006f5a <_ZThn4_N19ScreenWaitPresenterD1Ev>:
 8006f5a:	3804      	subs	r0, #4
 8006f5c:	4770      	bx	lr

08006f5e <_ZN19ScreenWaitPresenter10deactivateEv>:
}

void ScreenWaitPresenter::activate()
{

}
 8006f5e:	4770      	bx	lr

08006f60 <_ZN19ScreenWaitPresenterD0Ev>:
 8006f60:	b510      	push	{r4, lr}
 8006f62:	2110      	movs	r1, #16
 8006f64:	4604      	mov	r4, r0
 8006f66:	f01d fa68 	bl	802443a <_ZdlPvj>
 8006f6a:	4620      	mov	r0, r4
 8006f6c:	bd10      	pop	{r4, pc}

08006f6e <_ZThn4_N19ScreenWaitPresenterD0Ev>:
 8006f6e:	f1a0 0004 	sub.w	r0, r0, #4
 8006f72:	e7f5      	b.n	8006f60 <_ZN19ScreenWaitPresenterD0Ev>

08006f74 <_ZN19ScreenWaitPresenterC1ER14ScreenWaitView>:
 8006f74:	2200      	movs	r2, #0
 8006f76:	6082      	str	r2, [r0, #8]
    : view(v)
 8006f78:	4a02      	ldr	r2, [pc, #8]	@ (8006f84 <_ZN19ScreenWaitPresenterC1ER14ScreenWaitView+0x10>)
 8006f7a:	6002      	str	r2, [r0, #0]
 8006f7c:	3218      	adds	r2, #24
 8006f7e:	6042      	str	r2, [r0, #4]
 8006f80:	60c1      	str	r1, [r0, #12]
}
 8006f82:	4770      	bx	lr
 8006f84:	080280a8 	.word	0x080280a8

08006f88 <_ZN14ScreenWaitView14tearDownScreenEv>:
}

void ScreenWaitView::tearDownScreen()
{
    ScreenWaitViewBase::tearDownScreen();
}
 8006f88:	4770      	bx	lr
	...

08006f8c <_ZN14ScreenWaitViewD1Ev>:

class ScreenWaitView : public ScreenWaitViewBase
{
public:
    ScreenWaitView();
    virtual ~ScreenWaitView() {}
 8006f8c:	b510      	push	{r4, lr}
 8006f8e:	4b03      	ldr	r3, [pc, #12]	@ (8006f9c <_ZN14ScreenWaitViewD1Ev+0x10>)
 8006f90:	6003      	str	r3, [r0, #0]
 8006f92:	4604      	mov	r4, r0
 8006f94:	f7fd fa77 	bl	8004486 <_ZN18ScreenWaitViewBaseD1Ev>
 8006f98:	4620      	mov	r0, r4
 8006f9a:	bd10      	pop	{r4, pc}
 8006f9c:	080280d0 	.word	0x080280d0

08006fa0 <_ZN14ScreenWaitViewD0Ev>:
 8006fa0:	b510      	push	{r4, lr}
 8006fa2:	4604      	mov	r4, r0
 8006fa4:	f7ff fff2 	bl	8006f8c <_ZN14ScreenWaitViewD1Ev>
 8006fa8:	4620      	mov	r0, r4
 8006faa:	f44f 71cc 	mov.w	r1, #408	@ 0x198
 8006fae:	f01d fa44 	bl	802443a <_ZdlPvj>
 8006fb2:	4620      	mov	r0, r4
 8006fb4:	bd10      	pop	{r4, pc}
	...

08006fb8 <_ZN14ScreenWaitViewC1Ev>:
ScreenWaitView::ScreenWaitView()
 8006fb8:	b510      	push	{r4, lr}
 8006fba:	4604      	mov	r4, r0
 8006fbc:	f7fd faa4 	bl	8004508 <_ZN18ScreenWaitViewBaseC1Ev>
 8006fc0:	4b01      	ldr	r3, [pc, #4]	@ (8006fc8 <_ZN14ScreenWaitViewC1Ev+0x10>)
 8006fc2:	6023      	str	r3, [r4, #0]
}
 8006fc4:	4620      	mov	r0, r4
 8006fc6:	bd10      	pop	{r4, pc}
 8006fc8:	080280d0 	.word	0x080280d0

08006fcc <_ZN14ScreenWaitView11setupScreenEv>:
    ScreenWaitViewBase::setupScreen();
 8006fcc:	f7fd ba5c 	b.w	8004488 <_ZN18ScreenWaitViewBase11setupScreenEv>

08006fd0 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8006fd0:	20f0      	movs	r0, #240	@ 0xf0
 8006fd2:	4770      	bx	lr

08006fd4 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8006fd4:	f44f 70a0 	mov.w	r0, #320	@ 0x140
 8006fd8:	4770      	bx	lr

08006fda <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8006fda:	2029      	movs	r0, #41	@ 0x29
 8006fdc:	f7fa b822 	b.w	8001024 <LCD_IO_WriteReg>

08006fe0 <ili9341_DisplayOff>:
 8006fe0:	2028      	movs	r0, #40	@ 0x28
 8006fe2:	f7fa b81f 	b.w	8001024 <LCD_IO_WriteReg>

08006fe6 <ili9341_Init>:
{
 8006fe6:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8006fe8:	f7f9 fff0 	bl	8000fcc <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8006fec:	20ca      	movs	r0, #202	@ 0xca
 8006fee:	f7fa f819 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8006ff2:	20c3      	movs	r0, #195	@ 0xc3
 8006ff4:	f7f9 fffa 	bl	8000fec <LCD_IO_WriteData>
 8006ff8:	2008      	movs	r0, #8
 8006ffa:	f7f9 fff7 	bl	8000fec <LCD_IO_WriteData>
 8006ffe:	2050      	movs	r0, #80	@ 0x50
 8007000:	f7f9 fff4 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007004:	20cf      	movs	r0, #207	@ 0xcf
 8007006:	f7fa f80d 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800700a:	2000      	movs	r0, #0
 800700c:	f7f9 ffee 	bl	8000fec <LCD_IO_WriteData>
 8007010:	20c1      	movs	r0, #193	@ 0xc1
 8007012:	f7f9 ffeb 	bl	8000fec <LCD_IO_WriteData>
 8007016:	2030      	movs	r0, #48	@ 0x30
 8007018:	f7f9 ffe8 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800701c:	20ed      	movs	r0, #237	@ 0xed
 800701e:	f7fa f801 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007022:	2064      	movs	r0, #100	@ 0x64
 8007024:	f7f9 ffe2 	bl	8000fec <LCD_IO_WriteData>
 8007028:	2003      	movs	r0, #3
 800702a:	f7f9 ffdf 	bl	8000fec <LCD_IO_WriteData>
 800702e:	2012      	movs	r0, #18
 8007030:	f7f9 ffdc 	bl	8000fec <LCD_IO_WriteData>
 8007034:	2081      	movs	r0, #129	@ 0x81
 8007036:	f7f9 ffd9 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800703a:	20e8      	movs	r0, #232	@ 0xe8
 800703c:	f7f9 fff2 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007040:	2085      	movs	r0, #133	@ 0x85
 8007042:	f7f9 ffd3 	bl	8000fec <LCD_IO_WriteData>
 8007046:	2000      	movs	r0, #0
 8007048:	f7f9 ffd0 	bl	8000fec <LCD_IO_WriteData>
 800704c:	2078      	movs	r0, #120	@ 0x78
 800704e:	f7f9 ffcd 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007052:	20cb      	movs	r0, #203	@ 0xcb
 8007054:	f7f9 ffe6 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007058:	2039      	movs	r0, #57	@ 0x39
 800705a:	f7f9 ffc7 	bl	8000fec <LCD_IO_WriteData>
 800705e:	202c      	movs	r0, #44	@ 0x2c
 8007060:	f7f9 ffc4 	bl	8000fec <LCD_IO_WriteData>
 8007064:	2000      	movs	r0, #0
 8007066:	f7f9 ffc1 	bl	8000fec <LCD_IO_WriteData>
 800706a:	2034      	movs	r0, #52	@ 0x34
 800706c:	f7f9 ffbe 	bl	8000fec <LCD_IO_WriteData>
 8007070:	2002      	movs	r0, #2
 8007072:	f7f9 ffbb 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007076:	20f7      	movs	r0, #247	@ 0xf7
 8007078:	f7f9 ffd4 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800707c:	2020      	movs	r0, #32
 800707e:	f7f9 ffb5 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007082:	20ea      	movs	r0, #234	@ 0xea
 8007084:	f7f9 ffce 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007088:	2000      	movs	r0, #0
 800708a:	f7f9 ffaf 	bl	8000fec <LCD_IO_WriteData>
 800708e:	2000      	movs	r0, #0
 8007090:	f7f9 ffac 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007094:	20b1      	movs	r0, #177	@ 0xb1
 8007096:	f7f9 ffc5 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800709a:	2000      	movs	r0, #0
 800709c:	f7f9 ffa6 	bl	8000fec <LCD_IO_WriteData>
 80070a0:	201b      	movs	r0, #27
 80070a2:	f7f9 ffa3 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80070a6:	20b6      	movs	r0, #182	@ 0xb6
 80070a8:	f7f9 ffbc 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80070ac:	200a      	movs	r0, #10
 80070ae:	f7f9 ff9d 	bl	8000fec <LCD_IO_WriteData>
 80070b2:	20a2      	movs	r0, #162	@ 0xa2
 80070b4:	f7f9 ff9a 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80070b8:	20c0      	movs	r0, #192	@ 0xc0
 80070ba:	f7f9 ffb3 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80070be:	2010      	movs	r0, #16
 80070c0:	f7f9 ff94 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80070c4:	20c1      	movs	r0, #193	@ 0xc1
 80070c6:	f7f9 ffad 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80070ca:	2010      	movs	r0, #16
 80070cc:	f7f9 ff8e 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80070d0:	20c5      	movs	r0, #197	@ 0xc5
 80070d2:	f7f9 ffa7 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80070d6:	2045      	movs	r0, #69	@ 0x45
 80070d8:	f7f9 ff88 	bl	8000fec <LCD_IO_WriteData>
 80070dc:	2015      	movs	r0, #21
 80070de:	f7f9 ff85 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80070e2:	20c7      	movs	r0, #199	@ 0xc7
 80070e4:	f7f9 ff9e 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80070e8:	2090      	movs	r0, #144	@ 0x90
 80070ea:	f7f9 ff7f 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80070ee:	2036      	movs	r0, #54	@ 0x36
 80070f0:	f7f9 ff98 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80070f4:	20c8      	movs	r0, #200	@ 0xc8
 80070f6:	f7f9 ff79 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80070fa:	20f2      	movs	r0, #242	@ 0xf2
 80070fc:	f7f9 ff92 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007100:	2000      	movs	r0, #0
 8007102:	f7f9 ff73 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007106:	20b0      	movs	r0, #176	@ 0xb0
 8007108:	f7f9 ff8c 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800710c:	20c2      	movs	r0, #194	@ 0xc2
 800710e:	f7f9 ff6d 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007112:	20b6      	movs	r0, #182	@ 0xb6
 8007114:	f7f9 ff86 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007118:	200a      	movs	r0, #10
 800711a:	f7f9 ff67 	bl	8000fec <LCD_IO_WriteData>
 800711e:	20a7      	movs	r0, #167	@ 0xa7
 8007120:	f7f9 ff64 	bl	8000fec <LCD_IO_WriteData>
 8007124:	2027      	movs	r0, #39	@ 0x27
 8007126:	f7f9 ff61 	bl	8000fec <LCD_IO_WriteData>
 800712a:	2004      	movs	r0, #4
 800712c:	f7f9 ff5e 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007130:	202a      	movs	r0, #42	@ 0x2a
 8007132:	f7f9 ff77 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007136:	2000      	movs	r0, #0
 8007138:	f7f9 ff58 	bl	8000fec <LCD_IO_WriteData>
 800713c:	2000      	movs	r0, #0
 800713e:	f7f9 ff55 	bl	8000fec <LCD_IO_WriteData>
 8007142:	2000      	movs	r0, #0
 8007144:	f7f9 ff52 	bl	8000fec <LCD_IO_WriteData>
 8007148:	20ef      	movs	r0, #239	@ 0xef
 800714a:	f7f9 ff4f 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800714e:	202b      	movs	r0, #43	@ 0x2b
 8007150:	f7f9 ff68 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007154:	2000      	movs	r0, #0
 8007156:	f7f9 ff49 	bl	8000fec <LCD_IO_WriteData>
 800715a:	2000      	movs	r0, #0
 800715c:	f7f9 ff46 	bl	8000fec <LCD_IO_WriteData>
 8007160:	2001      	movs	r0, #1
 8007162:	f7f9 ff43 	bl	8000fec <LCD_IO_WriteData>
 8007166:	203f      	movs	r0, #63	@ 0x3f
 8007168:	f7f9 ff40 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800716c:	20f6      	movs	r0, #246	@ 0xf6
 800716e:	f7f9 ff59 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007172:	2001      	movs	r0, #1
 8007174:	f7f9 ff3a 	bl	8000fec <LCD_IO_WriteData>
 8007178:	2000      	movs	r0, #0
 800717a:	f7f9 ff37 	bl	8000fec <LCD_IO_WriteData>
 800717e:	2006      	movs	r0, #6
 8007180:	f7f9 ff34 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007184:	202c      	movs	r0, #44	@ 0x2c
 8007186:	f7f9 ff4d 	bl	8001024 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800718a:	20c8      	movs	r0, #200	@ 0xc8
 800718c:	f7f9 ff98 	bl	80010c0 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8007190:	2026      	movs	r0, #38	@ 0x26
 8007192:	f7f9 ff47 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007196:	2001      	movs	r0, #1
 8007198:	f7f9 ff28 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800719c:	20e0      	movs	r0, #224	@ 0xe0
 800719e:	f7f9 ff41 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80071a2:	200f      	movs	r0, #15
 80071a4:	f7f9 ff22 	bl	8000fec <LCD_IO_WriteData>
 80071a8:	2029      	movs	r0, #41	@ 0x29
 80071aa:	f7f9 ff1f 	bl	8000fec <LCD_IO_WriteData>
 80071ae:	2024      	movs	r0, #36	@ 0x24
 80071b0:	f7f9 ff1c 	bl	8000fec <LCD_IO_WriteData>
 80071b4:	200c      	movs	r0, #12
 80071b6:	f7f9 ff19 	bl	8000fec <LCD_IO_WriteData>
 80071ba:	200e      	movs	r0, #14
 80071bc:	f7f9 ff16 	bl	8000fec <LCD_IO_WriteData>
 80071c0:	2009      	movs	r0, #9
 80071c2:	f7f9 ff13 	bl	8000fec <LCD_IO_WriteData>
 80071c6:	204e      	movs	r0, #78	@ 0x4e
 80071c8:	f7f9 ff10 	bl	8000fec <LCD_IO_WriteData>
 80071cc:	2078      	movs	r0, #120	@ 0x78
 80071ce:	f7f9 ff0d 	bl	8000fec <LCD_IO_WriteData>
 80071d2:	203c      	movs	r0, #60	@ 0x3c
 80071d4:	f7f9 ff0a 	bl	8000fec <LCD_IO_WriteData>
 80071d8:	2009      	movs	r0, #9
 80071da:	f7f9 ff07 	bl	8000fec <LCD_IO_WriteData>
 80071de:	2013      	movs	r0, #19
 80071e0:	f7f9 ff04 	bl	8000fec <LCD_IO_WriteData>
 80071e4:	2005      	movs	r0, #5
 80071e6:	f7f9 ff01 	bl	8000fec <LCD_IO_WriteData>
 80071ea:	2017      	movs	r0, #23
 80071ec:	f7f9 fefe 	bl	8000fec <LCD_IO_WriteData>
 80071f0:	2011      	movs	r0, #17
 80071f2:	f7f9 fefb 	bl	8000fec <LCD_IO_WriteData>
 80071f6:	2000      	movs	r0, #0
 80071f8:	f7f9 fef8 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80071fc:	20e1      	movs	r0, #225	@ 0xe1
 80071fe:	f7f9 ff11 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007202:	2000      	movs	r0, #0
 8007204:	f7f9 fef2 	bl	8000fec <LCD_IO_WriteData>
 8007208:	2016      	movs	r0, #22
 800720a:	f7f9 feef 	bl	8000fec <LCD_IO_WriteData>
 800720e:	201b      	movs	r0, #27
 8007210:	f7f9 feec 	bl	8000fec <LCD_IO_WriteData>
 8007214:	2004      	movs	r0, #4
 8007216:	f7f9 fee9 	bl	8000fec <LCD_IO_WriteData>
 800721a:	2011      	movs	r0, #17
 800721c:	f7f9 fee6 	bl	8000fec <LCD_IO_WriteData>
 8007220:	2007      	movs	r0, #7
 8007222:	f7f9 fee3 	bl	8000fec <LCD_IO_WriteData>
 8007226:	2031      	movs	r0, #49	@ 0x31
 8007228:	f7f9 fee0 	bl	8000fec <LCD_IO_WriteData>
 800722c:	2033      	movs	r0, #51	@ 0x33
 800722e:	f7f9 fedd 	bl	8000fec <LCD_IO_WriteData>
 8007232:	2042      	movs	r0, #66	@ 0x42
 8007234:	f7f9 feda 	bl	8000fec <LCD_IO_WriteData>
 8007238:	2005      	movs	r0, #5
 800723a:	f7f9 fed7 	bl	8000fec <LCD_IO_WriteData>
 800723e:	200c      	movs	r0, #12
 8007240:	f7f9 fed4 	bl	8000fec <LCD_IO_WriteData>
 8007244:	200a      	movs	r0, #10
 8007246:	f7f9 fed1 	bl	8000fec <LCD_IO_WriteData>
 800724a:	2028      	movs	r0, #40	@ 0x28
 800724c:	f7f9 fece 	bl	8000fec <LCD_IO_WriteData>
 8007250:	202f      	movs	r0, #47	@ 0x2f
 8007252:	f7f9 fecb 	bl	8000fec <LCD_IO_WriteData>
 8007256:	200f      	movs	r0, #15
 8007258:	f7f9 fec8 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800725c:	2011      	movs	r0, #17
 800725e:	f7f9 fee1 	bl	8001024 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8007262:	20c8      	movs	r0, #200	@ 0xc8
 8007264:	f7f9 ff2c 	bl	80010c0 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8007268:	2029      	movs	r0, #41	@ 0x29
 800726a:	f7f9 fedb 	bl	8001024 <LCD_IO_WriteReg>
}
 800726e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8007272:	202c      	movs	r0, #44	@ 0x2c
 8007274:	f7f9 bed6 	b.w	8001024 <LCD_IO_WriteReg>

08007278 <ili9341_ReadID>:
{
 8007278:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800727a:	f7f9 fea7 	bl	8000fcc <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 800727e:	2103      	movs	r1, #3
 8007280:	20d3      	movs	r0, #211	@ 0xd3
 8007282:	f7f9 feeb 	bl	800105c <LCD_IO_ReadData>
}
 8007286:	b280      	uxth	r0, r0
 8007288:	bd08      	pop	{r3, pc}

0800728a <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 800728a:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800728c:	b2c4      	uxtb	r4, r0
 800728e:	2202      	movs	r2, #2
 8007290:	2103      	movs	r1, #3
 8007292:	4620      	mov	r0, r4
 8007294:	f7f9 fe50 	bl	8000f38 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8007298:	200a      	movs	r0, #10
 800729a:	f7f9 fe95 	bl	8000fc8 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800729e:	4620      	mov	r0, r4
 80072a0:	2200      	movs	r2, #0
 80072a2:	2103      	movs	r1, #3
 80072a4:	f7f9 fe48 	bl	8000f38 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 80072a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80072ac:	2002      	movs	r0, #2
 80072ae:	f7f9 be8b 	b.w	8000fc8 <IOE_Delay>

080072b2 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 80072b2:	b538      	push	{r3, r4, r5, lr}
 80072b4:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80072b6:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 80072b8:	f7f9 fe3c 	bl	8000f34 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80072bc:	2100      	movs	r1, #0
 80072be:	4620      	mov	r0, r4
 80072c0:	f7f9 fe52 	bl	8000f68 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80072c4:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80072c6:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80072c8:	4620      	mov	r0, r4
 80072ca:	f7f9 fe4d 	bl	8000f68 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80072ce:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 80072d2:	b280      	uxth	r0, r0
 80072d4:	bd38      	pop	{r3, r4, r5, pc}

080072d6 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 80072d6:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 80072d8:	b2c4      	uxtb	r4, r0
 80072da:	2140      	movs	r1, #64	@ 0x40
 80072dc:	4620      	mov	r0, r4
 80072de:	f7f9 fe43 	bl	8000f68 <IOE_Read>
  
  if(state > 0)
 80072e2:	0603      	lsls	r3, r0, #24
 80072e4:	d507      	bpl.n	80072f6 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 80072e6:	214c      	movs	r1, #76	@ 0x4c
 80072e8:	4620      	mov	r0, r4
 80072ea:	f7f9 fe3d 	bl	8000f68 <IOE_Read>
 80072ee:	3800      	subs	r0, #0
 80072f0:	bf18      	it	ne
 80072f2:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 80072f4:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80072f6:	2201      	movs	r2, #1
 80072f8:	214b      	movs	r1, #75	@ 0x4b
 80072fa:	4620      	mov	r0, r4
 80072fc:	f7f9 fe1c 	bl	8000f38 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8007300:	4620      	mov	r0, r4
 8007302:	2200      	movs	r2, #0
 8007304:	214b      	movs	r1, #75	@ 0x4b
 8007306:	f7f9 fe17 	bl	8000f38 <IOE_Write>
  uint8_t ret = 0;
 800730a:	2000      	movs	r0, #0
 800730c:	e7f2      	b.n	80072f4 <stmpe811_TS_DetectTouch+0x1e>

0800730e <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 800730e:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8007310:	2304      	movs	r3, #4
 8007312:	b2c4      	uxtb	r4, r0
{
 8007314:	460e      	mov	r6, r1
 8007316:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8007318:	21d7      	movs	r1, #215	@ 0xd7
 800731a:	eb0d 0203 	add.w	r2, sp, r3
 800731e:	4620      	mov	r0, r4
 8007320:	f7f9 fe3c 	bl	8000f9c <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8007324:	9b01      	ldr	r3, [sp, #4]
 8007326:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8007328:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800732a:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800732e:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8007330:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8007332:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8007334:	2201      	movs	r2, #1
 8007336:	214b      	movs	r1, #75	@ 0x4b
 8007338:	f7f9 fdfe 	bl	8000f38 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800733c:	2200      	movs	r2, #0
 800733e:	214b      	movs	r1, #75	@ 0x4b
 8007340:	4620      	mov	r0, r4
 8007342:	f7f9 fdf9 	bl	8000f38 <IOE_Write>
}
 8007346:	b002      	add	sp, #8
 8007348:	bd70      	pop	{r4, r5, r6, pc}
	...

0800734c <stmpe811_Init>:
{
 800734c:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800734e:	4a0a      	ldr	r2, [pc, #40]	@ (8007378 <stmpe811_Init+0x2c>)
 8007350:	7813      	ldrb	r3, [r2, #0]
 8007352:	4298      	cmp	r0, r3
{
 8007354:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8007356:	d00d      	beq.n	8007374 <stmpe811_Init+0x28>
 8007358:	7851      	ldrb	r1, [r2, #1]
 800735a:	4288      	cmp	r0, r1
 800735c:	d00a      	beq.n	8007374 <stmpe811_Init+0x28>
 800735e:	b10b      	cbz	r3, 8007364 <stmpe811_Init+0x18>
 8007360:	b941      	cbnz	r1, 8007374 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8007362:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 8007364:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8007366:	f7f9 fde5 	bl	8000f34 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 800736a:	4620      	mov	r0, r4
}
 800736c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8007370:	f7ff bf8b 	b.w	800728a <stmpe811_Reset>
}
 8007374:	bd10      	pop	{r4, pc}
 8007376:	bf00      	nop
 8007378:	200044d0 	.word	0x200044d0

0800737c <stmpe811_EnableGlobalIT>:
{
 800737c:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800737e:	b2c4      	uxtb	r4, r0
 8007380:	2109      	movs	r1, #9
 8007382:	4620      	mov	r0, r4
 8007384:	f7f9 fdf0 	bl	8000f68 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8007388:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800738c:	b2d2      	uxtb	r2, r2
 800738e:	4620      	mov	r0, r4
 8007390:	2109      	movs	r1, #9
}
 8007392:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8007396:	f7f9 bdcf 	b.w	8000f38 <IOE_Write>

0800739a <stmpe811_DisableGlobalIT>:
{
 800739a:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800739c:	b2c4      	uxtb	r4, r0
 800739e:	2109      	movs	r1, #9
 80073a0:	4620      	mov	r0, r4
 80073a2:	f7f9 fde1 	bl	8000f68 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80073a6:	2109      	movs	r1, #9
 80073a8:	f000 02fe 	and.w	r2, r0, #254	@ 0xfe
 80073ac:	4620      	mov	r0, r4
}
 80073ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80073b2:	f7f9 bdc1 	b.w	8000f38 <IOE_Write>

080073b6 <stmpe811_EnableITSource>:
{
 80073b6:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80073b8:	b2c4      	uxtb	r4, r0
{
 80073ba:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80073bc:	4620      	mov	r0, r4
 80073be:	210a      	movs	r1, #10
 80073c0:	f7f9 fdd2 	bl	8000f68 <IOE_Read>
  tmp |= Source; 
 80073c4:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80073c8:	b2d2      	uxtb	r2, r2
 80073ca:	4620      	mov	r0, r4
 80073cc:	210a      	movs	r1, #10
}
 80073ce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80073d2:	f7f9 bdb1 	b.w	8000f38 <IOE_Write>

080073d6 <stmpe811_TS_EnableIT>:
{
 80073d6:	b510      	push	{r4, lr}
 80073d8:	4604      	mov	r4, r0
  IOE_ITConfig();
 80073da:	f7f9 fdac 	bl	8000f36 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 80073de:	4620      	mov	r0, r4
 80073e0:	211f      	movs	r1, #31
 80073e2:	f7ff ffe8 	bl	80073b6 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 80073e6:	4620      	mov	r0, r4
}
 80073e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 80073ec:	f7ff bfc6 	b.w	800737c <stmpe811_EnableGlobalIT>

080073f0 <stmpe811_DisableITSource>:
{
 80073f0:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80073f2:	b2c4      	uxtb	r4, r0
{
 80073f4:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80073f6:	4620      	mov	r0, r4
 80073f8:	210a      	movs	r1, #10
 80073fa:	f7f9 fdb5 	bl	8000f68 <IOE_Read>
  tmp &= ~Source; 
 80073fe:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8007402:	b2d2      	uxtb	r2, r2
 8007404:	4620      	mov	r0, r4
 8007406:	210a      	movs	r1, #10
}
 8007408:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800740c:	f7f9 bd94 	b.w	8000f38 <IOE_Write>

08007410 <stmpe811_TS_DisableIT>:
{
 8007410:	b510      	push	{r4, lr}
 8007412:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8007414:	f7ff ffc1 	bl	800739a <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8007418:	4620      	mov	r0, r4
 800741a:	211f      	movs	r1, #31
}
 800741c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8007420:	f7ff bfe6 	b.w	80073f0 <stmpe811_DisableITSource>

08007424 <stmpe811_ReadGITStatus>:
{
 8007424:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8007426:	b2c0      	uxtb	r0, r0
{
 8007428:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800742a:	210b      	movs	r1, #11
 800742c:	f7f9 fd9c 	bl	8000f68 <IOE_Read>
}
 8007430:	4020      	ands	r0, r4
 8007432:	bd10      	pop	{r4, pc}

08007434 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8007434:	211f      	movs	r1, #31
 8007436:	f7ff bff5 	b.w	8007424 <stmpe811_ReadGITStatus>

0800743a <stmpe811_ClearGlobalIT>:
{
 800743a:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 800743c:	b2c0      	uxtb	r0, r0
 800743e:	210b      	movs	r1, #11
 8007440:	f7f9 bd7a 	b.w	8000f38 <IOE_Write>

08007444 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8007444:	211f      	movs	r1, #31
 8007446:	f7ff bff8 	b.w	800743a <stmpe811_ClearGlobalIT>

0800744a <stmpe811_IO_EnableAF>:
{
 800744a:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800744c:	b2c4      	uxtb	r4, r0
{
 800744e:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8007450:	4620      	mov	r0, r4
 8007452:	2117      	movs	r1, #23
 8007454:	f7f9 fd88 	bl	8000f68 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8007458:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800745c:	b2d2      	uxtb	r2, r2
 800745e:	4620      	mov	r0, r4
 8007460:	2117      	movs	r1, #23
}
 8007462:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8007466:	f7f9 bd67 	b.w	8000f38 <IOE_Write>

0800746a <stmpe811_TS_Start>:
{
 800746a:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800746c:	b2c4      	uxtb	r4, r0
{
 800746e:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8007470:	2104      	movs	r1, #4
 8007472:	4620      	mov	r0, r4
 8007474:	f7f9 fd78 	bl	8000f68 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8007478:	2104      	movs	r1, #4
 800747a:	f000 02fb 	and.w	r2, r0, #251	@ 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800747e:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8007480:	4620      	mov	r0, r4
 8007482:	f7f9 fd59 	bl	8000f38 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8007486:	4630      	mov	r0, r6
 8007488:	21f0      	movs	r1, #240	@ 0xf0
 800748a:	f7ff ffde 	bl	800744a <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800748e:	f005 02f8 	and.w	r2, r5, #248	@ 0xf8
 8007492:	4620      	mov	r0, r4
 8007494:	2104      	movs	r1, #4
 8007496:	f7f9 fd4f 	bl	8000f38 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800749a:	2249      	movs	r2, #73	@ 0x49
 800749c:	2120      	movs	r1, #32
 800749e:	4620      	mov	r0, r4
 80074a0:	f7f9 fd4a 	bl	8000f38 <IOE_Write>
  IOE_Delay(2); 
 80074a4:	2002      	movs	r0, #2
 80074a6:	f7f9 fd8f 	bl	8000fc8 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 80074aa:	4620      	mov	r0, r4
 80074ac:	2201      	movs	r2, #1
 80074ae:	2121      	movs	r1, #33	@ 0x21
 80074b0:	f7f9 fd42 	bl	8000f38 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 80074b4:	4620      	mov	r0, r4
 80074b6:	229a      	movs	r2, #154	@ 0x9a
 80074b8:	2141      	movs	r1, #65	@ 0x41
 80074ba:	f7f9 fd3d 	bl	8000f38 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 80074be:	4620      	mov	r0, r4
 80074c0:	2201      	movs	r2, #1
 80074c2:	214a      	movs	r1, #74	@ 0x4a
 80074c4:	f7f9 fd38 	bl	8000f38 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80074c8:	4620      	mov	r0, r4
 80074ca:	2201      	movs	r2, #1
 80074cc:	214b      	movs	r1, #75	@ 0x4b
 80074ce:	f7f9 fd33 	bl	8000f38 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80074d2:	4620      	mov	r0, r4
 80074d4:	2200      	movs	r2, #0
 80074d6:	214b      	movs	r1, #75	@ 0x4b
 80074d8:	f7f9 fd2e 	bl	8000f38 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 80074dc:	4620      	mov	r0, r4
 80074de:	2201      	movs	r2, #1
 80074e0:	2156      	movs	r1, #86	@ 0x56
 80074e2:	f7f9 fd29 	bl	8000f38 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 80074e6:	4620      	mov	r0, r4
 80074e8:	2201      	movs	r2, #1
 80074ea:	2158      	movs	r1, #88	@ 0x58
 80074ec:	f7f9 fd24 	bl	8000f38 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 80074f0:	4620      	mov	r0, r4
 80074f2:	2201      	movs	r2, #1
 80074f4:	2140      	movs	r1, #64	@ 0x40
 80074f6:	f7f9 fd1f 	bl	8000f38 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 80074fa:	4620      	mov	r0, r4
 80074fc:	22ff      	movs	r2, #255	@ 0xff
 80074fe:	210b      	movs	r1, #11
 8007500:	f7f9 fd1a 	bl	8000f38 <IOE_Write>
}
 8007504:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8007508:	2002      	movs	r0, #2
 800750a:	f7f9 bd5d 	b.w	8000fc8 <IOE_Delay>
	...

08007510 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8007510:	4b05      	ldr	r3, [pc, #20]	@ (8007528 <SystemInit+0x18>)
 8007512:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8007516:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 800751a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800751e:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8007522:	609a      	str	r2, [r3, #8]
#endif
}
 8007524:	4770      	bx	lr
 8007526:	bf00      	nop
 8007528:	e000ed00 	.word	0xe000ed00

0800752c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800752c:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800752e:	4b0b      	ldr	r3, [pc, #44]	@ (800755c <HAL_Init+0x30>)
 8007530:	681a      	ldr	r2, [r3, #0]
 8007532:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8007536:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8007538:	681a      	ldr	r2, [r3, #0]
 800753a:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800753e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8007540:	681a      	ldr	r2, [r3, #0]
 8007542:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8007546:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8007548:	2003      	movs	r0, #3
 800754a:	f000 f82f 	bl	80075ac <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800754e:	2000      	movs	r0, #0
 8007550:	f7fa f85c 	bl	800160c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8007554:	f7f9 fe26 	bl	80011a4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8007558:	2000      	movs	r0, #0
 800755a:	bd08      	pop	{r3, pc}
 800755c:	40023c00 	.word	0x40023c00

08007560 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8007560:	4a03      	ldr	r2, [pc, #12]	@ (8007570 <HAL_IncTick+0x10>)
 8007562:	4b04      	ldr	r3, [pc, #16]	@ (8007574 <HAL_IncTick+0x14>)
 8007564:	6811      	ldr	r1, [r2, #0]
 8007566:	781b      	ldrb	r3, [r3, #0]
 8007568:	440b      	add	r3, r1
 800756a:	6013      	str	r3, [r2, #0]
}
 800756c:	4770      	bx	lr
 800756e:	bf00      	nop
 8007570:	200044d4 	.word	0x200044d4
 8007574:	20000078 	.word	0x20000078

08007578 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8007578:	4b01      	ldr	r3, [pc, #4]	@ (8007580 <HAL_GetTick+0x8>)
 800757a:	6818      	ldr	r0, [r3, #0]
}
 800757c:	4770      	bx	lr
 800757e:	bf00      	nop
 8007580:	200044d4 	.word	0x200044d4

08007584 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8007584:	b538      	push	{r3, r4, r5, lr}
 8007586:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8007588:	f7ff fff6 	bl	8007578 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800758c:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 800758e:	bf1c      	itt	ne
 8007590:	4b05      	ldrne	r3, [pc, #20]	@ (80075a8 <HAL_Delay+0x24>)
 8007592:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8007594:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8007596:	bf18      	it	ne
 8007598:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800759a:	f7ff ffed 	bl	8007578 <HAL_GetTick>
 800759e:	1b43      	subs	r3, r0, r5
 80075a0:	42a3      	cmp	r3, r4
 80075a2:	d3fa      	bcc.n	800759a <HAL_Delay+0x16>
  {
  }
}
 80075a4:	bd38      	pop	{r3, r4, r5, pc}
 80075a6:	bf00      	nop
 80075a8:	20000078 	.word	0x20000078

080075ac <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80075ac:	4907      	ldr	r1, [pc, #28]	@ (80075cc <HAL_NVIC_SetPriorityGrouping+0x20>)
 80075ae:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80075b0:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80075b4:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80075b6:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80075b8:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80075bc:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80075be:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80075c0:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80075c4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 80075c8:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80075ca:	4770      	bx	lr
 80075cc:	e000ed00 	.word	0xe000ed00

080075d0 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80075d0:	4b16      	ldr	r3, [pc, #88]	@ (800762c <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80075d2:	b530      	push	{r4, r5, lr}
 80075d4:	68dc      	ldr	r4, [r3, #12]
 80075d6:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80075da:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80075de:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80075e0:	2b04      	cmp	r3, #4
 80075e2:	bf28      	it	cs
 80075e4:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80075e6:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80075e8:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80075ec:	bf8c      	ite	hi
 80075ee:	3c03      	subhi	r4, #3
 80075f0:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80075f2:	fa05 f303 	lsl.w	r3, r5, r3
 80075f6:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80075fa:	40a5      	lsls	r5, r4
 80075fc:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8007600:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 8007602:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8007604:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007608:	bfac      	ite	ge
 800760a:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800760e:	4a08      	ldrlt	r2, [pc, #32]	@ (8007630 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007610:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007614:	bfb8      	it	lt
 8007616:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800761a:	b2db      	uxtb	r3, r3
 800761c:	bfaa      	itet	ge
 800761e:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007622:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007624:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8007628:	bd30      	pop	{r4, r5, pc}
 800762a:	bf00      	nop
 800762c:	e000ed00 	.word	0xe000ed00
 8007630:	e000ed14 	.word	0xe000ed14

08007634 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8007634:	2800      	cmp	r0, #0
 8007636:	db07      	blt.n	8007648 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8007638:	4a04      	ldr	r2, [pc, #16]	@ (800764c <HAL_NVIC_EnableIRQ+0x18>)
 800763a:	0941      	lsrs	r1, r0, #5
 800763c:	2301      	movs	r3, #1
 800763e:	f000 001f 	and.w	r0, r0, #31
 8007642:	4083      	lsls	r3, r0
 8007644:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8007648:	4770      	bx	lr
 800764a:	bf00      	nop
 800764c:	e000e100 	.word	0xe000e100

08007650 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8007650:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8007652:	4604      	mov	r4, r0
 8007654:	b150      	cbz	r0, 800766c <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8007656:	7943      	ldrb	r3, [r0, #5]
 8007658:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800765c:	b913      	cbnz	r3, 8007664 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800765e:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8007660:	f7f9 fdc0 	bl	80011e4 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8007664:	2301      	movs	r3, #1
 8007666:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8007668:	2000      	movs	r0, #0
}
 800766a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800766c:	2001      	movs	r0, #1
 800766e:	e7fc      	b.n	800766a <HAL_CRC_Init+0x1a>

08007670 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8007670:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8007672:	4604      	mov	r4, r0
 8007674:	b320      	cbz	r0, 80076c0 <HAL_DMA2D_Init+0x50>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8007676:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 800767a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800767e:	b91b      	cbnz	r3, 8007688 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8007680:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8007684:	f7f9 fdc6 	bl	8001214 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8007688:	2302      	movs	r3, #2
 800768a:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800768e:	6823      	ldr	r3, [r4, #0]
 8007690:	6861      	ldr	r1, [r4, #4]
 8007692:	681a      	ldr	r2, [r3, #0]
 8007694:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8007698:	430a      	orrs	r2, r1
 800769a:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800769c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800769e:	68a1      	ldr	r1, [r4, #8]
 80076a0:	f022 0207 	bic.w	r2, r2, #7
 80076a4:	430a      	orrs	r2, r1
 80076a6:	635a      	str	r2, [r3, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80076a8:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80076aa:	68e1      	ldr	r1, [r4, #12]
 80076ac:	f36f 020d 	bfc	r2, #0, #14
 80076b0:	430a      	orrs	r2, r1
 80076b2:	641a      	str	r2, [r3, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80076b4:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80076b6:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80076b8:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80076ba:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 80076be:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80076c0:	2001      	movs	r0, #1
 80076c2:	e7fc      	b.n	80076be <HAL_DMA2D_Init+0x4e>

080076c4 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 80076c4:	4770      	bx	lr

080076c6 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 80076c6:	4770      	bx	lr

080076c8 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80076c8:	6803      	ldr	r3, [r0, #0]
{
 80076ca:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80076cc:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80076ce:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80076d0:	07f2      	lsls	r2, r6, #31
{
 80076d2:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80076d4:	d514      	bpl.n	8007700 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 80076d6:	05e9      	lsls	r1, r5, #23
 80076d8:	d512      	bpl.n	8007700 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80076da:	681a      	ldr	r2, [r3, #0]
 80076dc:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80076e0:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80076e2:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80076e4:	f042 0201 	orr.w	r2, r2, #1
 80076e8:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80076ea:	2201      	movs	r2, #1
 80076ec:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80076ee:	2304      	movs	r3, #4
 80076f0:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80076f4:	2300      	movs	r3, #0
 80076f6:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 80076fa:	6943      	ldr	r3, [r0, #20]
 80076fc:	b103      	cbz	r3, 8007700 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 80076fe:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8007700:	06b2      	lsls	r2, r6, #26
 8007702:	d516      	bpl.n	8007732 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 8007704:	04ab      	lsls	r3, r5, #18
 8007706:	d514      	bpl.n	8007732 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8007708:	6823      	ldr	r3, [r4, #0]
 800770a:	681a      	ldr	r2, [r3, #0]
 800770c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8007710:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8007712:	2220      	movs	r2, #32
 8007714:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8007716:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007718:	f043 0302 	orr.w	r3, r3, #2
 800771c:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800771e:	2304      	movs	r3, #4
 8007720:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8007724:	2300      	movs	r3, #0
 8007726:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800772a:	6963      	ldr	r3, [r4, #20]
 800772c:	b10b      	cbz	r3, 8007732 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 800772e:	4620      	mov	r0, r4
 8007730:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8007732:	0730      	lsls	r0, r6, #28
 8007734:	d516      	bpl.n	8007764 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8007736:	0529      	lsls	r1, r5, #20
 8007738:	d514      	bpl.n	8007764 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800773a:	6823      	ldr	r3, [r4, #0]
 800773c:	681a      	ldr	r2, [r3, #0]
 800773e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8007742:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8007744:	2208      	movs	r2, #8
 8007746:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8007748:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800774a:	f043 0304 	orr.w	r3, r3, #4
 800774e:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007750:	2304      	movs	r3, #4
 8007752:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8007756:	2300      	movs	r3, #0
 8007758:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800775c:	6963      	ldr	r3, [r4, #20]
 800775e:	b10b      	cbz	r3, 8007764 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8007760:	4620      	mov	r0, r4
 8007762:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8007764:	0772      	lsls	r2, r6, #29
 8007766:	d50b      	bpl.n	8007780 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 8007768:	056b      	lsls	r3, r5, #21
 800776a:	d509      	bpl.n	8007780 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800776c:	6823      	ldr	r3, [r4, #0]
 800776e:	681a      	ldr	r2, [r3, #0]
 8007770:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8007774:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8007776:	2204      	movs	r2, #4
 8007778:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 800777a:	4620      	mov	r0, r4
 800777c:	f7ff ffa2 	bl	80076c4 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8007780:	07b0      	lsls	r0, r6, #30
 8007782:	d514      	bpl.n	80077ae <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8007784:	05a9      	lsls	r1, r5, #22
 8007786:	d512      	bpl.n	80077ae <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8007788:	6823      	ldr	r3, [r4, #0]
 800778a:	681a      	ldr	r2, [r3, #0]
 800778c:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8007790:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8007792:	2202      	movs	r2, #2
 8007794:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8007796:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007798:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800779a:	2301      	movs	r3, #1
 800779c:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80077a0:	2300      	movs	r3, #0
 80077a2:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 80077a6:	6923      	ldr	r3, [r4, #16]
 80077a8:	b10b      	cbz	r3, 80077ae <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 80077aa:	4620      	mov	r0, r4
 80077ac:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80077ae:	06f2      	lsls	r2, r6, #27
 80077b0:	d513      	bpl.n	80077da <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80077b2:	04eb      	lsls	r3, r5, #19
 80077b4:	d511      	bpl.n	80077da <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80077b6:	6823      	ldr	r3, [r4, #0]
 80077b8:	681a      	ldr	r2, [r3, #0]
 80077ba:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 80077be:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80077c0:	2210      	movs	r2, #16
 80077c2:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80077c4:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80077c6:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80077c8:	2301      	movs	r3, #1
 80077ca:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80077ce:	2300      	movs	r3, #0
 80077d0:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80077d4:	4620      	mov	r0, r4
 80077d6:	f7ff ff76 	bl	80076c6 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 80077da:	bd70      	pop	{r4, r5, r6, pc}

080077dc <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 80077dc:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80077de:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 80077e2:	2a01      	cmp	r2, #1
{
 80077e4:	4603      	mov	r3, r0
 80077e6:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hdma2d);
 80077ea:	d02b      	beq.n	8007844 <HAL_DMA2D_ConfigLayer+0x68>
 80077ec:	2201      	movs	r2, #1
 80077ee:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80077f2:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80077f6:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 80077fa:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 80077fe:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 8007800:	4f17      	ldr	r7, [pc, #92]	@ (8007860 <HAL_DMA2D_ConfigLayer+0x84>)
 8007802:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007806:	3c09      	subs	r4, #9
 8007808:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800780a:	bf9c      	itt	ls
 800780c:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
 8007810:	4310      	orrls	r0, r2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8007812:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8007816:	681a      	ldr	r2, [r3, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8007818:	bf88      	it	hi
 800781a:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800781e:	b991      	cbnz	r1, 8007846 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8007820:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8007822:	4039      	ands	r1, r7
 8007824:	4301      	orrs	r1, r0
 8007826:	6251      	str	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007828:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800782a:	6999      	ldr	r1, [r3, #24]
 800782c:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800782e:	d803      	bhi.n	8007838 <HAL_DMA2D_ConfigLayer+0x5c>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8007830:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8007832:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8007836:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8007838:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800783a:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800783c:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 8007840:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 8007844:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8007846:	69d1      	ldr	r1, [r2, #28]
 8007848:	4039      	ands	r1, r7
 800784a:	4301      	orrs	r1, r0
 800784c:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800784e:	1999      	adds	r1, r3, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007850:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8007852:	6989      	ldr	r1, [r1, #24]
 8007854:	6111      	str	r1, [r2, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8007856:	bf9c      	itt	ls
 8007858:	f025 457f 	bicls.w	r5, r5, #4278190080	@ 0xff000000
 800785c:	6215      	strls	r5, [r2, #32]
 800785e:	e7eb      	b.n	8007838 <HAL_DMA2D_ConfigLayer+0x5c>
 8007860:	00fcfff0 	.word	0x00fcfff0

08007864 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8007864:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8007868:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 8007a28 <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800786c:	4a6c      	ldr	r2, [pc, #432]	@ (8007a20 <HAL_GPIO_Init+0x1bc>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 800786e:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8007870:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8007872:	2401      	movs	r4, #1
 8007874:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8007876:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 800787a:	43ac      	bics	r4, r5
 800787c:	f040 80b7 	bne.w	80079ee <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8007880:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8007882:	2703      	movs	r7, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8007884:	f005 0403 	and.w	r4, r5, #3
 8007888:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800788c:	fa07 fc08 	lsl.w	ip, r7, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8007890:	1e67      	subs	r7, r4, #1
 8007892:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8007894:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8007898:	d834      	bhi.n	8007904 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 800789a:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800789c:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 80078a0:	68cf      	ldr	r7, [r1, #12]
 80078a2:	fa07 f708 	lsl.w	r7, r7, r8
 80078a6:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 80078aa:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80078ac:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80078ae:	ea27 0e06 	bic.w	lr, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80078b2:	f3c5 1700 	ubfx	r7, r5, #4, #1
 80078b6:	409f      	lsls	r7, r3
 80078b8:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 80078bc:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 80078be:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80078c0:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 80078c4:	688f      	ldr	r7, [r1, #8]
 80078c6:	fa07 f708 	lsl.w	r7, r7, r8
 80078ca:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80078ce:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 80078d0:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80078d2:	d119      	bne.n	8007908 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 80078d4:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80078d8:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80078dc:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80078e0:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80078e4:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80078e8:	f04f 0e0f 	mov.w	lr, #15
 80078ec:	fa0e fe0b 	lsl.w	lr, lr, fp
 80078f0:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80078f4:	690f      	ldr	r7, [r1, #16]
 80078f6:	fa07 f70b 	lsl.w	r7, r7, fp
 80078fa:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 80078fe:	f8ca 7020 	str.w	r7, [sl, #32]
 8007902:	e001      	b.n	8007908 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8007904:	2c03      	cmp	r4, #3
 8007906:	d1da      	bne.n	80078be <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8007908:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800790a:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800790e:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8007912:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8007914:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 8007918:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800791a:	d068      	beq.n	80079ee <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800791c:	2400      	movs	r4, #0
 800791e:	9401      	str	r4, [sp, #4]
 8007920:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8007924:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 8007928:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 800792c:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8007930:	f023 0703 	bic.w	r7, r3, #3
 8007934:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8007938:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 800793c:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 8007940:	9401      	str	r4, [sp, #4]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8007942:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8007946:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8007948:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800794c:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8007950:	240f      	movs	r4, #15
 8007952:	fa04 f40c 	lsl.w	r4, r4, ip
 8007956:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800795a:	4c32      	ldr	r4, [pc, #200]	@ (8007a24 <HAL_GPIO_Init+0x1c0>)
 800795c:	42a0      	cmp	r0, r4
 800795e:	d04d      	beq.n	80079fc <HAL_GPIO_Init+0x198>
 8007960:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8007964:	42a0      	cmp	r0, r4
 8007966:	d04b      	beq.n	8007a00 <HAL_GPIO_Init+0x19c>
 8007968:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800796c:	42a0      	cmp	r0, r4
 800796e:	d049      	beq.n	8007a04 <HAL_GPIO_Init+0x1a0>
 8007970:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8007974:	42a0      	cmp	r0, r4
 8007976:	d047      	beq.n	8007a08 <HAL_GPIO_Init+0x1a4>
 8007978:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800797c:	42a0      	cmp	r0, r4
 800797e:	d045      	beq.n	8007a0c <HAL_GPIO_Init+0x1a8>
 8007980:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8007984:	42a0      	cmp	r0, r4
 8007986:	d043      	beq.n	8007a10 <HAL_GPIO_Init+0x1ac>
 8007988:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800798c:	42a0      	cmp	r0, r4
 800798e:	d041      	beq.n	8007a14 <HAL_GPIO_Init+0x1b0>
 8007990:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8007994:	42a0      	cmp	r0, r4
 8007996:	d03f      	beq.n	8007a18 <HAL_GPIO_Init+0x1b4>
 8007998:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800799c:	42a0      	cmp	r0, r4
 800799e:	d03d      	beq.n	8007a1c <HAL_GPIO_Init+0x1b8>
 80079a0:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80079a4:	42a0      	cmp	r0, r4
 80079a6:	bf14      	ite	ne
 80079a8:	240a      	movne	r4, #10
 80079aa:	2409      	moveq	r4, #9
 80079ac:	fa04 f40c 	lsl.w	r4, r4, ip
 80079b0:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 80079b4:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR;
 80079b6:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 80079b8:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80079ba:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~((uint32_t)iocurrent);
 80079be:	bf0c      	ite	eq
 80079c0:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 80079c2:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;
 80079c4:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 80079c6:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80079c8:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~((uint32_t)iocurrent);
 80079cc:	bf0c      	ite	eq
 80079ce:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 80079d0:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;
 80079d2:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 80079d4:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80079d6:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~((uint32_t)iocurrent);
 80079da:	bf0c      	ite	eq
 80079dc:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 80079de:	4334      	orrne	r4, r6
        }
        EXTI->EMR = temp;
 80079e0:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80079e2:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80079e4:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 80079e6:	bf54      	ite	pl
 80079e8:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 80079ea:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 80079ec:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80079ee:	3301      	adds	r3, #1
 80079f0:	2b10      	cmp	r3, #16
 80079f2:	f47f af3d 	bne.w	8007870 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 80079f6:	b003      	add	sp, #12
 80079f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80079fc:	2400      	movs	r4, #0
 80079fe:	e7d5      	b.n	80079ac <HAL_GPIO_Init+0x148>
 8007a00:	2401      	movs	r4, #1
 8007a02:	e7d3      	b.n	80079ac <HAL_GPIO_Init+0x148>
 8007a04:	2402      	movs	r4, #2
 8007a06:	e7d1      	b.n	80079ac <HAL_GPIO_Init+0x148>
 8007a08:	2403      	movs	r4, #3
 8007a0a:	e7cf      	b.n	80079ac <HAL_GPIO_Init+0x148>
 8007a0c:	2404      	movs	r4, #4
 8007a0e:	e7cd      	b.n	80079ac <HAL_GPIO_Init+0x148>
 8007a10:	2405      	movs	r4, #5
 8007a12:	e7cb      	b.n	80079ac <HAL_GPIO_Init+0x148>
 8007a14:	2406      	movs	r4, #6
 8007a16:	e7c9      	b.n	80079ac <HAL_GPIO_Init+0x148>
 8007a18:	2407      	movs	r4, #7
 8007a1a:	e7c7      	b.n	80079ac <HAL_GPIO_Init+0x148>
 8007a1c:	2408      	movs	r4, #8
 8007a1e:	e7c5      	b.n	80079ac <HAL_GPIO_Init+0x148>
 8007a20:	40013c00 	.word	0x40013c00
 8007a24:	40020000 	.word	0x40020000
 8007a28:	40023800 	.word	0x40023800

08007a2c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8007a2c:	6903      	ldr	r3, [r0, #16]
 8007a2e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8007a30:	bf14      	ite	ne
 8007a32:	2001      	movne	r0, #1
 8007a34:	2000      	moveq	r0, #0
 8007a36:	4770      	bx	lr

08007a38 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8007a38:	b10a      	cbz	r2, 8007a3e <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8007a3a:	6181      	str	r1, [r0, #24]
  }
}
 8007a3c:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8007a3e:	0409      	lsls	r1, r1, #16
 8007a40:	e7fb      	b.n	8007a3a <HAL_GPIO_WritePin+0x2>

08007a42 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8007a42:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8007a44:	ea01 0203 	and.w	r2, r1, r3
 8007a48:	ea21 0103 	bic.w	r1, r1, r3
 8007a4c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8007a50:	6181      	str	r1, [r0, #24]
}
 8007a52:	4770      	bx	lr

08007a54 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8007a54:	6801      	ldr	r1, [r0, #0]
 8007a56:	694b      	ldr	r3, [r1, #20]
 8007a58:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 8007a5c:	f04f 0200 	mov.w	r2, #0
 8007a60:	d010      	beq.n	8007a84 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8007a62:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 8007a66:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8007a68:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8007a6a:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8007a6c:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007a70:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8007a74:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8007a76:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8007a7a:	f043 0304 	orr.w	r3, r3, #4
 8007a7e:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 8007a80:	2001      	movs	r0, #1
 8007a82:	4770      	bx	lr
  }
  return HAL_OK;
 8007a84:	4618      	mov	r0, r3
}
 8007a86:	4770      	bx	lr

08007a88 <I2C_WaitOnFlagUntilTimeout>:
{
 8007a88:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8007a8c:	4606      	mov	r6, r0
 8007a8e:	460f      	mov	r7, r1
 8007a90:	4691      	mov	r9, r2
 8007a92:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8007a94:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8007a98:	6833      	ldr	r3, [r6, #0]
 8007a9a:	f1ba 0f01 	cmp.w	sl, #1
 8007a9e:	bf0c      	ite	eq
 8007aa0:	695c      	ldreq	r4, [r3, #20]
 8007aa2:	699c      	ldrne	r4, [r3, #24]
 8007aa4:	ea27 0404 	bic.w	r4, r7, r4
 8007aa8:	b2a4      	uxth	r4, r4
 8007aaa:	fab4 f484 	clz	r4, r4
 8007aae:	0964      	lsrs	r4, r4, #5
 8007ab0:	45a1      	cmp	r9, r4
 8007ab2:	d001      	beq.n	8007ab8 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8007ab4:	2000      	movs	r0, #0
 8007ab6:	e025      	b.n	8007b04 <I2C_WaitOnFlagUntilTimeout+0x7c>
    if (Timeout != HAL_MAX_DELAY)
 8007ab8:	1c6a      	adds	r2, r5, #1
 8007aba:	d0ee      	beq.n	8007a9a <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007abc:	f7ff fd5c 	bl	8007578 <HAL_GetTick>
 8007ac0:	9b08      	ldr	r3, [sp, #32]
 8007ac2:	1ac0      	subs	r0, r0, r3
 8007ac4:	42a8      	cmp	r0, r5
 8007ac6:	d801      	bhi.n	8007acc <I2C_WaitOnFlagUntilTimeout+0x44>
 8007ac8:	2d00      	cmp	r5, #0
 8007aca:	d1e5      	bne.n	8007a98 <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8007acc:	6833      	ldr	r3, [r6, #0]
 8007ace:	f1ba 0f01 	cmp.w	sl, #1
 8007ad2:	bf0c      	ite	eq
 8007ad4:	695b      	ldreq	r3, [r3, #20]
 8007ad6:	699b      	ldrne	r3, [r3, #24]
 8007ad8:	ea27 0303 	bic.w	r3, r7, r3
 8007adc:	b29b      	uxth	r3, r3
 8007ade:	fab3 f383 	clz	r3, r3
 8007ae2:	095b      	lsrs	r3, r3, #5
 8007ae4:	4599      	cmp	r9, r3
 8007ae6:	d1d7      	bne.n	8007a98 <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->PreviousState     = I2C_STATE_NONE;
 8007ae8:	2300      	movs	r3, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 8007aea:	2220      	movs	r2, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 8007aec:	6333      	str	r3, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 8007aee:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 8007af2:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8007af6:	6c32      	ldr	r2, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8007af8:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8007afc:	f042 0220 	orr.w	r2, r2, #32
 8007b00:	6432      	str	r2, [r6, #64]	@ 0x40
          return HAL_ERROR;
 8007b02:	2001      	movs	r0, #1
}
 8007b04:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08007b08 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8007b08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007b0c:	4604      	mov	r4, r0
 8007b0e:	460f      	mov	r7, r1
 8007b10:	4616      	mov	r6, r2
 8007b12:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8007b14:	6825      	ldr	r5, [r4, #0]
 8007b16:	6968      	ldr	r0, [r5, #20]
 8007b18:	ea27 0000 	bic.w	r0, r7, r0
 8007b1c:	b280      	uxth	r0, r0
 8007b1e:	b1c0      	cbz	r0, 8007b52 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8007b20:	696b      	ldr	r3, [r5, #20]
 8007b22:	055a      	lsls	r2, r3, #21
 8007b24:	d517      	bpl.n	8007b56 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007b26:	682b      	ldr	r3, [r5, #0]
 8007b28:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8007b2c:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8007b2e:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 8007b32:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8007b34:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8007b36:	2300      	movs	r3, #0
 8007b38:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8007b3a:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007b3e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8007b42:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8007b44:	f043 0304 	orr.w	r3, r3, #4
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007b48:	6423      	str	r3, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8007b4a:	2300      	movs	r3, #0
 8007b4c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8007b50:	2001      	movs	r0, #1
}
 8007b52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8007b56:	1c73      	adds	r3, r6, #1
 8007b58:	d0dd      	beq.n	8007b16 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007b5a:	f7ff fd0d 	bl	8007578 <HAL_GetTick>
 8007b5e:	eba0 0008 	sub.w	r0, r0, r8
 8007b62:	42b0      	cmp	r0, r6
 8007b64:	d801      	bhi.n	8007b6a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x62>
 8007b66:	2e00      	cmp	r6, #0
 8007b68:	d1d4      	bne.n	8007b14 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 8007b6a:	6823      	ldr	r3, [r4, #0]
 8007b6c:	695a      	ldr	r2, [r3, #20]
 8007b6e:	ea27 0202 	bic.w	r2, r7, r2
 8007b72:	b292      	uxth	r2, r2
 8007b74:	2a00      	cmp	r2, #0
 8007b76:	d0cd      	beq.n	8007b14 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
          hi2c->PreviousState       = I2C_STATE_NONE;
 8007b78:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 8007b7a:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8007b7c:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8007b7e:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007b82:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007b86:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8007b88:	4313      	orrs	r3, r2
 8007b8a:	e7dd      	b.n	8007b48 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08007b8c <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8007b8c:	b570      	push	{r4, r5, r6, lr}
 8007b8e:	4604      	mov	r4, r0
 8007b90:	460d      	mov	r5, r1
 8007b92:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8007b94:	6823      	ldr	r3, [r4, #0]
 8007b96:	695b      	ldr	r3, [r3, #20]
 8007b98:	061b      	lsls	r3, r3, #24
 8007b9a:	d501      	bpl.n	8007ba0 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8007b9c:	2000      	movs	r0, #0
 8007b9e:	e01e      	b.n	8007bde <I2C_WaitOnTXEFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8007ba0:	4620      	mov	r0, r4
 8007ba2:	f7ff ff57 	bl	8007a54 <I2C_IsAcknowledgeFailed>
 8007ba6:	b9c8      	cbnz	r0, 8007bdc <I2C_WaitOnTXEFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8007ba8:	1c6a      	adds	r2, r5, #1
 8007baa:	d0f3      	beq.n	8007b94 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007bac:	f7ff fce4 	bl	8007578 <HAL_GetTick>
 8007bb0:	1b80      	subs	r0, r0, r6
 8007bb2:	42a8      	cmp	r0, r5
 8007bb4:	d801      	bhi.n	8007bba <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8007bb6:	2d00      	cmp	r5, #0
 8007bb8:	d1ec      	bne.n	8007b94 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 8007bba:	6823      	ldr	r3, [r4, #0]
 8007bbc:	695b      	ldr	r3, [r3, #20]
 8007bbe:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
 8007bc2:	d1e7      	bne.n	8007b94 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8007bc4:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8007bc6:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8007bc8:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007bcc:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007bd0:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8007bd2:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007bd6:	f042 0220 	orr.w	r2, r2, #32
 8007bda:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8007bdc:	2001      	movs	r0, #1
}
 8007bde:	bd70      	pop	{r4, r5, r6, pc}

08007be0 <I2C_RequestMemoryWrite>:
{
 8007be0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007be4:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007be6:	6802      	ldr	r2, [r0, #0]
{
 8007be8:	b085      	sub	sp, #20
 8007bea:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
 8007bee:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007bf0:	6813      	ldr	r3, [r2, #0]
 8007bf2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007bf6:	6013      	str	r3, [r2, #0]
{
 8007bf8:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8007bfa:	463b      	mov	r3, r7
 8007bfc:	f8cd 8000 	str.w	r8, [sp]
 8007c00:	2200      	movs	r2, #0
 8007c02:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8007c06:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8007c08:	f7ff ff3e 	bl	8007a88 <I2C_WaitOnFlagUntilTimeout>
 8007c0c:	6823      	ldr	r3, [r4, #0]
 8007c0e:	b138      	cbz	r0, 8007c20 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8007c10:	681b      	ldr	r3, [r3, #0]
 8007c12:	05db      	lsls	r3, r3, #23
 8007c14:	d502      	bpl.n	8007c1c <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8007c16:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8007c1a:	6423      	str	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8007c1c:	2603      	movs	r6, #3
 8007c1e:	e020      	b.n	8007c62 <I2C_RequestMemoryWrite+0x82>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8007c20:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8007c24:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8007c26:	491a      	ldr	r1, [pc, #104]	@ (8007c90 <I2C_RequestMemoryWrite+0xb0>)
 8007c28:	4643      	mov	r3, r8
 8007c2a:	463a      	mov	r2, r7
 8007c2c:	4620      	mov	r0, r4
 8007c2e:	f7ff ff6b 	bl	8007b08 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007c32:	b9a8      	cbnz	r0, 8007c60 <I2C_RequestMemoryWrite+0x80>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007c34:	6823      	ldr	r3, [r4, #0]
 8007c36:	9003      	str	r0, [sp, #12]
 8007c38:	695a      	ldr	r2, [r3, #20]
 8007c3a:	9203      	str	r2, [sp, #12]
 8007c3c:	699b      	ldr	r3, [r3, #24]
 8007c3e:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007c40:	4642      	mov	r2, r8
 8007c42:	4639      	mov	r1, r7
 8007c44:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007c46:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007c48:	f7ff ffa0 	bl	8007b8c <I2C_WaitOnTXEFlagUntilTimeout>
 8007c4c:	4606      	mov	r6, r0
 8007c4e:	b160      	cbz	r0, 8007c6a <I2C_RequestMemoryWrite+0x8a>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8007c50:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8007c52:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007c54:	bf01      	itttt	eq
 8007c56:	6822      	ldreq	r2, [r4, #0]
 8007c58:	6813      	ldreq	r3, [r2, #0]
 8007c5a:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8007c5e:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8007c60:	2601      	movs	r6, #1
}
 8007c62:	4630      	mov	r0, r6
 8007c64:	b005      	add	sp, #20
 8007c66:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8007c6a:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007c6e:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8007c70:	d102      	bne.n	8007c78 <I2C_RequestMemoryWrite+0x98>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8007c72:	b2ed      	uxtb	r5, r5
 8007c74:	611d      	str	r5, [r3, #16]
 8007c76:	e7f4      	b.n	8007c62 <I2C_RequestMemoryWrite+0x82>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8007c78:	0a2a      	lsrs	r2, r5, #8
 8007c7a:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007c7c:	4639      	mov	r1, r7
 8007c7e:	4642      	mov	r2, r8
 8007c80:	4620      	mov	r0, r4
 8007c82:	f7ff ff83 	bl	8007b8c <I2C_WaitOnTXEFlagUntilTimeout>
 8007c86:	2800      	cmp	r0, #0
 8007c88:	d1e2      	bne.n	8007c50 <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8007c8a:	6823      	ldr	r3, [r4, #0]
 8007c8c:	e7f1      	b.n	8007c72 <I2C_RequestMemoryWrite+0x92>
 8007c8e:	bf00      	nop
 8007c90:	00010002 	.word	0x00010002

08007c94 <I2C_RequestMemoryRead>:
{
 8007c94:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007c98:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007c9a:	6803      	ldr	r3, [r0, #0]
{
 8007c9c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007c9e:	681a      	ldr	r2, [r3, #0]
 8007ca0:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8007ca4:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007ca6:	681a      	ldr	r2, [r3, #0]
{
 8007ca8:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007cac:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8007cb0:	601a      	str	r2, [r3, #0]
{
 8007cb2:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8007cb4:	463b      	mov	r3, r7
 8007cb6:	f8cd 8000 	str.w	r8, [sp]
 8007cba:	2200      	movs	r2, #0
 8007cbc:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8007cc0:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8007cc2:	f7ff fee1 	bl	8007a88 <I2C_WaitOnFlagUntilTimeout>
 8007cc6:	6823      	ldr	r3, [r4, #0]
 8007cc8:	b138      	cbz	r0, 8007cda <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8007cca:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8007ccc:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8007cce:	bf44      	itt	mi
 8007cd0:	f44f 7300 	movmi.w	r3, #512	@ 0x200
 8007cd4:	6423      	strmi	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8007cd6:	2003      	movs	r0, #3
 8007cd8:	e021      	b.n	8007d1e <I2C_RequestMemoryRead+0x8a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8007cda:	fa5f f986 	uxtb.w	r9, r6
 8007cde:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8007ce2:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8007ce4:	492b      	ldr	r1, [pc, #172]	@ (8007d94 <I2C_RequestMemoryRead+0x100>)
 8007ce6:	4643      	mov	r3, r8
 8007ce8:	463a      	mov	r2, r7
 8007cea:	4620      	mov	r0, r4
 8007cec:	f7ff ff0c 	bl	8007b08 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007cf0:	b9a0      	cbnz	r0, 8007d1c <I2C_RequestMemoryRead+0x88>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007cf2:	6823      	ldr	r3, [r4, #0]
 8007cf4:	9003      	str	r0, [sp, #12]
 8007cf6:	695a      	ldr	r2, [r3, #20]
 8007cf8:	9203      	str	r2, [sp, #12]
 8007cfa:	699b      	ldr	r3, [r3, #24]
 8007cfc:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007cfe:	4642      	mov	r2, r8
 8007d00:	4639      	mov	r1, r7
 8007d02:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007d04:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007d06:	f7ff ff41 	bl	8007b8c <I2C_WaitOnTXEFlagUntilTimeout>
 8007d0a:	b158      	cbz	r0, 8007d24 <I2C_RequestMemoryRead+0x90>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8007d0c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8007d0e:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007d10:	bf01      	itttt	eq
 8007d12:	6822      	ldreq	r2, [r4, #0]
 8007d14:	6813      	ldreq	r3, [r2, #0]
 8007d16:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8007d1a:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8007d1c:	2001      	movs	r0, #1
}
 8007d1e:	b004      	add	sp, #16
 8007d20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8007d24:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007d28:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8007d2a:	d11a      	bne.n	8007d62 <I2C_RequestMemoryRead+0xce>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8007d2c:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007d2e:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8007d30:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007d32:	4639      	mov	r1, r7
 8007d34:	4620      	mov	r0, r4
 8007d36:	f7ff ff29 	bl	8007b8c <I2C_WaitOnTXEFlagUntilTimeout>
 8007d3a:	4602      	mov	r2, r0
 8007d3c:	2800      	cmp	r0, #0
 8007d3e:	d1e5      	bne.n	8007d0c <I2C_RequestMemoryRead+0x78>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007d40:	6821      	ldr	r1, [r4, #0]
 8007d42:	680b      	ldr	r3, [r1, #0]
 8007d44:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007d48:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8007d4a:	4620      	mov	r0, r4
 8007d4c:	f8cd 8000 	str.w	r8, [sp]
 8007d50:	463b      	mov	r3, r7
 8007d52:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8007d56:	f7ff fe97 	bl	8007a88 <I2C_WaitOnFlagUntilTimeout>
 8007d5a:	6822      	ldr	r2, [r4, #0]
 8007d5c:	b160      	cbz	r0, 8007d78 <I2C_RequestMemoryRead+0xe4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8007d5e:	6813      	ldr	r3, [r2, #0]
 8007d60:	e7b4      	b.n	8007ccc <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8007d62:	0a2a      	lsrs	r2, r5, #8
 8007d64:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007d66:	4639      	mov	r1, r7
 8007d68:	4642      	mov	r2, r8
 8007d6a:	4620      	mov	r0, r4
 8007d6c:	f7ff ff0e 	bl	8007b8c <I2C_WaitOnTXEFlagUntilTimeout>
 8007d70:	2800      	cmp	r0, #0
 8007d72:	d1cb      	bne.n	8007d0c <I2C_RequestMemoryRead+0x78>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8007d74:	6823      	ldr	r3, [r4, #0]
 8007d76:	e7d9      	b.n	8007d2c <I2C_RequestMemoryRead+0x98>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8007d78:	f049 0301 	orr.w	r3, r9, #1
 8007d7c:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8007d7e:	4905      	ldr	r1, [pc, #20]	@ (8007d94 <I2C_RequestMemoryRead+0x100>)
 8007d80:	4643      	mov	r3, r8
 8007d82:	463a      	mov	r2, r7
 8007d84:	4620      	mov	r0, r4
 8007d86:	f7ff febf 	bl	8007b08 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007d8a:	3800      	subs	r0, #0
 8007d8c:	bf18      	it	ne
 8007d8e:	2001      	movne	r0, #1
 8007d90:	e7c5      	b.n	8007d1e <I2C_RequestMemoryRead+0x8a>
 8007d92:	bf00      	nop
 8007d94:	00010002 	.word	0x00010002

08007d98 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8007d98:	b570      	push	{r4, r5, r6, lr}
 8007d9a:	4604      	mov	r4, r0
 8007d9c:	460d      	mov	r5, r1
 8007d9e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8007da0:	6823      	ldr	r3, [r4, #0]
 8007da2:	695b      	ldr	r3, [r3, #20]
 8007da4:	075b      	lsls	r3, r3, #29
 8007da6:	d501      	bpl.n	8007dac <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8007da8:	2000      	movs	r0, #0
 8007daa:	e01e      	b.n	8007dea <I2C_WaitOnBTFFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8007dac:	4620      	mov	r0, r4
 8007dae:	f7ff fe51 	bl	8007a54 <I2C_IsAcknowledgeFailed>
 8007db2:	b9c8      	cbnz	r0, 8007de8 <I2C_WaitOnBTFFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8007db4:	1c6a      	adds	r2, r5, #1
 8007db6:	d0f3      	beq.n	8007da0 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007db8:	f7ff fbde 	bl	8007578 <HAL_GetTick>
 8007dbc:	1b80      	subs	r0, r0, r6
 8007dbe:	42a8      	cmp	r0, r5
 8007dc0:	d801      	bhi.n	8007dc6 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8007dc2:	2d00      	cmp	r5, #0
 8007dc4:	d1ec      	bne.n	8007da0 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 8007dc6:	6823      	ldr	r3, [r4, #0]
 8007dc8:	695b      	ldr	r3, [r3, #20]
 8007dca:	f013 0304 	ands.w	r3, r3, #4
 8007dce:	d1e7      	bne.n	8007da0 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8007dd0:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8007dd2:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8007dd4:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007dd8:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007ddc:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8007dde:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007de2:	f042 0220 	orr.w	r2, r2, #32
 8007de6:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8007de8:	2001      	movs	r0, #1
}
 8007dea:	bd70      	pop	{r4, r5, r6, pc}

08007dec <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8007dec:	b570      	push	{r4, r5, r6, lr}
 8007dee:	4604      	mov	r4, r0
 8007df0:	460d      	mov	r5, r1
 8007df2:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8007df4:	6821      	ldr	r1, [r4, #0]
 8007df6:	694b      	ldr	r3, [r1, #20]
 8007df8:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8007dfc:	d001      	beq.n	8007e02 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8007dfe:	2000      	movs	r0, #0
 8007e00:	e011      	b.n	8007e26 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8007e02:	694a      	ldr	r2, [r1, #20]
 8007e04:	06d2      	lsls	r2, r2, #27
 8007e06:	d50f      	bpl.n	8007e28 <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8007e08:	f06f 0210 	mvn.w	r2, #16
 8007e0c:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8007e0e:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8007e10:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8007e12:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007e16:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8007e1a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007e1c:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 8007e1e:	2300      	movs	r3, #0
 8007e20:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8007e24:	2001      	movs	r0, #1
}
 8007e26:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007e28:	f7ff fba6 	bl	8007578 <HAL_GetTick>
 8007e2c:	1b80      	subs	r0, r0, r6
 8007e2e:	42a8      	cmp	r0, r5
 8007e30:	d801      	bhi.n	8007e36 <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 8007e32:	2d00      	cmp	r5, #0
 8007e34:	d1de      	bne.n	8007df4 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 8007e36:	6823      	ldr	r3, [r4, #0]
 8007e38:	695b      	ldr	r3, [r3, #20]
 8007e3a:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8007e3e:	d1d9      	bne.n	8007df4 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->State               = HAL_I2C_STATE_READY;
 8007e40:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8007e42:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8007e44:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007e48:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007e4c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8007e4e:	4313      	orrs	r3, r2
 8007e50:	e7e4      	b.n	8007e1c <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
	...

08007e54 <HAL_I2C_Init>:
{
 8007e54:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8007e56:	4604      	mov	r4, r0
 8007e58:	b908      	cbnz	r0, 8007e5e <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8007e5a:	2001      	movs	r0, #1
}
 8007e5c:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8007e5e:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8007e62:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8007e66:	b91b      	cbnz	r3, 8007e70 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8007e68:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 8007e6c:	f7f9 f9f4 	bl	8001258 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8007e70:	2324      	movs	r3, #36	@ 0x24
 8007e72:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8007e76:	6823      	ldr	r3, [r4, #0]
 8007e78:	681a      	ldr	r2, [r3, #0]
 8007e7a:	f022 0201 	bic.w	r2, r2, #1
 8007e7e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8007e80:	681a      	ldr	r2, [r3, #0]
 8007e82:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8007e86:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8007e88:	681a      	ldr	r2, [r3, #0]
 8007e8a:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8007e8e:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8007e90:	f000 fea8 	bl	8008be4 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8007e94:	4b3f      	ldr	r3, [pc, #252]	@ (8007f94 <HAL_I2C_Init+0x140>)
 8007e96:	6865      	ldr	r5, [r4, #4]
 8007e98:	429d      	cmp	r5, r3
 8007e9a:	bf94      	ite	ls
 8007e9c:	4b3e      	ldrls	r3, [pc, #248]	@ (8007f98 <HAL_I2C_Init+0x144>)
 8007e9e:	4b3f      	ldrhi	r3, [pc, #252]	@ (8007f9c <HAL_I2C_Init+0x148>)
 8007ea0:	4298      	cmp	r0, r3
 8007ea2:	bf8c      	ite	hi
 8007ea4:	2300      	movhi	r3, #0
 8007ea6:	2301      	movls	r3, #1
 8007ea8:	2b00      	cmp	r3, #0
 8007eaa:	d1d6      	bne.n	8007e5a <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8007eac:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8007eae:	4e39      	ldr	r6, [pc, #228]	@ (8007f94 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8007eb0:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8007eb2:	4b3b      	ldr	r3, [pc, #236]	@ (8007fa0 <HAL_I2C_Init+0x14c>)
 8007eb4:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8007eb8:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8007ebc:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8007ebe:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8007ec0:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8007ec2:	bf88      	it	hi
 8007ec4:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
 8007ec8:	6a11      	ldr	r1, [r2, #32]
 8007eca:	bf88      	it	hi
 8007ecc:	4373      	mulhi	r3, r6
 8007ece:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8007ed2:	bf84      	itt	hi
 8007ed4:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 8007ed8:	fbb3 f3f6 	udivhi	r3, r3, r6
 8007edc:	3301      	adds	r3, #1
 8007ede:	430b      	orrs	r3, r1
 8007ee0:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8007ee2:	69d1      	ldr	r1, [r2, #28]
 8007ee4:	1e43      	subs	r3, r0, #1
 8007ee6:	482b      	ldr	r0, [pc, #172]	@ (8007f94 <HAL_I2C_Init+0x140>)
 8007ee8:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 8007eec:	4285      	cmp	r5, r0
 8007eee:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8007ef2:	d832      	bhi.n	8007f5a <HAL_I2C_Init+0x106>
 8007ef4:	006d      	lsls	r5, r5, #1
 8007ef6:	f640 70fc 	movw	r0, #4092	@ 0xffc
 8007efa:	fbb3 f3f5 	udiv	r3, r3, r5
 8007efe:	3301      	adds	r3, #1
 8007f00:	4203      	tst	r3, r0
 8007f02:	d042      	beq.n	8007f8a <HAL_I2C_Init+0x136>
 8007f04:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007f08:	4319      	orrs	r1, r3
 8007f0a:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8007f0c:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8007f10:	6811      	ldr	r1, [r2, #0]
 8007f12:	4303      	orrs	r3, r0
 8007f14:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 8007f18:	430b      	orrs	r3, r1
 8007f1a:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8007f1c:	6891      	ldr	r1, [r2, #8]
 8007f1e:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8007f22:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 8007f26:	4303      	orrs	r3, r0
 8007f28:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8007f2c:	430b      	orrs	r3, r1
 8007f2e:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8007f30:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8007f34:	68d1      	ldr	r1, [r2, #12]
 8007f36:	4303      	orrs	r3, r0
 8007f38:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8007f3c:	430b      	orrs	r3, r1
 8007f3e:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8007f40:	6813      	ldr	r3, [r2, #0]
 8007f42:	f043 0301 	orr.w	r3, r3, #1
 8007f46:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8007f48:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8007f4a:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8007f4c:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8007f4e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8007f52:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8007f54:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 8007f58:	e780      	b.n	8007e5c <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8007f5a:	68a0      	ldr	r0, [r4, #8]
 8007f5c:	b950      	cbnz	r0, 8007f74 <HAL_I2C_Init+0x120>
 8007f5e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8007f62:	fbb3 f3f5 	udiv	r3, r3, r5
 8007f66:	3301      	adds	r3, #1
 8007f68:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007f6c:	b17b      	cbz	r3, 8007f8e <HAL_I2C_Init+0x13a>
 8007f6e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007f72:	e7c9      	b.n	8007f08 <HAL_I2C_Init+0xb4>
 8007f74:	2019      	movs	r0, #25
 8007f76:	4368      	muls	r0, r5
 8007f78:	fbb3 f3f0 	udiv	r3, r3, r0
 8007f7c:	3301      	adds	r3, #1
 8007f7e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007f82:	b123      	cbz	r3, 8007f8e <HAL_I2C_Init+0x13a>
 8007f84:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8007f88:	e7be      	b.n	8007f08 <HAL_I2C_Init+0xb4>
 8007f8a:	2304      	movs	r3, #4
 8007f8c:	e7bc      	b.n	8007f08 <HAL_I2C_Init+0xb4>
 8007f8e:	2301      	movs	r3, #1
 8007f90:	e7ba      	b.n	8007f08 <HAL_I2C_Init+0xb4>
 8007f92:	bf00      	nop
 8007f94:	000186a0 	.word	0x000186a0
 8007f98:	001e847f 	.word	0x001e847f
 8007f9c:	003d08ff 	.word	0x003d08ff
 8007fa0:	000f4240 	.word	0x000f4240

08007fa4 <HAL_I2C_Mem_Write>:
{
 8007fa4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007fa8:	4604      	mov	r4, r0
 8007faa:	4699      	mov	r9, r3
 8007fac:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8007fae:	460f      	mov	r7, r1
 8007fb0:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8007fb2:	f7ff fae1 	bl	8007578 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8007fb6:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8007fba:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8007fbc:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8007fbe:	d003      	beq.n	8007fc8 <HAL_I2C_Mem_Write+0x24>
      return HAL_BUSY;
 8007fc0:	2002      	movs	r0, #2
}
 8007fc2:	b003      	add	sp, #12
 8007fc4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8007fc8:	9000      	str	r0, [sp, #0]
 8007fca:	493c      	ldr	r1, [pc, #240]	@ (80080bc <HAL_I2C_Mem_Write+0x118>)
 8007fcc:	2319      	movs	r3, #25
 8007fce:	2201      	movs	r2, #1
 8007fd0:	4620      	mov	r0, r4
 8007fd2:	f7ff fd59 	bl	8007a88 <I2C_WaitOnFlagUntilTimeout>
 8007fd6:	2800      	cmp	r0, #0
 8007fd8:	d1f2      	bne.n	8007fc0 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8007fda:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 8007fde:	2b01      	cmp	r3, #1
 8007fe0:	d0ee      	beq.n	8007fc0 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8007fe2:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8007fe4:	2301      	movs	r3, #1
 8007fe6:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8007fea:	6803      	ldr	r3, [r0, #0]
 8007fec:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8007fee:	bf5e      	ittt	pl
 8007ff0:	6803      	ldrpl	r3, [r0, #0]
 8007ff2:	f043 0301 	orrpl.w	r3, r3, #1
 8007ff6:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8007ff8:	6803      	ldr	r3, [r0, #0]
 8007ffa:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8007ffe:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8008000:	2321      	movs	r3, #33	@ 0x21
 8008002:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8008006:	2340      	movs	r3, #64	@ 0x40
 8008008:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800800c:	2300      	movs	r3, #0
 800800e:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8008010:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8008012:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8008014:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8008018:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800801a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800801c:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800801e:	4b28      	ldr	r3, [pc, #160]	@ (80080c0 <HAL_I2C_Mem_Write+0x11c>)
 8008020:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8008022:	4642      	mov	r2, r8
 8008024:	e9cd 6500 	strd	r6, r5, [sp]
 8008028:	464b      	mov	r3, r9
 800802a:	4639      	mov	r1, r7
 800802c:	4620      	mov	r0, r4
 800802e:	f7ff fdd7 	bl	8007be0 <I2C_RequestMemoryWrite>
 8008032:	2800      	cmp	r0, #0
 8008034:	d02a      	beq.n	800808c <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8008036:	2001      	movs	r0, #1
 8008038:	e7c3      	b.n	8007fc2 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800803a:	f7ff fda7 	bl	8007b8c <I2C_WaitOnTXEFlagUntilTimeout>
 800803e:	b140      	cbz	r0, 8008052 <HAL_I2C_Mem_Write+0xae>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8008040:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008042:	2b04      	cmp	r3, #4
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008044:	bf01      	itttt	eq
 8008046:	6822      	ldreq	r2, [r4, #0]
 8008048:	6813      	ldreq	r3, [r2, #0]
 800804a:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800804e:	6013      	streq	r3, [r2, #0]
 8008050:	e7f1      	b.n	8008036 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8008052:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008054:	6827      	ldr	r7, [r4, #0]
 8008056:	461a      	mov	r2, r3
 8008058:	f812 1b01 	ldrb.w	r1, [r2], #1
 800805c:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800805e:	6262      	str	r2, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8008060:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8008062:	8d21      	ldrh	r1, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8008064:	3a01      	subs	r2, #1
 8008066:	b292      	uxth	r2, r2
 8008068:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800806a:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 800806c:	1e48      	subs	r0, r1, #1
 800806e:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8008070:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8008072:	8520      	strh	r0, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8008074:	d50a      	bpl.n	800808c <HAL_I2C_Mem_Write+0xe8>
 8008076:	b148      	cbz	r0, 800808c <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8008078:	785a      	ldrb	r2, [r3, #1]
 800807a:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 800807c:	3302      	adds	r3, #2
 800807e:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8008080:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8008082:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8008084:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8008086:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8008088:	8521      	strh	r1, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 800808a:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 800808c:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800808e:	462a      	mov	r2, r5
 8008090:	4631      	mov	r1, r6
 8008092:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8008094:	2b00      	cmp	r3, #0
 8008096:	d1d0      	bne.n	800803a <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8008098:	f7ff fe7e 	bl	8007d98 <I2C_WaitOnBTFFlagUntilTimeout>
 800809c:	2800      	cmp	r0, #0
 800809e:	d1cf      	bne.n	8008040 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80080a0:	6822      	ldr	r2, [r4, #0]
 80080a2:	6813      	ldr	r3, [r2, #0]
 80080a4:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80080a8:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80080aa:	2320      	movs	r3, #32
 80080ac:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 80080b0:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80080b4:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    return HAL_OK;
 80080b8:	e783      	b.n	8007fc2 <HAL_I2C_Mem_Write+0x1e>
 80080ba:	bf00      	nop
 80080bc:	00100002 	.word	0x00100002
 80080c0:	ffff0000 	.word	0xffff0000

080080c4 <HAL_I2C_Mem_Read>:
{
 80080c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80080c8:	4604      	mov	r4, r0
 80080ca:	b087      	sub	sp, #28
 80080cc:	4699      	mov	r9, r3
 80080ce:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 80080d0:	460d      	mov	r5, r1
 80080d2:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80080d4:	f7ff fa50 	bl	8007578 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80080d8:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 80080dc:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80080de:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80080e0:	d004      	beq.n	80080ec <HAL_I2C_Mem_Read+0x28>
      return HAL_BUSY;
 80080e2:	2502      	movs	r5, #2
}
 80080e4:	4628      	mov	r0, r5
 80080e6:	b007      	add	sp, #28
 80080e8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80080ec:	9000      	str	r0, [sp, #0]
 80080ee:	497a      	ldr	r1, [pc, #488]	@ (80082d8 <HAL_I2C_Mem_Read+0x214>)
 80080f0:	2319      	movs	r3, #25
 80080f2:	2201      	movs	r2, #1
 80080f4:	4620      	mov	r0, r4
 80080f6:	f7ff fcc7 	bl	8007a88 <I2C_WaitOnFlagUntilTimeout>
 80080fa:	2800      	cmp	r0, #0
 80080fc:	d1f1      	bne.n	80080e2 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 80080fe:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 8008102:	2b01      	cmp	r3, #1
 8008104:	d0ed      	beq.n	80080e2 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8008106:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8008108:	2301      	movs	r3, #1
 800810a:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800810e:	6803      	ldr	r3, [r0, #0]
 8008110:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8008112:	bf5e      	ittt	pl
 8008114:	6803      	ldrpl	r3, [r0, #0]
 8008116:	f043 0301 	orrpl.w	r3, r3, #1
 800811a:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800811c:	6803      	ldr	r3, [r0, #0]
 800811e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8008122:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8008124:	2322      	movs	r3, #34	@ 0x22
 8008126:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800812a:	2340      	movs	r3, #64	@ 0x40
 800812c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8008130:	2300      	movs	r3, #0
 8008132:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8008134:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008136:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8008138:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800813c:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800813e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8008140:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8008142:	4b66      	ldr	r3, [pc, #408]	@ (80082dc <HAL_I2C_Mem_Read+0x218>)
 8008144:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8008146:	4629      	mov	r1, r5
 8008148:	e9cd 7600 	strd	r7, r6, [sp]
 800814c:	464b      	mov	r3, r9
 800814e:	4642      	mov	r2, r8
 8008150:	4620      	mov	r0, r4
 8008152:	f7ff fd9f 	bl	8007c94 <I2C_RequestMemoryRead>
 8008156:	4605      	mov	r5, r0
 8008158:	b108      	cbz	r0, 800815e <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800815a:	2501      	movs	r5, #1
 800815c:	e7c2      	b.n	80080e4 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800815e:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008160:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8008162:	b9b2      	cbnz	r2, 8008192 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008164:	9002      	str	r0, [sp, #8]
 8008166:	695a      	ldr	r2, [r3, #20]
 8008168:	9202      	str	r2, [sp, #8]
 800816a:	699a      	ldr	r2, [r3, #24]
 800816c:	9202      	str	r2, [sp, #8]
 800816e:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008170:	681a      	ldr	r2, [r3, #0]
 8008172:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8008176:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8008178:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 80082e0 <HAL_I2C_Mem_Read+0x21c>
    while (hi2c->XferSize > 0U)
 800817c:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800817e:	2b00      	cmp	r3, #0
 8008180:	d12c      	bne.n	80081dc <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8008182:	2220      	movs	r2, #32
 8008184:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8008188:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800818c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 8008190:	e7a8      	b.n	80080e4 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8008192:	2a01      	cmp	r2, #1
 8008194:	d10a      	bne.n	80081ac <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008196:	681a      	ldr	r2, [r3, #0]
 8008198:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800819c:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800819e:	9003      	str	r0, [sp, #12]
 80081a0:	695a      	ldr	r2, [r3, #20]
 80081a2:	9203      	str	r2, [sp, #12]
 80081a4:	699a      	ldr	r2, [r3, #24]
 80081a6:	9203      	str	r2, [sp, #12]
 80081a8:	9a03      	ldr	r2, [sp, #12]
 80081aa:	e7e1      	b.n	8008170 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 80081ac:	2a02      	cmp	r2, #2
 80081ae:	d10e      	bne.n	80081ce <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80081b0:	681a      	ldr	r2, [r3, #0]
 80081b2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80081b6:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80081b8:	681a      	ldr	r2, [r3, #0]
 80081ba:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80081be:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80081c0:	9004      	str	r0, [sp, #16]
 80081c2:	695a      	ldr	r2, [r3, #20]
 80081c4:	9204      	str	r2, [sp, #16]
 80081c6:	699b      	ldr	r3, [r3, #24]
 80081c8:	9304      	str	r3, [sp, #16]
 80081ca:	9b04      	ldr	r3, [sp, #16]
 80081cc:	e7d4      	b.n	8008178 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80081ce:	9005      	str	r0, [sp, #20]
 80081d0:	695a      	ldr	r2, [r3, #20]
 80081d2:	9205      	str	r2, [sp, #20]
 80081d4:	699b      	ldr	r3, [r3, #24]
 80081d6:	9305      	str	r3, [sp, #20]
 80081d8:	9b05      	ldr	r3, [sp, #20]
 80081da:	e7cd      	b.n	8008178 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 80081dc:	2b03      	cmp	r3, #3
 80081de:	d856      	bhi.n	800828e <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 80081e0:	2b01      	cmp	r3, #1
 80081e2:	d115      	bne.n	8008210 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80081e4:	4632      	mov	r2, r6
 80081e6:	4639      	mov	r1, r7
 80081e8:	4620      	mov	r0, r4
 80081ea:	f7ff fdff 	bl	8007dec <I2C_WaitOnRXNEFlagUntilTimeout>
 80081ee:	2800      	cmp	r0, #0
 80081f0:	d1b3      	bne.n	800815a <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80081f2:	6823      	ldr	r3, [r4, #0]
 80081f4:	691a      	ldr	r2, [r3, #16]
 80081f6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80081f8:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80081fa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80081fc:	3301      	adds	r3, #1
 80081fe:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8008200:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8008202:	3b01      	subs	r3, #1
 8008204:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8008206:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8008208:	3b01      	subs	r3, #1
 800820a:	b29b      	uxth	r3, r3
 800820c:	8563      	strh	r3, [r4, #42]	@ 0x2a
 800820e:	e7b5      	b.n	800817c <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8008210:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8008212:	9600      	str	r6, [sp, #0]
 8008214:	463b      	mov	r3, r7
 8008216:	f04f 0200 	mov.w	r2, #0
 800821a:	4641      	mov	r1, r8
 800821c:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800821e:	d119      	bne.n	8008254 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8008220:	f7ff fc32 	bl	8007a88 <I2C_WaitOnFlagUntilTimeout>
 8008224:	2800      	cmp	r0, #0
 8008226:	d198      	bne.n	800815a <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008228:	6823      	ldr	r3, [r4, #0]
 800822a:	681a      	ldr	r2, [r3, #0]
 800822c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8008230:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008232:	691a      	ldr	r2, [r3, #16]
 8008234:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008236:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8008238:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800823a:	1c53      	adds	r3, r2, #1
 800823c:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800823e:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8008240:	3b01      	subs	r3, #1
 8008242:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8008244:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8008246:	3b01      	subs	r3, #1
 8008248:	b29b      	uxth	r3, r3
 800824a:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800824c:	6823      	ldr	r3, [r4, #0]
 800824e:	691b      	ldr	r3, [r3, #16]
 8008250:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8008252:	e7d2      	b.n	80081fa <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8008254:	f7ff fc18 	bl	8007a88 <I2C_WaitOnFlagUntilTimeout>
 8008258:	4602      	mov	r2, r0
 800825a:	2800      	cmp	r0, #0
 800825c:	f47f af7d 	bne.w	800815a <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008260:	6823      	ldr	r3, [r4, #0]
 8008262:	6819      	ldr	r1, [r3, #0]
 8008264:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 8008268:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800826a:	6919      	ldr	r1, [r3, #16]
 800826c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800826e:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 8008270:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008272:	3301      	adds	r3, #1
 8008274:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8008276:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8008278:	3b01      	subs	r3, #1
 800827a:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 800827c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800827e:	3b01      	subs	r3, #1
 8008280:	b29b      	uxth	r3, r3
 8008282:	8563      	strh	r3, [r4, #42]	@ 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8008284:	4641      	mov	r1, r8
 8008286:	9600      	str	r6, [sp, #0]
 8008288:	463b      	mov	r3, r7
 800828a:	4620      	mov	r0, r4
 800828c:	e7c8      	b.n	8008220 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800828e:	4632      	mov	r2, r6
 8008290:	4639      	mov	r1, r7
 8008292:	4620      	mov	r0, r4
 8008294:	f7ff fdaa 	bl	8007dec <I2C_WaitOnRXNEFlagUntilTimeout>
 8008298:	2800      	cmp	r0, #0
 800829a:	f47f af5e 	bne.w	800815a <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800829e:	6823      	ldr	r3, [r4, #0]
 80082a0:	691a      	ldr	r2, [r3, #16]
 80082a2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80082a4:	701a      	strb	r2, [r3, #0]
        hi2c->XferCount--;
 80082a6:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
        hi2c->pBuffPtr++;
 80082a8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 80082aa:	3a01      	subs	r2, #1
 80082ac:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 80082ae:	1c4b      	adds	r3, r1, #1
        hi2c->XferCount--;
 80082b0:	8562      	strh	r2, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80082b2:	6822      	ldr	r2, [r4, #0]
        hi2c->pBuffPtr++;
 80082b4:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 80082b6:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80082b8:	6950      	ldr	r0, [r2, #20]
        hi2c->XferSize--;
 80082ba:	3b01      	subs	r3, #1
 80082bc:	b29b      	uxth	r3, r3
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80082be:	0740      	lsls	r0, r0, #29
        hi2c->XferSize--;
 80082c0:	8523      	strh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80082c2:	f57f af5b 	bpl.w	800817c <HAL_I2C_Mem_Read+0xb8>
          if (hi2c->XferSize == 3U)
 80082c6:	2b03      	cmp	r3, #3
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80082c8:	bf02      	ittt	eq
 80082ca:	6813      	ldreq	r3, [r2, #0]
 80082cc:	f423 6380 	biceq.w	r3, r3, #1024	@ 0x400
 80082d0:	6013      	streq	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80082d2:	6913      	ldr	r3, [r2, #16]
 80082d4:	704b      	strb	r3, [r1, #1]
 80082d6:	e790      	b.n	80081fa <HAL_I2C_Mem_Read+0x136>
 80082d8:	00100002 	.word	0x00100002
 80082dc:	ffff0000 	.word	0xffff0000
 80082e0:	00010004 	.word	0x00010004

080082e4 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 80082e4:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80082e6:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80082ea:	2b20      	cmp	r3, #32
 80082ec:	b2dc      	uxtb	r4, r3
 80082ee:	d116      	bne.n	800831e <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 80082f0:	2324      	movs	r3, #36	@ 0x24
 80082f2:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80082f6:	6803      	ldr	r3, [r0, #0]
 80082f8:	681a      	ldr	r2, [r3, #0]
 80082fa:	f022 0201 	bic.w	r2, r2, #1
 80082fe:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8008300:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8008302:	f022 0210 	bic.w	r2, r2, #16
 8008306:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8008308:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800830a:	4311      	orrs	r1, r2
 800830c:	6259      	str	r1, [r3, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 800830e:	681a      	ldr	r2, [r3, #0]
 8008310:	f042 0201 	orr.w	r2, r2, #1
 8008314:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8008316:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 800831a:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 800831c:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 800831e:	2002      	movs	r0, #2
 8008320:	e7fc      	b.n	800831c <HAL_I2CEx_ConfigAnalogFilter+0x38>

08008322 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8008322:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8008324:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8008328:	2b20      	cmp	r3, #32
 800832a:	b2dc      	uxtb	r4, r3
 800832c:	d116      	bne.n	800835c <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800832e:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8008330:	2324      	movs	r3, #36	@ 0x24
 8008332:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8008336:	6813      	ldr	r3, [r2, #0]
 8008338:	f023 0301 	bic.w	r3, r3, #1
 800833c:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 800833e:	6a55      	ldr	r5, [r2, #36]	@ 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8008340:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 8008344:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8008346:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8008348:	b29b      	uxth	r3, r3
 800834a:	6253      	str	r3, [r2, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 800834c:	6813      	ldr	r3, [r2, #0]
 800834e:	f043 0301 	orr.w	r3, r3, #1
 8008352:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8008354:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 8008358:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 800835a:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 800835c:	2002      	movs	r0, #2
 800835e:	e7fc      	b.n	800835a <HAL_I2CEx_ConfigDigitalFilter+0x38>

08008360 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8008360:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8008362:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8008366:	01d2      	lsls	r2, r2, #7
 8008368:	3284      	adds	r2, #132	@ 0x84
 800836a:	1883      	adds	r3, r0, r2
{
 800836c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8008370:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8008372:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8008374:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8008376:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800837a:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 800837e:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8008380:	68c5      	ldr	r5, [r0, #12]
 8008382:	f10c 0701 	add.w	r7, ip, #1
 8008386:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800838a:	f3c6 460b 	ubfx	r6, r6, #16, #12
 800838e:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8008390:	443d      	add	r5, r7
 8008392:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8008396:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8008398:	68c6      	ldr	r6, [r0, #12]
 800839a:	68cd      	ldr	r5, [r1, #12]
 800839c:	f3c6 060a 	ubfx	r6, r6, #0, #11
 80083a0:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 80083a2:	689d      	ldr	r5, [r3, #8]
 80083a4:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 80083a8:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 80083aa:	68c7      	ldr	r7, [r0, #12]
 80083ac:	688d      	ldr	r5, [r1, #8]
 80083ae:	f3c7 070a 	ubfx	r7, r7, #0, #11
 80083b2:	3501      	adds	r5, #1
 80083b4:	443d      	add	r5, r7
 80083b6:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 80083ba:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80083bc:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80083be:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80083c0:	f025 0507 	bic.w	r5, r5, #7
 80083c4:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80083c6:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80083ca:	611e      	str	r6, [r3, #16]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80083cc:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80083d0:	699d      	ldr	r5, [r3, #24]
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80083d2:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80083d6:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 80083da:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 80083de:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 80083e2:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 80083e6:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 80083ea:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80083ec:	695d      	ldr	r5, [r3, #20]
 80083ee:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 80083f2:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80083f4:	694d      	ldr	r5, [r1, #20]
 80083f6:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80083f8:	69dd      	ldr	r5, [r3, #28]
 80083fa:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 80083fe:	f025 0507 	bic.w	r5, r5, #7
 8008402:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8008404:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8008408:	433d      	orrs	r5, r7
 800840a:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800840c:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800840e:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8008410:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8008414:	2e07      	cmp	r6, #7
 8008416:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8008418:	bf9c      	itt	ls
 800841a:	4d0e      	ldrls	r5, [pc, #56]	@ (8008454 <LTDC_SetConfig+0xf4>)
 800841c:	5dae      	ldrbls	r6, [r5, r6]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800841e:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8008420:	f005 25e0 	and.w	r5, r5, #3758153728	@ 0xe000e000
 8008424:	62dd      	str	r5, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8008426:	bf88      	it	hi
 8008428:	2601      	movhi	r6, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800842a:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800842c:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800842e:	eba4 040c 	sub.w	r4, r4, ip
 8008432:	4374      	muls	r4, r6
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8008434:	4375      	muls	r5, r6
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8008436:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8008438:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 800843c:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800843e:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 8008440:	f36f 040a 	bfc	r4, #0, #11
 8008444:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8008446:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8008448:	5883      	ldr	r3, [r0, r2]
 800844a:	f043 0301 	orr.w	r3, r3, #1
 800844e:	5083      	str	r3, [r0, r2]
}
 8008450:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008454:	08028114 	.word	0x08028114

08008458 <HAL_LTDC_Init>:
{
 8008458:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800845a:	4604      	mov	r4, r0
 800845c:	2800      	cmp	r0, #0
 800845e:	d063      	beq.n	8008528 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8008460:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8008464:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8008468:	b91b      	cbnz	r3, 8008472 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800846a:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 800846e:	f7f8 ff4f 	bl	8001310 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8008472:	2302      	movs	r3, #2
 8008474:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8008478:	6823      	ldr	r3, [r4, #0]
 800847a:	699a      	ldr	r2, [r3, #24]
 800847c:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8008480:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8008482:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8008486:	4302      	orrs	r2, r0
 8008488:	68e0      	ldr	r0, [r4, #12]
 800848a:	6999      	ldr	r1, [r3, #24]
 800848c:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800848e:	6920      	ldr	r0, [r4, #16]
 8008490:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8008492:	430a      	orrs	r2, r1
 8008494:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8008496:	689a      	ldr	r2, [r3, #8]
 8008498:	4924      	ldr	r1, [pc, #144]	@ (800852c <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800849a:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800849c:	400a      	ands	r2, r1
 800849e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80084a0:	689a      	ldr	r2, [r3, #8]
 80084a2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80084a6:	69a0      	ldr	r0, [r4, #24]
 80084a8:	4302      	orrs	r2, r0
 80084aa:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80084ac:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 80084ae:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80084b0:	400a      	ands	r2, r1
 80084b2:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80084b4:	68da      	ldr	r2, [r3, #12]
 80084b6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80084ba:	6a20      	ldr	r0, [r4, #32]
 80084bc:	4302      	orrs	r2, r0
 80084be:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80084c0:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80084c2:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80084c4:	400a      	ands	r2, r1
 80084c6:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80084c8:	691a      	ldr	r2, [r3, #16]
 80084ca:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80084ce:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 80084d0:	4302      	orrs	r2, r0
 80084d2:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80084d4:	695a      	ldr	r2, [r3, #20]
 80084d6:	400a      	ands	r2, r1
 80084d8:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80084da:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80084dc:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80084de:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80084e2:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80084e4:	430a      	orrs	r2, r1
 80084e6:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80084e8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80084ea:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80084ee:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80084f2:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 80084f6:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80084f8:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 80084fa:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 80084fe:	432a      	orrs	r2, r5
 8008500:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8008504:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8008508:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800850a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800850c:	f042 0206 	orr.w	r2, r2, #6
 8008510:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8008512:	699a      	ldr	r2, [r3, #24]
 8008514:	f042 0201 	orr.w	r2, r2, #1
 8008518:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800851a:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800851c:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800851e:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8008522:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 8008526:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8008528:	2001      	movs	r0, #1
 800852a:	e7fc      	b.n	8008526 <HAL_LTDC_Init+0xce>
 800852c:	f000f800 	.word	0xf000f800

08008530 <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 8008530:	4770      	bx	lr

08008532 <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 8008532:	4770      	bx	lr

08008534 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8008534:	6803      	ldr	r3, [r0, #0]
{
 8008536:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8008538:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800853a:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800853c:	0772      	lsls	r2, r6, #29
{
 800853e:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8008540:	d514      	bpl.n	800856c <HAL_LTDC_IRQHandler+0x38>
 8008542:	0769      	lsls	r1, r5, #29
 8008544:	d512      	bpl.n	800856c <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8008546:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8008548:	f022 0204 	bic.w	r2, r2, #4
 800854c:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800854e:	2204      	movs	r2, #4
 8008550:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8008552:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8008556:	f043 0301 	orr.w	r3, r3, #1
 800855a:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 800855e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8008560:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8008564:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8008568:	f7ff ffe2 	bl	8008530 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800856c:	07b2      	lsls	r2, r6, #30
 800856e:	d516      	bpl.n	800859e <HAL_LTDC_IRQHandler+0x6a>
 8008570:	07ab      	lsls	r3, r5, #30
 8008572:	d514      	bpl.n	800859e <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8008574:	6823      	ldr	r3, [r4, #0]
 8008576:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8008578:	f022 0202 	bic.w	r2, r2, #2
 800857c:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800857e:	2202      	movs	r2, #2
 8008580:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8008582:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 8008586:	4313      	orrs	r3, r2
 8008588:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800858c:	2304      	movs	r3, #4
 800858e:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8008592:	2300      	movs	r3, #0
 8008594:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8008598:	4620      	mov	r0, r4
 800859a:	f7ff ffc9 	bl	8008530 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800859e:	07f0      	lsls	r0, r6, #31
 80085a0:	d510      	bpl.n	80085c4 <HAL_LTDC_IRQHandler+0x90>
 80085a2:	07e9      	lsls	r1, r5, #31
 80085a4:	d50e      	bpl.n	80085c4 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80085a6:	6823      	ldr	r3, [r4, #0]
 80085a8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80085aa:	f022 0201 	bic.w	r2, r2, #1
 80085ae:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80085b0:	2201      	movs	r2, #1
 80085b2:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 80085b4:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80085b6:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80085ba:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80085be:	4620      	mov	r0, r4
 80085c0:	f7fa f896 	bl	80026f0 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80085c4:	0732      	lsls	r2, r6, #28
 80085c6:	d511      	bpl.n	80085ec <HAL_LTDC_IRQHandler+0xb8>
 80085c8:	072b      	lsls	r3, r5, #28
 80085ca:	d50f      	bpl.n	80085ec <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80085cc:	6823      	ldr	r3, [r4, #0]
 80085ce:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80085d0:	f022 0208 	bic.w	r2, r2, #8
 80085d4:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80085d6:	2208      	movs	r2, #8
 80085d8:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80085da:	2301      	movs	r3, #1
 80085dc:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80085e0:	2300      	movs	r3, #0
 80085e2:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80085e6:	4620      	mov	r0, r4
 80085e8:	f7ff ffa3 	bl	8008532 <HAL_LTDC_ReloadEventCallback>
}
 80085ec:	bd70      	pop	{r4, r5, r6, pc}

080085ee <HAL_LTDC_ConfigLayer>:
{
 80085ee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80085f2:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 80085f6:	2b01      	cmp	r3, #1
{
 80085f8:	4606      	mov	r6, r0
 80085fa:	460f      	mov	r7, r1
 80085fc:	4694      	mov	ip, r2
 80085fe:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8008602:	d01f      	beq.n	8008644 <HAL_LTDC_ConfigLayer+0x56>
 8008604:	f04f 0801 	mov.w	r8, #1
 8008608:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800860c:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8008610:	2434      	movs	r4, #52	@ 0x34
 8008612:	460d      	mov	r5, r1
 8008614:	fb04 6402 	mla	r4, r4, r2, r6
 8008618:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800861a:	3438      	adds	r4, #56	@ 0x38
 800861c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800861e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008620:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008622:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008624:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008626:	682b      	ldr	r3, [r5, #0]
 8008628:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800862a:	4630      	mov	r0, r6
 800862c:	4662      	mov	r2, ip
 800862e:	4639      	mov	r1, r7
 8008630:	f7ff fe96 	bl	8008360 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8008634:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8008636:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8008638:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800863c:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8008640:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 8008644:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008648 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8008648:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
 800864c:	2a01      	cmp	r2, #1
{
 800864e:	4603      	mov	r3, r0
 8008650:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8008654:	d012      	beq.n	800867c <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8008656:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8008658:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800865c:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 800865e:	f020 0001 	bic.w	r0, r0, #1
 8008662:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8008664:	4806      	ldr	r0, [pc, #24]	@ (8008680 <HAL_LTDC_ProgramLineEvent+0x38>)
 8008666:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8008668:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 800866a:	f041 0101 	orr.w	r1, r1, #1
 800866e:	6351      	str	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 8008670:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8008672:	2201      	movs	r2, #1
 8008674:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8008678:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
}
 800867c:	4770      	bx	lr
 800867e:	bf00      	nop
 8008680:	40016800 	.word	0x40016800

08008684 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8008684:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 8008686:	2300      	movs	r3, #0
 8008688:	9301      	str	r3, [sp, #4]
 800868a:	4b18      	ldr	r3, [pc, #96]	@ (80086ec <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800868c:	4d18      	ldr	r5, [pc, #96]	@ (80086f0 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 800868e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8008690:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8008694:	641a      	str	r2, [r3, #64]	@ 0x40
 8008696:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008698:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800869c:	9301      	str	r3, [sp, #4]
 800869e:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 80086a0:	4b14      	ldr	r3, [pc, #80]	@ (80086f4 <HAL_PWREx_EnableOverDrive+0x70>)
 80086a2:	2201      	movs	r2, #1
 80086a4:	641a      	str	r2, [r3, #64]	@ 0x40
  tickstart = HAL_GetTick();
 80086a6:	f7fe ff67 	bl	8007578 <HAL_GetTick>
 80086aa:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80086ac:	686b      	ldr	r3, [r5, #4]
 80086ae:	03da      	lsls	r2, r3, #15
 80086b0:	d50b      	bpl.n	80086ca <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80086b2:	4b10      	ldr	r3, [pc, #64]	@ (80086f4 <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80086b4:	4d0e      	ldr	r5, [pc, #56]	@ (80086f0 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80086b6:	2201      	movs	r2, #1
 80086b8:	645a      	str	r2, [r3, #68]	@ 0x44
  tickstart = HAL_GetTick();
 80086ba:	f7fe ff5d 	bl	8007578 <HAL_GetTick>
 80086be:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80086c0:	686b      	ldr	r3, [r5, #4]
 80086c2:	039b      	lsls	r3, r3, #14
 80086c4:	d50a      	bpl.n	80086dc <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 80086c6:	2000      	movs	r0, #0
 80086c8:	e006      	b.n	80086d8 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80086ca:	f7fe ff55 	bl	8007578 <HAL_GetTick>
 80086ce:	1b00      	subs	r0, r0, r4
 80086d0:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 80086d4:	d9ea      	bls.n	80086ac <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 80086d6:	2003      	movs	r0, #3
}
 80086d8:	b003      	add	sp, #12
 80086da:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80086dc:	f7fe ff4c 	bl	8007578 <HAL_GetTick>
 80086e0:	1b00      	subs	r0, r0, r4
 80086e2:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 80086e6:	d9eb      	bls.n	80086c0 <HAL_PWREx_EnableOverDrive+0x3c>
 80086e8:	e7f5      	b.n	80086d6 <HAL_PWREx_EnableOverDrive+0x52>
 80086ea:	bf00      	nop
 80086ec:	40023800 	.word	0x40023800
 80086f0:	40007000 	.word	0x40007000
 80086f4:	420e0000 	.word	0x420e0000

080086f8 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80086f8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 80086fc:	4604      	mov	r4, r0
 80086fe:	b340      	cbz	r0, 8008752 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8008700:	6803      	ldr	r3, [r0, #0]
 8008702:	07de      	lsls	r6, r3, #31
 8008704:	d410      	bmi.n	8008728 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8008706:	6823      	ldr	r3, [r4, #0]
 8008708:	079d      	lsls	r5, r3, #30
 800870a:	d45b      	bmi.n	80087c4 <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800870c:	6823      	ldr	r3, [r4, #0]
 800870e:	0719      	lsls	r1, r3, #28
 8008710:	f100 809d 	bmi.w	800884e <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8008714:	6823      	ldr	r3, [r4, #0]
 8008716:	075a      	lsls	r2, r3, #29
 8008718:	f100 80bd 	bmi.w	8008896 <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800871c:	69a3      	ldr	r3, [r4, #24]
 800871e:	2b00      	cmp	r3, #0
 8008720:	f040 8124 	bne.w	800896c <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8008724:	2000      	movs	r0, #0
 8008726:	e02c      	b.n	8008782 <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 8008728:	4b8d      	ldr	r3, [pc, #564]	@ (8008960 <HAL_RCC_OscConfig+0x268>)
 800872a:	689a      	ldr	r2, [r3, #8]
 800872c:	f002 020c 	and.w	r2, r2, #12
 8008730:	2a04      	cmp	r2, #4
 8008732:	d007      	beq.n	8008744 <HAL_RCC_OscConfig+0x4c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8008734:	689a      	ldr	r2, [r3, #8]
 8008736:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 800873a:	2a08      	cmp	r2, #8
 800873c:	d10b      	bne.n	8008756 <HAL_RCC_OscConfig+0x5e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800873e:	685b      	ldr	r3, [r3, #4]
 8008740:	0259      	lsls	r1, r3, #9
 8008742:	d508      	bpl.n	8008756 <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8008744:	4b86      	ldr	r3, [pc, #536]	@ (8008960 <HAL_RCC_OscConfig+0x268>)
 8008746:	681b      	ldr	r3, [r3, #0]
 8008748:	039a      	lsls	r2, r3, #14
 800874a:	d5dc      	bpl.n	8008706 <HAL_RCC_OscConfig+0xe>
 800874c:	6863      	ldr	r3, [r4, #4]
 800874e:	2b00      	cmp	r3, #0
 8008750:	d1d9      	bne.n	8008706 <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 8008752:	2001      	movs	r0, #1
 8008754:	e015      	b.n	8008782 <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8008756:	6863      	ldr	r3, [r4, #4]
 8008758:	4d81      	ldr	r5, [pc, #516]	@ (8008960 <HAL_RCC_OscConfig+0x268>)
 800875a:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800875e:	d113      	bne.n	8008788 <HAL_RCC_OscConfig+0x90>
 8008760:	682b      	ldr	r3, [r5, #0]
 8008762:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8008766:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8008768:	f7fe ff06 	bl	8007578 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800876c:	4e7c      	ldr	r6, [pc, #496]	@ (8008960 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 800876e:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8008770:	6833      	ldr	r3, [r6, #0]
 8008772:	039b      	lsls	r3, r3, #14
 8008774:	d4c7      	bmi.n	8008706 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8008776:	f7fe feff 	bl	8007578 <HAL_GetTick>
 800877a:	1b40      	subs	r0, r0, r5
 800877c:	2864      	cmp	r0, #100	@ 0x64
 800877e:	d9f7      	bls.n	8008770 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 8008780:	2003      	movs	r0, #3
}
 8008782:	b002      	add	sp, #8
 8008784:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8008788:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800878c:	d104      	bne.n	8008798 <HAL_RCC_OscConfig+0xa0>
 800878e:	682b      	ldr	r3, [r5, #0]
 8008790:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8008794:	602b      	str	r3, [r5, #0]
 8008796:	e7e3      	b.n	8008760 <HAL_RCC_OscConfig+0x68>
 8008798:	682a      	ldr	r2, [r5, #0]
 800879a:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 800879e:	602a      	str	r2, [r5, #0]
 80087a0:	682a      	ldr	r2, [r5, #0]
 80087a2:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 80087a6:	602a      	str	r2, [r5, #0]
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80087a8:	2b00      	cmp	r3, #0
 80087aa:	d1dd      	bne.n	8008768 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 80087ac:	f7fe fee4 	bl	8007578 <HAL_GetTick>
 80087b0:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80087b2:	682b      	ldr	r3, [r5, #0]
 80087b4:	039f      	lsls	r7, r3, #14
 80087b6:	d5a6      	bpl.n	8008706 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80087b8:	f7fe fede 	bl	8007578 <HAL_GetTick>
 80087bc:	1b80      	subs	r0, r0, r6
 80087be:	2864      	cmp	r0, #100	@ 0x64
 80087c0:	d9f7      	bls.n	80087b2 <HAL_RCC_OscConfig+0xba>
 80087c2:	e7dd      	b.n	8008780 <HAL_RCC_OscConfig+0x88>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 80087c4:	4b66      	ldr	r3, [pc, #408]	@ (8008960 <HAL_RCC_OscConfig+0x268>)
 80087c6:	689a      	ldr	r2, [r3, #8]
 80087c8:	f012 0f0c 	tst.w	r2, #12
 80087cc:	d007      	beq.n	80087de <HAL_RCC_OscConfig+0xe6>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80087ce:	689a      	ldr	r2, [r3, #8]
 80087d0:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 80087d4:	2a08      	cmp	r2, #8
 80087d6:	d111      	bne.n	80087fc <HAL_RCC_OscConfig+0x104>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80087d8:	685b      	ldr	r3, [r3, #4]
 80087da:	025d      	lsls	r5, r3, #9
 80087dc:	d40e      	bmi.n	80087fc <HAL_RCC_OscConfig+0x104>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80087de:	4a60      	ldr	r2, [pc, #384]	@ (8008960 <HAL_RCC_OscConfig+0x268>)
 80087e0:	6813      	ldr	r3, [r2, #0]
 80087e2:	0799      	lsls	r1, r3, #30
 80087e4:	d502      	bpl.n	80087ec <HAL_RCC_OscConfig+0xf4>
 80087e6:	68e3      	ldr	r3, [r4, #12]
 80087e8:	2b01      	cmp	r3, #1
 80087ea:	d1b2      	bne.n	8008752 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80087ec:	6813      	ldr	r3, [r2, #0]
 80087ee:	6921      	ldr	r1, [r4, #16]
 80087f0:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 80087f4:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80087f8:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80087fa:	e787      	b.n	800870c <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 80087fc:	68e2      	ldr	r2, [r4, #12]
 80087fe:	4b59      	ldr	r3, [pc, #356]	@ (8008964 <HAL_RCC_OscConfig+0x26c>)
 8008800:	b1b2      	cbz	r2, 8008830 <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 8008802:	2201      	movs	r2, #1
 8008804:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8008806:	f7fe feb7 	bl	8007578 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800880a:	4d55      	ldr	r5, [pc, #340]	@ (8008960 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 800880c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800880e:	682b      	ldr	r3, [r5, #0]
 8008810:	079b      	lsls	r3, r3, #30
 8008812:	d507      	bpl.n	8008824 <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8008814:	682b      	ldr	r3, [r5, #0]
 8008816:	6922      	ldr	r2, [r4, #16]
 8008818:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800881c:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8008820:	602b      	str	r3, [r5, #0]
 8008822:	e773      	b.n	800870c <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8008824:	f7fe fea8 	bl	8007578 <HAL_GetTick>
 8008828:	1b80      	subs	r0, r0, r6
 800882a:	2802      	cmp	r0, #2
 800882c:	d9ef      	bls.n	800880e <HAL_RCC_OscConfig+0x116>
 800882e:	e7a7      	b.n	8008780 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 8008830:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8008832:	f7fe fea1 	bl	8007578 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8008836:	4e4a      	ldr	r6, [pc, #296]	@ (8008960 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8008838:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800883a:	6833      	ldr	r3, [r6, #0]
 800883c:	079f      	lsls	r7, r3, #30
 800883e:	f57f af65 	bpl.w	800870c <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8008842:	f7fe fe99 	bl	8007578 <HAL_GetTick>
 8008846:	1b40      	subs	r0, r0, r5
 8008848:	2802      	cmp	r0, #2
 800884a:	d9f6      	bls.n	800883a <HAL_RCC_OscConfig+0x142>
 800884c:	e798      	b.n	8008780 <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 800884e:	6962      	ldr	r2, [r4, #20]
 8008850:	4b44      	ldr	r3, [pc, #272]	@ (8008964 <HAL_RCC_OscConfig+0x26c>)
 8008852:	b182      	cbz	r2, 8008876 <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 8008854:	2201      	movs	r2, #1
 8008856:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 800885a:	f7fe fe8d 	bl	8007578 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800885e:	4e40      	ldr	r6, [pc, #256]	@ (8008960 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8008860:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8008862:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8008864:	079b      	lsls	r3, r3, #30
 8008866:	f53f af55 	bmi.w	8008714 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800886a:	f7fe fe85 	bl	8007578 <HAL_GetTick>
 800886e:	1b40      	subs	r0, r0, r5
 8008870:	2802      	cmp	r0, #2
 8008872:	d9f6      	bls.n	8008862 <HAL_RCC_OscConfig+0x16a>
 8008874:	e784      	b.n	8008780 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 8008876:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 800887a:	f7fe fe7d 	bl	8007578 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800887e:	4e38      	ldr	r6, [pc, #224]	@ (8008960 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8008880:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8008882:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8008884:	079f      	lsls	r7, r3, #30
 8008886:	f57f af45 	bpl.w	8008714 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800888a:	f7fe fe75 	bl	8007578 <HAL_GetTick>
 800888e:	1b40      	subs	r0, r0, r5
 8008890:	2802      	cmp	r0, #2
 8008892:	d9f6      	bls.n	8008882 <HAL_RCC_OscConfig+0x18a>
 8008894:	e774      	b.n	8008780 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8008896:	4b32      	ldr	r3, [pc, #200]	@ (8008960 <HAL_RCC_OscConfig+0x268>)
 8008898:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800889a:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 800889e:	d128      	bne.n	80088f2 <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 80088a0:	9201      	str	r2, [sp, #4]
 80088a2:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80088a4:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80088a8:	641a      	str	r2, [r3, #64]	@ 0x40
 80088aa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80088ac:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80088b0:	9301      	str	r3, [sp, #4]
 80088b2:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80088b4:	2701      	movs	r7, #1
    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80088b6:	4d2c      	ldr	r5, [pc, #176]	@ (8008968 <HAL_RCC_OscConfig+0x270>)
 80088b8:	682b      	ldr	r3, [r5, #0]
 80088ba:	05d8      	lsls	r0, r3, #23
 80088bc:	d51b      	bpl.n	80088f6 <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80088be:	68a3      	ldr	r3, [r4, #8]
 80088c0:	4d27      	ldr	r5, [pc, #156]	@ (8008960 <HAL_RCC_OscConfig+0x268>)
 80088c2:	2b01      	cmp	r3, #1
 80088c4:	d127      	bne.n	8008916 <HAL_RCC_OscConfig+0x21e>
 80088c6:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80088c8:	f043 0301 	orr.w	r3, r3, #1
 80088cc:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 80088ce:	f7fe fe53 	bl	8007578 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80088d2:	4e23      	ldr	r6, [pc, #140]	@ (8008960 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 80088d4:	4605      	mov	r5, r0
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80088d6:	f241 3888 	movw	r8, #5000	@ 0x1388
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80088da:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 80088dc:	079a      	lsls	r2, r3, #30
 80088de:	d539      	bpl.n	8008954 <HAL_RCC_OscConfig+0x25c>
    if (pwrclkchanged == SET)
 80088e0:	2f00      	cmp	r7, #0
 80088e2:	f43f af1b 	beq.w	800871c <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 80088e6:	4a1e      	ldr	r2, [pc, #120]	@ (8008960 <HAL_RCC_OscConfig+0x268>)
 80088e8:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 80088ea:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80088ee:	6413      	str	r3, [r2, #64]	@ 0x40
 80088f0:	e714      	b.n	800871c <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 80088f2:	2700      	movs	r7, #0
 80088f4:	e7df      	b.n	80088b6 <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80088f6:	682b      	ldr	r3, [r5, #0]
 80088f8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80088fc:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80088fe:	f7fe fe3b 	bl	8007578 <HAL_GetTick>
 8008902:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8008904:	682b      	ldr	r3, [r5, #0]
 8008906:	05d9      	lsls	r1, r3, #23
 8008908:	d4d9      	bmi.n	80088be <HAL_RCC_OscConfig+0x1c6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800890a:	f7fe fe35 	bl	8007578 <HAL_GetTick>
 800890e:	1b80      	subs	r0, r0, r6
 8008910:	2802      	cmp	r0, #2
 8008912:	d9f7      	bls.n	8008904 <HAL_RCC_OscConfig+0x20c>
 8008914:	e734      	b.n	8008780 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8008916:	2b05      	cmp	r3, #5
 8008918:	d104      	bne.n	8008924 <HAL_RCC_OscConfig+0x22c>
 800891a:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800891c:	f043 0304 	orr.w	r3, r3, #4
 8008920:	672b      	str	r3, [r5, #112]	@ 0x70
 8008922:	e7d0      	b.n	80088c6 <HAL_RCC_OscConfig+0x1ce>
 8008924:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 8008926:	f022 0201 	bic.w	r2, r2, #1
 800892a:	672a      	str	r2, [r5, #112]	@ 0x70
 800892c:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 800892e:	f022 0204 	bic.w	r2, r2, #4
 8008932:	672a      	str	r2, [r5, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8008934:	2b00      	cmp	r3, #0
 8008936:	d1ca      	bne.n	80088ce <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 8008938:	f7fe fe1e 	bl	8007578 <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800893c:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8008940:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8008942:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8008944:	079b      	lsls	r3, r3, #30
 8008946:	d5cb      	bpl.n	80088e0 <HAL_RCC_OscConfig+0x1e8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8008948:	f7fe fe16 	bl	8007578 <HAL_GetTick>
 800894c:	1b80      	subs	r0, r0, r6
 800894e:	4540      	cmp	r0, r8
 8008950:	d9f7      	bls.n	8008942 <HAL_RCC_OscConfig+0x24a>
 8008952:	e715      	b.n	8008780 <HAL_RCC_OscConfig+0x88>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8008954:	f7fe fe10 	bl	8007578 <HAL_GetTick>
 8008958:	1b40      	subs	r0, r0, r5
 800895a:	4540      	cmp	r0, r8
 800895c:	d9bd      	bls.n	80088da <HAL_RCC_OscConfig+0x1e2>
 800895e:	e70f      	b.n	8008780 <HAL_RCC_OscConfig+0x88>
 8008960:	40023800 	.word	0x40023800
 8008964:	42470000 	.word	0x42470000
 8008968:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800896c:	4d37      	ldr	r5, [pc, #220]	@ (8008a4c <HAL_RCC_OscConfig+0x354>)
 800896e:	68aa      	ldr	r2, [r5, #8]
 8008970:	f002 020c 	and.w	r2, r2, #12
 8008974:	2a08      	cmp	r2, #8
 8008976:	d03e      	beq.n	80089f6 <HAL_RCC_OscConfig+0x2fe>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8008978:	2b02      	cmp	r3, #2
 800897a:	4b35      	ldr	r3, [pc, #212]	@ (8008a50 <HAL_RCC_OscConfig+0x358>)
 800897c:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 8008980:	661a      	str	r2, [r3, #96]	@ 0x60
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8008982:	d12b      	bne.n	80089dc <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 8008984:	f7fe fdf8 	bl	8007578 <HAL_GetTick>
 8008988:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800898a:	682b      	ldr	r3, [r5, #0]
 800898c:	0199      	lsls	r1, r3, #6
 800898e:	d41f      	bmi.n	80089d0 <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8008990:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8008994:	4313      	orrs	r3, r2
 8008996:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8008998:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800899c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800899e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80089a2:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80089a4:	0852      	lsrs	r2, r2, #1
 80089a6:	3a01      	subs	r2, #1
 80089a8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80089ac:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80089ae:	4b28      	ldr	r3, [pc, #160]	@ (8008a50 <HAL_RCC_OscConfig+0x358>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80089b0:	4d26      	ldr	r5, [pc, #152]	@ (8008a4c <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 80089b2:	2201      	movs	r2, #1
 80089b4:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 80089b6:	f7fe fddf 	bl	8007578 <HAL_GetTick>
 80089ba:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80089bc:	682b      	ldr	r3, [r5, #0]
 80089be:	019a      	lsls	r2, r3, #6
 80089c0:	f53f aeb0 	bmi.w	8008724 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80089c4:	f7fe fdd8 	bl	8007578 <HAL_GetTick>
 80089c8:	1b00      	subs	r0, r0, r4
 80089ca:	2802      	cmp	r0, #2
 80089cc:	d9f6      	bls.n	80089bc <HAL_RCC_OscConfig+0x2c4>
 80089ce:	e6d7      	b.n	8008780 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80089d0:	f7fe fdd2 	bl	8007578 <HAL_GetTick>
 80089d4:	1b80      	subs	r0, r0, r6
 80089d6:	2802      	cmp	r0, #2
 80089d8:	d9d7      	bls.n	800898a <HAL_RCC_OscConfig+0x292>
 80089da:	e6d1      	b.n	8008780 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 80089dc:	f7fe fdcc 	bl	8007578 <HAL_GetTick>
 80089e0:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80089e2:	682b      	ldr	r3, [r5, #0]
 80089e4:	019b      	lsls	r3, r3, #6
 80089e6:	f57f ae9d 	bpl.w	8008724 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80089ea:	f7fe fdc5 	bl	8007578 <HAL_GetTick>
 80089ee:	1b00      	subs	r0, r0, r4
 80089f0:	2802      	cmp	r0, #2
 80089f2:	d9f6      	bls.n	80089e2 <HAL_RCC_OscConfig+0x2ea>
 80089f4:	e6c4      	b.n	8008780 <HAL_RCC_OscConfig+0x88>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80089f6:	2b01      	cmp	r3, #1
 80089f8:	f43f aeab 	beq.w	8008752 <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 80089fc:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80089fe:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8008a00:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8008a04:	4291      	cmp	r1, r2
 8008a06:	f47f aea4 	bne.w	8008752 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8008a0a:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8008a0c:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8008a10:	428a      	cmp	r2, r1
 8008a12:	f47f ae9e 	bne.w	8008752 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8008a16:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8008a18:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 8008a1c:	401a      	ands	r2, r3
 8008a1e:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8008a22:	f47f ae96 	bne.w	8008752 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8008a26:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8008a28:	0852      	lsrs	r2, r2, #1
 8008a2a:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 8008a2e:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8008a30:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8008a34:	f47f ae8d 	bne.w	8008752 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8008a38:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8008a3a:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8008a3e:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 8008a42:	bf14      	ite	ne
 8008a44:	2001      	movne	r0, #1
 8008a46:	2000      	moveq	r0, #0
 8008a48:	e69b      	b.n	8008782 <HAL_RCC_OscConfig+0x8a>
 8008a4a:	bf00      	nop
 8008a4c:	40023800 	.word	0x40023800
 8008a50:	42470000 	.word	0x42470000

08008a54 <HAL_RCC_GetSysClockFreq>:
  uint32_t pllvco = 0U;
  uint32_t pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8008a54:	4913      	ldr	r1, [pc, #76]	@ (8008aa4 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8008a56:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8008a58:	688b      	ldr	r3, [r1, #8]
 8008a5a:	f003 030c 	and.w	r3, r3, #12
 8008a5e:	2b04      	cmp	r3, #4
 8008a60:	d01c      	beq.n	8008a9c <HAL_RCC_GetSysClockFreq+0x48>
 8008a62:	2b08      	cmp	r3, #8
 8008a64:	d11c      	bne.n	8008aa0 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8008a66:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8008a68:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008a6a:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8008a6c:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008a70:	bf14      	ite	ne
 8008a72:	480d      	ldrne	r0, [pc, #52]	@ (8008aa8 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008a74:	480d      	ldreq	r0, [pc, #52]	@ (8008aac <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008a76:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8008a7a:	bf18      	it	ne
 8008a7c:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8008a7e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008a82:	fba1 0100 	umull	r0, r1, r1, r0
 8008a86:	f7f7 fc53 	bl	8000330 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 8008a8a:	4b06      	ldr	r3, [pc, #24]	@ (8008aa4 <HAL_RCC_GetSysClockFreq+0x50>)
 8008a8c:	685b      	ldr	r3, [r3, #4]
 8008a8e:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8008a92:	3301      	adds	r3, #1
 8008a94:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 8008a96:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8008a9a:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8008a9c:	4802      	ldr	r0, [pc, #8]	@ (8008aa8 <HAL_RCC_GetSysClockFreq+0x54>)
 8008a9e:	e7fc      	b.n	8008a9a <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8008aa0:	4802      	ldr	r0, [pc, #8]	@ (8008aac <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8008aa2:	e7fa      	b.n	8008a9a <HAL_RCC_GetSysClockFreq+0x46>
 8008aa4:	40023800 	.word	0x40023800
 8008aa8:	007a1200 	.word	0x007a1200
 8008aac:	00f42400 	.word	0x00f42400

08008ab0 <HAL_RCC_ClockConfig>:
{
 8008ab0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008ab4:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 8008ab6:	4604      	mov	r4, r0
 8008ab8:	b910      	cbnz	r0, 8008ac0 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8008aba:	2001      	movs	r0, #1
}
 8008abc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8008ac0:	4b43      	ldr	r3, [pc, #268]	@ (8008bd0 <HAL_RCC_ClockConfig+0x120>)
 8008ac2:	681a      	ldr	r2, [r3, #0]
 8008ac4:	f002 020f 	and.w	r2, r2, #15
 8008ac8:	428a      	cmp	r2, r1
 8008aca:	d328      	bcc.n	8008b1e <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8008acc:	6821      	ldr	r1, [r4, #0]
 8008ace:	078f      	lsls	r7, r1, #30
 8008ad0:	d42d      	bmi.n	8008b2e <HAL_RCC_ClockConfig+0x7e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8008ad2:	07c8      	lsls	r0, r1, #31
 8008ad4:	d440      	bmi.n	8008b58 <HAL_RCC_ClockConfig+0xa8>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8008ad6:	4b3e      	ldr	r3, [pc, #248]	@ (8008bd0 <HAL_RCC_ClockConfig+0x120>)
 8008ad8:	681a      	ldr	r2, [r3, #0]
 8008ada:	f002 020f 	and.w	r2, r2, #15
 8008ade:	42aa      	cmp	r2, r5
 8008ae0:	d865      	bhi.n	8008bae <HAL_RCC_ClockConfig+0xfe>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8008ae2:	6822      	ldr	r2, [r4, #0]
 8008ae4:	0751      	lsls	r1, r2, #29
 8008ae6:	d46b      	bmi.n	8008bc0 <HAL_RCC_ClockConfig+0x110>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8008ae8:	0713      	lsls	r3, r2, #28
 8008aea:	d507      	bpl.n	8008afc <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8008aec:	4a39      	ldr	r2, [pc, #228]	@ (8008bd4 <HAL_RCC_ClockConfig+0x124>)
 8008aee:	6921      	ldr	r1, [r4, #16]
 8008af0:	6893      	ldr	r3, [r2, #8]
 8008af2:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 8008af6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8008afa:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8008afc:	f7ff ffaa 	bl	8008a54 <HAL_RCC_GetSysClockFreq>
 8008b00:	4b34      	ldr	r3, [pc, #208]	@ (8008bd4 <HAL_RCC_ClockConfig+0x124>)
 8008b02:	4a35      	ldr	r2, [pc, #212]	@ (8008bd8 <HAL_RCC_ClockConfig+0x128>)
 8008b04:	689b      	ldr	r3, [r3, #8]
 8008b06:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8008b0a:	5cd3      	ldrb	r3, [r2, r3]
 8008b0c:	40d8      	lsrs	r0, r3
 8008b0e:	4b33      	ldr	r3, [pc, #204]	@ (8008bdc <HAL_RCC_ClockConfig+0x12c>)
 8008b10:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 8008b12:	4b33      	ldr	r3, [pc, #204]	@ (8008be0 <HAL_RCC_ClockConfig+0x130>)
 8008b14:	6818      	ldr	r0, [r3, #0]
 8008b16:	f7f8 fd79 	bl	800160c <HAL_InitTick>
  return HAL_OK;
 8008b1a:	2000      	movs	r0, #0
 8008b1c:	e7ce      	b.n	8008abc <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8008b1e:	b2ca      	uxtb	r2, r1
 8008b20:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8008b22:	681b      	ldr	r3, [r3, #0]
 8008b24:	f003 030f 	and.w	r3, r3, #15
 8008b28:	428b      	cmp	r3, r1
 8008b2a:	d1c6      	bne.n	8008aba <HAL_RCC_ClockConfig+0xa>
 8008b2c:	e7ce      	b.n	8008acc <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8008b2e:	4b29      	ldr	r3, [pc, #164]	@ (8008bd4 <HAL_RCC_ClockConfig+0x124>)
 8008b30:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8008b34:	bf1e      	ittt	ne
 8008b36:	689a      	ldrne	r2, [r3, #8]
 8008b38:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 8008b3c:	609a      	strne	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8008b3e:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8008b40:	bf42      	ittt	mi
 8008b42:	689a      	ldrmi	r2, [r3, #8]
 8008b44:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 8008b48:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8008b4a:	689a      	ldr	r2, [r3, #8]
 8008b4c:	68a0      	ldr	r0, [r4, #8]
 8008b4e:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 8008b52:	4302      	orrs	r2, r0
 8008b54:	609a      	str	r2, [r3, #8]
 8008b56:	e7bc      	b.n	8008ad2 <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8008b58:	6862      	ldr	r2, [r4, #4]
 8008b5a:	4b1e      	ldr	r3, [pc, #120]	@ (8008bd4 <HAL_RCC_ClockConfig+0x124>)
 8008b5c:	2a01      	cmp	r2, #1
 8008b5e:	d11c      	bne.n	8008b9a <HAL_RCC_ClockConfig+0xea>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8008b60:	681b      	ldr	r3, [r3, #0]
 8008b62:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008b66:	d0a8      	beq.n	8008aba <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8008b68:	4e1a      	ldr	r6, [pc, #104]	@ (8008bd4 <HAL_RCC_ClockConfig+0x124>)
 8008b6a:	68b3      	ldr	r3, [r6, #8]
 8008b6c:	f023 0303 	bic.w	r3, r3, #3
 8008b70:	4313      	orrs	r3, r2
 8008b72:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8008b74:	f7fe fd00 	bl	8007578 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8008b78:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 8008b7c:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8008b7e:	68b3      	ldr	r3, [r6, #8]
 8008b80:	6862      	ldr	r2, [r4, #4]
 8008b82:	f003 030c 	and.w	r3, r3, #12
 8008b86:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8008b8a:	d0a4      	beq.n	8008ad6 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8008b8c:	f7fe fcf4 	bl	8007578 <HAL_GetTick>
 8008b90:	1bc0      	subs	r0, r0, r7
 8008b92:	4540      	cmp	r0, r8
 8008b94:	d9f3      	bls.n	8008b7e <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 8008b96:	2003      	movs	r0, #3
 8008b98:	e790      	b.n	8008abc <HAL_RCC_ClockConfig+0xc>
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8008b9a:	1e91      	subs	r1, r2, #2
 8008b9c:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8008b9e:	681b      	ldr	r3, [r3, #0]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8008ba0:	d802      	bhi.n	8008ba8 <HAL_RCC_ClockConfig+0xf8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8008ba2:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 8008ba6:	e7de      	b.n	8008b66 <HAL_RCC_ClockConfig+0xb6>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008ba8:	f013 0f02 	tst.w	r3, #2
 8008bac:	e7db      	b.n	8008b66 <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8008bae:	b2ea      	uxtb	r2, r5
 8008bb0:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8008bb2:	681b      	ldr	r3, [r3, #0]
 8008bb4:	f003 030f 	and.w	r3, r3, #15
 8008bb8:	42ab      	cmp	r3, r5
 8008bba:	f47f af7e 	bne.w	8008aba <HAL_RCC_ClockConfig+0xa>
 8008bbe:	e790      	b.n	8008ae2 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8008bc0:	4904      	ldr	r1, [pc, #16]	@ (8008bd4 <HAL_RCC_ClockConfig+0x124>)
 8008bc2:	68e0      	ldr	r0, [r4, #12]
 8008bc4:	688b      	ldr	r3, [r1, #8]
 8008bc6:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 8008bca:	4303      	orrs	r3, r0
 8008bcc:	608b      	str	r3, [r1, #8]
 8008bce:	e78b      	b.n	8008ae8 <HAL_RCC_ClockConfig+0x38>
 8008bd0:	40023c00 	.word	0x40023c00
 8008bd4:	40023800 	.word	0x40023800
 8008bd8:	08028104 	.word	0x08028104
 8008bdc:	20000074 	.word	0x20000074
 8008be0:	2000007c 	.word	0x2000007c

08008be4 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8008be4:	4b04      	ldr	r3, [pc, #16]	@ (8008bf8 <HAL_RCC_GetPCLK1Freq+0x14>)
 8008be6:	4a05      	ldr	r2, [pc, #20]	@ (8008bfc <HAL_RCC_GetPCLK1Freq+0x18>)
 8008be8:	689b      	ldr	r3, [r3, #8]
 8008bea:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8008bee:	5cd3      	ldrb	r3, [r2, r3]
 8008bf0:	4a03      	ldr	r2, [pc, #12]	@ (8008c00 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8008bf2:	6810      	ldr	r0, [r2, #0]
}
 8008bf4:	40d8      	lsrs	r0, r3
 8008bf6:	4770      	bx	lr
 8008bf8:	40023800 	.word	0x40023800
 8008bfc:	080280fc 	.word	0x080280fc
 8008c00:	20000074 	.word	0x20000074

08008c04 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8008c04:	230f      	movs	r3, #15
 8008c06:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8008c08:	4b0b      	ldr	r3, [pc, #44]	@ (8008c38 <HAL_RCC_GetClockConfig+0x34>)
 8008c0a:	689a      	ldr	r2, [r3, #8]
 8008c0c:	f002 0203 	and.w	r2, r2, #3
 8008c10:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8008c12:	689a      	ldr	r2, [r3, #8]
 8008c14:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 8008c18:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8008c1a:	689a      	ldr	r2, [r3, #8]
 8008c1c:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 8008c20:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8008c22:	689b      	ldr	r3, [r3, #8]
 8008c24:	08db      	lsrs	r3, r3, #3
 8008c26:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 8008c2a:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8008c2c:	4b03      	ldr	r3, [pc, #12]	@ (8008c3c <HAL_RCC_GetClockConfig+0x38>)
 8008c2e:	681b      	ldr	r3, [r3, #0]
 8008c30:	f003 030f 	and.w	r3, r3, #15
 8008c34:	600b      	str	r3, [r1, #0]
}
 8008c36:	4770      	bx	lr
 8008c38:	40023800 	.word	0x40023800
 8008c3c:	40023c00 	.word	0x40023c00

08008c40 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8008c40:	6803      	ldr	r3, [r0, #0]
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8008c42:	f013 0f43 	tst.w	r3, #67	@ 0x43
{
 8008c46:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008c48:	4604      	mov	r4, r0
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8008c4a:	f040 8088 	bne.w	8008d5e <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8008c4e:	6823      	ldr	r3, [r4, #0]
 8008c50:	f013 0f0c 	tst.w	r3, #12
 8008c54:	d045      	beq.n	8008ce2 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8008c56:	4b8c      	ldr	r3, [pc, #560]	@ (8008e88 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8008c58:	4d8c      	ldr	r5, [pc, #560]	@ (8008e8c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_DISABLE();
 8008c5a:	2200      	movs	r2, #0
 8008c5c:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 8008c5e:	f7fe fc8b 	bl	8007578 <HAL_GetTick>
 8008c62:	4606      	mov	r6, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8008c64:	682b      	ldr	r3, [r5, #0]
 8008c66:	0099      	lsls	r1, r3, #2
 8008c68:	f100 80cb 	bmi.w	8008e02 <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8008c6c:	6821      	ldr	r1, [r4, #0]
 8008c6e:	074a      	lsls	r2, r1, #29
 8008c70:	d515      	bpl.n	8008c9e <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8008c72:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8008c76:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8008c7a:	061b      	lsls	r3, r3, #24
 8008c7c:	f002 42e0 	and.w	r2, r2, #1879048192	@ 0x70000000
 8008c80:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8008c84:	4313      	orrs	r3, r2
 8008c86:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8008c8a:	f8d5 308c 	ldr.w	r3, [r5, #140]	@ 0x8c
 8008c8e:	6a22      	ldr	r2, [r4, #32]
 8008c90:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 8008c94:	3a01      	subs	r2, #1
 8008c96:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8008c9a:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8008c9e:	070b      	lsls	r3, r1, #28
 8008ca0:	d514      	bpl.n	8008ccc <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8008ca2:	4a7a      	ldr	r2, [pc, #488]	@ (8008e8c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8008ca4:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8008ca6:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8008caa:	6920      	ldr	r0, [r4, #16]
 8008cac:	071b      	lsls	r3, r3, #28
 8008cae:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 8008cb2:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8008cb6:	430b      	orrs	r3, r1
 8008cb8:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8008cbc:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 8008cc0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8008cc2:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8008cc6:	430b      	orrs	r3, r1
 8008cc8:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8008ccc:	4b6e      	ldr	r3, [pc, #440]	@ (8008e88 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8008cce:	4e6f      	ldr	r6, [pc, #444]	@ (8008e8c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_ENABLE();
 8008cd0:	2201      	movs	r2, #1
 8008cd2:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 8008cd4:	f7fe fc50 	bl	8007578 <HAL_GetTick>
 8008cd8:	4605      	mov	r5, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8008cda:	6833      	ldr	r3, [r6, #0]
 8008cdc:	009f      	lsls	r7, r3, #2
 8008cde:	f140 8097 	bpl.w	8008e10 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8008ce2:	6823      	ldr	r3, [r4, #0]
 8008ce4:	0698      	lsls	r0, r3, #26
 8008ce6:	d534      	bpl.n	8008d52 <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8008ce8:	2300      	movs	r3, #0
 8008cea:	9301      	str	r3, [sp, #4]
 8008cec:	4b67      	ldr	r3, [pc, #412]	@ (8008e8c <HAL_RCCEx_PeriphCLKConfig+0x24c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8008cee:	4d68      	ldr	r5, [pc, #416]	@ (8008e90 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8008cf0:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8008cf2:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8008cf6:	641a      	str	r2, [r3, #64]	@ 0x40
 8008cf8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008cfa:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8008cfe:	9301      	str	r3, [sp, #4]
 8008d00:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8008d02:	682b      	ldr	r3, [r5, #0]
 8008d04:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8008d08:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8008d0a:	f7fe fc35 	bl	8007578 <HAL_GetTick>
 8008d0e:	4606      	mov	r6, r0

    while ((PWR->CR & PWR_CR_DBP) == RESET)
 8008d10:	682b      	ldr	r3, [r5, #0]
 8008d12:	05d8      	lsls	r0, r3, #23
 8008d14:	f140 8083 	bpl.w	8008e1e <HAL_RCCEx_PeriphCLKConfig+0x1de>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8008d18:	4d5c      	ldr	r5, [pc, #368]	@ (8008e8c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8008d1a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8008d1c:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8008d1e:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 8008d22:	f040 8083 	bne.w	8008e2c <HAL_RCCEx_PeriphCLKConfig+0x1ec>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8008d26:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8008d28:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 8008d2c:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 8008d30:	4a56      	ldr	r2, [pc, #344]	@ (8008e8c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 8008d32:	f040 809e 	bne.w	8008e72 <HAL_RCCEx_PeriphCLKConfig+0x232>
 8008d36:	6891      	ldr	r1, [r2, #8]
 8008d38:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 8008d3c:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8008d40:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 8008d44:	4301      	orrs	r1, r0
 8008d46:	6091      	str	r1, [r2, #8]
 8008d48:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 8008d4a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008d4e:	430b      	orrs	r3, r1
 8008d50:	6713      	str	r3, [r2, #112]	@ 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8008d52:	6823      	ldr	r3, [r4, #0]
 8008d54:	06db      	lsls	r3, r3, #27
 8008d56:	f100 8090 	bmi.w	8008e7a <HAL_RCCEx_PeriphCLKConfig+0x23a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
 8008d5a:	2000      	movs	r0, #0
 8008d5c:	e04f      	b.n	8008dfe <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 8008d5e:	4b4a      	ldr	r3, [pc, #296]	@ (8008e88 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8008d60:	4e4a      	ldr	r6, [pc, #296]	@ (8008e8c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_DISABLE();
 8008d62:	2200      	movs	r2, #0
 8008d64:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8008d66:	f7fe fc07 	bl	8007578 <HAL_GetTick>
 8008d6a:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8008d6c:	6833      	ldr	r3, [r6, #0]
 8008d6e:	011f      	lsls	r7, r3, #4
 8008d70:	d43f      	bmi.n	8008df2 <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8008d72:	6821      	ldr	r1, [r4, #0]
 8008d74:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SR);
 8008d76:	bf41      	itttt	mi
 8008d78:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8008d7c:	071b      	lslmi	r3, r3, #28
 8008d7e:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8008d82:	f8c6 3084 	strmi.w	r3, [r6, #132]	@ 0x84
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8008d86:	078a      	lsls	r2, r1, #30
 8008d88:	d515      	bpl.n	8008db6 <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8008d8a:	4a40      	ldr	r2, [pc, #256]	@ (8008e8c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8008d8c:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8008d8e:	f8d2 0084 	ldr.w	r0, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8008d92:	6865      	ldr	r5, [r4, #4]
 8008d94:	061b      	lsls	r3, r3, #24
 8008d96:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8008d9a:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8008d9e:	4303      	orrs	r3, r0
 8008da0:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8008da4:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 8008da8:	69e3      	ldr	r3, [r4, #28]
 8008daa:	f020 001f 	bic.w	r0, r0, #31
 8008dae:	3b01      	subs	r3, #1
 8008db0:	4303      	orrs	r3, r0
 8008db2:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8008db6:	064b      	lsls	r3, r1, #25
 8008db8:	d50a      	bpl.n	8008dd0 <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ,
 8008dba:	68e3      	ldr	r3, [r4, #12]
 8008dbc:	6862      	ldr	r2, [r4, #4]
 8008dbe:	061b      	lsls	r3, r3, #24
 8008dc0:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8008dc4:	68a2      	ldr	r2, [r4, #8]
 8008dc6:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8008dca:	4a30      	ldr	r2, [pc, #192]	@ (8008e8c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 8008dcc:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8008dd0:	4b2d      	ldr	r3, [pc, #180]	@ (8008e88 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8008dd2:	4e2e      	ldr	r6, [pc, #184]	@ (8008e8c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_ENABLE();
 8008dd4:	2201      	movs	r2, #1
 8008dd6:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8008dd8:	f7fe fbce 	bl	8007578 <HAL_GetTick>
 8008ddc:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8008dde:	6833      	ldr	r3, [r6, #0]
 8008de0:	011f      	lsls	r7, r3, #4
 8008de2:	f53f af34 	bmi.w	8008c4e <HAL_RCCEx_PeriphCLKConfig+0xe>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8008de6:	f7fe fbc7 	bl	8007578 <HAL_GetTick>
 8008dea:	1b40      	subs	r0, r0, r5
 8008dec:	2802      	cmp	r0, #2
 8008dee:	d9f6      	bls.n	8008dde <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8008df0:	e004      	b.n	8008dfc <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8008df2:	f7fe fbc1 	bl	8007578 <HAL_GetTick>
 8008df6:	1b40      	subs	r0, r0, r5
 8008df8:	2802      	cmp	r0, #2
 8008dfa:	d9b7      	bls.n	8008d6c <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 8008dfc:	2003      	movs	r0, #3
}
 8008dfe:	b003      	add	sp, #12
 8008e00:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8008e02:	f7fe fbb9 	bl	8007578 <HAL_GetTick>
 8008e06:	1b80      	subs	r0, r0, r6
 8008e08:	2802      	cmp	r0, #2
 8008e0a:	f67f af2b 	bls.w	8008c64 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8008e0e:	e7f5      	b.n	8008dfc <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8008e10:	f7fe fbb2 	bl	8007578 <HAL_GetTick>
 8008e14:	1b40      	subs	r0, r0, r5
 8008e16:	2802      	cmp	r0, #2
 8008e18:	f67f af5f 	bls.w	8008cda <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8008e1c:	e7ee      	b.n	8008dfc <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8008e1e:	f7fe fbab 	bl	8007578 <HAL_GetTick>
 8008e22:	1b80      	subs	r0, r0, r6
 8008e24:	2802      	cmp	r0, #2
 8008e26:	f67f af73 	bls.w	8008d10 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8008e2a:	e7e7      	b.n	8008dfc <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8008e2c:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 8008e30:	4293      	cmp	r3, r2
 8008e32:	f43f af78 	beq.w	8008d26 <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8008e36:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8008e38:	4a13      	ldr	r2, [pc, #76]	@ (8008e88 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8008e3a:	2101      	movs	r1, #1
 8008e3c:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8008e40:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8008e44:	2100      	movs	r1, #0
 8008e46:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 8008e4a:	672b      	str	r3, [r5, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8008e4c:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8008e4e:	07d9      	lsls	r1, r3, #31
 8008e50:	f57f af69 	bpl.w	8008d26 <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 8008e54:	f7fe fb90 	bl	8007578 <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8008e58:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 8008e5c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8008e5e:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8008e60:	079a      	lsls	r2, r3, #30
 8008e62:	f53f af60 	bmi.w	8008d26 <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8008e66:	f7fe fb87 	bl	8007578 <HAL_GetTick>
 8008e6a:	1b80      	subs	r0, r0, r6
 8008e6c:	42b8      	cmp	r0, r7
 8008e6e:	d9f6      	bls.n	8008e5e <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8008e70:	e7c4      	b.n	8008dfc <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8008e72:	6891      	ldr	r1, [r2, #8]
 8008e74:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8008e78:	e765      	b.n	8008d46 <HAL_RCCEx_PeriphCLKConfig+0x106>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8008e7a:	4b06      	ldr	r3, [pc, #24]	@ (8008e94 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8008e7c:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 8008e80:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
 8008e84:	e769      	b.n	8008d5a <HAL_RCCEx_PeriphCLKConfig+0x11a>
 8008e86:	bf00      	nop
 8008e88:	42470000 	.word	0x42470000
 8008e8c:	40023800 	.word	0x40023800
 8008e90:	40007000 	.word	0x40007000
 8008e94:	42471000 	.word	0x42471000

08008e98 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8008e98:	b538      	push	{r3, r4, r5, lr}
 8008e9a:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8008e9c:	4604      	mov	r4, r0
 8008e9e:	b1c8      	cbz	r0, 8008ed4 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8008ea0:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8008ea4:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8008ea8:	b91b      	cbnz	r3, 8008eb2 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8008eaa:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8008eae:	f7f8 fb41 	bl	8001534 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008eb2:	2302      	movs	r3, #2
 8008eb4:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8008eb8:	1d21      	adds	r1, r4, #4
 8008eba:	6820      	ldr	r0, [r4, #0]
 8008ebc:	f000 fd0e 	bl	80098dc <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8008ec0:	6862      	ldr	r2, [r4, #4]
 8008ec2:	6820      	ldr	r0, [r4, #0]
 8008ec4:	4629      	mov	r1, r5
 8008ec6:	f000 fd3f 	bl	8009948 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8008eca:	2301      	movs	r3, #1
 8008ecc:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 8008ed0:	2000      	movs	r0, #0
}
 8008ed2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8008ed4:	2001      	movs	r0, #1
 8008ed6:	e7fc      	b.n	8008ed2 <HAL_SDRAM_Init+0x3a>

08008ed8 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8008ed8:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8008eda:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8008ede:	2b02      	cmp	r3, #2
{
 8008ee0:	4605      	mov	r5, r0
 8008ee2:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8008ee4:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 8008ee6:	d012      	beq.n	8008f0e <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8008ee8:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 8008eec:	2c01      	cmp	r4, #1
 8008eee:	d10f      	bne.n	8008f10 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008ef0:	2302      	movs	r3, #2
 8008ef2:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8008ef6:	6828      	ldr	r0, [r5, #0]
 8008ef8:	f000 fd5c 	bl	80099b4 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8008efc:	6833      	ldr	r3, [r6, #0]
 8008efe:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8008f00:	bf06      	itte	eq
 8008f02:	2305      	moveq	r3, #5
 8008f04:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 8008f08:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8008f0c:	2000      	movs	r0, #0
}
 8008f0e:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 8008f10:	2001      	movs	r0, #1
 8008f12:	e7fc      	b.n	8008f0e <HAL_SDRAM_SendCommand+0x36>

08008f14 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8008f14:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8008f16:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8008f1a:	2b02      	cmp	r3, #2
{
 8008f1c:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8008f1e:	b2d8      	uxtb	r0, r3
 8008f20:	d00d      	beq.n	8008f3e <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8008f22:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8008f26:	2b01      	cmp	r3, #1
 8008f28:	b2dd      	uxtb	r5, r3
 8008f2a:	d109      	bne.n	8008f40 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008f2c:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8008f2e:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008f30:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8008f34:	f000 fd62 	bl	80099fc <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8008f38:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8008f3c:	2000      	movs	r0, #0
}
 8008f3e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8008f40:	2001      	movs	r0, #1
 8008f42:	e7fc      	b.n	8008f3e <HAL_SDRAM_ProgramRefreshRate+0x2a>

08008f44 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8008f44:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8008f48:	461f      	mov	r7, r3
 8008f4a:	4689      	mov	r9, r1
 8008f4c:	4690      	mov	r8, r2
 8008f4e:	4604      	mov	r4, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8008f50:	f7fe fb12 	bl	8007578 <HAL_GetTick>
 8008f54:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8008f56:	443d      	add	r5, r7
 8008f58:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 8008f5a:	f7fe fb0d 	bl	8007578 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8008f5e:	4b26      	ldr	r3, [pc, #152]	@ (8008ff8 <SPI_WaitFlagStateUntilTimeout+0xb4>)
 8008f60:	681e      	ldr	r6, [r3, #0]
 8008f62:	f3c6 36cb 	ubfx	r6, r6, #15, #12
 8008f66:	436e      	muls	r6, r5
  tmp_tickstart = HAL_GetTick();
 8008f68:	4682      	mov	sl, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8008f6a:	9601      	str	r6, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8008f6c:	6822      	ldr	r2, [r4, #0]
 8008f6e:	6893      	ldr	r3, [r2, #8]
 8008f70:	ea39 0303 	bics.w	r3, r9, r3
 8008f74:	bf0c      	ite	eq
 8008f76:	2301      	moveq	r3, #1
 8008f78:	2300      	movne	r3, #0
 8008f7a:	4543      	cmp	r3, r8
 8008f7c:	d101      	bne.n	8008f82 <SPI_WaitFlagStateUntilTimeout+0x3e>
      }
      count--;
    }
  }

  return HAL_OK;
 8008f7e:	2000      	movs	r0, #0
 8008f80:	e02e      	b.n	8008fe0 <SPI_WaitFlagStateUntilTimeout+0x9c>
    if (Timeout != HAL_MAX_DELAY)
 8008f82:	1c7b      	adds	r3, r7, #1
 8008f84:	d0f3      	beq.n	8008f6e <SPI_WaitFlagStateUntilTimeout+0x2a>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8008f86:	f7fe faf7 	bl	8007578 <HAL_GetTick>
 8008f8a:	eba0 000a 	sub.w	r0, r0, sl
 8008f8e:	42a8      	cmp	r0, r5
 8008f90:	d329      	bcc.n	8008fe6 <SPI_WaitFlagStateUntilTimeout+0xa2>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8008f92:	6823      	ldr	r3, [r4, #0]
 8008f94:	685a      	ldr	r2, [r3, #4]
 8008f96:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8008f9a:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8008f9c:	6862      	ldr	r2, [r4, #4]
 8008f9e:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8008fa2:	d10a      	bne.n	8008fba <SPI_WaitFlagStateUntilTimeout+0x76>
 8008fa4:	68a2      	ldr	r2, [r4, #8]
 8008fa6:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 8008faa:	d002      	beq.n	8008fb2 <SPI_WaitFlagStateUntilTimeout+0x6e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8008fac:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8008fb0:	d103      	bne.n	8008fba <SPI_WaitFlagStateUntilTimeout+0x76>
          __HAL_SPI_DISABLE(hspi);
 8008fb2:	681a      	ldr	r2, [r3, #0]
 8008fb4:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8008fb8:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8008fba:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8008fbc:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 8008fc0:	d107      	bne.n	8008fd2 <SPI_WaitFlagStateUntilTimeout+0x8e>
          SPI_RESET_CRC(hspi);
 8008fc2:	681a      	ldr	r2, [r3, #0]
 8008fc4:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8008fc8:	601a      	str	r2, [r3, #0]
 8008fca:	681a      	ldr	r2, [r3, #0]
 8008fcc:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8008fd0:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8008fd2:	2301      	movs	r3, #1
 8008fd4:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 8008fd8:	2300      	movs	r3, #0
 8008fda:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 8008fde:	2003      	movs	r0, #3
}
 8008fe0:	b002      	add	sp, #8
 8008fe2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (count == 0U)
 8008fe6:	9a01      	ldr	r2, [sp, #4]
      count--;
 8008fe8:	9b01      	ldr	r3, [sp, #4]
      if (count == 0U)
 8008fea:	2a00      	cmp	r2, #0
      count--;
 8008fec:	f103 33ff 	add.w	r3, r3, #4294967295
 8008ff0:	9301      	str	r3, [sp, #4]
 8008ff2:	bf08      	it	eq
 8008ff4:	4615      	moveq	r5, r2
 8008ff6:	e7b9      	b.n	8008f6c <SPI_WaitFlagStateUntilTimeout+0x28>
 8008ff8:	20000074 	.word	0x20000074

08008ffc <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8008ffc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008ffe:	b085      	sub	sp, #20
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8009000:	460b      	mov	r3, r1
 8009002:	9200      	str	r2, [sp, #0]
{
 8009004:	460e      	mov	r6, r1
 8009006:	4617      	mov	r7, r2
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8009008:	2102      	movs	r1, #2
 800900a:	2201      	movs	r2, #1
{
 800900c:	4604      	mov	r4, r0
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800900e:	f7ff ff99 	bl	8008f44 <SPI_WaitFlagStateUntilTimeout>
 8009012:	4605      	mov	r5, r0
 8009014:	b128      	cbz	r0, 8009022 <SPI_EndRxTxTransaction+0x26>
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8009016:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8009018:	f043 0320 	orr.w	r3, r3, #32
 800901c:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_TIMEOUT;
 800901e:	2503      	movs	r5, #3
 8009020:	e015      	b.n	800904e <SPI_EndRxTxTransaction+0x52>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8009022:	4b12      	ldr	r3, [pc, #72]	@ (800906c <SPI_EndRxTxTransaction+0x70>)
 8009024:	6818      	ldr	r0, [r3, #0]
 8009026:	4b12      	ldr	r3, [pc, #72]	@ (8009070 <SPI_EndRxTxTransaction+0x74>)
 8009028:	fbb0 f0f3 	udiv	r0, r0, r3
 800902c:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8009030:	4358      	muls	r0, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8009032:	6863      	ldr	r3, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8009034:	9003      	str	r0, [sp, #12]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8009036:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800903a:	d10b      	bne.n	8009054 <SPI_EndRxTxTransaction+0x58>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800903c:	9700      	str	r7, [sp, #0]
 800903e:	4633      	mov	r3, r6
 8009040:	462a      	mov	r2, r5
 8009042:	2180      	movs	r1, #128	@ 0x80
 8009044:	4620      	mov	r0, r4
 8009046:	f7ff ff7d 	bl	8008f44 <SPI_WaitFlagStateUntilTimeout>
 800904a:	2800      	cmp	r0, #0
 800904c:	d1e3      	bne.n	8009016 <SPI_EndRxTxTransaction+0x1a>
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 800904e:	4628      	mov	r0, r5
 8009050:	b005      	add	sp, #20
 8009052:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 8009054:	9b03      	ldr	r3, [sp, #12]
 8009056:	2b00      	cmp	r3, #0
 8009058:	d0f9      	beq.n	800904e <SPI_EndRxTxTransaction+0x52>
      count--;
 800905a:	9b03      	ldr	r3, [sp, #12]
 800905c:	3b01      	subs	r3, #1
 800905e:	9303      	str	r3, [sp, #12]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8009060:	6823      	ldr	r3, [r4, #0]
 8009062:	689b      	ldr	r3, [r3, #8]
 8009064:	061b      	lsls	r3, r3, #24
 8009066:	d4f5      	bmi.n	8009054 <SPI_EndRxTxTransaction+0x58>
 8009068:	e7f1      	b.n	800904e <SPI_EndRxTxTransaction+0x52>
 800906a:	bf00      	nop
 800906c:	20000074 	.word	0x20000074
 8009070:	016e3600 	.word	0x016e3600

08009074 <SPI_EndRxTransaction>:
{
 8009074:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009076:	460b      	mov	r3, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8009078:	6841      	ldr	r1, [r0, #4]
 800907a:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
{
 800907e:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8009080:	d008      	beq.n	8009094 <SPI_EndRxTransaction+0x20>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8009082:	9200      	str	r2, [sp, #0]
 8009084:	2101      	movs	r1, #1
 8009086:	2200      	movs	r2, #0
 8009088:	f7ff ff5c 	bl	8008f44 <SPI_WaitFlagStateUntilTimeout>
 800908c:	b9d0      	cbnz	r0, 80090c4 <SPI_EndRxTransaction+0x50>
  return HAL_OK;
 800908e:	2000      	movs	r0, #0
}
 8009090:	b003      	add	sp, #12
 8009092:	bd30      	pop	{r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8009094:	6881      	ldr	r1, [r0, #8]
 8009096:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 800909a:	d002      	beq.n	80090a2 <SPI_EndRxTransaction+0x2e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800909c:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 80090a0:	d107      	bne.n	80090b2 <SPI_EndRxTransaction+0x3e>
    __HAL_SPI_DISABLE(hspi);
 80090a2:	6825      	ldr	r5, [r4, #0]
 80090a4:	6828      	ldr	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80090a6:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
    __HAL_SPI_DISABLE(hspi);
 80090aa:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 80090ae:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80090b0:	d004      	beq.n	80090bc <SPI_EndRxTransaction+0x48>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80090b2:	9200      	str	r2, [sp, #0]
 80090b4:	2180      	movs	r1, #128	@ 0x80
 80090b6:	2200      	movs	r2, #0
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80090b8:	4620      	mov	r0, r4
 80090ba:	e7e5      	b.n	8009088 <SPI_EndRxTransaction+0x14>
 80090bc:	9200      	str	r2, [sp, #0]
 80090be:	2101      	movs	r1, #1
 80090c0:	2200      	movs	r2, #0
 80090c2:	e7f9      	b.n	80090b8 <SPI_EndRxTransaction+0x44>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80090c4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80090c6:	f043 0320 	orr.w	r3, r3, #32
 80090ca:	6563      	str	r3, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 80090cc:	2003      	movs	r0, #3
 80090ce:	e7df      	b.n	8009090 <SPI_EndRxTransaction+0x1c>

080090d0 <HAL_SPI_Init>:
{
 80090d0:	b510      	push	{r4, lr}
  if (hspi == NULL)
 80090d2:	4604      	mov	r4, r0
 80090d4:	2800      	cmp	r0, #0
 80090d6:	d055      	beq.n	8009184 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 80090d8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80090da:	2b00      	cmp	r3, #0
 80090dc:	d14e      	bne.n	800917c <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 80090de:	6842      	ldr	r2, [r0, #4]
 80090e0:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 80090e4:	d000      	beq.n	80090e8 <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80090e6:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80090e8:	2300      	movs	r3, #0
 80090ea:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 80090ec:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 80090f0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80090f4:	b923      	cbnz	r3, 8009100 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 80090f6:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 80090fa:	4620      	mov	r0, r4
 80090fc:	f7f8 f9e4 	bl	80014c8 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8009100:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8009102:	68a0      	ldr	r0, [r4, #8]
 8009104:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8009106:	2302      	movs	r3, #2
 8009108:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 800910c:	680b      	ldr	r3, [r1, #0]
 800910e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8009112:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8009114:	6863      	ldr	r3, [r4, #4]
 8009116:	f400 4004 	and.w	r0, r0, #33792	@ 0x8400
 800911a:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 800911e:	4303      	orrs	r3, r0
 8009120:	68e0      	ldr	r0, [r4, #12]
 8009122:	f400 6000 	and.w	r0, r0, #2048	@ 0x800
 8009126:	4303      	orrs	r3, r0
 8009128:	6920      	ldr	r0, [r4, #16]
 800912a:	f000 0002 	and.w	r0, r0, #2
 800912e:	4303      	orrs	r3, r0
 8009130:	6960      	ldr	r0, [r4, #20]
 8009132:	f000 0001 	and.w	r0, r0, #1
 8009136:	4303      	orrs	r3, r0
 8009138:	f402 7000 	and.w	r0, r2, #512	@ 0x200
 800913c:	4303      	orrs	r3, r0
 800913e:	69e0      	ldr	r0, [r4, #28]
 8009140:	f000 0038 	and.w	r0, r0, #56	@ 0x38
 8009144:	4303      	orrs	r3, r0
 8009146:	6a20      	ldr	r0, [r4, #32]
 8009148:	f000 0080 	and.w	r0, r0, #128	@ 0x80
 800914c:	4303      	orrs	r3, r0
 800914e:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8009150:	f400 5000 	and.w	r0, r0, #8192	@ 0x2000
 8009154:	4303      	orrs	r3, r0
 8009156:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8009158:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800915a:	0c12      	lsrs	r2, r2, #16
 800915c:	f003 0310 	and.w	r3, r3, #16
 8009160:	f002 0204 	and.w	r2, r2, #4
 8009164:	431a      	orrs	r2, r3
 8009166:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8009168:	69cb      	ldr	r3, [r1, #28]
 800916a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800916e:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8009170:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8009172:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8009174:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8009176:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
}
 800917a:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800917c:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800917e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8009182:	e7b1      	b.n	80090e8 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 8009184:	2001      	movs	r0, #1
 8009186:	e7f8      	b.n	800917a <HAL_SPI_Init+0xaa>

08009188 <HAL_SPI_Transmit>:
{
 8009188:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800918c:	4604      	mov	r4, r0
 800918e:	461f      	mov	r7, r3
 8009190:	460d      	mov	r5, r1
 8009192:	4690      	mov	r8, r2
  tickstart = HAL_GetTick();
 8009194:	f7fe f9f0 	bl	8007578 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8009198:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 800919c:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800919e:	4681      	mov	r9, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 80091a0:	b2d8      	uxtb	r0, r3
 80091a2:	f040 809f 	bne.w	80092e4 <HAL_SPI_Transmit+0x15c>
  if ((pData == NULL) || (Size == 0U))
 80091a6:	2d00      	cmp	r5, #0
 80091a8:	d074      	beq.n	8009294 <HAL_SPI_Transmit+0x10c>
 80091aa:	f1b8 0f00 	cmp.w	r8, #0
 80091ae:	d071      	beq.n	8009294 <HAL_SPI_Transmit+0x10c>
  __HAL_LOCK(hspi);
 80091b0:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 80091b4:	2b01      	cmp	r3, #1
 80091b6:	f000 8095 	beq.w	80092e4 <HAL_SPI_Transmit+0x15c>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80091ba:	2303      	movs	r3, #3
 80091bc:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80091c0:	2300      	movs	r3, #0
 80091c2:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 80091c4:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->TxXferCount = Size;
 80091c8:	f8a4 8036 	strh.w	r8, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80091cc:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 80091ce:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 80091d0:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80091d2:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 80091d4:	6826      	ldr	r6, [r4, #0]
  __HAL_LOCK(hspi);
 80091d6:	f884 0050 	strb.w	r0, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80091da:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 80091de:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 80091e0:	f8a4 8034 	strh.w	r8, [r4, #52]	@ 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80091e4:	d107      	bne.n	80091f6 <HAL_SPI_Transmit+0x6e>
    __HAL_SPI_DISABLE(hspi);
 80091e6:	6833      	ldr	r3, [r6, #0]
 80091e8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80091ec:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 80091ee:	6833      	ldr	r3, [r6, #0]
 80091f0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80091f4:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80091f6:	6833      	ldr	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80091f8:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80091fa:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 80091fc:	bf5e      	ittt	pl
 80091fe:	6833      	ldrpl	r3, [r6, #0]
 8009200:	f043 0340 	orrpl.w	r3, r3, #64	@ 0x40
 8009204:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8009206:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800920a:	6863      	ldr	r3, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800920c:	d145      	bne.n	800929a <HAL_SPI_Transmit+0x112>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800920e:	b113      	cbz	r3, 8009216 <HAL_SPI_Transmit+0x8e>
 8009210:	f1b8 0f01 	cmp.w	r8, #1
 8009214:	d107      	bne.n	8009226 <HAL_SPI_Transmit+0x9e>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8009216:	f835 3b02 	ldrh.w	r3, [r5], #2
 800921a:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800921c:	6325      	str	r5, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800921e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8009220:	3b01      	subs	r3, #1
 8009222:	b29b      	uxth	r3, r3
 8009224:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 8009226:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8009228:	b29b      	uxth	r3, r3
 800922a:	b9d3      	cbnz	r3, 8009262 <HAL_SPI_Transmit+0xda>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800922c:	464a      	mov	r2, r9
 800922e:	4639      	mov	r1, r7
 8009230:	4620      	mov	r0, r4
 8009232:	f7ff fee3 	bl	8008ffc <SPI_EndRxTxTransaction>
 8009236:	2800      	cmp	r0, #0
 8009238:	d151      	bne.n	80092de <HAL_SPI_Transmit+0x156>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800923a:	68a3      	ldr	r3, [r4, #8]
 800923c:	b933      	cbnz	r3, 800924c <HAL_SPI_Transmit+0xc4>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800923e:	9301      	str	r3, [sp, #4]
 8009240:	6823      	ldr	r3, [r4, #0]
 8009242:	68da      	ldr	r2, [r3, #12]
 8009244:	9201      	str	r2, [sp, #4]
 8009246:	689b      	ldr	r3, [r3, #8]
 8009248:	9301      	str	r3, [sp, #4]
 800924a:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 800924c:	2301      	movs	r3, #1
 800924e:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8009252:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8009254:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8009256:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 8009258:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800925c:	bf18      	it	ne
 800925e:	2001      	movne	r0, #1
 8009260:	e018      	b.n	8009294 <HAL_SPI_Transmit+0x10c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8009262:	6822      	ldr	r2, [r4, #0]
 8009264:	6893      	ldr	r3, [r2, #8]
 8009266:	0798      	lsls	r0, r3, #30
 8009268:	d505      	bpl.n	8009276 <HAL_SPI_Transmit+0xee>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800926a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800926c:	f833 1b02 	ldrh.w	r1, [r3], #2
 8009270:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8009272:	6323      	str	r3, [r4, #48]	@ 0x30
 8009274:	e7d3      	b.n	800921e <HAL_SPI_Transmit+0x96>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8009276:	f7fe f97f 	bl	8007578 <HAL_GetTick>
 800927a:	eba0 0009 	sub.w	r0, r0, r9
 800927e:	42b8      	cmp	r0, r7
 8009280:	d3d1      	bcc.n	8009226 <HAL_SPI_Transmit+0x9e>
 8009282:	1c79      	adds	r1, r7, #1
 8009284:	d0cf      	beq.n	8009226 <HAL_SPI_Transmit+0x9e>
          hspi->State = HAL_SPI_STATE_READY;
 8009286:	2301      	movs	r3, #1
 8009288:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800928c:	2300      	movs	r3, #0
 800928e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 8009292:	2003      	movs	r0, #3
}
 8009294:	b003      	add	sp, #12
 8009296:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800929a:	b113      	cbz	r3, 80092a2 <HAL_SPI_Transmit+0x11a>
 800929c:	f1b8 0f01 	cmp.w	r8, #1
 80092a0:	d108      	bne.n	80092b4 <HAL_SPI_Transmit+0x12c>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80092a2:	782b      	ldrb	r3, [r5, #0]
 80092a4:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 80092a6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80092a8:	3301      	adds	r3, #1
 80092aa:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 80092ac:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80092ae:	3b01      	subs	r3, #1
 80092b0:	b29b      	uxth	r3, r3
 80092b2:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 80092b4:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80092b6:	b29b      	uxth	r3, r3
 80092b8:	2b00      	cmp	r3, #0
 80092ba:	d0b7      	beq.n	800922c <HAL_SPI_Transmit+0xa4>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80092bc:	6823      	ldr	r3, [r4, #0]
 80092be:	689a      	ldr	r2, [r3, #8]
 80092c0:	0792      	lsls	r2, r2, #30
 80092c2:	d503      	bpl.n	80092cc <HAL_SPI_Transmit+0x144>
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80092c4:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 80092c6:	7812      	ldrb	r2, [r2, #0]
 80092c8:	731a      	strb	r2, [r3, #12]
 80092ca:	e7ec      	b.n	80092a6 <HAL_SPI_Transmit+0x11e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80092cc:	f7fe f954 	bl	8007578 <HAL_GetTick>
 80092d0:	eba0 0009 	sub.w	r0, r0, r9
 80092d4:	42b8      	cmp	r0, r7
 80092d6:	d3ed      	bcc.n	80092b4 <HAL_SPI_Transmit+0x12c>
 80092d8:	1c7b      	adds	r3, r7, #1
 80092da:	d0eb      	beq.n	80092b4 <HAL_SPI_Transmit+0x12c>
 80092dc:	e7d3      	b.n	8009286 <HAL_SPI_Transmit+0xfe>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80092de:	2320      	movs	r3, #32
 80092e0:	6563      	str	r3, [r4, #84]	@ 0x54
 80092e2:	e7aa      	b.n	800923a <HAL_SPI_Transmit+0xb2>
    return HAL_BUSY;
 80092e4:	2002      	movs	r0, #2
 80092e6:	e7d5      	b.n	8009294 <HAL_SPI_Transmit+0x10c>

080092e8 <HAL_SPI_TransmitReceive>:
{
 80092e8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80092ec:	4604      	mov	r4, r0
 80092ee:	460d      	mov	r5, r1
 80092f0:	4691      	mov	r9, r2
 80092f2:	461e      	mov	r6, r3
 80092f4:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
  tickstart = HAL_GetTick();
 80092f8:	f7fe f93e 	bl	8007578 <HAL_GetTick>
  tmp_state           = hspi->State;
 80092fc:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 8009300:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8009302:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8009304:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 8009306:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8009308:	d00a      	beq.n	8009320 <HAL_SPI_TransmitReceive+0x38>
 800930a:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800930e:	f040 80e5 	bne.w	80094dc <HAL_SPI_TransmitReceive+0x1f4>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8009312:	68a3      	ldr	r3, [r4, #8]
 8009314:	2b00      	cmp	r3, #0
 8009316:	f040 80e1 	bne.w	80094dc <HAL_SPI_TransmitReceive+0x1f4>
 800931a:	2904      	cmp	r1, #4
 800931c:	f040 80de 	bne.w	80094dc <HAL_SPI_TransmitReceive+0x1f4>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8009320:	2d00      	cmp	r5, #0
 8009322:	d04b      	beq.n	80093bc <HAL_SPI_TransmitReceive+0xd4>
 8009324:	f1b9 0f00 	cmp.w	r9, #0
 8009328:	d048      	beq.n	80093bc <HAL_SPI_TransmitReceive+0xd4>
 800932a:	2e00      	cmp	r6, #0
 800932c:	d046      	beq.n	80093bc <HAL_SPI_TransmitReceive+0xd4>
  __HAL_LOCK(hspi);
 800932e:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8009332:	2b01      	cmp	r3, #1
 8009334:	f000 80d2 	beq.w	80094dc <HAL_SPI_TransmitReceive+0x1f4>
 8009338:	2301      	movs	r3, #1
 800933a:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800933e:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8009342:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8009346:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8009348:	bf1c      	itt	ne
 800934a:	2305      	movne	r3, #5
 800934c:	f884 3051 	strbne.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8009350:	2300      	movs	r3, #0
 8009352:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->TxISR       = NULL;
 8009354:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8009358:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800935a:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferCount = Size;
 800935c:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800935e:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8009360:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8009362:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8009364:	bf58      	it	pl
 8009366:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 8009368:	6325      	str	r5, [r4, #48]	@ 0x30
    __HAL_SPI_ENABLE(hspi);
 800936a:	bf58      	it	pl
 800936c:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
  hspi->TxXferSize  = Size;
 8009370:	86a6      	strh	r6, [r4, #52]	@ 0x34
    __HAL_SPI_ENABLE(hspi);
 8009372:	bf58      	it	pl
 8009374:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8009376:	68e1      	ldr	r1, [r4, #12]
 8009378:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 800937c:	d155      	bne.n	800942a <HAL_SPI_TransmitReceive+0x142>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800937e:	b10a      	cbz	r2, 8009384 <HAL_SPI_TransmitReceive+0x9c>
 8009380:	2e01      	cmp	r6, #1
 8009382:	d107      	bne.n	8009394 <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8009384:	f835 2b02 	ldrh.w	r2, [r5], #2
 8009388:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 800938a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800938c:	6325      	str	r5, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 800938e:	3b01      	subs	r3, #1
 8009390:	b29b      	uxth	r3, r3
 8009392:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8009394:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8009396:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8009398:	b29b      	uxth	r3, r3
 800939a:	b98b      	cbnz	r3, 80093c0 <HAL_SPI_TransmitReceive+0xd8>
 800939c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800939e:	b29b      	uxth	r3, r3
 80093a0:	b973      	cbnz	r3, 80093c0 <HAL_SPI_TransmitReceive+0xd8>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80093a2:	463a      	mov	r2, r7
 80093a4:	4641      	mov	r1, r8
 80093a6:	4620      	mov	r0, r4
 80093a8:	f7ff fe28 	bl	8008ffc <SPI_EndRxTxTransaction>
 80093ac:	2800      	cmp	r0, #0
 80093ae:	f000 8081 	beq.w	80094b4 <HAL_SPI_TransmitReceive+0x1cc>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80093b2:	2320      	movs	r3, #32
 80093b4:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 80093b6:	2300      	movs	r3, #0
 80093b8:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
 80093bc:	2001      	movs	r0, #1
 80093be:	e031      	b.n	8009424 <HAL_SPI_TransmitReceive+0x13c>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80093c0:	6821      	ldr	r1, [r4, #0]
 80093c2:	688b      	ldr	r3, [r1, #8]
 80093c4:	079a      	lsls	r2, r3, #30
 80093c6:	d50d      	bpl.n	80093e4 <HAL_SPI_TransmitReceive+0xfc>
 80093c8:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80093ca:	b29b      	uxth	r3, r3
 80093cc:	b153      	cbz	r3, 80093e4 <HAL_SPI_TransmitReceive+0xfc>
 80093ce:	b145      	cbz	r5, 80093e2 <HAL_SPI_TransmitReceive+0xfa>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80093d0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80093d2:	f833 2b02 	ldrh.w	r2, [r3], #2
 80093d6:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80093d8:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 80093da:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80093dc:	3b01      	subs	r3, #1
 80093de:	b29b      	uxth	r3, r3
 80093e0:	86e3      	strh	r3, [r4, #54]	@ 0x36
{
 80093e2:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80093e4:	688a      	ldr	r2, [r1, #8]
 80093e6:	f012 0201 	ands.w	r2, r2, #1
 80093ea:	d00c      	beq.n	8009406 <HAL_SPI_TransmitReceive+0x11e>
 80093ec:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80093ee:	b29b      	uxth	r3, r3
 80093f0:	b14b      	cbz	r3, 8009406 <HAL_SPI_TransmitReceive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80093f2:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80093f4:	68c9      	ldr	r1, [r1, #12]
 80093f6:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80093fa:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 80093fc:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80093fe:	3b01      	subs	r3, #1
 8009400:	b29b      	uxth	r3, r3
 8009402:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8009404:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8009406:	f7fe f8b7 	bl	8007578 <HAL_GetTick>
 800940a:	1bc0      	subs	r0, r0, r7
 800940c:	4540      	cmp	r0, r8
 800940e:	d3c2      	bcc.n	8009396 <HAL_SPI_TransmitReceive+0xae>
 8009410:	f1b8 3fff 	cmp.w	r8, #4294967295
 8009414:	d0bf      	beq.n	8009396 <HAL_SPI_TransmitReceive+0xae>
        hspi->State = HAL_SPI_STATE_READY;
 8009416:	2301      	movs	r3, #1
 8009418:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 800941c:	2300      	movs	r3, #0
 800941e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 8009422:	2003      	movs	r0, #3
}
 8009424:	b003      	add	sp, #12
 8009426:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800942a:	b10a      	cbz	r2, 8009430 <HAL_SPI_TransmitReceive+0x148>
 800942c:	2e01      	cmp	r6, #1
 800942e:	d108      	bne.n	8009442 <HAL_SPI_TransmitReceive+0x15a>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8009430:	782a      	ldrb	r2, [r5, #0]
 8009432:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8009434:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8009436:	3301      	adds	r3, #1
 8009438:	6323      	str	r3, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 800943a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800943c:	3b01      	subs	r3, #1
 800943e:	b29b      	uxth	r3, r3
 8009440:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8009442:	2501      	movs	r5, #1
 8009444:	e02d      	b.n	80094a2 <HAL_SPI_TransmitReceive+0x1ba>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8009446:	6822      	ldr	r2, [r4, #0]
 8009448:	6893      	ldr	r3, [r2, #8]
 800944a:	079b      	lsls	r3, r3, #30
 800944c:	d50e      	bpl.n	800946c <HAL_SPI_TransmitReceive+0x184>
 800944e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8009450:	b29b      	uxth	r3, r3
 8009452:	b15b      	cbz	r3, 800946c <HAL_SPI_TransmitReceive+0x184>
 8009454:	b14d      	cbz	r5, 800946a <HAL_SPI_TransmitReceive+0x182>
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 8009456:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8009458:	781b      	ldrb	r3, [r3, #0]
 800945a:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 800945c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800945e:	3301      	adds	r3, #1
 8009460:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8009462:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8009464:	3b01      	subs	r3, #1
 8009466:	b29b      	uxth	r3, r3
 8009468:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800946a:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800946c:	6822      	ldr	r2, [r4, #0]
 800946e:	6891      	ldr	r1, [r2, #8]
 8009470:	f011 0101 	ands.w	r1, r1, #1
 8009474:	d00d      	beq.n	8009492 <HAL_SPI_TransmitReceive+0x1aa>
 8009476:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009478:	b29b      	uxth	r3, r3
 800947a:	b153      	cbz	r3, 8009492 <HAL_SPI_TransmitReceive+0x1aa>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800947c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800947e:	68d2      	ldr	r2, [r2, #12]
 8009480:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8009482:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8009484:	3301      	adds	r3, #1
 8009486:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8009488:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800948a:	3b01      	subs	r3, #1
 800948c:	b29b      	uxth	r3, r3
 800948e:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8009490:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8009492:	f7fe f871 	bl	8007578 <HAL_GetTick>
 8009496:	1bc0      	subs	r0, r0, r7
 8009498:	4540      	cmp	r0, r8
 800949a:	d302      	bcc.n	80094a2 <HAL_SPI_TransmitReceive+0x1ba>
 800949c:	f1b8 3fff 	cmp.w	r8, #4294967295
 80094a0:	d1b9      	bne.n	8009416 <HAL_SPI_TransmitReceive+0x12e>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80094a2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80094a4:	b29b      	uxth	r3, r3
 80094a6:	2b00      	cmp	r3, #0
 80094a8:	d1cd      	bne.n	8009446 <HAL_SPI_TransmitReceive+0x15e>
 80094aa:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80094ac:	b29b      	uxth	r3, r3
 80094ae:	2b00      	cmp	r3, #0
 80094b0:	d1c9      	bne.n	8009446 <HAL_SPI_TransmitReceive+0x15e>
 80094b2:	e776      	b.n	80093a2 <HAL_SPI_TransmitReceive+0xba>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80094b4:	68a3      	ldr	r3, [r4, #8]
 80094b6:	b933      	cbnz	r3, 80094c6 <HAL_SPI_TransmitReceive+0x1de>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80094b8:	9301      	str	r3, [sp, #4]
 80094ba:	6823      	ldr	r3, [r4, #0]
 80094bc:	68da      	ldr	r2, [r3, #12]
 80094be:	9201      	str	r2, [sp, #4]
 80094c0:	689b      	ldr	r3, [r3, #8]
 80094c2:	9301      	str	r3, [sp, #4]
 80094c4:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 80094c6:	2301      	movs	r3, #1
 80094c8:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80094cc:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 80094ce:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80094d0:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 80094d2:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80094d6:	bf18      	it	ne
 80094d8:	2001      	movne	r0, #1
 80094da:	e7a3      	b.n	8009424 <HAL_SPI_TransmitReceive+0x13c>
    return HAL_BUSY;
 80094dc:	2002      	movs	r0, #2
 80094de:	e7a1      	b.n	8009424 <HAL_SPI_TransmitReceive+0x13c>

080094e0 <HAL_SPI_Receive>:
{
 80094e0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80094e4:	461e      	mov	r6, r3
  if (hspi->State != HAL_SPI_STATE_READY)
 80094e6:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 80094ea:	2b01      	cmp	r3, #1
{
 80094ec:	4604      	mov	r4, r0
 80094ee:	4689      	mov	r9, r1
 80094f0:	4617      	mov	r7, r2
  if (hspi->State != HAL_SPI_STATE_READY)
 80094f2:	b2dd      	uxtb	r5, r3
 80094f4:	d004      	beq.n	8009500 <HAL_SPI_Receive+0x20>
    return HAL_BUSY;
 80094f6:	2502      	movs	r5, #2
}
 80094f8:	4628      	mov	r0, r5
 80094fa:	b003      	add	sp, #12
 80094fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8009500:	6843      	ldr	r3, [r0, #4]
 8009502:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8009506:	d10b      	bne.n	8009520 <HAL_SPI_Receive+0x40>
 8009508:	6883      	ldr	r3, [r0, #8]
 800950a:	b94b      	cbnz	r3, 8009520 <HAL_SPI_Receive+0x40>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800950c:	2304      	movs	r3, #4
 800950e:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8009512:	4613      	mov	r3, r2
 8009514:	9600      	str	r6, [sp, #0]
 8009516:	460a      	mov	r2, r1
 8009518:	f7ff fee6 	bl	80092e8 <HAL_SPI_TransmitReceive>
 800951c:	4605      	mov	r5, r0
 800951e:	e7eb      	b.n	80094f8 <HAL_SPI_Receive+0x18>
  tickstart = HAL_GetTick();
 8009520:	f7fe f82a 	bl	8007578 <HAL_GetTick>
 8009524:	4680      	mov	r8, r0
  if ((pData == NULL) || (Size == 0U))
 8009526:	f1b9 0f00 	cmp.w	r9, #0
 800952a:	d0e5      	beq.n	80094f8 <HAL_SPI_Receive+0x18>
 800952c:	2f00      	cmp	r7, #0
 800952e:	d0e3      	beq.n	80094f8 <HAL_SPI_Receive+0x18>
  __HAL_LOCK(hspi);
 8009530:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8009534:	2b01      	cmp	r3, #1
 8009536:	d0de      	beq.n	80094f6 <HAL_SPI_Receive+0x16>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8009538:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800953a:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  __HAL_LOCK(hspi);
 800953e:	2301      	movs	r3, #1
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8009540:	2500      	movs	r5, #0
  __HAL_LOCK(hspi);
 8009542:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8009546:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800954a:	f04f 0304 	mov.w	r3, #4
 800954e:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->TxISR       = NULL;
 8009552:	e9c4 5510 	strd	r5, r5, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8009556:	6565      	str	r5, [r4, #84]	@ 0x54
    __HAL_SPI_DISABLE(hspi);
 8009558:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800955a:	87e7      	strh	r7, [r4, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 800955c:	87a7      	strh	r7, [r4, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800955e:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 8009560:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 8009562:	86e5      	strh	r5, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8009564:	d107      	bne.n	8009576 <HAL_SPI_Receive+0x96>
    __HAL_SPI_DISABLE(hspi);
 8009566:	681a      	ldr	r2, [r3, #0]
 8009568:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800956c:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 800956e:	681a      	ldr	r2, [r3, #0]
 8009570:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8009574:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8009576:	681a      	ldr	r2, [r3, #0]
 8009578:	0655      	lsls	r5, r2, #25
    __HAL_SPI_ENABLE(hspi);
 800957a:	bf5e      	ittt	pl
 800957c:	681a      	ldrpl	r2, [r3, #0]
 800957e:	f042 0240 	orrpl.w	r2, r2, #64	@ 0x40
 8009582:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8009584:	68e3      	ldr	r3, [r4, #12]
 8009586:	b1f3      	cbz	r3, 80095c6 <HAL_SPI_Receive+0xe6>
    while (hspi->RxXferCount > 0U)
 8009588:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800958a:	b29b      	uxth	r3, r3
 800958c:	b1fb      	cbz	r3, 80095ce <HAL_SPI_Receive+0xee>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800958e:	6823      	ldr	r3, [r4, #0]
 8009590:	689a      	ldr	r2, [r3, #8]
 8009592:	07d2      	lsls	r2, r2, #31
 8009594:	d53c      	bpl.n	8009610 <HAL_SPI_Receive+0x130>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8009596:	68da      	ldr	r2, [r3, #12]
 8009598:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800959a:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800959e:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 80095a0:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80095a2:	3b01      	subs	r3, #1
 80095a4:	b29b      	uxth	r3, r3
 80095a6:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 80095a8:	e7ee      	b.n	8009588 <HAL_SPI_Receive+0xa8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80095aa:	6823      	ldr	r3, [r4, #0]
 80095ac:	689a      	ldr	r2, [r3, #8]
 80095ae:	07d0      	lsls	r0, r2, #31
 80095b0:	d51e      	bpl.n	80095f0 <HAL_SPI_Receive+0x110>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 80095b2:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80095b4:	7b1b      	ldrb	r3, [r3, #12]
 80095b6:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 80095b8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80095ba:	3301      	adds	r3, #1
 80095bc:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 80095be:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80095c0:	3b01      	subs	r3, #1
 80095c2:	b29b      	uxth	r3, r3
 80095c4:	87e3      	strh	r3, [r4, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 80095c6:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80095c8:	b29b      	uxth	r3, r3
 80095ca:	2b00      	cmp	r3, #0
 80095cc:	d1ed      	bne.n	80095aa <HAL_SPI_Receive+0xca>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80095ce:	4642      	mov	r2, r8
 80095d0:	4631      	mov	r1, r6
 80095d2:	4620      	mov	r0, r4
 80095d4:	f7ff fd4e 	bl	8009074 <SPI_EndRxTransaction>
 80095d8:	bb18      	cbnz	r0, 8009622 <HAL_SPI_Receive+0x142>
  hspi->State = HAL_SPI_STATE_READY;
 80095da:	2301      	movs	r3, #1
 80095dc:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80095e0:	6d65      	ldr	r5, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 80095e2:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80095e4:	1aed      	subs	r5, r5, r3
  __HAL_UNLOCK(hspi);
 80095e6:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80095ea:	bf18      	it	ne
 80095ec:	2501      	movne	r5, #1
 80095ee:	e783      	b.n	80094f8 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80095f0:	f7fd ffc2 	bl	8007578 <HAL_GetTick>
 80095f4:	eba0 0008 	sub.w	r0, r0, r8
 80095f8:	42b0      	cmp	r0, r6
 80095fa:	d3e4      	bcc.n	80095c6 <HAL_SPI_Receive+0xe6>
 80095fc:	1c71      	adds	r1, r6, #1
 80095fe:	d0e2      	beq.n	80095c6 <HAL_SPI_Receive+0xe6>
          hspi->State = HAL_SPI_STATE_READY;
 8009600:	2301      	movs	r3, #1
 8009602:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8009606:	2300      	movs	r3, #0
 8009608:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 800960c:	2503      	movs	r5, #3
 800960e:	e773      	b.n	80094f8 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8009610:	f7fd ffb2 	bl	8007578 <HAL_GetTick>
 8009614:	eba0 0008 	sub.w	r0, r0, r8
 8009618:	42b0      	cmp	r0, r6
 800961a:	d3b5      	bcc.n	8009588 <HAL_SPI_Receive+0xa8>
 800961c:	1c73      	adds	r3, r6, #1
 800961e:	d0b3      	beq.n	8009588 <HAL_SPI_Receive+0xa8>
 8009620:	e7ee      	b.n	8009600 <HAL_SPI_Receive+0x120>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8009622:	2320      	movs	r3, #32
 8009624:	6563      	str	r3, [r4, #84]	@ 0x54
 8009626:	e7d8      	b.n	80095da <HAL_SPI_Receive+0xfa>

08009628 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8009628:	4770      	bx	lr
	...

0800962c <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800962c:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8009630:	2b01      	cmp	r3, #1
 8009632:	d130      	bne.n	8009696 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8009634:	2302      	movs	r3, #2
 8009636:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800963a:	6803      	ldr	r3, [r0, #0]
 800963c:	68da      	ldr	r2, [r3, #12]
 800963e:	f042 0201 	orr.w	r2, r2, #1
 8009642:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8009644:	4a15      	ldr	r2, [pc, #84]	@ (800969c <HAL_TIM_Base_Start_IT+0x70>)
 8009646:	4293      	cmp	r3, r2
 8009648:	d01a      	beq.n	8009680 <HAL_TIM_Base_Start_IT+0x54>
 800964a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800964e:	d017      	beq.n	8009680 <HAL_TIM_Base_Start_IT+0x54>
 8009650:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8009654:	4293      	cmp	r3, r2
 8009656:	d013      	beq.n	8009680 <HAL_TIM_Base_Start_IT+0x54>
 8009658:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800965c:	4293      	cmp	r3, r2
 800965e:	d00f      	beq.n	8009680 <HAL_TIM_Base_Start_IT+0x54>
 8009660:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8009664:	4293      	cmp	r3, r2
 8009666:	d00b      	beq.n	8009680 <HAL_TIM_Base_Start_IT+0x54>
 8009668:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 800966c:	4293      	cmp	r3, r2
 800966e:	d007      	beq.n	8009680 <HAL_TIM_Base_Start_IT+0x54>
 8009670:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 8009674:	4293      	cmp	r3, r2
 8009676:	d003      	beq.n	8009680 <HAL_TIM_Base_Start_IT+0x54>
 8009678:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 800967c:	4293      	cmp	r3, r2
 800967e:	d104      	bne.n	800968a <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8009680:	689a      	ldr	r2, [r3, #8]
 8009682:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8009686:	2a06      	cmp	r2, #6
 8009688:	d003      	beq.n	8009692 <HAL_TIM_Base_Start_IT+0x66>
    {
      __HAL_TIM_ENABLE(htim);
 800968a:	681a      	ldr	r2, [r3, #0]
 800968c:	f042 0201 	orr.w	r2, r2, #1
 8009690:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8009692:	2000      	movs	r0, #0
 8009694:	4770      	bx	lr
    return HAL_ERROR;
 8009696:	2001      	movs	r0, #1
}
 8009698:	4770      	bx	lr
 800969a:	bf00      	nop
 800969c:	40010000 	.word	0x40010000

080096a0 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 80096a0:	4770      	bx	lr

080096a2 <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 80096a2:	4770      	bx	lr

080096a4 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 80096a4:	4770      	bx	lr

080096a6 <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 80096a6:	4770      	bx	lr

080096a8 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 80096a8:	6803      	ldr	r3, [r0, #0]
{
 80096aa:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 80096ac:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 80096ae:	691e      	ldr	r6, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 80096b0:	07b1      	lsls	r1, r6, #30
{
 80096b2:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 80096b4:	d50d      	bpl.n	80096d2 <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 80096b6:	07aa      	lsls	r2, r5, #30
 80096b8:	d50b      	bpl.n	80096d2 <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 80096ba:	f06f 0202 	mvn.w	r2, #2
 80096be:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80096c0:	2201      	movs	r2, #1
 80096c2:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80096c4:	699b      	ldr	r3, [r3, #24]
 80096c6:	079b      	lsls	r3, r3, #30
 80096c8:	d069      	beq.n	800979e <HAL_TIM_IRQHandler+0xf6>
          HAL_TIM_IC_CaptureCallback(htim);
 80096ca:	f7ff ffea 	bl	80096a2 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80096ce:	2300      	movs	r3, #0
 80096d0:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 80096d2:	0771      	lsls	r1, r6, #29
 80096d4:	d510      	bpl.n	80096f8 <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 80096d6:	076a      	lsls	r2, r5, #29
 80096d8:	d50e      	bpl.n	80096f8 <HAL_TIM_IRQHandler+0x50>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 80096da:	6823      	ldr	r3, [r4, #0]
 80096dc:	f06f 0204 	mvn.w	r2, #4
 80096e0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80096e2:	2202      	movs	r2, #2
 80096e4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80096e6:	699b      	ldr	r3, [r3, #24]
 80096e8:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 80096ec:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80096ee:	d05c      	beq.n	80097aa <HAL_TIM_IRQHandler+0x102>
        HAL_TIM_IC_CaptureCallback(htim);
 80096f0:	f7ff ffd7 	bl	80096a2 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80096f4:	2300      	movs	r3, #0
 80096f6:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 80096f8:	0733      	lsls	r3, r6, #28
 80096fa:	d50f      	bpl.n	800971c <HAL_TIM_IRQHandler+0x74>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 80096fc:	0728      	lsls	r0, r5, #28
 80096fe:	d50d      	bpl.n	800971c <HAL_TIM_IRQHandler+0x74>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8009700:	6823      	ldr	r3, [r4, #0]
 8009702:	f06f 0208 	mvn.w	r2, #8
 8009706:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8009708:	2204      	movs	r2, #4
 800970a:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800970c:	69db      	ldr	r3, [r3, #28]
 800970e:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 8009710:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8009712:	d050      	beq.n	80097b6 <HAL_TIM_IRQHandler+0x10e>
        HAL_TIM_IC_CaptureCallback(htim);
 8009714:	f7ff ffc5 	bl	80096a2 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8009718:	2300      	movs	r3, #0
 800971a:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 800971c:	06f2      	lsls	r2, r6, #27
 800971e:	d510      	bpl.n	8009742 <HAL_TIM_IRQHandler+0x9a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8009720:	06eb      	lsls	r3, r5, #27
 8009722:	d50e      	bpl.n	8009742 <HAL_TIM_IRQHandler+0x9a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8009724:	6823      	ldr	r3, [r4, #0]
 8009726:	f06f 0210 	mvn.w	r2, #16
 800972a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800972c:	2208      	movs	r2, #8
 800972e:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8009730:	69db      	ldr	r3, [r3, #28]
 8009732:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 8009736:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8009738:	d043      	beq.n	80097c2 <HAL_TIM_IRQHandler+0x11a>
        HAL_TIM_IC_CaptureCallback(htim);
 800973a:	f7ff ffb2 	bl	80096a2 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800973e:	2300      	movs	r3, #0
 8009740:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 8009742:	07f0      	lsls	r0, r6, #31
 8009744:	d508      	bpl.n	8009758 <HAL_TIM_IRQHandler+0xb0>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 8009746:	07e9      	lsls	r1, r5, #31
 8009748:	d506      	bpl.n	8009758 <HAL_TIM_IRQHandler+0xb0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 800974a:	6823      	ldr	r3, [r4, #0]
 800974c:	f06f 0201 	mvn.w	r2, #1
 8009750:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8009752:	4620      	mov	r0, r4
 8009754:	f7f7 fd1a 	bl	800118c <HAL_TIM_PeriodElapsedCallback>
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 8009758:	0632      	lsls	r2, r6, #24
 800975a:	d508      	bpl.n	800976e <HAL_TIM_IRQHandler+0xc6>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 800975c:	062b      	lsls	r3, r5, #24
 800975e:	d506      	bpl.n	800976e <HAL_TIM_IRQHandler+0xc6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 8009760:	6823      	ldr	r3, [r4, #0]
 8009762:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8009766:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8009768:	4620      	mov	r0, r4
 800976a:	f000 f8b6 	bl	80098da <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 800976e:	0670      	lsls	r0, r6, #25
 8009770:	d508      	bpl.n	8009784 <HAL_TIM_IRQHandler+0xdc>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8009772:	0669      	lsls	r1, r5, #25
 8009774:	d506      	bpl.n	8009784 <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8009776:	6823      	ldr	r3, [r4, #0]
 8009778:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800977c:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800977e:	4620      	mov	r0, r4
 8009780:	f7ff ff91 	bl	80096a6 <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8009784:	06b2      	lsls	r2, r6, #26
 8009786:	d522      	bpl.n	80097ce <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8009788:	06ab      	lsls	r3, r5, #26
 800978a:	d520      	bpl.n	80097ce <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 800978c:	6823      	ldr	r3, [r4, #0]
 800978e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 8009792:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8009794:	611a      	str	r2, [r3, #16]
}
 8009796:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
 800979a:	f000 b89d 	b.w	80098d8 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800979e:	f7ff ff7f 	bl	80096a0 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80097a2:	4620      	mov	r0, r4
 80097a4:	f7ff ff7e 	bl	80096a4 <HAL_TIM_PWM_PulseFinishedCallback>
 80097a8:	e791      	b.n	80096ce <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80097aa:	f7ff ff79 	bl	80096a0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80097ae:	4620      	mov	r0, r4
 80097b0:	f7ff ff78 	bl	80096a4 <HAL_TIM_PWM_PulseFinishedCallback>
 80097b4:	e79e      	b.n	80096f4 <HAL_TIM_IRQHandler+0x4c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80097b6:	f7ff ff73 	bl	80096a0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80097ba:	4620      	mov	r0, r4
 80097bc:	f7ff ff72 	bl	80096a4 <HAL_TIM_PWM_PulseFinishedCallback>
 80097c0:	e7aa      	b.n	8009718 <HAL_TIM_IRQHandler+0x70>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80097c2:	f7ff ff6d 	bl	80096a0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80097c6:	4620      	mov	r0, r4
 80097c8:	f7ff ff6c 	bl	80096a4 <HAL_TIM_PWM_PulseFinishedCallback>
 80097cc:	e7b7      	b.n	800973e <HAL_TIM_IRQHandler+0x96>
}
 80097ce:	bd70      	pop	{r4, r5, r6, pc}

080097d0 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80097d0:	4a29      	ldr	r2, [pc, #164]	@ (8009878 <TIM_Base_SetConfig+0xa8>)
  tmpcr1 = TIMx->CR1;
 80097d2:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80097d4:	4290      	cmp	r0, r2
 80097d6:	d012      	beq.n	80097fe <TIM_Base_SetConfig+0x2e>
 80097d8:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 80097dc:	d00f      	beq.n	80097fe <TIM_Base_SetConfig+0x2e>
 80097de:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 80097e2:	4290      	cmp	r0, r2
 80097e4:	d00b      	beq.n	80097fe <TIM_Base_SetConfig+0x2e>
 80097e6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80097ea:	4290      	cmp	r0, r2
 80097ec:	d007      	beq.n	80097fe <TIM_Base_SetConfig+0x2e>
 80097ee:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80097f2:	4290      	cmp	r0, r2
 80097f4:	d003      	beq.n	80097fe <TIM_Base_SetConfig+0x2e>
 80097f6:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 80097fa:	4290      	cmp	r0, r2
 80097fc:	d108      	bne.n	8009810 <TIM_Base_SetConfig+0x40>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80097fe:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8009800:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 8009804:	4313      	orrs	r3, r2

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8009806:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8009808:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800980c:	4313      	orrs	r3, r2
 800980e:	e016      	b.n	800983e <TIM_Base_SetConfig+0x6e>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8009810:	4a1a      	ldr	r2, [pc, #104]	@ (800987c <TIM_Base_SetConfig+0xac>)
 8009812:	4290      	cmp	r0, r2
 8009814:	d0f7      	beq.n	8009806 <TIM_Base_SetConfig+0x36>
 8009816:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800981a:	4290      	cmp	r0, r2
 800981c:	d0f3      	beq.n	8009806 <TIM_Base_SetConfig+0x36>
 800981e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8009822:	4290      	cmp	r0, r2
 8009824:	d0ef      	beq.n	8009806 <TIM_Base_SetConfig+0x36>
 8009826:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 800982a:	4290      	cmp	r0, r2
 800982c:	d0eb      	beq.n	8009806 <TIM_Base_SetConfig+0x36>
 800982e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8009832:	4290      	cmp	r0, r2
 8009834:	d0e7      	beq.n	8009806 <TIM_Base_SetConfig+0x36>
 8009836:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800983a:	4290      	cmp	r0, r2
 800983c:	d0e3      	beq.n	8009806 <TIM_Base_SetConfig+0x36>
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800983e:	694a      	ldr	r2, [r1, #20]
 8009840:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8009844:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8009846:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8009848:	688b      	ldr	r3, [r1, #8]
 800984a:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800984c:	680b      	ldr	r3, [r1, #0]
 800984e:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8009850:	4b09      	ldr	r3, [pc, #36]	@ (8009878 <TIM_Base_SetConfig+0xa8>)
 8009852:	4298      	cmp	r0, r3
 8009854:	d003      	beq.n	800985e <TIM_Base_SetConfig+0x8e>
 8009856:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800985a:	4298      	cmp	r0, r3
 800985c:	d101      	bne.n	8009862 <TIM_Base_SetConfig+0x92>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800985e:	690b      	ldr	r3, [r1, #16]
 8009860:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8009862:	2301      	movs	r3, #1
 8009864:	6143      	str	r3, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 8009866:	6903      	ldr	r3, [r0, #16]
 8009868:	07db      	lsls	r3, r3, #31
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 800986a:	bf42      	ittt	mi
 800986c:	6903      	ldrmi	r3, [r0, #16]
 800986e:	f023 0301 	bicmi.w	r3, r3, #1
 8009872:	6103      	strmi	r3, [r0, #16]
  }
}
 8009874:	4770      	bx	lr
 8009876:	bf00      	nop
 8009878:	40010000 	.word	0x40010000
 800987c:	40014000 	.word	0x40014000

08009880 <HAL_TIM_Base_Init>:
{
 8009880:	b510      	push	{r4, lr}
  if (htim == NULL)
 8009882:	4604      	mov	r4, r0
 8009884:	b330      	cbz	r0, 80098d4 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8009886:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800988a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800988e:	b91b      	cbnz	r3, 8009898 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8009890:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 8009894:	f7ff fec8 	bl	8009628 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8009898:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800989a:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800989c:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80098a0:	1d21      	adds	r1, r4, #4
 80098a2:	f7ff ff95 	bl	80097d0 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80098a6:	2301      	movs	r3, #1
 80098a8:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 80098ac:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80098ae:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 80098b2:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 80098b6:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 80098ba:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80098be:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80098c2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80098c6:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 80098ca:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 80098ce:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 80098d2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80098d4:	2001      	movs	r0, #1
 80098d6:	e7fc      	b.n	80098d2 <HAL_TIM_Base_Init+0x52>

080098d8 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 80098d8:	4770      	bx	lr

080098da <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 80098da:	4770      	bx	lr

080098dc <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 80098dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80098e0:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 80098e4:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 80098e8:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 80098ec:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 80098f0:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 80098f4:	6809      	ldr	r1, [r1, #0]
 80098f6:	ea43 0308 	orr.w	r3, r3, r8
 80098fa:	b981      	cbnz	r1, 800991e <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80098fc:	ea43 030e 	orr.w	r3, r3, lr
 8009900:	4313      	orrs	r3, r2
 8009902:	ea43 030c 	orr.w	r3, r3, ip
 8009906:	433b      	orrs	r3, r7
 8009908:	6801      	ldr	r1, [r0, #0]
 800990a:	4333      	orrs	r3, r6
 800990c:	432b      	orrs	r3, r5
 800990e:	4323      	orrs	r3, r4
 8009910:	f36f 010e 	bfc	r1, #0, #15
 8009914:	430b      	orrs	r3, r1
 8009916:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8009918:	2000      	movs	r0, #0
 800991a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800991e:	6801      	ldr	r1, [r0, #0]
 8009920:	ea43 030e 	orr.w	r3, r3, lr
 8009924:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 8009928:	430b      	orrs	r3, r1
 800992a:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800992c:	ea42 030c 	orr.w	r3, r2, ip
 8009930:	6841      	ldr	r1, [r0, #4]
 8009932:	433b      	orrs	r3, r7
 8009934:	4333      	orrs	r3, r6
 8009936:	432b      	orrs	r3, r5
 8009938:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 800993c:	4323      	orrs	r3, r4
 800993e:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 8009942:	4313      	orrs	r3, r2
 8009944:	6043      	str	r3, [r0, #4]
 8009946:	e7e7      	b.n	8009918 <FMC_SDRAM_Init+0x3c>

08009948 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8009948:	68cb      	ldr	r3, [r1, #12]
 800994a:	f103 3cff 	add.w	ip, r3, #4294967295
 800994e:	694b      	ldr	r3, [r1, #20]
{
 8009950:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8009952:	684c      	ldr	r4, [r1, #4]
 8009954:	688f      	ldr	r7, [r1, #8]
 8009956:	690e      	ldr	r6, [r1, #16]
 8009958:	698d      	ldr	r5, [r1, #24]
 800995a:	6809      	ldr	r1, [r1, #0]
 800995c:	3b01      	subs	r3, #1
 800995e:	051b      	lsls	r3, r3, #20
 8009960:	3c01      	subs	r4, #1
 8009962:	3f01      	subs	r7, #1
 8009964:	3e01      	subs	r6, #1
 8009966:	3d01      	subs	r5, #1
 8009968:	0124      	lsls	r4, r4, #4
 800996a:	023f      	lsls	r7, r7, #8
 800996c:	0436      	lsls	r6, r6, #16
 800996e:	062d      	lsls	r5, r5, #24
 8009970:	3901      	subs	r1, #1
 8009972:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8009976:	b95a      	cbnz	r2, 8009990 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8009978:	430b      	orrs	r3, r1
 800997a:	4323      	orrs	r3, r4
 800997c:	6882      	ldr	r2, [r0, #8]
 800997e:	433b      	orrs	r3, r7
 8009980:	4333      	orrs	r3, r6
 8009982:	432b      	orrs	r3, r5
 8009984:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8009988:	4313      	orrs	r3, r2
 800998a:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800998c:	2000      	movs	r0, #0
 800998e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8009990:	6882      	ldr	r2, [r0, #8]
 8009992:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8009996:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 800999a:	4313      	orrs	r3, r2
 800999c:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800999e:	ea44 0307 	orr.w	r3, r4, r7
 80099a2:	68c2      	ldr	r2, [r0, #12]
 80099a4:	430b      	orrs	r3, r1
 80099a6:	4333      	orrs	r3, r6
 80099a8:	432b      	orrs	r3, r5
 80099aa:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 80099ae:	4313      	orrs	r3, r2
 80099b0:	60c3      	str	r3, [r0, #12]
 80099b2:	e7eb      	b.n	800998c <FMC_SDRAM_Timing_Init+0x44>

080099b4 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80099b4:	b570      	push	{r4, r5, r6, lr}
 80099b6:	4604      	mov	r4, r0
 80099b8:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 80099ba:	6902      	ldr	r2, [r0, #16]
 80099bc:	e9d1 3000 	ldrd	r3, r0, [r1]
 80099c0:	4303      	orrs	r3, r0
 80099c2:	68c8      	ldr	r0, [r1, #12]
 80099c4:	f36f 0215 	bfc	r2, #0, #22
 80099c8:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 80099cc:	4313      	orrs	r3, r2
 80099ce:	688a      	ldr	r2, [r1, #8]
 80099d0:	3a01      	subs	r2, #1
 80099d2:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80099d6:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 80099d8:	f7fd fdce 	bl	8007578 <HAL_GetTick>
 80099dc:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 80099de:	69a0      	ldr	r0, [r4, #24]
 80099e0:	f010 0020 	ands.w	r0, r0, #32
 80099e4:	d003      	beq.n	80099ee <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80099e6:	1c6b      	adds	r3, r5, #1
 80099e8:	d0f9      	beq.n	80099de <FMC_SDRAM_SendCommand+0x2a>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 80099ea:	b90d      	cbnz	r5, 80099f0 <FMC_SDRAM_SendCommand+0x3c>
      {
        return HAL_TIMEOUT;
 80099ec:	2003      	movs	r0, #3
      }
    }
  }
  return HAL_OK;
}
 80099ee:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 80099f0:	f7fd fdc2 	bl	8007578 <HAL_GetTick>
 80099f4:	1b80      	subs	r0, r0, r6
 80099f6:	42a8      	cmp	r0, r5
 80099f8:	d9f1      	bls.n	80099de <FMC_SDRAM_SendCommand+0x2a>
 80099fa:	e7f7      	b.n	80099ec <FMC_SDRAM_SendCommand+0x38>

080099fc <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 80099fc:	6943      	ldr	r3, [r0, #20]
 80099fe:	f36f 034d 	bfc	r3, #1, #13
 8009a02:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 8009a06:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 8009a08:	2000      	movs	r0, #0
 8009a0a:	4770      	bx	lr

08009a0c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8009a0c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8009a0e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009a12:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8009a14:	f001 ff44 	bl	800b8a0 <xTaskGetSchedulerState>
 8009a18:	2801      	cmp	r0, #1
 8009a1a:	d003      	beq.n	8009a24 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8009a1c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8009a20:	f000 bc18 	b.w	800a254 <xPortSysTickHandler>
}
 8009a24:	bd08      	pop	{r3, pc}
	...

08009a28 <osKernelInitialize>:
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8009a28:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8009a2c:	b92b      	cbnz	r3, 8009a3a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8009a2e:	4b06      	ldr	r3, [pc, #24]	@ (8009a48 <osKernelInitialize+0x20>)
 8009a30:	6818      	ldr	r0, [r3, #0]
 8009a32:	b928      	cbnz	r0, 8009a40 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8009a34:	2201      	movs	r2, #1
 8009a36:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8009a38:	4770      	bx	lr
    stat = osErrorISR;
 8009a3a:	f06f 0005 	mvn.w	r0, #5
 8009a3e:	4770      	bx	lr
    } else {
      stat = osError;
 8009a40:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8009a44:	4770      	bx	lr
 8009a46:	bf00      	nop
 8009a48:	20004b98 	.word	0x20004b98

08009a4c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8009a4c:	b510      	push	{r4, lr}
 8009a4e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8009a52:	b95c      	cbnz	r4, 8009a6c <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8009a54:	4b08      	ldr	r3, [pc, #32]	@ (8009a78 <osKernelStart+0x2c>)
 8009a56:	681a      	ldr	r2, [r3, #0]
 8009a58:	2a01      	cmp	r2, #1
 8009a5a:	d10a      	bne.n	8009a72 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009a5c:	4a07      	ldr	r2, [pc, #28]	@ (8009a7c <osKernelStart+0x30>)
 8009a5e:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8009a60:	2202      	movs	r2, #2
 8009a62:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8009a64:	f001 fc40 	bl	800b2e8 <vTaskStartScheduler>
      stat = osOK;
 8009a68:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8009a6a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8009a6c:	f06f 0005 	mvn.w	r0, #5
 8009a70:	e7fb      	b.n	8009a6a <osKernelStart+0x1e>
      stat = osError;
 8009a72:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8009a76:	e7f8      	b.n	8009a6a <osKernelStart+0x1e>
 8009a78:	20004b98 	.word	0x20004b98
 8009a7c:	e000ed00 	.word	0xe000ed00

08009a80 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8009a80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009a82:	b087      	sub	sp, #28
 8009a84:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8009a86:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8009a88:	460b      	mov	r3, r1
  hTask = NULL;
 8009a8a:	9205      	str	r2, [sp, #20]
 8009a8c:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8009a90:	b9fa      	cbnz	r2, 8009ad2 <osThreadNew+0x52>
 8009a92:	b1f0      	cbz	r0, 8009ad2 <osThreadNew+0x52>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8009a94:	b354      	cbz	r4, 8009aec <osThreadNew+0x6c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8009a96:	69a5      	ldr	r5, [r4, #24]
 8009a98:	b125      	cbz	r5, 8009aa4 <osThreadNew+0x24>
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8009a9a:	1e69      	subs	r1, r5, #1
 8009a9c:	2937      	cmp	r1, #55	@ 0x37
 8009a9e:	d902      	bls.n	8009aa6 <osThreadNew+0x26>
        return (NULL);
 8009aa0:	2000      	movs	r0, #0
 8009aa2:	e017      	b.n	8009ad4 <osThreadNew+0x54>
    prio  = (UBaseType_t)osPriorityNormal;
 8009aa4:	2518      	movs	r5, #24
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8009aa6:	6862      	ldr	r2, [r4, #4]
 8009aa8:	07d2      	lsls	r2, r2, #31
 8009aaa:	d4f9      	bmi.n	8009aa0 <osThreadNew+0x20>
      }

      if (attr->stack_size > 0U) {
 8009aac:	6966      	ldr	r6, [r4, #20]
 8009aae:	b19e      	cbz	r6, 8009ad8 <osThreadNew+0x58>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8009ab0:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8009ab2:	e9d4 7c02 	ldrd	r7, ip, [r4, #8]
      if (attr->name != NULL) {
 8009ab6:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8009ab8:	b187      	cbz	r7, 8009adc <osThreadNew+0x5c>
 8009aba:	f1bc 0f5f 	cmp.w	ip, #95	@ 0x5f
 8009abe:	d908      	bls.n	8009ad2 <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8009ac0:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8009ac2:	b134      	cbz	r4, 8009ad2 <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8009ac4:	b12e      	cbz	r6, 8009ad2 <osThreadNew+0x52>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8009ac6:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8009aca:	9500      	str	r5, [sp, #0]
 8009acc:	f001 fb21 	bl	800b112 <xTaskCreateStatic>
 8009ad0:	9005      	str	r0, [sp, #20]
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8009ad2:	9805      	ldr	r0, [sp, #20]
}
 8009ad4:	b007      	add	sp, #28
 8009ad6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8009ad8:	2280      	movs	r2, #128	@ 0x80
 8009ada:	e7ea      	b.n	8009ab2 <osThreadNew+0x32>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8009adc:	f1bc 0f00 	cmp.w	ip, #0
 8009ae0:	d1f7      	bne.n	8009ad2 <osThreadNew+0x52>
 8009ae2:	6924      	ldr	r4, [r4, #16]
 8009ae4:	2c00      	cmp	r4, #0
 8009ae6:	d1f4      	bne.n	8009ad2 <osThreadNew+0x52>
 8009ae8:	460c      	mov	r4, r1
 8009aea:	e001      	b.n	8009af0 <osThreadNew+0x70>
    prio  = (UBaseType_t)osPriorityNormal;
 8009aec:	2518      	movs	r5, #24
    stack = configMINIMAL_STACK_SIZE;
 8009aee:	2280      	movs	r2, #128	@ 0x80
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8009af0:	a905      	add	r1, sp, #20
 8009af2:	e9cd 5100 	strd	r5, r1, [sp]
 8009af6:	b292      	uxth	r2, r2
 8009af8:	4621      	mov	r1, r4
 8009afa:	f001 fb42 	bl	800b182 <xTaskCreate>
 8009afe:	2801      	cmp	r0, #1
            hTask = NULL;
 8009b00:	bf1c      	itt	ne
 8009b02:	2300      	movne	r3, #0
 8009b04:	9305      	strne	r3, [sp, #20]
 8009b06:	e7e4      	b.n	8009ad2 <osThreadNew+0x52>

08009b08 <osThreadGetState>:
  id = (osThreadId_t)xTaskGetCurrentTaskHandle();

  return (id);
}

osThreadState_t osThreadGetState (osThreadId_t thread_id) {
 8009b08:	b508      	push	{r3, lr}
 8009b0a:	f3ef 8205 	mrs	r2, IPSR
  TaskHandle_t hTask = (TaskHandle_t)thread_id;
  osThreadState_t state;

  if (IS_IRQ() || (hTask == NULL)) {
 8009b0e:	b112      	cbz	r2, 8009b16 <osThreadGetState+0xe>
    state = osThreadError;
 8009b10:	f04f 30ff 	mov.w	r0, #4294967295
      default:         state = osThreadError;      break;
    }
  }

  return (state);
}
 8009b14:	bd08      	pop	{r3, pc}
  if (IS_IRQ() || (hTask == NULL)) {
 8009b16:	2800      	cmp	r0, #0
 8009b18:	d0fa      	beq.n	8009b10 <osThreadGetState+0x8>
    switch (eTaskGetState (hTask)) {
 8009b1a:	f001 fb61 	bl	800b1e0 <eTaskGetState>
 8009b1e:	2804      	cmp	r0, #4
 8009b20:	d8f6      	bhi.n	8009b10 <osThreadGetState+0x8>
 8009b22:	4b01      	ldr	r3, [pc, #4]	@ (8009b28 <osThreadGetState+0x20>)
 8009b24:	5618      	ldrsb	r0, [r3, r0]
  return (state);
 8009b26:	e7f5      	b.n	8009b14 <osThreadGetState+0xc>
 8009b28:	0802811c 	.word	0x0802811c

08009b2c <osThreadSuspend>:

  return (stat);
}

#if (configUSE_OS2_THREAD_SUSPEND_RESUME == 1)
osStatus_t osThreadSuspend (osThreadId_t thread_id) {
 8009b2c:	b510      	push	{r4, lr}
 8009b2e:	f3ef 8405 	mrs	r4, IPSR
  TaskHandle_t hTask = (TaskHandle_t)thread_id;
  osStatus_t stat;

  if (IS_IRQ()) {
 8009b32:	b924      	cbnz	r4, 8009b3e <osThreadSuspend+0x12>
    stat = osErrorISR;
  }
  else if (hTask == NULL) {
 8009b34:	b130      	cbz	r0, 8009b44 <osThreadSuspend+0x18>
    stat = osErrorParameter;
  }
  else {
    stat = osOK;
    vTaskSuspend (hTask);
 8009b36:	f001 fd93 	bl	800b660 <vTaskSuspend>
    stat = osOK;
 8009b3a:	4620      	mov	r0, r4
  }

  return (stat);
}
 8009b3c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8009b3e:	f06f 0005 	mvn.w	r0, #5
 8009b42:	e7fb      	b.n	8009b3c <osThreadSuspend+0x10>
    stat = osErrorParameter;
 8009b44:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8009b48:	e7f8      	b.n	8009b3c <osThreadSuspend+0x10>

08009b4a <osThreadResume>:

osStatus_t osThreadResume (osThreadId_t thread_id) {
 8009b4a:	b510      	push	{r4, lr}
 8009b4c:	f3ef 8405 	mrs	r4, IPSR
  TaskHandle_t hTask = (TaskHandle_t)thread_id;
  osStatus_t stat;

  if (IS_IRQ()) {
 8009b50:	b924      	cbnz	r4, 8009b5c <osThreadResume+0x12>
    stat = osErrorISR;
  }
  else if (hTask == NULL) {
 8009b52:	b130      	cbz	r0, 8009b62 <osThreadResume+0x18>
    stat = osErrorParameter;
  }
  else {
    stat = osOK;
    vTaskResume (hTask);
 8009b54:	f001 fb86 	bl	800b264 <vTaskResume>
    stat = osOK;
 8009b58:	4620      	mov	r0, r4
  }

  return (stat);
}
 8009b5a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8009b5c:	f06f 0005 	mvn.w	r0, #5
 8009b60:	e7fb      	b.n	8009b5a <osThreadResume+0x10>
    stat = osErrorParameter;
 8009b62:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8009b66:	e7f8      	b.n	8009b5a <osThreadResume+0x10>

08009b68 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8009b68:	b508      	push	{r3, lr}
 8009b6a:	f3ef 8205 	mrs	r2, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8009b6e:	b922      	cbnz	r2, 8009b7a <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8009b70:	b108      	cbz	r0, 8009b76 <osDelay+0xe>
      vTaskDelay(ticks);
 8009b72:	f001 fd17 	bl	800b5a4 <vTaskDelay>
    stat = osOK;
 8009b76:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8009b78:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 8009b7a:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 8009b7e:	e7fb      	b.n	8009b78 <osDelay+0x10>

08009b80 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8009b80:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009b82:	4604      	mov	r4, r0
 8009b84:	460e      	mov	r6, r1
 8009b86:	4615      	mov	r5, r2
 8009b88:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8009b8c:	b942      	cbnz	r2, 8009ba0 <osSemaphoreNew+0x20>
 8009b8e:	b138      	cbz	r0, 8009ba0 <osSemaphoreNew+0x20>
 8009b90:	4288      	cmp	r0, r1
 8009b92:	d305      	bcc.n	8009ba0 <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 8009b94:	b155      	cbz	r5, 8009bac <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8009b96:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8009b9a:	b12b      	cbz	r3, 8009ba8 <osSemaphoreNew+0x28>
 8009b9c:	2f4f      	cmp	r7, #79	@ 0x4f
 8009b9e:	d822      	bhi.n	8009be6 <osSemaphoreNew+0x66>
  hSemaphore = NULL;
 8009ba0:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8009ba2:	4620      	mov	r0, r4
 8009ba4:	b003      	add	sp, #12
 8009ba6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8009ba8:	2f00      	cmp	r7, #0
 8009baa:	d1f9      	bne.n	8009ba0 <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 8009bac:	2c01      	cmp	r4, #1
 8009bae:	d00c      	beq.n	8009bca <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8009bb0:	4620      	mov	r0, r4
 8009bb2:	4631      	mov	r1, r6
 8009bb4:	f000 fd86 	bl	800a6c4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8009bb8:	4604      	mov	r4, r0
 8009bba:	2800      	cmp	r0, #0
 8009bbc:	d0f0      	beq.n	8009ba0 <osSemaphoreNew+0x20>
        if (attr != NULL) {
 8009bbe:	b985      	cbnz	r5, 8009be2 <osSemaphoreNew+0x62>
        vQueueAddToRegistry (hSemaphore, name);
 8009bc0:	4629      	mov	r1, r5
 8009bc2:	4620      	mov	r0, r4
 8009bc4:	f001 f8c4 	bl	800ad50 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8009bc8:	e7eb      	b.n	8009ba2 <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 8009bca:	2203      	movs	r2, #3
 8009bcc:	2100      	movs	r1, #0
 8009bce:	2001      	movs	r0, #1
 8009bd0:	f000 fd2f 	bl	800a632 <xQueueGenericCreate>
 8009bd4:	e00e      	b.n	8009bf4 <osSemaphoreNew+0x74>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8009bd6:	461a      	mov	r2, r3
 8009bd8:	f000 fd52 	bl	800a680 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8009bdc:	4604      	mov	r4, r0
 8009bde:	2800      	cmp	r0, #0
 8009be0:	d0de      	beq.n	8009ba0 <osSemaphoreNew+0x20>
          name = attr->name;
 8009be2:	682d      	ldr	r5, [r5, #0]
 8009be4:	e7ec      	b.n	8009bc0 <osSemaphoreNew+0x40>
      if (max_count == 1U) {
 8009be6:	2801      	cmp	r0, #1
 8009be8:	d1f5      	bne.n	8009bd6 <osSemaphoreNew+0x56>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8009bea:	2103      	movs	r1, #3
 8009bec:	9100      	str	r1, [sp, #0]
 8009bee:	4611      	mov	r1, r2
 8009bf0:	f000 fcd1 	bl	800a596 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8009bf4:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8009bf6:	2800      	cmp	r0, #0
 8009bf8:	d0d2      	beq.n	8009ba0 <osSemaphoreNew+0x20>
 8009bfa:	2e00      	cmp	r6, #0
 8009bfc:	d0df      	beq.n	8009bbe <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8009bfe:	2300      	movs	r3, #0
 8009c00:	461a      	mov	r2, r3
 8009c02:	4619      	mov	r1, r3
 8009c04:	f000 fd7c 	bl	800a700 <xQueueGenericSend>
 8009c08:	2801      	cmp	r0, #1
 8009c0a:	d0d8      	beq.n	8009bbe <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 8009c0c:	4620      	mov	r0, r4
 8009c0e:	f001 f8c9 	bl	800ada4 <vQueueDelete>
      if (hSemaphore != NULL) {
 8009c12:	e7c5      	b.n	8009ba0 <osSemaphoreNew+0x20>

08009c14 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8009c14:	b513      	push	{r0, r1, r4, lr}
 8009c16:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8009c18:	b328      	cbz	r0, 8009c66 <osSemaphoreAcquire+0x52>
 8009c1a:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8009c1e:	b1cb      	cbz	r3, 8009c54 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 8009c20:	bb09      	cbnz	r1, 8009c66 <osSemaphoreAcquire+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8009c22:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8009c24:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8009c26:	f001 f826 	bl	800ac76 <xQueueReceiveFromISR>
 8009c2a:	2801      	cmp	r0, #1
 8009c2c:	d003      	beq.n	8009c36 <osSemaphoreAcquire+0x22>
        stat = osErrorResource;
 8009c2e:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8009c32:	b002      	add	sp, #8
 8009c34:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8009c36:	9b01      	ldr	r3, [sp, #4]
 8009c38:	b90b      	cbnz	r3, 8009c3e <osSemaphoreAcquire+0x2a>
  stat = osOK;
 8009c3a:	2000      	movs	r0, #0
 8009c3c:	e7f9      	b.n	8009c32 <osSemaphoreAcquire+0x1e>
        portYIELD_FROM_ISR (yield);
 8009c3e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009c42:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009c46:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009c4a:	f3bf 8f4f 	dsb	sy
 8009c4e:	f3bf 8f6f 	isb	sy
 8009c52:	e7f2      	b.n	8009c3a <osSemaphoreAcquire+0x26>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8009c54:	f000 ff52 	bl	800aafc <xQueueSemaphoreTake>
 8009c58:	2801      	cmp	r0, #1
 8009c5a:	d0ee      	beq.n	8009c3a <osSemaphoreAcquire+0x26>
      if (timeout != 0U) {
 8009c5c:	2c00      	cmp	r4, #0
 8009c5e:	d0e6      	beq.n	8009c2e <osSemaphoreAcquire+0x1a>
        stat = osErrorTimeout;
 8009c60:	f06f 0001 	mvn.w	r0, #1
 8009c64:	e7e5      	b.n	8009c32 <osSemaphoreAcquire+0x1e>
    stat = osErrorParameter;
 8009c66:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8009c6a:	e7e2      	b.n	8009c32 <osSemaphoreAcquire+0x1e>

08009c6c <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8009c6c:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8009c6e:	b318      	cbz	r0, 8009cb8 <osSemaphoreRelease+0x4c>
 8009c70:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8009c74:	b1cb      	cbz	r3, 8009caa <osSemaphoreRelease+0x3e>
    yield = pdFALSE;
 8009c76:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8009c78:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8009c7a:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8009c7c:	f000 fe4f 	bl	800a91e <xQueueGiveFromISR>
 8009c80:	2801      	cmp	r0, #1
 8009c82:	d004      	beq.n	8009c8e <osSemaphoreRelease+0x22>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8009c84:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 8009c88:	b003      	add	sp, #12
 8009c8a:	f85d fb04 	ldr.w	pc, [sp], #4
      portYIELD_FROM_ISR (yield);
 8009c8e:	9b01      	ldr	r3, [sp, #4]
 8009c90:	b14b      	cbz	r3, 8009ca6 <osSemaphoreRelease+0x3a>
 8009c92:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009c96:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009c9a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009c9e:	f3bf 8f4f 	dsb	sy
 8009ca2:	f3bf 8f6f 	isb	sy
  stat = osOK;
 8009ca6:	2000      	movs	r0, #0
 8009ca8:	e7ee      	b.n	8009c88 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8009caa:	461a      	mov	r2, r3
 8009cac:	4619      	mov	r1, r3
 8009cae:	f000 fd27 	bl	800a700 <xQueueGenericSend>
 8009cb2:	2801      	cmp	r0, #1
 8009cb4:	d0f7      	beq.n	8009ca6 <osSemaphoreRelease+0x3a>
 8009cb6:	e7e5      	b.n	8009c84 <osSemaphoreRelease+0x18>
    stat = osErrorParameter;
 8009cb8:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8009cbc:	e7e4      	b.n	8009c88 <osSemaphoreRelease+0x1c>

08009cbe <osSemaphoreGetCount>:

uint32_t osSemaphoreGetCount (osSemaphoreId_t semaphore_id) {
  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;
  uint32_t count;

  if (hSemaphore == NULL) {
 8009cbe:	b130      	cbz	r0, 8009cce <osSemaphoreGetCount+0x10>
 8009cc0:	f3ef 8305 	mrs	r3, IPSR
    count = 0U;
  }
  else if (IS_IRQ()) {
 8009cc4:	b10b      	cbz	r3, 8009cca <osSemaphoreGetCount+0xc>
    count = uxQueueMessagesWaitingFromISR (hSemaphore);
 8009cc6:	f001 b836 	b.w	800ad36 <uxQueueMessagesWaitingFromISR>
  } else {
    count = (uint32_t)uxSemaphoreGetCount (hSemaphore);
 8009cca:	f001 b821 	b.w	800ad10 <uxQueueMessagesWaiting>
  }

  return (count);
}
 8009cce:	4770      	bx	lr

08009cd0 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8009cd0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009cd2:	4605      	mov	r5, r0
 8009cd4:	460e      	mov	r6, r1
 8009cd6:	4614      	mov	r4, r2
 8009cd8:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8009cdc:	b11f      	cbz	r7, 8009ce6 <osMessageQueueNew+0x16>
  hQueue = NULL;
 8009cde:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8009ce0:	4628      	mov	r0, r5
 8009ce2:	b003      	add	sp, #12
 8009ce4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8009ce6:	2800      	cmp	r0, #0
 8009ce8:	d0f9      	beq.n	8009cde <osMessageQueueNew+0xe>
 8009cea:	2900      	cmp	r1, #0
 8009cec:	d0f7      	beq.n	8009cde <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8009cee:	b1da      	cbz	r2, 8009d28 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8009cf0:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8009cf4:	b183      	cbz	r3, 8009d18 <osMessageQueueNew+0x48>
 8009cf6:	2a4f      	cmp	r2, #79	@ 0x4f
 8009cf8:	d9f1      	bls.n	8009cde <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8009cfa:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8009cfc:	2a00      	cmp	r2, #0
 8009cfe:	d0ee      	beq.n	8009cde <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8009d00:	6966      	ldr	r6, [r4, #20]
 8009d02:	434d      	muls	r5, r1
 8009d04:	42ae      	cmp	r6, r5
 8009d06:	d3ea      	bcc.n	8009cde <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8009d08:	9700      	str	r7, [sp, #0]
 8009d0a:	f000 fc44 	bl	800a596 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8009d0e:	4605      	mov	r5, r0
 8009d10:	2800      	cmp	r0, #0
 8009d12:	d0e4      	beq.n	8009cde <osMessageQueueNew+0xe>
        name = attr->name;
 8009d14:	6824      	ldr	r4, [r4, #0]
 8009d16:	e011      	b.n	8009d3c <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8009d18:	2a00      	cmp	r2, #0
 8009d1a:	d1e0      	bne.n	8009cde <osMessageQueueNew+0xe>
 8009d1c:	6923      	ldr	r3, [r4, #16]
 8009d1e:	2b00      	cmp	r3, #0
 8009d20:	d1dd      	bne.n	8009cde <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8009d22:	6963      	ldr	r3, [r4, #20]
 8009d24:	2b00      	cmp	r3, #0
 8009d26:	d1da      	bne.n	8009cde <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8009d28:	4628      	mov	r0, r5
 8009d2a:	2200      	movs	r2, #0
 8009d2c:	4631      	mov	r1, r6
 8009d2e:	f000 fc80 	bl	800a632 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8009d32:	4605      	mov	r5, r0
 8009d34:	2800      	cmp	r0, #0
 8009d36:	d0d2      	beq.n	8009cde <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8009d38:	2c00      	cmp	r4, #0
 8009d3a:	d1eb      	bne.n	8009d14 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8009d3c:	4621      	mov	r1, r4
 8009d3e:	4628      	mov	r0, r5
 8009d40:	f001 f806 	bl	800ad50 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8009d44:	e7cc      	b.n	8009ce0 <osMessageQueueNew+0x10>

08009d46 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8009d46:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009d48:	461c      	mov	r4, r3
 8009d4a:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8009d4e:	b1de      	cbz	r6, 8009d88 <osMessageQueuePut+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8009d50:	b338      	cbz	r0, 8009da2 <osMessageQueuePut+0x5c>
 8009d52:	b331      	cbz	r1, 8009da2 <osMessageQueuePut+0x5c>
 8009d54:	bb2b      	cbnz	r3, 8009da2 <osMessageQueuePut+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8009d56:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8009d58:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8009d5a:	f000 fd83 	bl	800a864 <xQueueGenericSendFromISR>
 8009d5e:	2801      	cmp	r0, #1
 8009d60:	d003      	beq.n	8009d6a <osMessageQueuePut+0x24>
        stat = osErrorResource;
 8009d62:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8009d66:	b002      	add	sp, #8
 8009d68:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8009d6a:	9b01      	ldr	r3, [sp, #4]
 8009d6c:	b90b      	cbnz	r3, 8009d72 <osMessageQueuePut+0x2c>
  stat = osOK;
 8009d6e:	2000      	movs	r0, #0
 8009d70:	e7f9      	b.n	8009d66 <osMessageQueuePut+0x20>
        portYIELD_FROM_ISR (yield);
 8009d72:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009d76:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009d7a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009d7e:	f3bf 8f4f 	dsb	sy
 8009d82:	f3bf 8f6f 	isb	sy
 8009d86:	e7f2      	b.n	8009d6e <osMessageQueuePut+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8009d88:	b158      	cbz	r0, 8009da2 <osMessageQueuePut+0x5c>
 8009d8a:	b151      	cbz	r1, 8009da2 <osMessageQueuePut+0x5c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8009d8c:	4633      	mov	r3, r6
 8009d8e:	4622      	mov	r2, r4
 8009d90:	f000 fcb6 	bl	800a700 <xQueueGenericSend>
 8009d94:	2801      	cmp	r0, #1
 8009d96:	d0ea      	beq.n	8009d6e <osMessageQueuePut+0x28>
        if (timeout != 0U) {
 8009d98:	2c00      	cmp	r4, #0
 8009d9a:	d0e2      	beq.n	8009d62 <osMessageQueuePut+0x1c>
          stat = osErrorTimeout;
 8009d9c:	f06f 0001 	mvn.w	r0, #1
 8009da0:	e7e1      	b.n	8009d66 <osMessageQueuePut+0x20>
      stat = osErrorParameter;
 8009da2:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8009da6:	e7de      	b.n	8009d66 <osMessageQueuePut+0x20>

08009da8 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8009da8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009daa:	461c      	mov	r4, r3
 8009dac:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8009db0:	b1db      	cbz	r3, 8009dea <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8009db2:	b330      	cbz	r0, 8009e02 <osMessageQueueGet+0x5a>
 8009db4:	b329      	cbz	r1, 8009e02 <osMessageQueueGet+0x5a>
 8009db6:	bb24      	cbnz	r4, 8009e02 <osMessageQueueGet+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8009db8:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8009dba:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8009dbc:	f000 ff5b 	bl	800ac76 <xQueueReceiveFromISR>
 8009dc0:	2801      	cmp	r0, #1
 8009dc2:	d003      	beq.n	8009dcc <osMessageQueueGet+0x24>
        stat = osErrorResource;
 8009dc4:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8009dc8:	b003      	add	sp, #12
 8009dca:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8009dcc:	9b01      	ldr	r3, [sp, #4]
 8009dce:	b90b      	cbnz	r3, 8009dd4 <osMessageQueueGet+0x2c>
  stat = osOK;
 8009dd0:	2000      	movs	r0, #0
 8009dd2:	e7f9      	b.n	8009dc8 <osMessageQueueGet+0x20>
        portYIELD_FROM_ISR (yield);
 8009dd4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009dd8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009ddc:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009de0:	f3bf 8f4f 	dsb	sy
 8009de4:	f3bf 8f6f 	isb	sy
 8009de8:	e7f2      	b.n	8009dd0 <osMessageQueueGet+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8009dea:	b150      	cbz	r0, 8009e02 <osMessageQueueGet+0x5a>
 8009dec:	b149      	cbz	r1, 8009e02 <osMessageQueueGet+0x5a>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8009dee:	4622      	mov	r2, r4
 8009df0:	f000 fde6 	bl	800a9c0 <xQueueReceive>
 8009df4:	2801      	cmp	r0, #1
 8009df6:	d0eb      	beq.n	8009dd0 <osMessageQueueGet+0x28>
        if (timeout != 0U) {
 8009df8:	2c00      	cmp	r4, #0
 8009dfa:	d0e3      	beq.n	8009dc4 <osMessageQueueGet+0x1c>
          stat = osErrorTimeout;
 8009dfc:	f06f 0001 	mvn.w	r0, #1
 8009e00:	e7e2      	b.n	8009dc8 <osMessageQueueGet+0x20>
      stat = osErrorParameter;
 8009e02:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8009e06:	e7df      	b.n	8009dc8 <osMessageQueueGet+0x20>

08009e08 <osMessageQueueGetCount>:
  }

  return (size);
}

uint32_t osMessageQueueGetCount (osMessageQueueId_t mq_id) {
 8009e08:	f7ff bf59 	b.w	8009cbe <osSemaphoreGetCount>

08009e0c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8009e0c:	4b03      	ldr	r3, [pc, #12]	@ (8009e1c <vApplicationGetIdleTaskMemory+0x10>)
 8009e0e:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8009e10:	4b03      	ldr	r3, [pc, #12]	@ (8009e20 <vApplicationGetIdleTaskMemory+0x14>)
 8009e12:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8009e14:	2380      	movs	r3, #128	@ 0x80
 8009e16:	6013      	str	r3, [r2, #0]
}
 8009e18:	4770      	bx	lr
 8009e1a:	bf00      	nop
 8009e1c:	20004b38 	.word	0x20004b38
 8009e20:	20004938 	.word	0x20004938

08009e24 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8009e24:	4b03      	ldr	r3, [pc, #12]	@ (8009e34 <vApplicationGetTimerTaskMemory+0x10>)
 8009e26:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8009e28:	4b03      	ldr	r3, [pc, #12]	@ (8009e38 <vApplicationGetTimerTaskMemory+0x14>)
 8009e2a:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8009e2c:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8009e30:	6013      	str	r3, [r2, #0]
}
 8009e32:	4770      	bx	lr
 8009e34:	200048d8 	.word	0x200048d8
 8009e38:	200044d8 	.word	0x200044d8

08009e3c <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8009e3c:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8009e3e:	4b10      	ldr	r3, [pc, #64]	@ (8009e80 <prvInsertBlockIntoFreeList+0x44>)
 8009e40:	461a      	mov	r2, r3
 8009e42:	681b      	ldr	r3, [r3, #0]
 8009e44:	4283      	cmp	r3, r0
 8009e46:	d3fb      	bcc.n	8009e40 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8009e48:	6854      	ldr	r4, [r2, #4]
 8009e4a:	1911      	adds	r1, r2, r4
 8009e4c:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8009e4e:	bf01      	itttt	eq
 8009e50:	6841      	ldreq	r1, [r0, #4]
		pxBlockToInsert = pxIterator;
 8009e52:	4610      	moveq	r0, r2
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8009e54:	1909      	addeq	r1, r1, r4
 8009e56:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8009e58:	6844      	ldr	r4, [r0, #4]
 8009e5a:	1901      	adds	r1, r0, r4
 8009e5c:	428b      	cmp	r3, r1
 8009e5e:	d10c      	bne.n	8009e7a <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8009e60:	4908      	ldr	r1, [pc, #32]	@ (8009e84 <prvInsertBlockIntoFreeList+0x48>)
 8009e62:	6809      	ldr	r1, [r1, #0]
 8009e64:	428b      	cmp	r3, r1
 8009e66:	d003      	beq.n	8009e70 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8009e68:	6859      	ldr	r1, [r3, #4]
 8009e6a:	4421      	add	r1, r4
 8009e6c:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8009e6e:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 8009e70:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8009e72:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8009e74:	bf18      	it	ne
 8009e76:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8009e78:	bd10      	pop	{r4, pc}
 8009e7a:	4619      	mov	r1, r3
 8009e7c:	e7f8      	b.n	8009e70 <prvInsertBlockIntoFreeList+0x34>
 8009e7e:	bf00      	nop
 8009e80:	20004bb4 	.word	0x20004bb4
 8009e84:	20004bb0 	.word	0x20004bb0

08009e88 <pvPortMalloc>:
{
 8009e88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009e8c:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8009e8e:	f001 fa71 	bl	800b374 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8009e92:	4942      	ldr	r1, [pc, #264]	@ (8009f9c <pvPortMalloc+0x114>)
 8009e94:	4d42      	ldr	r5, [pc, #264]	@ (8009fa0 <pvPortMalloc+0x118>)
 8009e96:	680b      	ldr	r3, [r1, #0]
 8009e98:	bb0b      	cbnz	r3, 8009ede <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8009e9a:	4a42      	ldr	r2, [pc, #264]	@ (8009fa4 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8009e9c:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8009e9e:	bf1f      	itttt	ne
 8009ea0:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8009ea2:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8009ea6:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
 8009eaa:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8009eac:	bf0c      	ite	eq
 8009eae:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8009eb2:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8009eb4:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8009eb6:	4e3c      	ldr	r6, [pc, #240]	@ (8009fa8 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 8009eb8:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8009eba:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 8009ebe:	2000      	movs	r0, #0
 8009ec0:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8009ec2:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8009ec4:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8009ec8:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8009eca:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 8009ece:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8009ed0:	4b36      	ldr	r3, [pc, #216]	@ (8009fac <pvPortMalloc+0x124>)
 8009ed2:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8009ed4:	4b36      	ldr	r3, [pc, #216]	@ (8009fb0 <pvPortMalloc+0x128>)
 8009ed6:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8009ed8:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8009edc:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8009ede:	682e      	ldr	r6, [r5, #0]
 8009ee0:	4226      	tst	r6, r4
 8009ee2:	d155      	bne.n	8009f90 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 8009ee4:	2c00      	cmp	r4, #0
 8009ee6:	d046      	beq.n	8009f76 <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8009ee8:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8009eec:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8009eee:	bf1c      	itt	ne
 8009ef0:	f023 0307 	bicne.w	r3, r3, #7
 8009ef4:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8009ef6:	2b00      	cmp	r3, #0
 8009ef8:	d04a      	beq.n	8009f90 <pvPortMalloc+0x108>
 8009efa:	4f2d      	ldr	r7, [pc, #180]	@ (8009fb0 <pvPortMalloc+0x128>)
 8009efc:	683c      	ldr	r4, [r7, #0]
 8009efe:	429c      	cmp	r4, r3
 8009f00:	d346      	bcc.n	8009f90 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 8009f02:	4a29      	ldr	r2, [pc, #164]	@ (8009fa8 <pvPortMalloc+0x120>)
 8009f04:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8009f06:	6868      	ldr	r0, [r5, #4]
 8009f08:	4298      	cmp	r0, r3
 8009f0a:	d204      	bcs.n	8009f16 <pvPortMalloc+0x8e>
 8009f0c:	f8d5 c000 	ldr.w	ip, [r5]
 8009f10:	f1bc 0f00 	cmp.w	ip, #0
 8009f14:	d115      	bne.n	8009f42 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8009f16:	6809      	ldr	r1, [r1, #0]
 8009f18:	42a9      	cmp	r1, r5
 8009f1a:	d039      	beq.n	8009f90 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8009f1c:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8009f1e:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8009f22:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8009f24:	1ac2      	subs	r2, r0, r3
 8009f26:	2a10      	cmp	r2, #16
 8009f28:	d912      	bls.n	8009f50 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8009f2a:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8009f2c:	0741      	lsls	r1, r0, #29
 8009f2e:	d00b      	beq.n	8009f48 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8009f30:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009f34:	f383 8811 	msr	BASEPRI, r3
 8009f38:	f3bf 8f6f 	isb	sy
 8009f3c:	f3bf 8f4f 	dsb	sy
 8009f40:	e7fe      	b.n	8009f40 <pvPortMalloc+0xb8>
					pxPreviousBlock = pxBlock;
 8009f42:	462a      	mov	r2, r5
					pxBlock = pxBlock->pxNextFreeBlock;
 8009f44:	4665      	mov	r5, ip
 8009f46:	e7de      	b.n	8009f06 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8009f48:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8009f4a:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8009f4c:	f7ff ff76 	bl	8009e3c <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8009f50:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8009f52:	4916      	ldr	r1, [pc, #88]	@ (8009fac <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8009f54:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8009f56:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 8009f58:	4a16      	ldr	r2, [pc, #88]	@ (8009fb4 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8009f5a:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8009f5c:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 8009f5e:	2300      	movs	r3, #0
 8009f60:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8009f62:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8009f64:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8009f66:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 8009f68:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8009f6c:	bf38      	it	cc
 8009f6e:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 8009f70:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8009f72:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 8009f76:	f001 faa1 	bl	800b4bc <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8009f7a:	0763      	lsls	r3, r4, #29
 8009f7c:	d00a      	beq.n	8009f94 <pvPortMalloc+0x10c>
 8009f7e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009f82:	f383 8811 	msr	BASEPRI, r3
 8009f86:	f3bf 8f6f 	isb	sy
 8009f8a:	f3bf 8f4f 	dsb	sy
 8009f8e:	e7fe      	b.n	8009f8e <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8009f90:	2400      	movs	r4, #0
 8009f92:	e7f0      	b.n	8009f76 <pvPortMalloc+0xee>
}
 8009f94:	4620      	mov	r0, r4
 8009f96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009f9a:	bf00      	nop
 8009f9c:	20004bb0 	.word	0x20004bb0
 8009fa0:	20004b9c 	.word	0x20004b9c
 8009fa4:	20004bbc 	.word	0x20004bbc
 8009fa8:	20004bb4 	.word	0x20004bb4
 8009fac:	20004ba8 	.word	0x20004ba8
 8009fb0:	20004bac 	.word	0x20004bac
 8009fb4:	20004ba4 	.word	0x20004ba4

08009fb8 <vPortFree>:
{
 8009fb8:	b510      	push	{r4, lr}
	if( pv != NULL )
 8009fba:	4604      	mov	r4, r0
 8009fbc:	b390      	cbz	r0, 800a024 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8009fbe:	4a1a      	ldr	r2, [pc, #104]	@ (800a028 <vPortFree+0x70>)
 8009fc0:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8009fc4:	6812      	ldr	r2, [r2, #0]
 8009fc6:	4213      	tst	r3, r2
 8009fc8:	d108      	bne.n	8009fdc <vPortFree+0x24>
 8009fca:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009fce:	f383 8811 	msr	BASEPRI, r3
 8009fd2:	f3bf 8f6f 	isb	sy
 8009fd6:	f3bf 8f4f 	dsb	sy
 8009fda:	e7fe      	b.n	8009fda <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8009fdc:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8009fe0:	b141      	cbz	r1, 8009ff4 <vPortFree+0x3c>
 8009fe2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009fe6:	f383 8811 	msr	BASEPRI, r3
 8009fea:	f3bf 8f6f 	isb	sy
 8009fee:	f3bf 8f4f 	dsb	sy
 8009ff2:	e7fe      	b.n	8009ff2 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8009ff4:	ea23 0302 	bic.w	r3, r3, r2
 8009ff8:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8009ffc:	f001 f9ba 	bl	800b374 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800a000:	4a0a      	ldr	r2, [pc, #40]	@ (800a02c <vPortFree+0x74>)
 800a002:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a006:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800a008:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800a00c:	440b      	add	r3, r1
 800a00e:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800a010:	f7ff ff14 	bl	8009e3c <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 800a014:	4a06      	ldr	r2, [pc, #24]	@ (800a030 <vPortFree+0x78>)
 800a016:	6813      	ldr	r3, [r2, #0]
}
 800a018:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 800a01c:	3301      	adds	r3, #1
 800a01e:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 800a020:	f001 ba4c 	b.w	800b4bc <xTaskResumeAll>
}
 800a024:	bd10      	pop	{r4, pc}
 800a026:	bf00      	nop
 800a028:	20004b9c 	.word	0x20004b9c
 800a02c:	20004bac 	.word	0x20004bac
 800a030:	20004ba0 	.word	0x20004ba0

0800a034 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a034:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800a038:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a03c:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a040:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a042:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800a044:	2300      	movs	r3, #0
 800a046:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800a048:	4770      	bx	lr

0800a04a <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800a04a:	2300      	movs	r3, #0
 800a04c:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800a04e:	4770      	bx	lr

0800a050 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800a050:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800a052:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800a054:	689a      	ldr	r2, [r3, #8]
 800a056:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800a058:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800a05a:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800a05c:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800a05e:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800a060:	3301      	adds	r3, #1
 800a062:	6003      	str	r3, [r0, #0]
}
 800a064:	4770      	bx	lr

0800a066 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800a066:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800a068:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800a06a:	1c63      	adds	r3, r4, #1
 800a06c:	d10a      	bne.n	800a084 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800a06e:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800a070:	685a      	ldr	r2, [r3, #4]
 800a072:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800a074:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800a076:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800a078:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800a07a:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800a07c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800a07e:	3301      	adds	r3, #1
 800a080:	6003      	str	r3, [r0, #0]
}
 800a082:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800a084:	f100 0208 	add.w	r2, r0, #8
 800a088:	4613      	mov	r3, r2
 800a08a:	6852      	ldr	r2, [r2, #4]
 800a08c:	6815      	ldr	r5, [r2, #0]
 800a08e:	42a5      	cmp	r5, r4
 800a090:	d9fa      	bls.n	800a088 <vListInsert+0x22>
 800a092:	e7ed      	b.n	800a070 <vListInsert+0xa>

0800a094 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800a094:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800a098:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800a09a:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800a09c:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800a09e:	6859      	ldr	r1, [r3, #4]
 800a0a0:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800a0a2:	bf08      	it	eq
 800a0a4:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800a0a6:	2200      	movs	r2, #0
 800a0a8:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800a0aa:	681a      	ldr	r2, [r3, #0]
 800a0ac:	3a01      	subs	r2, #1
 800a0ae:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800a0b0:	6818      	ldr	r0, [r3, #0]
}
 800a0b2:	4770      	bx	lr

0800a0b4 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800a0b4:	4808      	ldr	r0, [pc, #32]	@ (800a0d8 <prvPortStartFirstTask+0x24>)
 800a0b6:	6800      	ldr	r0, [r0, #0]
 800a0b8:	6800      	ldr	r0, [r0, #0]
 800a0ba:	f380 8808 	msr	MSP, r0
 800a0be:	f04f 0000 	mov.w	r0, #0
 800a0c2:	f380 8814 	msr	CONTROL, r0
 800a0c6:	b662      	cpsie	i
 800a0c8:	b661      	cpsie	f
 800a0ca:	f3bf 8f4f 	dsb	sy
 800a0ce:	f3bf 8f6f 	isb	sy
 800a0d2:	df00      	svc	0
 800a0d4:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800a0d6:	0000      	.short	0x0000
 800a0d8:	e000ed08 	.word	0xe000ed08

0800a0dc <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800a0dc:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 800a0ec <vPortEnableVFP+0x10>
 800a0e0:	6801      	ldr	r1, [r0, #0]
 800a0e2:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800a0e6:	6001      	str	r1, [r0, #0]
 800a0e8:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800a0ea:	0000      	.short	0x0000
 800a0ec:	e000ed88 	.word	0xe000ed88

0800a0f0 <prvTaskExitError>:
{
 800a0f0:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800a0f2:	2300      	movs	r3, #0
 800a0f4:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800a0f6:	4b0d      	ldr	r3, [pc, #52]	@ (800a12c <prvTaskExitError+0x3c>)
 800a0f8:	681b      	ldr	r3, [r3, #0]
 800a0fa:	3301      	adds	r3, #1
 800a0fc:	d008      	beq.n	800a110 <prvTaskExitError+0x20>
 800a0fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a102:	f383 8811 	msr	BASEPRI, r3
 800a106:	f3bf 8f6f 	isb	sy
 800a10a:	f3bf 8f4f 	dsb	sy
 800a10e:	e7fe      	b.n	800a10e <prvTaskExitError+0x1e>
 800a110:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a114:	f383 8811 	msr	BASEPRI, r3
 800a118:	f3bf 8f6f 	isb	sy
 800a11c:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800a120:	9b01      	ldr	r3, [sp, #4]
 800a122:	2b00      	cmp	r3, #0
 800a124:	d0fc      	beq.n	800a120 <prvTaskExitError+0x30>
}
 800a126:	b002      	add	sp, #8
 800a128:	4770      	bx	lr
 800a12a:	bf00      	nop
 800a12c:	20000080 	.word	0x20000080

0800a130 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800a130:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 800a134:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800a138:	4b07      	ldr	r3, [pc, #28]	@ (800a158 <pxPortInitialiseStack+0x28>)
 800a13a:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800a13e:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800a142:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800a146:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800a14a:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800a14e:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800a152:	3844      	subs	r0, #68	@ 0x44
 800a154:	4770      	bx	lr
 800a156:	bf00      	nop
 800a158:	0800a0f1 	.word	0x0800a0f1
 800a15c:	00000000 	.word	0x00000000

0800a160 <SVC_Handler>:
	__asm volatile (
 800a160:	4b07      	ldr	r3, [pc, #28]	@ (800a180 <pxCurrentTCBConst2>)
 800a162:	6819      	ldr	r1, [r3, #0]
 800a164:	6808      	ldr	r0, [r1, #0]
 800a166:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a16a:	f380 8809 	msr	PSP, r0
 800a16e:	f3bf 8f6f 	isb	sy
 800a172:	f04f 0000 	mov.w	r0, #0
 800a176:	f380 8811 	msr	BASEPRI, r0
 800a17a:	4770      	bx	lr
 800a17c:	f3af 8000 	nop.w

0800a180 <pxCurrentTCBConst2>:
 800a180:	200150fc 	.word	0x200150fc

0800a184 <vPortEnterCritical>:
 800a184:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a188:	f383 8811 	msr	BASEPRI, r3
 800a18c:	f3bf 8f6f 	isb	sy
 800a190:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800a194:	4a0a      	ldr	r2, [pc, #40]	@ (800a1c0 <vPortEnterCritical+0x3c>)
 800a196:	6813      	ldr	r3, [r2, #0]
 800a198:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800a19a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800a19c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800a19e:	d10e      	bne.n	800a1be <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800a1a0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800a1a4:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 800a1a8:	b2db      	uxtb	r3, r3
 800a1aa:	b143      	cbz	r3, 800a1be <vPortEnterCritical+0x3a>
 800a1ac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a1b0:	f383 8811 	msr	BASEPRI, r3
 800a1b4:	f3bf 8f6f 	isb	sy
 800a1b8:	f3bf 8f4f 	dsb	sy
 800a1bc:	e7fe      	b.n	800a1bc <vPortEnterCritical+0x38>
}
 800a1be:	4770      	bx	lr
 800a1c0:	20000080 	.word	0x20000080

0800a1c4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800a1c4:	4a08      	ldr	r2, [pc, #32]	@ (800a1e8 <vPortExitCritical+0x24>)
 800a1c6:	6813      	ldr	r3, [r2, #0]
 800a1c8:	b943      	cbnz	r3, 800a1dc <vPortExitCritical+0x18>
 800a1ca:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a1ce:	f383 8811 	msr	BASEPRI, r3
 800a1d2:	f3bf 8f6f 	isb	sy
 800a1d6:	f3bf 8f4f 	dsb	sy
 800a1da:	e7fe      	b.n	800a1da <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800a1dc:	3b01      	subs	r3, #1
 800a1de:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800a1e0:	b90b      	cbnz	r3, 800a1e6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800a1e2:	f383 8811 	msr	BASEPRI, r3
}
 800a1e6:	4770      	bx	lr
 800a1e8:	20000080 	.word	0x20000080
 800a1ec:	00000000 	.word	0x00000000

0800a1f0 <PendSV_Handler>:
	__asm volatile
 800a1f0:	f3ef 8009 	mrs	r0, PSP
 800a1f4:	f3bf 8f6f 	isb	sy
 800a1f8:	4b15      	ldr	r3, [pc, #84]	@ (800a250 <pxCurrentTCBConst>)
 800a1fa:	681a      	ldr	r2, [r3, #0]
 800a1fc:	f01e 0f10 	tst.w	lr, #16
 800a200:	bf08      	it	eq
 800a202:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800a206:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a20a:	6010      	str	r0, [r2, #0]
 800a20c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800a210:	f04f 0050 	mov.w	r0, #80	@ 0x50
 800a214:	f380 8811 	msr	BASEPRI, r0
 800a218:	f3bf 8f4f 	dsb	sy
 800a21c:	f3bf 8f6f 	isb	sy
 800a220:	f001 f9e4 	bl	800b5ec <vTaskSwitchContext>
 800a224:	f04f 0000 	mov.w	r0, #0
 800a228:	f380 8811 	msr	BASEPRI, r0
 800a22c:	bc09      	pop	{r0, r3}
 800a22e:	6819      	ldr	r1, [r3, #0]
 800a230:	6808      	ldr	r0, [r1, #0]
 800a232:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a236:	f01e 0f10 	tst.w	lr, #16
 800a23a:	bf08      	it	eq
 800a23c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800a240:	f380 8809 	msr	PSP, r0
 800a244:	f3bf 8f6f 	isb	sy
 800a248:	4770      	bx	lr
 800a24a:	bf00      	nop
 800a24c:	f3af 8000 	nop.w

0800a250 <pxCurrentTCBConst>:
 800a250:	200150fc 	.word	0x200150fc

0800a254 <xPortSysTickHandler>:
{
 800a254:	b508      	push	{r3, lr}
	__asm volatile
 800a256:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a25a:	f383 8811 	msr	BASEPRI, r3
 800a25e:	f3bf 8f6f 	isb	sy
 800a262:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800a266:	f001 f893 	bl	800b390 <xTaskIncrementTick>
 800a26a:	b128      	cbz	r0, 800a278 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800a26c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800a270:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a274:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 800a278:	2300      	movs	r3, #0
 800a27a:	f383 8811 	msr	BASEPRI, r3
}
 800a27e:	bd08      	pop	{r3, pc}

0800a280 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800a280:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 800a284:	2300      	movs	r3, #0
 800a286:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800a288:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800a28a:	4b05      	ldr	r3, [pc, #20]	@ (800a2a0 <vPortSetupTimerInterrupt+0x20>)
 800a28c:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800a290:	681b      	ldr	r3, [r3, #0]
 800a292:	fbb3 f3f1 	udiv	r3, r3, r1
 800a296:	3b01      	subs	r3, #1
 800a298:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800a29a:	2307      	movs	r3, #7
 800a29c:	6113      	str	r3, [r2, #16]
}
 800a29e:	4770      	bx	lr
 800a2a0:	20000074 	.word	0x20000074

0800a2a4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800a2a4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 800a2a8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800a2aa:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 800a2ae:	4a38      	ldr	r2, [pc, #224]	@ (800a390 <xPortStartScheduler+0xec>)
 800a2b0:	4291      	cmp	r1, r2
 800a2b2:	d108      	bne.n	800a2c6 <xPortStartScheduler+0x22>
	__asm volatile
 800a2b4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a2b8:	f383 8811 	msr	BASEPRI, r3
 800a2bc:	f3bf 8f6f 	isb	sy
 800a2c0:	f3bf 8f4f 	dsb	sy
 800a2c4:	e7fe      	b.n	800a2c4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800a2c6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 800a2ca:	4b32      	ldr	r3, [pc, #200]	@ (800a394 <xPortStartScheduler+0xf0>)
 800a2cc:	429a      	cmp	r2, r3
 800a2ce:	d108      	bne.n	800a2e2 <xPortStartScheduler+0x3e>
 800a2d0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a2d4:	f383 8811 	msr	BASEPRI, r3
 800a2d8:	f3bf 8f6f 	isb	sy
 800a2dc:	f3bf 8f4f 	dsb	sy
 800a2e0:	e7fe      	b.n	800a2e0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800a2e2:	4b2d      	ldr	r3, [pc, #180]	@ (800a398 <xPortStartScheduler+0xf4>)
 800a2e4:	781a      	ldrb	r2, [r3, #0]
 800a2e6:	b2d2      	uxtb	r2, r2
 800a2e8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800a2ea:	22ff      	movs	r2, #255	@ 0xff
 800a2ec:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800a2ee:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800a2f0:	4a2a      	ldr	r2, [pc, #168]	@ (800a39c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800a2f2:	b2db      	uxtb	r3, r3
 800a2f4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800a2f8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800a2fc:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 800a300:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800a302:	4a27      	ldr	r2, [pc, #156]	@ (800a3a0 <xPortStartScheduler+0xfc>)
 800a304:	2307      	movs	r3, #7
 800a306:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800a308:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 800a30c:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800a30e:	0609      	lsls	r1, r1, #24
 800a310:	d40a      	bmi.n	800a328 <xPortStartScheduler+0x84>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800a312:	2b03      	cmp	r3, #3
 800a314:	d011      	beq.n	800a33a <xPortStartScheduler+0x96>
 800a316:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a31a:	f383 8811 	msr	BASEPRI, r3
 800a31e:	f3bf 8f6f 	isb	sy
 800a322:	f3bf 8f4f 	dsb	sy
 800a326:	e7fe      	b.n	800a326 <xPortStartScheduler+0x82>
			ulMaxPRIGROUPValue--;
 800a328:	3b01      	subs	r3, #1
 800a32a:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800a32c:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800a330:	005b      	lsls	r3, r3, #1
 800a332:	b2db      	uxtb	r3, r3
 800a334:	f88d 3003 	strb.w	r3, [sp, #3]
 800a338:	e7e6      	b.n	800a308 <xPortStartScheduler+0x64>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800a33a:	f44f 7340 	mov.w	r3, #768	@ 0x300
 800a33e:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800a340:	9b01      	ldr	r3, [sp, #4]
 800a342:	4a15      	ldr	r2, [pc, #84]	@ (800a398 <xPortStartScheduler+0xf4>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800a344:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800a348:	b2db      	uxtb	r3, r3
 800a34a:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800a34c:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800a350:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800a354:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800a358:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800a35c:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 800a360:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 800a364:	f7ff ff8c 	bl	800a280 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800a368:	4b0e      	ldr	r3, [pc, #56]	@ (800a3a4 <xPortStartScheduler+0x100>)
 800a36a:	2500      	movs	r5, #0
 800a36c:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800a36e:	f7ff feb5 	bl	800a0dc <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800a372:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 800a376:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 800a37a:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 800a37e:	f7ff fe99 	bl	800a0b4 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800a382:	f001 f933 	bl	800b5ec <vTaskSwitchContext>
	prvTaskExitError();
 800a386:	f7ff feb3 	bl	800a0f0 <prvTaskExitError>
}
 800a38a:	4628      	mov	r0, r5
 800a38c:	b003      	add	sp, #12
 800a38e:	bd30      	pop	{r4, r5, pc}
 800a390:	410fc271 	.word	0x410fc271
 800a394:	410fc270 	.word	0x410fc270
 800a398:	e000e400 	.word	0xe000e400
 800a39c:	20014bc0 	.word	0x20014bc0
 800a3a0:	20014bbc 	.word	0x20014bbc
 800a3a4:	20000080 	.word	0x20000080

0800a3a8 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800a3a8:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800a3ac:	2b0f      	cmp	r3, #15
 800a3ae:	d90e      	bls.n	800a3ce <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800a3b0:	4a11      	ldr	r2, [pc, #68]	@ (800a3f8 <vPortValidateInterruptPriority+0x50>)
 800a3b2:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800a3b4:	4a11      	ldr	r2, [pc, #68]	@ (800a3fc <vPortValidateInterruptPriority+0x54>)
 800a3b6:	7812      	ldrb	r2, [r2, #0]
 800a3b8:	429a      	cmp	r2, r3
 800a3ba:	d908      	bls.n	800a3ce <vPortValidateInterruptPriority+0x26>
 800a3bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a3c0:	f383 8811 	msr	BASEPRI, r3
 800a3c4:	f3bf 8f6f 	isb	sy
 800a3c8:	f3bf 8f4f 	dsb	sy
 800a3cc:	e7fe      	b.n	800a3cc <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800a3ce:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800a3d2:	4a0b      	ldr	r2, [pc, #44]	@ (800a400 <vPortValidateInterruptPriority+0x58>)
 800a3d4:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 800a3d8:	6812      	ldr	r2, [r2, #0]
 800a3da:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800a3de:	4293      	cmp	r3, r2
 800a3e0:	d908      	bls.n	800a3f4 <vPortValidateInterruptPriority+0x4c>
 800a3e2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a3e6:	f383 8811 	msr	BASEPRI, r3
 800a3ea:	f3bf 8f6f 	isb	sy
 800a3ee:	f3bf 8f4f 	dsb	sy
 800a3f2:	e7fe      	b.n	800a3f2 <vPortValidateInterruptPriority+0x4a>
	}
 800a3f4:	4770      	bx	lr
 800a3f6:	bf00      	nop
 800a3f8:	e000e3f0 	.word	0xe000e3f0
 800a3fc:	20014bc0 	.word	0x20014bc0
 800a400:	20014bbc 	.word	0x20014bbc

0800a404 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800a404:	b510      	push	{r4, lr}
 800a406:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800a408:	f7ff febc 	bl	800a184 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800a40c:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800a40e:	f7ff fed9 	bl	800a1c4 <vPortExitCritical>

	return xReturn;
}
 800a412:	fab4 f084 	clz	r0, r4
 800a416:	0940      	lsrs	r0, r0, #5
 800a418:	bd10      	pop	{r4, pc}

0800a41a <prvCopyDataToQueue>:
{
 800a41a:	b570      	push	{r4, r5, r6, lr}
 800a41c:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800a41e:	6c02      	ldr	r2, [r0, #64]	@ 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a420:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 800a422:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800a424:	b942      	cbnz	r2, 800a438 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800a426:	6806      	ldr	r6, [r0, #0]
 800a428:	b99e      	cbnz	r6, 800a452 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800a42a:	6880      	ldr	r0, [r0, #8]
 800a42c:	f001 fa86 	bl	800b93c <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800a430:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800a432:	3501      	adds	r5, #1
 800a434:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 800a436:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800a438:	b96e      	cbnz	r6, 800a456 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800a43a:	6840      	ldr	r0, [r0, #4]
 800a43c:	f01b fa11 	bl	8025862 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a440:	6863      	ldr	r3, [r4, #4]
 800a442:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800a444:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a446:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a448:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a44a:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800a44c:	bf24      	itt	cs
 800a44e:	6823      	ldrcs	r3, [r4, #0]
 800a450:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 800a452:	2000      	movs	r0, #0
 800a454:	e7ed      	b.n	800a432 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800a456:	68c0      	ldr	r0, [r0, #12]
 800a458:	f01b fa03 	bl	8025862 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800a45c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800a45e:	68e3      	ldr	r3, [r4, #12]
 800a460:	4251      	negs	r1, r2
 800a462:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a464:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800a466:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a468:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800a46a:	bf3e      	ittt	cc
 800a46c:	68a3      	ldrcc	r3, [r4, #8]
 800a46e:	185b      	addcc	r3, r3, r1
 800a470:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800a472:	2e02      	cmp	r6, #2
 800a474:	d1ed      	bne.n	800a452 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800a476:	b10d      	cbz	r5, 800a47c <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 800a478:	3d01      	subs	r5, #1
 800a47a:	e7ea      	b.n	800a452 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 800a47c:	4628      	mov	r0, r5
 800a47e:	e7d8      	b.n	800a432 <prvCopyDataToQueue+0x18>

0800a480 <prvCopyDataFromQueue>:
{
 800a480:	4603      	mov	r3, r0
 800a482:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800a484:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 800a486:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800a488:	b16a      	cbz	r2, 800a4a6 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a48a:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800a48c:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a48e:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800a490:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800a492:	bf28      	it	cs
 800a494:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a496:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800a498:	bf28      	it	cs
 800a49a:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800a49c:	68d9      	ldr	r1, [r3, #12]
}
 800a49e:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800a4a2:	f01b b9de 	b.w	8025862 <memcpy>
}
 800a4a6:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a4aa:	4770      	bx	lr

0800a4ac <prvUnlockQueue>:
{
 800a4ac:	b570      	push	{r4, r5, r6, lr}
 800a4ae:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800a4b0:	f7ff fe68 	bl	800a184 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800a4b4:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a4b8:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800a4bc:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800a4be:	2d00      	cmp	r5, #0
 800a4c0:	dd01      	ble.n	800a4c6 <prvUnlockQueue+0x1a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800a4c2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800a4c4:	b9b3      	cbnz	r3, 800a4f4 <prvUnlockQueue+0x48>
		pxQueue->cTxLock = queueUNLOCKED;
 800a4c6:	23ff      	movs	r3, #255	@ 0xff
 800a4c8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 800a4cc:	f7ff fe7a 	bl	800a1c4 <vPortExitCritical>
	taskENTER_CRITICAL();
 800a4d0:	f7ff fe58 	bl	800a184 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800a4d4:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a4d8:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800a4dc:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800a4de:	2d00      	cmp	r5, #0
 800a4e0:	dd01      	ble.n	800a4e6 <prvUnlockQueue+0x3a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a4e2:	6923      	ldr	r3, [r4, #16]
 800a4e4:	b97b      	cbnz	r3, 800a506 <prvUnlockQueue+0x5a>
		pxQueue->cRxLock = queueUNLOCKED;
 800a4e6:	23ff      	movs	r3, #255	@ 0xff
 800a4e8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 800a4ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800a4f0:	f7ff be68 	b.w	800a1c4 <vPortExitCritical>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a4f4:	4630      	mov	r0, r6
 800a4f6:	f001 f945 	bl	800b784 <xTaskRemoveFromEventList>
 800a4fa:	b108      	cbz	r0, 800a500 <prvUnlockQueue+0x54>
						vTaskMissedYield();
 800a4fc:	f001 f9ca 	bl	800b894 <vTaskMissedYield>
			--cTxLock;
 800a500:	3d01      	subs	r5, #1
 800a502:	b26d      	sxtb	r5, r5
 800a504:	e7db      	b.n	800a4be <prvUnlockQueue+0x12>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a506:	4630      	mov	r0, r6
 800a508:	f001 f93c 	bl	800b784 <xTaskRemoveFromEventList>
 800a50c:	b108      	cbz	r0, 800a512 <prvUnlockQueue+0x66>
					vTaskMissedYield();
 800a50e:	f001 f9c1 	bl	800b894 <vTaskMissedYield>
				--cRxLock;
 800a512:	3d01      	subs	r5, #1
 800a514:	b26d      	sxtb	r5, r5
 800a516:	e7e2      	b.n	800a4de <prvUnlockQueue+0x32>

0800a518 <xQueueGenericReset>:
{
 800a518:	b538      	push	{r3, r4, r5, lr}
 800a51a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800a51c:	4604      	mov	r4, r0
 800a51e:	b940      	cbnz	r0, 800a532 <xQueueGenericReset+0x1a>
 800a520:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a524:	f383 8811 	msr	BASEPRI, r3
 800a528:	f3bf 8f6f 	isb	sy
 800a52c:	f3bf 8f4f 	dsb	sy
 800a530:	e7fe      	b.n	800a530 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800a532:	f7ff fe27 	bl	800a184 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a536:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 800a53a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800a53c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a53e:	434b      	muls	r3, r1
 800a540:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a542:	1a5b      	subs	r3, r3, r1
 800a544:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a546:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800a548:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800a54a:	2000      	movs	r0, #0
 800a54c:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a54e:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 800a550:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800a554:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 800a558:	b9a5      	cbnz	r5, 800a584 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a55a:	6923      	ldr	r3, [r4, #16]
 800a55c:	b173      	cbz	r3, 800a57c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a55e:	f104 0010 	add.w	r0, r4, #16
 800a562:	f001 f90f 	bl	800b784 <xTaskRemoveFromEventList>
 800a566:	b148      	cbz	r0, 800a57c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 800a568:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800a56c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a570:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800a574:	f3bf 8f4f 	dsb	sy
 800a578:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800a57c:	f7ff fe22 	bl	800a1c4 <vPortExitCritical>
}
 800a580:	2001      	movs	r0, #1
 800a582:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800a584:	f104 0010 	add.w	r0, r4, #16
 800a588:	f7ff fd54 	bl	800a034 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800a58c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800a590:	f7ff fd50 	bl	800a034 <vListInitialise>
 800a594:	e7f2      	b.n	800a57c <xQueueGenericReset+0x64>

0800a596 <xQueueGenericCreateStatic>:
	{
 800a596:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a598:	460d      	mov	r5, r1
 800a59a:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800a59c:	b940      	cbnz	r0, 800a5b0 <xQueueGenericCreateStatic+0x1a>
 800a59e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a5a2:	f383 8811 	msr	BASEPRI, r3
 800a5a6:	f3bf 8f6f 	isb	sy
 800a5aa:	f3bf 8f4f 	dsb	sy
 800a5ae:	e7fe      	b.n	800a5ae <xQueueGenericCreateStatic+0x18>
		configASSERT( pxStaticQueue != NULL );
 800a5b0:	b943      	cbnz	r3, 800a5c4 <xQueueGenericCreateStatic+0x2e>
 800a5b2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a5b6:	f383 8811 	msr	BASEPRI, r3
 800a5ba:	f3bf 8f6f 	isb	sy
 800a5be:	f3bf 8f4f 	dsb	sy
 800a5c2:	e7fe      	b.n	800a5c2 <xQueueGenericCreateStatic+0x2c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800a5c4:	b14a      	cbz	r2, 800a5da <xQueueGenericCreateStatic+0x44>
 800a5c6:	b991      	cbnz	r1, 800a5ee <xQueueGenericCreateStatic+0x58>
 800a5c8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a5cc:	f383 8811 	msr	BASEPRI, r3
 800a5d0:	f3bf 8f6f 	isb	sy
 800a5d4:	f3bf 8f4f 	dsb	sy
 800a5d8:	e7fe      	b.n	800a5d8 <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800a5da:	b141      	cbz	r1, 800a5ee <xQueueGenericCreateStatic+0x58>
 800a5dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a5e0:	f383 8811 	msr	BASEPRI, r3
 800a5e4:	f3bf 8f6f 	isb	sy
 800a5e8:	f3bf 8f4f 	dsb	sy
 800a5ec:	e7fe      	b.n	800a5ec <xQueueGenericCreateStatic+0x56>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800a5ee:	2350      	movs	r3, #80	@ 0x50
 800a5f0:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800a5f2:	9b01      	ldr	r3, [sp, #4]
 800a5f4:	2b50      	cmp	r3, #80	@ 0x50
 800a5f6:	d008      	beq.n	800a60a <xQueueGenericCreateStatic+0x74>
 800a5f8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a5fc:	f383 8811 	msr	BASEPRI, r3
 800a600:	f3bf 8f6f 	isb	sy
 800a604:	f3bf 8f4f 	dsb	sy
 800a608:	e7fe      	b.n	800a608 <xQueueGenericCreateStatic+0x72>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800a60a:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800a60c:	2d00      	cmp	r5, #0
 800a60e:	bf08      	it	eq
 800a610:	4622      	moveq	r2, r4
	pxNewQueue->uxItemSize = uxItemSize;
 800a612:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800a616:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
 800a61a:	6022      	str	r2, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800a61c:	4620      	mov	r0, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800a61e:	9b01      	ldr	r3, [sp, #4]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800a620:	f7ff ff7a 	bl	800a518 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800a624:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800a628:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 800a62c:	4620      	mov	r0, r4
 800a62e:	b003      	add	sp, #12
 800a630:	bd30      	pop	{r4, r5, pc}

0800a632 <xQueueGenericCreate>:
	{
 800a632:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a634:	460d      	mov	r5, r1
 800a636:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800a638:	4606      	mov	r6, r0
 800a63a:	b940      	cbnz	r0, 800a64e <xQueueGenericCreate+0x1c>
 800a63c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a640:	f383 8811 	msr	BASEPRI, r3
 800a644:	f3bf 8f6f 	isb	sy
 800a648:	f3bf 8f4f 	dsb	sy
 800a64c:	e7fe      	b.n	800a64c <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a64e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800a650:	3050      	adds	r0, #80	@ 0x50
 800a652:	f7ff fc19 	bl	8009e88 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800a656:	4604      	mov	r4, r0
 800a658:	b170      	cbz	r0, 800a678 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800a65a:	2300      	movs	r3, #0
 800a65c:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800a660:	b165      	cbz	r5, 800a67c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a662:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 800a666:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 800a66a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800a66c:	2101      	movs	r1, #1
 800a66e:	4620      	mov	r0, r4
 800a670:	f7ff ff52 	bl	800a518 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800a674:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 800a678:	4620      	mov	r0, r4
 800a67a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800a67c:	4603      	mov	r3, r0
 800a67e:	e7f2      	b.n	800a666 <xQueueGenericCreate+0x34>

0800a680 <xQueueCreateCountingSemaphoreStatic>:
	{
 800a680:	b513      	push	{r0, r1, r4, lr}
 800a682:	4613      	mov	r3, r2
 800a684:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800a686:	b940      	cbnz	r0, 800a69a <xQueueCreateCountingSemaphoreStatic+0x1a>
 800a688:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a68c:	f383 8811 	msr	BASEPRI, r3
 800a690:	f3bf 8f6f 	isb	sy
 800a694:	f3bf 8f4f 	dsb	sy
 800a698:	e7fe      	b.n	800a698 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800a69a:	4288      	cmp	r0, r1
 800a69c:	d208      	bcs.n	800a6b0 <xQueueCreateCountingSemaphoreStatic+0x30>
 800a69e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a6a2:	f383 8811 	msr	BASEPRI, r3
 800a6a6:	f3bf 8f6f 	isb	sy
 800a6aa:	f3bf 8f4f 	dsb	sy
 800a6ae:	e7fe      	b.n	800a6ae <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800a6b0:	2202      	movs	r2, #2
 800a6b2:	9200      	str	r2, [sp, #0]
 800a6b4:	2200      	movs	r2, #0
 800a6b6:	4611      	mov	r1, r2
 800a6b8:	f7ff ff6d 	bl	800a596 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800a6bc:	b100      	cbz	r0, 800a6c0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800a6be:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 800a6c0:	b002      	add	sp, #8
 800a6c2:	bd10      	pop	{r4, pc}

0800a6c4 <xQueueCreateCountingSemaphore>:
	{
 800a6c4:	b510      	push	{r4, lr}
 800a6c6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800a6c8:	b940      	cbnz	r0, 800a6dc <xQueueCreateCountingSemaphore+0x18>
 800a6ca:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a6ce:	f383 8811 	msr	BASEPRI, r3
 800a6d2:	f3bf 8f6f 	isb	sy
 800a6d6:	f3bf 8f4f 	dsb	sy
 800a6da:	e7fe      	b.n	800a6da <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800a6dc:	4288      	cmp	r0, r1
 800a6de:	d208      	bcs.n	800a6f2 <xQueueCreateCountingSemaphore+0x2e>
 800a6e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a6e4:	f383 8811 	msr	BASEPRI, r3
 800a6e8:	f3bf 8f6f 	isb	sy
 800a6ec:	f3bf 8f4f 	dsb	sy
 800a6f0:	e7fe      	b.n	800a6f0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800a6f2:	2202      	movs	r2, #2
 800a6f4:	2100      	movs	r1, #0
 800a6f6:	f7ff ff9c 	bl	800a632 <xQueueGenericCreate>
		if( xHandle != NULL )
 800a6fa:	b100      	cbz	r0, 800a6fe <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800a6fc:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 800a6fe:	bd10      	pop	{r4, pc}

0800a700 <xQueueGenericSend>:
{
 800a700:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800a704:	460f      	mov	r7, r1
 800a706:	9201      	str	r2, [sp, #4]
 800a708:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800a70a:	4604      	mov	r4, r0
 800a70c:	b940      	cbnz	r0, 800a720 <xQueueGenericSend+0x20>
 800a70e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a712:	f383 8811 	msr	BASEPRI, r3
 800a716:	f3bf 8f6f 	isb	sy
 800a71a:	f3bf 8f4f 	dsb	sy
 800a71e:	e7fe      	b.n	800a71e <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800a720:	b951      	cbnz	r1, 800a738 <xQueueGenericSend+0x38>
 800a722:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800a724:	b143      	cbz	r3, 800a738 <xQueueGenericSend+0x38>
 800a726:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a72a:	f383 8811 	msr	BASEPRI, r3
 800a72e:	f3bf 8f6f 	isb	sy
 800a732:	f3bf 8f4f 	dsb	sy
 800a736:	e7fe      	b.n	800a736 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800a738:	2e02      	cmp	r6, #2
 800a73a:	d10b      	bne.n	800a754 <xQueueGenericSend+0x54>
 800a73c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800a73e:	2b01      	cmp	r3, #1
 800a740:	d008      	beq.n	800a754 <xQueueGenericSend+0x54>
 800a742:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a746:	f383 8811 	msr	BASEPRI, r3
 800a74a:	f3bf 8f6f 	isb	sy
 800a74e:	f3bf 8f4f 	dsb	sy
 800a752:	e7fe      	b.n	800a752 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800a754:	f001 f8a4 	bl	800b8a0 <xTaskGetSchedulerState>
 800a758:	4605      	mov	r5, r0
 800a75a:	b320      	cbz	r0, 800a7a6 <xQueueGenericSend+0xa6>
 800a75c:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 800a75e:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 800a762:	f7ff fd0f 	bl	800a184 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800a766:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800a768:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800a76a:	429a      	cmp	r2, r3
 800a76c:	d227      	bcs.n	800a7be <xQueueGenericSend+0xbe>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800a76e:	4632      	mov	r2, r6
 800a770:	4639      	mov	r1, r7
 800a772:	4620      	mov	r0, r4
 800a774:	f7ff fe51 	bl	800a41a <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800a778:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800a77a:	b11b      	cbz	r3, 800a784 <xQueueGenericSend+0x84>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a77c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800a780:	f001 f800 	bl	800b784 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800a784:	b148      	cbz	r0, 800a79a <xQueueGenericSend+0x9a>
						queueYIELD_IF_USING_PREEMPTION();
 800a786:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800a78a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a78e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800a792:	f3bf 8f4f 	dsb	sy
 800a796:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800a79a:	f7ff fd13 	bl	800a1c4 <vPortExitCritical>
				return pdPASS;
 800a79e:	2001      	movs	r0, #1
}
 800a7a0:	b004      	add	sp, #16
 800a7a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800a7a6:	9b01      	ldr	r3, [sp, #4]
 800a7a8:	2b00      	cmp	r3, #0
 800a7aa:	d0d8      	beq.n	800a75e <xQueueGenericSend+0x5e>
 800a7ac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a7b0:	f383 8811 	msr	BASEPRI, r3
 800a7b4:	f3bf 8f6f 	isb	sy
 800a7b8:	f3bf 8f4f 	dsb	sy
 800a7bc:	e7fe      	b.n	800a7bc <xQueueGenericSend+0xbc>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800a7be:	2e02      	cmp	r6, #2
 800a7c0:	d0d5      	beq.n	800a76e <xQueueGenericSend+0x6e>
				if( xTicksToWait == ( TickType_t ) 0 )
 800a7c2:	9b01      	ldr	r3, [sp, #4]
 800a7c4:	b91b      	cbnz	r3, 800a7ce <xQueueGenericSend+0xce>
					taskEXIT_CRITICAL();
 800a7c6:	f7ff fcfd 	bl	800a1c4 <vPortExitCritical>
					return errQUEUE_FULL;
 800a7ca:	2000      	movs	r0, #0
 800a7cc:	e7e8      	b.n	800a7a0 <xQueueGenericSend+0xa0>
				else if( xEntryTimeSet == pdFALSE )
 800a7ce:	b915      	cbnz	r5, 800a7d6 <xQueueGenericSend+0xd6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800a7d0:	a802      	add	r0, sp, #8
 800a7d2:	f001 f817 	bl	800b804 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800a7d6:	f7ff fcf5 	bl	800a1c4 <vPortExitCritical>
		vTaskSuspendAll();
 800a7da:	f000 fdcb 	bl	800b374 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800a7de:	f7ff fcd1 	bl	800a184 <vPortEnterCritical>
 800a7e2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800a7e6:	2bff      	cmp	r3, #255	@ 0xff
 800a7e8:	bf08      	it	eq
 800a7ea:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800a7ee:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800a7f2:	2bff      	cmp	r3, #255	@ 0xff
 800a7f4:	bf08      	it	eq
 800a7f6:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 800a7fa:	f7ff fce3 	bl	800a1c4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800a7fe:	a901      	add	r1, sp, #4
 800a800:	a802      	add	r0, sp, #8
 800a802:	f001 f80b 	bl	800b81c <xTaskCheckForTimeOut>
 800a806:	bb38      	cbnz	r0, 800a858 <xQueueGenericSend+0x158>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800a808:	f7ff fcbc 	bl	800a184 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800a80c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800a80e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800a810:	429a      	cmp	r2, r3
 800a812:	d10e      	bne.n	800a832 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800a814:	f7ff fcd6 	bl	800a1c4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800a818:	9901      	ldr	r1, [sp, #4]
 800a81a:	f104 0010 	add.w	r0, r4, #16
 800a81e:	f000 ff79 	bl	800b714 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800a822:	4620      	mov	r0, r4
 800a824:	f7ff fe42 	bl	800a4ac <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800a828:	f000 fe48 	bl	800b4bc <xTaskResumeAll>
 800a82c:	b148      	cbz	r0, 800a842 <xQueueGenericSend+0x142>
 800a82e:	2501      	movs	r5, #1
 800a830:	e797      	b.n	800a762 <xQueueGenericSend+0x62>
	taskEXIT_CRITICAL();
 800a832:	f7ff fcc7 	bl	800a1c4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800a836:	4620      	mov	r0, r4
 800a838:	f7ff fe38 	bl	800a4ac <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800a83c:	f000 fe3e 	bl	800b4bc <xTaskResumeAll>
 800a840:	e7f5      	b.n	800a82e <xQueueGenericSend+0x12e>
					portYIELD_WITHIN_API();
 800a842:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800a846:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a84a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800a84e:	f3bf 8f4f 	dsb	sy
 800a852:	f3bf 8f6f 	isb	sy
 800a856:	e7ea      	b.n	800a82e <xQueueGenericSend+0x12e>
			prvUnlockQueue( pxQueue );
 800a858:	4620      	mov	r0, r4
 800a85a:	f7ff fe27 	bl	800a4ac <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800a85e:	f000 fe2d 	bl	800b4bc <xTaskResumeAll>
			return errQUEUE_FULL;
 800a862:	e7b2      	b.n	800a7ca <xQueueGenericSend+0xca>

0800a864 <xQueueGenericSendFromISR>:
{
 800a864:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a868:	4689      	mov	r9, r1
 800a86a:	4617      	mov	r7, r2
 800a86c:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800a86e:	4604      	mov	r4, r0
 800a870:	b940      	cbnz	r0, 800a884 <xQueueGenericSendFromISR+0x20>
 800a872:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a876:	f383 8811 	msr	BASEPRI, r3
 800a87a:	f3bf 8f6f 	isb	sy
 800a87e:	f3bf 8f4f 	dsb	sy
 800a882:	e7fe      	b.n	800a882 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800a884:	b951      	cbnz	r1, 800a89c <xQueueGenericSendFromISR+0x38>
 800a886:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800a888:	b143      	cbz	r3, 800a89c <xQueueGenericSendFromISR+0x38>
 800a88a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a88e:	f383 8811 	msr	BASEPRI, r3
 800a892:	f3bf 8f6f 	isb	sy
 800a896:	f3bf 8f4f 	dsb	sy
 800a89a:	e7fe      	b.n	800a89a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800a89c:	2e02      	cmp	r6, #2
 800a89e:	d10b      	bne.n	800a8b8 <xQueueGenericSendFromISR+0x54>
 800a8a0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800a8a2:	2b01      	cmp	r3, #1
 800a8a4:	d008      	beq.n	800a8b8 <xQueueGenericSendFromISR+0x54>
 800a8a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a8aa:	f383 8811 	msr	BASEPRI, r3
 800a8ae:	f3bf 8f6f 	isb	sy
 800a8b2:	f3bf 8f4f 	dsb	sy
 800a8b6:	e7fe      	b.n	800a8b6 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800a8b8:	f7ff fd76 	bl	800a3a8 <vPortValidateInterruptPriority>
	__asm volatile
 800a8bc:	f3ef 8811 	mrs	r8, BASEPRI
 800a8c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a8c4:	f383 8811 	msr	BASEPRI, r3
 800a8c8:	f3bf 8f6f 	isb	sy
 800a8cc:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800a8d0:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800a8d2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800a8d4:	429a      	cmp	r2, r3
 800a8d6:	d301      	bcc.n	800a8dc <xQueueGenericSendFromISR+0x78>
 800a8d8:	2e02      	cmp	r6, #2
 800a8da:	d11e      	bne.n	800a91a <xQueueGenericSendFromISR+0xb6>
			const int8_t cTxLock = pxQueue->cTxLock;
 800a8dc:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a8e0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800a8e2:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800a8e4:	4632      	mov	r2, r6
 800a8e6:	4649      	mov	r1, r9
 800a8e8:	4620      	mov	r0, r4
 800a8ea:	f7ff fd96 	bl	800a41a <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800a8ee:	1c6b      	adds	r3, r5, #1
 800a8f0:	d10e      	bne.n	800a910 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800a8f2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800a8f4:	b13b      	cbz	r3, 800a906 <xQueueGenericSendFromISR+0xa2>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a8f6:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800a8fa:	f000 ff43 	bl	800b784 <xTaskRemoveFromEventList>
 800a8fe:	b110      	cbz	r0, 800a906 <xQueueGenericSendFromISR+0xa2>
							if( pxHigherPriorityTaskWoken != NULL )
 800a900:	b10f      	cbz	r7, 800a906 <xQueueGenericSendFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800a902:	2301      	movs	r3, #1
 800a904:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 800a906:	2001      	movs	r0, #1
	__asm volatile
 800a908:	f388 8811 	msr	BASEPRI, r8
}
 800a90c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800a910:	3501      	adds	r5, #1
 800a912:	b26d      	sxtb	r5, r5
 800a914:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 800a918:	e7f5      	b.n	800a906 <xQueueGenericSendFromISR+0xa2>
			xReturn = errQUEUE_FULL;
 800a91a:	2000      	movs	r0, #0
 800a91c:	e7f4      	b.n	800a908 <xQueueGenericSendFromISR+0xa4>

0800a91e <xQueueGiveFromISR>:
{
 800a91e:	b570      	push	{r4, r5, r6, lr}
 800a920:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800a922:	4604      	mov	r4, r0
 800a924:	b940      	cbnz	r0, 800a938 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800a926:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a92a:	f383 8811 	msr	BASEPRI, r3
 800a92e:	f3bf 8f6f 	isb	sy
 800a932:	f3bf 8f4f 	dsb	sy
 800a936:	e7fe      	b.n	800a936 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800a938:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800a93a:	b143      	cbz	r3, 800a94e <xQueueGiveFromISR+0x30>
 800a93c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a940:	f383 8811 	msr	BASEPRI, r3
 800a944:	f3bf 8f6f 	isb	sy
 800a948:	f3bf 8f4f 	dsb	sy
 800a94c:	e7fe      	b.n	800a94c <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800a94e:	6803      	ldr	r3, [r0, #0]
 800a950:	b953      	cbnz	r3, 800a968 <xQueueGiveFromISR+0x4a>
 800a952:	6883      	ldr	r3, [r0, #8]
 800a954:	b143      	cbz	r3, 800a968 <xQueueGiveFromISR+0x4a>
 800a956:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a95a:	f383 8811 	msr	BASEPRI, r3
 800a95e:	f3bf 8f6f 	isb	sy
 800a962:	f3bf 8f4f 	dsb	sy
 800a966:	e7fe      	b.n	800a966 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800a968:	f7ff fd1e 	bl	800a3a8 <vPortValidateInterruptPriority>
	__asm volatile
 800a96c:	f3ef 8611 	mrs	r6, BASEPRI
 800a970:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a974:	f383 8811 	msr	BASEPRI, r3
 800a978:	f3bf 8f6f 	isb	sy
 800a97c:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a980:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800a982:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800a984:	4293      	cmp	r3, r2
 800a986:	d919      	bls.n	800a9bc <xQueueGiveFromISR+0x9e>
			const int8_t cTxLock = pxQueue->cTxLock;
 800a988:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800a98c:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800a98e:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800a990:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800a992:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 800a994:	d10d      	bne.n	800a9b2 <xQueueGiveFromISR+0x94>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800a996:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800a998:	b13b      	cbz	r3, 800a9aa <xQueueGiveFromISR+0x8c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a99a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800a99e:	f000 fef1 	bl	800b784 <xTaskRemoveFromEventList>
 800a9a2:	b110      	cbz	r0, 800a9aa <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 800a9a4:	b10d      	cbz	r5, 800a9aa <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800a9a6:	2301      	movs	r3, #1
 800a9a8:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 800a9aa:	2001      	movs	r0, #1
	__asm volatile
 800a9ac:	f386 8811 	msr	BASEPRI, r6
}
 800a9b0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800a9b2:	3301      	adds	r3, #1
 800a9b4:	b25b      	sxtb	r3, r3
 800a9b6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800a9ba:	e7f6      	b.n	800a9aa <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 800a9bc:	2000      	movs	r0, #0
 800a9be:	e7f5      	b.n	800a9ac <xQueueGiveFromISR+0x8e>

0800a9c0 <xQueueReceive>:
{
 800a9c0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800a9c4:	460e      	mov	r6, r1
 800a9c6:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800a9c8:	4604      	mov	r4, r0
 800a9ca:	b940      	cbnz	r0, 800a9de <xQueueReceive+0x1e>
	__asm volatile
 800a9cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a9d0:	f383 8811 	msr	BASEPRI, r3
 800a9d4:	f3bf 8f6f 	isb	sy
 800a9d8:	f3bf 8f4f 	dsb	sy
 800a9dc:	e7fe      	b.n	800a9dc <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800a9de:	b951      	cbnz	r1, 800a9f6 <xQueueReceive+0x36>
 800a9e0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800a9e2:	b143      	cbz	r3, 800a9f6 <xQueueReceive+0x36>
 800a9e4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a9e8:	f383 8811 	msr	BASEPRI, r3
 800a9ec:	f3bf 8f6f 	isb	sy
 800a9f0:	f3bf 8f4f 	dsb	sy
 800a9f4:	e7fe      	b.n	800a9f4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800a9f6:	f000 ff53 	bl	800b8a0 <xTaskGetSchedulerState>
 800a9fa:	4605      	mov	r5, r0
 800a9fc:	b318      	cbz	r0, 800aa46 <xQueueReceive+0x86>
 800a9fe:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 800aa00:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 800aa04:	f7ff fbbe 	bl	800a184 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800aa08:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800aa0a:	b347      	cbz	r7, 800aa5e <xQueueReceive+0x9e>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800aa0c:	4631      	mov	r1, r6
 800aa0e:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800aa10:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800aa12:	f7ff fd35 	bl	800a480 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800aa16:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800aa18:	6923      	ldr	r3, [r4, #16]
 800aa1a:	b173      	cbz	r3, 800aa3a <xQueueReceive+0x7a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800aa1c:	f104 0010 	add.w	r0, r4, #16
 800aa20:	f000 feb0 	bl	800b784 <xTaskRemoveFromEventList>
 800aa24:	b148      	cbz	r0, 800aa3a <xQueueReceive+0x7a>
						queueYIELD_IF_USING_PREEMPTION();
 800aa26:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800aa2a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800aa2e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800aa32:	f3bf 8f4f 	dsb	sy
 800aa36:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800aa3a:	f7ff fbc3 	bl	800a1c4 <vPortExitCritical>
				return pdPASS;
 800aa3e:	2001      	movs	r0, #1
}
 800aa40:	b004      	add	sp, #16
 800aa42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800aa46:	9b01      	ldr	r3, [sp, #4]
 800aa48:	2b00      	cmp	r3, #0
 800aa4a:	d0d9      	beq.n	800aa00 <xQueueReceive+0x40>
 800aa4c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800aa50:	f383 8811 	msr	BASEPRI, r3
 800aa54:	f3bf 8f6f 	isb	sy
 800aa58:	f3bf 8f4f 	dsb	sy
 800aa5c:	e7fe      	b.n	800aa5c <xQueueReceive+0x9c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800aa5e:	9b01      	ldr	r3, [sp, #4]
 800aa60:	b91b      	cbnz	r3, 800aa6a <xQueueReceive+0xaa>
					taskEXIT_CRITICAL();
 800aa62:	f7ff fbaf 	bl	800a1c4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800aa66:	2000      	movs	r0, #0
 800aa68:	e7ea      	b.n	800aa40 <xQueueReceive+0x80>
				else if( xEntryTimeSet == pdFALSE )
 800aa6a:	b915      	cbnz	r5, 800aa72 <xQueueReceive+0xb2>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800aa6c:	a802      	add	r0, sp, #8
 800aa6e:	f000 fec9 	bl	800b804 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800aa72:	f7ff fba7 	bl	800a1c4 <vPortExitCritical>
		vTaskSuspendAll();
 800aa76:	f000 fc7d 	bl	800b374 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800aa7a:	f7ff fb83 	bl	800a184 <vPortEnterCritical>
 800aa7e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800aa82:	2bff      	cmp	r3, #255	@ 0xff
 800aa84:	bf08      	it	eq
 800aa86:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800aa8a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800aa8e:	2bff      	cmp	r3, #255	@ 0xff
 800aa90:	bf08      	it	eq
 800aa92:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 800aa96:	f7ff fb95 	bl	800a1c4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800aa9a:	a901      	add	r1, sp, #4
 800aa9c:	a802      	add	r0, sp, #8
 800aa9e:	f000 febd 	bl	800b81c <xTaskCheckForTimeOut>
 800aaa2:	bb00      	cbnz	r0, 800aae6 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800aaa4:	4620      	mov	r0, r4
 800aaa6:	f7ff fcad 	bl	800a404 <prvIsQueueEmpty>
 800aaaa:	b1b0      	cbz	r0, 800aada <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800aaac:	9901      	ldr	r1, [sp, #4]
 800aaae:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800aab2:	f000 fe2f 	bl	800b714 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800aab6:	4620      	mov	r0, r4
 800aab8:	f7ff fcf8 	bl	800a4ac <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800aabc:	f000 fcfe 	bl	800b4bc <xTaskResumeAll>
 800aac0:	b948      	cbnz	r0, 800aad6 <xQueueReceive+0x116>
					portYIELD_WITHIN_API();
 800aac2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800aac6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800aaca:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800aace:	f3bf 8f4f 	dsb	sy
 800aad2:	f3bf 8f6f 	isb	sy
 800aad6:	2501      	movs	r5, #1
 800aad8:	e794      	b.n	800aa04 <xQueueReceive+0x44>
				prvUnlockQueue( pxQueue );
 800aada:	4620      	mov	r0, r4
 800aadc:	f7ff fce6 	bl	800a4ac <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800aae0:	f000 fcec 	bl	800b4bc <xTaskResumeAll>
 800aae4:	e7f7      	b.n	800aad6 <xQueueReceive+0x116>
			prvUnlockQueue( pxQueue );
 800aae6:	4620      	mov	r0, r4
 800aae8:	f7ff fce0 	bl	800a4ac <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800aaec:	f000 fce6 	bl	800b4bc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800aaf0:	4620      	mov	r0, r4
 800aaf2:	f7ff fc87 	bl	800a404 <prvIsQueueEmpty>
 800aaf6:	2800      	cmp	r0, #0
 800aaf8:	d0ed      	beq.n	800aad6 <xQueueReceive+0x116>
 800aafa:	e7b4      	b.n	800aa66 <xQueueReceive+0xa6>

0800aafc <xQueueSemaphoreTake>:
{
 800aafc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aafe:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 800ab00:	4604      	mov	r4, r0
{
 800ab02:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800ab04:	b940      	cbnz	r0, 800ab18 <xQueueSemaphoreTake+0x1c>
 800ab06:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ab0a:	f383 8811 	msr	BASEPRI, r3
 800ab0e:	f3bf 8f6f 	isb	sy
 800ab12:	f3bf 8f4f 	dsb	sy
 800ab16:	e7fe      	b.n	800ab16 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800ab18:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 800ab1a:	b145      	cbz	r5, 800ab2e <xQueueSemaphoreTake+0x32>
 800ab1c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ab20:	f383 8811 	msr	BASEPRI, r3
 800ab24:	f3bf 8f6f 	isb	sy
 800ab28:	f3bf 8f4f 	dsb	sy
 800ab2c:	e7fe      	b.n	800ab2c <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ab2e:	f000 feb7 	bl	800b8a0 <xTaskGetSchedulerState>
 800ab32:	4606      	mov	r6, r0
 800ab34:	b320      	cbz	r0, 800ab80 <xQueueSemaphoreTake+0x84>
 800ab36:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 800ab38:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 800ab3a:	f7ff fb23 	bl	800a184 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800ab3e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800ab40:	b353      	cbz	r3, 800ab98 <xQueueSemaphoreTake+0x9c>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800ab42:	3b01      	subs	r3, #1
 800ab44:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ab46:	6823      	ldr	r3, [r4, #0]
 800ab48:	b913      	cbnz	r3, 800ab50 <xQueueSemaphoreTake+0x54>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800ab4a:	f000 ff87 	bl	800ba5c <pvTaskIncrementMutexHeldCount>
 800ab4e:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ab50:	6923      	ldr	r3, [r4, #16]
 800ab52:	b173      	cbz	r3, 800ab72 <xQueueSemaphoreTake+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ab54:	f104 0010 	add.w	r0, r4, #16
 800ab58:	f000 fe14 	bl	800b784 <xTaskRemoveFromEventList>
 800ab5c:	b148      	cbz	r0, 800ab72 <xQueueSemaphoreTake+0x76>
						queueYIELD_IF_USING_PREEMPTION();
 800ab5e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800ab62:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800ab66:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800ab6a:	f3bf 8f4f 	dsb	sy
 800ab6e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800ab72:	f7ff fb27 	bl	800a1c4 <vPortExitCritical>
				return pdPASS;
 800ab76:	2001      	movs	r0, #1
}
 800ab78:	b005      	add	sp, #20
 800ab7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ab7c:	4635      	mov	r5, r6
 800ab7e:	e7db      	b.n	800ab38 <xQueueSemaphoreTake+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ab80:	9b01      	ldr	r3, [sp, #4]
 800ab82:	2b00      	cmp	r3, #0
 800ab84:	d0fa      	beq.n	800ab7c <xQueueSemaphoreTake+0x80>
 800ab86:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ab8a:	f383 8811 	msr	BASEPRI, r3
 800ab8e:	f3bf 8f6f 	isb	sy
 800ab92:	f3bf 8f4f 	dsb	sy
 800ab96:	e7fe      	b.n	800ab96 <xQueueSemaphoreTake+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ab98:	9b01      	ldr	r3, [sp, #4]
 800ab9a:	b953      	cbnz	r3, 800abb2 <xQueueSemaphoreTake+0xb6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800ab9c:	2d00      	cmp	r5, #0
 800ab9e:	d066      	beq.n	800ac6e <xQueueSemaphoreTake+0x172>
 800aba0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800aba4:	f383 8811 	msr	BASEPRI, r3
 800aba8:	f3bf 8f6f 	isb	sy
 800abac:	f3bf 8f4f 	dsb	sy
 800abb0:	e7fe      	b.n	800abb0 <xQueueSemaphoreTake+0xb4>
				else if( xEntryTimeSet == pdFALSE )
 800abb2:	b916      	cbnz	r6, 800abba <xQueueSemaphoreTake+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800abb4:	a802      	add	r0, sp, #8
 800abb6:	f000 fe25 	bl	800b804 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800abba:	f7ff fb03 	bl	800a1c4 <vPortExitCritical>
		vTaskSuspendAll();
 800abbe:	f000 fbd9 	bl	800b374 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800abc2:	f7ff fadf 	bl	800a184 <vPortEnterCritical>
 800abc6:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800abca:	2bff      	cmp	r3, #255	@ 0xff
 800abcc:	bf08      	it	eq
 800abce:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 800abd2:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800abd6:	2bff      	cmp	r3, #255	@ 0xff
 800abd8:	bf08      	it	eq
 800abda:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 800abde:	f7ff faf1 	bl	800a1c4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800abe2:	a901      	add	r1, sp, #4
 800abe4:	a802      	add	r0, sp, #8
 800abe6:	f000 fe19 	bl	800b81c <xTaskCheckForTimeOut>
 800abea:	bb50      	cbnz	r0, 800ac42 <xQueueSemaphoreTake+0x146>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800abec:	4620      	mov	r0, r4
 800abee:	f7ff fc09 	bl	800a404 <prvIsQueueEmpty>
 800abf2:	b300      	cbz	r0, 800ac36 <xQueueSemaphoreTake+0x13a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800abf4:	6823      	ldr	r3, [r4, #0]
 800abf6:	b93b      	cbnz	r3, 800ac08 <xQueueSemaphoreTake+0x10c>
						taskENTER_CRITICAL();
 800abf8:	f7ff fac4 	bl	800a184 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800abfc:	68a0      	ldr	r0, [r4, #8]
 800abfe:	f000 fe5f 	bl	800b8c0 <xTaskPriorityInherit>
 800ac02:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800ac04:	f7ff fade 	bl	800a1c4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800ac08:	9901      	ldr	r1, [sp, #4]
 800ac0a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800ac0e:	f000 fd81 	bl	800b714 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800ac12:	4620      	mov	r0, r4
 800ac14:	f7ff fc4a 	bl	800a4ac <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800ac18:	f000 fc50 	bl	800b4bc <xTaskResumeAll>
 800ac1c:	b948      	cbnz	r0, 800ac32 <xQueueSemaphoreTake+0x136>
					portYIELD_WITHIN_API();
 800ac1e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800ac22:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800ac26:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800ac2a:	f3bf 8f4f 	dsb	sy
 800ac2e:	f3bf 8f6f 	isb	sy
 800ac32:	2601      	movs	r6, #1
 800ac34:	e781      	b.n	800ab3a <xQueueSemaphoreTake+0x3e>
				prvUnlockQueue( pxQueue );
 800ac36:	4620      	mov	r0, r4
 800ac38:	f7ff fc38 	bl	800a4ac <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800ac3c:	f000 fc3e 	bl	800b4bc <xTaskResumeAll>
 800ac40:	e7f7      	b.n	800ac32 <xQueueSemaphoreTake+0x136>
			prvUnlockQueue( pxQueue );
 800ac42:	4620      	mov	r0, r4
 800ac44:	f7ff fc32 	bl	800a4ac <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800ac48:	f000 fc38 	bl	800b4bc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800ac4c:	4620      	mov	r0, r4
 800ac4e:	f7ff fbd9 	bl	800a404 <prvIsQueueEmpty>
 800ac52:	2800      	cmp	r0, #0
 800ac54:	d0ed      	beq.n	800ac32 <xQueueSemaphoreTake+0x136>
					if( xInheritanceOccurred != pdFALSE )
 800ac56:	b165      	cbz	r5, 800ac72 <xQueueSemaphoreTake+0x176>
						taskENTER_CRITICAL();
 800ac58:	f7ff fa94 	bl	800a184 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800ac5c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800ac5e:	b119      	cbz	r1, 800ac68 <xQueueSemaphoreTake+0x16c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800ac60:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800ac62:	6819      	ldr	r1, [r3, #0]
 800ac64:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800ac68:	68a0      	ldr	r0, [r4, #8]
 800ac6a:	f000 fea9 	bl	800b9c0 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 800ac6e:	f7ff faa9 	bl	800a1c4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800ac72:	2000      	movs	r0, #0
 800ac74:	e780      	b.n	800ab78 <xQueueSemaphoreTake+0x7c>

0800ac76 <xQueueReceiveFromISR>:
{
 800ac76:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ac7a:	4689      	mov	r9, r1
 800ac7c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800ac7e:	4604      	mov	r4, r0
 800ac80:	b940      	cbnz	r0, 800ac94 <xQueueReceiveFromISR+0x1e>
 800ac82:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ac86:	f383 8811 	msr	BASEPRI, r3
 800ac8a:	f3bf 8f6f 	isb	sy
 800ac8e:	f3bf 8f4f 	dsb	sy
 800ac92:	e7fe      	b.n	800ac92 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ac94:	b951      	cbnz	r1, 800acac <xQueueReceiveFromISR+0x36>
 800ac96:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800ac98:	b143      	cbz	r3, 800acac <xQueueReceiveFromISR+0x36>
 800ac9a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ac9e:	f383 8811 	msr	BASEPRI, r3
 800aca2:	f3bf 8f6f 	isb	sy
 800aca6:	f3bf 8f4f 	dsb	sy
 800acaa:	e7fe      	b.n	800acaa <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800acac:	f7ff fb7c 	bl	800a3a8 <vPortValidateInterruptPriority>
	__asm volatile
 800acb0:	f3ef 8711 	mrs	r7, BASEPRI
 800acb4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800acb8:	f383 8811 	msr	BASEPRI, r3
 800acbc:	f3bf 8f6f 	isb	sy
 800acc0:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800acc4:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800acc6:	b30d      	cbz	r5, 800ad0c <xQueueReceiveFromISR+0x96>
			const int8_t cRxLock = pxQueue->cRxLock;
 800acc8:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800accc:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800acce:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800acd0:	4620      	mov	r0, r4
 800acd2:	f7ff fbd5 	bl	800a480 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800acd6:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800acd8:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800acda:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 800acdc:	d111      	bne.n	800ad02 <xQueueReceiveFromISR+0x8c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800acde:	6923      	ldr	r3, [r4, #16]
 800ace0:	b153      	cbz	r3, 800acf8 <xQueueReceiveFromISR+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ace2:	f104 0010 	add.w	r0, r4, #16
 800ace6:	f000 fd4d 	bl	800b784 <xTaskRemoveFromEventList>
 800acea:	b128      	cbz	r0, 800acf8 <xQueueReceiveFromISR+0x82>
						if( pxHigherPriorityTaskWoken != NULL )
 800acec:	f1b8 0f00 	cmp.w	r8, #0
 800acf0:	d002      	beq.n	800acf8 <xQueueReceiveFromISR+0x82>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800acf2:	2301      	movs	r3, #1
 800acf4:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 800acf8:	2001      	movs	r0, #1
	__asm volatile
 800acfa:	f387 8811 	msr	BASEPRI, r7
}
 800acfe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800ad02:	3601      	adds	r6, #1
 800ad04:	b276      	sxtb	r6, r6
 800ad06:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 800ad0a:	e7f5      	b.n	800acf8 <xQueueReceiveFromISR+0x82>
			xReturn = pdFAIL;
 800ad0c:	4628      	mov	r0, r5
 800ad0e:	e7f4      	b.n	800acfa <xQueueReceiveFromISR+0x84>

0800ad10 <uxQueueMessagesWaiting>:
{
 800ad10:	b510      	push	{r4, lr}
	configASSERT( xQueue );
 800ad12:	4604      	mov	r4, r0
 800ad14:	b940      	cbnz	r0, 800ad28 <uxQueueMessagesWaiting+0x18>
	__asm volatile
 800ad16:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ad1a:	f383 8811 	msr	BASEPRI, r3
 800ad1e:	f3bf 8f6f 	isb	sy
 800ad22:	f3bf 8f4f 	dsb	sy
 800ad26:	e7fe      	b.n	800ad26 <uxQueueMessagesWaiting+0x16>
	taskENTER_CRITICAL();
 800ad28:	f7ff fa2c 	bl	800a184 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800ad2c:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
	taskEXIT_CRITICAL();
 800ad2e:	f7ff fa49 	bl	800a1c4 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800ad32:	4620      	mov	r0, r4
 800ad34:	bd10      	pop	{r4, pc}

0800ad36 <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800ad36:	b940      	cbnz	r0, 800ad4a <uxQueueMessagesWaitingFromISR+0x14>
 800ad38:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ad3c:	f383 8811 	msr	BASEPRI, r3
 800ad40:	f3bf 8f6f 	isb	sy
 800ad44:	f3bf 8f4f 	dsb	sy
 800ad48:	e7fe      	b.n	800ad48 <uxQueueMessagesWaitingFromISR+0x12>
	uxReturn = pxQueue->uxMessagesWaiting;
 800ad4a:	6b80      	ldr	r0, [r0, #56]	@ 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800ad4c:	4770      	bx	lr
	...

0800ad50 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 800ad50:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800ad52:	4a07      	ldr	r2, [pc, #28]	@ (800ad70 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ad54:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800ad56:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800ad5a:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 800ad5e:	b91d      	cbnz	r5, 800ad68 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800ad60:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800ad64:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800ad66:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ad68:	3301      	adds	r3, #1
 800ad6a:	2b08      	cmp	r3, #8
 800ad6c:	d1f3      	bne.n	800ad56 <vQueueAddToRegistry+0x6>
 800ad6e:	e7fa      	b.n	800ad66 <vQueueAddToRegistry+0x16>
 800ad70:	20014bc4 	.word	0x20014bc4

0800ad74 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800ad74:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800ad76:	4a09      	ldr	r2, [pc, #36]	@ (800ad9c <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ad78:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800ad7a:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 800ad7e:	4281      	cmp	r1, r0
 800ad80:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 800ad84:	d106      	bne.n	800ad94 <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800ad86:	4a06      	ldr	r2, [pc, #24]	@ (800ada0 <vQueueUnregisterQueue+0x2c>)
 800ad88:	2100      	movs	r1, #0
 800ad8a:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800ad8e:	4422      	add	r2, r4
 800ad90:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800ad92:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ad94:	3301      	adds	r3, #1
 800ad96:	2b08      	cmp	r3, #8
 800ad98:	d1ef      	bne.n	800ad7a <vQueueUnregisterQueue+0x6>
 800ad9a:	e7fa      	b.n	800ad92 <vQueueUnregisterQueue+0x1e>
 800ad9c:	20014bc8 	.word	0x20014bc8
 800ada0:	20014bc4 	.word	0x20014bc4

0800ada4 <vQueueDelete>:
{
 800ada4:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800ada6:	b940      	cbnz	r0, 800adba <vQueueDelete+0x16>
 800ada8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800adac:	f383 8811 	msr	BASEPRI, r3
 800adb0:	f3bf 8f6f 	isb	sy
 800adb4:	f3bf 8f4f 	dsb	sy
 800adb8:	e7fe      	b.n	800adb8 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 800adba:	f7ff ffdb 	bl	800ad74 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800adbe:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 800adc2:	b91b      	cbnz	r3, 800adcc <vQueueDelete+0x28>
}
 800adc4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800adc8:	f7ff b8f6 	b.w	8009fb8 <vPortFree>
}
 800adcc:	bd10      	pop	{r4, pc}

0800adce <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800adce:	b570      	push	{r4, r5, r6, lr}
 800add0:	4604      	mov	r4, r0
 800add2:	460d      	mov	r5, r1
 800add4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800add6:	f7ff f9d5 	bl	800a184 <vPortEnterCritical>
 800adda:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800adde:	2bff      	cmp	r3, #255	@ 0xff
 800ade0:	bf04      	itt	eq
 800ade2:	2300      	moveq	r3, #0
 800ade4:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 800ade8:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800adec:	2bff      	cmp	r3, #255	@ 0xff
 800adee:	bf04      	itt	eq
 800adf0:	2300      	moveq	r3, #0
 800adf2:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 800adf6:	f7ff f9e5 	bl	800a1c4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800adfa:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800adfc:	b92b      	cbnz	r3, 800ae0a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800adfe:	4632      	mov	r2, r6
 800ae00:	4629      	mov	r1, r5
 800ae02:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800ae06:	f000 fc9f 	bl	800b748 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800ae0a:	4620      	mov	r0, r4
	}
 800ae0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800ae10:	f7ff bb4c 	b.w	800a4ac <prvUnlockQueue>

0800ae14 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800ae14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ae18:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800ae1a:	f7ff f9b3 	bl	800a184 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800ae1e:	4b30      	ldr	r3, [pc, #192]	@ (800aee0 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 800ae20:	4e30      	ldr	r6, [pc, #192]	@ (800aee4 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 800ae22:	681a      	ldr	r2, [r3, #0]
 800ae24:	4f30      	ldr	r7, [pc, #192]	@ (800aee8 <prvAddNewTaskToReadyList+0xd4>)
 800ae26:	3201      	adds	r2, #1
 800ae28:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800ae2a:	6835      	ldr	r5, [r6, #0]
 800ae2c:	2d00      	cmp	r5, #0
 800ae2e:	d14b      	bne.n	800aec8 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800ae30:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800ae32:	681b      	ldr	r3, [r3, #0]
 800ae34:	2b01      	cmp	r3, #1
 800ae36:	d11f      	bne.n	800ae78 <prvAddNewTaskToReadyList+0x64>
 800ae38:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800ae3a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800ae3c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800ae3e:	f7ff f8f9 	bl	800a034 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800ae42:	2d38      	cmp	r5, #56	@ 0x38
 800ae44:	f108 0814 	add.w	r8, r8, #20
 800ae48:	d1f7      	bne.n	800ae3a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800ae4a:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 800af10 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800ae4e:	4d27      	ldr	r5, [pc, #156]	@ (800aeec <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 800ae50:	4640      	mov	r0, r8
 800ae52:	f7ff f8ef 	bl	800a034 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800ae56:	4628      	mov	r0, r5
 800ae58:	f7ff f8ec 	bl	800a034 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800ae5c:	4824      	ldr	r0, [pc, #144]	@ (800aef0 <prvAddNewTaskToReadyList+0xdc>)
 800ae5e:	f7ff f8e9 	bl	800a034 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800ae62:	4824      	ldr	r0, [pc, #144]	@ (800aef4 <prvAddNewTaskToReadyList+0xe0>)
 800ae64:	f7ff f8e6 	bl	800a034 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800ae68:	4823      	ldr	r0, [pc, #140]	@ (800aef8 <prvAddNewTaskToReadyList+0xe4>)
 800ae6a:	f7ff f8e3 	bl	800a034 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800ae6e:	4b23      	ldr	r3, [pc, #140]	@ (800aefc <prvAddNewTaskToReadyList+0xe8>)
 800ae70:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800ae74:	4b22      	ldr	r3, [pc, #136]	@ (800af00 <prvAddNewTaskToReadyList+0xec>)
 800ae76:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 800ae78:	4a22      	ldr	r2, [pc, #136]	@ (800af04 <prvAddNewTaskToReadyList+0xf0>)
 800ae7a:	6813      	ldr	r3, [r2, #0]
 800ae7c:	3301      	adds	r3, #1
 800ae7e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800ae80:	4a21      	ldr	r2, [pc, #132]	@ (800af08 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800ae82:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800ae84:	6811      	ldr	r1, [r2, #0]
 800ae86:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800ae88:	2014      	movs	r0, #20
 800ae8a:	428b      	cmp	r3, r1
 800ae8c:	fb00 7003 	mla	r0, r0, r3, r7
 800ae90:	f104 0104 	add.w	r1, r4, #4
 800ae94:	bf88      	it	hi
 800ae96:	6013      	strhi	r3, [r2, #0]
 800ae98:	f7ff f8da 	bl	800a050 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800ae9c:	f7ff f992 	bl	800a1c4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800aea0:	4b1a      	ldr	r3, [pc, #104]	@ (800af0c <prvAddNewTaskToReadyList+0xf8>)
 800aea2:	681b      	ldr	r3, [r3, #0]
 800aea4:	b173      	cbz	r3, 800aec4 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800aea6:	6833      	ldr	r3, [r6, #0]
 800aea8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800aeaa:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800aeac:	429a      	cmp	r2, r3
 800aeae:	d209      	bcs.n	800aec4 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 800aeb0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800aeb4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800aeb8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800aebc:	f3bf 8f4f 	dsb	sy
 800aec0:	f3bf 8f6f 	isb	sy
}
 800aec4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800aec8:	4b10      	ldr	r3, [pc, #64]	@ (800af0c <prvAddNewTaskToReadyList+0xf8>)
 800aeca:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800aecc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 800aece:	2a00      	cmp	r2, #0
 800aed0:	d1d2      	bne.n	800ae78 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800aed2:	6832      	ldr	r2, [r6, #0]
 800aed4:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800aed6:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800aed8:	bf98      	it	ls
 800aeda:	6034      	strls	r4, [r6, #0]
 800aedc:	e7cc      	b.n	800ae78 <prvAddNewTaskToReadyList+0x64>
 800aede:	bf00      	nop
 800aee0:	20014c28 	.word	0x20014c28
 800aee4:	200150fc 	.word	0x200150fc
 800aee8:	20014c9c 	.word	0x20014c9c
 800aeec:	20014c74 	.word	0x20014c74
 800aef0:	20014c58 	.word	0x20014c58
 800aef4:	20014c44 	.word	0x20014c44
 800aef8:	20014c2c 	.word	0x20014c2c
 800aefc:	20014c70 	.word	0x20014c70
 800af00:	20014c6c 	.word	0x20014c6c
 800af04:	20014c0c 	.word	0x20014c0c
 800af08:	20014c20 	.word	0x20014c20
 800af0c:	20014c1c 	.word	0x20014c1c
 800af10:	20014c88 	.word	0x20014c88

0800af14 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800af14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800af16:	4b15      	ldr	r3, [pc, #84]	@ (800af6c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800af18:	4d15      	ldr	r5, [pc, #84]	@ (800af70 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800af1a:	681c      	ldr	r4, [r3, #0]
{
 800af1c:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800af1e:	6828      	ldr	r0, [r5, #0]
 800af20:	3004      	adds	r0, #4
{
 800af22:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800af24:	f7ff f8b6 	bl	800a094 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800af28:	1c73      	adds	r3, r6, #1
 800af2a:	d107      	bne.n	800af3c <prvAddCurrentTaskToDelayedList+0x28>
 800af2c:	b137      	cbz	r7, 800af3c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800af2e:	6829      	ldr	r1, [r5, #0]
 800af30:	4810      	ldr	r0, [pc, #64]	@ (800af74 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800af32:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800af36:	3104      	adds	r1, #4
 800af38:	f7ff b88a 	b.w	800a050 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800af3c:	682b      	ldr	r3, [r5, #0]
 800af3e:	19a4      	adds	r4, r4, r6
 800af40:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800af42:	d307      	bcc.n	800af54 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800af44:	4b0c      	ldr	r3, [pc, #48]	@ (800af78 <prvAddCurrentTaskToDelayedList+0x64>)
 800af46:	6818      	ldr	r0, [r3, #0]
 800af48:	6829      	ldr	r1, [r5, #0]
}
 800af4a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800af4e:	3104      	adds	r1, #4
 800af50:	f7ff b889 	b.w	800a066 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800af54:	4b09      	ldr	r3, [pc, #36]	@ (800af7c <prvAddCurrentTaskToDelayedList+0x68>)
 800af56:	6818      	ldr	r0, [r3, #0]
 800af58:	6829      	ldr	r1, [r5, #0]
 800af5a:	3104      	adds	r1, #4
 800af5c:	f7ff f883 	bl	800a066 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800af60:	4b07      	ldr	r3, [pc, #28]	@ (800af80 <prvAddCurrentTaskToDelayedList+0x6c>)
 800af62:	681a      	ldr	r2, [r3, #0]
 800af64:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800af66:	bf88      	it	hi
 800af68:	601c      	strhi	r4, [r3, #0]
}
 800af6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800af6c:	20014c24 	.word	0x20014c24
 800af70:	200150fc 	.word	0x200150fc
 800af74:	20014c2c 	.word	0x20014c2c
 800af78:	20014c6c 	.word	0x20014c6c
 800af7c:	20014c70 	.word	0x20014c70
 800af80:	20014c08 	.word	0x20014c08

0800af84 <prvTaskIsTaskSuspended>:
		configASSERT( xTask );
 800af84:	b940      	cbnz	r0, 800af98 <prvTaskIsTaskSuspended+0x14>
 800af86:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800af8a:	f383 8811 	msr	BASEPRI, r3
 800af8e:	f3bf 8f6f 	isb	sy
 800af92:	f3bf 8f4f 	dsb	sy
 800af96:	e7fe      	b.n	800af96 <prvTaskIsTaskSuspended+0x12>
		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
 800af98:	6942      	ldr	r2, [r0, #20]
 800af9a:	4b06      	ldr	r3, [pc, #24]	@ (800afb4 <prvTaskIsTaskSuspended+0x30>)
 800af9c:	429a      	cmp	r2, r3
 800af9e:	d107      	bne.n	800afb0 <prvTaskIsTaskSuspended+0x2c>
			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
 800afa0:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800afa2:	4b05      	ldr	r3, [pc, #20]	@ (800afb8 <prvTaskIsTaskSuspended+0x34>)
 800afa4:	4298      	cmp	r0, r3
 800afa6:	d003      	beq.n	800afb0 <prvTaskIsTaskSuspended+0x2c>
				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The cast is only redundant when NULL is used. */
 800afa8:	fab0 f080 	clz	r0, r0
 800afac:	0940      	lsrs	r0, r0, #5
 800afae:	4770      	bx	lr
	BaseType_t xReturn = pdFALSE;
 800afb0:	2000      	movs	r0, #0
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 800afb2:	4770      	bx	lr
 800afb4:	20014c2c 	.word	0x20014c2c
 800afb8:	20014c58 	.word	0x20014c58

0800afbc <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800afbc:	4a06      	ldr	r2, [pc, #24]	@ (800afd8 <prvResetNextTaskUnblockTime+0x1c>)
 800afbe:	6813      	ldr	r3, [r2, #0]
 800afc0:	6819      	ldr	r1, [r3, #0]
 800afc2:	4b06      	ldr	r3, [pc, #24]	@ (800afdc <prvResetNextTaskUnblockTime+0x20>)
 800afc4:	b919      	cbnz	r1, 800afce <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800afc6:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800afca:	601a      	str	r2, [r3, #0]
}
 800afcc:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800afce:	6812      	ldr	r2, [r2, #0]
 800afd0:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800afd2:	68d2      	ldr	r2, [r2, #12]
 800afd4:	6852      	ldr	r2, [r2, #4]
 800afd6:	e7f8      	b.n	800afca <prvResetNextTaskUnblockTime+0xe>
 800afd8:	20014c70 	.word	0x20014c70
 800afdc:	20014c08 	.word	0x20014c08

0800afe0 <prvDeleteTCB>:
	{
 800afe0:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800afe2:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
 800afe6:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800afe8:	b93b      	cbnz	r3, 800affa <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800afea:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 800afec:	f7fe ffe4 	bl	8009fb8 <vPortFree>
				vPortFree( pxTCB );
 800aff0:	4620      	mov	r0, r4
	}
 800aff2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800aff6:	f7fe bfdf 	b.w	8009fb8 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800affa:	2b01      	cmp	r3, #1
 800affc:	d0f9      	beq.n	800aff2 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800affe:	2b02      	cmp	r3, #2
 800b000:	d008      	beq.n	800b014 <prvDeleteTCB+0x34>
 800b002:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b006:	f383 8811 	msr	BASEPRI, r3
 800b00a:	f3bf 8f6f 	isb	sy
 800b00e:	f3bf 8f4f 	dsb	sy
 800b012:	e7fe      	b.n	800b012 <prvDeleteTCB+0x32>
	}
 800b014:	bd10      	pop	{r4, pc}
	...

0800b018 <prvIdleTask>:
{
 800b018:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800b01a:	4c13      	ldr	r4, [pc, #76]	@ (800b068 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b01c:	4f13      	ldr	r7, [pc, #76]	@ (800b06c <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 800b01e:	4d14      	ldr	r5, [pc, #80]	@ (800b070 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800b020:	6823      	ldr	r3, [r4, #0]
 800b022:	b973      	cbnz	r3, 800b042 <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800b024:	4b13      	ldr	r3, [pc, #76]	@ (800b074 <prvIdleTask+0x5c>)
 800b026:	681b      	ldr	r3, [r3, #0]
 800b028:	2b01      	cmp	r3, #1
 800b02a:	d9f8      	bls.n	800b01e <prvIdleTask+0x6>
				taskYIELD();
 800b02c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800b030:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800b034:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800b038:	f3bf 8f4f 	dsb	sy
 800b03c:	f3bf 8f6f 	isb	sy
 800b040:	e7ed      	b.n	800b01e <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800b042:	f7ff f89f 	bl	800a184 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b046:	68fb      	ldr	r3, [r7, #12]
 800b048:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800b04a:	1d30      	adds	r0, r6, #4
 800b04c:	f7ff f822 	bl	800a094 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800b050:	682b      	ldr	r3, [r5, #0]
 800b052:	3b01      	subs	r3, #1
 800b054:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800b056:	6823      	ldr	r3, [r4, #0]
 800b058:	3b01      	subs	r3, #1
 800b05a:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800b05c:	f7ff f8b2 	bl	800a1c4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800b060:	4630      	mov	r0, r6
 800b062:	f7ff ffbd 	bl	800afe0 <prvDeleteTCB>
 800b066:	e7db      	b.n	800b020 <prvIdleTask+0x8>
 800b068:	20014c40 	.word	0x20014c40
 800b06c:	20014c44 	.word	0x20014c44
 800b070:	20014c28 	.word	0x20014c28
 800b074:	20014c9c 	.word	0x20014c9c

0800b078 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800b078:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b07c:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800b080:	0096      	lsls	r6, r2, #2
 800b082:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800b084:	4607      	mov	r7, r0
 800b086:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800b088:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800b08a:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800b08c:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800b08e:	f01a fb18 	bl	80256c2 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800b092:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800b094:	3e04      	subs	r6, #4
 800b096:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800b098:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 800b09c:	b3b5      	cbz	r5, 800b10c <prvInitialiseNewTask.constprop.0+0x94>
 800b09e:	1e6b      	subs	r3, r5, #1
 800b0a0:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 800b0a4:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800b0a6:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800b0aa:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 800b0ae:	b109      	cbz	r1, 800b0b4 <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800b0b0:	42ab      	cmp	r3, r5
 800b0b2:	d1f8      	bne.n	800b0a6 <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800b0b4:	2300      	movs	r3, #0
 800b0b6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800b0ba:	9d08      	ldr	r5, [sp, #32]
 800b0bc:	2d37      	cmp	r5, #55	@ 0x37
 800b0be:	bf28      	it	cs
 800b0c0:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800b0c2:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800b0c6:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800b0c8:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800b0ca:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800b0cc:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800b0d0:	f7fe ffbb 	bl	800a04a <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b0d4:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800b0d8:	f104 0018 	add.w	r0, r4, #24
 800b0dc:	f7fe ffb5 	bl	800a04a <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800b0e0:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800b0e4:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b0e6:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800b0e8:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 800b0ea:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800b0ee:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800b0f2:	4642      	mov	r2, r8
 800b0f4:	4639      	mov	r1, r7
 800b0f6:	4630      	mov	r0, r6
 800b0f8:	f7ff f81a 	bl	800a130 <pxPortInitialiseStack>
 800b0fc:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800b0fe:	f1b9 0f00 	cmp.w	r9, #0
 800b102:	d001      	beq.n	800b108 <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800b104:	f8c9 4000 	str.w	r4, [r9]
}
 800b108:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800b10c:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 800b110:	e7d3      	b.n	800b0ba <prvInitialiseNewTask.constprop.0+0x42>

0800b112 <xTaskCreateStatic>:
	{
 800b112:	b570      	push	{r4, r5, r6, lr}
 800b114:	b086      	sub	sp, #24
 800b116:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 800b11a:	b945      	cbnz	r5, 800b12e <xTaskCreateStatic+0x1c>
 800b11c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b120:	f383 8811 	msr	BASEPRI, r3
 800b124:	f3bf 8f6f 	isb	sy
 800b128:	f3bf 8f4f 	dsb	sy
 800b12c:	e7fe      	b.n	800b12c <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800b12e:	b944      	cbnz	r4, 800b142 <xTaskCreateStatic+0x30>
 800b130:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b134:	f383 8811 	msr	BASEPRI, r3
 800b138:	f3bf 8f6f 	isb	sy
 800b13c:	f3bf 8f4f 	dsb	sy
 800b140:	e7fe      	b.n	800b140 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800b142:	2660      	movs	r6, #96	@ 0x60
 800b144:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800b146:	9e05      	ldr	r6, [sp, #20]
 800b148:	2e60      	cmp	r6, #96	@ 0x60
 800b14a:	d008      	beq.n	800b15e <xTaskCreateStatic+0x4c>
 800b14c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b150:	f383 8811 	msr	BASEPRI, r3
 800b154:	f3bf 8f6f 	isb	sy
 800b158:	f3bf 8f4f 	dsb	sy
 800b15c:	e7fe      	b.n	800b15c <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800b15e:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800b160:	2502      	movs	r5, #2
 800b162:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800b166:	ad04      	add	r5, sp, #16
 800b168:	9501      	str	r5, [sp, #4]
 800b16a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 800b16c:	9402      	str	r4, [sp, #8]
 800b16e:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800b170:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800b172:	f7ff ff81 	bl	800b078 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800b176:	4620      	mov	r0, r4
 800b178:	f7ff fe4c 	bl	800ae14 <prvAddNewTaskToReadyList>
	}
 800b17c:	9804      	ldr	r0, [sp, #16]
 800b17e:	b006      	add	sp, #24
 800b180:	bd70      	pop	{r4, r5, r6, pc}

0800b182 <xTaskCreate>:
	{
 800b182:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b186:	4607      	mov	r7, r0
 800b188:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800b18a:	0090      	lsls	r0, r2, #2
	{
 800b18c:	4688      	mov	r8, r1
 800b18e:	4616      	mov	r6, r2
 800b190:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800b192:	f7fe fe79 	bl	8009e88 <pvPortMalloc>
			if( pxStack != NULL )
 800b196:	4605      	mov	r5, r0
 800b198:	b920      	cbnz	r0, 800b1a4 <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800b19a:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800b19e:	b005      	add	sp, #20
 800b1a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800b1a4:	2060      	movs	r0, #96	@ 0x60
 800b1a6:	f7fe fe6f 	bl	8009e88 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800b1aa:	4604      	mov	r4, r0
 800b1ac:	b198      	cbz	r0, 800b1d6 <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800b1ae:	2300      	movs	r3, #0
 800b1b0:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800b1b4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
					pxNewTCB->pxStack = pxStack;
 800b1b6:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800b1b8:	9301      	str	r3, [sp, #4]
 800b1ba:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800b1bc:	9002      	str	r0, [sp, #8]
 800b1be:	9300      	str	r3, [sp, #0]
 800b1c0:	4632      	mov	r2, r6
 800b1c2:	464b      	mov	r3, r9
 800b1c4:	4641      	mov	r1, r8
 800b1c6:	4638      	mov	r0, r7
 800b1c8:	f7ff ff56 	bl	800b078 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800b1cc:	4620      	mov	r0, r4
 800b1ce:	f7ff fe21 	bl	800ae14 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800b1d2:	2001      	movs	r0, #1
 800b1d4:	e7e3      	b.n	800b19e <xTaskCreate+0x1c>
					vPortFree( pxStack );
 800b1d6:	4628      	mov	r0, r5
 800b1d8:	f7fe feee 	bl	8009fb8 <vPortFree>
		if( pxNewTCB != NULL )
 800b1dc:	e7dd      	b.n	800b19a <xTaskCreate+0x18>
	...

0800b1e0 <eTaskGetState>:
	{
 800b1e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( pxTCB );
 800b1e2:	4604      	mov	r4, r0
 800b1e4:	b940      	cbnz	r0, 800b1f8 <eTaskGetState+0x18>
 800b1e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b1ea:	f383 8811 	msr	BASEPRI, r3
 800b1ee:	f3bf 8f6f 	isb	sy
 800b1f2:	f3bf 8f4f 	dsb	sy
 800b1f6:	e7fe      	b.n	800b1f6 <eTaskGetState+0x16>
		if( pxTCB == pxCurrentTCB )
 800b1f8:	4b15      	ldr	r3, [pc, #84]	@ (800b250 <eTaskGetState+0x70>)
 800b1fa:	681b      	ldr	r3, [r3, #0]
 800b1fc:	4283      	cmp	r3, r0
 800b1fe:	d020      	beq.n	800b242 <eTaskGetState+0x62>
			taskENTER_CRITICAL();
 800b200:	f7fe ffc0 	bl	800a184 <vPortEnterCritical>
				pxDelayedList = pxDelayedTaskList;
 800b204:	4b13      	ldr	r3, [pc, #76]	@ (800b254 <eTaskGetState+0x74>)
				pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
 800b206:	6965      	ldr	r5, [r4, #20]
				pxDelayedList = pxDelayedTaskList;
 800b208:	681f      	ldr	r7, [r3, #0]
				pxOverflowedDelayedList = pxOverflowDelayedTaskList;
 800b20a:	4b13      	ldr	r3, [pc, #76]	@ (800b258 <eTaskGetState+0x78>)
 800b20c:	681e      	ldr	r6, [r3, #0]
			taskEXIT_CRITICAL();
 800b20e:	f7fe ffd9 	bl	800a1c4 <vPortExitCritical>
			if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
 800b212:	42bd      	cmp	r5, r7
 800b214:	d017      	beq.n	800b246 <eTaskGetState+0x66>
 800b216:	42b5      	cmp	r5, r6
 800b218:	d015      	beq.n	800b246 <eTaskGetState+0x66>
				else if( pxStateList == &xSuspendedTaskList )
 800b21a:	4b10      	ldr	r3, [pc, #64]	@ (800b25c <eTaskGetState+0x7c>)
 800b21c:	429d      	cmp	r5, r3
 800b21e:	d108      	bne.n	800b232 <eTaskGetState+0x52>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
 800b220:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800b222:	b983      	cbnz	r3, 800b246 <eTaskGetState+0x66>
							if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
 800b224:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
								eReturn = eSuspended;
 800b228:	2b01      	cmp	r3, #1
 800b22a:	bf0c      	ite	eq
 800b22c:	2002      	moveq	r0, #2
 800b22e:	2003      	movne	r0, #3
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 800b230:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
 800b232:	4b0b      	ldr	r3, [pc, #44]	@ (800b260 <eTaskGetState+0x80>)
 800b234:	429d      	cmp	r5, r3
 800b236:	d008      	beq.n	800b24a <eTaskGetState+0x6a>
				eReturn = eReady;
 800b238:	2d00      	cmp	r5, #0
 800b23a:	bf0c      	ite	eq
 800b23c:	2004      	moveq	r0, #4
 800b23e:	2001      	movne	r0, #1
 800b240:	e7f6      	b.n	800b230 <eTaskGetState+0x50>
			eReturn = eRunning;
 800b242:	2000      	movs	r0, #0
 800b244:	e7f4      	b.n	800b230 <eTaskGetState+0x50>
				eReturn = eBlocked;
 800b246:	2002      	movs	r0, #2
 800b248:	e7f2      	b.n	800b230 <eTaskGetState+0x50>
					eReturn = eDeleted;
 800b24a:	2004      	movs	r0, #4
 800b24c:	e7f0      	b.n	800b230 <eTaskGetState+0x50>
 800b24e:	bf00      	nop
 800b250:	200150fc 	.word	0x200150fc
 800b254:	20014c70 	.word	0x20014c70
 800b258:	20014c6c 	.word	0x20014c6c
 800b25c:	20014c2c 	.word	0x20014c2c
 800b260:	20014c44 	.word	0x20014c44

0800b264 <vTaskResume>:
	{
 800b264:	b570      	push	{r4, r5, r6, lr}
		configASSERT( xTaskToResume );
 800b266:	4604      	mov	r4, r0
 800b268:	b940      	cbnz	r0, 800b27c <vTaskResume+0x18>
 800b26a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b26e:	f383 8811 	msr	BASEPRI, r3
 800b272:	f3bf 8f6f 	isb	sy
 800b276:	f3bf 8f4f 	dsb	sy
 800b27a:	e7fe      	b.n	800b27a <vTaskResume+0x16>
		if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
 800b27c:	4d17      	ldr	r5, [pc, #92]	@ (800b2dc <vTaskResume+0x78>)
 800b27e:	682b      	ldr	r3, [r5, #0]
 800b280:	4283      	cmp	r3, r0
 800b282:	d029      	beq.n	800b2d8 <vTaskResume+0x74>
			taskENTER_CRITICAL();
 800b284:	f7fe ff7e 	bl	800a184 <vPortEnterCritical>
				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
 800b288:	4620      	mov	r0, r4
 800b28a:	f7ff fe7b 	bl	800af84 <prvTaskIsTaskSuspended>
 800b28e:	b1f8      	cbz	r0, 800b2d0 <vTaskResume+0x6c>
					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
 800b290:	1d26      	adds	r6, r4, #4
 800b292:	4630      	mov	r0, r6
 800b294:	f7fe fefe 	bl	800a094 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800b298:	4a11      	ldr	r2, [pc, #68]	@ (800b2e0 <vTaskResume+0x7c>)
 800b29a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800b29c:	6811      	ldr	r1, [r2, #0]
 800b29e:	428b      	cmp	r3, r1
 800b2a0:	bf88      	it	hi
 800b2a2:	6013      	strhi	r3, [r2, #0]
 800b2a4:	4a0f      	ldr	r2, [pc, #60]	@ (800b2e4 <vTaskResume+0x80>)
 800b2a6:	2014      	movs	r0, #20
 800b2a8:	fb00 2003 	mla	r0, r0, r3, r2
 800b2ac:	4631      	mov	r1, r6
 800b2ae:	f7fe fecf 	bl	800a050 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800b2b2:	682b      	ldr	r3, [r5, #0]
 800b2b4:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800b2b6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b2b8:	429a      	cmp	r2, r3
 800b2ba:	d309      	bcc.n	800b2d0 <vTaskResume+0x6c>
						taskYIELD_IF_USING_PREEMPTION();
 800b2bc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800b2c0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800b2c4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800b2c8:	f3bf 8f4f 	dsb	sy
 800b2cc:	f3bf 8f6f 	isb	sy
	}
 800b2d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			taskEXIT_CRITICAL();
 800b2d4:	f7fe bf76 	b.w	800a1c4 <vPortExitCritical>
	}
 800b2d8:	bd70      	pop	{r4, r5, r6, pc}
 800b2da:	bf00      	nop
 800b2dc:	200150fc 	.word	0x200150fc
 800b2e0:	20014c20 	.word	0x20014c20
 800b2e4:	20014c9c 	.word	0x20014c9c

0800b2e8 <vTaskStartScheduler>:
{
 800b2e8:	b510      	push	{r4, lr}
 800b2ea:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800b2ec:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800b2ee:	aa07      	add	r2, sp, #28
 800b2f0:	a906      	add	r1, sp, #24
 800b2f2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800b2f4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800b2f8:	f7fe fd88 	bl	8009e0c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800b2fc:	9b05      	ldr	r3, [sp, #20]
 800b2fe:	9302      	str	r3, [sp, #8]
 800b300:	9b06      	ldr	r3, [sp, #24]
 800b302:	9a07      	ldr	r2, [sp, #28]
 800b304:	4916      	ldr	r1, [pc, #88]	@ (800b360 <vTaskStartScheduler+0x78>)
 800b306:	4817      	ldr	r0, [pc, #92]	@ (800b364 <vTaskStartScheduler+0x7c>)
 800b308:	e9cd 4300 	strd	r4, r3, [sp]
 800b30c:	4623      	mov	r3, r4
 800b30e:	f7ff ff00 	bl	800b112 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800b312:	b318      	cbz	r0, 800b35c <vTaskStartScheduler+0x74>
			xReturn = xTimerCreateTimerTask();
 800b314:	f000 fc00 	bl	800bb18 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800b318:	2801      	cmp	r0, #1
 800b31a:	d114      	bne.n	800b346 <vTaskStartScheduler+0x5e>
 800b31c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b320:	f383 8811 	msr	BASEPRI, r3
 800b324:	f3bf 8f6f 	isb	sy
 800b328:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 800b32c:	4b0e      	ldr	r3, [pc, #56]	@ (800b368 <vTaskStartScheduler+0x80>)
 800b32e:	f04f 32ff 	mov.w	r2, #4294967295
 800b332:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800b334:	4b0d      	ldr	r3, [pc, #52]	@ (800b36c <vTaskStartScheduler+0x84>)
 800b336:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800b338:	4b0d      	ldr	r3, [pc, #52]	@ (800b370 <vTaskStartScheduler+0x88>)
 800b33a:	601c      	str	r4, [r3, #0]
}
 800b33c:	b008      	add	sp, #32
 800b33e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800b342:	f7fe bfaf 	b.w	800a2a4 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800b346:	3001      	adds	r0, #1
 800b348:	d108      	bne.n	800b35c <vTaskStartScheduler+0x74>
 800b34a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b34e:	f383 8811 	msr	BASEPRI, r3
 800b352:	f3bf 8f6f 	isb	sy
 800b356:	f3bf 8f4f 	dsb	sy
 800b35a:	e7fe      	b.n	800b35a <vTaskStartScheduler+0x72>
}
 800b35c:	b008      	add	sp, #32
 800b35e:	bd10      	pop	{r4, pc}
 800b360:	08027240 	.word	0x08027240
 800b364:	0800b019 	.word	0x0800b019
 800b368:	20014c08 	.word	0x20014c08
 800b36c:	20014c1c 	.word	0x20014c1c
 800b370:	20014c24 	.word	0x20014c24

0800b374 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800b374:	4a02      	ldr	r2, [pc, #8]	@ (800b380 <vTaskSuspendAll+0xc>)
 800b376:	6813      	ldr	r3, [r2, #0]
 800b378:	3301      	adds	r3, #1
 800b37a:	6013      	str	r3, [r2, #0]
}
 800b37c:	4770      	bx	lr
 800b37e:	bf00      	nop
 800b380:	20014c04 	.word	0x20014c04

0800b384 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800b384:	4b01      	ldr	r3, [pc, #4]	@ (800b38c <xTaskGetTickCount+0x8>)
 800b386:	6818      	ldr	r0, [r3, #0]
}
 800b388:	4770      	bx	lr
 800b38a:	bf00      	nop
 800b38c:	20014c24 	.word	0x20014c24

0800b390 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b390:	4b3f      	ldr	r3, [pc, #252]	@ (800b490 <xTaskIncrementTick+0x100>)
 800b392:	681b      	ldr	r3, [r3, #0]
{
 800b394:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b398:	2b00      	cmp	r3, #0
 800b39a:	d172      	bne.n	800b482 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800b39c:	4b3d      	ldr	r3, [pc, #244]	@ (800b494 <xTaskIncrementTick+0x104>)
 800b39e:	681c      	ldr	r4, [r3, #0]
 800b3a0:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 800b3a2:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800b3a4:	b9bc      	cbnz	r4, 800b3d6 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800b3a6:	4b3c      	ldr	r3, [pc, #240]	@ (800b498 <xTaskIncrementTick+0x108>)
 800b3a8:	681a      	ldr	r2, [r3, #0]
 800b3aa:	6812      	ldr	r2, [r2, #0]
 800b3ac:	b142      	cbz	r2, 800b3c0 <xTaskIncrementTick+0x30>
 800b3ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b3b2:	f383 8811 	msr	BASEPRI, r3
 800b3b6:	f3bf 8f6f 	isb	sy
 800b3ba:	f3bf 8f4f 	dsb	sy
 800b3be:	e7fe      	b.n	800b3be <xTaskIncrementTick+0x2e>
 800b3c0:	4a36      	ldr	r2, [pc, #216]	@ (800b49c <xTaskIncrementTick+0x10c>)
 800b3c2:	6819      	ldr	r1, [r3, #0]
 800b3c4:	6810      	ldr	r0, [r2, #0]
 800b3c6:	6018      	str	r0, [r3, #0]
 800b3c8:	6011      	str	r1, [r2, #0]
 800b3ca:	4a35      	ldr	r2, [pc, #212]	@ (800b4a0 <xTaskIncrementTick+0x110>)
 800b3cc:	6813      	ldr	r3, [r2, #0]
 800b3ce:	3301      	adds	r3, #1
 800b3d0:	6013      	str	r3, [r2, #0]
 800b3d2:	f7ff fdf3 	bl	800afbc <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800b3d6:	4d33      	ldr	r5, [pc, #204]	@ (800b4a4 <xTaskIncrementTick+0x114>)
 800b3d8:	4e33      	ldr	r6, [pc, #204]	@ (800b4a8 <xTaskIncrementTick+0x118>)
 800b3da:	682b      	ldr	r3, [r5, #0]
 800b3dc:	4f33      	ldr	r7, [pc, #204]	@ (800b4ac <xTaskIncrementTick+0x11c>)
 800b3de:	429c      	cmp	r4, r3
BaseType_t xSwitchRequired = pdFALSE;
 800b3e0:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800b3e4:	d212      	bcs.n	800b40c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800b3e6:	683a      	ldr	r2, [r7, #0]
 800b3e8:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800b3ea:	2114      	movs	r1, #20
 800b3ec:	434a      	muls	r2, r1
 800b3ee:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 800b3f0:	2a02      	cmp	r2, #2
			if( xYieldPending != pdFALSE )
 800b3f2:	4a2f      	ldr	r2, [pc, #188]	@ (800b4b0 <xTaskIncrementTick+0x120>)
 800b3f4:	6812      	ldr	r2, [r2, #0]
				xSwitchRequired = pdTRUE;
 800b3f6:	bf28      	it	cs
 800b3f8:	f04f 0b01 	movcs.w	fp, #1
				xSwitchRequired = pdTRUE;
 800b3fc:	2a00      	cmp	r2, #0
 800b3fe:	bf18      	it	ne
 800b400:	f04f 0b01 	movne.w	fp, #1
}
 800b404:	4658      	mov	r0, fp
 800b406:	b003      	add	sp, #12
 800b408:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800b40c:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 800b498 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800b410:	f8df a0a4 	ldr.w	sl, [pc, #164]	@ 800b4b8 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800b414:	f8d9 2000 	ldr.w	r2, [r9]
 800b418:	6812      	ldr	r2, [r2, #0]
 800b41a:	b91a      	cbnz	r2, 800b424 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b41c:	f04f 32ff 	mov.w	r2, #4294967295
 800b420:	602a      	str	r2, [r5, #0]
					break;
 800b422:	e7e0      	b.n	800b3e6 <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b424:	f8d9 2000 	ldr.w	r2, [r9]
 800b428:	68d2      	ldr	r2, [r2, #12]
 800b42a:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800b42e:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 800b432:	428c      	cmp	r4, r1
 800b434:	d201      	bcs.n	800b43a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800b436:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800b438:	e7d5      	b.n	800b3e6 <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800b43a:	f108 0304 	add.w	r3, r8, #4
 800b43e:	4618      	mov	r0, r3
 800b440:	9301      	str	r3, [sp, #4]
 800b442:	f7fe fe27 	bl	800a094 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800b446:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 800b44a:	b119      	cbz	r1, 800b454 <xTaskIncrementTick+0xc4>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800b44c:	f108 0018 	add.w	r0, r8, #24
 800b450:	f7fe fe20 	bl	800a094 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800b454:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 800b458:	f8da 1000 	ldr.w	r1, [sl]
 800b45c:	2314      	movs	r3, #20
 800b45e:	4288      	cmp	r0, r1
 800b460:	bf88      	it	hi
 800b462:	f8ca 0000 	strhi.w	r0, [sl]
 800b466:	9901      	ldr	r1, [sp, #4]
 800b468:	fb03 6000 	mla	r0, r3, r0, r6
 800b46c:	f7fe fdf0 	bl	800a050 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800b470:	6838      	ldr	r0, [r7, #0]
 800b472:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 800b476:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 800b478:	4291      	cmp	r1, r2
 800b47a:	bf28      	it	cs
 800b47c:	f04f 0b01 	movcs.w	fp, #1
 800b480:	e7c8      	b.n	800b414 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800b482:	4a0c      	ldr	r2, [pc, #48]	@ (800b4b4 <xTaskIncrementTick+0x124>)
 800b484:	6813      	ldr	r3, [r2, #0]
 800b486:	3301      	adds	r3, #1
 800b488:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800b48a:	f04f 0b00 	mov.w	fp, #0
 800b48e:	e7b9      	b.n	800b404 <xTaskIncrementTick+0x74>
 800b490:	20014c04 	.word	0x20014c04
 800b494:	20014c24 	.word	0x20014c24
 800b498:	20014c70 	.word	0x20014c70
 800b49c:	20014c6c 	.word	0x20014c6c
 800b4a0:	20014c10 	.word	0x20014c10
 800b4a4:	20014c08 	.word	0x20014c08
 800b4a8:	20014c9c 	.word	0x20014c9c
 800b4ac:	200150fc 	.word	0x200150fc
 800b4b0:	20014c14 	.word	0x20014c14
 800b4b4:	20014c18 	.word	0x20014c18
 800b4b8:	20014c20 	.word	0x20014c20

0800b4bc <xTaskResumeAll>:
{
 800b4bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 800b4c0:	4c30      	ldr	r4, [pc, #192]	@ (800b584 <xTaskResumeAll+0xc8>)
 800b4c2:	6823      	ldr	r3, [r4, #0]
 800b4c4:	b943      	cbnz	r3, 800b4d8 <xTaskResumeAll+0x1c>
 800b4c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b4ca:	f383 8811 	msr	BASEPRI, r3
 800b4ce:	f3bf 8f6f 	isb	sy
 800b4d2:	f3bf 8f4f 	dsb	sy
 800b4d6:	e7fe      	b.n	800b4d6 <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 800b4d8:	f7fe fe54 	bl	800a184 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800b4dc:	6823      	ldr	r3, [r4, #0]
 800b4de:	3b01      	subs	r3, #1
 800b4e0:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b4e2:	6824      	ldr	r4, [r4, #0]
 800b4e4:	b12c      	cbz	r4, 800b4f2 <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 800b4e6:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800b4e8:	f7fe fe6c 	bl	800a1c4 <vPortExitCritical>
}
 800b4ec:	4620      	mov	r0, r4
 800b4ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800b4f2:	4b25      	ldr	r3, [pc, #148]	@ (800b588 <xTaskResumeAll+0xcc>)
 800b4f4:	681b      	ldr	r3, [r3, #0]
 800b4f6:	2b00      	cmp	r3, #0
 800b4f8:	d0f5      	beq.n	800b4e6 <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800b4fa:	4d24      	ldr	r5, [pc, #144]	@ (800b58c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800b4fc:	4e24      	ldr	r6, [pc, #144]	@ (800b590 <xTaskResumeAll+0xd4>)
 800b4fe:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 800b5a0 <xTaskResumeAll+0xe4>
 800b502:	e01d      	b.n	800b540 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b504:	68eb      	ldr	r3, [r5, #12]
 800b506:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800b508:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800b50a:	f104 0018 	add.w	r0, r4, #24
 800b50e:	f7fe fdc1 	bl	800a094 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800b512:	4638      	mov	r0, r7
 800b514:	f7fe fdbe 	bl	800a094 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800b518:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800b51a:	6832      	ldr	r2, [r6, #0]
 800b51c:	2014      	movs	r0, #20
 800b51e:	4293      	cmp	r3, r2
 800b520:	fb00 8003 	mla	r0, r0, r3, r8
 800b524:	4639      	mov	r1, r7
 800b526:	bf88      	it	hi
 800b528:	6033      	strhi	r3, [r6, #0]
 800b52a:	f7fe fd91 	bl	800a050 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800b52e:	4b19      	ldr	r3, [pc, #100]	@ (800b594 <xTaskResumeAll+0xd8>)
 800b530:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800b532:	681b      	ldr	r3, [r3, #0]
 800b534:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b536:	429a      	cmp	r2, r3
 800b538:	d302      	bcc.n	800b540 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 800b53a:	4b17      	ldr	r3, [pc, #92]	@ (800b598 <xTaskResumeAll+0xdc>)
 800b53c:	2201      	movs	r2, #1
 800b53e:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800b540:	682b      	ldr	r3, [r5, #0]
 800b542:	2b00      	cmp	r3, #0
 800b544:	d1de      	bne.n	800b504 <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 800b546:	b10c      	cbz	r4, 800b54c <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 800b548:	f7ff fd38 	bl	800afbc <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800b54c:	4d13      	ldr	r5, [pc, #76]	@ (800b59c <xTaskResumeAll+0xe0>)
 800b54e:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800b550:	b144      	cbz	r4, 800b564 <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 800b552:	4e11      	ldr	r6, [pc, #68]	@ (800b598 <xTaskResumeAll+0xdc>)
 800b554:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800b556:	f7ff ff1b 	bl	800b390 <xTaskIncrementTick>
 800b55a:	b100      	cbz	r0, 800b55e <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 800b55c:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800b55e:	3c01      	subs	r4, #1
 800b560:	d1f9      	bne.n	800b556 <xTaskResumeAll+0x9a>
						xPendedTicks = 0;
 800b562:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800b564:	4b0c      	ldr	r3, [pc, #48]	@ (800b598 <xTaskResumeAll+0xdc>)
 800b566:	681b      	ldr	r3, [r3, #0]
 800b568:	2b00      	cmp	r3, #0
 800b56a:	d0bc      	beq.n	800b4e6 <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 800b56c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800b570:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800b574:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800b578:	f3bf 8f4f 	dsb	sy
 800b57c:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800b580:	2401      	movs	r4, #1
 800b582:	e7b1      	b.n	800b4e8 <xTaskResumeAll+0x2c>
 800b584:	20014c04 	.word	0x20014c04
 800b588:	20014c28 	.word	0x20014c28
 800b58c:	20014c58 	.word	0x20014c58
 800b590:	20014c20 	.word	0x20014c20
 800b594:	200150fc 	.word	0x200150fc
 800b598:	20014c14 	.word	0x20014c14
 800b59c:	20014c18 	.word	0x20014c18
 800b5a0:	20014c9c 	.word	0x20014c9c

0800b5a4 <vTaskDelay>:
	{
 800b5a4:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800b5a6:	b950      	cbnz	r0, 800b5be <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800b5a8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800b5ac:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800b5b0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800b5b4:	f3bf 8f4f 	dsb	sy
 800b5b8:	f3bf 8f6f 	isb	sy
	}
 800b5bc:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800b5be:	4b0a      	ldr	r3, [pc, #40]	@ (800b5e8 <vTaskDelay+0x44>)
 800b5c0:	6819      	ldr	r1, [r3, #0]
 800b5c2:	b141      	cbz	r1, 800b5d6 <vTaskDelay+0x32>
 800b5c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b5c8:	f383 8811 	msr	BASEPRI, r3
 800b5cc:	f3bf 8f6f 	isb	sy
 800b5d0:	f3bf 8f4f 	dsb	sy
 800b5d4:	e7fe      	b.n	800b5d4 <vTaskDelay+0x30>
			vTaskSuspendAll();
 800b5d6:	f7ff fecd 	bl	800b374 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800b5da:	f7ff fc9b 	bl	800af14 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800b5de:	f7ff ff6d 	bl	800b4bc <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800b5e2:	2800      	cmp	r0, #0
 800b5e4:	d0e0      	beq.n	800b5a8 <vTaskDelay+0x4>
 800b5e6:	e7e9      	b.n	800b5bc <vTaskDelay+0x18>
 800b5e8:	20014c04 	.word	0x20014c04

0800b5ec <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800b5ec:	4b17      	ldr	r3, [pc, #92]	@ (800b64c <vTaskSwitchContext+0x60>)
 800b5ee:	681a      	ldr	r2, [r3, #0]
 800b5f0:	4b17      	ldr	r3, [pc, #92]	@ (800b650 <vTaskSwitchContext+0x64>)
{
 800b5f2:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800b5f4:	b112      	cbz	r2, 800b5fc <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800b5f6:	2201      	movs	r2, #1
 800b5f8:	601a      	str	r2, [r3, #0]
}
 800b5fa:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b5fc:	4d15      	ldr	r5, [pc, #84]	@ (800b654 <vTaskSwitchContext+0x68>)
		xYieldPending = pdFALSE;
 800b5fe:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b600:	682a      	ldr	r2, [r5, #0]
 800b602:	4915      	ldr	r1, [pc, #84]	@ (800b658 <vTaskSwitchContext+0x6c>)
 800b604:	2614      	movs	r6, #20
 800b606:	fb06 f302 	mul.w	r3, r6, r2
 800b60a:	18c8      	adds	r0, r1, r3
 800b60c:	58cc      	ldr	r4, [r1, r3]
 800b60e:	b18c      	cbz	r4, 800b634 <vTaskSwitchContext+0x48>
 800b610:	6844      	ldr	r4, [r0, #4]
 800b612:	3308      	adds	r3, #8
 800b614:	6864      	ldr	r4, [r4, #4]
 800b616:	6044      	str	r4, [r0, #4]
 800b618:	440b      	add	r3, r1
 800b61a:	429c      	cmp	r4, r3
 800b61c:	bf04      	itt	eq
 800b61e:	6863      	ldreq	r3, [r4, #4]
 800b620:	6043      	streq	r3, [r0, #4]
 800b622:	2314      	movs	r3, #20
 800b624:	fb03 1102 	mla	r1, r3, r2, r1
 800b628:	684b      	ldr	r3, [r1, #4]
 800b62a:	68d9      	ldr	r1, [r3, #12]
 800b62c:	4b0b      	ldr	r3, [pc, #44]	@ (800b65c <vTaskSwitchContext+0x70>)
 800b62e:	6019      	str	r1, [r3, #0]
 800b630:	602a      	str	r2, [r5, #0]
}
 800b632:	e7e2      	b.n	800b5fa <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b634:	b942      	cbnz	r2, 800b648 <vTaskSwitchContext+0x5c>
 800b636:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b63a:	f383 8811 	msr	BASEPRI, r3
 800b63e:	f3bf 8f6f 	isb	sy
 800b642:	f3bf 8f4f 	dsb	sy
 800b646:	e7fe      	b.n	800b646 <vTaskSwitchContext+0x5a>
 800b648:	3a01      	subs	r2, #1
 800b64a:	e7dc      	b.n	800b606 <vTaskSwitchContext+0x1a>
 800b64c:	20014c04 	.word	0x20014c04
 800b650:	20014c14 	.word	0x20014c14
 800b654:	20014c20 	.word	0x20014c20
 800b658:	20014c9c 	.word	0x20014c9c
 800b65c:	200150fc 	.word	0x200150fc

0800b660 <vTaskSuspend>:
	{
 800b660:	b570      	push	{r4, r5, r6, lr}
 800b662:	4604      	mov	r4, r0
 800b664:	4d26      	ldr	r5, [pc, #152]	@ (800b700 <vTaskSuspend+0xa0>)
		taskENTER_CRITICAL();
 800b666:	f7fe fd8d 	bl	800a184 <vPortEnterCritical>
			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
 800b66a:	b904      	cbnz	r4, 800b66e <vTaskSuspend+0xe>
 800b66c:	682c      	ldr	r4, [r5, #0]
			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b66e:	1d26      	adds	r6, r4, #4
 800b670:	4630      	mov	r0, r6
 800b672:	f7fe fd0f 	bl	800a094 <uxListRemove>
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800b676:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800b678:	b11b      	cbz	r3, 800b682 <vTaskSuspend+0x22>
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800b67a:	f104 0018 	add.w	r0, r4, #24
 800b67e:	f7fe fd09 	bl	800a094 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
 800b682:	4631      	mov	r1, r6
 800b684:	481f      	ldr	r0, [pc, #124]	@ (800b704 <vTaskSuspend+0xa4>)
		if( xSchedulerRunning != pdFALSE )
 800b686:	4e20      	ldr	r6, [pc, #128]	@ (800b708 <vTaskSuspend+0xa8>)
			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
 800b688:	f7fe fce2 	bl	800a050 <vListInsertEnd>
				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
 800b68c:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 800b690:	2b01      	cmp	r3, #1
					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800b692:	bf04      	itt	eq
 800b694:	2300      	moveq	r3, #0
 800b696:	f884 305c 	strbeq.w	r3, [r4, #92]	@ 0x5c
		taskEXIT_CRITICAL();
 800b69a:	f7fe fd93 	bl	800a1c4 <vPortExitCritical>
		if( xSchedulerRunning != pdFALSE )
 800b69e:	6833      	ldr	r3, [r6, #0]
 800b6a0:	b12b      	cbz	r3, 800b6ae <vTaskSuspend+0x4e>
			taskENTER_CRITICAL();
 800b6a2:	f7fe fd6f 	bl	800a184 <vPortEnterCritical>
				prvResetNextTaskUnblockTime();
 800b6a6:	f7ff fc89 	bl	800afbc <prvResetNextTaskUnblockTime>
			taskEXIT_CRITICAL();
 800b6aa:	f7fe fd8b 	bl	800a1c4 <vPortExitCritical>
		if( pxTCB == pxCurrentTCB )
 800b6ae:	682b      	ldr	r3, [r5, #0]
 800b6b0:	42a3      	cmp	r3, r4
 800b6b2:	d117      	bne.n	800b6e4 <vTaskSuspend+0x84>
			if( xSchedulerRunning != pdFALSE )
 800b6b4:	6833      	ldr	r3, [r6, #0]
 800b6b6:	b1b3      	cbz	r3, 800b6e6 <vTaskSuspend+0x86>
				configASSERT( uxSchedulerSuspended == 0 );
 800b6b8:	4b14      	ldr	r3, [pc, #80]	@ (800b70c <vTaskSuspend+0xac>)
 800b6ba:	681b      	ldr	r3, [r3, #0]
 800b6bc:	b143      	cbz	r3, 800b6d0 <vTaskSuspend+0x70>
 800b6be:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b6c2:	f383 8811 	msr	BASEPRI, r3
 800b6c6:	f3bf 8f6f 	isb	sy
 800b6ca:	f3bf 8f4f 	dsb	sy
 800b6ce:	e7fe      	b.n	800b6ce <vTaskSuspend+0x6e>
				portYIELD_WITHIN_API();
 800b6d0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800b6d4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800b6d8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800b6dc:	f3bf 8f4f 	dsb	sy
 800b6e0:	f3bf 8f6f 	isb	sy
	}
 800b6e4:	bd70      	pop	{r4, r5, r6, pc}
				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*lint !e931 Right has no side effect, just volatile. */
 800b6e6:	4a07      	ldr	r2, [pc, #28]	@ (800b704 <vTaskSuspend+0xa4>)
 800b6e8:	6811      	ldr	r1, [r2, #0]
 800b6ea:	4a09      	ldr	r2, [pc, #36]	@ (800b710 <vTaskSuspend+0xb0>)
 800b6ec:	6812      	ldr	r2, [r2, #0]
 800b6ee:	4291      	cmp	r1, r2
 800b6f0:	d101      	bne.n	800b6f6 <vTaskSuspend+0x96>
					pxCurrentTCB = NULL;
 800b6f2:	602b      	str	r3, [r5, #0]
 800b6f4:	e7f6      	b.n	800b6e4 <vTaskSuspend+0x84>
	}
 800b6f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
					vTaskSwitchContext();
 800b6fa:	f7ff bf77 	b.w	800b5ec <vTaskSwitchContext>
 800b6fe:	bf00      	nop
 800b700:	200150fc 	.word	0x200150fc
 800b704:	20014c2c 	.word	0x20014c2c
 800b708:	20014c1c 	.word	0x20014c1c
 800b70c:	20014c04 	.word	0x20014c04
 800b710:	20014c28 	.word	0x20014c28

0800b714 <vTaskPlaceOnEventList>:
{
 800b714:	b510      	push	{r4, lr}
 800b716:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800b718:	b940      	cbnz	r0, 800b72c <vTaskPlaceOnEventList+0x18>
 800b71a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b71e:	f383 8811 	msr	BASEPRI, r3
 800b722:	f3bf 8f6f 	isb	sy
 800b726:	f3bf 8f4f 	dsb	sy
 800b72a:	e7fe      	b.n	800b72a <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800b72c:	4b05      	ldr	r3, [pc, #20]	@ (800b744 <vTaskPlaceOnEventList+0x30>)
 800b72e:	6819      	ldr	r1, [r3, #0]
 800b730:	3118      	adds	r1, #24
 800b732:	f7fe fc98 	bl	800a066 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800b736:	4620      	mov	r0, r4
 800b738:	2101      	movs	r1, #1
}
 800b73a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800b73e:	f7ff bbe9 	b.w	800af14 <prvAddCurrentTaskToDelayedList>
 800b742:	bf00      	nop
 800b744:	200150fc 	.word	0x200150fc

0800b748 <vTaskPlaceOnEventListRestricted>:
	{
 800b748:	b538      	push	{r3, r4, r5, lr}
 800b74a:	460d      	mov	r5, r1
 800b74c:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800b74e:	b940      	cbnz	r0, 800b762 <vTaskPlaceOnEventListRestricted+0x1a>
 800b750:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b754:	f383 8811 	msr	BASEPRI, r3
 800b758:	f3bf 8f6f 	isb	sy
 800b75c:	f3bf 8f4f 	dsb	sy
 800b760:	e7fe      	b.n	800b760 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800b762:	4b07      	ldr	r3, [pc, #28]	@ (800b780 <vTaskPlaceOnEventListRestricted+0x38>)
 800b764:	6819      	ldr	r1, [r3, #0]
 800b766:	3118      	adds	r1, #24
 800b768:	f7fe fc72 	bl	800a050 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800b76c:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800b76e:	4621      	mov	r1, r4
 800b770:	bf0c      	ite	eq
 800b772:	4628      	moveq	r0, r5
 800b774:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800b778:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800b77c:	f7ff bbca 	b.w	800af14 <prvAddCurrentTaskToDelayedList>
 800b780:	200150fc 	.word	0x200150fc

0800b784 <xTaskRemoveFromEventList>:
{
 800b784:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b786:	68c3      	ldr	r3, [r0, #12]
 800b788:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800b78a:	b944      	cbnz	r4, 800b79e <xTaskRemoveFromEventList+0x1a>
 800b78c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b790:	f383 8811 	msr	BASEPRI, r3
 800b794:	f3bf 8f6f 	isb	sy
 800b798:	f3bf 8f4f 	dsb	sy
 800b79c:	e7fe      	b.n	800b79c <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800b79e:	f104 0518 	add.w	r5, r4, #24
 800b7a2:	4628      	mov	r0, r5
 800b7a4:	f7fe fc76 	bl	800a094 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b7a8:	4b10      	ldr	r3, [pc, #64]	@ (800b7ec <xTaskRemoveFromEventList+0x68>)
 800b7aa:	681b      	ldr	r3, [r3, #0]
 800b7ac:	b9db      	cbnz	r3, 800b7e6 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800b7ae:	1d25      	adds	r5, r4, #4
 800b7b0:	4628      	mov	r0, r5
 800b7b2:	f7fe fc6f 	bl	800a094 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800b7b6:	4a0e      	ldr	r2, [pc, #56]	@ (800b7f0 <xTaskRemoveFromEventList+0x6c>)
 800b7b8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800b7ba:	6811      	ldr	r1, [r2, #0]
 800b7bc:	428b      	cmp	r3, r1
 800b7be:	bf88      	it	hi
 800b7c0:	6013      	strhi	r3, [r2, #0]
 800b7c2:	4a0c      	ldr	r2, [pc, #48]	@ (800b7f4 <xTaskRemoveFromEventList+0x70>)
 800b7c4:	2014      	movs	r0, #20
 800b7c6:	4629      	mov	r1, r5
 800b7c8:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800b7cc:	f7fe fc40 	bl	800a050 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800b7d0:	4b09      	ldr	r3, [pc, #36]	@ (800b7f8 <xTaskRemoveFromEventList+0x74>)
 800b7d2:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800b7d4:	681b      	ldr	r3, [r3, #0]
 800b7d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b7d8:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800b7da:	bf83      	ittte	hi
 800b7dc:	4b07      	ldrhi	r3, [pc, #28]	@ (800b7fc <xTaskRemoveFromEventList+0x78>)
 800b7de:	2001      	movhi	r0, #1
 800b7e0:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 800b7e2:	2000      	movls	r0, #0
}
 800b7e4:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800b7e6:	4806      	ldr	r0, [pc, #24]	@ (800b800 <xTaskRemoveFromEventList+0x7c>)
 800b7e8:	4629      	mov	r1, r5
 800b7ea:	e7ef      	b.n	800b7cc <xTaskRemoveFromEventList+0x48>
 800b7ec:	20014c04 	.word	0x20014c04
 800b7f0:	20014c20 	.word	0x20014c20
 800b7f4:	20014c9c 	.word	0x20014c9c
 800b7f8:	200150fc 	.word	0x200150fc
 800b7fc:	20014c14 	.word	0x20014c14
 800b800:	20014c58 	.word	0x20014c58

0800b804 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800b804:	4b03      	ldr	r3, [pc, #12]	@ (800b814 <vTaskInternalSetTimeOutState+0x10>)
 800b806:	681b      	ldr	r3, [r3, #0]
 800b808:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800b80a:	4b03      	ldr	r3, [pc, #12]	@ (800b818 <vTaskInternalSetTimeOutState+0x14>)
 800b80c:	681b      	ldr	r3, [r3, #0]
 800b80e:	6043      	str	r3, [r0, #4]
}
 800b810:	4770      	bx	lr
 800b812:	bf00      	nop
 800b814:	20014c10 	.word	0x20014c10
 800b818:	20014c24 	.word	0x20014c24

0800b81c <xTaskCheckForTimeOut>:
{
 800b81c:	b570      	push	{r4, r5, r6, lr}
 800b81e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800b820:	4605      	mov	r5, r0
 800b822:	b940      	cbnz	r0, 800b836 <xTaskCheckForTimeOut+0x1a>
 800b824:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b828:	f383 8811 	msr	BASEPRI, r3
 800b82c:	f3bf 8f6f 	isb	sy
 800b830:	f3bf 8f4f 	dsb	sy
 800b834:	e7fe      	b.n	800b834 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800b836:	b941      	cbnz	r1, 800b84a <xTaskCheckForTimeOut+0x2e>
 800b838:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b83c:	f383 8811 	msr	BASEPRI, r3
 800b840:	f3bf 8f6f 	isb	sy
 800b844:	f3bf 8f4f 	dsb	sy
 800b848:	e7fe      	b.n	800b848 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800b84a:	f7fe fc9b 	bl	800a184 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800b84e:	4b0f      	ldr	r3, [pc, #60]	@ (800b88c <xTaskCheckForTimeOut+0x70>)
 800b850:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800b852:	6823      	ldr	r3, [r4, #0]
 800b854:	1c5a      	adds	r2, r3, #1
 800b856:	d010      	beq.n	800b87a <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800b858:	480d      	ldr	r0, [pc, #52]	@ (800b890 <xTaskCheckForTimeOut+0x74>)
 800b85a:	682e      	ldr	r6, [r5, #0]
 800b85c:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800b85e:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800b860:	4286      	cmp	r6, r0
 800b862:	d001      	beq.n	800b868 <xTaskCheckForTimeOut+0x4c>
 800b864:	428a      	cmp	r2, r1
 800b866:	d90f      	bls.n	800b888 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800b868:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800b86a:	4283      	cmp	r3, r0
 800b86c:	d90a      	bls.n	800b884 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800b86e:	1a5b      	subs	r3, r3, r1
 800b870:	4413      	add	r3, r2
 800b872:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800b874:	4628      	mov	r0, r5
 800b876:	f7ff ffc5 	bl	800b804 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800b87a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800b87c:	f7fe fca2 	bl	800a1c4 <vPortExitCritical>
}
 800b880:	4620      	mov	r0, r4
 800b882:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800b884:	2300      	movs	r3, #0
 800b886:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800b888:	2401      	movs	r4, #1
 800b88a:	e7f7      	b.n	800b87c <xTaskCheckForTimeOut+0x60>
 800b88c:	20014c24 	.word	0x20014c24
 800b890:	20014c10 	.word	0x20014c10

0800b894 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800b894:	4b01      	ldr	r3, [pc, #4]	@ (800b89c <vTaskMissedYield+0x8>)
 800b896:	2201      	movs	r2, #1
 800b898:	601a      	str	r2, [r3, #0]
}
 800b89a:	4770      	bx	lr
 800b89c:	20014c14 	.word	0x20014c14

0800b8a0 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800b8a0:	4b05      	ldr	r3, [pc, #20]	@ (800b8b8 <xTaskGetSchedulerState+0x18>)
 800b8a2:	681b      	ldr	r3, [r3, #0]
 800b8a4:	b133      	cbz	r3, 800b8b4 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b8a6:	4b05      	ldr	r3, [pc, #20]	@ (800b8bc <xTaskGetSchedulerState+0x1c>)
 800b8a8:	6818      	ldr	r0, [r3, #0]
 800b8aa:	fab0 f080 	clz	r0, r0
 800b8ae:	0940      	lsrs	r0, r0, #5
 800b8b0:	0040      	lsls	r0, r0, #1
 800b8b2:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800b8b4:	2001      	movs	r0, #1
	}
 800b8b6:	4770      	bx	lr
 800b8b8:	20014c1c 	.word	0x20014c1c
 800b8bc:	20014c04 	.word	0x20014c04

0800b8c0 <xTaskPriorityInherit>:
	{
 800b8c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 800b8c2:	4604      	mov	r4, r0
 800b8c4:	b338      	cbz	r0, 800b916 <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800b8c6:	4d1a      	ldr	r5, [pc, #104]	@ (800b930 <xTaskPriorityInherit+0x70>)
 800b8c8:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800b8ca:	682a      	ldr	r2, [r5, #0]
 800b8cc:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800b8ce:	4293      	cmp	r3, r2
 800b8d0:	d226      	bcs.n	800b920 <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800b8d2:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800b8d4:	4e17      	ldr	r6, [pc, #92]	@ (800b934 <xTaskPriorityInherit+0x74>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800b8d6:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b8d8:	bfa1      	itttt	ge
 800b8da:	682a      	ldrge	r2, [r5, #0]
 800b8dc:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 800b8de:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 800b8e2:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800b8e4:	2214      	movs	r2, #20
 800b8e6:	fb02 6303 	mla	r3, r2, r3, r6
 800b8ea:	6942      	ldr	r2, [r0, #20]
 800b8ec:	429a      	cmp	r2, r3
 800b8ee:	d113      	bne.n	800b918 <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b8f0:	1d07      	adds	r7, r0, #4
 800b8f2:	4638      	mov	r0, r7
 800b8f4:	f7fe fbce 	bl	800a094 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b8f8:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800b8fa:	4a0f      	ldr	r2, [pc, #60]	@ (800b938 <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b8fc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800b8fe:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b900:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800b902:	2014      	movs	r0, #20
 800b904:	428b      	cmp	r3, r1
 800b906:	fb00 6003 	mla	r0, r0, r3, r6
 800b90a:	4639      	mov	r1, r7
 800b90c:	bf88      	it	hi
 800b90e:	6013      	strhi	r3, [r2, #0]
 800b910:	f7fe fb9e 	bl	800a050 <vListInsertEnd>
				xReturn = pdTRUE;
 800b914:	2001      	movs	r0, #1
	}
 800b916:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b918:	682b      	ldr	r3, [r5, #0]
 800b91a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b91c:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800b91e:	e7f9      	b.n	800b914 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800b920:	682b      	ldr	r3, [r5, #0]
 800b922:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 800b924:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b926:	4298      	cmp	r0, r3
 800b928:	bf2c      	ite	cs
 800b92a:	2000      	movcs	r0, #0
 800b92c:	2001      	movcc	r0, #1
 800b92e:	e7f2      	b.n	800b916 <xTaskPriorityInherit+0x56>
 800b930:	200150fc 	.word	0x200150fc
 800b934:	20014c9c 	.word	0x20014c9c
 800b938:	20014c20 	.word	0x20014c20

0800b93c <xTaskPriorityDisinherit>:
	{
 800b93c:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800b93e:	b908      	cbnz	r0, 800b944 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 800b940:	2000      	movs	r0, #0
	}
 800b942:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800b944:	4b1b      	ldr	r3, [pc, #108]	@ (800b9b4 <xTaskPriorityDisinherit+0x78>)
 800b946:	681c      	ldr	r4, [r3, #0]
 800b948:	4284      	cmp	r4, r0
 800b94a:	d008      	beq.n	800b95e <xTaskPriorityDisinherit+0x22>
 800b94c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b950:	f383 8811 	msr	BASEPRI, r3
 800b954:	f3bf 8f6f 	isb	sy
 800b958:	f3bf 8f4f 	dsb	sy
 800b95c:	e7fe      	b.n	800b95c <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 800b95e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 800b960:	b943      	cbnz	r3, 800b974 <xTaskPriorityDisinherit+0x38>
 800b962:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b966:	f383 8811 	msr	BASEPRI, r3
 800b96a:	f3bf 8f6f 	isb	sy
 800b96e:	f3bf 8f4f 	dsb	sy
 800b972:	e7fe      	b.n	800b972 <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800b974:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800b976:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 800b978:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800b97a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800b97c:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800b97e:	d0df      	beq.n	800b940 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800b980:	2b00      	cmp	r3, #0
 800b982:	d1dd      	bne.n	800b940 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b984:	1d25      	adds	r5, r4, #4
 800b986:	4628      	mov	r0, r5
 800b988:	f7fe fb84 	bl	800a094 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800b98c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800b98e:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b990:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 800b994:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800b996:	4a08      	ldr	r2, [pc, #32]	@ (800b9b8 <xTaskPriorityDisinherit+0x7c>)
 800b998:	6811      	ldr	r1, [r2, #0]
 800b99a:	428b      	cmp	r3, r1
 800b99c:	bf88      	it	hi
 800b99e:	6013      	strhi	r3, [r2, #0]
 800b9a0:	4a06      	ldr	r2, [pc, #24]	@ (800b9bc <xTaskPriorityDisinherit+0x80>)
 800b9a2:	2014      	movs	r0, #20
 800b9a4:	fb00 2003 	mla	r0, r0, r3, r2
 800b9a8:	4629      	mov	r1, r5
 800b9aa:	f7fe fb51 	bl	800a050 <vListInsertEnd>
					xReturn = pdTRUE;
 800b9ae:	2001      	movs	r0, #1
		return xReturn;
 800b9b0:	e7c7      	b.n	800b942 <xTaskPriorityDisinherit+0x6>
 800b9b2:	bf00      	nop
 800b9b4:	200150fc 	.word	0x200150fc
 800b9b8:	20014c20 	.word	0x20014c20
 800b9bc:	20014c9c 	.word	0x20014c9c

0800b9c0 <vTaskPriorityDisinheritAfterTimeout>:
	{
 800b9c0:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800b9c2:	4604      	mov	r4, r0
 800b9c4:	2800      	cmp	r0, #0
 800b9c6:	d041      	beq.n	800ba4c <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 800b9c8:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 800b9ca:	b942      	cbnz	r2, 800b9de <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800b9cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b9d0:	f383 8811 	msr	BASEPRI, r3
 800b9d4:	f3bf 8f6f 	isb	sy
 800b9d8:	f3bf 8f4f 	dsb	sy
 800b9dc:	e7fe      	b.n	800b9dc <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800b9de:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 800b9e0:	4299      	cmp	r1, r3
 800b9e2:	bf38      	it	cc
 800b9e4:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800b9e6:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800b9e8:	428b      	cmp	r3, r1
 800b9ea:	d02f      	beq.n	800ba4c <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800b9ec:	2a01      	cmp	r2, #1
 800b9ee:	d12d      	bne.n	800ba4c <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 800b9f0:	4a17      	ldr	r2, [pc, #92]	@ (800ba50 <vTaskPriorityDisinheritAfterTimeout+0x90>)
 800b9f2:	6812      	ldr	r2, [r2, #0]
 800b9f4:	4282      	cmp	r2, r0
 800b9f6:	d108      	bne.n	800ba0a <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800b9f8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b9fc:	f383 8811 	msr	BASEPRI, r3
 800ba00:	f3bf 8f6f 	isb	sy
 800ba04:	f3bf 8f4f 	dsb	sy
 800ba08:	e7fe      	b.n	800ba08 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ba0a:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800ba0c:	4d11      	ldr	r5, [pc, #68]	@ (800ba54 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 800ba0e:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ba10:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800ba12:	f04f 0214 	mov.w	r2, #20
 800ba16:	fb02 5303 	mla	r3, r2, r3, r5
 800ba1a:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ba1c:	bfa4      	itt	ge
 800ba1e:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 800ba22:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800ba24:	429a      	cmp	r2, r3
 800ba26:	d111      	bne.n	800ba4c <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ba28:	1d06      	adds	r6, r0, #4
 800ba2a:	4630      	mov	r0, r6
 800ba2c:	f7fe fb32 	bl	800a094 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800ba30:	4a09      	ldr	r2, [pc, #36]	@ (800ba58 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800ba32:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800ba34:	6811      	ldr	r1, [r2, #0]
 800ba36:	2014      	movs	r0, #20
 800ba38:	428b      	cmp	r3, r1
 800ba3a:	fb00 5003 	mla	r0, r0, r3, r5
 800ba3e:	4631      	mov	r1, r6
	}
 800ba40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 800ba44:	bf88      	it	hi
 800ba46:	6013      	strhi	r3, [r2, #0]
 800ba48:	f7fe bb02 	b.w	800a050 <vListInsertEnd>
	}
 800ba4c:	bd70      	pop	{r4, r5, r6, pc}
 800ba4e:	bf00      	nop
 800ba50:	200150fc 	.word	0x200150fc
 800ba54:	20014c9c 	.word	0x20014c9c
 800ba58:	20014c20 	.word	0x20014c20

0800ba5c <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800ba5c:	4b04      	ldr	r3, [pc, #16]	@ (800ba70 <pvTaskIncrementMutexHeldCount+0x14>)
 800ba5e:	681a      	ldr	r2, [r3, #0]
 800ba60:	b11a      	cbz	r2, 800ba6a <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800ba62:	6819      	ldr	r1, [r3, #0]
 800ba64:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 800ba66:	3201      	adds	r2, #1
 800ba68:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 800ba6a:	6818      	ldr	r0, [r3, #0]
	}
 800ba6c:	4770      	bx	lr
 800ba6e:	bf00      	nop
 800ba70:	200150fc 	.word	0x200150fc

0800ba74 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 800ba74:	4291      	cmp	r1, r2
{
 800ba76:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800ba78:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800ba7a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800ba7c:	d80a      	bhi.n	800ba94 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ba7e:	1ad2      	subs	r2, r2, r3
 800ba80:	6983      	ldr	r3, [r0, #24]
 800ba82:	429a      	cmp	r2, r3
 800ba84:	d20d      	bcs.n	800baa2 <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800ba86:	4b08      	ldr	r3, [pc, #32]	@ (800baa8 <prvInsertTimerInActiveList+0x34>)
 800ba88:	1d01      	adds	r1, r0, #4
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ba8a:	6818      	ldr	r0, [r3, #0]
 800ba8c:	f7fe faeb 	bl	800a066 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800ba90:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 800ba92:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800ba94:	429a      	cmp	r2, r3
 800ba96:	d201      	bcs.n	800ba9c <prvInsertTimerInActiveList+0x28>
 800ba98:	4299      	cmp	r1, r3
 800ba9a:	d202      	bcs.n	800baa2 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ba9c:	4b03      	ldr	r3, [pc, #12]	@ (800baac <prvInsertTimerInActiveList+0x38>)
 800ba9e:	1d01      	adds	r1, r0, #4
 800baa0:	e7f3      	b.n	800ba8a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800baa2:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800baa4:	e7f5      	b.n	800ba92 <prvInsertTimerInActiveList+0x1e>
 800baa6:	bf00      	nop
 800baa8:	200151fc 	.word	0x200151fc
 800baac:	20015200 	.word	0x20015200

0800bab0 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800bab0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800bab2:	4c11      	ldr	r4, [pc, #68]	@ (800baf8 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800bab4:	f7fe fb66 	bl	800a184 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800bab8:	6825      	ldr	r5, [r4, #0]
 800baba:	b9bd      	cbnz	r5, 800baec <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800babc:	4f0f      	ldr	r7, [pc, #60]	@ (800bafc <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800babe:	4e10      	ldr	r6, [pc, #64]	@ (800bb00 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800bac0:	4638      	mov	r0, r7
 800bac2:	f7fe fab7 	bl	800a034 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800bac6:	4630      	mov	r0, r6
 800bac8:	f7fe fab4 	bl	800a034 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800bacc:	4b0d      	ldr	r3, [pc, #52]	@ (800bb04 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800bace:	4a0e      	ldr	r2, [pc, #56]	@ (800bb08 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800bad0:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800bad2:	4b0e      	ldr	r3, [pc, #56]	@ (800bb0c <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800bad4:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800bad6:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800bad8:	200a      	movs	r0, #10
 800bada:	4b0d      	ldr	r3, [pc, #52]	@ (800bb10 <prvCheckForValidListAndQueue+0x60>)
 800badc:	9500      	str	r5, [sp, #0]
 800bade:	f7fe fd5a 	bl	800a596 <xQueueGenericCreateStatic>
 800bae2:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800bae4:	b110      	cbz	r0, 800baec <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800bae6:	490b      	ldr	r1, [pc, #44]	@ (800bb14 <prvCheckForValidListAndQueue+0x64>)
 800bae8:	f7ff f932 	bl	800ad50 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800baec:	b003      	add	sp, #12
 800baee:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800baf2:	f7fe bb67 	b.w	800a1c4 <vPortExitCritical>
 800baf6:	bf00      	nop
 800baf8:	200151f8 	.word	0x200151f8
 800bafc:	20015218 	.word	0x20015218
 800bb00:	20015204 	.word	0x20015204
 800bb04:	20015200 	.word	0x20015200
 800bb08:	20015150 	.word	0x20015150
 800bb0c:	200151fc 	.word	0x200151fc
 800bb10:	20015100 	.word	0x20015100
 800bb14:	08027245 	.word	0x08027245

0800bb18 <xTimerCreateTimerTask>:
{
 800bb18:	b510      	push	{r4, lr}
 800bb1a:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800bb1c:	f7ff ffc8 	bl	800bab0 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800bb20:	4b12      	ldr	r3, [pc, #72]	@ (800bb6c <xTimerCreateTimerTask+0x54>)
 800bb22:	681b      	ldr	r3, [r3, #0]
 800bb24:	b1b3      	cbz	r3, 800bb54 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800bb26:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800bb28:	aa07      	add	r2, sp, #28
 800bb2a:	a906      	add	r1, sp, #24
 800bb2c:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800bb2e:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800bb32:	f7fe f977 	bl	8009e24 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800bb36:	9b05      	ldr	r3, [sp, #20]
 800bb38:	9302      	str	r3, [sp, #8]
 800bb3a:	9b06      	ldr	r3, [sp, #24]
 800bb3c:	9301      	str	r3, [sp, #4]
 800bb3e:	2302      	movs	r3, #2
 800bb40:	9300      	str	r3, [sp, #0]
 800bb42:	9a07      	ldr	r2, [sp, #28]
 800bb44:	490a      	ldr	r1, [pc, #40]	@ (800bb70 <xTimerCreateTimerTask+0x58>)
 800bb46:	480b      	ldr	r0, [pc, #44]	@ (800bb74 <xTimerCreateTimerTask+0x5c>)
 800bb48:	4623      	mov	r3, r4
 800bb4a:	f7ff fae2 	bl	800b112 <xTaskCreateStatic>
 800bb4e:	4b0a      	ldr	r3, [pc, #40]	@ (800bb78 <xTimerCreateTimerTask+0x60>)
 800bb50:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800bb52:	b940      	cbnz	r0, 800bb66 <xTimerCreateTimerTask+0x4e>
 800bb54:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bb58:	f383 8811 	msr	BASEPRI, r3
 800bb5c:	f3bf 8f6f 	isb	sy
 800bb60:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800bb64:	e7fe      	b.n	800bb64 <xTimerCreateTimerTask+0x4c>
}
 800bb66:	2001      	movs	r0, #1
 800bb68:	b008      	add	sp, #32
 800bb6a:	bd10      	pop	{r4, pc}
 800bb6c:	200151f8 	.word	0x200151f8
 800bb70:	0802724a 	.word	0x0802724a
 800bb74:	0800bc79 	.word	0x0800bc79
 800bb78:	200151f4 	.word	0x200151f4

0800bb7c <xTimerGenericCommand>:
{
 800bb7c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bb7e:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800bb80:	4604      	mov	r4, r0
{
 800bb82:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800bb84:	b940      	cbnz	r0, 800bb98 <xTimerGenericCommand+0x1c>
 800bb86:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bb8a:	f383 8811 	msr	BASEPRI, r3
 800bb8e:	f3bf 8f6f 	isb	sy
 800bb92:	f3bf 8f4f 	dsb	sy
 800bb96:	e7fe      	b.n	800bb96 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800bb98:	4d0d      	ldr	r5, [pc, #52]	@ (800bbd0 <xTimerGenericCommand+0x54>)
 800bb9a:	6828      	ldr	r0, [r5, #0]
 800bb9c:	b180      	cbz	r0, 800bbc0 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800bb9e:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800bba0:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800bba4:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800bba6:	dc0d      	bgt.n	800bbc4 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800bba8:	f7ff fe7a 	bl	800b8a0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800bbac:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800bbae:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800bbb0:	bf08      	it	eq
 800bbb2:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800bbb4:	6828      	ldr	r0, [r5, #0]
 800bbb6:	bf18      	it	ne
 800bbb8:	461a      	movne	r2, r3
 800bbba:	4669      	mov	r1, sp
 800bbbc:	f7fe fda0 	bl	800a700 <xQueueGenericSend>
}
 800bbc0:	b004      	add	sp, #16
 800bbc2:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800bbc4:	2300      	movs	r3, #0
 800bbc6:	4669      	mov	r1, sp
 800bbc8:	f7fe fe4c 	bl	800a864 <xQueueGenericSendFromISR>
 800bbcc:	e7f8      	b.n	800bbc0 <xTimerGenericCommand+0x44>
 800bbce:	bf00      	nop
 800bbd0:	200151f8 	.word	0x200151f8

0800bbd4 <prvSampleTimeNow>:
{
 800bbd4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800bbd8:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 800bc74 <prvSampleTimeNow+0xa0>
{
 800bbdc:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800bbde:	f7ff fbd1 	bl	800b384 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800bbe2:	f8d8 3000 	ldr.w	r3, [r8]
 800bbe6:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800bbe8:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800bbea:	d909      	bls.n	800bc00 <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800bbec:	4f1f      	ldr	r7, [pc, #124]	@ (800bc6c <prvSampleTimeNow+0x98>)
 800bbee:	683b      	ldr	r3, [r7, #0]
 800bbf0:	681a      	ldr	r2, [r3, #0]
 800bbf2:	b96a      	cbnz	r2, 800bc10 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800bbf4:	4a1e      	ldr	r2, [pc, #120]	@ (800bc70 <prvSampleTimeNow+0x9c>)
 800bbf6:	6811      	ldr	r1, [r2, #0]
 800bbf8:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800bbfa:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800bbfc:	2301      	movs	r3, #1
 800bbfe:	e000      	b.n	800bc02 <prvSampleTimeNow+0x2e>
 800bc00:	2300      	movs	r3, #0
}
 800bc02:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 800bc04:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800bc06:	f8c8 5000 	str.w	r5, [r8]
}
 800bc0a:	b002      	add	sp, #8
 800bc0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800bc10:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800bc12:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800bc14:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800bc18:	f104 0a04 	add.w	sl, r4, #4
 800bc1c:	4650      	mov	r0, sl
 800bc1e:	f7fe fa39 	bl	800a094 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800bc22:	6a23      	ldr	r3, [r4, #32]
 800bc24:	4620      	mov	r0, r4
 800bc26:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800bc28:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800bc2c:	075b      	lsls	r3, r3, #29
 800bc2e:	d5de      	bpl.n	800bbee <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800bc30:	69a3      	ldr	r3, [r4, #24]
 800bc32:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 800bc34:	4599      	cmp	r9, r3
 800bc36:	d206      	bcs.n	800bc46 <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800bc38:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800bc3a:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800bc3c:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800bc3e:	4651      	mov	r1, sl
 800bc40:	f7fe fa11 	bl	800a066 <vListInsert>
 800bc44:	e7d3      	b.n	800bbee <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800bc46:	2300      	movs	r3, #0
 800bc48:	9300      	str	r3, [sp, #0]
 800bc4a:	464a      	mov	r2, r9
 800bc4c:	4619      	mov	r1, r3
 800bc4e:	4620      	mov	r0, r4
 800bc50:	f7ff ff94 	bl	800bb7c <xTimerGenericCommand>
				configASSERT( xResult );
 800bc54:	2800      	cmp	r0, #0
 800bc56:	d1ca      	bne.n	800bbee <prvSampleTimeNow+0x1a>
 800bc58:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bc5c:	f383 8811 	msr	BASEPRI, r3
 800bc60:	f3bf 8f6f 	isb	sy
 800bc64:	f3bf 8f4f 	dsb	sy
 800bc68:	e7fe      	b.n	800bc68 <prvSampleTimeNow+0x94>
 800bc6a:	bf00      	nop
 800bc6c:	20015200 	.word	0x20015200
 800bc70:	200151fc 	.word	0x200151fc
 800bc74:	200151f0 	.word	0x200151f0

0800bc78 <prvTimerTask>:
{
 800bc78:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800bc7c:	4d6e      	ldr	r5, [pc, #440]	@ (800be38 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800bc7e:	4e6f      	ldr	r6, [pc, #444]	@ (800be3c <prvTimerTask+0x1c4>)
{
 800bc80:	b089      	sub	sp, #36	@ 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800bc82:	682b      	ldr	r3, [r5, #0]
 800bc84:	f8d3 8000 	ldr.w	r8, [r3]
 800bc88:	f1b8 0f00 	cmp.w	r8, #0
 800bc8c:	d035      	beq.n	800bcfa <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800bc8e:	68db      	ldr	r3, [r3, #12]
 800bc90:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800bc94:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800bc96:	f7ff fb6d 	bl	800b374 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800bc9a:	a804      	add	r0, sp, #16
 800bc9c:	f7ff ff9a 	bl	800bbd4 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800bca0:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800bca2:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800bca4:	2b00      	cmp	r3, #0
 800bca6:	d169      	bne.n	800bd7c <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800bca8:	2c00      	cmp	r4, #0
 800bcaa:	d14c      	bne.n	800bd46 <prvTimerTask+0xce>
 800bcac:	4540      	cmp	r0, r8
 800bcae:	d350      	bcc.n	800bd52 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800bcb0:	f7ff fc04 	bl	800b4bc <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800bcb4:	682b      	ldr	r3, [r5, #0]
 800bcb6:	68db      	ldr	r3, [r3, #12]
 800bcb8:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800bcba:	1d38      	adds	r0, r7, #4
 800bcbc:	f7fe f9ea 	bl	800a094 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800bcc0:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 800bcc4:	0758      	lsls	r0, r3, #29
 800bcc6:	d51a      	bpl.n	800bcfe <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800bcc8:	69b9      	ldr	r1, [r7, #24]
 800bcca:	4643      	mov	r3, r8
 800bccc:	464a      	mov	r2, r9
 800bcce:	4441      	add	r1, r8
 800bcd0:	4638      	mov	r0, r7
 800bcd2:	f7ff fecf 	bl	800ba74 <prvInsertTimerInActiveList>
 800bcd6:	b1b0      	cbz	r0, 800bd06 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800bcd8:	9400      	str	r4, [sp, #0]
 800bcda:	4623      	mov	r3, r4
 800bcdc:	4642      	mov	r2, r8
 800bcde:	4621      	mov	r1, r4
 800bce0:	4638      	mov	r0, r7
 800bce2:	f7ff ff4b 	bl	800bb7c <xTimerGenericCommand>
			configASSERT( xResult );
 800bce6:	b970      	cbnz	r0, 800bd06 <prvTimerTask+0x8e>
 800bce8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bcec:	f383 8811 	msr	BASEPRI, r3
 800bcf0:	f3bf 8f6f 	isb	sy
 800bcf4:	f3bf 8f4f 	dsb	sy
 800bcf8:	e7fe      	b.n	800bcf8 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800bcfa:	2401      	movs	r4, #1
 800bcfc:	e7cb      	b.n	800bc96 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800bcfe:	f023 0301 	bic.w	r3, r3, #1
 800bd02:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800bd06:	6a3b      	ldr	r3, [r7, #32]
 800bd08:	4638      	mov	r0, r7
 800bd0a:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800bd0c:	6830      	ldr	r0, [r6, #0]
 800bd0e:	2200      	movs	r2, #0
 800bd10:	a904      	add	r1, sp, #16
 800bd12:	f7fe fe55 	bl	800a9c0 <xQueueReceive>
 800bd16:	2800      	cmp	r0, #0
 800bd18:	d0b3      	beq.n	800bc82 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800bd1a:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800bd1c:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800bd1e:	2b00      	cmp	r3, #0
 800bd20:	db2f      	blt.n	800bd82 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800bd22:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800bd24:	6963      	ldr	r3, [r4, #20]
 800bd26:	2b00      	cmp	r3, #0
 800bd28:	d132      	bne.n	800bd90 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800bd2a:	a803      	add	r0, sp, #12
 800bd2c:	f7ff ff52 	bl	800bbd4 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800bd30:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800bd32:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800bd34:	2b09      	cmp	r3, #9
 800bd36:	d8e9      	bhi.n	800bd0c <prvTimerTask+0x94>
 800bd38:	e8df f003 	tbb	[pc, r3]
 800bd3c:	572e2e2e 	.word	0x572e2e2e
 800bd40:	2e2e765e 	.word	0x2e2e765e
 800bd44:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800bd46:	4b3e      	ldr	r3, [pc, #248]	@ (800be40 <prvTimerTask+0x1c8>)
 800bd48:	681b      	ldr	r3, [r3, #0]
 800bd4a:	681c      	ldr	r4, [r3, #0]
 800bd4c:	fab4 f484 	clz	r4, r4
 800bd50:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800bd52:	6830      	ldr	r0, [r6, #0]
 800bd54:	4622      	mov	r2, r4
 800bd56:	eba8 0109 	sub.w	r1, r8, r9
 800bd5a:	f7ff f838 	bl	800adce <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800bd5e:	f7ff fbad 	bl	800b4bc <xTaskResumeAll>
 800bd62:	2800      	cmp	r0, #0
 800bd64:	d1d2      	bne.n	800bd0c <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800bd66:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800bd6a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800bd6e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800bd72:	f3bf 8f4f 	dsb	sy
 800bd76:	f3bf 8f6f 	isb	sy
 800bd7a:	e7c7      	b.n	800bd0c <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800bd7c:	f7ff fb9e 	bl	800b4bc <xTaskResumeAll>
}
 800bd80:	e7c4      	b.n	800bd0c <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800bd82:	9b05      	ldr	r3, [sp, #20]
 800bd84:	9907      	ldr	r1, [sp, #28]
 800bd86:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800bd88:	9b04      	ldr	r3, [sp, #16]
 800bd8a:	2b00      	cmp	r3, #0
 800bd8c:	dbbe      	blt.n	800bd0c <prvTimerTask+0x94>
 800bd8e:	e7c8      	b.n	800bd22 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800bd90:	1d20      	adds	r0, r4, #4
 800bd92:	f7fe f97f 	bl	800a094 <uxListRemove>
 800bd96:	e7c8      	b.n	800bd2a <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800bd98:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800bd9c:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800bd9e:	f043 0301 	orr.w	r3, r3, #1
 800bda2:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800bda6:	9b05      	ldr	r3, [sp, #20]
 800bda8:	4620      	mov	r0, r4
 800bdaa:	4419      	add	r1, r3
 800bdac:	f7ff fe62 	bl	800ba74 <prvInsertTimerInActiveList>
 800bdb0:	2800      	cmp	r0, #0
 800bdb2:	d0ab      	beq.n	800bd0c <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800bdb4:	6a23      	ldr	r3, [r4, #32]
 800bdb6:	4620      	mov	r0, r4
 800bdb8:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800bdba:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800bdbe:	0759      	lsls	r1, r3, #29
 800bdc0:	d5a4      	bpl.n	800bd0c <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800bdc2:	69a2      	ldr	r2, [r4, #24]
 800bdc4:	9905      	ldr	r1, [sp, #20]
 800bdc6:	2300      	movs	r3, #0
 800bdc8:	440a      	add	r2, r1
 800bdca:	9300      	str	r3, [sp, #0]
 800bdcc:	4619      	mov	r1, r3
 800bdce:	4620      	mov	r0, r4
 800bdd0:	f7ff fed4 	bl	800bb7c <xTimerGenericCommand>
							configASSERT( xResult );
 800bdd4:	2800      	cmp	r0, #0
 800bdd6:	d199      	bne.n	800bd0c <prvTimerTask+0x94>
 800bdd8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bddc:	f383 8811 	msr	BASEPRI, r3
 800bde0:	f3bf 8f6f 	isb	sy
 800bde4:	f3bf 8f4f 	dsb	sy
 800bde8:	e7fe      	b.n	800bde8 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800bdea:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800bdee:	f023 0301 	bic.w	r3, r3, #1
 800bdf2:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800bdf6:	e789      	b.n	800bd0c <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800bdf8:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800bdfc:	f043 0301 	orr.w	r3, r3, #1
 800be00:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800be04:	9905      	ldr	r1, [sp, #20]
 800be06:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800be08:	b941      	cbnz	r1, 800be1c <prvTimerTask+0x1a4>
 800be0a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800be0e:	f383 8811 	msr	BASEPRI, r3
 800be12:	f3bf 8f6f 	isb	sy
 800be16:	f3bf 8f4f 	dsb	sy
 800be1a:	e7fe      	b.n	800be1a <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800be1c:	4603      	mov	r3, r0
 800be1e:	4401      	add	r1, r0
 800be20:	4620      	mov	r0, r4
 800be22:	f7ff fe27 	bl	800ba74 <prvInsertTimerInActiveList>
					break;
 800be26:	e771      	b.n	800bd0c <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800be28:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800be2c:	079a      	lsls	r2, r3, #30
 800be2e:	d4de      	bmi.n	800bdee <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800be30:	4620      	mov	r0, r4
 800be32:	f7fe f8c1 	bl	8009fb8 <vPortFree>
 800be36:	e769      	b.n	800bd0c <prvTimerTask+0x94>
 800be38:	20015200 	.word	0x20015200
 800be3c:	200151f8 	.word	0x200151f8
 800be40:	200151fc 	.word	0x200151fc

0800be44 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800be44:	8880      	ldrh	r0, [r0, #4]
 800be46:	4770      	bx	lr

0800be48 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800be48:	b570      	push	{r4, r5, r6, lr}
 800be4a:	6803      	ldr	r3, [r0, #0]
 800be4c:	4605      	mov	r5, r0
 800be4e:	460c      	mov	r4, r1
 800be50:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800be52:	2100      	movs	r1, #0
 800be54:	4798      	blx	r3
 800be56:	682b      	ldr	r3, [r5, #0]
 800be58:	4606      	mov	r6, r0
 800be5a:	6a1b      	ldr	r3, [r3, #32]
 800be5c:	4628      	mov	r0, r5
 800be5e:	4798      	blx	r3
 800be60:	1ba4      	subs	r4, r4, r6
 800be62:	b2a4      	uxth	r4, r4
 800be64:	fbb4 f0f0 	udiv	r0, r4, r0
 800be68:	bd70      	pop	{r4, r5, r6, pc}

0800be6a <_ZN8touchgfx17AbstractPartition5clearEv>:
 800be6a:	2300      	movs	r3, #0
 800be6c:	8083      	strh	r3, [r0, #4]
 800be6e:	4770      	bx	lr

0800be70 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800be70:	b510      	push	{r4, lr}
 800be72:	6803      	ldr	r3, [r0, #0]
 800be74:	8881      	ldrh	r1, [r0, #4]
 800be76:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800be78:	4604      	mov	r4, r0
 800be7a:	4798      	blx	r3
 800be7c:	88a3      	ldrh	r3, [r4, #4]
 800be7e:	3301      	adds	r3, #1
 800be80:	80a3      	strh	r3, [r4, #4]
 800be82:	bd10      	pop	{r4, pc}

0800be84 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800be84:	6803      	ldr	r3, [r0, #0]
 800be86:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800be88:	4718      	bx	r3

0800be8a <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800be8a:	4770      	bx	lr

0800be8c <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800be8c:	4a02      	ldr	r2, [pc, #8]	@ (800be98 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800be8e:	6002      	str	r2, [r0, #0]
 800be90:	2200      	movs	r2, #0
 800be92:	8082      	strh	r2, [r0, #4]
 800be94:	4770      	bx	lr
 800be96:	bf00      	nop
 800be98:	0802812c 	.word	0x0802812c

0800be9c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800be9c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800be9e:	2000      	movs	r0, #0
 800bea0:	b12b      	cbz	r3, 800beae <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800bea2:	b920      	cbnz	r0, 800beae <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800bea4:	1a5a      	subs	r2, r3, r1
 800bea6:	4250      	negs	r0, r2
 800bea8:	4150      	adcs	r0, r2
 800beaa:	699b      	ldr	r3, [r3, #24]
 800beac:	e7f8      	b.n	800bea0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800beae:	4770      	bx	lr

0800beb0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800beb0:	2300      	movs	r3, #0
 800beb2:	6148      	str	r0, [r1, #20]
 800beb4:	618b      	str	r3, [r1, #24]
 800beb6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800beb8:	b913      	cbnz	r3, 800bec0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800beba:	6281      	str	r1, [r0, #40]	@ 0x28
 800bebc:	4770      	bx	lr
 800bebe:	4613      	mov	r3, r2
 800bec0:	699a      	ldr	r2, [r3, #24]
 800bec2:	2a00      	cmp	r2, #0
 800bec4:	d1fb      	bne.n	800bebe <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800bec6:	6199      	str	r1, [r3, #24]
 800bec8:	4770      	bx	lr

0800beca <_ZN8touchgfx9Container9removeAllEv>:
 800beca:	2200      	movs	r2, #0
 800becc:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800bece:	b123      	cbz	r3, 800beda <_ZN8touchgfx9Container9removeAllEv+0x10>
 800bed0:	6999      	ldr	r1, [r3, #24]
 800bed2:	6281      	str	r1, [r0, #40]	@ 0x28
 800bed4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800bed8:	e7f8      	b.n	800becc <_ZN8touchgfx9Container9removeAllEv+0x2>
 800beda:	4770      	bx	lr

0800bedc <_ZN8touchgfx9Container6unlinkEv>:
 800bedc:	2300      	movs	r3, #0
 800bede:	6283      	str	r3, [r0, #40]	@ 0x28
 800bee0:	4770      	bx	lr

0800bee2 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800bee2:	2200      	movs	r2, #0
 800bee4:	8002      	strh	r2, [r0, #0]
 800bee6:	8042      	strh	r2, [r0, #2]
 800bee8:	8082      	strh	r2, [r0, #4]
 800beea:	80c2      	strh	r2, [r0, #6]
 800beec:	4770      	bx	lr

0800beee <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800beee:	b570      	push	{r4, r5, r6, lr}
 800bef0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800bef2:	460d      	mov	r5, r1
 800bef4:	4616      	mov	r6, r2
 800bef6:	b13c      	cbz	r4, 800bf08 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800bef8:	6823      	ldr	r3, [r4, #0]
 800befa:	4620      	mov	r0, r4
 800befc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800befe:	4632      	mov	r2, r6
 800bf00:	4629      	mov	r1, r5
 800bf02:	4798      	blx	r3
 800bf04:	69a4      	ldr	r4, [r4, #24]
 800bf06:	e7f6      	b.n	800bef6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800bf08:	bd70      	pop	{r4, r5, r6, pc}

0800bf0a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800bf0a:	b538      	push	{r3, r4, r5, lr}
 800bf0c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800bf0e:	460d      	mov	r5, r1
 800bf10:	b134      	cbz	r4, 800bf20 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800bf12:	682b      	ldr	r3, [r5, #0]
 800bf14:	4621      	mov	r1, r4
 800bf16:	689b      	ldr	r3, [r3, #8]
 800bf18:	4628      	mov	r0, r5
 800bf1a:	4798      	blx	r3
 800bf1c:	69a4      	ldr	r4, [r4, #24]
 800bf1e:	e7f7      	b.n	800bf10 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800bf20:	bd38      	pop	{r3, r4, r5, pc}

0800bf22 <_ZN8touchgfx9ContainerD1Ev>:
 800bf22:	4770      	bx	lr

0800bf24 <_ZN8touchgfx9ContainerD0Ev>:
 800bf24:	b510      	push	{r4, lr}
 800bf26:	212c      	movs	r1, #44	@ 0x2c
 800bf28:	4604      	mov	r4, r0
 800bf2a:	f018 fa86 	bl	802443a <_ZdlPvj>
 800bf2e:	4620      	mov	r0, r4
 800bf30:	bd10      	pop	{r4, pc}

0800bf32 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800bf32:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800bf34:	b19b      	cbz	r3, 800bf5e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800bf36:	428b      	cmp	r3, r1
 800bf38:	d109      	bne.n	800bf4e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800bf3a:	699a      	ldr	r2, [r3, #24]
 800bf3c:	2100      	movs	r1, #0
 800bf3e:	6159      	str	r1, [r3, #20]
 800bf40:	6282      	str	r2, [r0, #40]	@ 0x28
 800bf42:	b902      	cbnz	r2, 800bf46 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800bf44:	4770      	bx	lr
 800bf46:	6199      	str	r1, [r3, #24]
 800bf48:	4770      	bx	lr
 800bf4a:	4613      	mov	r3, r2
 800bf4c:	b13a      	cbz	r2, 800bf5e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800bf4e:	699a      	ldr	r2, [r3, #24]
 800bf50:	428a      	cmp	r2, r1
 800bf52:	d1fa      	bne.n	800bf4a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800bf54:	698a      	ldr	r2, [r1, #24]
 800bf56:	619a      	str	r2, [r3, #24]
 800bf58:	2300      	movs	r3, #0
 800bf5a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800bf5e:	4770      	bx	lr

0800bf60 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800bf60:	b410      	push	{r4}
 800bf62:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800bf64:	4604      	mov	r4, r0
 800bf66:	b92b      	cbnz	r3, 800bf74 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800bf68:	6803      	ldr	r3, [r0, #0]
 800bf6a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bf6e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800bf70:	4611      	mov	r1, r2
 800bf72:	4718      	bx	r3
 800bf74:	b941      	cbnz	r1, 800bf88 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800bf76:	6193      	str	r3, [r2, #24]
 800bf78:	6282      	str	r2, [r0, #40]	@ 0x28
 800bf7a:	6154      	str	r4, [r2, #20]
 800bf7c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bf80:	4770      	bx	lr
 800bf82:	4603      	mov	r3, r0
 800bf84:	2800      	cmp	r0, #0
 800bf86:	d0f9      	beq.n	800bf7c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800bf88:	4299      	cmp	r1, r3
 800bf8a:	6998      	ldr	r0, [r3, #24]
 800bf8c:	d1f9      	bne.n	800bf82 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800bf8e:	6190      	str	r0, [r2, #24]
 800bf90:	618a      	str	r2, [r1, #24]
 800bf92:	e7f2      	b.n	800bf7a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800bf94 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800bf94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bf98:	461f      	mov	r7, r3
 800bf9a:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800bf9e:	460d      	mov	r5, r1
 800bfa0:	4616      	mov	r6, r2
 800bfa2:	b103      	cbz	r3, 800bfa6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800bfa4:	6038      	str	r0, [r7, #0]
 800bfa6:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800bfa8:	b314      	cbz	r4, 800bff0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800bfaa:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800bfae:	b1eb      	cbz	r3, 800bfec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bfb0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800bfb4:	428d      	cmp	r5, r1
 800bfb6:	db19      	blt.n	800bfec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bfb8:	8923      	ldrh	r3, [r4, #8]
 800bfba:	b289      	uxth	r1, r1
 800bfbc:	440b      	add	r3, r1
 800bfbe:	b21b      	sxth	r3, r3
 800bfc0:	429d      	cmp	r5, r3
 800bfc2:	da13      	bge.n	800bfec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bfc4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800bfc8:	4296      	cmp	r6, r2
 800bfca:	db0f      	blt.n	800bfec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bfcc:	8963      	ldrh	r3, [r4, #10]
 800bfce:	b292      	uxth	r2, r2
 800bfd0:	4413      	add	r3, r2
 800bfd2:	b21b      	sxth	r3, r3
 800bfd4:	429e      	cmp	r6, r3
 800bfd6:	da09      	bge.n	800bfec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bfd8:	6823      	ldr	r3, [r4, #0]
 800bfda:	1ab2      	subs	r2, r6, r2
 800bfdc:	1a69      	subs	r1, r5, r1
 800bfde:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800bfe2:	b212      	sxth	r2, r2
 800bfe4:	463b      	mov	r3, r7
 800bfe6:	b209      	sxth	r1, r1
 800bfe8:	4620      	mov	r0, r4
 800bfea:	47c0      	blx	r8
 800bfec:	69a4      	ldr	r4, [r4, #24]
 800bfee:	e7db      	b.n	800bfa8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800bff0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bff4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800bff4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bff8:	4c6e      	ldr	r4, [pc, #440]	@ (800c1b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800bffa:	b0a1      	sub	sp, #132	@ 0x84
 800bffc:	6824      	ldr	r4, [r4, #0]
 800bffe:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800c000:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800c004:	9303      	str	r3, [sp, #12]
 800c006:	2400      	movs	r4, #0
 800c008:	802c      	strh	r4, [r5, #0]
 800c00a:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800c00c:	802c      	strh	r4, [r5, #0]
 800c00e:	601c      	str	r4, [r3, #0]
 800c010:	4606      	mov	r6, r0
 800c012:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800c016:	f7ff ffbd 	bl	800bf94 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800c01a:	f1b9 0f03 	cmp.w	r9, #3
 800c01e:	f340 80c2 	ble.w	800c1a6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800c022:	4631      	mov	r1, r6
 800c024:	a80c      	add	r0, sp, #48	@ 0x30
 800c026:	f006 fe85 	bl	8012d34 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c02a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800c02e:	9306      	str	r3, [sp, #24]
 800c030:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800c034:	9307      	str	r3, [sp, #28]
 800c036:	9b03      	ldr	r3, [sp, #12]
 800c038:	f8d3 a000 	ldr.w	sl, [r3]
 800c03c:	f1ba 0f00 	cmp.w	sl, #0
 800c040:	f000 80b4 	beq.w	800c1ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800c044:	4651      	mov	r1, sl
 800c046:	a810      	add	r0, sp, #64	@ 0x40
 800c048:	f006 fe74 	bl	8012d34 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c04c:	9b01      	ldr	r3, [sp, #4]
 800c04e:	9a06      	ldr	r2, [sp, #24]
 800c050:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800c054:	189d      	adds	r5, r3, r2
 800c056:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800c05a:	9a07      	ldr	r2, [sp, #28]
 800c05c:	2002      	movs	r0, #2
 800c05e:	fb91 f1f0 	sdiv	r1, r1, r0
 800c062:	4419      	add	r1, r3
 800c064:	1a6d      	subs	r5, r5, r1
 800c066:	9b02      	ldr	r3, [sp, #8]
 800c068:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800c06c:	4413      	add	r3, r2
 800c06e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800c072:	fb92 f2f0 	sdiv	r2, r2, r0
 800c076:	440a      	add	r2, r1
 800c078:	1a9b      	subs	r3, r3, r2
 800c07a:	435b      	muls	r3, r3
 800c07c:	fb05 3505 	mla	r5, r5, r5, r3
 800c080:	4f4d      	ldr	r7, [pc, #308]	@ (800c1b8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800c082:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800c084:	ac10      	add	r4, sp, #64	@ 0x40
 800c086:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c088:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800c08a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c08c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800c08e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c090:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800c094:	f1b9 0f0c 	cmp.w	r9, #12
 800c098:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800c09c:	f04f 0303 	mov.w	r3, #3
 800c0a0:	bfc8      	it	gt
 800c0a2:	4698      	movgt	r8, r3
 800c0a4:	f8cd 9000 	str.w	r9, [sp]
 800c0a8:	f04f 0400 	mov.w	r4, #0
 800c0ac:	bfdc      	itt	le
 800c0ae:	f109 32ff 	addle.w	r2, r9, #4294967295
 800c0b2:	fb92 f8f3 	sdivle	r8, r2, r3
 800c0b6:	1c63      	adds	r3, r4, #1
 800c0b8:	aa10      	add	r2, sp, #64	@ 0x40
 800c0ba:	f004 0401 	and.w	r4, r4, #1
 800c0be:	9308      	str	r3, [sp, #32]
 800c0c0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800c0c4:	9b00      	ldr	r3, [sp, #0]
 800c0c6:	fb93 f3f8 	sdiv	r3, r3, r8
 800c0ca:	b29b      	uxth	r3, r3
 800c0cc:	3404      	adds	r4, #4
 800c0ce:	f04f 0b00 	mov.w	fp, #0
 800c0d2:	9304      	str	r3, [sp, #16]
 800c0d4:	9a04      	ldr	r2, [sp, #16]
 800c0d6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800c0da:	fb13 f302 	smulbb	r3, r3, r2
 800c0de:	9a01      	ldr	r2, [sp, #4]
 800c0e0:	b29b      	uxth	r3, r3
 800c0e2:	1899      	adds	r1, r3, r2
 800c0e4:	9305      	str	r3, [sp, #20]
 800c0e6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800c0ea:	b209      	sxth	r1, r1
 800c0ec:	4299      	cmp	r1, r3
 800c0ee:	db4d      	blt.n	800c18c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c0f0:	8932      	ldrh	r2, [r6, #8]
 800c0f2:	4413      	add	r3, r2
 800c0f4:	b21b      	sxth	r3, r3
 800c0f6:	4299      	cmp	r1, r3
 800c0f8:	da48      	bge.n	800c18c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c0fa:	9b04      	ldr	r3, [sp, #16]
 800c0fc:	6827      	ldr	r7, [r4, #0]
 800c0fe:	fb17 f703 	smulbb	r7, r7, r3
 800c102:	9b02      	ldr	r3, [sp, #8]
 800c104:	b2bf      	uxth	r7, r7
 800c106:	18fa      	adds	r2, r7, r3
 800c108:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800c10c:	b212      	sxth	r2, r2
 800c10e:	429a      	cmp	r2, r3
 800c110:	db3c      	blt.n	800c18c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c112:	8970      	ldrh	r0, [r6, #10]
 800c114:	4403      	add	r3, r0
 800c116:	b21b      	sxth	r3, r3
 800c118:	429a      	cmp	r2, r3
 800c11a:	da37      	bge.n	800c18c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c11c:	2300      	movs	r3, #0
 800c11e:	930b      	str	r3, [sp, #44]	@ 0x2c
 800c120:	4630      	mov	r0, r6
 800c122:	ab0b      	add	r3, sp, #44	@ 0x2c
 800c124:	f7ff ff36 	bl	800bf94 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800c128:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800c12a:	b37a      	cbz	r2, 800c18c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c12c:	4552      	cmp	r2, sl
 800c12e:	d02d      	beq.n	800c18c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c130:	4611      	mov	r1, r2
 800c132:	a80e      	add	r0, sp, #56	@ 0x38
 800c134:	9209      	str	r2, [sp, #36]	@ 0x24
 800c136:	f006 fdfd 	bl	8012d34 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c13a:	9a06      	ldr	r2, [sp, #24]
 800c13c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800c140:	9b01      	ldr	r3, [sp, #4]
 800c142:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800c146:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800c14a:	4413      	add	r3, r2
 800c14c:	f04f 0e02 	mov.w	lr, #2
 800c150:	fb91 f1fe 	sdiv	r1, r1, lr
 800c154:	4401      	add	r1, r0
 800c156:	1a58      	subs	r0, r3, r1
 800c158:	9a07      	ldr	r2, [sp, #28]
 800c15a:	9b02      	ldr	r3, [sp, #8]
 800c15c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800c160:	fb9c fcfe 	sdiv	ip, ip, lr
 800c164:	4413      	add	r3, r2
 800c166:	448c      	add	ip, r1
 800c168:	eba3 030c 	sub.w	r3, r3, ip
 800c16c:	435b      	muls	r3, r3
 800c16e:	fb00 3300 	mla	r3, r0, r0, r3
 800c172:	42ab      	cmp	r3, r5
 800c174:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800c176:	d208      	bcs.n	800c18a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800c178:	9803      	ldr	r0, [sp, #12]
 800c17a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800c17c:	6001      	str	r1, [r0, #0]
 800c17e:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800c180:	9805      	ldr	r0, [sp, #20]
 800c182:	8008      	strh	r0, [r1, #0]
 800c184:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800c186:	461d      	mov	r5, r3
 800c188:	800f      	strh	r7, [r1, #0]
 800c18a:	4692      	mov	sl, r2
 800c18c:	f10b 0b01 	add.w	fp, fp, #1
 800c190:	f1bb 0f04 	cmp.w	fp, #4
 800c194:	f104 0408 	add.w	r4, r4, #8
 800c198:	d19c      	bne.n	800c0d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800c19a:	9b00      	ldr	r3, [sp, #0]
 800c19c:	9c08      	ldr	r4, [sp, #32]
 800c19e:	444b      	add	r3, r9
 800c1a0:	4544      	cmp	r4, r8
 800c1a2:	9300      	str	r3, [sp, #0]
 800c1a4:	d187      	bne.n	800c0b6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800c1a6:	b021      	add	sp, #132	@ 0x84
 800c1a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c1ac:	f04f 35ff 	mov.w	r5, #4294967295
 800c1b0:	e766      	b.n	800c080 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800c1b2:	bf00      	nop
 800c1b4:	20015238 	.word	0x20015238
 800c1b8:	08026308 	.word	0x08026308

0800c1bc <_ZN8touchgfx4RectaNERKS0_>:
 800c1bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c1c0:	f9b1 7000 	ldrsh.w	r7, [r1]
 800c1c4:	888c      	ldrh	r4, [r1, #4]
 800c1c6:	f9b0 9000 	ldrsh.w	r9, [r0]
 800c1ca:	443c      	add	r4, r7
 800c1cc:	b2a4      	uxth	r4, r4
 800c1ce:	fa0f f884 	sxth.w	r8, r4
 800c1d2:	45c1      	cmp	r9, r8
 800c1d4:	da2f      	bge.n	800c236 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c1d6:	8882      	ldrh	r2, [r0, #4]
 800c1d8:	444a      	add	r2, r9
 800c1da:	b292      	uxth	r2, r2
 800c1dc:	fa0f fe82 	sxth.w	lr, r2
 800c1e0:	4577      	cmp	r7, lr
 800c1e2:	da28      	bge.n	800c236 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c1e4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800c1e8:	88cb      	ldrh	r3, [r1, #6]
 800c1ea:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800c1ee:	442b      	add	r3, r5
 800c1f0:	b21b      	sxth	r3, r3
 800c1f2:	429e      	cmp	r6, r3
 800c1f4:	da1f      	bge.n	800c236 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c1f6:	88c3      	ldrh	r3, [r0, #6]
 800c1f8:	4433      	add	r3, r6
 800c1fa:	b29b      	uxth	r3, r3
 800c1fc:	fa0f fc83 	sxth.w	ip, r3
 800c200:	4565      	cmp	r5, ip
 800c202:	da18      	bge.n	800c236 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c204:	454f      	cmp	r7, r9
 800c206:	bfb8      	it	lt
 800c208:	464f      	movlt	r7, r9
 800c20a:	42b5      	cmp	r5, r6
 800c20c:	bfb8      	it	lt
 800c20e:	4635      	movlt	r5, r6
 800c210:	45f0      	cmp	r8, lr
 800c212:	bfd8      	it	le
 800c214:	4622      	movle	r2, r4
 800c216:	1bd2      	subs	r2, r2, r7
 800c218:	8082      	strh	r2, [r0, #4]
 800c21a:	884a      	ldrh	r2, [r1, #2]
 800c21c:	88c9      	ldrh	r1, [r1, #6]
 800c21e:	8007      	strh	r7, [r0, #0]
 800c220:	440a      	add	r2, r1
 800c222:	b292      	uxth	r2, r2
 800c224:	b211      	sxth	r1, r2
 800c226:	458c      	cmp	ip, r1
 800c228:	bfa8      	it	ge
 800c22a:	4613      	movge	r3, r2
 800c22c:	1b5b      	subs	r3, r3, r5
 800c22e:	80c3      	strh	r3, [r0, #6]
 800c230:	8045      	strh	r5, [r0, #2]
 800c232:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c236:	2300      	movs	r3, #0
 800c238:	8003      	strh	r3, [r0, #0]
 800c23a:	8043      	strh	r3, [r0, #2]
 800c23c:	8083      	strh	r3, [r0, #4]
 800c23e:	80c3      	strh	r3, [r0, #6]
 800c240:	e7f7      	b.n	800c232 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800c242 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800c242:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c246:	2b00      	cmp	r3, #0
 800c248:	dd06      	ble.n	800c258 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800c24a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800c24e:	2800      	cmp	r0, #0
 800c250:	bfcc      	ite	gt
 800c252:	2000      	movgt	r0, #0
 800c254:	2001      	movle	r0, #1
 800c256:	4770      	bx	lr
 800c258:	2001      	movs	r0, #1
 800c25a:	4770      	bx	lr

0800c25c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800c25c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c260:	2300      	movs	r3, #0
 800c262:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800c264:	8003      	strh	r3, [r0, #0]
 800c266:	4604      	mov	r4, r0
 800c268:	8043      	strh	r3, [r0, #2]
 800c26a:	8083      	strh	r3, [r0, #4]
 800c26c:	80c3      	strh	r3, [r0, #6]
 800c26e:	2d00      	cmp	r5, #0
 800c270:	d040      	beq.n	800c2f4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800c272:	1d28      	adds	r0, r5, #4
 800c274:	f7ff ffe5 	bl	800c242 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c278:	b988      	cbnz	r0, 800c29e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800c27a:	4620      	mov	r0, r4
 800c27c:	f7ff ffe1 	bl	800c242 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c280:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800c284:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c288:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800c28c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800c290:	b138      	cbz	r0, 800c2a2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800c292:	8022      	strh	r2, [r4, #0]
 800c294:	8063      	strh	r3, [r4, #2]
 800c296:	f8a4 e004 	strh.w	lr, [r4, #4]
 800c29a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800c29e:	69ad      	ldr	r5, [r5, #24]
 800c2a0:	e7e5      	b.n	800c26e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800c2a2:	f9b4 0000 	ldrsh.w	r0, [r4]
 800c2a6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800c2aa:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800c2ae:	4290      	cmp	r0, r2
 800c2b0:	4607      	mov	r7, r0
 800c2b2:	bfa8      	it	ge
 800c2b4:	4617      	movge	r7, r2
 800c2b6:	4472      	add	r2, lr
 800c2b8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800c2bc:	8027      	strh	r7, [r4, #0]
 800c2be:	4299      	cmp	r1, r3
 800c2c0:	460e      	mov	r6, r1
 800c2c2:	4440      	add	r0, r8
 800c2c4:	bfa8      	it	ge
 800c2c6:	461e      	movge	r6, r3
 800c2c8:	4471      	add	r1, lr
 800c2ca:	4463      	add	r3, ip
 800c2cc:	b200      	sxth	r0, r0
 800c2ce:	b212      	sxth	r2, r2
 800c2d0:	b209      	sxth	r1, r1
 800c2d2:	b21b      	sxth	r3, r3
 800c2d4:	4290      	cmp	r0, r2
 800c2d6:	bfac      	ite	ge
 800c2d8:	ebc7 0200 	rsbge	r2, r7, r0
 800c2dc:	ebc7 0202 	rsblt	r2, r7, r2
 800c2e0:	4299      	cmp	r1, r3
 800c2e2:	bfac      	ite	ge
 800c2e4:	ebc6 0301 	rsbge	r3, r6, r1
 800c2e8:	ebc6 0303 	rsblt	r3, r6, r3
 800c2ec:	8066      	strh	r6, [r4, #2]
 800c2ee:	80a2      	strh	r2, [r4, #4]
 800c2f0:	80e3      	strh	r3, [r4, #6]
 800c2f2:	e7d4      	b.n	800c29e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800c2f4:	4620      	mov	r0, r4
 800c2f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c2fa <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800c2fa:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800c2fe:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800c302:	b383      	cbz	r3, 800c366 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800c304:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800c306:	b374      	cbz	r4, 800c366 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800c308:	f9b1 5000 	ldrsh.w	r5, [r1]
 800c30c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800c310:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800c314:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800c318:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800c31c:	b303      	cbz	r3, 800c360 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800c31e:	4668      	mov	r0, sp
 800c320:	1d21      	adds	r1, r4, #4
 800c322:	f8ad 5000 	strh.w	r5, [sp]
 800c326:	f8ad 6002 	strh.w	r6, [sp, #2]
 800c32a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800c32e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800c332:	f7ff ff43 	bl	800c1bc <_ZN8touchgfx4RectaNERKS0_>
 800c336:	4668      	mov	r0, sp
 800c338:	f7ff ff83 	bl	800c242 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c33c:	b980      	cbnz	r0, 800c360 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800c33e:	f8bd 3000 	ldrh.w	r3, [sp]
 800c342:	88a2      	ldrh	r2, [r4, #4]
 800c344:	1a9b      	subs	r3, r3, r2
 800c346:	f8ad 3000 	strh.w	r3, [sp]
 800c34a:	88e2      	ldrh	r2, [r4, #6]
 800c34c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c350:	1a9b      	subs	r3, r3, r2
 800c352:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c356:	6823      	ldr	r3, [r4, #0]
 800c358:	4669      	mov	r1, sp
 800c35a:	689b      	ldr	r3, [r3, #8]
 800c35c:	4620      	mov	r0, r4
 800c35e:	4798      	blx	r3
 800c360:	69a4      	ldr	r4, [r4, #24]
 800c362:	2c00      	cmp	r4, #0
 800c364:	d1d8      	bne.n	800c318 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800c366:	b002      	add	sp, #8
 800c368:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c36c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800c36c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c36e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800c372:	460d      	mov	r5, r1
 800c374:	4616      	mov	r6, r2
 800c376:	b323      	cbz	r3, 800c3c2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800c378:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800c37a:	b314      	cbz	r4, 800c3c2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800c37c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800c380:	b1eb      	cbz	r3, 800c3be <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800c382:	6828      	ldr	r0, [r5, #0]
 800c384:	6869      	ldr	r1, [r5, #4]
 800c386:	466b      	mov	r3, sp
 800c388:	c303      	stmia	r3!, {r0, r1}
 800c38a:	4668      	mov	r0, sp
 800c38c:	1d21      	adds	r1, r4, #4
 800c38e:	f7ff ff15 	bl	800c1bc <_ZN8touchgfx4RectaNERKS0_>
 800c392:	4668      	mov	r0, sp
 800c394:	f7ff ff55 	bl	800c242 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c398:	b988      	cbnz	r0, 800c3be <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800c39a:	f8bd 3000 	ldrh.w	r3, [sp]
 800c39e:	88a2      	ldrh	r2, [r4, #4]
 800c3a0:	1a9b      	subs	r3, r3, r2
 800c3a2:	f8ad 3000 	strh.w	r3, [sp]
 800c3a6:	88e2      	ldrh	r2, [r4, #6]
 800c3a8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c3ac:	1a9b      	subs	r3, r3, r2
 800c3ae:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c3b2:	6823      	ldr	r3, [r4, #0]
 800c3b4:	4632      	mov	r2, r6
 800c3b6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c3b8:	4669      	mov	r1, sp
 800c3ba:	4620      	mov	r0, r4
 800c3bc:	4798      	blx	r3
 800c3be:	69a4      	ldr	r4, [r4, #24]
 800c3c0:	e7db      	b.n	800c37a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800c3c2:	b002      	add	sp, #8
 800c3c4:	bd70      	pop	{r4, r5, r6, pc}

0800c3c6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800c3c6:	b513      	push	{r0, r1, r4, lr}
 800c3c8:	6803      	ldr	r3, [r0, #0]
 800c3ca:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
 800c3ce:	2300      	movs	r3, #0
 800c3d0:	e9cd 3300 	strd	r3, r3, [sp]
 800c3d4:	466b      	mov	r3, sp
 800c3d6:	47a0      	blx	r4
 800c3d8:	b002      	add	sp, #8
 800c3da:	bd10      	pop	{r4, pc}

0800c3dc <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800c3dc:	2301      	movs	r3, #1
 800c3de:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800c3e2:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800c3e6:	4770      	bx	lr

0800c3e8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800c3e8:	2301      	movs	r3, #1
 800c3ea:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800c3ee:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800c3f2:	4770      	bx	lr

0800c3f4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800c3f4:	6843      	ldr	r3, [r0, #4]
 800c3f6:	2201      	movs	r2, #1
 800c3f8:	725a      	strb	r2, [r3, #9]
 800c3fa:	6840      	ldr	r0, [r0, #4]
 800c3fc:	6803      	ldr	r3, [r0, #0]
 800c3fe:	691b      	ldr	r3, [r3, #16]
 800c400:	4718      	bx	r3

0800c402 <_ZN8touchgfx3HAL8flushDMAEv>:
 800c402:	6840      	ldr	r0, [r0, #4]
 800c404:	6803      	ldr	r3, [r0, #0]
 800c406:	689b      	ldr	r3, [r3, #8]
 800c408:	4718      	bx	r3

0800c40a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800c40a:	b530      	push	{r4, r5, lr}
 800c40c:	b08b      	sub	sp, #44	@ 0x2c
 800c40e:	6804      	ldr	r4, [r0, #0]
 800c410:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800c414:	9509      	str	r5, [sp, #36]	@ 0x24
 800c416:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800c41a:	9508      	str	r5, [sp, #32]
 800c41c:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800c420:	9507      	str	r5, [sp, #28]
 800c422:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800c426:	9506      	str	r5, [sp, #24]
 800c428:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800c42c:	9505      	str	r5, [sp, #20]
 800c42e:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800c432:	9504      	str	r5, [sp, #16]
 800c434:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800c438:	9503      	str	r5, [sp, #12]
 800c43a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800c43e:	9502      	str	r5, [sp, #8]
 800c440:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800c444:	e9cd 3500 	strd	r3, r5, [sp]
 800c448:	4613      	mov	r3, r2
 800c44a:	6c24      	ldr	r4, [r4, #64]	@ 0x40
 800c44c:	2200      	movs	r2, #0
 800c44e:	47a0      	blx	r4
 800c450:	b00b      	add	sp, #44	@ 0x2c
 800c452:	bd30      	pop	{r4, r5, pc}

0800c454 <_ZN8touchgfx3HAL10beginFrameEv>:
 800c454:	4b04      	ldr	r3, [pc, #16]	@ (800c468 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800c456:	781b      	ldrb	r3, [r3, #0]
 800c458:	b123      	cbz	r3, 800c464 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800c45a:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800c45e:	f080 0001 	eor.w	r0, r0, #1
 800c462:	4770      	bx	lr
 800c464:	2001      	movs	r0, #1
 800c466:	4770      	bx	lr
 800c468:	20015236 	.word	0x20015236

0800c46c <_ZN8touchgfx3HAL8endFrameEv>:
 800c46c:	b510      	push	{r4, lr}
 800c46e:	4604      	mov	r4, r0
 800c470:	6840      	ldr	r0, [r0, #4]
 800c472:	6803      	ldr	r3, [r0, #0]
 800c474:	689b      	ldr	r3, [r3, #8]
 800c476:	4798      	blx	r3
 800c478:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800c47c:	b113      	cbz	r3, 800c484 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800c47e:	2301      	movs	r3, #1
 800c480:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800c484:	bd10      	pop	{r4, pc}

0800c486 <_ZN8touchgfx3HAL10initializeEv>:
 800c486:	b510      	push	{r4, lr}
 800c488:	4604      	mov	r4, r0
 800c48a:	f7f5 fbbd 	bl	8001c08 <_ZN8touchgfx10OSWrappers10initializeEv>
 800c48e:	f7f5 fac5 	bl	8001a1c <_ZN8touchgfx4GPIO4initEv>
 800c492:	6860      	ldr	r0, [r4, #4]
 800c494:	6803      	ldr	r3, [r0, #0]
 800c496:	68db      	ldr	r3, [r3, #12]
 800c498:	4798      	blx	r3
 800c49a:	68e0      	ldr	r0, [r4, #12]
 800c49c:	6803      	ldr	r3, [r0, #0]
 800c49e:	689b      	ldr	r3, [r3, #8]
 800c4a0:	4798      	blx	r3
 800c4a2:	6823      	ldr	r3, [r4, #0]
 800c4a4:	4620      	mov	r0, r4
 800c4a6:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800c4a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c4ac:	4718      	bx	r3
	...

0800c4b0 <_ZN8touchgfx3HAL4tickEv>:
 800c4b0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c4b2:	6803      	ldr	r3, [r0, #0]
 800c4b4:	4d62      	ldr	r5, [pc, #392]	@ (800c640 <_ZN8touchgfx3HAL4tickEv+0x190>)
 800c4b6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800c4ba:	4604      	mov	r4, r0
 800c4bc:	4798      	blx	r3
 800c4be:	2800      	cmp	r0, #0
 800c4c0:	f000 809e 	beq.w	800c600 <_ZN8touchgfx3HAL4tickEv+0x150>
 800c4c4:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800c4c8:	2b02      	cmp	r3, #2
 800c4ca:	d002      	beq.n	800c4d2 <_ZN8touchgfx3HAL4tickEv+0x22>
 800c4cc:	2001      	movs	r0, #1
 800c4ce:	f7f5 fa23 	bl	8001918 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800c4d2:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800c4d6:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800c4da:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800c4de:	2600      	movs	r6, #0
 800c4e0:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800c4e4:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800c4e8:	b133      	cbz	r3, 800c4f8 <_ZN8touchgfx3HAL4tickEv+0x48>
 800c4ea:	6823      	ldr	r3, [r4, #0]
 800c4ec:	4620      	mov	r0, r4
 800c4ee:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800c4f2:	4798      	blx	r3
 800c4f4:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800c4f8:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800c4fc:	6862      	ldr	r2, [r4, #4]
 800c4fe:	f083 0301 	eor.w	r3, r3, #1
 800c502:	7253      	strb	r3, [r2, #9]
 800c504:	2601      	movs	r6, #1
 800c506:	702e      	strb	r6, [r5, #0]
 800c508:	f005 f9c6 	bl	8011898 <_ZN8touchgfx11Application11getInstanceEv>
 800c50c:	6803      	ldr	r3, [r0, #0]
 800c50e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800c510:	4798      	blx	r3
 800c512:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800c516:	b90b      	cbnz	r3, 800c51c <_ZN8touchgfx3HAL4tickEv+0x6c>
 800c518:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800c51c:	f005 f9bc 	bl	8011898 <_ZN8touchgfx11Application11getInstanceEv>
 800c520:	6803      	ldr	r3, [r0, #0]
 800c522:	695b      	ldr	r3, [r3, #20]
 800c524:	4798      	blx	r3
 800c526:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800c528:	6803      	ldr	r3, [r0, #0]
 800c52a:	691b      	ldr	r3, [r3, #16]
 800c52c:	4798      	blx	r3
 800c52e:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800c532:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800c536:	3b01      	subs	r3, #1
 800c538:	b2db      	uxtb	r3, r3
 800c53a:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800c53e:	b10a      	cbz	r2, 800c544 <_ZN8touchgfx3HAL4tickEv+0x94>
 800c540:	2b00      	cmp	r3, #0
 800c542:	d1eb      	bne.n	800c51c <_ZN8touchgfx3HAL4tickEv+0x6c>
 800c544:	4a3f      	ldr	r2, [pc, #252]	@ (800c644 <_ZN8touchgfx3HAL4tickEv+0x194>)
 800c546:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800c54a:	7813      	ldrb	r3, [r2, #0]
 800c54c:	3301      	adds	r3, #1
 800c54e:	b25b      	sxtb	r3, r3
 800c550:	4299      	cmp	r1, r3
 800c552:	7013      	strb	r3, [r2, #0]
 800c554:	dc10      	bgt.n	800c578 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800c556:	68e0      	ldr	r0, [r4, #12]
 800c558:	2300      	movs	r3, #0
 800c55a:	7013      	strb	r3, [r2, #0]
 800c55c:	6803      	ldr	r3, [r0, #0]
 800c55e:	aa03      	add	r2, sp, #12
 800c560:	68db      	ldr	r3, [r3, #12]
 800c562:	a902      	add	r1, sp, #8
 800c564:	4798      	blx	r3
 800c566:	6823      	ldr	r3, [r4, #0]
 800c568:	2800      	cmp	r0, #0
 800c56a:	d059      	beq.n	800c620 <_ZN8touchgfx3HAL4tickEv+0x170>
 800c56c:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800c570:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800c574:	4620      	mov	r0, r4
 800c576:	4798      	blx	r3
 800c578:	6960      	ldr	r0, [r4, #20]
 800c57a:	2300      	movs	r3, #0
 800c57c:	f88d 3007 	strb.w	r3, [sp, #7]
 800c580:	b158      	cbz	r0, 800c59a <_ZN8touchgfx3HAL4tickEv+0xea>
 800c582:	6803      	ldr	r3, [r0, #0]
 800c584:	f10d 0107 	add.w	r1, sp, #7
 800c588:	68db      	ldr	r3, [r3, #12]
 800c58a:	4798      	blx	r3
 800c58c:	b128      	cbz	r0, 800c59a <_ZN8touchgfx3HAL4tickEv+0xea>
 800c58e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800c590:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800c594:	6803      	ldr	r3, [r0, #0]
 800c596:	68db      	ldr	r3, [r3, #12]
 800c598:	4798      	blx	r3
 800c59a:	f104 001c 	add.w	r0, r4, #28
 800c59e:	f017 f94b 	bl	8023838 <_ZN8touchgfx8Gestures4tickEv>
 800c5a2:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800c5a6:	b30b      	cbz	r3, 800c5ec <_ZN8touchgfx3HAL4tickEv+0x13c>
 800c5a8:	6920      	ldr	r0, [r4, #16]
 800c5aa:	6803      	ldr	r3, [r0, #0]
 800c5ac:	691b      	ldr	r3, [r3, #16]
 800c5ae:	4798      	blx	r3
 800c5b0:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800c5b2:	4606      	mov	r6, r0
 800c5b4:	b903      	cbnz	r3, 800c5b8 <_ZN8touchgfx3HAL4tickEv+0x108>
 800c5b6:	6760      	str	r0, [r4, #116]	@ 0x74
 800c5b8:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800c5ba:	4a23      	ldr	r2, [pc, #140]	@ (800c648 <_ZN8touchgfx3HAL4tickEv+0x198>)
 800c5bc:	1af3      	subs	r3, r6, r3
 800c5be:	4293      	cmp	r3, r2
 800c5c0:	d914      	bls.n	800c5ec <_ZN8touchgfx3HAL4tickEv+0x13c>
 800c5c2:	6920      	ldr	r0, [r4, #16]
 800c5c4:	6803      	ldr	r3, [r0, #0]
 800c5c6:	699b      	ldr	r3, [r3, #24]
 800c5c8:	4798      	blx	r3
 800c5ca:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800c5cc:	2264      	movs	r2, #100	@ 0x64
 800c5ce:	1af3      	subs	r3, r6, r3
 800c5d0:	fbb3 f3f2 	udiv	r3, r3, r2
 800c5d4:	fbb0 f0f3 	udiv	r0, r0, r3
 800c5d8:	2800      	cmp	r0, #0
 800c5da:	dc26      	bgt.n	800c62a <_ZN8touchgfx3HAL4tickEv+0x17a>
 800c5dc:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800c5e0:	6920      	ldr	r0, [r4, #16]
 800c5e2:	6803      	ldr	r3, [r0, #0]
 800c5e4:	2100      	movs	r1, #0
 800c5e6:	69db      	ldr	r3, [r3, #28]
 800c5e8:	4798      	blx	r3
 800c5ea:	6766      	str	r6, [r4, #116]	@ 0x74
 800c5ec:	6823      	ldr	r3, [r4, #0]
 800c5ee:	4620      	mov	r0, r4
 800c5f0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800c5f4:	4798      	blx	r3
 800c5f6:	f005 f94f 	bl	8011898 <_ZN8touchgfx11Application11getInstanceEv>
 800c5fa:	6803      	ldr	r3, [r0, #0]
 800c5fc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c5fe:	4798      	blx	r3
 800c600:	6823      	ldr	r3, [r4, #0]
 800c602:	4620      	mov	r0, r4
 800c604:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800c608:	4798      	blx	r3
 800c60a:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800c60e:	2b02      	cmp	r3, #2
 800c610:	d002      	beq.n	800c618 <_ZN8touchgfx3HAL4tickEv+0x168>
 800c612:	2001      	movs	r0, #1
 800c614:	f7f5 f9aa 	bl	800196c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800c618:	2300      	movs	r3, #0
 800c61a:	702b      	strb	r3, [r5, #0]
 800c61c:	b004      	add	sp, #16
 800c61e:	bd70      	pop	{r4, r5, r6, pc}
 800c620:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
 800c624:	4620      	mov	r0, r4
 800c626:	4798      	blx	r3
 800c628:	e7a6      	b.n	800c578 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800c62a:	2863      	cmp	r0, #99	@ 0x63
 800c62c:	bfcb      	itete	gt
 800c62e:	2300      	movgt	r3, #0
 800c630:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800c634:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800c638:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800c63c:	e7d0      	b.n	800c5e0 <_ZN8touchgfx3HAL4tickEv+0x130>
 800c63e:	bf00      	nop
 800c640:	2001523c 	.word	0x2001523c
 800c644:	2001523d 	.word	0x2001523d
 800c648:	05f5e100 	.word	0x05f5e100

0800c64c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800c64c:	b510      	push	{r4, lr}
 800c64e:	4604      	mov	r4, r0
 800c650:	f7f5 fb0a 	bl	8001c68 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800c654:	6863      	ldr	r3, [r4, #4]
 800c656:	2200      	movs	r2, #0
 800c658:	729a      	strb	r2, [r3, #10]
 800c65a:	bd10      	pop	{r4, pc}

0800c65c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800c65c:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800c65e:	301c      	adds	r0, #28
 800c660:	f017 b8e8 	b.w	8023834 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800c664 <_ZN8touchgfx3HAL5touchEll>:
 800c664:	b530      	push	{r4, r5, lr}
 800c666:	b087      	sub	sp, #28
 800c668:	4604      	mov	r4, r0
 800c66a:	a804      	add	r0, sp, #16
 800c66c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800c670:	f004 fefa 	bl	8011468 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800c674:	9b04      	ldr	r3, [sp, #16]
 800c676:	f8ad 300c 	strh.w	r3, [sp, #12]
 800c67a:	a906      	add	r1, sp, #24
 800c67c:	9b05      	ldr	r3, [sp, #20]
 800c67e:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800c682:	a803      	add	r0, sp, #12
 800c684:	f004 ff42 	bl	801150c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800c688:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800c68c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800c690:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800c694:	f104 001c 	add.w	r0, r4, #28
 800c698:	b189      	cbz	r1, 800c6be <_ZN8touchgfx3HAL5touchEll+0x5a>
 800c69a:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800c69e:	9300      	str	r3, [sp, #0]
 800c6a0:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800c6a4:	4613      	mov	r3, r2
 800c6a6:	462a      	mov	r2, r5
 800c6a8:	f017 f8d4 	bl	8023854 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800c6ac:	b128      	cbz	r0, 800c6ba <_ZN8touchgfx3HAL5touchEll+0x56>
 800c6ae:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c6b2:	6623      	str	r3, [r4, #96]	@ 0x60
 800c6b4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c6b8:	6663      	str	r3, [r4, #100]	@ 0x64
 800c6ba:	b007      	add	sp, #28
 800c6bc:	bd30      	pop	{r4, r5, pc}
 800c6be:	f017 f909 	bl	80238d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800c6c2:	2301      	movs	r3, #1
 800c6c4:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800c6c8:	e7f1      	b.n	800c6ae <_ZN8touchgfx3HAL5touchEll+0x4a>

0800c6ca <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800c6ca:	b510      	push	{r4, lr}
 800c6cc:	2b00      	cmp	r3, #0
 800c6ce:	d046      	beq.n	800c75e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800c6d0:	ea81 0002 	eor.w	r0, r1, r2
 800c6d4:	07c4      	lsls	r4, r0, #31
 800c6d6:	d508      	bpl.n	800c6ea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800c6d8:	440b      	add	r3, r1
 800c6da:	3a01      	subs	r2, #1
 800c6dc:	428b      	cmp	r3, r1
 800c6de:	d93e      	bls.n	800c75e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800c6e0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800c6e4:	f801 0b01 	strb.w	r0, [r1], #1
 800c6e8:	e7f8      	b.n	800c6dc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800c6ea:	07d0      	lsls	r0, r2, #31
 800c6ec:	bf42      	ittt	mi
 800c6ee:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800c6f2:	f801 0b01 	strbmi.w	r0, [r1], #1
 800c6f6:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800c6fa:	2b01      	cmp	r3, #1
 800c6fc:	d911      	bls.n	800c722 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800c6fe:	ea81 0402 	eor.w	r4, r1, r2
 800c702:	07a4      	lsls	r4, r4, #30
 800c704:	4610      	mov	r0, r2
 800c706:	d022      	beq.n	800c74e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800c708:	f023 0401 	bic.w	r4, r3, #1
 800c70c:	440c      	add	r4, r1
 800c70e:	428c      	cmp	r4, r1
 800c710:	4602      	mov	r2, r0
 800c712:	d904      	bls.n	800c71e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800c714:	8812      	ldrh	r2, [r2, #0]
 800c716:	f821 2b02 	strh.w	r2, [r1], #2
 800c71a:	3002      	adds	r0, #2
 800c71c:	e7f7      	b.n	800c70e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800c71e:	f003 0301 	and.w	r3, r3, #1
 800c722:	f023 0003 	bic.w	r0, r3, #3
 800c726:	4408      	add	r0, r1
 800c728:	4288      	cmp	r0, r1
 800c72a:	4614      	mov	r4, r2
 800c72c:	d904      	bls.n	800c738 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800c72e:	6824      	ldr	r4, [r4, #0]
 800c730:	f841 4b04 	str.w	r4, [r1], #4
 800c734:	3204      	adds	r2, #4
 800c736:	e7f7      	b.n	800c728 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800c738:	f003 0303 	and.w	r3, r3, #3
 800c73c:	440b      	add	r3, r1
 800c73e:	3a01      	subs	r2, #1
 800c740:	428b      	cmp	r3, r1
 800c742:	d90c      	bls.n	800c75e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800c744:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800c748:	f801 0b01 	strb.w	r0, [r1], #1
 800c74c:	e7f8      	b.n	800c740 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800c74e:	0790      	lsls	r0, r2, #30
 800c750:	d0e7      	beq.n	800c722 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800c752:	f832 0b02 	ldrh.w	r0, [r2], #2
 800c756:	f821 0b02 	strh.w	r0, [r1], #2
 800c75a:	3b02      	subs	r3, #2
 800c75c:	e7e1      	b.n	800c722 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800c75e:	2001      	movs	r0, #1
 800c760:	bd10      	pop	{r4, pc}

0800c762 <_ZN8touchgfx3HAL7noTouchEv>:
 800c762:	b510      	push	{r4, lr}
 800c764:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800c768:	4604      	mov	r4, r0
 800c76a:	b153      	cbz	r3, 800c782 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800c76c:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800c770:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800c774:	2101      	movs	r1, #1
 800c776:	301c      	adds	r0, #28
 800c778:	f017 f8ac 	bl	80238d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800c77c:	2300      	movs	r3, #0
 800c77e:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800c782:	bd10      	pop	{r4, pc}

0800c784 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800c784:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c788:	b085      	sub	sp, #20
 800c78a:	ad04      	add	r5, sp, #16
 800c78c:	4604      	mov	r4, r0
 800c78e:	2000      	movs	r0, #0
 800c790:	f845 0d04 	str.w	r0, [r5, #-4]!
 800c794:	69a0      	ldr	r0, [r4, #24]
 800c796:	6806      	ldr	r6, [r0, #0]
 800c798:	9501      	str	r5, [sp, #4]
 800c79a:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800c79e:	9500      	str	r5, [sp, #0]
 800c7a0:	6835      	ldr	r5, [r6, #0]
 800c7a2:	4699      	mov	r9, r3
 800c7a4:	460f      	mov	r7, r1
 800c7a6:	4690      	mov	r8, r2
 800c7a8:	47a8      	blx	r5
 800c7aa:	4d10      	ldr	r5, [pc, #64]	@ (800c7ec <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800c7ac:	4606      	mov	r6, r0
 800c7ae:	f8a5 9000 	strh.w	r9, [r5]
 800c7b2:	f7f6 f897 	bl	80028e4 <_ZN8touchgfx3HAL3lcdEv>
 800c7b6:	6803      	ldr	r3, [r0, #0]
 800c7b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c7ba:	4798      	blx	r3
 800c7bc:	b128      	cbz	r0, 800c7ca <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800c7be:	2801      	cmp	r0, #1
 800c7c0:	d00b      	beq.n	800c7da <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800c7c2:	4630      	mov	r0, r6
 800c7c4:	b005      	add	sp, #20
 800c7c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c7ca:	882b      	ldrh	r3, [r5, #0]
 800c7cc:	fb08 7203 	mla	r2, r8, r3, r7
 800c7d0:	9b03      	ldr	r3, [sp, #12]
 800c7d2:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800c7d6:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800c7d8:	e7f3      	b.n	800c7c2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800c7da:	882a      	ldrh	r2, [r5, #0]
 800c7dc:	9b03      	ldr	r3, [sp, #12]
 800c7de:	fb08 7202 	mla	r2, r8, r2, r7
 800c7e2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800c7e6:	1a9a      	subs	r2, r3, r2
 800c7e8:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800c7ea:	e7ea      	b.n	800c7c2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800c7ec:	20015232 	.word	0x20015232

0800c7f0 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
 800c7f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c7f2:	4b15      	ldr	r3, [pc, #84]	@ (800c848 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
 800c7f4:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
 800c7f8:	881b      	ldrh	r3, [r3, #0]
 800c7fa:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
 800c7fc:	fb93 f4f4 	sdiv	r4, r3, r4
 800c800:	460f      	mov	r7, r1
 800c802:	4606      	mov	r6, r0
 800c804:	f7f6 f86e 	bl	80028e4 <_ZN8touchgfx3HAL3lcdEv>
 800c808:	6803      	ldr	r3, [r0, #0]
 800c80a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c80c:	4798      	blx	r3
 800c80e:	2801      	cmp	r0, #1
 800c810:	d00b      	beq.n	800c82a <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
 800c812:	d303      	bcc.n	800c81c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
 800c814:	2802      	cmp	r0, #2
 800c816:	d010      	beq.n	800c83a <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
 800c818:	63f5      	str	r5, [r6, #60]	@ 0x3c
 800c81a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c81c:	4b0b      	ldr	r3, [pc, #44]	@ (800c84c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800c81e:	8819      	ldrh	r1, [r3, #0]
 800c820:	437c      	muls	r4, r7
 800c822:	434c      	muls	r4, r1
 800c824:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 800c828:	e7f6      	b.n	800c818 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800c82a:	4b08      	ldr	r3, [pc, #32]	@ (800c84c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800c82c:	8819      	ldrh	r1, [r3, #0]
 800c82e:	437c      	muls	r4, r7
 800c830:	434c      	muls	r4, r1
 800c832:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 800c836:	1b2d      	subs	r5, r5, r4
 800c838:	e7ee      	b.n	800c818 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800c83a:	4b04      	ldr	r3, [pc, #16]	@ (800c84c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800c83c:	8819      	ldrh	r1, [r3, #0]
 800c83e:	437c      	muls	r4, r7
 800c840:	434c      	muls	r4, r1
 800c842:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
 800c846:	e7e7      	b.n	800c818 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800c848:	20015234 	.word	0x20015234
 800c84c:	20015232 	.word	0x20015232

0800c850 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800c850:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c852:	b08b      	sub	sp, #44	@ 0x2c
 800c854:	4617      	mov	r7, r2
 800c856:	4604      	mov	r4, r0
 800c858:	460e      	mov	r6, r1
 800c85a:	461d      	mov	r5, r3
 800c85c:	f7f6 f842 	bl	80028e4 <_ZN8touchgfx3HAL3lcdEv>
 800c860:	6803      	ldr	r3, [r0, #0]
 800c862:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c864:	4798      	blx	r3
 800c866:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800c86a:	9007      	str	r0, [sp, #28]
 800c86c:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800c870:	4b0d      	ldr	r3, [pc, #52]	@ (800c8a8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800c872:	6822      	ldr	r2, [r4, #0]
 800c874:	881b      	ldrh	r3, [r3, #0]
 800c876:	9306      	str	r3, [sp, #24]
 800c878:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800c87c:	9305      	str	r3, [sp, #20]
 800c87e:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800c882:	9304      	str	r3, [sp, #16]
 800c884:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800c888:	9303      	str	r3, [sp, #12]
 800c88a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800c88e:	9302      	str	r3, [sp, #8]
 800c890:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800c894:	e9cd 5300 	strd	r5, r3, [sp]
 800c898:	4631      	mov	r1, r6
 800c89a:	6c15      	ldr	r5, [r2, #64]	@ 0x40
 800c89c:	463b      	mov	r3, r7
 800c89e:	2200      	movs	r2, #0
 800c8a0:	4620      	mov	r0, r4
 800c8a2:	47a8      	blx	r5
 800c8a4:	b00b      	add	sp, #44	@ 0x2c
 800c8a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c8a8:	20015232 	.word	0x20015232

0800c8ac <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800c8ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c8b0:	4698      	mov	r8, r3
 800c8b2:	6803      	ldr	r3, [r0, #0]
 800c8b4:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
 800c8b6:	4b15      	ldr	r3, [pc, #84]	@ (800c90c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800c8b8:	b08b      	sub	sp, #44	@ 0x2c
 800c8ba:	4617      	mov	r7, r2
 800c8bc:	f8b3 9000 	ldrh.w	r9, [r3]
 800c8c0:	460e      	mov	r6, r1
 800c8c2:	4604      	mov	r4, r0
 800c8c4:	f7f6 f80e 	bl	80028e4 <_ZN8touchgfx3HAL3lcdEv>
 800c8c8:	6803      	ldr	r3, [r0, #0]
 800c8ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c8cc:	4798      	blx	r3
 800c8ce:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800c8d2:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800c8d6:	2302      	movs	r3, #2
 800c8d8:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800c8dc:	2301      	movs	r3, #1
 800c8de:	9305      	str	r3, [sp, #20]
 800c8e0:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800c8e4:	9304      	str	r3, [sp, #16]
 800c8e6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800c8ea:	9303      	str	r3, [sp, #12]
 800c8ec:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800c8f0:	9302      	str	r3, [sp, #8]
 800c8f2:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800c8f6:	2200      	movs	r2, #0
 800c8f8:	e9cd 8300 	strd	r8, r3, [sp]
 800c8fc:	4631      	mov	r1, r6
 800c8fe:	463b      	mov	r3, r7
 800c900:	4620      	mov	r0, r4
 800c902:	47a8      	blx	r5
 800c904:	b00b      	add	sp, #44	@ 0x2c
 800c906:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c90a:	bf00      	nop
 800c90c:	20015232 	.word	0x20015232

0800c910 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800c910:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c914:	4698      	mov	r8, r3
 800c916:	6803      	ldr	r3, [r0, #0]
 800c918:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
 800c91a:	4b11      	ldr	r3, [pc, #68]	@ (800c960 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800c91c:	b087      	sub	sp, #28
 800c91e:	f8b3 9000 	ldrh.w	r9, [r3]
 800c922:	460e      	mov	r6, r1
 800c924:	4617      	mov	r7, r2
 800c926:	4604      	mov	r4, r0
 800c928:	f7f5 ffdc 	bl	80028e4 <_ZN8touchgfx3HAL3lcdEv>
 800c92c:	6803      	ldr	r3, [r0, #0]
 800c92e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c930:	4798      	blx	r3
 800c932:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800c936:	f8cd 900c 	str.w	r9, [sp, #12]
 800c93a:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800c93e:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800c942:	9302      	str	r3, [sp, #8]
 800c944:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800c948:	9301      	str	r3, [sp, #4]
 800c94a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800c94e:	9300      	str	r3, [sp, #0]
 800c950:	463a      	mov	r2, r7
 800c952:	4643      	mov	r3, r8
 800c954:	4631      	mov	r1, r6
 800c956:	4620      	mov	r0, r4
 800c958:	47a8      	blx	r5
 800c95a:	b007      	add	sp, #28
 800c95c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c960:	20015232 	.word	0x20015232

0800c964 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800c964:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c968:	4604      	mov	r4, r0
 800c96a:	b08f      	sub	sp, #60	@ 0x3c
 800c96c:	4610      	mov	r0, r2
 800c96e:	460d      	mov	r5, r1
 800c970:	4691      	mov	r9, r2
 800c972:	461e      	mov	r6, r3
 800c974:	f008 fc4e 	bl	8015214 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800c978:	2800      	cmp	r0, #0
 800c97a:	f000 809d 	beq.w	800cab8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800c97e:	6823      	ldr	r3, [r4, #0]
 800c980:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800cb1c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800c984:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c986:	f8df a198 	ldr.w	sl, [pc, #408]	@ 800cb20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800c98a:	4f61      	ldr	r7, [pc, #388]	@ (800cb10 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800c98c:	4620      	mov	r0, r4
 800c98e:	4798      	blx	r3
 800c990:	6823      	ldr	r3, [r4, #0]
 800c992:	4620      	mov	r0, r4
 800c994:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800c996:	4798      	blx	r3
 800c998:	f8bb 3000 	ldrh.w	r3, [fp]
 800c99c:	9301      	str	r3, [sp, #4]
 800c99e:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800c9a2:	f8ba 3000 	ldrh.w	r3, [sl]
 800c9a6:	9302      	str	r3, [sp, #8]
 800c9a8:	883b      	ldrh	r3, [r7, #0]
 800c9aa:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800c9ae:	9303      	str	r3, [sp, #12]
 800c9b0:	4b58      	ldr	r3, [pc, #352]	@ (800cb14 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800c9b2:	9305      	str	r3, [sp, #20]
 800c9b4:	881a      	ldrh	r2, [r3, #0]
 800c9b6:	9204      	str	r2, [sp, #16]
 800c9b8:	4640      	mov	r0, r8
 800c9ba:	f008 fcbf 	bl	801533c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c9be:	8038      	strh	r0, [r7, #0]
 800c9c0:	4640      	mov	r0, r8
 800c9c2:	f008 fcef 	bl	80153a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c9c6:	9b05      	ldr	r3, [sp, #20]
 800c9c8:	b280      	uxth	r0, r0
 800c9ca:	8018      	strh	r0, [r3, #0]
 800c9cc:	4b52      	ldr	r3, [pc, #328]	@ (800cb18 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800c9ce:	781b      	ldrb	r3, [r3, #0]
 800c9d0:	2b00      	cmp	r3, #0
 800c9d2:	d174      	bne.n	800cabe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800c9d4:	883b      	ldrh	r3, [r7, #0]
 800c9d6:	f8ab 3000 	strh.w	r3, [fp]
 800c9da:	f8aa 0000 	strh.w	r0, [sl]
 800c9de:	4648      	mov	r0, r9
 800c9e0:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800c9e4:	f008 fc16 	bl	8015214 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800c9e8:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800c9ec:	2200      	movs	r2, #0
 800c9ee:	4611      	mov	r1, r2
 800c9f0:	4628      	mov	r0, r5
 800c9f2:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800c9f6:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800c9fa:	f7f6 fcd4 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
 800c9fe:	2301      	movs	r3, #1
 800ca00:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800ca04:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800ca08:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ca0c:	2b00      	cmp	r3, #0
 800ca0e:	dd5c      	ble.n	800caca <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800ca10:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ca14:	2b00      	cmp	r3, #0
 800ca16:	dd58      	ble.n	800caca <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800ca18:	462a      	mov	r2, r5
 800ca1a:	ab0a      	add	r3, sp, #40	@ 0x28
 800ca1c:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ca20:	6851      	ldr	r1, [r2, #4]
 800ca22:	c303      	stmia	r3!, {r0, r1}
 800ca24:	4631      	mov	r1, r6
 800ca26:	a80a      	add	r0, sp, #40	@ 0x28
 800ca28:	f7ff fbc8 	bl	800c1bc <_ZN8touchgfx4RectaNERKS0_>
 800ca2c:	4b38      	ldr	r3, [pc, #224]	@ (800cb10 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ca2e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ca32:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800ca36:	2100      	movs	r1, #0
 800ca38:	aa0a      	add	r2, sp, #40	@ 0x28
 800ca3a:	4b36      	ldr	r3, [pc, #216]	@ (800cb14 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ca3c:	910c      	str	r1, [sp, #48]	@ 0x30
 800ca3e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ca42:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ca46:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800ca4a:	ab08      	add	r3, sp, #32
 800ca4c:	e883 0003 	stmia.w	r3, {r0, r1}
 800ca50:	4618      	mov	r0, r3
 800ca52:	a90c      	add	r1, sp, #48	@ 0x30
 800ca54:	f7ff fbb2 	bl	800c1bc <_ZN8touchgfx4RectaNERKS0_>
 800ca58:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800ca5a:	2b00      	cmp	r3, #0
 800ca5c:	d13c      	bne.n	800cad8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800ca5e:	2000      	movs	r0, #0
 800ca60:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800ca64:	2600      	movs	r6, #0
 800ca66:	682a      	ldr	r2, [r5, #0]
 800ca68:	696b      	ldr	r3, [r5, #20]
 800ca6a:	616e      	str	r6, [r5, #20]
 800ca6c:	9305      	str	r3, [sp, #20]
 800ca6e:	6892      	ldr	r2, [r2, #8]
 800ca70:	a908      	add	r1, sp, #32
 800ca72:	4628      	mov	r0, r5
 800ca74:	4790      	blx	r2
 800ca76:	9b05      	ldr	r3, [sp, #20]
 800ca78:	616b      	str	r3, [r5, #20]
 800ca7a:	4652      	mov	r2, sl
 800ca7c:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800ca80:	4649      	mov	r1, r9
 800ca82:	4628      	mov	r0, r5
 800ca84:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800ca88:	f7f6 fc8d 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
 800ca8c:	4b23      	ldr	r3, [pc, #140]	@ (800cb1c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800ca8e:	9a01      	ldr	r2, [sp, #4]
 800ca90:	801a      	strh	r2, [r3, #0]
 800ca92:	4b23      	ldr	r3, [pc, #140]	@ (800cb20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800ca94:	9a02      	ldr	r2, [sp, #8]
 800ca96:	801a      	strh	r2, [r3, #0]
 800ca98:	4b1d      	ldr	r3, [pc, #116]	@ (800cb10 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ca9a:	9a03      	ldr	r2, [sp, #12]
 800ca9c:	801a      	strh	r2, [r3, #0]
 800ca9e:	4b1d      	ldr	r3, [pc, #116]	@ (800cb14 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800caa0:	9a04      	ldr	r2, [sp, #16]
 800caa2:	801a      	strh	r2, [r3, #0]
 800caa4:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800caa8:	6823      	ldr	r3, [r4, #0]
 800caaa:	4620      	mov	r0, r4
 800caac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800caae:	4798      	blx	r3
 800cab0:	6823      	ldr	r3, [r4, #0]
 800cab2:	4620      	mov	r0, r4
 800cab4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800cab6:	4798      	blx	r3
 800cab8:	b00f      	add	sp, #60	@ 0x3c
 800caba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cabe:	883b      	ldrh	r3, [r7, #0]
 800cac0:	f8ab 0000 	strh.w	r0, [fp]
 800cac4:	f8aa 3000 	strh.w	r3, [sl]
 800cac8:	e789      	b.n	800c9de <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800caca:	462a      	mov	r2, r5
 800cacc:	ab0a      	add	r3, sp, #40	@ 0x28
 800cace:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800cad2:	6851      	ldr	r1, [r2, #4]
 800cad4:	c303      	stmia	r3!, {r0, r1}
 800cad6:	e7a9      	b.n	800ca2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800cad8:	a807      	add	r0, sp, #28
 800cada:	f008 fda5 	bl	8015628 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800cade:	4606      	mov	r6, r0
 800cae0:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800cae2:	6803      	ldr	r3, [r0, #0]
 800cae4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cae6:	4798      	blx	r3
 800cae8:	4286      	cmp	r6, r0
 800caea:	d1b8      	bne.n	800ca5e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800caec:	f7f5 fefa 	bl	80028e4 <_ZN8touchgfx3HAL3lcdEv>
 800caf0:	6803      	ldr	r3, [r0, #0]
 800caf2:	4606      	mov	r6, r0
 800caf4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800caf6:	9305      	str	r3, [sp, #20]
 800caf8:	a807      	add	r0, sp, #28
 800cafa:	f008 fd95 	bl	8015628 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800cafe:	9b05      	ldr	r3, [sp, #20]
 800cb00:	4601      	mov	r1, r0
 800cb02:	4630      	mov	r0, r6
 800cb04:	4798      	blx	r3
 800cb06:	f080 0001 	eor.w	r0, r0, #1
 800cb0a:	b2c0      	uxtb	r0, r0
 800cb0c:	e7a8      	b.n	800ca60 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800cb0e:	bf00      	nop
 800cb10:	2001522c 	.word	0x2001522c
 800cb14:	2001522e 	.word	0x2001522e
 800cb18:	20015230 	.word	0x20015230
 800cb1c:	20015232 	.word	0x20015232
 800cb20:	20015234 	.word	0x20015234

0800cb24 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800cb24:	b510      	push	{r4, lr}
 800cb26:	4b07      	ldr	r3, [pc, #28]	@ (800cb44 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800cb28:	781b      	ldrb	r3, [r3, #0]
 800cb2a:	4604      	mov	r4, r0
 800cb2c:	b13b      	cbz	r3, 800cb3e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800cb2e:	6803      	ldr	r3, [r0, #0]
 800cb30:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800cb32:	4798      	blx	r3
 800cb34:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800cb36:	4283      	cmp	r3, r0
 800cb38:	d101      	bne.n	800cb3e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800cb3a:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800cb3c:	bd10      	pop	{r4, pc}
 800cb3e:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800cb40:	e7fc      	b.n	800cb3c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800cb42:	bf00      	nop
 800cb44:	20015236 	.word	0x20015236

0800cb48 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800cb48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cb4c:	b08a      	sub	sp, #40	@ 0x28
 800cb4e:	461d      	mov	r5, r3
 800cb50:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800cb54:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800cb58:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800cb5c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cb60:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800cb64:	f8ad 301a 	strh.w	r3, [sp, #26]
 800cb68:	2400      	movs	r4, #0
 800cb6a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800cb6e:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800cb72:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cb76:	4690      	mov	r8, r2
 800cb78:	4607      	mov	r7, r0
 800cb7a:	9404      	str	r4, [sp, #16]
 800cb7c:	f88d 4020 	strb.w	r4, [sp, #32]
 800cb80:	f7ff ffd0 	bl	800cb24 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cb84:	fb06 8505 	mla	r5, r6, r5, r8
 800cb88:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800cb8c:	6878      	ldr	r0, [r7, #4]
 800cb8e:	9505      	str	r5, [sp, #20]
 800cb90:	f8ad 601e 	strh.w	r6, [sp, #30]
 800cb94:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800cb98:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800cb9c:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800cba0:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800cba4:	6803      	ldr	r3, [r0, #0]
 800cba6:	a901      	add	r1, sp, #4
 800cba8:	685b      	ldr	r3, [r3, #4]
 800cbaa:	4798      	blx	r3
 800cbac:	b00a      	add	sp, #40	@ 0x28
 800cbae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800cbb2 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800cbb2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cbb6:	b08b      	sub	sp, #44	@ 0x2c
 800cbb8:	2400      	movs	r4, #0
 800cbba:	461d      	mov	r5, r3
 800cbbc:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800cbc0:	4688      	mov	r8, r1
 800cbc2:	4691      	mov	r9, r2
 800cbc4:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800cbc8:	9404      	str	r4, [sp, #16]
 800cbca:	4607      	mov	r7, r0
 800cbcc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800cbd0:	f7ff ffa8 	bl	800cb24 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cbd4:	fb06 9505 	mla	r5, r6, r5, r9
 800cbd8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800cbdc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cbe0:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800cbe4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800cbe8:	6878      	ldr	r0, [r7, #4]
 800cbea:	9505      	str	r5, [sp, #20]
 800cbec:	f8ad 301a 	strh.w	r3, [sp, #26]
 800cbf0:	f8ad 401c 	strh.w	r4, [sp, #28]
 800cbf4:	f8ad 601e 	strh.w	r6, [sp, #30]
 800cbf8:	f8cd 8010 	str.w	r8, [sp, #16]
 800cbfc:	f8ad 4020 	strh.w	r4, [sp, #32]
 800cc00:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800cc04:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800cc08:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800cc0c:	6803      	ldr	r3, [r0, #0]
 800cc0e:	a901      	add	r1, sp, #4
 800cc10:	685b      	ldr	r3, [r3, #4]
 800cc12:	4798      	blx	r3
 800cc14:	b00b      	add	sp, #44	@ 0x2c
 800cc16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800cc1c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800cc1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc20:	b08a      	sub	sp, #40	@ 0x28
 800cc22:	4698      	mov	r8, r3
 800cc24:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800cc28:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800cc2c:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800cc30:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800cc34:	2300      	movs	r3, #0
 800cc36:	2d0b      	cmp	r5, #11
 800cc38:	4606      	mov	r6, r0
 800cc3a:	9304      	str	r3, [sp, #16]
 800cc3c:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800cc40:	d138      	bne.n	800ccb4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800cc42:	2380      	movs	r3, #128	@ 0x80
 800cc44:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800cc48:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800cc4c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cc50:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800cc54:	f8ad 301a 	strh.w	r3, [sp, #26]
 800cc58:	f88d 0020 	strb.w	r0, [sp, #32]
 800cc5c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800cc60:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cc64:	4630      	mov	r0, r6
 800cc66:	9203      	str	r2, [sp, #12]
 800cc68:	f7ff ff5c 	bl	800cb24 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cc6c:	2c0b      	cmp	r4, #11
 800cc6e:	bf98      	it	ls
 800cc70:	4b1b      	ldrls	r3, [pc, #108]	@ (800cce0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800cc72:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800cc76:	bf98      	it	ls
 800cc78:	5d19      	ldrbls	r1, [r3, r4]
 800cc7a:	f8ad 701e 	strh.w	r7, [sp, #30]
 800cc7e:	bf88      	it	hi
 800cc80:	2100      	movhi	r1, #0
 800cc82:	fb02 8307 	mla	r3, r2, r7, r8
 800cc86:	10c9      	asrs	r1, r1, #3
 800cc88:	fb01 0003 	mla	r0, r1, r3, r0
 800cc8c:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800cc90:	9005      	str	r0, [sp, #20]
 800cc92:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800cc96:	6870      	ldr	r0, [r6, #4]
 800cc98:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800cc9c:	2300      	movs	r3, #0
 800cc9e:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800cca2:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800cca6:	6803      	ldr	r3, [r0, #0]
 800cca8:	a901      	add	r1, sp, #4
 800ccaa:	685b      	ldr	r3, [r3, #4]
 800ccac:	4798      	blx	r3
 800ccae:	b00a      	add	sp, #40	@ 0x28
 800ccb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ccb4:	2d02      	cmp	r5, #2
 800ccb6:	d109      	bne.n	800cccc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800ccb8:	28ff      	cmp	r0, #255	@ 0xff
 800ccba:	d105      	bne.n	800ccc8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800ccbc:	f1bc 0f00 	cmp.w	ip, #0
 800ccc0:	bf14      	ite	ne
 800ccc2:	2340      	movne	r3, #64	@ 0x40
 800ccc4:	2320      	moveq	r3, #32
 800ccc6:	e7bd      	b.n	800cc44 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800ccc8:	2340      	movs	r3, #64	@ 0x40
 800ccca:	e7bb      	b.n	800cc44 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800cccc:	28ff      	cmp	r0, #255	@ 0xff
 800ccce:	d105      	bne.n	800ccdc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800ccd0:	f1bc 0f00 	cmp.w	ip, #0
 800ccd4:	bf14      	ite	ne
 800ccd6:	2304      	movne	r3, #4
 800ccd8:	2301      	moveq	r3, #1
 800ccda:	e7b3      	b.n	800cc44 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800ccdc:	2304      	movs	r3, #4
 800ccde:	e7b1      	b.n	800cc44 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800cce0:	080281e8 	.word	0x080281e8

0800cce4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800cce4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cce8:	b08b      	sub	sp, #44	@ 0x2c
 800ccea:	461d      	mov	r5, r3
 800ccec:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800ccf0:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800ccf4:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800ccf8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800ccfc:	bf14      	ite	ne
 800ccfe:	2308      	movne	r3, #8
 800cd00:	2302      	moveq	r3, #2
 800cd02:	2400      	movs	r4, #0
 800cd04:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800cd08:	4688      	mov	r8, r1
 800cd0a:	4693      	mov	fp, r2
 800cd0c:	9404      	str	r4, [sp, #16]
 800cd0e:	4607      	mov	r7, r0
 800cd10:	f7ff ff08 	bl	800cb24 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cd14:	2e0b      	cmp	r6, #11
 800cd16:	bf98      	it	ls
 800cd18:	4b15      	ldrls	r3, [pc, #84]	@ (800cd70 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800cd1a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800cd1e:	bf98      	it	ls
 800cd20:	5d9c      	ldrbls	r4, [r3, r6]
 800cd22:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800cd26:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cd2a:	fb05 b50a 	mla	r5, r5, sl, fp
 800cd2e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800cd32:	f8ad 301a 	strh.w	r3, [sp, #26]
 800cd36:	10e4      	asrs	r4, r4, #3
 800cd38:	fb04 0405 	mla	r4, r4, r5, r0
 800cd3c:	2300      	movs	r3, #0
 800cd3e:	6878      	ldr	r0, [r7, #4]
 800cd40:	9405      	str	r4, [sp, #20]
 800cd42:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cd46:	f8ad a01e 	strh.w	sl, [sp, #30]
 800cd4a:	f8cd 8010 	str.w	r8, [sp, #16]
 800cd4e:	f88d 9020 	strb.w	r9, [sp, #32]
 800cd52:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800cd56:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800cd5a:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800cd5e:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800cd62:	6803      	ldr	r3, [r0, #0]
 800cd64:	a901      	add	r1, sp, #4
 800cd66:	685b      	ldr	r3, [r3, #4]
 800cd68:	4798      	blx	r3
 800cd6a:	b00b      	add	sp, #44	@ 0x2c
 800cd6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cd70:	080281e8 	.word	0x080281e8

0800cd74 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800cd74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cd78:	461e      	mov	r6, r3
 800cd7a:	4b0a      	ldr	r3, [pc, #40]	@ (800cda4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800cd7c:	460f      	mov	r7, r1
 800cd7e:	881d      	ldrh	r5, [r3, #0]
 800cd80:	4690      	mov	r8, r2
 800cd82:	f7f5 fdaf 	bl	80028e4 <_ZN8touchgfx3HAL3lcdEv>
 800cd86:	6803      	ldr	r3, [r0, #0]
 800cd88:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cd8a:	4798      	blx	r3
 800cd8c:	280b      	cmp	r0, #11
 800cd8e:	bf9a      	itte	ls
 800cd90:	4b05      	ldrls	r3, [pc, #20]	@ (800cda8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800cd92:	5c1c      	ldrbls	r4, [r3, r0]
 800cd94:	2400      	movhi	r4, #0
 800cd96:	fb08 7005 	mla	r0, r8, r5, r7
 800cd9a:	10e4      	asrs	r4, r4, #3
 800cd9c:	fb04 6000 	mla	r0, r4, r0, r6
 800cda0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cda4:	20015232 	.word	0x20015232
 800cda8:	080281e8 	.word	0x080281e8

0800cdac <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800cdac:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cdae:	b08b      	sub	sp, #44	@ 0x2c
 800cdb0:	461f      	mov	r7, r3
 800cdb2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800cdb6:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800cdba:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800cdbe:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cdc2:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800cdc6:	f8ad 301a 	strh.w	r3, [sp, #26]
 800cdca:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800cdce:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cdd2:	2500      	movs	r5, #0
 800cdd4:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800cdd8:	f88d 3020 	strb.w	r3, [sp, #32]
 800cddc:	4604      	mov	r4, r0
 800cdde:	4616      	mov	r6, r2
 800cde0:	9504      	str	r5, [sp, #16]
 800cde2:	f7ff fe9f 	bl	800cb24 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cde6:	463a      	mov	r2, r7
 800cde8:	4631      	mov	r1, r6
 800cdea:	4603      	mov	r3, r0
 800cdec:	4620      	mov	r0, r4
 800cdee:	f7ff ffc1 	bl	800cd74 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800cdf2:	4b0e      	ldr	r3, [pc, #56]	@ (800ce2c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800cdf4:	9005      	str	r0, [sp, #20]
 800cdf6:	881b      	ldrh	r3, [r3, #0]
 800cdf8:	f8ad 301e 	strh.w	r3, [sp, #30]
 800cdfc:	f7f5 fd72 	bl	80028e4 <_ZN8touchgfx3HAL3lcdEv>
 800ce00:	6803      	ldr	r3, [r0, #0]
 800ce02:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ce04:	4798      	blx	r3
 800ce06:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800ce08:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800ce0c:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800ce10:	9304      	str	r3, [sp, #16]
 800ce12:	6860      	ldr	r0, [r4, #4]
 800ce14:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800ce18:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800ce1c:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800ce20:	6803      	ldr	r3, [r0, #0]
 800ce22:	a901      	add	r1, sp, #4
 800ce24:	685b      	ldr	r3, [r3, #4]
 800ce26:	4798      	blx	r3
 800ce28:	b00b      	add	sp, #44	@ 0x2c
 800ce2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ce2c:	20015232 	.word	0x20015232

0800ce30 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800ce30:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ce32:	b08d      	sub	sp, #52	@ 0x34
 800ce34:	466b      	mov	r3, sp
 800ce36:	e883 0006 	stmia.w	r3, {r1, r2}
 800ce3a:	2300      	movs	r3, #0
 800ce3c:	9306      	str	r3, [sp, #24]
 800ce3e:	6803      	ldr	r3, [r0, #0]
 800ce40:	f8bd 6000 	ldrh.w	r6, [sp]
 800ce44:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800ce46:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800ce4a:	2501      	movs	r5, #1
 800ce4c:	9503      	str	r5, [sp, #12]
 800ce4e:	4604      	mov	r4, r0
 800ce50:	4798      	blx	r3
 800ce52:	463a      	mov	r2, r7
 800ce54:	4631      	mov	r1, r6
 800ce56:	4603      	mov	r3, r0
 800ce58:	4620      	mov	r0, r4
 800ce5a:	f7ff ff8b 	bl	800cd74 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ce5e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800ce60:	9307      	str	r3, [sp, #28]
 800ce62:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ce66:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ce6a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800ce6e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800ce72:	4b0f      	ldr	r3, [pc, #60]	@ (800ceb0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800ce74:	9004      	str	r0, [sp, #16]
 800ce76:	881b      	ldrh	r3, [r3, #0]
 800ce78:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800ce7c:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800ce80:	f7f5 fd30 	bl	80028e4 <_ZN8touchgfx3HAL3lcdEv>
 800ce84:	6803      	ldr	r3, [r0, #0]
 800ce86:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ce88:	4798      	blx	r3
 800ce8a:	23ff      	movs	r3, #255	@ 0xff
 800ce8c:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800ce90:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800ce94:	6860      	ldr	r0, [r4, #4]
 800ce96:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800ce9a:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800ce9e:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800cea2:	6803      	ldr	r3, [r0, #0]
 800cea4:	a903      	add	r1, sp, #12
 800cea6:	685b      	ldr	r3, [r3, #4]
 800cea8:	4798      	blx	r3
 800ceaa:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800ceac:	b00d      	add	sp, #52	@ 0x34
 800ceae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ceb0:	20015232 	.word	0x20015232

0800ceb4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800ceb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ceb8:	b08c      	sub	sp, #48	@ 0x30
 800ceba:	461e      	mov	r6, r3
 800cebc:	466d      	mov	r5, sp
 800cebe:	2300      	movs	r3, #0
 800cec0:	e885 0006 	stmia.w	r5, {r1, r2}
 800cec4:	9306      	str	r3, [sp, #24]
 800cec6:	6803      	ldr	r3, [r0, #0]
 800cec8:	f8bd 7000 	ldrh.w	r7, [sp]
 800cecc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800cece:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800ced2:	2501      	movs	r5, #1
 800ced4:	9503      	str	r5, [sp, #12]
 800ced6:	4604      	mov	r4, r0
 800ced8:	4798      	blx	r3
 800ceda:	4642      	mov	r2, r8
 800cedc:	4639      	mov	r1, r7
 800cede:	4603      	mov	r3, r0
 800cee0:	4620      	mov	r0, r4
 800cee2:	f7ff ff47 	bl	800cd74 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800cee6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ceea:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ceee:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800cef2:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800cef6:	4b11      	ldr	r3, [pc, #68]	@ (800cf3c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800cef8:	9004      	str	r0, [sp, #16]
 800cefa:	881b      	ldrh	r3, [r3, #0]
 800cefc:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800cf00:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800cf02:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800cf06:	9607      	str	r6, [sp, #28]
 800cf08:	f7f5 fcec 	bl	80028e4 <_ZN8touchgfx3HAL3lcdEv>
 800cf0c:	6803      	ldr	r3, [r0, #0]
 800cf0e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cf10:	4798      	blx	r3
 800cf12:	23ff      	movs	r3, #255	@ 0xff
 800cf14:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800cf18:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800cf1c:	6860      	ldr	r0, [r4, #4]
 800cf1e:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800cf22:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800cf26:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800cf2a:	6803      	ldr	r3, [r0, #0]
 800cf2c:	a903      	add	r1, sp, #12
 800cf2e:	685b      	ldr	r3, [r3, #4]
 800cf30:	4798      	blx	r3
 800cf32:	4630      	mov	r0, r6
 800cf34:	b00c      	add	sp, #48	@ 0x30
 800cf36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cf3a:	bf00      	nop
 800cf3c:	20015232 	.word	0x20015232

0800cf40 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800cf40:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cf42:	b085      	sub	sp, #20
 800cf44:	ac02      	add	r4, sp, #8
 800cf46:	e884 0006 	stmia.w	r4, {r1, r2}
 800cf4a:	4605      	mov	r5, r0
 800cf4c:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800cf50:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800cf54:	f7ff fde6 	bl	800cb24 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cf58:	463a      	mov	r2, r7
 800cf5a:	4603      	mov	r3, r0
 800cf5c:	4631      	mov	r1, r6
 800cf5e:	4628      	mov	r0, r5
 800cf60:	f7ff ff08 	bl	800cd74 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800cf64:	4a05      	ldr	r2, [pc, #20]	@ (800cf7c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800cf66:	682b      	ldr	r3, [r5, #0]
 800cf68:	8812      	ldrh	r2, [r2, #0]
 800cf6a:	9200      	str	r2, [sp, #0]
 800cf6c:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 800cf6e:	e894 0006 	ldmia.w	r4, {r1, r2}
 800cf72:	4603      	mov	r3, r0
 800cf74:	4628      	mov	r0, r5
 800cf76:	47b0      	blx	r6
 800cf78:	b005      	add	sp, #20
 800cf7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cf7c:	20015232 	.word	0x20015232

0800cf80 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800cf80:	b570      	push	{r4, r5, r6, lr}
 800cf82:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800cf86:	4604      	mov	r4, r0
 800cf88:	b19b      	cbz	r3, 800cfb2 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800cf8a:	2002      	movs	r0, #2
 800cf8c:	f7f4 fd18 	bl	80019c0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800cf90:	2300      	movs	r3, #0
 800cf92:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800cf96:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800cf9a:	6823      	ldr	r3, [r4, #0]
 800cf9c:	4620      	mov	r0, r4
 800cf9e:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
 800cfa2:	f7ff fdbf 	bl	800cb24 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cfa6:	462b      	mov	r3, r5
 800cfa8:	4601      	mov	r1, r0
 800cfaa:	4620      	mov	r0, r4
 800cfac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cfb0:	4718      	bx	r3
 800cfb2:	bd70      	pop	{r4, r5, r6, pc}

0800cfb4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800cfb4:	b538      	push	{r3, r4, r5, lr}
 800cfb6:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800cfba:	428b      	cmp	r3, r1
 800cfbc:	4604      	mov	r4, r0
 800cfbe:	460d      	mov	r5, r1
 800cfc0:	d006      	beq.n	800cfd0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800cfc2:	6803      	ldr	r3, [r0, #0]
 800cfc4:	b929      	cbnz	r1, 800cfd2 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800cfc6:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 800cfca:	4798      	blx	r3
 800cfcc:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800cfd0:	bd38      	pop	{r3, r4, r5, pc}
 800cfd2:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 800cfd6:	e7f8      	b.n	800cfca <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800cfd8 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800cfd8:	b510      	push	{r4, lr}
 800cfda:	4b0c      	ldr	r3, [pc, #48]	@ (800d00c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
 800cfdc:	781b      	ldrb	r3, [r3, #0]
 800cfde:	4604      	mov	r4, r0
 800cfe0:	b953      	cbnz	r3, 800cff8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800cfe2:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800cfe6:	b93b      	cbnz	r3, 800cff8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800cfe8:	6840      	ldr	r0, [r0, #4]
 800cfea:	f000 f92b 	bl	800d244 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800cfee:	b118      	cbz	r0, 800cff8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800cff0:	6862      	ldr	r2, [r4, #4]
 800cff2:	7a53      	ldrb	r3, [r2, #9]
 800cff4:	2b00      	cmp	r3, #0
 800cff6:	d0fc      	beq.n	800cff2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
 800cff8:	f7f4 fe2e 	bl	8001c58 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800cffc:	4620      	mov	r0, r4
 800cffe:	2100      	movs	r1, #0
 800d000:	f7ff ffd8 	bl	800cfb4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800d004:	4620      	mov	r0, r4
 800d006:	f7ff fd8d 	bl	800cb24 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d00a:	bd10      	pop	{r4, pc}
 800d00c:	20015236 	.word	0x20015236

0800d010 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800d010:	b570      	push	{r4, r5, r6, lr}
 800d012:	4604      	mov	r4, r0
 800d014:	6803      	ldr	r3, [r0, #0]
 800d016:	b919      	cbnz	r1, 800d020 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800d018:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d01a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d01e:	4718      	bx	r3
 800d020:	2200      	movs	r2, #0
 800d022:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 800d026:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 800d02a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d02c:	4798      	blx	r3
 800d02e:	6863      	ldr	r3, [r4, #4]
 800d030:	2101      	movs	r1, #1
 800d032:	4605      	mov	r5, r0
 800d034:	7299      	strb	r1, [r3, #10]
 800d036:	4620      	mov	r0, r4
 800d038:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 800d03c:	f7ff ffba 	bl	800cfb4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800d040:	4628      	mov	r0, r5
 800d042:	bd70      	pop	{r4, r5, r6, pc}

0800d044 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800d044:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800d048:	1a13      	subs	r3, r2, r0
 800d04a:	4258      	negs	r0, r3
 800d04c:	4158      	adcs	r0, r3
 800d04e:	4770      	bx	lr

0800d050 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800d050:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800d054:	1a9b      	subs	r3, r3, r2
 800d056:	2b00      	cmp	r3, #0
 800d058:	bfdc      	itt	le
 800d05a:	6882      	ldrle	r2, [r0, #8]
 800d05c:	189b      	addle	r3, r3, r2
 800d05e:	2b01      	cmp	r3, #1
 800d060:	bfcc      	ite	gt
 800d062:	2000      	movgt	r0, #0
 800d064:	2001      	movle	r0, #1
 800d066:	4770      	bx	lr

0800d068 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800d068:	6902      	ldr	r2, [r0, #16]
 800d06a:	6843      	ldr	r3, [r0, #4]
 800d06c:	2024      	movs	r0, #36	@ 0x24
 800d06e:	fb00 3002 	mla	r0, r0, r2, r3
 800d072:	4770      	bx	lr

0800d074 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800d074:	6803      	ldr	r3, [r0, #0]
 800d076:	691b      	ldr	r3, [r3, #16]
 800d078:	4718      	bx	r3

0800d07a <_ZN8touchgfx13DMA_Interface7executeEv>:
 800d07a:	b570      	push	{r4, r5, r6, lr}
 800d07c:	2301      	movs	r3, #1
 800d07e:	7203      	strb	r3, [r0, #8]
 800d080:	4604      	mov	r4, r0
 800d082:	6840      	ldr	r0, [r0, #4]
 800d084:	6803      	ldr	r3, [r0, #0]
 800d086:	699b      	ldr	r3, [r3, #24]
 800d088:	4798      	blx	r3
 800d08a:	6803      	ldr	r3, [r0, #0]
 800d08c:	2b40      	cmp	r3, #64	@ 0x40
 800d08e:	4605      	mov	r5, r0
 800d090:	d00c      	beq.n	800d0ac <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d092:	d810      	bhi.n	800d0b6 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800d094:	2b04      	cmp	r3, #4
 800d096:	d01d      	beq.n	800d0d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800d098:	d804      	bhi.n	800d0a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800d09a:	2b01      	cmp	r3, #1
 800d09c:	d006      	beq.n	800d0ac <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d09e:	2b02      	cmp	r3, #2
 800d0a0:	d02c      	beq.n	800d0fc <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800d0a2:	bd70      	pop	{r4, r5, r6, pc}
 800d0a4:	2b08      	cmp	r3, #8
 800d0a6:	d01d      	beq.n	800d0e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800d0a8:	2b20      	cmp	r3, #32
 800d0aa:	d1fa      	bne.n	800d0a2 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800d0ac:	6823      	ldr	r3, [r4, #0]
 800d0ae:	4620      	mov	r0, r4
 800d0b0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800d0b2:	4798      	blx	r3
 800d0b4:	e013      	b.n	800d0de <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800d0b6:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800d0ba:	d0f7      	beq.n	800d0ac <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d0bc:	d804      	bhi.n	800d0c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800d0be:	2b80      	cmp	r3, #128	@ 0x80
 800d0c0:	d0f4      	beq.n	800d0ac <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d0c2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800d0c6:	e7f0      	b.n	800d0aa <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800d0c8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800d0cc:	d0ee      	beq.n	800d0ac <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d0ce:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800d0d2:	e7e5      	b.n	800d0a0 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800d0d4:	6823      	ldr	r3, [r4, #0]
 800d0d6:	7f01      	ldrb	r1, [r0, #28]
 800d0d8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d0da:	4620      	mov	r0, r4
 800d0dc:	4798      	blx	r3
 800d0de:	6823      	ldr	r3, [r4, #0]
 800d0e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800d0e2:	e006      	b.n	800d0f2 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800d0e4:	6823      	ldr	r3, [r4, #0]
 800d0e6:	7f01      	ldrb	r1, [r0, #28]
 800d0e8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d0ea:	4620      	mov	r0, r4
 800d0ec:	4798      	blx	r3
 800d0ee:	6823      	ldr	r3, [r4, #0]
 800d0f0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d0f2:	4629      	mov	r1, r5
 800d0f4:	4620      	mov	r0, r4
 800d0f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d0fa:	4718      	bx	r3
 800d0fc:	6823      	ldr	r3, [r4, #0]
 800d0fe:	4620      	mov	r0, r4
 800d100:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800d102:	4798      	blx	r3
 800d104:	e7f3      	b.n	800d0ee <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800d106 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800d106:	4770      	bx	lr

0800d108 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800d108:	4770      	bx	lr

0800d10a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800d10a:	4770      	bx	lr

0800d10c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800d10c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800d110:	1ad2      	subs	r2, r2, r3
 800d112:	2a00      	cmp	r2, #0
 800d114:	b510      	push	{r4, lr}
 800d116:	bfdc      	itt	le
 800d118:	6884      	ldrle	r4, [r0, #8]
 800d11a:	1912      	addle	r2, r2, r4
 800d11c:	2a01      	cmp	r2, #1
 800d11e:	dd16      	ble.n	800d14e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800d120:	6842      	ldr	r2, [r0, #4]
 800d122:	2424      	movs	r4, #36	@ 0x24
 800d124:	fb04 2303 	mla	r3, r4, r3, r2
 800d128:	f101 0220 	add.w	r2, r1, #32
 800d12c:	f851 4b04 	ldr.w	r4, [r1], #4
 800d130:	f843 4b04 	str.w	r4, [r3], #4
 800d134:	4291      	cmp	r1, r2
 800d136:	d1f9      	bne.n	800d12c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800d138:	780a      	ldrb	r2, [r1, #0]
 800d13a:	701a      	strb	r2, [r3, #0]
 800d13c:	68c3      	ldr	r3, [r0, #12]
 800d13e:	6882      	ldr	r2, [r0, #8]
 800d140:	f3bf 8f5b 	dmb	ish
 800d144:	3301      	adds	r3, #1
 800d146:	429a      	cmp	r2, r3
 800d148:	bfd8      	it	le
 800d14a:	1a9b      	suble	r3, r3, r2
 800d14c:	60c3      	str	r3, [r0, #12]
 800d14e:	bd10      	pop	{r4, pc}

0800d150 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800d150:	6903      	ldr	r3, [r0, #16]
 800d152:	6882      	ldr	r2, [r0, #8]
 800d154:	f3bf 8f5b 	dmb	ish
 800d158:	3301      	adds	r3, #1
 800d15a:	429a      	cmp	r2, r3
 800d15c:	bfd8      	it	le
 800d15e:	1a9b      	suble	r3, r3, r2
 800d160:	6103      	str	r3, [r0, #16]
 800d162:	4770      	bx	lr

0800d164 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800d164:	b570      	push	{r4, r5, r6, lr}
 800d166:	4604      	mov	r4, r0
 800d168:	460e      	mov	r6, r1
 800d16a:	6860      	ldr	r0, [r4, #4]
 800d16c:	6803      	ldr	r3, [r0, #0]
 800d16e:	685b      	ldr	r3, [r3, #4]
 800d170:	4798      	blx	r3
 800d172:	2800      	cmp	r0, #0
 800d174:	d1f9      	bne.n	800d16a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800d176:	4d0d      	ldr	r5, [pc, #52]	@ (800d1ac <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800d178:	6828      	ldr	r0, [r5, #0]
 800d17a:	6803      	ldr	r3, [r0, #0]
 800d17c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800d180:	4798      	blx	r3
 800d182:	f7f4 fd77 	bl	8001c74 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800d186:	6828      	ldr	r0, [r5, #0]
 800d188:	2101      	movs	r1, #1
 800d18a:	f7ff ff13 	bl	800cfb4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800d18e:	6860      	ldr	r0, [r4, #4]
 800d190:	6803      	ldr	r3, [r0, #0]
 800d192:	4631      	mov	r1, r6
 800d194:	689b      	ldr	r3, [r3, #8]
 800d196:	4798      	blx	r3
 800d198:	6823      	ldr	r3, [r4, #0]
 800d19a:	4620      	mov	r0, r4
 800d19c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d19e:	4798      	blx	r3
 800d1a0:	6828      	ldr	r0, [r5, #0]
 800d1a2:	6803      	ldr	r3, [r0, #0]
 800d1a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d1a8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800d1aa:	4718      	bx	r3
 800d1ac:	20015238 	.word	0x20015238

0800d1b0 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800d1b0:	b508      	push	{r3, lr}
 800d1b2:	f7f4 fd51 	bl	8001c58 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800d1b6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d1ba:	f7f4 bd55 	b.w	8001c68 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800d1be <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800d1be:	b510      	push	{r4, lr}
 800d1c0:	2114      	movs	r1, #20
 800d1c2:	4604      	mov	r4, r0
 800d1c4:	f017 f939 	bl	802443a <_ZdlPvj>
 800d1c8:	4620      	mov	r0, r4
 800d1ca:	bd10      	pop	{r4, pc}

0800d1cc <_ZN8touchgfx13DMA_Interface5startEv>:
 800d1cc:	b510      	push	{r4, lr}
 800d1ce:	4604      	mov	r4, r0
 800d1d0:	6840      	ldr	r0, [r0, #4]
 800d1d2:	6803      	ldr	r3, [r0, #0]
 800d1d4:	681b      	ldr	r3, [r3, #0]
 800d1d6:	4798      	blx	r3
 800d1d8:	b948      	cbnz	r0, 800d1ee <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d1da:	7a63      	ldrb	r3, [r4, #9]
 800d1dc:	b13b      	cbz	r3, 800d1ee <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d1de:	7a23      	ldrb	r3, [r4, #8]
 800d1e0:	b92b      	cbnz	r3, 800d1ee <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d1e2:	6823      	ldr	r3, [r4, #0]
 800d1e4:	4620      	mov	r0, r4
 800d1e6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d1e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d1ec:	4718      	bx	r3
 800d1ee:	bd10      	pop	{r4, pc}

0800d1f0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800d1f0:	b570      	push	{r4, r5, r6, lr}
 800d1f2:	4604      	mov	r4, r0
 800d1f4:	6840      	ldr	r0, [r0, #4]
 800d1f6:	6803      	ldr	r3, [r0, #0]
 800d1f8:	681b      	ldr	r3, [r3, #0]
 800d1fa:	4798      	blx	r3
 800d1fc:	4605      	mov	r5, r0
 800d1fe:	b930      	cbnz	r0, 800d20e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800d200:	7a23      	ldrb	r3, [r4, #8]
 800d202:	b123      	cbz	r3, 800d20e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800d204:	6860      	ldr	r0, [r4, #4]
 800d206:	6803      	ldr	r3, [r0, #0]
 800d208:	695b      	ldr	r3, [r3, #20]
 800d20a:	4798      	blx	r3
 800d20c:	7225      	strb	r5, [r4, #8]
 800d20e:	6860      	ldr	r0, [r4, #4]
 800d210:	6803      	ldr	r3, [r0, #0]
 800d212:	681b      	ldr	r3, [r3, #0]
 800d214:	4798      	blx	r3
 800d216:	b928      	cbnz	r0, 800d224 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800d218:	6823      	ldr	r3, [r4, #0]
 800d21a:	4620      	mov	r0, r4
 800d21c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d21e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d222:	4718      	bx	r3
 800d224:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d228:	f7f4 bd2c 	b.w	8001c84 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800d22c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800d22c:	b510      	push	{r4, lr}
 800d22e:	4c04      	ldr	r4, [pc, #16]	@ (800d240 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800d230:	6082      	str	r2, [r0, #8]
 800d232:	2200      	movs	r2, #0
 800d234:	e9c0 4100 	strd	r4, r1, [r0]
 800d238:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800d23c:	bd10      	pop	{r4, pc}
 800d23e:	bf00      	nop
 800d240:	080281fc 	.word	0x080281fc

0800d244 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800d244:	6840      	ldr	r0, [r0, #4]
 800d246:	6803      	ldr	r3, [r0, #0]
 800d248:	681b      	ldr	r3, [r3, #0]
 800d24a:	4718      	bx	r3
 800d24c:	0000      	movs	r0, r0
	...

0800d250 <_ZN8touchgfxL10applyNoiseEiihhh>:
 800d250:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 800d254:	4f20      	ldr	r7, [pc, #128]	@ (800d2d8 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
 800d256:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800d25a:	fb80 0101 	smull	r0, r1, r0, r1
 800d25e:	fba0 bc07 	umull	fp, ip, r0, r7
 800d262:	fb07 cc01 	mla	ip, r7, r1, ip
 800d266:	fb0b f70c 	mul.w	r7, fp, ip
 800d26a:	fbab 010b 	umull	r0, r1, fp, fp
 800d26e:	461c      	mov	r4, r3
 800d270:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 800d274:	fb00 f30c 	mul.w	r3, r0, ip
 800d278:	fb0b 3301 	mla	r3, fp, r1, r3
 800d27c:	fba0 010b 	umull	r0, r1, r0, fp
 800d280:	4616      	mov	r6, r2
 800d282:	4419      	add	r1, r3
 800d284:	a312      	add	r3, pc, #72	@ (adr r3, 800d2d0 <_ZN8touchgfxL10applyNoiseEiihhh+0x80>)
 800d286:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d28a:	f7f3 f801 	bl	8000290 <__aeabi_ldivmod>
 800d28e:	2ef7      	cmp	r6, #247	@ 0xf7
 800d290:	b290      	uxth	r0, r2
 800d292:	bf9e      	ittt	ls
 800d294:	f002 0207 	andls.w	r2, r2, #7
 800d298:	18b6      	addls	r6, r6, r2
 800d29a:	b2f6      	uxtbls	r6, r6
 800d29c:	2cfb      	cmp	r4, #251	@ 0xfb
 800d29e:	bf9e      	ittt	ls
 800d2a0:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
 800d2a4:	18e4      	addls	r4, r4, r3
 800d2a6:	b2e4      	uxtbls	r4, r4
 800d2a8:	2df7      	cmp	r5, #247	@ 0xf7
 800d2aa:	bf9c      	itt	ls
 800d2ac:	f3c0 1042 	ubfxls	r0, r0, #5, #3
 800d2b0:	182d      	addls	r5, r5, r0
 800d2b2:	480a      	ldr	r0, [pc, #40]	@ (800d2dc <_ZN8touchgfxL10applyNoiseEiihhh+0x8c>)
 800d2b4:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800d2b8:	ea00 2006 	and.w	r0, r0, r6, lsl #8
 800d2bc:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 800d2c0:	bf98      	it	ls
 800d2c2:	b2ed      	uxtbls	r5, r5
 800d2c4:	4304      	orrs	r4, r0
 800d2c6:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
 800d2ca:	b280      	uxth	r0, r0
 800d2cc:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 800d2d0:	797a8d77 	.word	0x797a8d77
 800d2d4:	00000000 	.word	0x00000000
 800d2d8:	00ec4ba7 	.word	0x00ec4ba7
 800d2dc:	fffff800 	.word	0xfffff800

0800d2e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
 800d2e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2e4:	ed2d 8b02 	vpush	{d8}
 800d2e8:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800d2ec:	b087      	sub	sp, #28
 800d2ee:	7c41      	ldrb	r1, [r0, #17]
 800d2f0:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
 800d2f4:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 800d2f8:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 800d2fc:	4605      	mov	r5, r0
 800d2fe:	2900      	cmp	r1, #0
 800d300:	f000 809a 	beq.w	800d438 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
 800d304:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800d308:	ed90 7a08 	vldr	s14, [r0, #32]
 800d30c:	68c0      	ldr	r0, [r0, #12]
 800d30e:	454a      	cmp	r2, r9
 800d310:	db25      	blt.n	800d35e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
 800d312:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800d316:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d31a:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800d31e:	bfc8      	it	gt
 800d320:	2200      	movgt	r2, #0
 800d322:	5882      	ldr	r2, [r0, r2]
 800d324:	2100      	movs	r1, #0
 800d326:	7c2d      	ldrb	r5, [r5, #16]
 800d328:	ea4f 2812 	mov.w	r8, r2, lsr #8
 800d32c:	0950      	lsrs	r0, r2, #5
 800d32e:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
 800d332:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800d336:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
 800d33a:	eb04 0746 	add.w	r7, r4, r6, lsl #1
 800d33e:	2d00      	cmp	r5, #0
 800d340:	d044      	beq.n	800d3cc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800d342:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800d346:	d141      	bne.n	800d3cc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800d348:	bb61      	cbnz	r1, 800d3a4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
 800d34a:	ea4e 0000 	orr.w	r0, lr, r0
 800d34e:	ea4c 0500 	orr.w	r5, ip, r0
 800d352:	42bc      	cmp	r4, r7
 800d354:	f080 8217 	bcs.w	800d786 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800d358:	f824 5b02 	strh.w	r5, [r4], #2
 800d35c:	e7f9      	b.n	800d352 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
 800d35e:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 800d362:	454f      	cmp	r7, r9
 800d364:	dc08      	bgt.n	800d378 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
 800d366:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800d36a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d36e:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800d372:	bfd8      	it	le
 800d374:	2200      	movle	r2, #0
 800d376:	e7d4      	b.n	800d322 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
 800d378:	eba9 0202 	sub.w	r2, r9, r2
 800d37c:	ee07 2a90 	vmov	s15, r2
 800d380:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800d384:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800d388:	ee67 7a87 	vmul.f32	s15, s15, s14
 800d38c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d390:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d394:	ee17 2a90 	vmov	r2, s15
 800d398:	bfd8      	it	le
 800d39a:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
 800d39e:	0092      	lsls	r2, r2, #2
 800d3a0:	5882      	ldr	r2, [r0, r2]
 800d3a2:	e7c0      	b.n	800d326 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
 800d3a4:	b2d5      	uxtb	r5, r2
 800d3a6:	fa5f f888 	uxtb.w	r8, r8
 800d3aa:	f3c2 4a07 	ubfx	sl, r2, #16, #8
 800d3ae:	461e      	mov	r6, r3
 800d3b0:	42bc      	cmp	r4, r7
 800d3b2:	f080 81e8 	bcs.w	800d786 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800d3b6:	4630      	mov	r0, r6
 800d3b8:	9500      	str	r5, [sp, #0]
 800d3ba:	4643      	mov	r3, r8
 800d3bc:	4652      	mov	r2, sl
 800d3be:	4649      	mov	r1, r9
 800d3c0:	f7ff ff46 	bl	800d250 <_ZN8touchgfxL10applyNoiseEiihhh>
 800d3c4:	3601      	adds	r6, #1
 800d3c6:	f824 0b02 	strh.w	r0, [r4], #2
 800d3ca:	e7f1      	b.n	800d3b0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
 800d3cc:	0e12      	lsrs	r2, r2, #24
 800d3ce:	fb02 f20a 	mul.w	r2, r2, sl
 800d3d2:	1c53      	adds	r3, r2, #1
 800d3d4:	eb03 2222 	add.w	r2, r3, r2, asr #8
 800d3d8:	1212      	asrs	r2, r2, #8
 800d3da:	fb02 f50c 	mul.w	r5, r2, ip
 800d3de:	fb02 f10e 	mul.w	r1, r2, lr
 800d3e2:	4350      	muls	r0, r2
 800d3e4:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 800d798 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800d3e8:	43d2      	mvns	r2, r2
 800d3ea:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800d3ee:	26ff      	movs	r6, #255	@ 0xff
 800d3f0:	42bc      	cmp	r4, r7
 800d3f2:	f080 81c8 	bcs.w	800d786 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800d3f6:	f8b4 e000 	ldrh.w	lr, [r4]
 800d3fa:	ea0e 030c 	and.w	r3, lr, ip
 800d3fe:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800d402:	fb02 1303 	mla	r3, r2, r3, r1
 800d406:	fb02 0808 	mla	r8, r2, r8, r0
 800d40a:	fb93 f3f6 	sdiv	r3, r3, r6
 800d40e:	fb98 f8f6 	sdiv	r8, r8, r6
 800d412:	ea03 030c 	and.w	r3, r3, ip
 800d416:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800d41a:	f00e 0e1f 	and.w	lr, lr, #31
 800d41e:	ea43 0308 	orr.w	r3, r3, r8
 800d422:	fb02 5e0e 	mla	lr, r2, lr, r5
 800d426:	fb9e fef6 	sdiv	lr, lr, r6
 800d42a:	f00e 0e1f 	and.w	lr, lr, #31
 800d42e:	ea43 030e 	orr.w	r3, r3, lr
 800d432:	f824 3b02 	strh.w	r3, [r4], #2
 800d436:	e7db      	b.n	800d3f0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
 800d438:	7c82      	ldrb	r2, [r0, #18]
 800d43a:	2a00      	cmp	r2, #0
 800d43c:	d04f      	beq.n	800d4de <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
 800d43e:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800d442:	ee07 2a90 	vmov	s15, r2
 800d446:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800d44a:	ee07 3a10 	vmov	s14, r3
 800d44e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d452:	461f      	mov	r7, r3
 800d454:	eef4 6ae7 	vcmpe.f32	s13, s15
 800d458:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d45c:	f200 8095 	bhi.w	800d58a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
 800d460:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800d464:	ee37 7a87 	vadd.f32	s14, s15, s14
 800d468:	f640 71fc 	movw	r1, #4092	@ 0xffc
 800d46c:	ee37 7a66 	vsub.f32	s14, s14, s13
 800d470:	ee06 6a90 	vmov	s13, r6
 800d474:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800d478:	68ea      	ldr	r2, [r5, #12]
 800d47a:	f895 c010 	ldrb.w	ip, [r5, #16]
 800d47e:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800d482:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d486:	bf4a      	itet	mi
 800d488:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
 800d48c:	9602      	strpl	r6, [sp, #8]
 800d48e:	ed8d 7a02 	vstrmi	s14, [sp, #8]
 800d492:	ed95 7a08 	vldr	s14, [r5, #32]
 800d496:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800d49a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d49e:	bfc8      	it	gt
 800d4a0:	2100      	movgt	r1, #0
 800d4a2:	5852      	ldr	r2, [r2, r1]
 800d4a4:	9902      	ldr	r1, [sp, #8]
 800d4a6:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 800d4aa:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800d4ae:	0950      	lsrs	r0, r2, #5
 800d4b0:	9103      	str	r1, [sp, #12]
 800d4b2:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 800d4b6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800d4ba:	f3c2 01c4 	ubfx	r1, r2, #3, #5
 800d4be:	f1bc 0f00 	cmp.w	ip, #0
 800d4c2:	d024      	beq.n	800d50e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800d4c4:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800d4c8:	d121      	bne.n	800d50e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800d4ca:	ea4b 0b00 	orr.w	fp, fp, r0
 800d4ce:	ea41 010b 	orr.w	r1, r1, fp
 800d4d2:	9a03      	ldr	r2, [sp, #12]
 800d4d4:	4294      	cmp	r4, r2
 800d4d6:	d255      	bcs.n	800d584 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800d4d8:	f824 1b02 	strh.w	r1, [r4], #2
 800d4dc:	e7f9      	b.n	800d4d2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
 800d4de:	ee07 9a10 	vmov	s14, r9
 800d4e2:	edd0 7a06 	vldr	s15, [r0, #24]
 800d4e6:	edd0 6a05 	vldr	s13, [r0, #20]
 800d4ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d4ee:	ee37 7a67 	vsub.f32	s14, s14, s15
 800d4f2:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800d4f6:	ed90 7a08 	vldr	s14, [r0, #32]
 800d4fa:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800d4fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d502:	bf44      	itt	mi
 800d504:	ed90 7a07 	vldrmi	s14, [r0, #28]
 800d508:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
 800d50c:	e79d      	b.n	800d44a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
 800d50e:	0e12      	lsrs	r2, r2, #24
 800d510:	fb02 f20a 	mul.w	r2, r2, sl
 800d514:	f102 0c01 	add.w	ip, r2, #1
 800d518:	eb0c 2222 	add.w	r2, ip, r2, asr #8
 800d51c:	1212      	asrs	r2, r2, #8
 800d51e:	4350      	muls	r0, r2
 800d520:	4351      	muls	r1, r2
 800d522:	fb02 fb0b 	mul.w	fp, r2, fp
 800d526:	f8df 8270 	ldr.w	r8, [pc, #624]	@ 800d798 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800d52a:	9004      	str	r0, [sp, #16]
 800d52c:	43d2      	mvns	r2, r2
 800d52e:	9105      	str	r1, [sp, #20]
 800d530:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800d534:	f04f 0eff 	mov.w	lr, #255	@ 0xff
 800d538:	9903      	ldr	r1, [sp, #12]
 800d53a:	428c      	cmp	r4, r1
 800d53c:	d222      	bcs.n	800d584 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800d53e:	8820      	ldrh	r0, [r4, #0]
 800d540:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
 800d544:	460f      	mov	r7, r1
 800d546:	9904      	ldr	r1, [sp, #16]
 800d548:	ea00 0c08 	and.w	ip, r0, r8
 800d54c:	fb02 bc0c 	mla	ip, r2, ip, fp
 800d550:	fb02 1107 	mla	r1, r2, r7, r1
 800d554:	fb9c fcfe 	sdiv	ip, ip, lr
 800d558:	fb91 f1fe 	sdiv	r1, r1, lr
 800d55c:	ea0c 0c08 	and.w	ip, ip, r8
 800d560:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 800d564:	ea4c 0101 	orr.w	r1, ip, r1
 800d568:	f000 0c1f 	and.w	ip, r0, #31
 800d56c:	9805      	ldr	r0, [sp, #20]
 800d56e:	fb02 0c0c 	mla	ip, r2, ip, r0
 800d572:	fb9c fcfe 	sdiv	ip, ip, lr
 800d576:	f00c 0c1f 	and.w	ip, ip, #31
 800d57a:	ea41 010c 	orr.w	r1, r1, ip
 800d57e:	f824 1b02 	strh.w	r1, [r4], #2
 800d582:	e7d9      	b.n	800d538 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
 800d584:	9a02      	ldr	r2, [sp, #8]
 800d586:	441a      	add	r2, r3
 800d588:	4617      	mov	r7, r2
 800d58a:	441e      	add	r6, r3
 800d58c:	b236      	sxth	r6, r6
 800d58e:	42be      	cmp	r6, r7
 800d590:	f340 80f9 	ble.w	800d786 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800d594:	ed95 7a07 	vldr	s14, [r5, #28]
 800d598:	ee06 7a90 	vmov	s13, r7
 800d59c:	ee37 7a87 	vadd.f32	s14, s15, s14
 800d5a0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800d5a4:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800d5a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d5ac:	f340 80b5 	ble.w	800d71a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43a>
 800d5b0:	ee06 6a10 	vmov	s12, r6
 800d5b4:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 800d5b8:	ed9f 8a75 	vldr	s16, [pc, #468]	@ 800d790 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
 800d5bc:	7c2b      	ldrb	r3, [r5, #16]
 800d5be:	eeb4 7ac6 	vcmpe.f32	s14, s12
 800d5c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d5c6:	bfd8      	it	le
 800d5c8:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
 800d5cc:	ed9f 6a71 	vldr	s12, [pc, #452]	@ 800d794 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
 800d5d0:	bfd8      	it	le
 800d5d2:	ee17 8a10 	vmovle	r8, s14
 800d5d6:	ed95 7a08 	vldr	s14, [r5, #32]
 800d5da:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800d5de:	bfc8      	it	gt
 800d5e0:	46b0      	movgt	r8, r6
 800d5e2:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800d5e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d5ea:	eba8 0707 	sub.w	r7, r8, r7
 800d5ee:	bfd8      	it	le
 800d5f0:	eeb0 8a46 	vmovle.f32	s16, s12
 800d5f4:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 800d5f8:	eea7 8a27 	vfma.f32	s16, s14, s15
 800d5fc:	b1db      	cbz	r3, 800d636 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800d5fe:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800d602:	d118      	bne.n	800d636 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800d604:	42bc      	cmp	r4, r7
 800d606:	d262      	bcs.n	800d6ce <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800d608:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800d60c:	68eb      	ldr	r3, [r5, #12]
 800d60e:	ee17 0a90 	vmov	r0, s15
 800d612:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 800d616:	b2d3      	uxtb	r3, r2
 800d618:	9300      	str	r3, [sp, #0]
 800d61a:	4649      	mov	r1, r9
 800d61c:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800d620:	f3c2 4207 	ubfx	r2, r2, #16, #8
 800d624:	f7ff fe14 	bl	800d250 <_ZN8touchgfxL10applyNoiseEiihhh>
 800d628:	f824 0b02 	strh.w	r0, [r4], #2
 800d62c:	edd5 7a08 	vldr	s15, [r5, #32]
 800d630:	ee38 8a27 	vadd.f32	s16, s16, s15
 800d634:	e7e6      	b.n	800d604 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x324>
 800d636:	f8df b160 	ldr.w	fp, [pc, #352]	@ 800d798 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800d63a:	f04f 09ff 	mov.w	r9, #255	@ 0xff
 800d63e:	42bc      	cmp	r4, r7
 800d640:	d245      	bcs.n	800d6ce <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800d642:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800d646:	68eb      	ldr	r3, [r5, #12]
 800d648:	f8b4 e000 	ldrh.w	lr, [r4]
 800d64c:	ee17 2a90 	vmov	r2, s15
 800d650:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800d654:	0e13      	lsrs	r3, r2, #24
 800d656:	fb03 f30a 	mul.w	r3, r3, sl
 800d65a:	1c58      	adds	r0, r3, #1
 800d65c:	eb00 2023 	add.w	r0, r0, r3, asr #8
 800d660:	1200      	asrs	r0, r0, #8
 800d662:	ea6f 0c00 	mvn.w	ip, r0
 800d666:	fa5f fc8c 	uxtb.w	ip, ip
 800d66a:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
 800d66e:	ea0e 030b 	and.w	r3, lr, fp
 800d672:	fb0c f303 	mul.w	r3, ip, r3
 800d676:	b289      	uxth	r1, r1
 800d678:	fb00 3101 	mla	r1, r0, r1, r3
 800d67c:	fb91 f1f9 	sdiv	r1, r1, r9
 800d680:	ea01 030b 	and.w	r3, r1, fp
 800d684:	9302      	str	r3, [sp, #8]
 800d686:	0953      	lsrs	r3, r2, #5
 800d688:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800d68c:	4619      	mov	r1, r3
 800d68e:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
 800d692:	fb0c f303 	mul.w	r3, ip, r3
 800d696:	fb00 3301 	mla	r3, r0, r1, r3
 800d69a:	f00e 0e1f 	and.w	lr, lr, #31
 800d69e:	9902      	ldr	r1, [sp, #8]
 800d6a0:	fb93 f3f9 	sdiv	r3, r3, r9
 800d6a4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 800d6a8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800d6ac:	fb0c fc0e 	mul.w	ip, ip, lr
 800d6b0:	4319      	orrs	r1, r3
 800d6b2:	fb00 c002 	mla	r0, r0, r2, ip
 800d6b6:	fb90 f0f9 	sdiv	r0, r0, r9
 800d6ba:	f000 001f 	and.w	r0, r0, #31
 800d6be:	4301      	orrs	r1, r0
 800d6c0:	f824 1b02 	strh.w	r1, [r4], #2
 800d6c4:	edd5 7a08 	vldr	s15, [r5, #32]
 800d6c8:	ee38 8a27 	vadd.f32	s16, s16, s15
 800d6cc:	e7b7      	b.n	800d63e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x35e>
 800d6ce:	4546      	cmp	r6, r8
 800d6d0:	dd59      	ble.n	800d786 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800d6d2:	edd5 7a08 	vldr	s15, [r5, #32]
 800d6d6:	68ea      	ldr	r2, [r5, #12]
 800d6d8:	7c29      	ldrb	r1, [r5, #16]
 800d6da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d6de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d6e2:	f640 73fc 	movw	r3, #4092	@ 0xffc
 800d6e6:	bfd8      	it	le
 800d6e8:	2300      	movle	r3, #0
 800d6ea:	eba6 0608 	sub.w	r6, r6, r8
 800d6ee:	58d2      	ldr	r2, [r2, r3]
 800d6f0:	0a10      	lsrs	r0, r2, #8
 800d6f2:	0953      	lsrs	r3, r2, #5
 800d6f4:	eb04 0646 	add.w	r6, r4, r6, lsl #1
 800d6f8:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 800d6fc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800d700:	f3c2 07c4 	ubfx	r7, r2, #3, #5
 800d704:	b159      	cbz	r1, 800d71e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800d706:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800d70a:	d108      	bne.n	800d71e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800d70c:	4318      	orrs	r0, r3
 800d70e:	4338      	orrs	r0, r7
 800d710:	42b4      	cmp	r4, r6
 800d712:	d238      	bcs.n	800d786 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800d714:	f824 0b02 	strh.w	r0, [r4], #2
 800d718:	e7fa      	b.n	800d710 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x430>
 800d71a:	46b8      	mov	r8, r7
 800d71c:	e7d9      	b.n	800d6d2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3f2>
 800d71e:	0e12      	lsrs	r2, r2, #24
 800d720:	fb02 f10a 	mul.w	r1, r2, sl
 800d724:	1c4a      	adds	r2, r1, #1
 800d726:	eb02 2221 	add.w	r2, r2, r1, asr #8
 800d72a:	1212      	asrs	r2, r2, #8
 800d72c:	fb02 f507 	mul.w	r5, r2, r7
 800d730:	4350      	muls	r0, r2
 800d732:	4353      	muls	r3, r2
 800d734:	f8df c060 	ldr.w	ip, [pc, #96]	@ 800d798 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800d738:	43d2      	mvns	r2, r2
 800d73a:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800d73e:	27ff      	movs	r7, #255	@ 0xff
 800d740:	42b4      	cmp	r4, r6
 800d742:	d220      	bcs.n	800d786 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800d744:	f8b4 e000 	ldrh.w	lr, [r4]
 800d748:	ea0e 010c 	and.w	r1, lr, ip
 800d74c:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800d750:	fb02 0101 	mla	r1, r2, r1, r0
 800d754:	fb02 3808 	mla	r8, r2, r8, r3
 800d758:	fb91 f1f7 	sdiv	r1, r1, r7
 800d75c:	fb98 f8f7 	sdiv	r8, r8, r7
 800d760:	ea01 010c 	and.w	r1, r1, ip
 800d764:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800d768:	f00e 0e1f 	and.w	lr, lr, #31
 800d76c:	ea41 0108 	orr.w	r1, r1, r8
 800d770:	fb02 5e0e 	mla	lr, r2, lr, r5
 800d774:	fb9e fef7 	sdiv	lr, lr, r7
 800d778:	f00e 0e1f 	and.w	lr, lr, #31
 800d77c:	ea41 010e 	orr.w	r1, r1, lr
 800d780:	f824 1b02 	strh.w	r1, [r4], #2
 800d784:	e7dc      	b.n	800d740 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x460>
 800d786:	b007      	add	sp, #28
 800d788:	ecbd 8b02 	vpop	{d8}
 800d78c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d790:	00000000 	.word	0x00000000
 800d794:	447ffffe 	.word	0x447ffffe
 800d798:	fffff800 	.word	0xfffff800

0800d79c <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
 800d79c:	4770      	bx	lr

0800d79e <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
 800d79e:	4770      	bx	lr

0800d7a0 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
 800d7a0:	b510      	push	{r4, lr}
 800d7a2:	2124      	movs	r1, #36	@ 0x24
 800d7a4:	4604      	mov	r4, r0
 800d7a6:	f016 fe48 	bl	802443a <_ZdlPvj>
 800d7aa:	4620      	mov	r0, r4
 800d7ac:	bd10      	pop	{r4, pc}
	...

0800d7b0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800d7b0:	4b06      	ldr	r3, [pc, #24]	@ (800d7cc <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800d7b2:	60c1      	str	r1, [r0, #12]
 800d7b4:	094a      	lsrs	r2, r1, #5
 800d7b6:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800d7ba:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 800d7be:	4313      	orrs	r3, r2
 800d7c0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800d7c4:	4319      	orrs	r1, r3
 800d7c6:	8201      	strh	r1, [r0, #16]
 800d7c8:	4770      	bx	lr
 800d7ca:	bf00      	nop
 800d7cc:	fffff800 	.word	0xfffff800

0800d7d0 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800d7d0:	f1a0 0008 	sub.w	r0, r0, #8
 800d7d4:	e7ec      	b.n	800d7b0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800d7d6:	bf00      	nop

0800d7d8 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800d7d8:	b508      	push	{r3, lr}
 800d7da:	4b05      	ldr	r3, [pc, #20]	@ (800d7f0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800d7dc:	6818      	ldr	r0, [r3, #0]
 800d7de:	6803      	ldr	r3, [r0, #0]
 800d7e0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800d7e4:	4798      	blx	r3
 800d7e6:	1e43      	subs	r3, r0, #1
 800d7e8:	4258      	negs	r0, r3
 800d7ea:	4158      	adcs	r0, r3
 800d7ec:	bd08      	pop	{r3, pc}
 800d7ee:	bf00      	nop
 800d7f0:	20015238 	.word	0x20015238

0800d7f4 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800d7f4:	4770      	bx	lr

0800d7f6 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800d7f6:	3808      	subs	r0, #8
 800d7f8:	4770      	bx	lr

0800d7fa <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800d7fa:	b430      	push	{r4, r5}
 800d7fc:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800d800:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800d804:	8a02      	ldrh	r2, [r0, #16]
 800d806:	9202      	str	r2, [sp, #8]
 800d808:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800d80c:	68c2      	ldr	r2, [r0, #12]
 800d80e:	4629      	mov	r1, r5
 800d810:	4620      	mov	r0, r4
 800d812:	bc30      	pop	{r4, r5}
 800d814:	f7f4 bbfe 	b.w	8002014 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800d818 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800d818:	f7f4 bbf0 	b.w	8001ffc <_ZN8touchgfx5paint8tearDownEv>

0800d81c <_ZN8touchgfx13PainterRGB565D0Ev>:
 800d81c:	b510      	push	{r4, lr}
 800d81e:	2114      	movs	r1, #20
 800d820:	4604      	mov	r4, r0
 800d822:	f016 fe0a 	bl	802443a <_ZdlPvj>
 800d826:	4620      	mov	r0, r4
 800d828:	bd10      	pop	{r4, pc}

0800d82a <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800d82a:	f1a0 0008 	sub.w	r0, r0, #8
 800d82e:	e7f5      	b.n	800d81c <_ZN8touchgfx13PainterRGB565D0Ev>

0800d830 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
 800d830:	2300      	movs	r3, #0
 800d832:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800d834:	8503      	strh	r3, [r0, #40]	@ 0x28
 800d836:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800d838:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800d83a:	6980      	ldr	r0, [r0, #24]
 800d83c:	b110      	cbz	r0, 800d844 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
 800d83e:	6803      	ldr	r3, [r0, #0]
 800d840:	691b      	ldr	r3, [r3, #16]
 800d842:	4718      	bx	r3
 800d844:	4770      	bx	lr

0800d846 <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
 800d846:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
 800d84a:	4770      	bx	lr

0800d84c <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
 800d84c:	b538      	push	{r3, r4, r5, lr}
 800d84e:	0e0b      	lsrs	r3, r1, #24
 800d850:	7783      	strb	r3, [r0, #30]
 800d852:	6803      	ldr	r3, [r0, #0]
 800d854:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800d856:	4604      	mov	r4, r0
 800d858:	460d      	mov	r5, r1
 800d85a:	4798      	blx	r3
 800d85c:	6803      	ldr	r3, [r0, #0]
 800d85e:	4629      	mov	r1, r5
 800d860:	689b      	ldr	r3, [r3, #8]
 800d862:	4798      	blx	r3
 800d864:	6823      	ldr	r3, [r4, #0]
 800d866:	4620      	mov	r0, r4
 800d868:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d86a:	4798      	blx	r3
 800d86c:	61a0      	str	r0, [r4, #24]
 800d86e:	bd38      	pop	{r3, r4, r5, pc}

0800d870 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
 800d870:	7741      	strb	r1, [r0, #29]
 800d872:	4770      	bx	lr

0800d874 <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 800d874:	b530      	push	{r4, r5, lr}
 800d876:	460d      	mov	r5, r1
 800d878:	f100 0434 	add.w	r4, r0, #52	@ 0x34
 800d87c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d87e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d880:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d882:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d884:	682b      	ldr	r3, [r5, #0]
 800d886:	6023      	str	r3, [r4, #0]
 800d888:	bd30      	pop	{r4, r5, pc}

0800d88a <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
 800d88a:	b538      	push	{r3, r4, r5, lr}
 800d88c:	4604      	mov	r4, r0
 800d88e:	1d03      	adds	r3, r0, #4
 800d890:	6808      	ldr	r0, [r1, #0]
 800d892:	6849      	ldr	r1, [r1, #4]
 800d894:	c303      	stmia	r3!, {r0, r1}
 800d896:	6813      	ldr	r3, [r2, #0]
 800d898:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 800d89c:	6853      	ldr	r3, [r2, #4]
 800d89e:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
 800d8a2:	2500      	movs	r5, #0
 800d8a4:	61a5      	str	r5, [r4, #24]
 800d8a6:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 800d8aa:	f005 fd35 	bl	8013318 <_ZN8touchgfx9Matrix3x35resetEv>
 800d8ae:	23ff      	movs	r3, #255	@ 0xff
 800d8b0:	7763      	strb	r3, [r4, #29]
 800d8b2:	77a3      	strb	r3, [r4, #30]
 800d8b4:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800d8b8:	6323      	str	r3, [r4, #48]	@ 0x30
 800d8ba:	2301      	movs	r3, #1
 800d8bc:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 800d8c0:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
 800d8c4:	bd38      	pop	{r3, r4, r5, pc}
	...

0800d8c8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 800d8c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d8cc:	ed2d 8b0a 	vpush	{d8-d12}
 800d8d0:	ee70 7a41 	vsub.f32	s15, s0, s2
 800d8d4:	b087      	sub	sp, #28
 800d8d6:	eef5 7a40 	vcmp.f32	s15, #0.0
 800d8da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d8de:	4605      	mov	r5, r0
 800d8e0:	eef0 9a40 	vmov.f32	s19, s0
 800d8e4:	eeb0 aa60 	vmov.f32	s20, s1
 800d8e8:	eeb0 9a41 	vmov.f32	s18, s2
 800d8ec:	eef0 8a61 	vmov.f32	s17, s3
 800d8f0:	eeb0 ca42 	vmov.f32	s24, s4
 800d8f4:	eef0 ca62 	vmov.f32	s25, s5
 800d8f8:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800d8fc:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 800d8fe:	6802      	ldr	r2, [r0, #0]
 800d900:	d112      	bne.n	800d928 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800d902:	ee70 7ae1 	vsub.f32	s15, s1, s3
 800d906:	eef5 7a40 	vcmp.f32	s15, #0.0
 800d90a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d90e:	d10b      	bne.n	800d928 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800d910:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 800d914:	3901      	subs	r1, #1
 800d916:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 800d918:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 800d91c:	b007      	add	sp, #28
 800d91e:	ecbd 8b0a 	vpop	{d8-d12}
 800d922:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d926:	4710      	bx	r2
 800d928:	23ff      	movs	r3, #255	@ 0xff
 800d92a:	77ab      	strb	r3, [r5, #30]
 800d92c:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800d92e:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 800dbf4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
 800d932:	4628      	mov	r0, r5
 800d934:	4798      	blx	r3
 800d936:	f105 0834 	add.w	r8, r5, #52	@ 0x34
 800d93a:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 800d93e:	80c3      	strh	r3, [r0, #6]
 800d940:	eef0 0a4a 	vmov.f32	s1, s20
 800d944:	eeb0 0a69 	vmov.f32	s0, s19
 800d948:	4604      	mov	r4, r0
 800d94a:	4640      	mov	r0, r8
 800d94c:	f005 fd93 	bl	8013476 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d950:	4640      	mov	r0, r8
 800d952:	eeb0 ba40 	vmov.f32	s22, s0
 800d956:	eef0 ba60 	vmov.f32	s23, s1
 800d95a:	ed8d 0a00 	vstr	s0, [sp]
 800d95e:	edcd 0a01 	vstr	s1, [sp, #4]
 800d962:	eeb0 0a49 	vmov.f32	s0, s18
 800d966:	eef0 0a68 	vmov.f32	s1, s17
 800d96a:	f005 fd84 	bl	8013476 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d96e:	eeb4 ba40 	vcmp.f32	s22, s0
 800d972:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d976:	eef4 ba60 	vcmp.f32	s23, s1
 800d97a:	bf0c      	ite	eq
 800d97c:	2301      	moveq	r3, #1
 800d97e:	2300      	movne	r3, #0
 800d980:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d984:	eeb4 ba40 	vcmp.f32	s22, s0
 800d988:	7463      	strb	r3, [r4, #17]
 800d98a:	bf0c      	ite	eq
 800d98c:	2301      	moveq	r3, #1
 800d98e:	2300      	movne	r3, #0
 800d990:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d994:	eeb0 8a40 	vmov.f32	s16, s0
 800d998:	eef0 aa60 	vmov.f32	s21, s1
 800d99c:	ed8d 0a02 	vstr	s0, [sp, #8]
 800d9a0:	edcd 0a03 	vstr	s1, [sp, #12]
 800d9a4:	74a3      	strb	r3, [r4, #18]
 800d9a6:	d030      	beq.n	800da0a <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800d9a8:	eef4 ba60 	vcmp.f32	s23, s1
 800d9ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d9b0:	d02b      	beq.n	800da0a <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800d9b2:	ee39 9a69 	vsub.f32	s18, s18, s19
 800d9b6:	ee78 8aca 	vsub.f32	s17, s17, s20
 800d9ba:	ee89 7a0c 	vdiv.f32	s14, s18, s24
 800d9be:	4640      	mov	r0, r8
 800d9c0:	eec8 7aac 	vdiv.f32	s15, s17, s25
 800d9c4:	eef0 0a4a 	vmov.f32	s1, s20
 800d9c8:	eeb0 0a69 	vmov.f32	s0, s19
 800d9cc:	eea7 0acc 	vfms.f32	s0, s15, s24
 800d9d0:	eeec 0a87 	vfma.f32	s1, s25, s14
 800d9d4:	f005 fd4f 	bl	8013476 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d9d8:	f899 3000 	ldrb.w	r3, [r9]
 800d9dc:	edcd 0a05 	vstr	s1, [sp, #20]
 800d9e0:	ee70 0aeb 	vsub.f32	s1, s1, s23
 800d9e4:	2b01      	cmp	r3, #1
 800d9e6:	ed8d 0a04 	vstr	s0, [sp, #16]
 800d9ea:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800d9ee:	bf02      	ittt	eq
 800d9f0:	eef1 7a60 	vnegeq.f32	s15, s1
 800d9f4:	eef0 0a40 	vmoveq.f32	s1, s0
 800d9f8:	eeb0 0a67 	vmoveq.f32	s0, s15
 800d9fc:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800da00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800da04:	d134      	bne.n	800da70 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
 800da06:	2301      	movs	r3, #1
 800da08:	74a3      	strb	r3, [r4, #18]
 800da0a:	f899 2000 	ldrb.w	r2, [r9]
 800da0e:	7c63      	ldrb	r3, [r4, #17]
 800da10:	2a01      	cmp	r2, #1
 800da12:	f040 80a3 	bne.w	800db5c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x294>
 800da16:	2b00      	cmp	r3, #0
 800da18:	d072      	beq.n	800db00 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x238>
 800da1a:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800da1e:	eddf 6a73 	vldr	s13, [pc, #460]	@ 800dbec <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800da22:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800da26:	eef4 baea 	vcmpe.f32	s23, s21
 800da2a:	edc4 7a08 	vstr	s15, [r4, #32]
 800da2e:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800da32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800da36:	ee17 3a90 	vmov	r3, s15
 800da3a:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800da3e:	b21a      	sxth	r2, r3
 800da40:	ee17 3a90 	vmov	r3, s15
 800da44:	b21b      	sxth	r3, r3
 800da46:	bf47      	ittee	mi
 800da48:	8123      	strhmi	r3, [r4, #8]
 800da4a:	8162      	strhmi	r2, [r4, #10]
 800da4c:	8122      	strhpl	r2, [r4, #8]
 800da4e:	8163      	strhpl	r3, [r4, #10]
 800da50:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800da54:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800da58:	1a9b      	subs	r3, r3, r2
 800da5a:	ee07 3a90 	vmov	s15, r3
 800da5e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800da62:	2300      	movs	r3, #0
 800da64:	7463      	strb	r3, [r4, #17]
 800da66:	edc4 7a07 	vstr	s15, [r4, #28]
 800da6a:	2301      	movs	r3, #1
 800da6c:	74a3      	strb	r3, [r4, #18]
 800da6e:	e03f      	b.n	800daf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800da70:	ee80 7a80 	vdiv.f32	s14, s1, s0
 800da74:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800da78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800da7c:	ed84 7a05 	vstr	s14, [r4, #20]
 800da80:	d102      	bne.n	800da88 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c0>
 800da82:	2301      	movs	r3, #1
 800da84:	7463      	strb	r3, [r4, #17]
 800da86:	e7c0      	b.n	800da0a <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800da88:	2b01      	cmp	r3, #1
 800da8a:	bf03      	ittte	eq
 800da8c:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
 800da90:	ee07 2a90 	vmoveq	s15, r2
 800da94:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
 800da98:	eef0 7a6b 	vmovne.f32	s15, s23
 800da9c:	bf0a      	itet	eq
 800da9e:	ee77 7acb 	vsubeq.f32	s15, s15, s22
 800daa2:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
 800daa6:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
 800daaa:	2b01      	cmp	r3, #1
 800daac:	ee38 8a4b 	vsub.f32	s16, s16, s22
 800dab0:	ee7a aaeb 	vsub.f32	s21, s21, s23
 800dab4:	edc4 7a06 	vstr	s15, [r4, #24]
 800dab8:	bf02      	ittt	eq
 800daba:	eef1 7a48 	vnegeq.f32	s15, s16
 800dabe:	eeb0 8a6a 	vmoveq.f32	s16, s21
 800dac2:	eef0 aa67 	vmoveq.f32	s21, s15
 800dac6:	eeca 7a87 	vdiv.f32	s15, s21, s14
 800daca:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 800dbf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
 800dace:	ee38 8a67 	vsub.f32	s16, s16, s15
 800dad2:	eec7 7a08 	vdiv.f32	s15, s14, s16
 800dad6:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800dada:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dade:	ed84 8a07 	vstr	s16, [r4, #28]
 800dae2:	edc4 7a08 	vstr	s15, [r4, #32]
 800dae6:	d503      	bpl.n	800daf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800dae8:	eeb1 8a48 	vneg.f32	s16, s16
 800daec:	ed84 8a07 	vstr	s16, [r4, #28]
 800daf0:	60e7      	str	r7, [r4, #12]
 800daf2:	7426      	strb	r6, [r4, #16]
 800daf4:	61ac      	str	r4, [r5, #24]
 800daf6:	b007      	add	sp, #28
 800daf8:	ecbd 8b0a 	vpop	{d8-d12}
 800dafc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800db00:	7ca3      	ldrb	r3, [r4, #18]
 800db02:	2b00      	cmp	r3, #0
 800db04:	d0f4      	beq.n	800daf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800db06:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800db0a:	eddf 6a38 	vldr	s13, [pc, #224]	@ 800dbec <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800db0e:	ee00 3a10 	vmov	s0, r3
 800db12:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800db16:	ee30 8a48 	vsub.f32	s16, s0, s16
 800db1a:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800db1e:	ee38 7a40 	vsub.f32	s14, s16, s0
 800db22:	eeb4 8ac0 	vcmpe.f32	s16, s0
 800db26:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800db2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800db2e:	edc4 7a08 	vstr	s15, [r4, #32]
 800db32:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800db36:	ee17 3a90 	vmov	r3, s15
 800db3a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800db3e:	b21a      	sxth	r2, r3
 800db40:	ee17 3a90 	vmov	r3, s15
 800db44:	b21b      	sxth	r3, r3
 800db46:	bfcc      	ite	gt
 800db48:	8123      	strhgt	r3, [r4, #8]
 800db4a:	8163      	strhle	r3, [r4, #10]
 800db4c:	f04f 0301 	mov.w	r3, #1
 800db50:	7463      	strb	r3, [r4, #17]
 800db52:	bfcc      	ite	gt
 800db54:	8162      	strhgt	r2, [r4, #10]
 800db56:	8122      	strhle	r2, [r4, #8]
 800db58:	2300      	movs	r3, #0
 800db5a:	e787      	b.n	800da6c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a4>
 800db5c:	b1db      	cbz	r3, 800db96 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2ce>
 800db5e:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800db62:	eddf 6a22 	vldr	s13, [pc, #136]	@ 800dbec <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800db66:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800db6a:	eef4 baea 	vcmpe.f32	s23, s21
 800db6e:	edc4 7a08 	vstr	s15, [r4, #32]
 800db72:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800db76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800db7a:	ee17 3a90 	vmov	r3, s15
 800db7e:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800db82:	b21a      	sxth	r2, r3
 800db84:	ee17 3a90 	vmov	r3, s15
 800db88:	b21b      	sxth	r3, r3
 800db8a:	bf47      	ittee	mi
 800db8c:	8123      	strhmi	r3, [r4, #8]
 800db8e:	8162      	strhmi	r2, [r4, #10]
 800db90:	8122      	strhpl	r2, [r4, #8]
 800db92:	8163      	strhpl	r3, [r4, #10]
 800db94:	e7ac      	b.n	800daf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800db96:	7ca3      	ldrb	r3, [r4, #18]
 800db98:	2b00      	cmp	r3, #0
 800db9a:	d0a9      	beq.n	800daf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800db9c:	ee38 7a4b 	vsub.f32	s14, s16, s22
 800dba0:	eddf 6a12 	vldr	s13, [pc, #72]	@ 800dbec <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800dba4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800dba8:	eeb4 bac8 	vcmpe.f32	s22, s16
 800dbac:	edc4 7a08 	vstr	s15, [r4, #32]
 800dbb0:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800dbb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dbb8:	ee17 3a90 	vmov	r3, s15
 800dbbc:	eefd 7acb 	vcvt.s32.f32	s15, s22
 800dbc0:	b21a      	sxth	r2, r3
 800dbc2:	ee17 3a90 	vmov	r3, s15
 800dbc6:	b21b      	sxth	r3, r3
 800dbc8:	bf47      	ittee	mi
 800dbca:	8123      	strhmi	r3, [r4, #8]
 800dbcc:	8162      	strhmi	r2, [r4, #10]
 800dbce:	8122      	strhpl	r2, [r4, #8]
 800dbd0:	8163      	strhpl	r3, [r4, #10]
 800dbd2:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800dbd6:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800dbda:	1a9b      	subs	r3, r3, r2
 800dbdc:	ee07 3a90 	vmov	s15, r3
 800dbe0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800dbe4:	edc4 7a07 	vstr	s15, [r4, #28]
 800dbe8:	e782      	b.n	800daf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800dbea:	bf00      	nop
 800dbec:	447ffffe 	.word	0x447ffffe
 800dbf0:	44800000 	.word	0x44800000
 800dbf4:	20015230 	.word	0x20015230

0800dbf8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
 800dbf8:	b510      	push	{r4, lr}
 800dbfa:	2100      	movs	r1, #0
 800dbfc:	ed2d 8b02 	vpush	{d8}
 800dc00:	eef0 8a62 	vmov.f32	s17, s5
 800dc04:	4604      	mov	r4, r0
 800dc06:	eeb0 8a42 	vmov.f32	s16, s4
 800dc0a:	f016 f9a5 	bl	8023f58 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 800dc0e:	eef0 7a68 	vmov.f32	s15, s17
 800dc12:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800dc16:	6823      	ldr	r3, [r4, #0]
 800dc18:	ee17 2a90 	vmov	r2, s15
 800dc1c:	eef0 7a48 	vmov.f32	s15, s16
 800dc20:	ecbd 8b02 	vpop	{d8}
 800dc24:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800dc28:	4620      	mov	r0, r4
 800dc2a:	689b      	ldr	r3, [r3, #8]
 800dc2c:	ee17 1a90 	vmov	r1, s15
 800dc30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800dc34:	4718      	bx	r3

0800dc36 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
 800dc36:	b510      	push	{r4, lr}
 800dc38:	2100      	movs	r1, #0
 800dc3a:	ed2d 8b02 	vpush	{d8}
 800dc3e:	eef0 8a63 	vmov.f32	s17, s7
 800dc42:	4604      	mov	r4, r0
 800dc44:	eeb0 8a43 	vmov.f32	s16, s6
 800dc48:	f016 fa48 	bl	80240dc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 800dc4c:	eef0 7a68 	vmov.f32	s15, s17
 800dc50:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800dc54:	6823      	ldr	r3, [r4, #0]
 800dc56:	ee17 2a90 	vmov	r2, s15
 800dc5a:	eef0 7a48 	vmov.f32	s15, s16
 800dc5e:	ecbd 8b02 	vpop	{d8}
 800dc62:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800dc66:	4620      	mov	r0, r4
 800dc68:	689b      	ldr	r3, [r3, #8]
 800dc6a:	ee17 1a90 	vmov	r1, s15
 800dc6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800dc72:	4718      	bx	r3

0800dc74 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
 800dc74:	b513      	push	{r0, r1, r4, lr}
 800dc76:	4604      	mov	r4, r0
 800dc78:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800dc7a:	f005 fbfc 	bl	8013476 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800dc7e:	eef0 7a60 	vmov.f32	s15, s1
 800dc82:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800dc86:	4620      	mov	r0, r4
 800dc88:	ee17 2a90 	vmov	r2, s15
 800dc8c:	eef0 7a40 	vmov.f32	s15, s0
 800dc90:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800dc94:	ee17 1a90 	vmov	r1, s15
 800dc98:	b002      	add	sp, #8
 800dc9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800dc9e:	f016 b8b5 	b.w	8023e0c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

0800dca2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
 800dca2:	b513      	push	{r0, r1, r4, lr}
 800dca4:	4604      	mov	r4, r0
 800dca6:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800dca8:	f005 fbe5 	bl	8013476 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800dcac:	eef0 7a60 	vmov.f32	s15, s1
 800dcb0:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800dcb4:	4620      	mov	r0, r4
 800dcb6:	ee17 2a90 	vmov	r2, s15
 800dcba:	eef0 7a40 	vmov.f32	s15, s0
 800dcbe:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800dcc2:	ee17 1a90 	vmov	r1, s15
 800dcc6:	b002      	add	sp, #8
 800dcc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800dccc:	f016 b8eb 	b.w	8023ea6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

0800dcd0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
 800dcd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dcd2:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
 800dcd6:	2400      	movs	r4, #0
 800dcd8:	9f07      	ldr	r7, [sp, #28]
 800dcda:	4463      	add	r3, ip
 800dcdc:	4626      	mov	r6, r4
 800dcde:	f04f 0e01 	mov.w	lr, #1
 800dce2:	4563      	cmp	r3, ip
 800dce4:	d02d      	beq.n	800dd42 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
 800dce6:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
 800dcea:	2d06      	cmp	r5, #6
 800dcec:	d8f9      	bhi.n	800dce2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800dcee:	fa0e f505 	lsl.w	r5, lr, r5
 800dcf2:	f015 0f66 	tst.w	r5, #102	@ 0x66
 800dcf6:	d10d      	bne.n	800dd14 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
 800dcf8:	f015 0f10 	tst.w	r5, #16
 800dcfc:	d117      	bne.n	800dd2e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
 800dcfe:	072d      	lsls	r5, r5, #28
 800dd00:	d5ef      	bpl.n	800dce2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800dd02:	3801      	subs	r0, #1
 800dd04:	b91e      	cbnz	r6, 800dd0e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
 800dd06:	eb07 0580 	add.w	r5, r7, r0, lsl #2
 800dd0a:	682d      	ldr	r5, [r5, #0]
 800dd0c:	600d      	str	r5, [r1, #0]
 800dd0e:	b96c      	cbnz	r4, 800dd2c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800dd10:	2601      	movs	r6, #1
 800dd12:	e7e6      	b.n	800dce2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800dd14:	b926      	cbnz	r6, 800dd20 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
 800dd16:	eb07 0380 	add.w	r3, r7, r0, lsl #2
 800dd1a:	f853 3c08 	ldr.w	r3, [r3, #-8]
 800dd1e:	600b      	str	r3, [r1, #0]
 800dd20:	b924      	cbnz	r4, 800dd2c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800dd22:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800dd26:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800dd2a:	6013      	str	r3, [r2, #0]
 800dd2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dd2e:	3801      	subs	r0, #1
 800dd30:	b91c      	cbnz	r4, 800dd3a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
 800dd32:	eb07 0480 	add.w	r4, r7, r0, lsl #2
 800dd36:	6824      	ldr	r4, [r4, #0]
 800dd38:	6014      	str	r4, [r2, #0]
 800dd3a:	2e00      	cmp	r6, #0
 800dd3c:	d1f6      	bne.n	800dd2c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800dd3e:	2401      	movs	r4, #1
 800dd40:	e7cf      	b.n	800dce2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800dd42:	b90e      	cbnz	r6, 800dd48 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
 800dd44:	2300      	movs	r3, #0
 800dd46:	600b      	str	r3, [r1, #0]
 800dd48:	2c00      	cmp	r4, #0
 800dd4a:	d1ef      	bne.n	800dd2c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800dd4c:	2300      	movs	r3, #0
 800dd4e:	e7ec      	b.n	800dd2a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

0800dd50 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
 800dd50:	b538      	push	{r3, r4, r5, lr}
 800dd52:	4604      	mov	r4, r0
 800dd54:	ed2d 8b0a 	vpush	{d8-d12}
 800dd58:	460d      	mov	r5, r1
 800dd5a:	eef0 ba40 	vmov.f32	s23, s0
 800dd5e:	eeb0 ca60 	vmov.f32	s24, s1
 800dd62:	eef0 aa41 	vmov.f32	s21, s2
 800dd66:	eeb0 ba61 	vmov.f32	s22, s3
 800dd6a:	eeb0 9a42 	vmov.f32	s18, s4
 800dd6e:	eef0 9a62 	vmov.f32	s19, s5
 800dd72:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
 800dd76:	ee7b 8a29 	vadd.f32	s17, s22, s19
 800dd7a:	ee3a 8a89 	vadd.f32	s16, s21, s18
 800dd7e:	ee68 8a8a 	vmul.f32	s17, s17, s20
 800dd82:	ee28 8a0a 	vmul.f32	s16, s16, s20
 800dd86:	ee3c 0a68 	vsub.f32	s0, s24, s17
 800dd8a:	ee7b 7ac8 	vsub.f32	s15, s23, s16
 800dd8e:	ee20 0a00 	vmul.f32	s0, s0, s0
 800dd92:	eea7 0aa7 	vfma.f32	s0, s15, s15
 800dd96:	f016 fb7b 	bl	8024490 <sqrtf>
 800dd9a:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800dd9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dda2:	d12e      	bne.n	800de02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
 800dda4:	ee79 7a6a 	vsub.f32	s15, s18, s21
 800dda8:	ee39 7acb 	vsub.f32	s14, s19, s22
 800ddac:	eeb0 8a6a 	vmov.f32	s16, s21
 800ddb0:	eef0 8a4b 	vmov.f32	s17, s22
 800ddb4:	eea7 8a8a 	vfma.f32	s16, s15, s20
 800ddb8:	eee7 8a0a 	vfma.f32	s17, s14, s20
 800ddbc:	eea7 8a0a 	vfma.f32	s16, s14, s20
 800ddc0:	eee7 8aca 	vfms.f32	s17, s15, s20
 800ddc4:	2d02      	cmp	r5, #2
 800ddc6:	dc2f      	bgt.n	800de28 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
 800ddc8:	3501      	adds	r5, #1
 800ddca:	eef0 1a4b 	vmov.f32	s3, s22
 800ddce:	eeb0 1a6a 	vmov.f32	s2, s21
 800ddd2:	4629      	mov	r1, r5
 800ddd4:	eef0 2a68 	vmov.f32	s5, s17
 800ddd8:	eeb0 2a48 	vmov.f32	s4, s16
 800dddc:	eef0 0a4c 	vmov.f32	s1, s24
 800dde0:	eeb0 0a6b 	vmov.f32	s0, s23
 800dde4:	4620      	mov	r0, r4
 800dde6:	f7ff ffb3 	bl	800dd50 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800ddea:	eef0 0a68 	vmov.f32	s1, s17
 800ddee:	eeb0 0a48 	vmov.f32	s0, s16
 800ddf2:	4620      	mov	r0, r4
 800ddf4:	f7ff ff55 	bl	800dca2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800ddf8:	eeb0 ba68 	vmov.f32	s22, s17
 800ddfc:	eef0 aa48 	vmov.f32	s21, s16
 800de00:	e7b9      	b.n	800dd76 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
 800de02:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800de06:	ee38 8a6b 	vsub.f32	s16, s16, s23
 800de0a:	ee78 8acc 	vsub.f32	s17, s17, s24
 800de0e:	ee28 7a27 	vmul.f32	s14, s16, s15
 800de12:	ee68 7aa7 	vmul.f32	s15, s17, s15
 800de16:	ee87 8a00 	vdiv.f32	s16, s14, s0
 800de1a:	eec7 8a80 	vdiv.f32	s17, s15, s0
 800de1e:	ee3b 8a88 	vadd.f32	s16, s23, s16
 800de22:	ee7c 8a28 	vadd.f32	s17, s24, s17
 800de26:	e7cd      	b.n	800ddc4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
 800de28:	eef0 0a68 	vmov.f32	s1, s17
 800de2c:	eeb0 0a48 	vmov.f32	s0, s16
 800de30:	4620      	mov	r0, r4
 800de32:	f7ff ff36 	bl	800dca2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800de36:	ecbd 8b0a 	vpop	{d8-d12}
 800de3a:	bd38      	pop	{r3, r4, r5, pc}

0800de3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
 800de3c:	b510      	push	{r4, lr}
 800de3e:	ed2d 8b0a 	vpush	{d8-d12}
 800de42:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
 800de46:	2b02      	cmp	r3, #2
 800de48:	4604      	mov	r4, r0
 800de4a:	eeb0 ca40 	vmov.f32	s24, s0
 800de4e:	eeb0 9a60 	vmov.f32	s18, s1
 800de52:	eef0 9a41 	vmov.f32	s19, s2
 800de56:	eef0 8a61 	vmov.f32	s17, s3
 800de5a:	eeb0 ba42 	vmov.f32	s22, s4
 800de5e:	eef0 ba62 	vmov.f32	s23, s5
 800de62:	eeb0 aa43 	vmov.f32	s20, s6
 800de66:	eef0 aa63 	vmov.f32	s21, s7
 800de6a:	eeb0 8a44 	vmov.f32	s16, s8
 800de6e:	eef0 ca64 	vmov.f32	s25, s9
 800de72:	d12c      	bne.n	800dece <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
 800de74:	eef0 0a62 	vmov.f32	s1, s5
 800de78:	eeb0 0a42 	vmov.f32	s0, s4
 800de7c:	f7ff ff11 	bl	800dca2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800de80:	ee79 9acb 	vsub.f32	s19, s19, s22
 800de84:	ee7a caec 	vsub.f32	s25, s21, s25
 800de88:	ee78 8aeb 	vsub.f32	s17, s17, s23
 800de8c:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800de90:	ee69 9aac 	vmul.f32	s19, s19, s25
 800de94:	ee28 8a88 	vmul.f32	s16, s17, s16
 800de98:	eef4 9ac8 	vcmpe.f32	s19, s16
 800de9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dea0:	db0f      	blt.n	800dec2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
 800dea2:	2101      	movs	r1, #1
 800dea4:	eef0 2a6a 	vmov.f32	s5, s21
 800dea8:	eeb0 2a4a 	vmov.f32	s4, s20
 800deac:	eef0 1a6b 	vmov.f32	s3, s23
 800deb0:	eeb0 1a4b 	vmov.f32	s2, s22
 800deb4:	eef0 0a49 	vmov.f32	s1, s18
 800deb8:	eeb0 0a4c 	vmov.f32	s0, s24
 800debc:	4620      	mov	r0, r4
 800debe:	f7ff ff47 	bl	800dd50 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800dec2:	eef0 0a6a 	vmov.f32	s1, s21
 800dec6:	eeb0 0a4a 	vmov.f32	s0, s20
 800deca:	4620      	mov	r0, r4
 800decc:	e035      	b.n	800df3a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
 800dece:	2b01      	cmp	r3, #1
 800ded0:	d138      	bne.n	800df44 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800ded2:	ee31 4ae2 	vsub.f32	s8, s3, s5
 800ded6:	ee33 6a48 	vsub.f32	s12, s6, s16
 800deda:	ee71 7a42 	vsub.f32	s15, s2, s4
 800dede:	ee73 6ae4 	vsub.f32	s13, s7, s9
 800dee2:	ee26 7a44 	vnmul.f32	s14, s12, s8
 800dee6:	eea7 7aa6 	vfma.f32	s14, s15, s13
 800deea:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800deee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800def2:	d027      	beq.n	800df44 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800def4:	ee28 8a63 	vnmul.f32	s16, s16, s7
 800def8:	ee61 8ac2 	vnmul.f32	s17, s3, s4
 800defc:	eea4 8a83 	vfma.f32	s16, s9, s6
 800df00:	eee1 8a22 	vfma.f32	s17, s2, s5
 800df04:	ee68 7a67 	vnmul.f32	s15, s16, s15
 800df08:	ee28 8a44 	vnmul.f32	s16, s16, s8
 800df0c:	eee6 7a28 	vfma.f32	s15, s12, s17
 800df10:	eea6 8aa8 	vfma.f32	s16, s13, s17
 800df14:	ee87 0a87 	vdiv.f32	s0, s15, s14
 800df18:	eec8 0a07 	vdiv.f32	s1, s16, s14
 800df1c:	ee3c ca40 	vsub.f32	s24, s24, s0
 800df20:	ee39 9a60 	vsub.f32	s18, s18, s1
 800df24:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
 800df28:	ee29 9a09 	vmul.f32	s18, s18, s18
 800df2c:	eeac 9a0c 	vfma.f32	s18, s24, s24
 800df30:	eef4 7ac9 	vcmpe.f32	s15, s18
 800df34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800df38:	db04      	blt.n	800df44 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800df3a:	f7ff feb2 	bl	800dca2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800df3e:	ecbd 8b0a 	vpop	{d8-d12}
 800df42:	bd10      	pop	{r4, pc}
 800df44:	eef0 0a6b 	vmov.f32	s1, s23
 800df48:	eeb0 0a4b 	vmov.f32	s0, s22
 800df4c:	4620      	mov	r0, r4
 800df4e:	f7ff fea8 	bl	800dca2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800df52:	e7b6      	b.n	800dec2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

0800df54 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
 800df54:	b510      	push	{r4, lr}
 800df56:	ed2d 8b0c 	vpush	{d8-d13}
 800df5a:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 800df5e:	4604      	mov	r4, r0
 800df60:	eeb0 9a40 	vmov.f32	s18, s0
 800df64:	eef0 9a60 	vmov.f32	s19, s1
 800df68:	eef0 aa41 	vmov.f32	s21, s2
 800df6c:	eeb0 ba61 	vmov.f32	s22, s3
 800df70:	b933      	cbnz	r3, 800df80 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
 800df72:	f7ff fe96 	bl	800dca2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800df76:	eef0 0a4b 	vmov.f32	s1, s22
 800df7a:	eeb0 0a6a 	vmov.f32	s0, s21
 800df7e:	e015      	b.n	800dfac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
 800df80:	ee71 8a40 	vsub.f32	s17, s2, s0
 800df84:	ee31 8ae0 	vsub.f32	s16, s3, s1
 800df88:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800df8c:	2b02      	cmp	r3, #2
 800df8e:	ee68 8aa7 	vmul.f32	s17, s17, s15
 800df92:	ee28 8a27 	vmul.f32	s16, s16, s15
 800df96:	d10f      	bne.n	800dfb8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
 800df98:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800df9c:	ee30 0a08 	vadd.f32	s0, s0, s16
 800dfa0:	f7ff fe7f 	bl	800dca2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800dfa4:	ee7b 0a68 	vsub.f32	s1, s22, s17
 800dfa8:	ee3a 0a88 	vadd.f32	s0, s21, s16
 800dfac:	4620      	mov	r0, r4
 800dfae:	f7ff fe78 	bl	800dca2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800dfb2:	ecbd 8b0c 	vpop	{d8-d13}
 800dfb6:	bd10      	pop	{r4, pc}
 800dfb8:	f7ff fe73 	bl	800dca2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800dfbc:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 800e0f4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
 800dfc0:	eddf ba4d 	vldr	s23, [pc, #308]	@ 800e0f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
 800dfc4:	ed9f ca4d 	vldr	s24, [pc, #308]	@ 800e0fc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
 800dfc8:	eddf ca4d 	vldr	s25, [pc, #308]	@ 800e100 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
 800dfcc:	ed9f da4d 	vldr	s26, [pc, #308]	@ 800e104 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
 800dfd0:	eef0 0a69 	vmov.f32	s1, s19
 800dfd4:	eeb0 0a49 	vmov.f32	s0, s18
 800dfd8:	eee8 0a27 	vfma.f32	s1, s16, s15
 800dfdc:	4620      	mov	r0, r4
 800dfde:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800dfe2:	eeb1 aa68 	vneg.f32	s20, s17
 800dfe6:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800dfea:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800dfee:	f7ff fe58 	bl	800dca2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800dff2:	eddf 7a45 	vldr	s15, [pc, #276]	@ 800e108 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
 800dff6:	eef0 0a69 	vmov.f32	s1, s19
 800dffa:	eeb0 0a49 	vmov.f32	s0, s18
 800dffe:	eee8 0a27 	vfma.f32	s1, s16, s15
 800e002:	4620      	mov	r0, r4
 800e004:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800e008:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800e00c:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800e010:	f7ff fe47 	bl	800dca2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e014:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 800e10c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
 800e018:	eef0 0a69 	vmov.f32	s1, s19
 800e01c:	eeb0 0a49 	vmov.f32	s0, s18
 800e020:	eee8 0a27 	vfma.f32	s1, s16, s15
 800e024:	4620      	mov	r0, r4
 800e026:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800e02a:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800e02e:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800e032:	f7ff fe36 	bl	800dca2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e036:	eddf 7a36 	vldr	s15, [pc, #216]	@ 800e110 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
 800e03a:	eef0 0a69 	vmov.f32	s1, s19
 800e03e:	eeb0 0a49 	vmov.f32	s0, s18
 800e042:	eee8 0a27 	vfma.f32	s1, s16, s15
 800e046:	4620      	mov	r0, r4
 800e048:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800e04c:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800e050:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800e054:	f7ff fe25 	bl	800dca2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e058:	ee79 0a88 	vadd.f32	s1, s19, s16
 800e05c:	ee39 0a28 	vadd.f32	s0, s18, s17
 800e060:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800e064:	ee30 0a08 	vadd.f32	s0, s0, s16
 800e068:	4620      	mov	r0, r4
 800e06a:	f7ff fe1a 	bl	800dca2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e06e:	eddf 7a29 	vldr	s15, [pc, #164]	@ 800e114 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
 800e072:	eef0 0a69 	vmov.f32	s1, s19
 800e076:	eeb0 0a49 	vmov.f32	s0, s18
 800e07a:	eee8 0a27 	vfma.f32	s1, s16, s15
 800e07e:	4620      	mov	r0, r4
 800e080:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800e084:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800e088:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800e08c:	f7ff fe09 	bl	800dca2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e090:	eddf 7a21 	vldr	s15, [pc, #132]	@ 800e118 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
 800e094:	eef0 0a69 	vmov.f32	s1, s19
 800e098:	eeb0 0a49 	vmov.f32	s0, s18
 800e09c:	eee8 0a27 	vfma.f32	s1, s16, s15
 800e0a0:	4620      	mov	r0, r4
 800e0a2:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800e0a6:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800e0aa:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800e0ae:	f7ff fdf8 	bl	800dca2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e0b2:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 800e11c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
 800e0b6:	eef0 0a69 	vmov.f32	s1, s19
 800e0ba:	eeb0 0a49 	vmov.f32	s0, s18
 800e0be:	eee8 0a27 	vfma.f32	s1, s16, s15
 800e0c2:	4620      	mov	r0, r4
 800e0c4:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800e0c8:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800e0cc:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800e0d0:	f7ff fde7 	bl	800dca2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e0d4:	eddf 7a12 	vldr	s15, [pc, #72]	@ 800e120 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
 800e0d8:	eef0 0a69 	vmov.f32	s1, s19
 800e0dc:	eeb0 0a49 	vmov.f32	s0, s18
 800e0e0:	eee8 0a27 	vfma.f32	s1, s16, s15
 800e0e4:	4620      	mov	r0, r4
 800e0e6:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800e0ea:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800e0ee:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800e0f2:	e73e      	b.n	800df72 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
 800e0f4:	3d23d70a 	.word	0x3d23d70a
 800e0f8:	3e8f5c29 	.word	0x3e8f5c29
 800e0fc:	3f19999a 	.word	0x3f19999a
 800e100:	3f4ccccd 	.word	0x3f4ccccd
 800e104:	3f75c28f 	.word	0x3f75c28f
 800e108:	3e4ccccd 	.word	0x3e4ccccd
 800e10c:	3ecccccd 	.word	0x3ecccccd
 800e110:	3f3851ec 	.word	0x3f3851ec
 800e114:	3fa3d70a 	.word	0x3fa3d70a
 800e118:	3fcccccd 	.word	0x3fcccccd
 800e11c:	3fe66666 	.word	0x3fe66666
 800e120:	3ffae148 	.word	0x3ffae148

0800e124 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
 800e124:	b570      	push	{r4, r5, r6, lr}
 800e126:	ed2d 8b06 	vpush	{d8-d10}
 800e12a:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800e12e:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
 800e132:	ee30 8ac8 	vsub.f32	s16, s1, s16
 800e136:	ee30 9a49 	vsub.f32	s18, s0, s18
 800e13a:	eef0 aa40 	vmov.f32	s21, s0
 800e13e:	ee28 0a08 	vmul.f32	s0, s16, s16
 800e142:	4604      	mov	r4, r0
 800e144:	eea9 0a09 	vfma.f32	s0, s18, s18
 800e148:	eeb0 aa60 	vmov.f32	s20, s1
 800e14c:	f016 f9a0 	bl	8024490 <sqrtf>
 800e150:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800e154:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e158:	dd36      	ble.n	800e1c8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
 800e15a:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800e15e:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
 800e162:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
 800e166:	eec0 6a27 	vdiv.f32	s13, s0, s15
 800e16a:	2600      	movs	r6, #0
 800e16c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800e170:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
 800e174:	eec8 8a26 	vdiv.f32	s17, s16, s13
 800e178:	ee89 8a26 	vdiv.f32	s16, s18, s13
 800e17c:	ee70 9a28 	vadd.f32	s19, s0, s17
 800e180:	ee30 9ac8 	vsub.f32	s18, s1, s16
 800e184:	ee78 8aaa 	vadd.f32	s17, s17, s21
 800e188:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800e18c:	b1fd      	cbz	r5, 800e1ce <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
 800e18e:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
 800e192:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
 800e196:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
 800e19a:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
 800e19e:	eef0 0a49 	vmov.f32	s1, s18
 800e1a2:	eeb0 0a69 	vmov.f32	s0, s19
 800e1a6:	4620      	mov	r0, r4
 800e1a8:	f7ff fd64 	bl	800dc74 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800e1ac:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
 800e1b0:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
 800e1b4:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
 800e1b8:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
 800e1bc:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
 800e1c0:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
 800e1c4:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
 800e1c8:	ecbd 8b06 	vpop	{d8-d10}
 800e1cc:	bd70      	pop	{r4, r5, r6, pc}
 800e1ce:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
 800e1d2:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800e1d6:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800e1da:	b16b      	cbz	r3, 800e1f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
 800e1dc:	eef0 1a49 	vmov.f32	s3, s18
 800e1e0:	eeb0 1a69 	vmov.f32	s2, s19
 800e1e4:	eef0 0a62 	vmov.f32	s1, s5
 800e1e8:	eeb0 0a42 	vmov.f32	s0, s4
 800e1ec:	4620      	mov	r0, r4
 800e1ee:	f7ff feb1 	bl	800df54 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800e1f2:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
 800e1f6:	e7db      	b.n	800e1b0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
 800e1f8:	eef0 4a48 	vmov.f32	s9, s16
 800e1fc:	eeb0 4a68 	vmov.f32	s8, s17
 800e200:	eef0 3a49 	vmov.f32	s7, s18
 800e204:	eeb0 3a69 	vmov.f32	s6, s19
 800e208:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800e20c:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800e210:	4620      	mov	r0, r4
 800e212:	f7ff fe13 	bl	800de3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800e216:	e7cb      	b.n	800e1b0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

0800e218 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
 800e218:	ee07 2a90 	vmov	s15, r2
 800e21c:	ee07 1a10 	vmov	s14, r1
 800e220:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800e224:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 800e228:	eddf 7a03 	vldr	s15, [pc, #12]	@ 800e238 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
 800e22c:	ee60 0aa7 	vmul.f32	s1, s1, s15
 800e230:	ee20 0a27 	vmul.f32	s0, s0, s15
 800e234:	f7ff bf76 	b.w	800e124 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800e238:	3d000000 	.word	0x3d000000

0800e23c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
 800e23c:	b538      	push	{r3, r4, r5, lr}
 800e23e:	ed2d 8b02 	vpush	{d8}
 800e242:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
 800e246:	4604      	mov	r4, r0
 800e248:	b31d      	cbz	r5, 800e292 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
 800e24a:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
 800e24e:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800e252:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
 800e256:	ee78 8a67 	vsub.f32	s17, s16, s15
 800e25a:	ee38 8a27 	vadd.f32	s16, s16, s15
 800e25e:	eef0 0a68 	vmov.f32	s1, s17
 800e262:	f7ff fd07 	bl	800dc74 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800e266:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800e26a:	eef0 1a48 	vmov.f32	s3, s16
 800e26e:	eeb0 0a41 	vmov.f32	s0, s2
 800e272:	eef0 0a68 	vmov.f32	s1, s17
 800e276:	4620      	mov	r0, r4
 800e278:	f7ff fe6c 	bl	800df54 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800e27c:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800e280:	eef0 1a68 	vmov.f32	s3, s17
 800e284:	eef0 0a48 	vmov.f32	s1, s16
 800e288:	eeb0 0a41 	vmov.f32	s0, s2
 800e28c:	4620      	mov	r0, r4
 800e28e:	f7ff fe61 	bl	800df54 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800e292:	ecbd 8b02 	vpop	{d8}
 800e296:	4628      	mov	r0, r5
 800e298:	bd38      	pop	{r3, r4, r5, pc}

0800e29a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
 800e29a:	b510      	push	{r4, lr}
 800e29c:	ed2d 8b02 	vpush	{d8}
 800e2a0:	4604      	mov	r4, r0
 800e2a2:	eeb0 8a40 	vmov.f32	s16, s0
 800e2a6:	eef0 8a60 	vmov.f32	s17, s1
 800e2aa:	f7ff ffc7 	bl	800e23c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800e2ae:	b9d0      	cbnz	r0, 800e2e6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
 800e2b0:	4620      	mov	r0, r4
 800e2b2:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
 800e2b6:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
 800e2ba:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
 800e2be:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
 800e2c2:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800e2c6:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800e2ca:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800e2ce:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800e2d2:	eef0 0a68 	vmov.f32	s1, s17
 800e2d6:	eeb0 0a48 	vmov.f32	s0, s16
 800e2da:	f7ff fdaf 	bl	800de3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800e2de:	2001      	movs	r0, #1
 800e2e0:	ecbd 8b02 	vpop	{d8}
 800e2e4:	bd10      	pop	{r4, pc}
 800e2e6:	2000      	movs	r0, #0
 800e2e8:	e7fa      	b.n	800e2e0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

0800e2ea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
 800e2ea:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
 800e2ee:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
 800e2f2:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
 800e2f6:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
 800e2fa:	f7ff be2b 	b.w	800df54 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

0800e300 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
 800e300:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e304:	b089      	sub	sp, #36	@ 0x24
 800e306:	461c      	mov	r4, r3
 800e308:	f10d 0820 	add.w	r8, sp, #32
 800e30c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800e310:	9304      	str	r3, [sp, #16]
 800e312:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 800e314:	9105      	str	r1, [sp, #20]
 800e316:	2300      	movs	r3, #0
 800e318:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
 800e31c:	9306      	str	r3, [sp, #24]
 800e31e:	f848 3d04 	str.w	r3, [r8, #-4]!
 800e322:	9b04      	ldr	r3, [sp, #16]
 800e324:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
 800e328:	4682      	mov	sl, r0
 800e32a:	4615      	mov	r5, r2
 800e32c:	9b05      	ldr	r3, [sp, #20]
 800e32e:	429d      	cmp	r5, r3
 800e330:	d96d      	bls.n	800e40e <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
 800e332:	3d01      	subs	r5, #1
 800e334:	f819 3005 	ldrb.w	r3, [r9, r5]
 800e338:	2b06      	cmp	r3, #6
 800e33a:	d8f7      	bhi.n	800e32c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800e33c:	a201      	add	r2, pc, #4	@ (adr r2, 800e344 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
 800e33e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e342:	bf00      	nop
 800e344:	0800e363 	.word	0x0800e363
 800e348:	0800e32d 	.word	0x0800e32d
 800e34c:	0800e361 	.word	0x0800e361
 800e350:	0800e385 	.word	0x0800e385
 800e354:	0800e385 	.word	0x0800e385
 800e358:	0800e389 	.word	0x0800e389
 800e35c:	0800e3c9 	.word	0x0800e3c9
 800e360:	3c02      	subs	r4, #2
 800e362:	4650      	mov	r0, sl
 800e364:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800e368:	9400      	str	r4, [sp, #0]
 800e36a:	462b      	mov	r3, r5
 800e36c:	4642      	mov	r2, r8
 800e36e:	a906      	add	r1, sp, #24
 800e370:	f7ff fcae 	bl	800dcd0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800e374:	eddd 0a07 	vldr	s1, [sp, #28]
 800e378:	ed9d 0a06 	vldr	s0, [sp, #24]
 800e37c:	4630      	mov	r0, r6
 800e37e:	f7ff fed1 	bl	800e124 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800e382:	e7d3      	b.n	800e32c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800e384:	3c01      	subs	r4, #1
 800e386:	e7ec      	b.n	800e362 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
 800e388:	f1a4 0b04 	sub.w	fp, r4, #4
 800e38c:	3c02      	subs	r4, #2
 800e38e:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800e392:	4650      	mov	r0, sl
 800e394:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800e398:	f8cd b000 	str.w	fp, [sp]
 800e39c:	462b      	mov	r3, r5
 800e39e:	4642      	mov	r2, r8
 800e3a0:	a906      	add	r1, sp, #24
 800e3a2:	f7ff fc95 	bl	800dcd0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800e3a6:	eddd 2a07 	vldr	s5, [sp, #28]
 800e3aa:	ed9d 2a06 	vldr	s4, [sp, #24]
 800e3ae:	ed54 1a01 	vldr	s3, [r4, #-4]
 800e3b2:	ed14 1a02 	vldr	s2, [r4, #-8]
 800e3b6:	edd4 0a01 	vldr	s1, [r4, #4]
 800e3ba:	ed94 0a00 	vldr	s0, [r4]
 800e3be:	4630      	mov	r0, r6
 800e3c0:	f7ff fc1a 	bl	800dbf8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800e3c4:	465c      	mov	r4, fp
 800e3c6:	e7b1      	b.n	800e32c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800e3c8:	f1a4 0b06 	sub.w	fp, r4, #6
 800e3cc:	3c02      	subs	r4, #2
 800e3ce:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800e3d2:	4650      	mov	r0, sl
 800e3d4:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800e3d8:	f8cd b000 	str.w	fp, [sp]
 800e3dc:	462b      	mov	r3, r5
 800e3de:	4642      	mov	r2, r8
 800e3e0:	a906      	add	r1, sp, #24
 800e3e2:	f7ff fc75 	bl	800dcd0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800e3e6:	eddd 3a07 	vldr	s7, [sp, #28]
 800e3ea:	ed9d 3a06 	vldr	s6, [sp, #24]
 800e3ee:	ed54 2a03 	vldr	s5, [r4, #-12]
 800e3f2:	ed14 2a04 	vldr	s4, [r4, #-16]
 800e3f6:	ed54 1a01 	vldr	s3, [r4, #-4]
 800e3fa:	ed14 1a02 	vldr	s2, [r4, #-8]
 800e3fe:	edd4 0a01 	vldr	s1, [r4, #4]
 800e402:	ed94 0a00 	vldr	s0, [r4]
 800e406:	4630      	mov	r0, r6
 800e408:	f7ff fc15 	bl	800dc36 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800e40c:	e7da      	b.n	800e3c4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
 800e40e:	9b04      	ldr	r3, [sp, #16]
 800e410:	b113      	cbz	r3, 800e418 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
 800e412:	4630      	mov	r0, r6
 800e414:	f7ff ff69 	bl	800e2ea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
 800e418:	b009      	add	sp, #36	@ 0x24
 800e41a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e41e:	bf00      	nop

0800e420 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
 800e420:	eef0 7a60 	vmov.f32	s15, s1
 800e424:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800e428:	6803      	ldr	r3, [r0, #0]
 800e42a:	ee17 2a90 	vmov	r2, s15
 800e42e:	eef0 7a40 	vmov.f32	s15, s0
 800e432:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800e436:	689b      	ldr	r3, [r3, #8]
 800e438:	ee17 1a90 	vmov	r1, s15
 800e43c:	4718      	bx	r3
	...

0800e440 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
 800e440:	b510      	push	{r4, lr}
 800e442:	4b04      	ldr	r3, [pc, #16]	@ (800e454 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
 800e444:	4604      	mov	r4, r0
 800e446:	f840 3b14 	str.w	r3, [r0], #20
 800e44a:	f000 fea7 	bl	800f19c <_ZN8touchgfx7OutlineD1Ev>
 800e44e:	4620      	mov	r0, r4
 800e450:	bd10      	pop	{r4, pc}
 800e452:	bf00      	nop
 800e454:	08028938 	.word	0x08028938

0800e458 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
 800e458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e45c:	ed2d 8b04 	vpush	{d8-d9}
 800e460:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 800e464:	b0b5      	sub	sp, #212	@ 0xd4
 800e466:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800e46a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e46e:	4605      	mov	r5, r0
 800e470:	468b      	mov	fp, r1
 800e472:	9206      	str	r2, [sp, #24]
 800e474:	461e      	mov	r6, r3
 800e476:	f04f 0400 	mov.w	r4, #0
 800e47a:	f240 814e 	bls.w	800e71a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
 800e47e:	23ff      	movs	r3, #255	@ 0xff
 800e480:	9300      	str	r3, [sp, #0]
 800e482:	1d02      	adds	r2, r0, #4
 800e484:	6981      	ldr	r1, [r0, #24]
 800e486:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 800e488:	ed9f 9aa5 	vldr	s18, [pc, #660]	@ 800e720 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
 800e48c:	a808      	add	r0, sp, #32
 800e48e:	f015 fb71 	bl	8023b74 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800e492:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
 800e496:	4ba3      	ldr	r3, [pc, #652]	@ (800e724 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
 800e498:	edd5 6a08 	vldr	s13, [r5, #32]
 800e49c:	9308      	str	r3, [sp, #32]
 800e49e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800e4a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e4a6:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800e4aa:	bf48      	it	mi
 800e4ac:	eef1 7a67 	vnegmi.f32	s15, s15
 800e4b0:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e4b4:	f105 0334 	add.w	r3, r5, #52	@ 0x34
 800e4b8:	2201      	movs	r2, #1
 800e4ba:	9325      	str	r3, [sp, #148]	@ 0x94
 800e4bc:	2300      	movs	r3, #0
 800e4be:	ee26 7aa7 	vmul.f32	s14, s13, s15
 800e4c2:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
 800e4c6:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
 800e4ca:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
 800e4ce:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
 800e4d2:	7f6a      	ldrb	r2, [r5, #29]
 800e4d4:	7fab      	ldrb	r3, [r5, #30]
 800e4d6:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 800e4da:	435a      	muls	r2, r3
 800e4dc:	ee27 7a26 	vmul.f32	s14, s14, s13
 800e4e0:	1c53      	adds	r3, r2, #1
 800e4e2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 800e4e6:	ee67 7a27 	vmul.f32	s15, s14, s15
 800e4ea:	f04f 0800 	mov.w	r8, #0
 800e4ee:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
 800e4f2:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 800e4f6:	942a      	str	r4, [sp, #168]	@ 0xa8
 800e4f8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 800e4fc:	942b      	str	r4, [sp, #172]	@ 0xac
 800e4fe:	942c      	str	r4, [sp, #176]	@ 0xb0
 800e500:	942d      	str	r4, [sp, #180]	@ 0xb4
 800e502:	942e      	str	r4, [sp, #184]	@ 0xb8
 800e504:	942f      	str	r4, [sp, #188]	@ 0xbc
 800e506:	9430      	str	r4, [sp, #192]	@ 0xc0
 800e508:	9431      	str	r4, [sp, #196]	@ 0xc4
 800e50a:	9432      	str	r4, [sp, #200]	@ 0xc8
 800e50c:	9433      	str	r4, [sp, #204]	@ 0xcc
 800e50e:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
 800e512:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
 800e516:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
 800e51a:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
 800e51e:	eef0 9a49 	vmov.f32	s19, s18
 800e522:	eeb0 8a49 	vmov.f32	s16, s18
 800e526:	eef0 8a49 	vmov.f32	s17, s18
 800e52a:	4644      	mov	r4, r8
 800e52c:	46c1      	mov	r9, r8
 800e52e:	af08      	add	r7, sp, #32
 800e530:	f04f 0a01 	mov.w	sl, #1
 800e534:	9b06      	ldr	r3, [sp, #24]
 800e536:	454b      	cmp	r3, r9
 800e538:	f000 80cc 	beq.w	800e6d4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
 800e53c:	f109 0301 	add.w	r3, r9, #1
 800e540:	9305      	str	r3, [sp, #20]
 800e542:	f81b 3009 	ldrb.w	r3, [fp, r9]
 800e546:	2b06      	cmp	r3, #6
 800e548:	d839      	bhi.n	800e5be <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800e54a:	e8df f003 	tbb	[pc, r3]
 800e54e:	3b04      	.short	0x3b04
 800e550:	817c6f60 	.word	0x817c6f60
 800e554:	a0          	.byte	0xa0
 800e555:	00          	.byte	0x00
 800e556:	45c1      	cmp	r9, r8
 800e558:	d92b      	bls.n	800e5b2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800e55a:	eef0 0a49 	vmov.f32	s1, s18
 800e55e:	eeb0 0a69 	vmov.f32	s0, s19
 800e562:	4638      	mov	r0, r7
 800e564:	f7ff fdde 	bl	800e124 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800e568:	4638      	mov	r0, r7
 800e56a:	f7ff fe67 	bl	800e23c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800e56e:	4681      	mov	r9, r0
 800e570:	b9f8      	cbnz	r0, 800e5b2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800e572:	eef0 0a49 	vmov.f32	s1, s18
 800e576:	eeb0 0a69 	vmov.f32	s0, s19
 800e57a:	4638      	mov	r0, r7
 800e57c:	f7ff fe8d 	bl	800e29a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800e580:	4628      	mov	r0, r5
 800e582:	e9cd 9702 	strd	r9, r7, [sp, #8]
 800e586:	e9cd b600 	strd	fp, r6, [sp]
 800e58a:	4623      	mov	r3, r4
 800e58c:	9a05      	ldr	r2, [sp, #20]
 800e58e:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
 800e592:	4641      	mov	r1, r8
 800e594:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
 800e598:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800e59c:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800e5a0:	f7ff feae 	bl	800e300 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800e5a4:	eef0 0a49 	vmov.f32	s1, s18
 800e5a8:	eeb0 0a69 	vmov.f32	s0, s19
 800e5ac:	4638      	mov	r0, r7
 800e5ae:	f7ff fe74 	bl	800e29a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800e5b2:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800e5b6:	eeb0 8a49 	vmov.f32	s16, s18
 800e5ba:	eef0 8a69 	vmov.f32	s17, s19
 800e5be:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800e5c2:	e7b7      	b.n	800e534 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
 800e5c4:	45c1      	cmp	r9, r8
 800e5c6:	d90d      	bls.n	800e5e4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800e5c8:	4638      	mov	r0, r7
 800e5ca:	f7ff fe37 	bl	800e23c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800e5ce:	b948      	cbnz	r0, 800e5e4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800e5d0:	e9cd a702 	strd	sl, r7, [sp, #8]
 800e5d4:	e9cd b600 	strd	fp, r6, [sp]
 800e5d8:	4623      	mov	r3, r4
 800e5da:	464a      	mov	r2, r9
 800e5dc:	4641      	mov	r1, r8
 800e5de:	4628      	mov	r0, r5
 800e5e0:	f7ff fe8e 	bl	800e300 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800e5e4:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800e5e8:	edd3 8a00 	vldr	s17, [r3]
 800e5ec:	ed93 8a01 	vldr	s16, [r3, #4]
 800e5f0:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
 800e5f4:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
 800e5f8:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800e5fc:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800e600:	3402      	adds	r4, #2
 800e602:	46c8      	mov	r8, r9
 800e604:	eeb0 9a48 	vmov.f32	s18, s16
 800e608:	eef0 9a68 	vmov.f32	s19, s17
 800e60c:	e7d7      	b.n	800e5be <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800e60e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800e612:	edd3 8a00 	vldr	s17, [r3]
 800e616:	ed93 8a01 	vldr	s16, [r3, #4]
 800e61a:	eeb0 0a68 	vmov.f32	s0, s17
 800e61e:	eef0 0a48 	vmov.f32	s1, s16
 800e622:	4638      	mov	r0, r7
 800e624:	f7ff fd7e 	bl	800e124 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800e628:	3402      	adds	r4, #2
 800e62a:	e7c8      	b.n	800e5be <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800e62c:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800e630:	edd3 8a00 	vldr	s17, [r3]
 800e634:	eef0 0a48 	vmov.f32	s1, s16
 800e638:	eeb0 0a68 	vmov.f32	s0, s17
 800e63c:	4638      	mov	r0, r7
 800e63e:	f7ff fd71 	bl	800e124 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800e642:	3401      	adds	r4, #1
 800e644:	e7bb      	b.n	800e5be <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800e646:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800e64a:	ed93 8a00 	vldr	s16, [r3]
 800e64e:	e7f1      	b.n	800e634 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
 800e650:	00a3      	lsls	r3, r4, #2
 800e652:	f103 0208 	add.w	r2, r3, #8
 800e656:	f103 090c 	add.w	r9, r3, #12
 800e65a:	4432      	add	r2, r6
 800e65c:	4433      	add	r3, r6
 800e65e:	44b1      	add	r9, r6
 800e660:	ed92 2a00 	vldr	s4, [r2]
 800e664:	edd9 2a00 	vldr	s5, [r9]
 800e668:	edd3 1a01 	vldr	s3, [r3, #4]
 800e66c:	ed93 1a00 	vldr	s2, [r3]
 800e670:	9207      	str	r2, [sp, #28]
 800e672:	eef0 0a48 	vmov.f32	s1, s16
 800e676:	eeb0 0a68 	vmov.f32	s0, s17
 800e67a:	4638      	mov	r0, r7
 800e67c:	f7ff fabc 	bl	800dbf8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800e680:	9a07      	ldr	r2, [sp, #28]
 800e682:	ed99 8a00 	vldr	s16, [r9]
 800e686:	edd2 8a00 	vldr	s17, [r2]
 800e68a:	3404      	adds	r4, #4
 800e68c:	e797      	b.n	800e5be <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800e68e:	00a3      	lsls	r3, r4, #2
 800e690:	f103 0210 	add.w	r2, r3, #16
 800e694:	f103 0914 	add.w	r9, r3, #20
 800e698:	4432      	add	r2, r6
 800e69a:	4433      	add	r3, r6
 800e69c:	44b1      	add	r9, r6
 800e69e:	ed92 3a00 	vldr	s6, [r2]
 800e6a2:	edd9 3a00 	vldr	s7, [r9]
 800e6a6:	edd3 2a03 	vldr	s5, [r3, #12]
 800e6aa:	ed93 2a02 	vldr	s4, [r3, #8]
 800e6ae:	edd3 1a01 	vldr	s3, [r3, #4]
 800e6b2:	ed93 1a00 	vldr	s2, [r3]
 800e6b6:	9207      	str	r2, [sp, #28]
 800e6b8:	eef0 0a48 	vmov.f32	s1, s16
 800e6bc:	eeb0 0a68 	vmov.f32	s0, s17
 800e6c0:	4638      	mov	r0, r7
 800e6c2:	f7ff fab8 	bl	800dc36 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800e6c6:	9a07      	ldr	r2, [sp, #28]
 800e6c8:	ed99 8a00 	vldr	s16, [r9]
 800e6cc:	edd2 8a00 	vldr	s17, [r2]
 800e6d0:	3406      	adds	r4, #6
 800e6d2:	e774      	b.n	800e5be <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800e6d4:	9b06      	ldr	r3, [sp, #24]
 800e6d6:	4543      	cmp	r3, r8
 800e6d8:	af08      	add	r7, sp, #32
 800e6da:	d90f      	bls.n	800e6fc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800e6dc:	4638      	mov	r0, r7
 800e6de:	f7ff fdad 	bl	800e23c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800e6e2:	b958      	cbnz	r0, 800e6fc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800e6e4:	2301      	movs	r3, #1
 800e6e6:	e9cd 6301 	strd	r6, r3, [sp, #4]
 800e6ea:	9703      	str	r7, [sp, #12]
 800e6ec:	f8cd b000 	str.w	fp, [sp]
 800e6f0:	4623      	mov	r3, r4
 800e6f2:	9a06      	ldr	r2, [sp, #24]
 800e6f4:	4641      	mov	r1, r8
 800e6f6:	4628      	mov	r0, r5
 800e6f8:	f7ff fe02 	bl	800e300 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800e6fc:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
 800e700:	4638      	mov	r0, r7
 800e702:	f015 facb 	bl	8023c9c <_ZN8touchgfx6Canvas6renderEh>
 800e706:	4604      	mov	r4, r0
 800e708:	4638      	mov	r0, r7
 800e70a:	f7ff fe99 	bl	800e440 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800e70e:	4620      	mov	r0, r4
 800e710:	b035      	add	sp, #212	@ 0xd4
 800e712:	ecbd 8b04 	vpop	{d8-d9}
 800e716:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e71a:	2401      	movs	r4, #1
 800e71c:	e7f7      	b.n	800e70e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
 800e71e:	bf00      	nop
 800e720:	00000000 	.word	0x00000000
 800e724:	08028278 	.word	0x08028278

0800e728 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
 800e728:	b510      	push	{r4, lr}
 800e72a:	4604      	mov	r4, r0
 800e72c:	f7ff fe88 	bl	800e440 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800e730:	4620      	mov	r0, r4
 800e732:	21b0      	movs	r1, #176	@ 0xb0
 800e734:	f015 fe81 	bl	802443a <_ZdlPvj>
 800e738:	4620      	mov	r0, r4
 800e73a:	bd10      	pop	{r4, pc}

0800e73c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
 800e73c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e740:	ed2d 8b06 	vpush	{d8-d10}
 800e744:	b0aa      	sub	sp, #168	@ 0xa8
 800e746:	4698      	mov	r8, r3
 800e748:	23ff      	movs	r3, #255	@ 0xff
 800e74a:	4607      	mov	r7, r0
 800e74c:	9300      	str	r3, [sp, #0]
 800e74e:	4689      	mov	r9, r1
 800e750:	4692      	mov	sl, r2
 800e752:	6981      	ldr	r1, [r0, #24]
 800e754:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 800e756:	ed9f 8a82 	vldr	s16, [pc, #520]	@ 800e960 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800e75a:	1d02      	adds	r2, r0, #4
 800e75c:	a80d      	add	r0, sp, #52	@ 0x34
 800e75e:	f015 fa09 	bl	8023b74 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800e762:	7f3b      	ldrb	r3, [r7, #28]
 800e764:	eddf 0a7e 	vldr	s1, [pc, #504]	@ 800e960 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800e768:	1e5a      	subs	r2, r3, #1
 800e76a:	4253      	negs	r3, r2
 800e76c:	f107 0534 	add.w	r5, r7, #52	@ 0x34
 800e770:	4153      	adcs	r3, r2
 800e772:	eeb0 0a60 	vmov.f32	s0, s1
 800e776:	4628      	mov	r0, r5
 800e778:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
 800e77c:	f004 fe7b 	bl	8013476 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800e780:	44ca      	add	sl, r9
 800e782:	eeb0 9a40 	vmov.f32	s18, s0
 800e786:	eef0 9a60 	vmov.f32	s19, s1
 800e78a:	eef0 8a48 	vmov.f32	s17, s16
 800e78e:	2400      	movs	r4, #0
 800e790:	45ca      	cmp	sl, r9
 800e792:	f000 80cd 	beq.w	800e930 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
 800e796:	f819 3b01 	ldrb.w	r3, [r9], #1
 800e79a:	2b06      	cmp	r3, #6
 800e79c:	d8f8      	bhi.n	800e790 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800e79e:	e8df f003 	tbb	[pc, r3]
 800e7a2:	0804      	.short	0x0804
 800e7a4:	58533f2a 	.word	0x58533f2a
 800e7a8:	8a          	.byte	0x8a
 800e7a9:	00          	.byte	0x00
 800e7aa:	a80d      	add	r0, sp, #52	@ 0x34
 800e7ac:	f015 fa54 	bl	8023c58 <_ZN8touchgfx6Canvas5closeEv>
 800e7b0:	e7ee      	b.n	800e790 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800e7b2:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800e7b6:	edd3 8a00 	vldr	s17, [r3]
 800e7ba:	ed93 8a01 	vldr	s16, [r3, #4]
 800e7be:	eeb0 0a68 	vmov.f32	s0, s17
 800e7c2:	eef0 0a48 	vmov.f32	s1, s16
 800e7c6:	4628      	mov	r0, r5
 800e7c8:	f004 fe55 	bl	8013476 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800e7cc:	eef0 7a60 	vmov.f32	s15, s1
 800e7d0:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800e7d4:	a80d      	add	r0, sp, #52	@ 0x34
 800e7d6:	ee17 2a90 	vmov	r2, s15
 800e7da:	eef0 7a40 	vmov.f32	s15, s0
 800e7de:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800e7e2:	eeb0 9a40 	vmov.f32	s18, s0
 800e7e6:	ee17 1a90 	vmov	r1, s15
 800e7ea:	eef0 9a60 	vmov.f32	s19, s1
 800e7ee:	f015 fb0d 	bl	8023e0c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800e7f2:	3402      	adds	r4, #2
 800e7f4:	e7cc      	b.n	800e790 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800e7f6:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800e7fa:	edd3 8a00 	vldr	s17, [r3]
 800e7fe:	ed93 8a01 	vldr	s16, [r3, #4]
 800e802:	eeb0 0a68 	vmov.f32	s0, s17
 800e806:	eef0 0a48 	vmov.f32	s1, s16
 800e80a:	4628      	mov	r0, r5
 800e80c:	f004 fe33 	bl	8013476 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800e810:	a80d      	add	r0, sp, #52	@ 0x34
 800e812:	eeb0 9a40 	vmov.f32	s18, s0
 800e816:	eef0 9a60 	vmov.f32	s19, s1
 800e81a:	f7ff fe01 	bl	800e420 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800e81e:	e7e8      	b.n	800e7f2 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
 800e820:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800e824:	edd3 8a00 	vldr	s17, [r3]
 800e828:	eef0 0a48 	vmov.f32	s1, s16
 800e82c:	eeb0 0a68 	vmov.f32	s0, s17
 800e830:	4628      	mov	r0, r5
 800e832:	f004 fe20 	bl	8013476 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800e836:	a80d      	add	r0, sp, #52	@ 0x34
 800e838:	eeb0 9a40 	vmov.f32	s18, s0
 800e83c:	eef0 9a60 	vmov.f32	s19, s1
 800e840:	3401      	adds	r4, #1
 800e842:	f7ff fded 	bl	800e420 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800e846:	e7a3      	b.n	800e790 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800e848:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800e84c:	ed93 8a00 	vldr	s16, [r3]
 800e850:	e7ea      	b.n	800e828 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
 800e852:	1ca3      	adds	r3, r4, #2
 800e854:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 800e858:	ed53 0a01 	vldr	s1, [r3, #-4]
 800e85c:	ed13 0a02 	vldr	s0, [r3, #-8]
 800e860:	edd3 8a00 	vldr	s17, [r3]
 800e864:	ed93 8a01 	vldr	s16, [r3, #4]
 800e868:	4628      	mov	r0, r5
 800e86a:	f004 fe04 	bl	8013476 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800e86e:	4628      	mov	r0, r5
 800e870:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800e874:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800e878:	eeb0 0a68 	vmov.f32	s0, s17
 800e87c:	eef0 0a48 	vmov.f32	s1, s16
 800e880:	f004 fdf9 	bl	8013476 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800e884:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
 800e888:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
 800e88c:	eef0 2a60 	vmov.f32	s5, s1
 800e890:	eeb0 2a40 	vmov.f32	s4, s0
 800e894:	eeb0 aa40 	vmov.f32	s20, s0
 800e898:	eef0 aa60 	vmov.f32	s21, s1
 800e89c:	eeb0 0a49 	vmov.f32	s0, s18
 800e8a0:	eef0 0a69 	vmov.f32	s1, s19
 800e8a4:	a80d      	add	r0, sp, #52	@ 0x34
 800e8a6:	f7ff f9a7 	bl	800dbf8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800e8aa:	3404      	adds	r4, #4
 800e8ac:	eef0 9a6a 	vmov.f32	s19, s21
 800e8b0:	eeb0 9a4a 	vmov.f32	s18, s20
 800e8b4:	e76c      	b.n	800e790 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800e8b6:	1d26      	adds	r6, r4, #4
 800e8b8:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 800e8bc:	ed56 0a03 	vldr	s1, [r6, #-12]
 800e8c0:	ed16 0a04 	vldr	s0, [r6, #-16]
 800e8c4:	edd6 8a00 	vldr	s17, [r6]
 800e8c8:	ed96 8a01 	vldr	s16, [r6, #4]
 800e8cc:	4628      	mov	r0, r5
 800e8ce:	f004 fdd2 	bl	8013476 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800e8d2:	4628      	mov	r0, r5
 800e8d4:	ed8d 0a07 	vstr	s0, [sp, #28]
 800e8d8:	edcd 0a08 	vstr	s1, [sp, #32]
 800e8dc:	ed16 0a02 	vldr	s0, [r6, #-8]
 800e8e0:	ed56 0a01 	vldr	s1, [r6, #-4]
 800e8e4:	f004 fdc7 	bl	8013476 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800e8e8:	4628      	mov	r0, r5
 800e8ea:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800e8ee:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800e8f2:	eeb0 0a68 	vmov.f32	s0, s17
 800e8f6:	eef0 0a48 	vmov.f32	s1, s16
 800e8fa:	f004 fdbc 	bl	8013476 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800e8fe:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
 800e902:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
 800e906:	eddd 1a08 	vldr	s3, [sp, #32]
 800e90a:	ed9d 1a07 	vldr	s2, [sp, #28]
 800e90e:	eef0 3a60 	vmov.f32	s7, s1
 800e912:	eeb0 3a40 	vmov.f32	s6, s0
 800e916:	eeb0 aa40 	vmov.f32	s20, s0
 800e91a:	eef0 aa60 	vmov.f32	s21, s1
 800e91e:	eeb0 0a49 	vmov.f32	s0, s18
 800e922:	eef0 0a69 	vmov.f32	s1, s19
 800e926:	a80d      	add	r0, sp, #52	@ 0x34
 800e928:	f7ff f985 	bl	800dc36 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800e92c:	3406      	adds	r4, #6
 800e92e:	e7bd      	b.n	800e8ac <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
 800e930:	7f7b      	ldrb	r3, [r7, #29]
 800e932:	7fb9      	ldrb	r1, [r7, #30]
 800e934:	4359      	muls	r1, r3
 800e936:	1c4b      	adds	r3, r1, #1
 800e938:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 800e93c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 800e940:	a80d      	add	r0, sp, #52	@ 0x34
 800e942:	f015 f9ab 	bl	8023c9c <_ZN8touchgfx6Canvas6renderEh>
 800e946:	4b07      	ldr	r3, [pc, #28]	@ (800e964 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
 800e948:	930d      	str	r3, [sp, #52]	@ 0x34
 800e94a:	4604      	mov	r4, r0
 800e94c:	a812      	add	r0, sp, #72	@ 0x48
 800e94e:	f000 fc25 	bl	800f19c <_ZN8touchgfx7OutlineD1Ev>
 800e952:	4620      	mov	r0, r4
 800e954:	b02a      	add	sp, #168	@ 0xa8
 800e956:	ecbd 8b06 	vpop	{d8-d10}
 800e95a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e95e:	bf00      	nop
 800e960:	00000000 	.word	0x00000000
 800e964:	08028938 	.word	0x08028938

0800e968 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
 800e968:	b410      	push	{r4}
 800e96a:	7f04      	ldrb	r4, [r0, #28]
 800e96c:	b11c      	cbz	r4, 800e976 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
 800e96e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e972:	f7ff bee3 	b.w	800e73c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
 800e976:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e97a:	f7ff bd6d 	b.w	800e458 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

0800e980 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
 800e980:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e984:	4691      	mov	r9, r2
 800e986:	4602      	mov	r2, r0
 800e988:	4605      	mov	r5, r0
 800e98a:	f852 0f26 	ldr.w	r0, [r2, #38]!
 800e98e:	b085      	sub	sp, #20
 800e990:	4688      	mov	r8, r1
 800e992:	6851      	ldr	r1, [r2, #4]
 800e994:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
 800e998:	469a      	mov	sl, r3
 800e99a:	ab02      	add	r3, sp, #8
 800e99c:	c303      	stmia	r3!, {r0, r1}
 800e99e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800e9a2:	2b00      	cmp	r3, #0
 800e9a4:	af02      	add	r7, sp, #8
 800e9a6:	dd08      	ble.n	800e9ba <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800e9a8:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
 800e9ac:	2c00      	cmp	r4, #0
 800e9ae:	dd04      	ble.n	800e9ba <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800e9b0:	4a2e      	ldr	r2, [pc, #184]	@ (800ea6c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
 800e9b2:	7812      	ldrb	r2, [r2, #0]
 800e9b4:	b122      	cbz	r2, 800e9c0 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
 800e9b6:	2a01      	cmp	r2, #1
 800e9b8:	d02d      	beq.n	800ea16 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
 800e9ba:	b005      	add	sp, #20
 800e9bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e9c0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800e9c4:	441c      	add	r4, r3
 800e9c6:	b2a4      	uxth	r4, r4
 800e9c8:	b226      	sxth	r6, r4
 800e9ca:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800e9ce:	42b3      	cmp	r3, r6
 800e9d0:	daf3      	bge.n	800e9ba <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800e9d2:	e9cd b700 	strd	fp, r7, [sp]
 800e9d6:	4653      	mov	r3, sl
 800e9d8:	464a      	mov	r2, r9
 800e9da:	4641      	mov	r1, r8
 800e9dc:	4628      	mov	r0, r5
 800e9de:	f7ff ffc3 	bl	800e968 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800e9e2:	b940      	cbnz	r0, 800e9f6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800e9e4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800e9e8:	2b01      	cmp	r3, #1
 800e9ea:	d004      	beq.n	800e9f6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800e9ec:	3301      	adds	r3, #1
 800e9ee:	105b      	asrs	r3, r3, #1
 800e9f0:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e9f4:	e7ed      	b.n	800e9d2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
 800e9f6:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800e9fa:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800e9fe:	4413      	add	r3, r2
 800ea00:	b29b      	uxth	r3, r3
 800ea02:	441a      	add	r2, r3
 800ea04:	b212      	sxth	r2, r2
 800ea06:	4296      	cmp	r6, r2
 800ea08:	f8ad 300a 	strh.w	r3, [sp, #10]
 800ea0c:	dadd      	bge.n	800e9ca <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800ea0e:	1ae3      	subs	r3, r4, r3
 800ea10:	f8ad 300e 	strh.w	r3, [sp, #14]
 800ea14:	e7d9      	b.n	800e9ca <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800ea16:	f8bd 4008 	ldrh.w	r4, [sp, #8]
 800ea1a:	441c      	add	r4, r3
 800ea1c:	b2a4      	uxth	r4, r4
 800ea1e:	b226      	sxth	r6, r4
 800ea20:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800ea24:	42b3      	cmp	r3, r6
 800ea26:	dac8      	bge.n	800e9ba <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800ea28:	e9cd b700 	strd	fp, r7, [sp]
 800ea2c:	4653      	mov	r3, sl
 800ea2e:	464a      	mov	r2, r9
 800ea30:	4641      	mov	r1, r8
 800ea32:	4628      	mov	r0, r5
 800ea34:	f7ff ff98 	bl	800e968 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800ea38:	b940      	cbnz	r0, 800ea4c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800ea3a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800ea3e:	2b01      	cmp	r3, #1
 800ea40:	d004      	beq.n	800ea4c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800ea42:	3301      	adds	r3, #1
 800ea44:	105b      	asrs	r3, r3, #1
 800ea46:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ea4a:	e7ed      	b.n	800ea28 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
 800ea4c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800ea50:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800ea54:	4413      	add	r3, r2
 800ea56:	b29b      	uxth	r3, r3
 800ea58:	441a      	add	r2, r3
 800ea5a:	b212      	sxth	r2, r2
 800ea5c:	4296      	cmp	r6, r2
 800ea5e:	f8ad 3008 	strh.w	r3, [sp, #8]
 800ea62:	dadd      	bge.n	800ea20 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800ea64:	1ae3      	subs	r3, r4, r3
 800ea66:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ea6a:	e7d9      	b.n	800ea20 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800ea6c:	20015230 	.word	0x20015230

0800ea70 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800ea70:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ea72:	6803      	ldr	r3, [r0, #0]
 800ea74:	460d      	mov	r5, r1
 800ea76:	4604      	mov	r4, r0
 800ea78:	4601      	mov	r1, r0
 800ea7a:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800ea7c:	a802      	add	r0, sp, #8
 800ea7e:	4798      	blx	r3
 800ea80:	6828      	ldr	r0, [r5, #0]
 800ea82:	6869      	ldr	r1, [r5, #4]
 800ea84:	466b      	mov	r3, sp
 800ea86:	c303      	stmia	r3!, {r0, r1}
 800ea88:	4668      	mov	r0, sp
 800ea8a:	4619      	mov	r1, r3
 800ea8c:	f7fd fb96 	bl	800c1bc <_ZN8touchgfx4RectaNERKS0_>
 800ea90:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800ea92:	b188      	cbz	r0, 800eab8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800ea94:	6803      	ldr	r3, [r0, #0]
 800ea96:	1d21      	adds	r1, r4, #4
 800ea98:	68db      	ldr	r3, [r3, #12]
 800ea9a:	4798      	blx	r3
 800ea9c:	b160      	cbz	r0, 800eab8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800ea9e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800eaa2:	2b00      	cmp	r3, #0
 800eaa4:	dd08      	ble.n	800eab8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800eaa6:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800eaaa:	2d00      	cmp	r5, #0
 800eaac:	dd04      	ble.n	800eab8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800eaae:	4a2b      	ldr	r2, [pc, #172]	@ (800eb5c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 800eab0:	7812      	ldrb	r2, [r2, #0]
 800eab2:	b11a      	cbz	r2, 800eabc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 800eab4:	2a01      	cmp	r2, #1
 800eab6:	d029      	beq.n	800eb0c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 800eab8:	b004      	add	sp, #16
 800eaba:	bd70      	pop	{r4, r5, r6, pc}
 800eabc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800eac0:	441d      	add	r5, r3
 800eac2:	b2ad      	uxth	r5, r5
 800eac4:	b22e      	sxth	r6, r5
 800eac6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800eaca:	42b3      	cmp	r3, r6
 800eacc:	daf4      	bge.n	800eab8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800eace:	6823      	ldr	r3, [r4, #0]
 800ead0:	4669      	mov	r1, sp
 800ead2:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800ead4:	4620      	mov	r0, r4
 800ead6:	4798      	blx	r3
 800ead8:	b940      	cbnz	r0, 800eaec <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800eada:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800eade:	2b01      	cmp	r3, #1
 800eae0:	d004      	beq.n	800eaec <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800eae2:	3301      	adds	r3, #1
 800eae4:	105b      	asrs	r3, r3, #1
 800eae6:	f8ad 3006 	strh.w	r3, [sp, #6]
 800eaea:	e7f0      	b.n	800eace <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800eaec:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800eaf0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800eaf4:	4413      	add	r3, r2
 800eaf6:	b29b      	uxth	r3, r3
 800eaf8:	441a      	add	r2, r3
 800eafa:	b212      	sxth	r2, r2
 800eafc:	4296      	cmp	r6, r2
 800eafe:	f8ad 3002 	strh.w	r3, [sp, #2]
 800eb02:	dae0      	bge.n	800eac6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800eb04:	1aeb      	subs	r3, r5, r3
 800eb06:	f8ad 3006 	strh.w	r3, [sp, #6]
 800eb0a:	e7dc      	b.n	800eac6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800eb0c:	f8bd 5000 	ldrh.w	r5, [sp]
 800eb10:	441d      	add	r5, r3
 800eb12:	b2ad      	uxth	r5, r5
 800eb14:	b22e      	sxth	r6, r5
 800eb16:	f9bd 3000 	ldrsh.w	r3, [sp]
 800eb1a:	42b3      	cmp	r3, r6
 800eb1c:	dacc      	bge.n	800eab8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800eb1e:	6823      	ldr	r3, [r4, #0]
 800eb20:	4669      	mov	r1, sp
 800eb22:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800eb24:	4620      	mov	r0, r4
 800eb26:	4798      	blx	r3
 800eb28:	b940      	cbnz	r0, 800eb3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800eb2a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800eb2e:	2b01      	cmp	r3, #1
 800eb30:	d004      	beq.n	800eb3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800eb32:	3301      	adds	r3, #1
 800eb34:	105b      	asrs	r3, r3, #1
 800eb36:	f8ad 3004 	strh.w	r3, [sp, #4]
 800eb3a:	e7f0      	b.n	800eb1e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800eb3c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800eb40:	f8bd 3000 	ldrh.w	r3, [sp]
 800eb44:	4413      	add	r3, r2
 800eb46:	b29b      	uxth	r3, r3
 800eb48:	441a      	add	r2, r3
 800eb4a:	b212      	sxth	r2, r2
 800eb4c:	4296      	cmp	r6, r2
 800eb4e:	f8ad 3000 	strh.w	r3, [sp]
 800eb52:	dae0      	bge.n	800eb16 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800eb54:	1aeb      	subs	r3, r5, r3
 800eb56:	f8ad 3004 	strh.w	r3, [sp, #4]
 800eb5a:	e7dc      	b.n	800eb16 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800eb5c:	20015230 	.word	0x20015230

0800eb60 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800eb60:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800eb62:	6803      	ldr	r3, [r0, #0]
 800eb64:	4604      	mov	r4, r0
 800eb66:	4601      	mov	r1, r0
 800eb68:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800eb6a:	4668      	mov	r0, sp
 800eb6c:	4798      	blx	r3
 800eb6e:	2100      	movs	r1, #0
 800eb70:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800eb74:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800eb78:	9102      	str	r1, [sp, #8]
 800eb7a:	4668      	mov	r0, sp
 800eb7c:	a902      	add	r1, sp, #8
 800eb7e:	f8ad 200c 	strh.w	r2, [sp, #12]
 800eb82:	f8ad 300e 	strh.w	r3, [sp, #14]
 800eb86:	f7fd fb19 	bl	800c1bc <_ZN8touchgfx4RectaNERKS0_>
 800eb8a:	6823      	ldr	r3, [r4, #0]
 800eb8c:	4669      	mov	r1, sp
 800eb8e:	691b      	ldr	r3, [r3, #16]
 800eb90:	4620      	mov	r0, r4
 800eb92:	4798      	blx	r3
 800eb94:	b004      	add	sp, #16
 800eb96:	bd10      	pop	{r4, pc}

0800eb98 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800eb98:	2101      	movs	r1, #1
 800eb9a:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800eb9e:	490b      	ldr	r1, [pc, #44]	@ (800ebcc <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800eba0:	6001      	str	r1, [r0, #0]
 800eba2:	2200      	movs	r2, #0
 800eba4:	21ff      	movs	r1, #255	@ 0xff
 800eba6:	8082      	strh	r2, [r0, #4]
 800eba8:	80c2      	strh	r2, [r0, #6]
 800ebaa:	8102      	strh	r2, [r0, #8]
 800ebac:	8142      	strh	r2, [r0, #10]
 800ebae:	8182      	strh	r2, [r0, #12]
 800ebb0:	81c2      	strh	r2, [r0, #14]
 800ebb2:	8202      	strh	r2, [r0, #16]
 800ebb4:	8242      	strh	r2, [r0, #18]
 800ebb6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800ebba:	61c2      	str	r2, [r0, #28]
 800ebbc:	8402      	strh	r2, [r0, #32]
 800ebbe:	8442      	strh	r2, [r0, #34]	@ 0x22
 800ebc0:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 800ebc4:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 800ebc8:	6282      	str	r2, [r0, #40]	@ 0x28
 800ebca:	4770      	bx	lr
 800ebcc:	080282d8 	.word	0x080282d8

0800ebd0 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800ebd0:	4b07      	ldr	r3, [pc, #28]	@ (800ebf0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800ebd2:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800ebd4:	881b      	ldrh	r3, [r3, #0]
 800ebd6:	4293      	cmp	r3, r2
 800ebd8:	bf81      	itttt	hi
 800ebda:	4b06      	ldrhi	r3, [pc, #24]	@ (800ebf4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800ebdc:	681b      	ldrhi	r3, [r3, #0]
 800ebde:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800ebe2:	7858      	ldrbhi	r0, [r3, #1]
 800ebe4:	bf8c      	ite	hi
 800ebe6:	f000 0003 	andhi.w	r0, r0, #3
 800ebea:	2000      	movls	r0, #0
 800ebec:	4770      	bx	lr
 800ebee:	bf00      	nop
 800ebf0:	20015294 	.word	0x20015294
 800ebf4:	20015290 	.word	0x20015290

0800ebf8 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800ebf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ebfc:	4b10      	ldr	r3, [pc, #64]	@ (800ec40 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800ebfe:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800ec00:	881b      	ldrh	r3, [r3, #0]
 800ec02:	428b      	cmp	r3, r1
 800ec04:	4604      	mov	r4, r0
 800ec06:	d918      	bls.n	800ec3a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800ec08:	6803      	ldr	r3, [r0, #0]
 800ec0a:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 800ec0c:	4b0d      	ldr	r3, [pc, #52]	@ (800ec44 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800ec0e:	6818      	ldr	r0, [r3, #0]
 800ec10:	f7f5 feae 	bl	8004970 <_ZNK8touchgfx5Texts7getTextEt>
 800ec14:	6823      	ldr	r3, [r4, #0]
 800ec16:	4606      	mov	r6, r0
 800ec18:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800ec1a:	4620      	mov	r0, r4
 800ec1c:	4798      	blx	r3
 800ec1e:	6823      	ldr	r3, [r4, #0]
 800ec20:	4607      	mov	r7, r0
 800ec22:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800ec26:	4620      	mov	r0, r4
 800ec28:	4798      	blx	r3
 800ec2a:	463a      	mov	r2, r7
 800ec2c:	4603      	mov	r3, r0
 800ec2e:	4631      	mov	r1, r6
 800ec30:	4620      	mov	r0, r4
 800ec32:	46ac      	mov	ip, r5
 800ec34:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ec38:	4760      	bx	ip
 800ec3a:	2000      	movs	r0, #0
 800ec3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ec40:	20015294 	.word	0x20015294
 800ec44:	2001529c 	.word	0x2001529c

0800ec48 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800ec48:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ec4c:	4b17      	ldr	r3, [pc, #92]	@ (800ecac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800ec4e:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800ec50:	881b      	ldrh	r3, [r3, #0]
 800ec52:	428b      	cmp	r3, r1
 800ec54:	4604      	mov	r4, r0
 800ec56:	d926      	bls.n	800eca6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800ec58:	4b15      	ldr	r3, [pc, #84]	@ (800ecb0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800ec5a:	681b      	ldr	r3, [r3, #0]
 800ec5c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800ec60:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800ec64:	4b13      	ldr	r3, [pc, #76]	@ (800ecb4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800ec66:	7855      	ldrb	r5, [r2, #1]
 800ec68:	681b      	ldr	r3, [r3, #0]
 800ec6a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800ec6e:	6833      	ldr	r3, [r6, #0]
 800ec70:	69df      	ldr	r7, [r3, #28]
 800ec72:	4b11      	ldr	r3, [pc, #68]	@ (800ecb8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800ec74:	6818      	ldr	r0, [r3, #0]
 800ec76:	f7f5 fe7b 	bl	8004970 <_ZNK8touchgfx5Texts7getTextEt>
 800ec7a:	6823      	ldr	r3, [r4, #0]
 800ec7c:	4680      	mov	r8, r0
 800ec7e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800ec80:	4620      	mov	r0, r4
 800ec82:	4798      	blx	r3
 800ec84:	6823      	ldr	r3, [r4, #0]
 800ec86:	4681      	mov	r9, r0
 800ec88:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800ec8c:	4620      	mov	r0, r4
 800ec8e:	4798      	blx	r3
 800ec90:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800ec94:	9000      	str	r0, [sp, #0]
 800ec96:	464b      	mov	r3, r9
 800ec98:	4642      	mov	r2, r8
 800ec9a:	4629      	mov	r1, r5
 800ec9c:	4630      	mov	r0, r6
 800ec9e:	47b8      	blx	r7
 800eca0:	b003      	add	sp, #12
 800eca2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eca6:	2000      	movs	r0, #0
 800eca8:	e7fa      	b.n	800eca0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800ecaa:	bf00      	nop
 800ecac:	20015294 	.word	0x20015294
 800ecb0:	20015290 	.word	0x20015290
 800ecb4:	20015298 	.word	0x20015298
 800ecb8:	2001529c 	.word	0x2001529c

0800ecbc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800ecbc:	b40e      	push	{r1, r2, r3}
 800ecbe:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ecc2:	4b2f      	ldr	r3, [pc, #188]	@ (800ed80 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800ecc4:	881a      	ldrh	r2, [r3, #0]
 800ecc6:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 800ecc8:	429a      	cmp	r2, r3
 800ecca:	b09d      	sub	sp, #116	@ 0x74
 800eccc:	4604      	mov	r4, r0
 800ecce:	d954      	bls.n	800ed7a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800ecd0:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 800ed84 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800ecd4:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 800ed88 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800ecd8:	aa26      	add	r2, sp, #152	@ 0x98
 800ecda:	9202      	str	r2, [sp, #8]
 800ecdc:	f8d9 2000 	ldr.w	r2, [r9]
 800ece0:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800ece4:	f8d8 3000 	ldr.w	r3, [r8]
 800ece8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800ecec:	682b      	ldr	r3, [r5, #0]
 800ecee:	4628      	mov	r0, r5
 800ecf0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ecf2:	4798      	blx	r3
 800ecf4:	b207      	sxth	r7, r0
 800ecf6:	4606      	mov	r6, r0
 800ecf8:	a803      	add	r0, sp, #12
 800ecfa:	f004 ff83 	bl	8013c04 <_ZN8touchgfx12TextProviderC1Ev>
 800ecfe:	682b      	ldr	r3, [r5, #0]
 800ed00:	4628      	mov	r0, r5
 800ed02:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800ed04:	4798      	blx	r3
 800ed06:	682b      	ldr	r3, [r5, #0]
 800ed08:	4682      	mov	sl, r0
 800ed0a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800ed0c:	4628      	mov	r0, r5
 800ed0e:	4798      	blx	r3
 800ed10:	4653      	mov	r3, sl
 800ed12:	9000      	str	r0, [sp, #0]
 800ed14:	9a02      	ldr	r2, [sp, #8]
 800ed16:	9925      	ldr	r1, [sp, #148]	@ 0x94
 800ed18:	a803      	add	r0, sp, #12
 800ed1a:	f004 ffc6 	bl	8013caa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ed1e:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800ed20:	f8d9 3000 	ldr.w	r3, [r9]
 800ed24:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 800ed28:	8925      	ldrh	r5, [r4, #8]
 800ed2a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800ed2e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800ed32:	eba5 050c 	sub.w	r5, r5, ip
 800ed36:	784a      	ldrb	r2, [r1, #1]
 800ed38:	f8d8 3000 	ldr.w	r3, [r8]
 800ed3c:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 800ed40:	b22d      	sxth	r5, r5
 800ed42:	9500      	str	r5, [sp, #0]
 800ed44:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800ed48:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800ed4c:	a803      	add	r0, sp, #12
 800ed4e:	f002 f911 	bl	8010f74 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800ed52:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 800ed56:	18b9      	adds	r1, r7, r2
 800ed58:	2900      	cmp	r1, #0
 800ed5a:	b203      	sxth	r3, r0
 800ed5c:	dd0b      	ble.n	800ed76 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800ed5e:	3b01      	subs	r3, #1
 800ed60:	fb13 f302 	smulbb	r3, r3, r2
 800ed64:	fb16 3300 	smlabb	r3, r6, r0, r3
 800ed68:	b21f      	sxth	r7, r3
 800ed6a:	4638      	mov	r0, r7
 800ed6c:	b01d      	add	sp, #116	@ 0x74
 800ed6e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ed72:	b003      	add	sp, #12
 800ed74:	4770      	bx	lr
 800ed76:	2b00      	cmp	r3, #0
 800ed78:	dcf7      	bgt.n	800ed6a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800ed7a:	2700      	movs	r7, #0
 800ed7c:	e7f5      	b.n	800ed6a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800ed7e:	bf00      	nop
 800ed80:	20015294 	.word	0x20015294
 800ed84:	20015290 	.word	0x20015290
 800ed88:	20015298 	.word	0x20015298

0800ed8c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800ed8c:	b570      	push	{r4, r5, r6, lr}
 800ed8e:	6803      	ldr	r3, [r0, #0]
 800ed90:	4604      	mov	r4, r0
 800ed92:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ed94:	4615      	mov	r5, r2
 800ed96:	4798      	blx	r3
 800ed98:	6823      	ldr	r3, [r4, #0]
 800ed9a:	4629      	mov	r1, r5
 800ed9c:	4620      	mov	r0, r4
 800ed9e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800eda0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800eda4:	4718      	bx	r3
	...

0800eda8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800eda8:	b538      	push	{r3, r4, r5, lr}
 800edaa:	4b0e      	ldr	r3, [pc, #56]	@ (800ede4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800edac:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800edae:	881b      	ldrh	r3, [r3, #0]
 800edb0:	429a      	cmp	r2, r3
 800edb2:	4604      	mov	r4, r0
 800edb4:	d214      	bcs.n	800ede0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800edb6:	6803      	ldr	r3, [r0, #0]
 800edb8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800edba:	4798      	blx	r3
 800edbc:	6823      	ldr	r3, [r4, #0]
 800edbe:	4605      	mov	r5, r0
 800edc0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800edc2:	4620      	mov	r0, r4
 800edc4:	4798      	blx	r3
 800edc6:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800edca:	b22d      	sxth	r5, r5
 800edcc:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800edd0:	4601      	mov	r1, r0
 800edd2:	bf06      	itte	eq
 800edd4:	4602      	moveq	r2, r0
 800edd6:	4629      	moveq	r1, r5
 800edd8:	462a      	movne	r2, r5
 800edda:	4620      	mov	r0, r4
 800eddc:	f7ff ffd6 	bl	800ed8c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800ede0:	bd38      	pop	{r3, r4, r5, pc}
 800ede2:	bf00      	nop
 800ede4:	20015294 	.word	0x20015294

0800ede8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800ede8:	b530      	push	{r4, r5, lr}
 800edea:	888b      	ldrh	r3, [r1, #4]
 800edec:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800edee:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800edf2:	b085      	sub	sp, #20
 800edf4:	4604      	mov	r4, r0
 800edf6:	b923      	cbnz	r3, 800ee02 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800edf8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800edfc:	b90b      	cbnz	r3, 800ee02 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800edfe:	f7ff ffd3 	bl	800eda8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800ee02:	6823      	ldr	r3, [r4, #0]
 800ee04:	466d      	mov	r5, sp
 800ee06:	4621      	mov	r1, r4
 800ee08:	4628      	mov	r0, r5
 800ee0a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800ee0e:	4798      	blx	r3
 800ee10:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800ee14:	343c      	adds	r4, #60	@ 0x3c
 800ee16:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800ee1a:	b005      	add	sp, #20
 800ee1c:	bd30      	pop	{r4, r5, pc}

0800ee1e <_ZNK8touchgfx3Box12getSolidRectEv>:
 800ee1e:	2300      	movs	r3, #0
 800ee20:	8083      	strh	r3, [r0, #4]
 800ee22:	80c3      	strh	r3, [r0, #6]
 800ee24:	8003      	strh	r3, [r0, #0]
 800ee26:	8043      	strh	r3, [r0, #2]
 800ee28:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800ee2c:	2bff      	cmp	r3, #255	@ 0xff
 800ee2e:	bf01      	itttt	eq
 800ee30:	890b      	ldrheq	r3, [r1, #8]
 800ee32:	8083      	strheq	r3, [r0, #4]
 800ee34:	894b      	ldrheq	r3, [r1, #10]
 800ee36:	80c3      	strheq	r3, [r0, #6]
 800ee38:	4770      	bx	lr
	...

0800ee3c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800ee3c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ee3e:	4604      	mov	r4, r0
 800ee40:	6808      	ldr	r0, [r1, #0]
 800ee42:	6849      	ldr	r1, [r1, #4]
 800ee44:	466b      	mov	r3, sp
 800ee46:	c303      	stmia	r3!, {r0, r1}
 800ee48:	6823      	ldr	r3, [r4, #0]
 800ee4a:	4669      	mov	r1, sp
 800ee4c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ee4e:	4620      	mov	r0, r4
 800ee50:	4798      	blx	r3
 800ee52:	4b08      	ldr	r3, [pc, #32]	@ (800ee74 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800ee54:	681b      	ldr	r3, [r3, #0]
 800ee56:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800ee5a:	b10a      	cbz	r2, 800ee60 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800ee5c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800ee5e:	b900      	cbnz	r0, 800ee62 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800ee60:	6898      	ldr	r0, [r3, #8]
 800ee62:	6803      	ldr	r3, [r0, #0]
 800ee64:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800ee66:	6a1d      	ldr	r5, [r3, #32]
 800ee68:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800ee6c:	4669      	mov	r1, sp
 800ee6e:	47a8      	blx	r5
 800ee70:	b003      	add	sp, #12
 800ee72:	bd30      	pop	{r4, r5, pc}
 800ee74:	20015238 	.word	0x20015238

0800ee78 <_ZN8touchgfx3BoxD1Ev>:
 800ee78:	4770      	bx	lr

0800ee7a <_ZN8touchgfx3BoxD0Ev>:
 800ee7a:	b510      	push	{r4, lr}
 800ee7c:	212c      	movs	r1, #44	@ 0x2c
 800ee7e:	4604      	mov	r4, r0
 800ee80:	f015 fadb 	bl	802443a <_ZdlPvj>
 800ee84:	4620      	mov	r0, r4
 800ee86:	bd10      	pop	{r4, pc}

0800ee88 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800ee88:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800ee8c:	b12a      	cbz	r2, 800ee9a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800ee8e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800ee92:	b112      	cbz	r2, 800ee9a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800ee94:	6803      	ldr	r3, [r0, #0]
 800ee96:	695b      	ldr	r3, [r3, #20]
 800ee98:	4718      	bx	r3
 800ee9a:	4770      	bx	lr

0800ee9c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800ee9c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800eea0:	4b2f      	ldr	r3, [pc, #188]	@ (800ef60 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800eea2:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800eea4:	881b      	ldrh	r3, [r3, #0]
 800eea6:	4293      	cmp	r3, r2
 800eea8:	b08d      	sub	sp, #52	@ 0x34
 800eeaa:	4604      	mov	r4, r0
 800eeac:	460f      	mov	r7, r1
 800eeae:	d954      	bls.n	800ef5a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800eeb0:	4b2c      	ldr	r3, [pc, #176]	@ (800ef64 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800eeb2:	6819      	ldr	r1, [r3, #0]
 800eeb4:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800eeb8:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800eebc:	4a2a      	ldr	r2, [pc, #168]	@ (800ef68 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800eebe:	6812      	ldr	r2, [r2, #0]
 800eec0:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800eec4:	2900      	cmp	r1, #0
 800eec6:	d048      	beq.n	800ef5a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800eec8:	785a      	ldrb	r2, [r3, #1]
 800eeca:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800eece:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 800eed2:	4b26      	ldr	r3, [pc, #152]	@ (800ef6c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800eed4:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 800eed8:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 800eedc:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 800eee0:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 800eee2:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 800eee6:	9107      	str	r1, [sp, #28]
 800eee8:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800eeec:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800eef0:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 800eef4:	681a      	ldr	r2, [r3, #0]
 800eef6:	f88d 8020 	strb.w	r8, [sp, #32]
 800eefa:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 800eefe:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 800ef02:	9609      	str	r6, [sp, #36]	@ 0x24
 800ef04:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 800ef08:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 800ef0c:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 800ef10:	b10b      	cbz	r3, 800ef16 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800ef12:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 800ef14:	b905      	cbnz	r5, 800ef18 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800ef16:	6895      	ldr	r5, [r2, #8]
 800ef18:	ae05      	add	r6, sp, #20
 800ef1a:	4621      	mov	r1, r4
 800ef1c:	4630      	mov	r0, r6
 800ef1e:	f003 ff09 	bl	8012d34 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ef22:	4b13      	ldr	r3, [pc, #76]	@ (800ef70 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800ef24:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800ef26:	6818      	ldr	r0, [r3, #0]
 800ef28:	f7f5 fd22 	bl	8004970 <_ZNK8touchgfx5Texts7getTextEt>
 800ef2c:	6823      	ldr	r3, [r4, #0]
 800ef2e:	4680      	mov	r8, r0
 800ef30:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800ef32:	4620      	mov	r0, r4
 800ef34:	4798      	blx	r3
 800ef36:	6823      	ldr	r3, [r4, #0]
 800ef38:	4681      	mov	r9, r0
 800ef3a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800ef3e:	4620      	mov	r0, r4
 800ef40:	4798      	blx	r3
 800ef42:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800ef46:	ab07      	add	r3, sp, #28
 800ef48:	9300      	str	r3, [sp, #0]
 800ef4a:	f8cd 8004 	str.w	r8, [sp, #4]
 800ef4e:	463b      	mov	r3, r7
 800ef50:	e896 0006 	ldmia.w	r6, {r1, r2}
 800ef54:	4628      	mov	r0, r5
 800ef56:	f7f5 fcbd 	bl	80048d4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800ef5a:	b00d      	add	sp, #52	@ 0x34
 800ef5c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ef60:	20015294 	.word	0x20015294
 800ef64:	20015290 	.word	0x20015290
 800ef68:	20015298 	.word	0x20015298
 800ef6c:	20015238 	.word	0x20015238
 800ef70:	2001529c 	.word	0x2001529c

0800ef74 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800ef74:	4770      	bx	lr

0800ef76 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800ef76:	b510      	push	{r4, lr}
 800ef78:	2134      	movs	r1, #52	@ 0x34
 800ef7a:	4604      	mov	r4, r0
 800ef7c:	f015 fa5d 	bl	802443a <_ZdlPvj>
 800ef80:	4620      	mov	r0, r4
 800ef82:	bd10      	pop	{r4, pc}

0800ef84 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800ef84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ef88:	4604      	mov	r4, r0
 800ef8a:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800ef8c:	8962      	ldrh	r2, [r4, #10]
 800ef8e:	b218      	sxth	r0, r3
 800ef90:	460e      	mov	r6, r1
 800ef92:	005b      	lsls	r3, r3, #1
 800ef94:	8921      	ldrh	r1, [r4, #8]
 800ef96:	b29b      	uxth	r3, r3
 800ef98:	1ac9      	subs	r1, r1, r3
 800ef9a:	b08e      	sub	sp, #56	@ 0x38
 800ef9c:	b209      	sxth	r1, r1
 800ef9e:	1ad3      	subs	r3, r2, r3
 800efa0:	b21b      	sxth	r3, r3
 800efa2:	2900      	cmp	r1, #0
 800efa4:	f8ad 0000 	strh.w	r0, [sp]
 800efa8:	f8ad 0002 	strh.w	r0, [sp, #2]
 800efac:	f8ad 1004 	strh.w	r1, [sp, #4]
 800efb0:	f8ad 3006 	strh.w	r3, [sp, #6]
 800efb4:	dd5e      	ble.n	800f074 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800efb6:	2b00      	cmp	r3, #0
 800efb8:	dd5c      	ble.n	800f074 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800efba:	6830      	ldr	r0, [r6, #0]
 800efbc:	6871      	ldr	r1, [r6, #4]
 800efbe:	ab02      	add	r3, sp, #8
 800efc0:	c303      	stmia	r3!, {r0, r1}
 800efc2:	4669      	mov	r1, sp
 800efc4:	a802      	add	r0, sp, #8
 800efc6:	f7fd f8f9 	bl	800c1bc <_ZN8touchgfx4RectaNERKS0_>
 800efca:	4620      	mov	r0, r4
 800efcc:	a902      	add	r1, sp, #8
 800efce:	f7ff ff35 	bl	800ee3c <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800efd2:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
 800efd4:	2800      	cmp	r0, #0
 800efd6:	d05f      	beq.n	800f098 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800efd8:	8963      	ldrh	r3, [r4, #10]
 800efda:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800efde:	f8ad 101c 	strh.w	r1, [sp, #28]
 800efe2:	1a1f      	subs	r7, r3, r0
 800efe4:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800efe8:	b202      	sxth	r2, r0
 800efea:	2500      	movs	r5, #0
 800efec:	b21b      	sxth	r3, r3
 800efee:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
 800eff2:	1a09      	subs	r1, r1, r0
 800eff4:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 800eff8:	9506      	str	r5, [sp, #24]
 800effa:	f8ad 201e 	strh.w	r2, [sp, #30]
 800effe:	f8ad 5020 	strh.w	r5, [sp, #32]
 800f002:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
 800f006:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 800f00a:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800f00e:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800f012:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800f016:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 800f01a:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 800f01e:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800f022:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800f026:	af04      	add	r7, sp, #16
 800f028:	ab06      	add	r3, sp, #24
 800f02a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800f02e:	e893 0003 	ldmia.w	r3, {r0, r1}
 800f032:	e887 0003 	stmia.w	r7, {r0, r1}
 800f036:	4631      	mov	r1, r6
 800f038:	4638      	mov	r0, r7
 800f03a:	f7fd f8bf 	bl	800c1bc <_ZN8touchgfx4RectaNERKS0_>
 800f03e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800f042:	2b00      	cmp	r3, #0
 800f044:	dd12      	ble.n	800f06c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800f046:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800f04a:	2b00      	cmp	r3, #0
 800f04c:	dd0e      	ble.n	800f06c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800f04e:	6823      	ldr	r3, [r4, #0]
 800f050:	4639      	mov	r1, r7
 800f052:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f054:	4620      	mov	r0, r4
 800f056:	4798      	blx	r3
 800f058:	f7f3 fc44 	bl	80028e4 <_ZN8touchgfx3HAL3lcdEv>
 800f05c:	6803      	ldr	r3, [r0, #0]
 800f05e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800f060:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800f064:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800f068:	4639      	mov	r1, r7
 800f06a:	47c0      	blx	r8
 800f06c:	3501      	adds	r5, #1
 800f06e:	2d04      	cmp	r5, #4
 800f070:	d1da      	bne.n	800f028 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800f072:	e011      	b.n	800f098 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800f074:	6830      	ldr	r0, [r6, #0]
 800f076:	6871      	ldr	r1, [r6, #4]
 800f078:	ab06      	add	r3, sp, #24
 800f07a:	c303      	stmia	r3!, {r0, r1}
 800f07c:	6823      	ldr	r3, [r4, #0]
 800f07e:	a906      	add	r1, sp, #24
 800f080:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f082:	4620      	mov	r0, r4
 800f084:	4798      	blx	r3
 800f086:	f7f3 fc2d 	bl	80028e4 <_ZN8touchgfx3HAL3lcdEv>
 800f08a:	6803      	ldr	r3, [r0, #0]
 800f08c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800f08e:	6a1d      	ldr	r5, [r3, #32]
 800f090:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800f094:	a906      	add	r1, sp, #24
 800f096:	47a8      	blx	r5
 800f098:	b00e      	add	sp, #56	@ 0x38
 800f09a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f09e <_ZN8touchgfx5ImageD1Ev>:
 800f09e:	4770      	bx	lr

0800f0a0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800f0a0:	b570      	push	{r4, r5, r6, lr}
 800f0a2:	880b      	ldrh	r3, [r1, #0]
 800f0a4:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800f0a6:	4604      	mov	r4, r0
 800f0a8:	4608      	mov	r0, r1
 800f0aa:	460d      	mov	r5, r1
 800f0ac:	f006 f946 	bl	801533c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800f0b0:	4606      	mov	r6, r0
 800f0b2:	4628      	mov	r0, r5
 800f0b4:	f006 f976 	bl	80153a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800f0b8:	6823      	ldr	r3, [r4, #0]
 800f0ba:	4605      	mov	r5, r0
 800f0bc:	4631      	mov	r1, r6
 800f0be:	4620      	mov	r0, r4
 800f0c0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800f0c2:	4798      	blx	r3
 800f0c4:	6823      	ldr	r3, [r4, #0]
 800f0c6:	4629      	mov	r1, r5
 800f0c8:	4620      	mov	r0, r4
 800f0ca:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800f0cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f0d0:	4718      	bx	r3

0800f0d2 <_ZN8touchgfx5ImageD0Ev>:
 800f0d2:	b510      	push	{r4, lr}
 800f0d4:	212c      	movs	r1, #44	@ 0x2c
 800f0d6:	4604      	mov	r4, r0
 800f0d8:	f015 f9af 	bl	802443a <_ZdlPvj>
 800f0dc:	4620      	mov	r0, r4
 800f0de:	bd10      	pop	{r4, pc}

0800f0e0 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800f0e0:	b510      	push	{r4, lr}
 800f0e2:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800f0e6:	2bff      	cmp	r3, #255	@ 0xff
 800f0e8:	4604      	mov	r4, r0
 800f0ea:	d006      	beq.n	800f0fa <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800f0ec:	2300      	movs	r3, #0
 800f0ee:	8003      	strh	r3, [r0, #0]
 800f0f0:	8043      	strh	r3, [r0, #2]
 800f0f2:	8083      	strh	r3, [r0, #4]
 800f0f4:	80c3      	strh	r3, [r0, #6]
 800f0f6:	4620      	mov	r0, r4
 800f0f8:	bd10      	pop	{r4, pc}
 800f0fa:	3126      	adds	r1, #38	@ 0x26
 800f0fc:	f006 f986 	bl	801540c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800f100:	e7f9      	b.n	800f0f6 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800f102 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800f102:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 800f106:	b12a      	cbz	r2, 800f114 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800f108:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800f10c:	b112      	cbz	r2, 800f114 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800f10e:	6803      	ldr	r3, [r0, #0]
 800f110:	695b      	ldr	r3, [r3, #20]
 800f112:	4718      	bx	r3
 800f114:	4770      	bx	lr
	...

0800f118 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800f118:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f11c:	4604      	mov	r4, r0
 800f11e:	b088      	sub	sp, #32
 800f120:	f854 3b26 	ldr.w	r3, [r4], #38
 800f124:	2500      	movs	r5, #0
 800f126:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f128:	460f      	mov	r7, r1
 800f12a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800f12e:	a904      	add	r1, sp, #16
 800f130:	4606      	mov	r6, r0
 800f132:	4798      	blx	r3
 800f134:	4620      	mov	r0, r4
 800f136:	f006 f901 	bl	801533c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800f13a:	4680      	mov	r8, r0
 800f13c:	4620      	mov	r0, r4
 800f13e:	f006 f931 	bl	80153a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800f142:	9506      	str	r5, [sp, #24]
 800f144:	ad06      	add	r5, sp, #24
 800f146:	f8ad 001e 	strh.w	r0, [sp, #30]
 800f14a:	4639      	mov	r1, r7
 800f14c:	4628      	mov	r0, r5
 800f14e:	f8ad 801c 	strh.w	r8, [sp, #28]
 800f152:	f7fd f833 	bl	800c1bc <_ZN8touchgfx4RectaNERKS0_>
 800f156:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800f15a:	2b00      	cmp	r3, #0
 800f15c:	dd19      	ble.n	800f192 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800f15e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800f162:	2b00      	cmp	r3, #0
 800f164:	dd15      	ble.n	800f192 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800f166:	4b0c      	ldr	r3, [pc, #48]	@ (800f198 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800f168:	681b      	ldr	r3, [r3, #0]
 800f16a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800f16e:	b10a      	cbz	r2, 800f174 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800f170:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800f172:	b900      	cbnz	r0, 800f176 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800f174:	6898      	ldr	r0, [r3, #8]
 800f176:	6801      	ldr	r1, [r0, #0]
 800f178:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800f17c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800f180:	2701      	movs	r7, #1
 800f182:	9702      	str	r7, [sp, #8]
 800f184:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 800f188:	e9cd 5600 	strd	r5, r6, [sp]
 800f18c:	688d      	ldr	r5, [r1, #8]
 800f18e:	4621      	mov	r1, r4
 800f190:	47a8      	blx	r5
 800f192:	b008      	add	sp, #32
 800f194:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f198:	20015238 	.word	0x20015238

0800f19c <_ZN8touchgfx7OutlineD1Ev>:
 800f19c:	4770      	bx	lr

0800f19e <_ZN8touchgfx7OutlineD0Ev>:
 800f19e:	b510      	push	{r4, lr}
 800f1a0:	2130      	movs	r1, #48	@ 0x30
 800f1a2:	4604      	mov	r4, r0
 800f1a4:	f015 f949 	bl	802443a <_ZdlPvj>
 800f1a8:	4620      	mov	r0, r4
 800f1aa:	bd10      	pop	{r4, pc}

0800f1ac <_ZN8touchgfx7Outline5resetEv>:
 800f1ac:	b510      	push	{r4, lr}
 800f1ae:	4604      	mov	r4, r0
 800f1b0:	f000 fe82 	bl	800feb8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800f1b4:	60e0      	str	r0, [r4, #12]
 800f1b6:	f000 fe85 	bl	800fec4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800f1ba:	68e3      	ldr	r3, [r4, #12]
 800f1bc:	6123      	str	r3, [r4, #16]
 800f1be:	08c0      	lsrs	r0, r0, #3
 800f1c0:	2200      	movs	r2, #0
 800f1c2:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 800f1c6:	3801      	subs	r0, #1
 800f1c8:	6060      	str	r0, [r4, #4]
 800f1ca:	60a2      	str	r2, [r4, #8]
 800f1cc:	8019      	strh	r1, [r3, #0]
 800f1ce:	8059      	strh	r1, [r3, #2]
 800f1d0:	809a      	strh	r2, [r3, #4]
 800f1d2:	80da      	strh	r2, [r3, #6]
 800f1d4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800f1d6:	f023 0301 	bic.w	r3, r3, #1
 800f1da:	f043 0302 	orr.w	r3, r3, #2
 800f1de:	6263      	str	r3, [r4, #36]	@ 0x24
 800f1e0:	bd10      	pop	{r4, pc}
	...

0800f1e4 <_ZN8touchgfx7OutlineC1Ev>:
 800f1e4:	b510      	push	{r4, lr}
 800f1e6:	4b0a      	ldr	r3, [pc, #40]	@ (800f210 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800f1e8:	6003      	str	r3, [r0, #0]
 800f1ea:	2300      	movs	r3, #0
 800f1ec:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800f1f0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800f1f4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800f1f8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800f1fc:	6243      	str	r3, [r0, #36]	@ 0x24
 800f1fe:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 800f202:	4604      	mov	r4, r0
 800f204:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 800f208:	f7ff ffd0 	bl	800f1ac <_ZN8touchgfx7Outline5resetEv>
 800f20c:	4620      	mov	r0, r4
 800f20e:	bd10      	pop	{r4, pc}
 800f210:	0802848c 	.word	0x0802848c

0800f214 <_ZN8touchgfx7Outline10renderLineEiiii>:
 800f214:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f218:	b093      	sub	sp, #76	@ 0x4c
 800f21a:	1156      	asrs	r6, r2, #5
 800f21c:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 800f21e:	9305      	str	r3, [sp, #20]
 800f220:	f004 051f 	and.w	r5, r4, #31
 800f224:	1153      	asrs	r3, r2, #5
 800f226:	9504      	str	r5, [sp, #16]
 800f228:	1165      	asrs	r5, r4, #5
 800f22a:	9303      	str	r3, [sp, #12]
 800f22c:	42ae      	cmp	r6, r5
 800f22e:	ea4f 1364 	mov.w	r3, r4, asr #5
 800f232:	9306      	str	r3, [sp, #24]
 800f234:	f002 031f 	and.w	r3, r2, #31
 800f238:	f040 80f8 	bne.w	800f42c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800f23c:	9c04      	ldr	r4, [sp, #16]
 800f23e:	9a05      	ldr	r2, [sp, #20]
 800f240:	42a3      	cmp	r3, r4
 800f242:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800f246:	6902      	ldr	r2, [r0, #16]
 800f248:	d125      	bne.n	800f296 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800f24a:	f9b2 3000 	ldrsh.w	r3, [r2]
 800f24e:	459e      	cmp	lr, r3
 800f250:	d103      	bne.n	800f25a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800f252:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800f256:	429e      	cmp	r6, r3
 800f258:	d035      	beq.n	800f2c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f25a:	88d1      	ldrh	r1, [r2, #6]
 800f25c:	8893      	ldrh	r3, [r2, #4]
 800f25e:	430b      	orrs	r3, r1
 800f260:	d010      	beq.n	800f284 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800f262:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800f266:	2b00      	cmp	r3, #0
 800f268:	db0c      	blt.n	800f284 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800f26a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800f26c:	428b      	cmp	r3, r1
 800f26e:	da09      	bge.n	800f284 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800f270:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800f274:	428b      	cmp	r3, r1
 800f276:	bf38      	it	cc
 800f278:	3208      	addcc	r2, #8
 800f27a:	f103 0301 	add.w	r3, r3, #1
 800f27e:	bf38      	it	cc
 800f280:	6102      	strcc	r2, [r0, #16]
 800f282:	6083      	str	r3, [r0, #8]
 800f284:	6903      	ldr	r3, [r0, #16]
 800f286:	9a03      	ldr	r2, [sp, #12]
 800f288:	f8a3 e000 	strh.w	lr, [r3]
 800f28c:	805a      	strh	r2, [r3, #2]
 800f28e:	2200      	movs	r2, #0
 800f290:	809a      	strh	r2, [r3, #4]
 800f292:	80da      	strh	r2, [r3, #6]
 800f294:	e017      	b.n	800f2c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f296:	9c05      	ldr	r4, [sp, #20]
 800f298:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800f29c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800f2a0:	f004 041f 	and.w	r4, r4, #31
 800f2a4:	114e      	asrs	r6, r1, #5
 800f2a6:	9402      	str	r4, [sp, #8]
 800f2a8:	9c04      	ldr	r4, [sp, #16]
 800f2aa:	4576      	cmp	r6, lr
 800f2ac:	f001 0c1f 	and.w	ip, r1, #31
 800f2b0:	eba4 0403 	sub.w	r4, r4, r3
 800f2b4:	d10a      	bne.n	800f2cc <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800f2b6:	9b02      	ldr	r3, [sp, #8]
 800f2b8:	449c      	add	ip, r3
 800f2ba:	44a0      	add	r8, r4
 800f2bc:	fb04 a40c 	mla	r4, r4, ip, sl
 800f2c0:	f8a2 8004 	strh.w	r8, [r2, #4]
 800f2c4:	80d4      	strh	r4, [r2, #6]
 800f2c6:	b013      	add	sp, #76	@ 0x4c
 800f2c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f2cc:	9d05      	ldr	r5, [sp, #20]
 800f2ce:	1a69      	subs	r1, r5, r1
 800f2d0:	bf5b      	ittet	pl
 800f2d2:	f1cc 0520 	rsbpl	r5, ip, #32
 800f2d6:	436c      	mulpl	r4, r5
 800f2d8:	2500      	movmi	r5, #0
 800f2da:	2520      	movpl	r5, #32
 800f2dc:	bf44      	itt	mi
 800f2de:	fb04 f40c 	mulmi.w	r4, r4, ip
 800f2e2:	4249      	negmi	r1, r1
 800f2e4:	9501      	str	r5, [sp, #4]
 800f2e6:	9f01      	ldr	r7, [sp, #4]
 800f2e8:	fb94 f5f1 	sdiv	r5, r4, r1
 800f2ec:	fb01 4415 	mls	r4, r1, r5, r4
 800f2f0:	bf54      	ite	pl
 800f2f2:	f04f 0901 	movpl.w	r9, #1
 800f2f6:	f04f 39ff 	movmi.w	r9, #4294967295
 800f2fa:	2c00      	cmp	r4, #0
 800f2fc:	bfb8      	it	lt
 800f2fe:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800f302:	44bc      	add	ip, r7
 800f304:	44a8      	add	r8, r5
 800f306:	fb05 ac0c 	mla	ip, r5, ip, sl
 800f30a:	f8a2 8004 	strh.w	r8, [r2, #4]
 800f30e:	f8a2 c006 	strh.w	ip, [r2, #6]
 800f312:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f316:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800f31a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800f31e:	bfb8      	it	lt
 800f320:	1864      	addlt	r4, r4, r1
 800f322:	ea58 0202 	orrs.w	r2, r8, r2
 800f326:	444e      	add	r6, r9
 800f328:	d011      	beq.n	800f34e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800f32a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800f32e:	f1b8 0f00 	cmp.w	r8, #0
 800f332:	db0c      	blt.n	800f34e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800f334:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800f336:	4590      	cmp	r8, r2
 800f338:	da09      	bge.n	800f34e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800f33a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800f33e:	4590      	cmp	r8, r2
 800f340:	bf3c      	itt	cc
 800f342:	f10c 0208 	addcc.w	r2, ip, #8
 800f346:	6102      	strcc	r2, [r0, #16]
 800f348:	f108 0201 	add.w	r2, r8, #1
 800f34c:	6082      	str	r2, [r0, #8]
 800f34e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f352:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800f356:	f8ac 6000 	strh.w	r6, [ip]
 800f35a:	2700      	movs	r7, #0
 800f35c:	45b6      	cmp	lr, r6
 800f35e:	f8ac 2002 	strh.w	r2, [ip, #2]
 800f362:	f8ac 7004 	strh.w	r7, [ip, #4]
 800f366:	f8ac 7006 	strh.w	r7, [ip, #6]
 800f36a:	442b      	add	r3, r5
 800f36c:	d04d      	beq.n	800f40a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800f36e:	9f04      	ldr	r7, [sp, #16]
 800f370:	1aff      	subs	r7, r7, r3
 800f372:	443d      	add	r5, r7
 800f374:	016d      	lsls	r5, r5, #5
 800f376:	fb95 f8f1 	sdiv	r8, r5, r1
 800f37a:	fb01 5518 	mls	r5, r1, r8, r5
 800f37e:	2d00      	cmp	r5, #0
 800f380:	bfb8      	it	lt
 800f382:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f386:	f108 0701 	add.w	r7, r8, #1
 800f38a:	bfb8      	it	lt
 800f38c:	186d      	addlt	r5, r5, r1
 800f38e:	1a64      	subs	r4, r4, r1
 800f390:	9703      	str	r7, [sp, #12]
 800f392:	f04f 0a00 	mov.w	sl, #0
 800f396:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f39a:	1964      	adds	r4, r4, r5
 800f39c:	bf58      	it	pl
 800f39e:	9f03      	ldrpl	r7, [sp, #12]
 800f3a0:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800f3a4:	bf48      	it	mi
 800f3a6:	4647      	movmi	r7, r8
 800f3a8:	44bb      	add	fp, r7
 800f3aa:	f8ac b004 	strh.w	fp, [ip, #4]
 800f3ae:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f3b2:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f3b6:	f8ac b006 	strh.w	fp, [ip, #6]
 800f3ba:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f3be:	443b      	add	r3, r7
 800f3c0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f3c4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f3c8:	bf58      	it	pl
 800f3ca:	1a64      	subpl	r4, r4, r1
 800f3cc:	ea5b 0707 	orrs.w	r7, fp, r7
 800f3d0:	444e      	add	r6, r9
 800f3d2:	d011      	beq.n	800f3f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800f3d4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800f3d8:	f1bb 0f00 	cmp.w	fp, #0
 800f3dc:	db0c      	blt.n	800f3f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800f3de:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800f3e0:	45bb      	cmp	fp, r7
 800f3e2:	da09      	bge.n	800f3f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800f3e4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f3e8:	45bb      	cmp	fp, r7
 800f3ea:	bf3c      	itt	cc
 800f3ec:	f10c 0708 	addcc.w	r7, ip, #8
 800f3f0:	6107      	strcc	r7, [r0, #16]
 800f3f2:	f10b 0701 	add.w	r7, fp, #1
 800f3f6:	6087      	str	r7, [r0, #8]
 800f3f8:	6907      	ldr	r7, [r0, #16]
 800f3fa:	45b6      	cmp	lr, r6
 800f3fc:	803e      	strh	r6, [r7, #0]
 800f3fe:	807a      	strh	r2, [r7, #2]
 800f400:	f8a7 a004 	strh.w	sl, [r7, #4]
 800f404:	f8a7 a006 	strh.w	sl, [r7, #6]
 800f408:	d1c5      	bne.n	800f396 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800f40a:	9a04      	ldr	r2, [sp, #16]
 800f40c:	1ad3      	subs	r3, r2, r3
 800f40e:	6902      	ldr	r2, [r0, #16]
 800f410:	8891      	ldrh	r1, [r2, #4]
 800f412:	88d6      	ldrh	r6, [r2, #6]
 800f414:	4419      	add	r1, r3
 800f416:	8091      	strh	r1, [r2, #4]
 800f418:	9902      	ldr	r1, [sp, #8]
 800f41a:	f101 0c20 	add.w	ip, r1, #32
 800f41e:	9901      	ldr	r1, [sp, #4]
 800f420:	ebac 0c01 	sub.w	ip, ip, r1
 800f424:	fb03 630c 	mla	r3, r3, ip, r6
 800f428:	80d3      	strh	r3, [r2, #6]
 800f42a:	e74c      	b.n	800f2c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f42c:	9d05      	ldr	r5, [sp, #20]
 800f42e:	1aa2      	subs	r2, r4, r2
 800f430:	eba5 0501 	sub.w	r5, r5, r1
 800f434:	9508      	str	r5, [sp, #32]
 800f436:	9202      	str	r2, [sp, #8]
 800f438:	f140 8128 	bpl.w	800f68c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800f43c:	9a03      	ldr	r2, [sp, #12]
 800f43e:	2a00      	cmp	r2, #0
 800f440:	f6ff af41 	blt.w	800f2c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f444:	9a02      	ldr	r2, [sp, #8]
 800f446:	4252      	negs	r2, r2
 800f448:	9202      	str	r2, [sp, #8]
 800f44a:	9a06      	ldr	r2, [sp, #24]
 800f44c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800f450:	f04f 34ff 	mov.w	r4, #4294967295
 800f454:	9206      	str	r2, [sp, #24]
 800f456:	462a      	mov	r2, r5
 800f458:	940b      	str	r4, [sp, #44]	@ 0x2c
 800f45a:	435a      	muls	r2, r3
 800f45c:	2400      	movs	r4, #0
 800f45e:	9d02      	ldr	r5, [sp, #8]
 800f460:	9401      	str	r4, [sp, #4]
 800f462:	9c02      	ldr	r4, [sp, #8]
 800f464:	fb92 f4f4 	sdiv	r4, r2, r4
 800f468:	fb05 2214 	mls	r2, r5, r4, r2
 800f46c:	2a00      	cmp	r2, #0
 800f46e:	9207      	str	r2, [sp, #28]
 800f470:	bfbc      	itt	lt
 800f472:	1952      	addlt	r2, r2, r5
 800f474:	9207      	strlt	r2, [sp, #28]
 800f476:	9a01      	ldr	r2, [sp, #4]
 800f478:	6905      	ldr	r5, [r0, #16]
 800f47a:	bfb8      	it	lt
 800f47c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800f480:	eb04 0901 	add.w	r9, r4, r1
 800f484:	429a      	cmp	r2, r3
 800f486:	ea4f 1669 	mov.w	r6, r9, asr #5
 800f48a:	f040 8112 	bne.w	800f6b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800f48e:	f9b5 3000 	ldrsh.w	r3, [r5]
 800f492:	429e      	cmp	r6, r3
 800f494:	d104      	bne.n	800f4a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800f496:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800f49a:	9a03      	ldr	r2, [sp, #12]
 800f49c:	429a      	cmp	r2, r3
 800f49e:	d01b      	beq.n	800f4d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f4a0:	88ea      	ldrh	r2, [r5, #6]
 800f4a2:	88ab      	ldrh	r3, [r5, #4]
 800f4a4:	4313      	orrs	r3, r2
 800f4a6:	d010      	beq.n	800f4ca <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800f4a8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f4ac:	2a00      	cmp	r2, #0
 800f4ae:	db0c      	blt.n	800f4ca <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800f4b0:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800f4b2:	429a      	cmp	r2, r3
 800f4b4:	da09      	bge.n	800f4ca <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800f4b6:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800f4ba:	429a      	cmp	r2, r3
 800f4bc:	bf38      	it	cc
 800f4be:	3508      	addcc	r5, #8
 800f4c0:	f102 0201 	add.w	r2, r2, #1
 800f4c4:	bf38      	it	cc
 800f4c6:	6105      	strcc	r5, [r0, #16]
 800f4c8:	6082      	str	r2, [r0, #8]
 800f4ca:	6903      	ldr	r3, [r0, #16]
 800f4cc:	9a03      	ldr	r2, [sp, #12]
 800f4ce:	805a      	strh	r2, [r3, #2]
 800f4d0:	2200      	movs	r2, #0
 800f4d2:	801e      	strh	r6, [r3, #0]
 800f4d4:	809a      	strh	r2, [r3, #4]
 800f4d6:	80da      	strh	r2, [r3, #6]
 800f4d8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800f4da:	9a03      	ldr	r2, [sp, #12]
 800f4dc:	6901      	ldr	r1, [r0, #16]
 800f4de:	441a      	add	r2, r3
 800f4e0:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f4e4:	42b3      	cmp	r3, r6
 800f4e6:	d103      	bne.n	800f4f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800f4e8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800f4ec:	429a      	cmp	r2, r3
 800f4ee:	d01a      	beq.n	800f526 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800f4f0:	88cc      	ldrh	r4, [r1, #6]
 800f4f2:	888b      	ldrh	r3, [r1, #4]
 800f4f4:	4323      	orrs	r3, r4
 800f4f6:	d010      	beq.n	800f51a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800f4f8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800f4fc:	2c00      	cmp	r4, #0
 800f4fe:	db0c      	blt.n	800f51a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800f500:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800f502:	429c      	cmp	r4, r3
 800f504:	da09      	bge.n	800f51a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800f506:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800f50a:	429c      	cmp	r4, r3
 800f50c:	bf38      	it	cc
 800f50e:	3108      	addcc	r1, #8
 800f510:	f104 0401 	add.w	r4, r4, #1
 800f514:	bf38      	it	cc
 800f516:	6101      	strcc	r1, [r0, #16]
 800f518:	6084      	str	r4, [r0, #8]
 800f51a:	6903      	ldr	r3, [r0, #16]
 800f51c:	2100      	movs	r1, #0
 800f51e:	801e      	strh	r6, [r3, #0]
 800f520:	805a      	strh	r2, [r3, #2]
 800f522:	8099      	strh	r1, [r3, #4]
 800f524:	80d9      	strh	r1, [r3, #6]
 800f526:	9b06      	ldr	r3, [sp, #24]
 800f528:	4293      	cmp	r3, r2
 800f52a:	f000 8082 	beq.w	800f632 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800f52e:	9b08      	ldr	r3, [sp, #32]
 800f530:	9c02      	ldr	r4, [sp, #8]
 800f532:	9902      	ldr	r1, [sp, #8]
 800f534:	015b      	lsls	r3, r3, #5
 800f536:	fb93 f1f1 	sdiv	r1, r3, r1
 800f53a:	fb04 3311 	mls	r3, r4, r1, r3
 800f53e:	2b00      	cmp	r3, #0
 800f540:	9103      	str	r1, [sp, #12]
 800f542:	9308      	str	r3, [sp, #32]
 800f544:	da04      	bge.n	800f550 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800f546:	1e4b      	subs	r3, r1, #1
 800f548:	9303      	str	r3, [sp, #12]
 800f54a:	9b08      	ldr	r3, [sp, #32]
 800f54c:	4423      	add	r3, r4
 800f54e:	9308      	str	r3, [sp, #32]
 800f550:	9b07      	ldr	r3, [sp, #28]
 800f552:	9902      	ldr	r1, [sp, #8]
 800f554:	1a5b      	subs	r3, r3, r1
 800f556:	9307      	str	r3, [sp, #28]
 800f558:	9b01      	ldr	r3, [sp, #4]
 800f55a:	f1c3 0320 	rsb	r3, r3, #32
 800f55e:	930e      	str	r3, [sp, #56]	@ 0x38
 800f560:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800f562:	9b01      	ldr	r3, [sp, #4]
 800f564:	1a5b      	subs	r3, r3, r1
 800f566:	464f      	mov	r7, r9
 800f568:	930a      	str	r3, [sp, #40]	@ 0x28
 800f56a:	2600      	movs	r6, #0
 800f56c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800f570:	185b      	adds	r3, r3, r1
 800f572:	bf58      	it	pl
 800f574:	9902      	ldrpl	r1, [sp, #8]
 800f576:	9307      	str	r3, [sp, #28]
 800f578:	bf5d      	ittte	pl
 800f57a:	1a5b      	subpl	r3, r3, r1
 800f57c:	9307      	strpl	r3, [sp, #28]
 800f57e:	9b03      	ldrpl	r3, [sp, #12]
 800f580:	9903      	ldrmi	r1, [sp, #12]
 800f582:	bf58      	it	pl
 800f584:	1c59      	addpl	r1, r3, #1
 800f586:	4489      	add	r9, r1
 800f588:	2a00      	cmp	r2, #0
 800f58a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800f58e:	db2e      	blt.n	800f5ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f590:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800f592:	4293      	cmp	r3, r2
 800f594:	dd2b      	ble.n	800f5ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f596:	9c01      	ldr	r4, [sp, #4]
 800f598:	6905      	ldr	r5, [r0, #16]
 800f59a:	46a0      	mov	r8, r4
 800f59c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 800f59e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800f5a2:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800f5a6:	45a0      	cmp	r8, r4
 800f5a8:	f040 814f 	bne.w	800f84a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800f5ac:	f9b5 1000 	ldrsh.w	r1, [r5]
 800f5b0:	4551      	cmp	r1, sl
 800f5b2:	d103      	bne.n	800f5bc <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800f5b4:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800f5b8:	4291      	cmp	r1, r2
 800f5ba:	d018      	beq.n	800f5ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f5bc:	ea5c 010e 	orrs.w	r1, ip, lr
 800f5c0:	d00f      	beq.n	800f5e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800f5c2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800f5c6:	2900      	cmp	r1, #0
 800f5c8:	db0b      	blt.n	800f5e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800f5ca:	428b      	cmp	r3, r1
 800f5cc:	dd09      	ble.n	800f5e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800f5ce:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800f5d2:	4299      	cmp	r1, r3
 800f5d4:	bf38      	it	cc
 800f5d6:	3508      	addcc	r5, #8
 800f5d8:	f101 0101 	add.w	r1, r1, #1
 800f5dc:	bf38      	it	cc
 800f5de:	6105      	strcc	r5, [r0, #16]
 800f5e0:	6081      	str	r1, [r0, #8]
 800f5e2:	6903      	ldr	r3, [r0, #16]
 800f5e4:	f8a3 a000 	strh.w	sl, [r3]
 800f5e8:	805a      	strh	r2, [r3, #2]
 800f5ea:	809e      	strh	r6, [r3, #4]
 800f5ec:	80de      	strh	r6, [r3, #6]
 800f5ee:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800f5f0:	6901      	ldr	r1, [r0, #16]
 800f5f2:	441a      	add	r2, r3
 800f5f4:	88cc      	ldrh	r4, [r1, #6]
 800f5f6:	888b      	ldrh	r3, [r1, #4]
 800f5f8:	4323      	orrs	r3, r4
 800f5fa:	d010      	beq.n	800f61e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800f5fc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800f600:	2c00      	cmp	r4, #0
 800f602:	db0c      	blt.n	800f61e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800f604:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800f606:	429c      	cmp	r4, r3
 800f608:	da09      	bge.n	800f61e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800f60a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800f60e:	429c      	cmp	r4, r3
 800f610:	bf38      	it	cc
 800f612:	3108      	addcc	r1, #8
 800f614:	f104 0401 	add.w	r4, r4, #1
 800f618:	bf38      	it	cc
 800f61a:	6101      	strcc	r1, [r0, #16]
 800f61c:	6084      	str	r4, [r0, #8]
 800f61e:	6903      	ldr	r3, [r0, #16]
 800f620:	f8a3 a000 	strh.w	sl, [r3]
 800f624:	805a      	strh	r2, [r3, #2]
 800f626:	809e      	strh	r6, [r3, #4]
 800f628:	80de      	strh	r6, [r3, #6]
 800f62a:	9b06      	ldr	r3, [sp, #24]
 800f62c:	4293      	cmp	r3, r2
 800f62e:	464f      	mov	r7, r9
 800f630:	d19c      	bne.n	800f56c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800f632:	9b01      	ldr	r3, [sp, #4]
 800f634:	6907      	ldr	r7, [r0, #16]
 800f636:	f1c3 0620 	rsb	r6, r3, #32
 800f63a:	9b05      	ldr	r3, [sp, #20]
 800f63c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800f640:	9b04      	ldr	r3, [sp, #16]
 800f642:	429e      	cmp	r6, r3
 800f644:	f040 81cc 	bne.w	800f9e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800f648:	f9b7 3000 	ldrsh.w	r3, [r7]
 800f64c:	459e      	cmp	lr, r3
 800f64e:	d104      	bne.n	800f65a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800f650:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800f654:	429a      	cmp	r2, r3
 800f656:	f43f ae36 	beq.w	800f2c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f65a:	88f9      	ldrh	r1, [r7, #6]
 800f65c:	88bb      	ldrh	r3, [r7, #4]
 800f65e:	430b      	orrs	r3, r1
 800f660:	d010      	beq.n	800f684 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800f662:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800f666:	2b00      	cmp	r3, #0
 800f668:	db0c      	blt.n	800f684 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800f66a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800f66c:	428b      	cmp	r3, r1
 800f66e:	da09      	bge.n	800f684 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800f670:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800f674:	428b      	cmp	r3, r1
 800f676:	bf38      	it	cc
 800f678:	3708      	addcc	r7, #8
 800f67a:	f103 0301 	add.w	r3, r3, #1
 800f67e:	bf38      	it	cc
 800f680:	6107      	strcc	r7, [r0, #16]
 800f682:	6083      	str	r3, [r0, #8]
 800f684:	6903      	ldr	r3, [r0, #16]
 800f686:	f8a3 e000 	strh.w	lr, [r3]
 800f68a:	e5ff      	b.n	800f28c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800f68c:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800f68e:	9c03      	ldr	r4, [sp, #12]
 800f690:	42a2      	cmp	r2, r4
 800f692:	f6ff ae18 	blt.w	800f2c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f696:	9c06      	ldr	r4, [sp, #24]
 800f698:	42a2      	cmp	r2, r4
 800f69a:	bfb8      	it	lt
 800f69c:	3201      	addlt	r2, #1
 800f69e:	9c08      	ldr	r4, [sp, #32]
 800f6a0:	bfb8      	it	lt
 800f6a2:	9206      	strlt	r2, [sp, #24]
 800f6a4:	f1c3 0220 	rsb	r2, r3, #32
 800f6a8:	4362      	muls	r2, r4
 800f6aa:	2401      	movs	r4, #1
 800f6ac:	940b      	str	r4, [sp, #44]	@ 0x2c
 800f6ae:	2420      	movs	r4, #32
 800f6b0:	e6d5      	b.n	800f45e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800f6b2:	f009 021f 	and.w	r2, r9, #31
 800f6b6:	ea4f 1861 	mov.w	r8, r1, asr #5
 800f6ba:	920c      	str	r2, [sp, #48]	@ 0x30
 800f6bc:	9a01      	ldr	r2, [sp, #4]
 800f6be:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800f6c2:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800f6c6:	45b0      	cmp	r8, r6
 800f6c8:	f001 011f 	and.w	r1, r1, #31
 800f6cc:	eba2 0203 	sub.w	r2, r2, r3
 800f6d0:	d108      	bne.n	800f6e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800f6d2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f6d4:	4419      	add	r1, r3
 800f6d6:	4496      	add	lr, r2
 800f6d8:	fb02 a101 	mla	r1, r2, r1, sl
 800f6dc:	f8a5 e004 	strh.w	lr, [r5, #4]
 800f6e0:	80e9      	strh	r1, [r5, #6]
 800f6e2:	e6f9      	b.n	800f4d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f6e4:	2c00      	cmp	r4, #0
 800f6e6:	f2c0 80a9 	blt.w	800f83c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800f6ea:	2701      	movs	r7, #1
 800f6ec:	f1c1 0c20 	rsb	ip, r1, #32
 800f6f0:	970a      	str	r7, [sp, #40]	@ 0x28
 800f6f2:	fb02 f20c 	mul.w	r2, r2, ip
 800f6f6:	2720      	movs	r7, #32
 800f6f8:	9709      	str	r7, [sp, #36]	@ 0x24
 800f6fa:	fb92 fcf4 	sdiv	ip, r2, r4
 800f6fe:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 800f700:	fb04 221c 	mls	r2, r4, ip, r2
 800f704:	2a00      	cmp	r2, #0
 800f706:	bfb8      	it	lt
 800f708:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800f70c:	4439      	add	r1, r7
 800f70e:	fb0c a101 	mla	r1, ip, r1, sl
 800f712:	80e9      	strh	r1, [r5, #6]
 800f714:	44e6      	add	lr, ip
 800f716:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800f718:	f8a5 e004 	strh.w	lr, [r5, #4]
 800f71c:	eb08 0501 	add.w	r5, r8, r1
 800f720:	6901      	ldr	r1, [r0, #16]
 800f722:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800f726:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800f72a:	bfb8      	it	lt
 800f72c:	1912      	addlt	r2, r2, r4
 800f72e:	ea58 070e 	orrs.w	r7, r8, lr
 800f732:	d010      	beq.n	800f756 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f734:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800f738:	f1be 0f00 	cmp.w	lr, #0
 800f73c:	db0b      	blt.n	800f756 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f73e:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800f740:	45be      	cmp	lr, r7
 800f742:	da08      	bge.n	800f756 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f744:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800f748:	45be      	cmp	lr, r7
 800f74a:	bf3c      	itt	cc
 800f74c:	3108      	addcc	r1, #8
 800f74e:	6101      	strcc	r1, [r0, #16]
 800f750:	f10e 0101 	add.w	r1, lr, #1
 800f754:	6081      	str	r1, [r0, #8]
 800f756:	6901      	ldr	r1, [r0, #16]
 800f758:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800f75c:	800d      	strh	r5, [r1, #0]
 800f75e:	f04f 0e00 	mov.w	lr, #0
 800f762:	42ae      	cmp	r6, r5
 800f764:	f8a1 8002 	strh.w	r8, [r1, #2]
 800f768:	f8a1 e004 	strh.w	lr, [r1, #4]
 800f76c:	f8a1 e006 	strh.w	lr, [r1, #6]
 800f770:	4463      	add	r3, ip
 800f772:	d054      	beq.n	800f81e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800f774:	9901      	ldr	r1, [sp, #4]
 800f776:	1ac9      	subs	r1, r1, r3
 800f778:	4461      	add	r1, ip
 800f77a:	0149      	lsls	r1, r1, #5
 800f77c:	fb91 fef4 	sdiv	lr, r1, r4
 800f780:	fb04 111e 	mls	r1, r4, lr, r1
 800f784:	2900      	cmp	r1, #0
 800f786:	bfb8      	it	lt
 800f788:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800f78c:	f10e 0701 	add.w	r7, lr, #1
 800f790:	bfb8      	it	lt
 800f792:	1909      	addlt	r1, r1, r4
 800f794:	1b12      	subs	r2, r2, r4
 800f796:	970d      	str	r7, [sp, #52]	@ 0x34
 800f798:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800f79c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 800f79e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800f7a2:	1852      	adds	r2, r2, r1
 800f7a4:	bf54      	ite	pl
 800f7a6:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 800f7aa:	46f4      	movmi	ip, lr
 800f7ac:	44e3      	add	fp, ip
 800f7ae:	f8aa b004 	strh.w	fp, [sl, #4]
 800f7b2:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800f7b6:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800f7ba:	f8aa b006 	strh.w	fp, [sl, #6]
 800f7be:	4463      	add	r3, ip
 800f7c0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f7c4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f7c8:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800f7cc:	bf58      	it	pl
 800f7ce:	1b12      	subpl	r2, r2, r4
 800f7d0:	443d      	add	r5, r7
 800f7d2:	ea5b 070a 	orrs.w	r7, fp, sl
 800f7d6:	d014      	beq.n	800f802 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f7d8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800f7dc:	f1ba 0f00 	cmp.w	sl, #0
 800f7e0:	db0f      	blt.n	800f802 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f7e2:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800f7e4:	45ba      	cmp	sl, r7
 800f7e6:	da0c      	bge.n	800f802 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f7e8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800f7ec:	45ba      	cmp	sl, r7
 800f7ee:	bf38      	it	cc
 800f7f0:	f10c 0c08 	addcc.w	ip, ip, #8
 800f7f4:	f10a 0a01 	add.w	sl, sl, #1
 800f7f8:	bf38      	it	cc
 800f7fa:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800f7fe:	f8c0 a008 	str.w	sl, [r0, #8]
 800f802:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f806:	f04f 0700 	mov.w	r7, #0
 800f80a:	42ae      	cmp	r6, r5
 800f80c:	f8ac 5000 	strh.w	r5, [ip]
 800f810:	f8ac 8002 	strh.w	r8, [ip, #2]
 800f814:	f8ac 7004 	strh.w	r7, [ip, #4]
 800f818:	f8ac 7006 	strh.w	r7, [ip, #6]
 800f81c:	d1bc      	bne.n	800f798 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800f81e:	6904      	ldr	r4, [r0, #16]
 800f820:	9a01      	ldr	r2, [sp, #4]
 800f822:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800f824:	1ad3      	subs	r3, r2, r3
 800f826:	88a2      	ldrh	r2, [r4, #4]
 800f828:	441a      	add	r2, r3
 800f82a:	80a2      	strh	r2, [r4, #4]
 800f82c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800f82e:	3120      	adds	r1, #32
 800f830:	1a89      	subs	r1, r1, r2
 800f832:	88e2      	ldrh	r2, [r4, #6]
 800f834:	fb03 2301 	mla	r3, r3, r1, r2
 800f838:	80e3      	strh	r3, [r4, #6]
 800f83a:	e64d      	b.n	800f4d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f83c:	f04f 37ff 	mov.w	r7, #4294967295
 800f840:	970a      	str	r7, [sp, #40]	@ 0x28
 800f842:	434a      	muls	r2, r1
 800f844:	4264      	negs	r4, r4
 800f846:	2700      	movs	r7, #0
 800f848:	e756      	b.n	800f6f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800f84a:	ea4f 1867 	mov.w	r8, r7, asr #5
 800f84e:	f009 031f 	and.w	r3, r9, #31
 800f852:	45d0      	cmp	r8, sl
 800f854:	f007 071f 	and.w	r7, r7, #31
 800f858:	930f      	str	r3, [sp, #60]	@ 0x3c
 800f85a:	fa1f fc8c 	uxth.w	ip, ip
 800f85e:	fa1f fe8e 	uxth.w	lr, lr
 800f862:	d10a      	bne.n	800f87a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800f864:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800f866:	449c      	add	ip, r3
 800f868:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800f86a:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f86e:	441f      	add	r7, r3
 800f870:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800f872:	fb03 e707 	mla	r7, r3, r7, lr
 800f876:	80ef      	strh	r7, [r5, #6]
 800f878:	e6b9      	b.n	800f5ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f87a:	2900      	cmp	r1, #0
 800f87c:	f2c0 80a8 	blt.w	800f9d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800f880:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800f882:	f1c7 0320 	rsb	r3, r7, #32
 800f886:	4363      	muls	r3, r4
 800f888:	2401      	movs	r4, #1
 800f88a:	940d      	str	r4, [sp, #52]	@ 0x34
 800f88c:	2420      	movs	r4, #32
 800f88e:	940c      	str	r4, [sp, #48]	@ 0x30
 800f890:	fb93 f4f1 	sdiv	r4, r3, r1
 800f894:	fb01 3b14 	mls	fp, r1, r4, r3
 800f898:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f89a:	f1bb 0f00 	cmp.w	fp, #0
 800f89e:	bfb8      	it	lt
 800f8a0:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800f8a4:	441f      	add	r7, r3
 800f8a6:	fb04 e707 	mla	r7, r4, r7, lr
 800f8aa:	44a4      	add	ip, r4
 800f8ac:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f8b0:	80ef      	strh	r7, [r5, #6]
 800f8b2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f8b6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f8b8:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800f8bc:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f8c0:	bfb8      	it	lt
 800f8c2:	448b      	addlt	fp, r1
 800f8c4:	eb08 0503 	add.w	r5, r8, r3
 800f8c8:	ea5e 0307 	orrs.w	r3, lr, r7
 800f8cc:	d011      	beq.n	800f8f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f8ce:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800f8d2:	f1be 0f00 	cmp.w	lr, #0
 800f8d6:	db0c      	blt.n	800f8f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f8d8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800f8da:	45be      	cmp	lr, r7
 800f8dc:	da09      	bge.n	800f8f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f8de:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800f8e2:	45be      	cmp	lr, r7
 800f8e4:	bf3c      	itt	cc
 800f8e6:	f10c 0708 	addcc.w	r7, ip, #8
 800f8ea:	6107      	strcc	r7, [r0, #16]
 800f8ec:	f10e 0701 	add.w	r7, lr, #1
 800f8f0:	6087      	str	r7, [r0, #8]
 800f8f2:	6907      	ldr	r7, [r0, #16]
 800f8f4:	b213      	sxth	r3, r2
 800f8f6:	9310      	str	r3, [sp, #64]	@ 0x40
 800f8f8:	807b      	strh	r3, [r7, #2]
 800f8fa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800f8fc:	803d      	strh	r5, [r7, #0]
 800f8fe:	4555      	cmp	r5, sl
 800f900:	80be      	strh	r6, [r7, #4]
 800f902:	80fe      	strh	r6, [r7, #6]
 800f904:	eb04 0c03 	add.w	ip, r4, r3
 800f908:	d051      	beq.n	800f9ae <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800f90a:	9b01      	ldr	r3, [sp, #4]
 800f90c:	eba3 070c 	sub.w	r7, r3, ip
 800f910:	443c      	add	r4, r7
 800f912:	0164      	lsls	r4, r4, #5
 800f914:	fb94 f8f1 	sdiv	r8, r4, r1
 800f918:	fb01 4418 	mls	r4, r1, r8, r4
 800f91c:	2c00      	cmp	r4, #0
 800f91e:	bfb8      	it	lt
 800f920:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f924:	ebab 0301 	sub.w	r3, fp, r1
 800f928:	f108 0701 	add.w	r7, r8, #1
 800f92c:	bfb8      	it	lt
 800f92e:	1864      	addlt	r4, r4, r1
 800f930:	9309      	str	r3, [sp, #36]	@ 0x24
 800f932:	9711      	str	r7, [sp, #68]	@ 0x44
 800f934:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f936:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f93a:	191b      	adds	r3, r3, r4
 800f93c:	bf58      	it	pl
 800f93e:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 800f940:	f8be b004 	ldrh.w	fp, [lr, #4]
 800f944:	9309      	str	r3, [sp, #36]	@ 0x24
 800f946:	bf48      	it	mi
 800f948:	4647      	movmi	r7, r8
 800f94a:	44bb      	add	fp, r7
 800f94c:	f8ae b004 	strh.w	fp, [lr, #4]
 800f950:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f954:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f958:	f8ae b006 	strh.w	fp, [lr, #6]
 800f95c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f960:	44bc      	add	ip, r7
 800f962:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 800f964:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f968:	443d      	add	r5, r7
 800f96a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800f96e:	bf5c      	itt	pl
 800f970:	1a5b      	subpl	r3, r3, r1
 800f972:	9309      	strpl	r3, [sp, #36]	@ 0x24
 800f974:	ea5b 0307 	orrs.w	r3, fp, r7
 800f978:	d011      	beq.n	800f99e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f97a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800f97e:	f1bb 0f00 	cmp.w	fp, #0
 800f982:	db0c      	blt.n	800f99e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f984:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800f986:	45bb      	cmp	fp, r7
 800f988:	da09      	bge.n	800f99e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f98a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f98e:	45bb      	cmp	fp, r7
 800f990:	bf3c      	itt	cc
 800f992:	f10e 0708 	addcc.w	r7, lr, #8
 800f996:	6107      	strcc	r7, [r0, #16]
 800f998:	f10b 0701 	add.w	r7, fp, #1
 800f99c:	6087      	str	r7, [r0, #8]
 800f99e:	6907      	ldr	r7, [r0, #16]
 800f9a0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800f9a2:	803d      	strh	r5, [r7, #0]
 800f9a4:	4555      	cmp	r5, sl
 800f9a6:	807b      	strh	r3, [r7, #2]
 800f9a8:	80be      	strh	r6, [r7, #4]
 800f9aa:	80fe      	strh	r6, [r7, #6]
 800f9ac:	d1c2      	bne.n	800f934 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800f9ae:	9b01      	ldr	r3, [sp, #4]
 800f9b0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 800f9b2:	eba3 0c0c 	sub.w	ip, r3, ip
 800f9b6:	6903      	ldr	r3, [r0, #16]
 800f9b8:	8899      	ldrh	r1, [r3, #4]
 800f9ba:	4461      	add	r1, ip
 800f9bc:	8099      	strh	r1, [r3, #4]
 800f9be:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800f9c0:	3720      	adds	r7, #32
 800f9c2:	1a7f      	subs	r7, r7, r1
 800f9c4:	88d9      	ldrh	r1, [r3, #6]
 800f9c6:	fb0c 1c07 	mla	ip, ip, r7, r1
 800f9ca:	f8a3 c006 	strh.w	ip, [r3, #6]
 800f9ce:	e60e      	b.n	800f5ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f9d0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800f9d2:	f04f 34ff 	mov.w	r4, #4294967295
 800f9d6:	940d      	str	r4, [sp, #52]	@ 0x34
 800f9d8:	437b      	muls	r3, r7
 800f9da:	4249      	negs	r1, r1
 800f9dc:	2400      	movs	r4, #0
 800f9de:	e756      	b.n	800f88e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800f9e0:	9905      	ldr	r1, [sp, #20]
 800f9e2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800f9e6:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800f9ea:	f001 011f 	and.w	r1, r1, #31
 800f9ee:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800f9f2:	9102      	str	r1, [sp, #8]
 800f9f4:	9904      	ldr	r1, [sp, #16]
 800f9f6:	45f3      	cmp	fp, lr
 800f9f8:	f009 0c1f 	and.w	ip, r9, #31
 800f9fc:	eba1 0406 	sub.w	r4, r1, r6
 800fa00:	d108      	bne.n	800fa14 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800fa02:	9b02      	ldr	r3, [sp, #8]
 800fa04:	449c      	add	ip, r3
 800fa06:	44a0      	add	r8, r4
 800fa08:	fb04 a40c 	mla	r4, r4, ip, sl
 800fa0c:	f8a7 8004 	strh.w	r8, [r7, #4]
 800fa10:	80fc      	strh	r4, [r7, #6]
 800fa12:	e458      	b.n	800f2c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800fa14:	9905      	ldr	r1, [sp, #20]
 800fa16:	ebb1 0109 	subs.w	r1, r1, r9
 800fa1a:	bf5b      	ittet	pl
 800fa1c:	f1cc 0520 	rsbpl	r5, ip, #32
 800fa20:	436c      	mulpl	r4, r5
 800fa22:	2500      	movmi	r5, #0
 800fa24:	2520      	movpl	r5, #32
 800fa26:	bf44      	itt	mi
 800fa28:	fb04 f40c 	mulmi.w	r4, r4, ip
 800fa2c:	4249      	negmi	r1, r1
 800fa2e:	9501      	str	r5, [sp, #4]
 800fa30:	9b01      	ldr	r3, [sp, #4]
 800fa32:	fb94 f5f1 	sdiv	r5, r4, r1
 800fa36:	fb01 4415 	mls	r4, r1, r5, r4
 800fa3a:	bf54      	ite	pl
 800fa3c:	f04f 0901 	movpl.w	r9, #1
 800fa40:	f04f 39ff 	movmi.w	r9, #4294967295
 800fa44:	2c00      	cmp	r4, #0
 800fa46:	bfb8      	it	lt
 800fa48:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800fa4c:	449c      	add	ip, r3
 800fa4e:	44a8      	add	r8, r5
 800fa50:	fb05 ac0c 	mla	ip, r5, ip, sl
 800fa54:	f8a7 8004 	strh.w	r8, [r7, #4]
 800fa58:	f8a7 c006 	strh.w	ip, [r7, #6]
 800fa5c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800fa60:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800fa64:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800fa68:	bfb8      	it	lt
 800fa6a:	1864      	addlt	r4, r4, r1
 800fa6c:	ea58 0707 	orrs.w	r7, r8, r7
 800fa70:	eb0b 0309 	add.w	r3, fp, r9
 800fa74:	d011      	beq.n	800fa9a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800fa76:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800fa7a:	f1b8 0f00 	cmp.w	r8, #0
 800fa7e:	db0c      	blt.n	800fa9a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800fa80:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800fa82:	45b8      	cmp	r8, r7
 800fa84:	da09      	bge.n	800fa9a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800fa86:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800fa8a:	45b8      	cmp	r8, r7
 800fa8c:	bf3c      	itt	cc
 800fa8e:	f10c 0708 	addcc.w	r7, ip, #8
 800fa92:	6107      	strcc	r7, [r0, #16]
 800fa94:	f108 0701 	add.w	r7, r8, #1
 800fa98:	6087      	str	r7, [r0, #8]
 800fa9a:	6907      	ldr	r7, [r0, #16]
 800fa9c:	f04f 0c00 	mov.w	ip, #0
 800faa0:	b212      	sxth	r2, r2
 800faa2:	459e      	cmp	lr, r3
 800faa4:	803b      	strh	r3, [r7, #0]
 800faa6:	807a      	strh	r2, [r7, #2]
 800faa8:	f8a7 c004 	strh.w	ip, [r7, #4]
 800faac:	f8a7 c006 	strh.w	ip, [r7, #6]
 800fab0:	442e      	add	r6, r5
 800fab2:	d04d      	beq.n	800fb50 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800fab4:	9f04      	ldr	r7, [sp, #16]
 800fab6:	1bbf      	subs	r7, r7, r6
 800fab8:	443d      	add	r5, r7
 800faba:	016d      	lsls	r5, r5, #5
 800fabc:	fb95 f8f1 	sdiv	r8, r5, r1
 800fac0:	fb01 5518 	mls	r5, r1, r8, r5
 800fac4:	4565      	cmp	r5, ip
 800fac6:	bfb8      	it	lt
 800fac8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800facc:	f108 0701 	add.w	r7, r8, #1
 800fad0:	bfb8      	it	lt
 800fad2:	186d      	addlt	r5, r5, r1
 800fad4:	1a64      	subs	r4, r4, r1
 800fad6:	9703      	str	r7, [sp, #12]
 800fad8:	f04f 0a00 	mov.w	sl, #0
 800fadc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800fae0:	1964      	adds	r4, r4, r5
 800fae2:	bf58      	it	pl
 800fae4:	9f03      	ldrpl	r7, [sp, #12]
 800fae6:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800faea:	bf48      	it	mi
 800faec:	4647      	movmi	r7, r8
 800faee:	44bb      	add	fp, r7
 800faf0:	f8ac b004 	strh.w	fp, [ip, #4]
 800faf4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800faf8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800fafc:	f8ac b006 	strh.w	fp, [ip, #6]
 800fb00:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800fb04:	443e      	add	r6, r7
 800fb06:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800fb0a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800fb0e:	bf58      	it	pl
 800fb10:	1a64      	subpl	r4, r4, r1
 800fb12:	ea5b 0707 	orrs.w	r7, fp, r7
 800fb16:	444b      	add	r3, r9
 800fb18:	d011      	beq.n	800fb3e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800fb1a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800fb1e:	f1bb 0f00 	cmp.w	fp, #0
 800fb22:	db0c      	blt.n	800fb3e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800fb24:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800fb26:	45bb      	cmp	fp, r7
 800fb28:	da09      	bge.n	800fb3e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800fb2a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800fb2e:	45bb      	cmp	fp, r7
 800fb30:	bf3c      	itt	cc
 800fb32:	f10c 0708 	addcc.w	r7, ip, #8
 800fb36:	6107      	strcc	r7, [r0, #16]
 800fb38:	f10b 0701 	add.w	r7, fp, #1
 800fb3c:	6087      	str	r7, [r0, #8]
 800fb3e:	6907      	ldr	r7, [r0, #16]
 800fb40:	459e      	cmp	lr, r3
 800fb42:	803b      	strh	r3, [r7, #0]
 800fb44:	807a      	strh	r2, [r7, #2]
 800fb46:	f8a7 a004 	strh.w	sl, [r7, #4]
 800fb4a:	f8a7 a006 	strh.w	sl, [r7, #6]
 800fb4e:	d1c5      	bne.n	800fadc <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800fb50:	9b04      	ldr	r3, [sp, #16]
 800fb52:	1b9e      	subs	r6, r3, r6
 800fb54:	6903      	ldr	r3, [r0, #16]
 800fb56:	889a      	ldrh	r2, [r3, #4]
 800fb58:	4432      	add	r2, r6
 800fb5a:	809a      	strh	r2, [r3, #4]
 800fb5c:	9a02      	ldr	r2, [sp, #8]
 800fb5e:	f102 0c20 	add.w	ip, r2, #32
 800fb62:	9a01      	ldr	r2, [sp, #4]
 800fb64:	ebac 0c02 	sub.w	ip, ip, r2
 800fb68:	88da      	ldrh	r2, [r3, #6]
 800fb6a:	fb06 260c 	mla	r6, r6, ip, r2
 800fb6e:	80de      	strh	r6, [r3, #6]
 800fb70:	f7ff bba9 	b.w	800f2c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800fb74 <_ZN8touchgfx7Outline6lineToEii>:
 800fb74:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800fb76:	079b      	lsls	r3, r3, #30
 800fb78:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fb7a:	460e      	mov	r6, r1
 800fb7c:	4615      	mov	r5, r2
 800fb7e:	d511      	bpl.n	800fba4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800fb80:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800fb84:	ea86 0701 	eor.w	r7, r6, r1
 800fb88:	ea85 0302 	eor.w	r3, r5, r2
 800fb8c:	433b      	orrs	r3, r7
 800fb8e:	d009      	beq.n	800fba4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800fb90:	4633      	mov	r3, r6
 800fb92:	9500      	str	r5, [sp, #0]
 800fb94:	f7ff fb3e 	bl	800f214 <_ZN8touchgfx7Outline10renderLineEiiii>
 800fb98:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800fb9a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800fb9e:	f043 0301 	orr.w	r3, r3, #1
 800fba2:	6243      	str	r3, [r0, #36]	@ 0x24
 800fba4:	b003      	add	sp, #12
 800fba6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800fba8 <_ZN8touchgfx7Outline6moveToEii>:
 800fba8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fbaa:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800fbac:	4615      	mov	r5, r2
 800fbae:	079a      	lsls	r2, r3, #30
 800fbb0:	4604      	mov	r4, r0
 800fbb2:	460e      	mov	r6, r1
 800fbb4:	d401      	bmi.n	800fbba <_ZN8touchgfx7Outline6moveToEii+0x12>
 800fbb6:	f7ff faf9 	bl	800f1ac <_ZN8touchgfx7Outline5resetEv>
 800fbba:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800fbbc:	07db      	lsls	r3, r3, #31
 800fbbe:	d504      	bpl.n	800fbca <_ZN8touchgfx7Outline6moveToEii+0x22>
 800fbc0:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800fbc4:	4620      	mov	r0, r4
 800fbc6:	f7ff ffd5 	bl	800fb74 <_ZN8touchgfx7Outline6lineToEii>
 800fbca:	6923      	ldr	r3, [r4, #16]
 800fbcc:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fbd0:	1170      	asrs	r0, r6, #5
 800fbd2:	4290      	cmp	r0, r2
 800fbd4:	ea4f 1165 	mov.w	r1, r5, asr #5
 800fbd8:	d103      	bne.n	800fbe2 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800fbda:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800fbde:	4291      	cmp	r1, r2
 800fbe0:	d01a      	beq.n	800fc18 <_ZN8touchgfx7Outline6moveToEii+0x70>
 800fbe2:	88df      	ldrh	r7, [r3, #6]
 800fbe4:	889a      	ldrh	r2, [r3, #4]
 800fbe6:	433a      	orrs	r2, r7
 800fbe8:	d010      	beq.n	800fc0c <_ZN8touchgfx7Outline6moveToEii+0x64>
 800fbea:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800fbee:	2a00      	cmp	r2, #0
 800fbf0:	db0c      	blt.n	800fc0c <_ZN8touchgfx7Outline6moveToEii+0x64>
 800fbf2:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 800fbf4:	42ba      	cmp	r2, r7
 800fbf6:	da09      	bge.n	800fc0c <_ZN8touchgfx7Outline6moveToEii+0x64>
 800fbf8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800fbfc:	42ba      	cmp	r2, r7
 800fbfe:	bf38      	it	cc
 800fc00:	3308      	addcc	r3, #8
 800fc02:	f102 0201 	add.w	r2, r2, #1
 800fc06:	bf38      	it	cc
 800fc08:	6123      	strcc	r3, [r4, #16]
 800fc0a:	60a2      	str	r2, [r4, #8]
 800fc0c:	6923      	ldr	r3, [r4, #16]
 800fc0e:	2200      	movs	r2, #0
 800fc10:	8018      	strh	r0, [r3, #0]
 800fc12:	8059      	strh	r1, [r3, #2]
 800fc14:	809a      	strh	r2, [r3, #4]
 800fc16:	80da      	strh	r2, [r3, #6]
 800fc18:	6166      	str	r6, [r4, #20]
 800fc1a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800fc1e:	6225      	str	r5, [r4, #32]
 800fc20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800fc22 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800fc22:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fc26:	b0d0      	sub	sp, #320	@ 0x140
 800fc28:	466c      	mov	r4, sp
 800fc2a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800fc2e:	4627      	mov	r7, r4
 800fc30:	1a0d      	subs	r5, r1, r0
 800fc32:	2d48      	cmp	r5, #72	@ 0x48
 800fc34:	f100 0308 	add.w	r3, r0, #8
 800fc38:	f340 80d5 	ble.w	800fde6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800fc3c:	112d      	asrs	r5, r5, #4
 800fc3e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800fc42:	f9b0 9000 	ldrsh.w	r9, [r0]
 800fc46:	6816      	ldr	r6, [r2, #0]
 800fc48:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800fc4c:	6006      	str	r6, [r0, #0]
 800fc4e:	6856      	ldr	r6, [r2, #4]
 800fc50:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800fc54:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800fc58:	6046      	str	r6, [r0, #4]
 800fc5a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800fc5e:	f8a2 8002 	strh.w	r8, [r2, #2]
 800fc62:	f8a2 e004 	strh.w	lr, [r2, #4]
 800fc66:	f8a2 c006 	strh.w	ip, [r2, #6]
 800fc6a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800fc6e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800fc72:	4565      	cmp	r5, ip
 800fc74:	f1a1 0208 	sub.w	r2, r1, #8
 800fc78:	db06      	blt.n	800fc88 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800fc7a:	d119      	bne.n	800fcb0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800fc7c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800fc80:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800fc84:	42ae      	cmp	r6, r5
 800fc86:	dd13      	ble.n	800fcb0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800fc88:	460e      	mov	r6, r1
 800fc8a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800fc8e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800fc92:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800fc96:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800fc9a:	601d      	str	r5, [r3, #0]
 800fc9c:	6875      	ldr	r5, [r6, #4]
 800fc9e:	605d      	str	r5, [r3, #4]
 800fca0:	f821 9c08 	strh.w	r9, [r1, #-8]
 800fca4:	f821 cc06 	strh.w	ip, [r1, #-6]
 800fca8:	f821 8c04 	strh.w	r8, [r1, #-4]
 800fcac:	f821 ec02 	strh.w	lr, [r1, #-2]
 800fcb0:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800fcb4:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800fcb8:	42ae      	cmp	r6, r5
 800fcba:	db06      	blt.n	800fcca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800fcbc:	d116      	bne.n	800fcec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800fcbe:	f9b0 c000 	ldrsh.w	ip, [r0]
 800fcc2:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800fcc6:	45ac      	cmp	ip, r5
 800fcc8:	da10      	bge.n	800fcec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800fcca:	681d      	ldr	r5, [r3, #0]
 800fccc:	f9b0 8000 	ldrsh.w	r8, [r0]
 800fcd0:	6005      	str	r5, [r0, #0]
 800fcd2:	685d      	ldr	r5, [r3, #4]
 800fcd4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800fcd8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800fcdc:	f8a0 8008 	strh.w	r8, [r0, #8]
 800fce0:	6045      	str	r5, [r0, #4]
 800fce2:	8146      	strh	r6, [r0, #10]
 800fce4:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800fce8:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800fcec:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800fcf0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800fcf4:	4565      	cmp	r5, ip
 800fcf6:	db06      	blt.n	800fd06 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800fcf8:	d119      	bne.n	800fd2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800fcfa:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800fcfe:	f9b0 5000 	ldrsh.w	r5, [r0]
 800fd02:	42ae      	cmp	r6, r5
 800fd04:	da13      	bge.n	800fd2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800fd06:	460e      	mov	r6, r1
 800fd08:	f9b0 9000 	ldrsh.w	r9, [r0]
 800fd0c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800fd10:	6005      	str	r5, [r0, #0]
 800fd12:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800fd16:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800fd1a:	6875      	ldr	r5, [r6, #4]
 800fd1c:	6045      	str	r5, [r0, #4]
 800fd1e:	f821 9c08 	strh.w	r9, [r1, #-8]
 800fd22:	f821 cc06 	strh.w	ip, [r1, #-6]
 800fd26:	f821 8c04 	strh.w	r8, [r1, #-4]
 800fd2a:	f821 ec02 	strh.w	lr, [r1, #-2]
 800fd2e:	3308      	adds	r3, #8
 800fd30:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800fd34:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800fd38:	45e6      	cmp	lr, ip
 800fd3a:	dbf8      	blt.n	800fd2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800fd3c:	d105      	bne.n	800fd4a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800fd3e:	f9b3 6000 	ldrsh.w	r6, [r3]
 800fd42:	f9b0 5000 	ldrsh.w	r5, [r0]
 800fd46:	42ae      	cmp	r6, r5
 800fd48:	dbf1      	blt.n	800fd2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800fd4a:	4615      	mov	r5, r2
 800fd4c:	3a08      	subs	r2, #8
 800fd4e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800fd52:	45b4      	cmp	ip, r6
 800fd54:	dbf9      	blt.n	800fd4a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800fd56:	d105      	bne.n	800fd64 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800fd58:	f9b0 8000 	ldrsh.w	r8, [r0]
 800fd5c:	f9b2 6000 	ldrsh.w	r6, [r2]
 800fd60:	45b0      	cmp	r8, r6
 800fd62:	dbf2      	blt.n	800fd4a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800fd64:	4293      	cmp	r3, r2
 800fd66:	f1a5 0608 	sub.w	r6, r5, #8
 800fd6a:	d816      	bhi.n	800fd9a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800fd6c:	f8d6 c000 	ldr.w	ip, [r6]
 800fd70:	f9b3 a000 	ldrsh.w	sl, [r3]
 800fd74:	f8c3 c000 	str.w	ip, [r3]
 800fd78:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800fd7c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800fd80:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800fd84:	f8c3 c004 	str.w	ip, [r3, #4]
 800fd88:	f825 ac08 	strh.w	sl, [r5, #-8]
 800fd8c:	f825 ec06 	strh.w	lr, [r5, #-6]
 800fd90:	f825 9c04 	strh.w	r9, [r5, #-4]
 800fd94:	f825 8c02 	strh.w	r8, [r5, #-2]
 800fd98:	e7c9      	b.n	800fd2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800fd9a:	f8d6 e000 	ldr.w	lr, [r6]
 800fd9e:	f9b0 a000 	ldrsh.w	sl, [r0]
 800fda2:	f8c0 e000 	str.w	lr, [r0]
 800fda6:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800fdaa:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800fdae:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800fdb2:	f8c0 e004 	str.w	lr, [r0, #4]
 800fdb6:	f825 ac08 	strh.w	sl, [r5, #-8]
 800fdba:	f825 cc06 	strh.w	ip, [r5, #-6]
 800fdbe:	f825 9c04 	strh.w	r9, [r5, #-4]
 800fdc2:	f825 8c02 	strh.w	r8, [r5, #-2]
 800fdc6:	1acd      	subs	r5, r1, r3
 800fdc8:	1a16      	subs	r6, r2, r0
 800fdca:	10ed      	asrs	r5, r5, #3
 800fdcc:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800fdd0:	bfb5      	itete	lt
 800fdd2:	e9c4 0200 	strdlt	r0, r2, [r4]
 800fdd6:	e9c4 3100 	strdge	r3, r1, [r4]
 800fdda:	460a      	movlt	r2, r1
 800fddc:	4603      	movge	r3, r0
 800fdde:	3408      	adds	r4, #8
 800fde0:	4618      	mov	r0, r3
 800fde2:	4611      	mov	r1, r2
 800fde4:	e724      	b.n	800fc30 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800fde6:	4299      	cmp	r1, r3
 800fde8:	d928      	bls.n	800fe3c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800fdea:	f1a3 0210 	sub.w	r2, r3, #16
 800fdee:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800fdf2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800fdf6:	45ac      	cmp	ip, r5
 800fdf8:	db06      	blt.n	800fe08 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800fdfa:	d11d      	bne.n	800fe38 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800fdfc:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800fe00:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800fe04:	42ae      	cmp	r6, r5
 800fe06:	da17      	bge.n	800fe38 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800fe08:	4615      	mov	r5, r2
 800fe0a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800fe0e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800fe12:	6116      	str	r6, [r2, #16]
 800fe14:	686e      	ldr	r6, [r5, #4]
 800fe16:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800fe1a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800fe1e:	f8a2 9008 	strh.w	r9, [r2, #8]
 800fe22:	42a8      	cmp	r0, r5
 800fe24:	6156      	str	r6, [r2, #20]
 800fe26:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800fe2a:	f8a2 800c 	strh.w	r8, [r2, #12]
 800fe2e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800fe32:	f1a2 0208 	sub.w	r2, r2, #8
 800fe36:	d1da      	bne.n	800fdee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800fe38:	3308      	adds	r3, #8
 800fe3a:	e7d4      	b.n	800fde6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800fe3c:	42bc      	cmp	r4, r7
 800fe3e:	d903      	bls.n	800fe48 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800fe40:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800fe44:	3c08      	subs	r4, #8
 800fe46:	e6f3      	b.n	800fc30 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800fe48:	b050      	add	sp, #320	@ 0x140
 800fe4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800fe4e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800fe4e:	b510      	push	{r4, lr}
 800fe50:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800fe52:	07da      	lsls	r2, r3, #31
 800fe54:	4604      	mov	r4, r0
 800fe56:	d507      	bpl.n	800fe68 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800fe58:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800fe5c:	f7ff fe8a 	bl	800fb74 <_ZN8touchgfx7Outline6lineToEii>
 800fe60:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800fe62:	f023 0301 	bic.w	r3, r3, #1
 800fe66:	6243      	str	r3, [r0, #36]	@ 0x24
 800fe68:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800fe6a:	079b      	lsls	r3, r3, #30
 800fe6c:	d521      	bpl.n	800feb2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800fe6e:	6923      	ldr	r3, [r4, #16]
 800fe70:	88d9      	ldrh	r1, [r3, #6]
 800fe72:	889a      	ldrh	r2, [r3, #4]
 800fe74:	430a      	orrs	r2, r1
 800fe76:	d010      	beq.n	800fe9a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800fe78:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800fe7c:	2a00      	cmp	r2, #0
 800fe7e:	db0c      	blt.n	800fe9a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800fe80:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800fe82:	428a      	cmp	r2, r1
 800fe84:	da09      	bge.n	800fe9a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800fe86:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800fe8a:	4291      	cmp	r1, r2
 800fe8c:	bf88      	it	hi
 800fe8e:	3308      	addhi	r3, #8
 800fe90:	f102 0201 	add.w	r2, r2, #1
 800fe94:	bf88      	it	hi
 800fe96:	6123      	strhi	r3, [r4, #16]
 800fe98:	60a2      	str	r2, [r4, #8]
 800fe9a:	68a1      	ldr	r1, [r4, #8]
 800fe9c:	b129      	cbz	r1, 800feaa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800fe9e:	6863      	ldr	r3, [r4, #4]
 800fea0:	4299      	cmp	r1, r3
 800fea2:	d802      	bhi.n	800feaa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800fea4:	68e0      	ldr	r0, [r4, #12]
 800fea6:	f7ff febc 	bl	800fc22 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800feaa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800feac:	f023 0302 	bic.w	r3, r3, #2
 800feb0:	6263      	str	r3, [r4, #36]	@ 0x24
 800feb2:	68e0      	ldr	r0, [r4, #12]
 800feb4:	bd10      	pop	{r4, pc}
	...

0800feb8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800feb8:	4b01      	ldr	r3, [pc, #4]	@ (800fec0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800feba:	6818      	ldr	r0, [r3, #0]
 800febc:	4770      	bx	lr
 800febe:	bf00      	nop
 800fec0:	20015240 	.word	0x20015240

0800fec4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800fec4:	4b01      	ldr	r3, [pc, #4]	@ (800fecc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800fec6:	6818      	ldr	r0, [r3, #0]
 800fec8:	4770      	bx	lr
 800feca:	bf00      	nop
 800fecc:	20015244 	.word	0x20015244

0800fed0 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800fed0:	b510      	push	{r4, lr}
 800fed2:	6803      	ldr	r3, [r0, #0]
 800fed4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fed6:	460c      	mov	r4, r1
 800fed8:	4798      	blx	r3
 800feda:	1b03      	subs	r3, r0, r4
 800fedc:	4258      	negs	r0, r3
 800fede:	4158      	adcs	r0, r3
 800fee0:	bd10      	pop	{r4, pc}
	...

0800fee4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800fee4:	4b01      	ldr	r3, [pc, #4]	@ (800feec <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800fee6:	6019      	str	r1, [r3, #0]
 800fee8:	4770      	bx	lr
 800feea:	bf00      	nop
 800feec:	20015248 	.word	0x20015248

0800fef0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800fef0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fef4:	4696      	mov	lr, r2
 800fef6:	4605      	mov	r5, r0
 800fef8:	4614      	mov	r4, r2
 800fefa:	460e      	mov	r6, r1
 800fefc:	461f      	mov	r7, r3
 800fefe:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ff02:	b097      	sub	sp, #92	@ 0x5c
 800ff04:	f10d 0c1c 	add.w	ip, sp, #28
 800ff08:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ff0c:	f8de 3000 	ldr.w	r3, [lr]
 800ff10:	f8cc 3000 	str.w	r3, [ip]
 800ff14:	f104 0e14 	add.w	lr, r4, #20
 800ff18:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ff1c:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800ff20:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ff24:	f8de 3000 	ldr.w	r3, [lr]
 800ff28:	f8cc 3000 	str.w	r3, [ip]
 800ff2c:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800ff30:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ff34:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800ff38:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ff3c:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800ff40:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800ff44:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800ff48:	f8de 3000 	ldr.w	r3, [lr]
 800ff4c:	f8cc 3000 	str.w	r3, [ip]
 800ff50:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800ff52:	682b      	ldr	r3, [r5, #0]
 800ff54:	9201      	str	r2, [sp, #4]
 800ff56:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800ff5a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800ff5c:	9200      	str	r2, [sp, #0]
 800ff5e:	f8cd 8008 	str.w	r8, [sp, #8]
 800ff62:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800ff66:	aa07      	add	r2, sp, #28
 800ff68:	463b      	mov	r3, r7
 800ff6a:	4631      	mov	r1, r6
 800ff6c:	4628      	mov	r0, r5
 800ff6e:	47d8      	blx	fp
 800ff70:	46a6      	mov	lr, r4
 800ff72:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ff76:	f10d 0c1c 	add.w	ip, sp, #28
 800ff7a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ff7e:	f8de 3000 	ldr.w	r3, [lr]
 800ff82:	f8cc 3000 	str.w	r3, [ip]
 800ff86:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800ff8a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ff8e:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800ff92:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ff96:	343c      	adds	r4, #60	@ 0x3c
 800ff98:	f8de 3000 	ldr.w	r3, [lr]
 800ff9c:	f8cc 3000 	str.w	r3, [ip]
 800ffa0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ffa2:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800ffa6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ffaa:	6823      	ldr	r3, [r4, #0]
 800ffac:	f8cc 3000 	str.w	r3, [ip]
 800ffb0:	682b      	ldr	r3, [r5, #0]
 800ffb2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800ffb6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800ffb8:	9201      	str	r2, [sp, #4]
 800ffba:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800ffbc:	9200      	str	r2, [sp, #0]
 800ffbe:	f8cd 8008 	str.w	r8, [sp, #8]
 800ffc2:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800ffc4:	aa07      	add	r2, sp, #28
 800ffc6:	463b      	mov	r3, r7
 800ffc8:	4631      	mov	r1, r6
 800ffca:	4628      	mov	r0, r5
 800ffcc:	47a0      	blx	r4
 800ffce:	b017      	add	sp, #92	@ 0x5c
 800ffd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ffd4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800ffd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ffd8:	b08d      	sub	sp, #52	@ 0x34
 800ffda:	4688      	mov	r8, r1
 800ffdc:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800ffde:	f8d3 c000 	ldr.w	ip, [r3]
 800ffe2:	680f      	ldr	r7, [r1, #0]
 800ffe4:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800ffe8:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800ffec:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800fff0:	edd3 6a07 	vldr	s13, [r3, #28]
 800fff4:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800fff6:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800fffa:	f9b1 9000 	ldrsh.w	r9, [r1]
 800fffe:	f9ba 1000 	ldrsh.w	r1, [sl]
 8010002:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 8010006:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 801000a:	eba7 070c 	sub.w	r7, r7, ip
 801000e:	42bc      	cmp	r4, r7
 8010010:	bfa8      	it	ge
 8010012:	463c      	movge	r4, r7
 8010014:	ee07 4a90 	vmov	s15, r4
 8010018:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 801001c:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 8010020:	ee25 4a04 	vmul.f32	s8, s10, s8
 8010024:	ee65 4a24 	vmul.f32	s9, s10, s9
 8010028:	ee25 5a27 	vmul.f32	s10, s10, s15
 801002c:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8010030:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8010034:	eb09 0e0c 	add.w	lr, r9, ip
 8010038:	4571      	cmp	r1, lr
 801003a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 801003e:	ee32 1a05 	vadd.f32	s2, s4, s10
 8010042:	ee36 0a84 	vadd.f32	s0, s13, s8
 8010046:	ee61 1a87 	vmul.f32	s3, s3, s14
 801004a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801004e:	f340 808d 	ble.w	801016c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8010052:	eba1 060e 	sub.w	r6, r1, lr
 8010056:	fb96 f5f4 	sdiv	r5, r6, r4
 801005a:	ee07 5a10 	vmov	s14, r5
 801005e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010062:	2d00      	cmp	r5, #0
 8010064:	fb04 6615 	mls	r6, r4, r5, r6
 8010068:	eea7 0a04 	vfma.f32	s0, s14, s8
 801006c:	eee7 0a24 	vfma.f32	s1, s14, s9
 8010070:	eea7 1a05 	vfma.f32	s2, s14, s10
 8010074:	dd13      	ble.n	801009e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8010076:	ee70 6a44 	vsub.f32	s13, s0, s8
 801007a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 801007e:	eef5 6a40 	vcmp.f32	s13, #0.0
 8010082:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010086:	bf18      	it	ne
 8010088:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 801008c:	ee31 2a45 	vsub.f32	s4, s2, s10
 8010090:	bf08      	it	eq
 8010092:	eeb0 7a67 	vmoveq.f32	s14, s15
 8010096:	ee61 1a87 	vmul.f32	s3, s3, s14
 801009a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801009e:	fb05 f204 	mul.w	r2, r5, r4
 80100a2:	1abf      	subs	r7, r7, r2
 80100a4:	4494      	add	ip, r2
 80100a6:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80100aa:	4411      	add	r1, r2
 80100ac:	eb09 020c 	add.w	r2, r9, ip
 80100b0:	443a      	add	r2, r7
 80100b2:	b209      	sxth	r1, r1
 80100b4:	428a      	cmp	r2, r1
 80100b6:	bfc4      	itt	gt
 80100b8:	eba1 0209 	subgt.w	r2, r1, r9
 80100bc:	eba2 070c 	subgt.w	r7, r2, ip
 80100c0:	2f00      	cmp	r7, #0
 80100c2:	dd50      	ble.n	8010166 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80100c4:	fb97 f1f4 	sdiv	r1, r7, r4
 80100c8:	fb04 7211 	mls	r2, r4, r1, r7
 80100cc:	b90a      	cbnz	r2, 80100d2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80100ce:	3901      	subs	r1, #1
 80100d0:	4622      	mov	r2, r4
 80100d2:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80100d6:	6840      	ldr	r0, [r0, #4]
 80100d8:	900b      	str	r0, [sp, #44]	@ 0x2c
 80100da:	f8d0 a000 	ldr.w	sl, [r0]
 80100de:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 80100e0:	9008      	str	r0, [sp, #32]
 80100e2:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 80100e6:	9818      	ldr	r0, [sp, #96]	@ 0x60
 80100e8:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 80100ec:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80100f0:	695b      	ldr	r3, [r3, #20]
 80100f2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80100f4:	445b      	add	r3, fp
 80100f6:	eef0 6a42 	vmov.f32	s13, s4
 80100fa:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80100fe:	ee21 3a23 	vmul.f32	s6, s2, s7
 8010102:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8010106:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801010a:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 801010e:	9307      	str	r3, [sp, #28]
 8010110:	ee17 7a90 	vmov	r7, s15
 8010114:	ee73 7a42 	vsub.f32	s15, s6, s4
 8010118:	eeb0 7a61 	vmov.f32	s14, s3
 801011c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8010120:	ee16 3a90 	vmov	r3, s13
 8010124:	fb97 f7f4 	sdiv	r7, r7, r4
 8010128:	ee17 ca90 	vmov	ip, s15
 801012c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8010130:	fb9c fcf4 	sdiv	ip, ip, r4
 8010134:	fb0c 3306 	mla	r3, ip, r6, r3
 8010138:	9302      	str	r3, [sp, #8]
 801013a:	ee17 3a10 	vmov	r3, s14
 801013e:	44b6      	add	lr, r6
 8010140:	fb04 e505 	mla	r5, r4, r5, lr
 8010144:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8010148:	fb07 3706 	mla	r7, r7, r6, r3
 801014c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8010150:	e9cd 4700 	strd	r4, r7, [sp]
 8010154:	2900      	cmp	r1, #0
 8010156:	bfcc      	ite	gt
 8010158:	46a1      	movgt	r9, r4
 801015a:	4691      	movle	r9, r2
 801015c:	eba9 0306 	sub.w	r3, r9, r6
 8010160:	f8da 4008 	ldr.w	r4, [sl, #8]
 8010164:	47a0      	blx	r4
 8010166:	b00d      	add	sp, #52	@ 0x34
 8010168:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801016c:	2500      	movs	r5, #0
 801016e:	462e      	mov	r6, r5
 8010170:	e799      	b.n	80100a6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08010174 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8010174:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010178:	b0db      	sub	sp, #364	@ 0x16c
 801017a:	461d      	mov	r5, r3
 801017c:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 8010180:	930a      	str	r3, [sp, #40]	@ 0x28
 8010182:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 8010186:	930b      	str	r3, [sp, #44]	@ 0x2c
 8010188:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 801018c:	9310      	str	r3, [sp, #64]	@ 0x40
 801018e:	6803      	ldr	r3, [r0, #0]
 8010190:	910f      	str	r1, [sp, #60]	@ 0x3c
 8010192:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 8010194:	9009      	str	r0, [sp, #36]	@ 0x24
 8010196:	4614      	mov	r4, r2
 8010198:	4629      	mov	r1, r5
 801019a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 801019e:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 80101a2:	47b8      	blx	r7
 80101a4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80101a6:	6058      	str	r0, [r3, #4]
 80101a8:	2800      	cmp	r0, #0
 80101aa:	f000 83a1 	beq.w	80108f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80101ae:	682b      	ldr	r3, [r5, #0]
 80101b0:	9314      	str	r3, [sp, #80]	@ 0x50
 80101b2:	686b      	ldr	r3, [r5, #4]
 80101b4:	9315      	str	r3, [sp, #84]	@ 0x54
 80101b6:	4bc4      	ldr	r3, [pc, #784]	@ (80104c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80101b8:	ed94 7a02 	vldr	s14, [r4, #8]
 80101bc:	7819      	ldrb	r1, [r3, #0]
 80101be:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80101c2:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 80101c6:	2900      	cmp	r1, #0
 80101c8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80101cc:	bf16      	itet	ne
 80101ce:	4619      	movne	r1, r3
 80101d0:	4611      	moveq	r1, r2
 80101d2:	4613      	movne	r3, r2
 80101d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80101d8:	9116      	str	r1, [sp, #88]	@ 0x58
 80101da:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 80101de:	f240 8387 	bls.w	80108f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80101e2:	ed94 7a07 	vldr	s14, [r4, #28]
 80101e6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80101ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80101ee:	f240 837f 	bls.w	80108f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80101f2:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 80101f6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80101fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80101fe:	f240 8377 	bls.w	80108f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010202:	6822      	ldr	r2, [r4, #0]
 8010204:	4bb1      	ldr	r3, [pc, #708]	@ (80104cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8010206:	429a      	cmp	r2, r3
 8010208:	f2c0 8372 	blt.w	80108f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801020c:	49b0      	ldr	r1, [pc, #704]	@ (80104d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 801020e:	6963      	ldr	r3, [r4, #20]
 8010210:	428a      	cmp	r2, r1
 8010212:	f300 836d 	bgt.w	80108f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010216:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 801021a:	48ae      	ldr	r0, [pc, #696]	@ (80104d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 801021c:	33ff      	adds	r3, #255	@ 0xff
 801021e:	4283      	cmp	r3, r0
 8010220:	f200 8366 	bhi.w	80108f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010224:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8010226:	4dac      	ldr	r5, [pc, #688]	@ (80104d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8010228:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 801022c:	33ff      	adds	r3, #255	@ 0xff
 801022e:	42ab      	cmp	r3, r5
 8010230:	f200 835e 	bhi.w	80108f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010234:	6862      	ldr	r2, [r4, #4]
 8010236:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 801023a:	33ff      	adds	r3, #255	@ 0xff
 801023c:	4283      	cmp	r3, r0
 801023e:	f200 8357 	bhi.w	80108f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010242:	69a1      	ldr	r1, [r4, #24]
 8010244:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 8010248:	33ff      	adds	r3, #255	@ 0xff
 801024a:	4283      	cmp	r3, r0
 801024c:	f200 8350 	bhi.w	80108f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010250:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8010252:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 8010256:	30ff      	adds	r0, #255	@ 0xff
 8010258:	42a8      	cmp	r0, r5
 801025a:	f200 8349 	bhi.w	80108f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801025e:	428a      	cmp	r2, r1
 8010260:	f280 8110 	bge.w	8010484 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8010264:	429a      	cmp	r2, r3
 8010266:	f300 8119 	bgt.w	801049c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 801026a:	4299      	cmp	r1, r3
 801026c:	f280 811d 	bge.w	80104aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8010270:	2502      	movs	r5, #2
 8010272:	2701      	movs	r7, #1
 8010274:	46a9      	mov	r9, r5
 8010276:	46b8      	mov	r8, r7
 8010278:	f04f 0a00 	mov.w	sl, #0
 801027c:	4621      	mov	r1, r4
 801027e:	a849      	add	r0, sp, #292	@ 0x124
 8010280:	f004 fa18 	bl	80146b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8010284:	4622      	mov	r2, r4
 8010286:	4653      	mov	r3, sl
 8010288:	a949      	add	r1, sp, #292	@ 0x124
 801028a:	f8cd 9000 	str.w	r9, [sp]
 801028e:	a819      	add	r0, sp, #100	@ 0x64
 8010290:	f004 fb40 	bl	8014914 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8010294:	4622      	mov	r2, r4
 8010296:	4653      	mov	r3, sl
 8010298:	a949      	add	r1, sp, #292	@ 0x124
 801029a:	f8cd 8000 	str.w	r8, [sp]
 801029e:	a829      	add	r0, sp, #164	@ 0xa4
 80102a0:	f004 fb38 	bl	8014914 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80102a4:	4643      	mov	r3, r8
 80102a6:	4622      	mov	r2, r4
 80102a8:	a949      	add	r1, sp, #292	@ 0x124
 80102aa:	f8cd 9000 	str.w	r9, [sp]
 80102ae:	a839      	add	r0, sp, #228	@ 0xe4
 80102b0:	f004 fb30 	bl	8014914 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80102b4:	42af      	cmp	r7, r5
 80102b6:	bfb5      	itete	lt
 80102b8:	2300      	movlt	r3, #0
 80102ba:	2301      	movge	r3, #1
 80102bc:	930e      	strlt	r3, [sp, #56]	@ 0x38
 80102be:	930e      	strge	r3, [sp, #56]	@ 0x38
 80102c0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80102c2:	e893 0003 	ldmia.w	r3, {r0, r1}
 80102c6:	af12      	add	r7, sp, #72	@ 0x48
 80102c8:	bfb9      	ittee	lt
 80102ca:	ad29      	addlt	r5, sp, #164	@ 0xa4
 80102cc:	ac19      	addlt	r4, sp, #100	@ 0x64
 80102ce:	ad19      	addge	r5, sp, #100	@ 0x64
 80102d0:	ac29      	addge	r4, sp, #164	@ 0xa4
 80102d2:	e887 0003 	stmia.w	r7, {r0, r1}
 80102d6:	b928      	cbnz	r0, 80102e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80102d8:	4b80      	ldr	r3, [pc, #512]	@ (80104dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80102da:	6818      	ldr	r0, [r3, #0]
 80102dc:	6803      	ldr	r3, [r0, #0]
 80102de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80102e0:	4798      	blx	r3
 80102e2:	6038      	str	r0, [r7, #0]
 80102e4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 80102e6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80102ea:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80102ee:	930c      	str	r3, [sp, #48]	@ 0x30
 80102f0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80102f2:	6963      	ldr	r3, [r4, #20]
 80102f4:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 80102f6:	440b      	add	r3, r1
 80102f8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80102fc:	4408      	add	r0, r1
 80102fe:	b200      	sxth	r0, r0
 8010300:	4283      	cmp	r3, r0
 8010302:	900d      	str	r0, [sp, #52]	@ 0x34
 8010304:	f280 80dd 	bge.w	80104c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8010308:	428b      	cmp	r3, r1
 801030a:	da08      	bge.n	801031e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801030c:	2a00      	cmp	r2, #0
 801030e:	dd06      	ble.n	801031e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8010310:	1acb      	subs	r3, r1, r3
 8010312:	429a      	cmp	r2, r3
 8010314:	f2c0 80e4 	blt.w	80104e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8010318:	2b00      	cmp	r3, #0
 801031a:	f300 80e2 	bgt.w	80104e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 801031e:	6967      	ldr	r7, [r4, #20]
 8010320:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8010322:	443b      	add	r3, r7
 8010324:	461f      	mov	r7, r3
 8010326:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010328:	1bdf      	subs	r7, r3, r7
 801032a:	4297      	cmp	r7, r2
 801032c:	bfa8      	it	ge
 801032e:	4617      	movge	r7, r2
 8010330:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8010334:	2f00      	cmp	r7, #0
 8010336:	f340 8166 	ble.w	8010606 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 801033a:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 801033c:	6829      	ldr	r1, [r5, #0]
 801033e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010342:	f9bb 3000 	ldrsh.w	r3, [fp]
 8010346:	6820      	ldr	r0, [r4, #0]
 8010348:	4411      	add	r1, r2
 801034a:	4299      	cmp	r1, r3
 801034c:	dd1a      	ble.n	8010384 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801034e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8010352:	440b      	add	r3, r1
 8010354:	4402      	add	r2, r0
 8010356:	b21b      	sxth	r3, r3
 8010358:	429a      	cmp	r2, r3
 801035a:	dc13      	bgt.n	8010384 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801035c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801035e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8010360:	681b      	ldr	r3, [r3, #0]
 8010362:	9206      	str	r2, [sp, #24]
 8010364:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8010366:	9205      	str	r2, [sp, #20]
 8010368:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801036a:	9500      	str	r5, [sp, #0]
 801036c:	e9cd b203 	strd	fp, r2, [sp, #12]
 8010370:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8010372:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8010374:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8010378:	a912      	add	r1, sp, #72	@ 0x48
 801037a:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 801037e:	aa49      	add	r2, sp, #292	@ 0x124
 8010380:	4623      	mov	r3, r4
 8010382:	47c8      	blx	r9
 8010384:	e9d4 2300 	ldrd	r2, r3, [r4]
 8010388:	441a      	add	r2, r3
 801038a:	6963      	ldr	r3, [r4, #20]
 801038c:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8010390:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8010394:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8010398:	68a1      	ldr	r1, [r4, #8]
 801039a:	ed94 6a08 	vldr	s12, [r4, #32]
 801039e:	6022      	str	r2, [r4, #0]
 80103a0:	3301      	adds	r3, #1
 80103a2:	6163      	str	r3, [r4, #20]
 80103a4:	69a3      	ldr	r3, [r4, #24]
 80103a6:	ee37 7a27 	vadd.f32	s14, s14, s15
 80103aa:	3b01      	subs	r3, #1
 80103ac:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 80103b0:	61a3      	str	r3, [r4, #24]
 80103b2:	6923      	ldr	r3, [r4, #16]
 80103b4:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 80103b8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80103bc:	edd4 6a07 	vldr	s13, [r4, #28]
 80103c0:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 80103c4:	440b      	add	r3, r1
 80103c6:	68e1      	ldr	r1, [r4, #12]
 80103c8:	6123      	str	r3, [r4, #16]
 80103ca:	ee76 6a86 	vadd.f32	s13, s13, s12
 80103ce:	428b      	cmp	r3, r1
 80103d0:	edc4 6a07 	vstr	s13, [r4, #28]
 80103d4:	db15      	blt.n	8010402 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80103d6:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 80103da:	ee76 6a26 	vadd.f32	s13, s12, s13
 80103de:	3201      	adds	r2, #1
 80103e0:	edc4 6a07 	vstr	s13, [r4, #28]
 80103e4:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 80103e8:	6022      	str	r2, [r4, #0]
 80103ea:	ee36 7a87 	vadd.f32	s14, s13, s14
 80103ee:	1a5b      	subs	r3, r3, r1
 80103f0:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 80103f4:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 80103f8:	6123      	str	r3, [r4, #16]
 80103fa:	ee77 7a27 	vadd.f32	s15, s14, s15
 80103fe:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8010402:	e9d5 2300 	ldrd	r2, r3, [r5]
 8010406:	441a      	add	r2, r3
 8010408:	696b      	ldr	r3, [r5, #20]
 801040a:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 801040e:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8010412:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8010416:	68a9      	ldr	r1, [r5, #8]
 8010418:	ed95 6a08 	vldr	s12, [r5, #32]
 801041c:	602a      	str	r2, [r5, #0]
 801041e:	3301      	adds	r3, #1
 8010420:	616b      	str	r3, [r5, #20]
 8010422:	69ab      	ldr	r3, [r5, #24]
 8010424:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010428:	3b01      	subs	r3, #1
 801042a:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 801042e:	61ab      	str	r3, [r5, #24]
 8010430:	692b      	ldr	r3, [r5, #16]
 8010432:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8010436:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801043a:	edd5 6a07 	vldr	s13, [r5, #28]
 801043e:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8010442:	440b      	add	r3, r1
 8010444:	68e9      	ldr	r1, [r5, #12]
 8010446:	612b      	str	r3, [r5, #16]
 8010448:	ee76 6a86 	vadd.f32	s13, s13, s12
 801044c:	428b      	cmp	r3, r1
 801044e:	edc5 6a07 	vstr	s13, [r5, #28]
 8010452:	db15      	blt.n	8010480 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8010454:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8010458:	ee76 6a26 	vadd.f32	s13, s12, s13
 801045c:	3201      	adds	r2, #1
 801045e:	edc5 6a07 	vstr	s13, [r5, #28]
 8010462:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8010466:	602a      	str	r2, [r5, #0]
 8010468:	ee36 7a87 	vadd.f32	s14, s13, s14
 801046c:	1a5b      	subs	r3, r3, r1
 801046e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8010472:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8010476:	612b      	str	r3, [r5, #16]
 8010478:	ee77 7a27 	vadd.f32	s15, s14, s15
 801047c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8010480:	3f01      	subs	r7, #1
 8010482:	e757      	b.n	8010334 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8010484:	4299      	cmp	r1, r3
 8010486:	dc13      	bgt.n	80104b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8010488:	429a      	cmp	r2, r3
 801048a:	da14      	bge.n	80104b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 801048c:	2502      	movs	r5, #2
 801048e:	2703      	movs	r7, #3
 8010490:	46a9      	mov	r9, r5
 8010492:	f04f 0800 	mov.w	r8, #0
 8010496:	f04f 0a01 	mov.w	sl, #1
 801049a:	e6ef      	b.n	801027c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801049c:	2501      	movs	r5, #1
 801049e:	2700      	movs	r7, #0
 80104a0:	46a9      	mov	r9, r5
 80104a2:	46b8      	mov	r8, r7
 80104a4:	f04f 0a02 	mov.w	sl, #2
 80104a8:	e6e8      	b.n	801027c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80104aa:	2501      	movs	r5, #1
 80104ac:	2702      	movs	r7, #2
 80104ae:	e6e1      	b.n	8010274 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80104b0:	2500      	movs	r5, #0
 80104b2:	2701      	movs	r7, #1
 80104b4:	e7f4      	b.n	80104a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80104b6:	2702      	movs	r7, #2
 80104b8:	2503      	movs	r5, #3
 80104ba:	f04f 0900 	mov.w	r9, #0
 80104be:	46b8      	mov	r8, r7
 80104c0:	e7e9      	b.n	8010496 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80104c2:	4613      	mov	r3, r2
 80104c4:	e728      	b.n	8010318 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80104c6:	bf00      	nop
 80104c8:	20015230 	.word	0x20015230
 80104cc:	fffd8f01 	.word	0xfffd8f01
 80104d0:	00027100 	.word	0x00027100
 80104d4:	0004e1ff 	.word	0x0004e1ff
 80104d8:	0004e1fe 	.word	0x0004e1fe
 80104dc:	20015238 	.word	0x20015238
 80104e0:	4613      	mov	r3, r2
 80104e2:	992b      	ldr	r1, [sp, #172]	@ 0xac
 80104e4:	9111      	str	r1, [sp, #68]	@ 0x44
 80104e6:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 80104ea:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 80104ee:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 80104f0:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 80104f4:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 80104f8:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 80104fc:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 8010500:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 8010504:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 8010508:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 801050c:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 8010510:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 8010514:	469e      	mov	lr, r3
 8010516:	469c      	mov	ip, r3
 8010518:	f04f 0900 	mov.w	r9, #0
 801051c:	f1bc 0f00 	cmp.w	ip, #0
 8010520:	d147      	bne.n	80105b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8010522:	eb03 0c07 	add.w	ip, r3, r7
 8010526:	1ad7      	subs	r7, r2, r3
 8010528:	f1b9 0f00 	cmp.w	r9, #0
 801052c:	d009      	beq.n	8010542 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 801052e:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 8010532:	9029      	str	r0, [sp, #164]	@ 0xa4
 8010534:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 8010538:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 801053c:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 8010540:	912d      	str	r1, [sp, #180]	@ 0xb4
 8010542:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8010544:	9111      	str	r1, [sp, #68]	@ 0x44
 8010546:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 801054a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 801054e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 8010552:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 8010556:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 801055a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 801055e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 8010562:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 8010566:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 801056a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 801056e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 8010572:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 8010576:	f04f 0800 	mov.w	r8, #0
 801057a:	f1be 0f00 	cmp.w	lr, #0
 801057e:	d031      	beq.n	80105e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8010580:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8010582:	4431      	add	r1, r6
 8010584:	4549      	cmp	r1, r9
 8010586:	4450      	add	r0, sl
 8010588:	ee76 6aa4 	vadd.f32	s13, s13, s9
 801058c:	ee37 7a04 	vadd.f32	s14, s14, s8
 8010590:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8010594:	db08      	blt.n	80105a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8010596:	ee77 7a85 	vadd.f32	s15, s15, s10
 801059a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801059e:	ee37 7a06 	vadd.f32	s14, s14, s12
 80105a2:	3001      	adds	r0, #1
 80105a4:	eba1 0109 	sub.w	r1, r1, r9
 80105a8:	f10e 3eff 	add.w	lr, lr, #4294967295
 80105ac:	f04f 0801 	mov.w	r8, #1
 80105b0:	e7e3      	b.n	801057a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80105b2:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 80105b4:	4431      	add	r1, r6
 80105b6:	4541      	cmp	r1, r8
 80105b8:	4450      	add	r0, sl
 80105ba:	ee37 7a24 	vadd.f32	s14, s14, s9
 80105be:	ee77 7a84 	vadd.f32	s15, s15, s8
 80105c2:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80105c6:	db08      	blt.n	80105da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80105c8:	ee76 6a85 	vadd.f32	s13, s13, s10
 80105cc:	ee37 7a25 	vadd.f32	s14, s14, s11
 80105d0:	ee77 7a86 	vadd.f32	s15, s15, s12
 80105d4:	3001      	adds	r0, #1
 80105d6:	eba1 0108 	sub.w	r1, r1, r8
 80105da:	f10c 3cff 	add.w	ip, ip, #4294967295
 80105de:	f04f 0901 	mov.w	r9, #1
 80105e2:	e79b      	b.n	801051c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80105e4:	449c      	add	ip, r3
 80105e6:	1aff      	subs	r7, r7, r3
 80105e8:	f1b8 0f00 	cmp.w	r8, #0
 80105ec:	d009      	beq.n	8010602 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80105ee:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 80105f2:	9019      	str	r0, [sp, #100]	@ 0x64
 80105f4:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 80105f8:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 80105fc:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 8010600:	911d      	str	r1, [sp, #116]	@ 0x74
 8010602:	1ad2      	subs	r2, r2, r3
 8010604:	e68b      	b.n	801031e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8010606:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010608:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 801060a:	2b00      	cmp	r3, #0
 801060c:	f000 80d1 	beq.w	80107b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8010610:	ad19      	add	r5, sp, #100	@ 0x64
 8010612:	ac39      	add	r4, sp, #228	@ 0xe4
 8010614:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8010616:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801061a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801061e:	930c      	str	r3, [sp, #48]	@ 0x30
 8010620:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8010622:	6963      	ldr	r3, [r4, #20]
 8010624:	440b      	add	r3, r1
 8010626:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 801062a:	4408      	add	r0, r1
 801062c:	b200      	sxth	r0, r0
 801062e:	4283      	cmp	r3, r0
 8010630:	900d      	str	r0, [sp, #52]	@ 0x34
 8010632:	f280 80c1 	bge.w	80107b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8010636:	428b      	cmp	r3, r1
 8010638:	da08      	bge.n	801064c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801063a:	2a00      	cmp	r2, #0
 801063c:	dd06      	ble.n	801064c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801063e:	1acb      	subs	r3, r1, r3
 8010640:	429a      	cmp	r2, r3
 8010642:	f2c0 80bb 	blt.w	80107bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8010646:	2b00      	cmp	r3, #0
 8010648:	f300 80b9 	bgt.w	80107be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 801064c:	6967      	ldr	r7, [r4, #20]
 801064e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8010650:	443b      	add	r3, r7
 8010652:	461f      	mov	r7, r3
 8010654:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010656:	1bdf      	subs	r7, r3, r7
 8010658:	4297      	cmp	r7, r2
 801065a:	bfa8      	it	ge
 801065c:	4617      	movge	r7, r2
 801065e:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8010662:	2f00      	cmp	r7, #0
 8010664:	f340 813c 	ble.w	80108e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8010668:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 801066a:	6829      	ldr	r1, [r5, #0]
 801066c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010670:	f9bb 3000 	ldrsh.w	r3, [fp]
 8010674:	6820      	ldr	r0, [r4, #0]
 8010676:	4411      	add	r1, r2
 8010678:	4299      	cmp	r1, r3
 801067a:	dd1a      	ble.n	80106b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801067c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8010680:	440b      	add	r3, r1
 8010682:	4402      	add	r2, r0
 8010684:	b21b      	sxth	r3, r3
 8010686:	429a      	cmp	r2, r3
 8010688:	dc13      	bgt.n	80106b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801068a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801068c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801068e:	681b      	ldr	r3, [r3, #0]
 8010690:	9206      	str	r2, [sp, #24]
 8010692:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8010694:	9205      	str	r2, [sp, #20]
 8010696:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8010698:	9500      	str	r5, [sp, #0]
 801069a:	e9cd b203 	strd	fp, r2, [sp, #12]
 801069e:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 80106a0:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80106a2:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80106a6:	a912      	add	r1, sp, #72	@ 0x48
 80106a8:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 80106ac:	aa49      	add	r2, sp, #292	@ 0x124
 80106ae:	4623      	mov	r3, r4
 80106b0:	47c8      	blx	r9
 80106b2:	e9d4 2300 	ldrd	r2, r3, [r4]
 80106b6:	441a      	add	r2, r3
 80106b8:	6963      	ldr	r3, [r4, #20]
 80106ba:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 80106be:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 80106c2:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 80106c6:	68a1      	ldr	r1, [r4, #8]
 80106c8:	ed94 6a08 	vldr	s12, [r4, #32]
 80106cc:	6022      	str	r2, [r4, #0]
 80106ce:	3301      	adds	r3, #1
 80106d0:	6163      	str	r3, [r4, #20]
 80106d2:	69a3      	ldr	r3, [r4, #24]
 80106d4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80106d8:	3b01      	subs	r3, #1
 80106da:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 80106de:	61a3      	str	r3, [r4, #24]
 80106e0:	6923      	ldr	r3, [r4, #16]
 80106e2:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 80106e6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80106ea:	edd4 6a07 	vldr	s13, [r4, #28]
 80106ee:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 80106f2:	440b      	add	r3, r1
 80106f4:	68e1      	ldr	r1, [r4, #12]
 80106f6:	6123      	str	r3, [r4, #16]
 80106f8:	ee76 6a86 	vadd.f32	s13, s13, s12
 80106fc:	428b      	cmp	r3, r1
 80106fe:	edc4 6a07 	vstr	s13, [r4, #28]
 8010702:	db15      	blt.n	8010730 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8010704:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 8010708:	ee76 6a26 	vadd.f32	s13, s12, s13
 801070c:	3201      	adds	r2, #1
 801070e:	edc4 6a07 	vstr	s13, [r4, #28]
 8010712:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 8010716:	6022      	str	r2, [r4, #0]
 8010718:	ee36 7a87 	vadd.f32	s14, s13, s14
 801071c:	1a5b      	subs	r3, r3, r1
 801071e:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8010722:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8010726:	6123      	str	r3, [r4, #16]
 8010728:	ee77 7a27 	vadd.f32	s15, s14, s15
 801072c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8010730:	e9d5 2300 	ldrd	r2, r3, [r5]
 8010734:	441a      	add	r2, r3
 8010736:	696b      	ldr	r3, [r5, #20]
 8010738:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 801073c:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8010740:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8010744:	68a9      	ldr	r1, [r5, #8]
 8010746:	ed95 6a08 	vldr	s12, [r5, #32]
 801074a:	602a      	str	r2, [r5, #0]
 801074c:	3301      	adds	r3, #1
 801074e:	616b      	str	r3, [r5, #20]
 8010750:	69ab      	ldr	r3, [r5, #24]
 8010752:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010756:	3b01      	subs	r3, #1
 8010758:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 801075c:	61ab      	str	r3, [r5, #24]
 801075e:	692b      	ldr	r3, [r5, #16]
 8010760:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8010764:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010768:	edd5 6a07 	vldr	s13, [r5, #28]
 801076c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8010770:	440b      	add	r3, r1
 8010772:	68e9      	ldr	r1, [r5, #12]
 8010774:	612b      	str	r3, [r5, #16]
 8010776:	ee76 6a86 	vadd.f32	s13, s13, s12
 801077a:	428b      	cmp	r3, r1
 801077c:	edc5 6a07 	vstr	s13, [r5, #28]
 8010780:	db15      	blt.n	80107ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8010782:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8010786:	ee76 6a26 	vadd.f32	s13, s12, s13
 801078a:	3201      	adds	r2, #1
 801078c:	edc5 6a07 	vstr	s13, [r5, #28]
 8010790:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8010794:	602a      	str	r2, [r5, #0]
 8010796:	ee36 7a87 	vadd.f32	s14, s13, s14
 801079a:	1a5b      	subs	r3, r3, r1
 801079c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 80107a0:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 80107a4:	612b      	str	r3, [r5, #16]
 80107a6:	ee77 7a27 	vadd.f32	s15, s14, s15
 80107aa:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 80107ae:	3f01      	subs	r7, #1
 80107b0:	e757      	b.n	8010662 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80107b2:	ad39      	add	r5, sp, #228	@ 0xe4
 80107b4:	ac19      	add	r4, sp, #100	@ 0x64
 80107b6:	e72d      	b.n	8010614 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80107b8:	4613      	mov	r3, r2
 80107ba:	e744      	b.n	8010646 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80107bc:	4613      	mov	r3, r2
 80107be:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 80107c2:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 80107c4:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 80107c8:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 80107cc:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 80107d0:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 80107d4:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 80107d8:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 80107dc:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 80107e0:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 80107e2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 80107e6:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 80107ea:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 80107ee:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 80107f2:	960e      	str	r6, [sp, #56]	@ 0x38
 80107f4:	469e      	mov	lr, r3
 80107f6:	461f      	mov	r7, r3
 80107f8:	f04f 0900 	mov.w	r9, #0
 80107fc:	2f00      	cmp	r7, #0
 80107fe:	d146      	bne.n	801088e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8010800:	449c      	add	ip, r3
 8010802:	1ad7      	subs	r7, r2, r3
 8010804:	f1b9 0f00 	cmp.w	r9, #0
 8010808:	d009      	beq.n	801081e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 801080a:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 801080e:	9039      	str	r0, [sp, #228]	@ 0xe4
 8010810:	913d      	str	r1, [sp, #244]	@ 0xf4
 8010812:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 8010816:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 801081a:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 801081e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8010820:	910e      	str	r1, [sp, #56]	@ 0x38
 8010822:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 8010826:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 801082a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 801082e:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 8010832:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8010836:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 801083a:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 801083e:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 8010842:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8010846:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 801084a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 801084e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 8010852:	f04f 0800 	mov.w	r8, #0
 8010856:	f1be 0f00 	cmp.w	lr, #0
 801085a:	d030      	beq.n	80108be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 801085c:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 801085e:	4431      	add	r1, r6
 8010860:	4549      	cmp	r1, r9
 8010862:	4450      	add	r0, sl
 8010864:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8010868:	ee37 7a04 	vadd.f32	s14, s14, s8
 801086c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8010870:	db08      	blt.n	8010884 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8010872:	ee77 7a85 	vadd.f32	s15, s15, s10
 8010876:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801087a:	ee37 7a06 	vadd.f32	s14, s14, s12
 801087e:	3001      	adds	r0, #1
 8010880:	eba1 0109 	sub.w	r1, r1, r9
 8010884:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010888:	f04f 0801 	mov.w	r8, #1
 801088c:	e7e3      	b.n	8010856 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 801088e:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8010890:	4431      	add	r1, r6
 8010892:	4541      	cmp	r1, r8
 8010894:	4450      	add	r0, sl
 8010896:	ee37 7a24 	vadd.f32	s14, s14, s9
 801089a:	ee77 7a84 	vadd.f32	s15, s15, s8
 801089e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80108a2:	db08      	blt.n	80108b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80108a4:	ee76 6a85 	vadd.f32	s13, s13, s10
 80108a8:	ee37 7a25 	vadd.f32	s14, s14, s11
 80108ac:	ee77 7a86 	vadd.f32	s15, s15, s12
 80108b0:	3001      	adds	r0, #1
 80108b2:	eba1 0108 	sub.w	r1, r1, r8
 80108b6:	3f01      	subs	r7, #1
 80108b8:	f04f 0901 	mov.w	r9, #1
 80108bc:	e79e      	b.n	80107fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80108be:	449c      	add	ip, r3
 80108c0:	1aff      	subs	r7, r7, r3
 80108c2:	f1b8 0f00 	cmp.w	r8, #0
 80108c6:	d009      	beq.n	80108dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80108c8:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 80108cc:	9019      	str	r0, [sp, #100]	@ 0x64
 80108ce:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 80108d2:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 80108d6:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 80108da:	911d      	str	r1, [sp, #116]	@ 0x74
 80108dc:	1ad2      	subs	r2, r2, r3
 80108de:	e6b5      	b.n	801064c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80108e0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80108e2:	681b      	ldr	r3, [r3, #0]
 80108e4:	b923      	cbnz	r3, 80108f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80108e6:	4b04      	ldr	r3, [pc, #16]	@ (80108f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 80108e8:	6818      	ldr	r0, [r3, #0]
 80108ea:	6803      	ldr	r3, [r0, #0]
 80108ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80108ee:	4798      	blx	r3
 80108f0:	b05b      	add	sp, #364	@ 0x16c
 80108f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80108f6:	bf00      	nop
 80108f8:	20015238 	.word	0x20015238

080108fc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 80108fc:	b570      	push	{r4, r5, r6, lr}
 80108fe:	4604      	mov	r4, r0
 8010900:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8010904:	9805      	ldr	r0, [sp, #20]
 8010906:	6061      	str	r1, [r4, #4]
 8010908:	2500      	movs	r5, #0
 801090a:	f89d 1010 	ldrb.w	r1, [sp, #16]
 801090e:	8263      	strh	r3, [r4, #18]
 8010910:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8010914:	8025      	strh	r5, [r4, #0]
 8010916:	7221      	strb	r1, [r4, #8]
 8010918:	7266      	strb	r6, [r4, #9]
 801091a:	60e0      	str	r0, [r4, #12]
 801091c:	8222      	strh	r2, [r4, #16]
 801091e:	82a3      	strh	r3, [r4, #20]
 8010920:	82e5      	strh	r5, [r4, #22]
 8010922:	8325      	strh	r5, [r4, #24]
 8010924:	8365      	strh	r5, [r4, #26]
 8010926:	83a5      	strh	r5, [r4, #28]
 8010928:	83e5      	strh	r5, [r4, #30]
 801092a:	8425      	strh	r5, [r4, #32]
 801092c:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 8010930:	b32e      	cbz	r6, 801097e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8010932:	6803      	ldr	r3, [r0, #0]
 8010934:	695b      	ldr	r3, [r3, #20]
 8010936:	4798      	blx	r3
 8010938:	4606      	mov	r6, r0
 801093a:	b300      	cbz	r0, 801097e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801093c:	68e0      	ldr	r0, [r4, #12]
 801093e:	6803      	ldr	r3, [r0, #0]
 8010940:	4631      	mov	r1, r6
 8010942:	68db      	ldr	r3, [r3, #12]
 8010944:	4798      	blx	r3
 8010946:	4605      	mov	r5, r0
 8010948:	b1c8      	cbz	r0, 801097e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801094a:	7b43      	ldrb	r3, [r0, #13]
 801094c:	7a82      	ldrb	r2, [r0, #10]
 801094e:	005b      	lsls	r3, r3, #1
 8010950:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010954:	4313      	orrs	r3, r2
 8010956:	8423      	strh	r3, [r4, #32]
 8010958:	7a63      	ldrb	r3, [r4, #9]
 801095a:	2b06      	cmp	r3, #6
 801095c:	d10f      	bne.n	801097e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801095e:	68e0      	ldr	r0, [r4, #12]
 8010960:	6803      	ldr	r3, [r0, #0]
 8010962:	462a      	mov	r2, r5
 8010964:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010966:	4631      	mov	r1, r6
 8010968:	4798      	blx	r3
 801096a:	7b6b      	ldrb	r3, [r5, #13]
 801096c:	005b      	lsls	r3, r3, #1
 801096e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8010972:	7aab      	ldrb	r3, [r5, #10]
 8010974:	4313      	orrs	r3, r2
 8010976:	4418      	add	r0, r3
 8010978:	8c23      	ldrh	r3, [r4, #32]
 801097a:	4418      	add	r0, r3
 801097c:	8420      	strh	r0, [r4, #32]
 801097e:	4620      	mov	r0, r4
 8010980:	bd70      	pop	{r4, r5, r6, pc}

08010982 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8010982:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010986:	2400      	movs	r4, #0
 8010988:	b085      	sub	sp, #20
 801098a:	4681      	mov	r9, r0
 801098c:	4688      	mov	r8, r1
 801098e:	4692      	mov	sl, r2
 8010990:	469b      	mov	fp, r3
 8010992:	4627      	mov	r7, r4
 8010994:	4625      	mov	r5, r4
 8010996:	4626      	mov	r6, r4
 8010998:	4554      	cmp	r4, sl
 801099a:	da2a      	bge.n	80109f2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801099c:	2300      	movs	r3, #0
 801099e:	9303      	str	r3, [sp, #12]
 80109a0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80109a4:	429d      	cmp	r5, r3
 80109a6:	d004      	beq.n	80109b2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 80109a8:	f242 030b 	movw	r3, #8203	@ 0x200b
 80109ac:	429d      	cmp	r5, r3
 80109ae:	bf18      	it	ne
 80109b0:	462f      	movne	r7, r5
 80109b2:	ab03      	add	r3, sp, #12
 80109b4:	4642      	mov	r2, r8
 80109b6:	4659      	mov	r1, fp
 80109b8:	4648      	mov	r0, r9
 80109ba:	f003 fc91 	bl	80142e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80109be:	4605      	mov	r5, r0
 80109c0:	b1b8      	cbz	r0, 80109f2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80109c2:	280a      	cmp	r0, #10
 80109c4:	d015      	beq.n	80109f2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80109c6:	9a03      	ldr	r2, [sp, #12]
 80109c8:	b18a      	cbz	r2, 80109ee <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80109ca:	7b50      	ldrb	r0, [r2, #13]
 80109cc:	7a93      	ldrb	r3, [r2, #10]
 80109ce:	8895      	ldrh	r5, [r2, #4]
 80109d0:	0040      	lsls	r0, r0, #1
 80109d2:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 80109d6:	4303      	orrs	r3, r0
 80109d8:	9301      	str	r3, [sp, #4]
 80109da:	f8d8 3000 	ldr.w	r3, [r8]
 80109de:	4639      	mov	r1, r7
 80109e0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80109e2:	4640      	mov	r0, r8
 80109e4:	4798      	blx	r3
 80109e6:	9b01      	ldr	r3, [sp, #4]
 80109e8:	4418      	add	r0, r3
 80109ea:	4406      	add	r6, r0
 80109ec:	b2b6      	uxth	r6, r6
 80109ee:	3401      	adds	r4, #1
 80109f0:	e7d2      	b.n	8010998 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 80109f2:	4630      	mov	r0, r6
 80109f4:	b005      	add	sp, #20
 80109f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080109fa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 80109fa:	2a02      	cmp	r2, #2
 80109fc:	b530      	push	{r4, r5, lr}
 80109fe:	d011      	beq.n	8010a24 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8010a00:	2a03      	cmp	r2, #3
 8010a02:	d01c      	beq.n	8010a3e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8010a04:	2a01      	cmp	r2, #1
 8010a06:	d10c      	bne.n	8010a22 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8010a08:	888b      	ldrh	r3, [r1, #4]
 8010a0a:	8801      	ldrh	r1, [r0, #0]
 8010a0c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8010a10:	8844      	ldrh	r4, [r0, #2]
 8010a12:	8004      	strh	r4, [r0, #0]
 8010a14:	1a5b      	subs	r3, r3, r1
 8010a16:	1a9b      	subs	r3, r3, r2
 8010a18:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8010a1c:	8043      	strh	r3, [r0, #2]
 8010a1e:	8081      	strh	r1, [r0, #4]
 8010a20:	80c2      	strh	r2, [r0, #6]
 8010a22:	bd30      	pop	{r4, r5, pc}
 8010a24:	88cb      	ldrh	r3, [r1, #6]
 8010a26:	8842      	ldrh	r2, [r0, #2]
 8010a28:	1a9b      	subs	r3, r3, r2
 8010a2a:	88c2      	ldrh	r2, [r0, #6]
 8010a2c:	1a9b      	subs	r3, r3, r2
 8010a2e:	888a      	ldrh	r2, [r1, #4]
 8010a30:	8801      	ldrh	r1, [r0, #0]
 8010a32:	8043      	strh	r3, [r0, #2]
 8010a34:	1a52      	subs	r2, r2, r1
 8010a36:	8881      	ldrh	r1, [r0, #4]
 8010a38:	1a52      	subs	r2, r2, r1
 8010a3a:	8002      	strh	r2, [r0, #0]
 8010a3c:	e7f1      	b.n	8010a22 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8010a3e:	88cb      	ldrh	r3, [r1, #6]
 8010a40:	8841      	ldrh	r1, [r0, #2]
 8010a42:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8010a46:	f9b0 5000 	ldrsh.w	r5, [r0]
 8010a4a:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8010a4e:	8045      	strh	r5, [r0, #2]
 8010a50:	1a5b      	subs	r3, r3, r1
 8010a52:	1a9b      	subs	r3, r3, r2
 8010a54:	8003      	strh	r3, [r0, #0]
 8010a56:	8082      	strh	r2, [r0, #4]
 8010a58:	80c4      	strh	r4, [r0, #6]
 8010a5a:	e7e2      	b.n	8010a22 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08010a5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8010a5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a60:	b09f      	sub	sp, #124	@ 0x7c
 8010a62:	920f      	str	r2, [sp, #60]	@ 0x3c
 8010a64:	9312      	str	r3, [sp, #72]	@ 0x48
 8010a66:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8010a68:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8010a6a:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8010a6c:	8812      	ldrh	r2, [r2, #0]
 8010a6e:	889b      	ldrh	r3, [r3, #4]
 8010a70:	900e      	str	r0, [sp, #56]	@ 0x38
 8010a72:	4413      	add	r3, r2
 8010a74:	6828      	ldr	r0, [r5, #0]
 8010a76:	9117      	str	r1, [sp, #92]	@ 0x5c
 8010a78:	b21b      	sxth	r3, r3
 8010a7a:	9311      	str	r3, [sp, #68]	@ 0x44
 8010a7c:	6803      	ldr	r3, [r0, #0]
 8010a7e:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 8010a82:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010a84:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 8010a88:	4798      	blx	r3
 8010a8a:	682b      	ldr	r3, [r5, #0]
 8010a8c:	9013      	str	r0, [sp, #76]	@ 0x4c
 8010a8e:	7b1a      	ldrb	r2, [r3, #12]
 8010a90:	7adb      	ldrb	r3, [r3, #11]
 8010a92:	9215      	str	r2, [sp, #84]	@ 0x54
 8010a94:	9316      	str	r3, [sp, #88]	@ 0x58
 8010a96:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 8010a9a:	2c00      	cmp	r4, #0
 8010a9c:	d067      	beq.n	8010b6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8010a9e:	7c2b      	ldrb	r3, [r5, #16]
 8010aa0:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 8010aa2:	2b06      	cmp	r3, #6
 8010aa4:	bf14      	ite	ne
 8010aa6:	2301      	movne	r3, #1
 8010aa8:	2302      	moveq	r3, #2
 8010aaa:	4413      	add	r3, r2
 8010aac:	f04f 0900 	mov.w	r9, #0
 8010ab0:	9310      	str	r3, [sp, #64]	@ 0x40
 8010ab2:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 8010ab6:	464c      	mov	r4, r9
 8010ab8:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 8010abc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010abe:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8010ac0:	4293      	cmp	r3, r2
 8010ac2:	f280 808b 	bge.w	8010bdc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8010ac6:	2300      	movs	r3, #0
 8010ac8:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 8010acc:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 8010ad0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8010ad4:	429c      	cmp	r4, r3
 8010ad6:	d006      	beq.n	8010ae6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 8010ad8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8010ada:	f242 020b 	movw	r2, #8203	@ 0x200b
 8010ade:	4294      	cmp	r4, r2
 8010ae0:	bf18      	it	ne
 8010ae2:	4623      	movne	r3, r4
 8010ae4:	930c      	str	r3, [sp, #48]	@ 0x30
 8010ae6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010ae8:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 8010aea:	682a      	ldr	r2, [r5, #0]
 8010aec:	428b      	cmp	r3, r1
 8010aee:	db40      	blt.n	8010b72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8010af0:	6813      	ldr	r3, [r2, #0]
 8010af2:	4610      	mov	r0, r2
 8010af4:	695b      	ldr	r3, [r3, #20]
 8010af6:	4798      	blx	r3
 8010af8:	4604      	mov	r4, r0
 8010afa:	6828      	ldr	r0, [r5, #0]
 8010afc:	6803      	ldr	r3, [r0, #0]
 8010afe:	aa1d      	add	r2, sp, #116	@ 0x74
 8010b00:	689f      	ldr	r7, [r3, #8]
 8010b02:	4621      	mov	r1, r4
 8010b04:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8010b08:	47b8      	blx	r7
 8010b0a:	901c      	str	r0, [sp, #112]	@ 0x70
 8010b0c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8010b10:	429c      	cmp	r4, r3
 8010b12:	f000 80ea 	beq.w	8010cea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8010b16:	f242 030b 	movw	r3, #8203	@ 0x200b
 8010b1a:	429c      	cmp	r4, r3
 8010b1c:	f000 80e5 	beq.w	8010cea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8010b20:	2c00      	cmp	r4, #0
 8010b22:	f000 810c 	beq.w	8010d3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8010b26:	2c0a      	cmp	r4, #10
 8010b28:	d05e      	beq.n	8010be8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8010b2a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8010b2c:	b36a      	cbz	r2, 8010b8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8010b2e:	8894      	ldrh	r4, [r2, #4]
 8010b30:	f1bb 0f00 	cmp.w	fp, #0
 8010b34:	d03a      	beq.n	8010bac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 8010b36:	f892 900d 	ldrb.w	r9, [r2, #13]
 8010b3a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8010b3e:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 8010b42:	f892 900a 	ldrb.w	r9, [r2, #10]
 8010b46:	f1bb 0f01 	cmp.w	fp, #1
 8010b4a:	ea49 0903 	orr.w	r9, r9, r3
 8010b4e:	d133      	bne.n	8010bb8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 8010b50:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8010b52:	eba6 0609 	sub.w	r6, r6, r9
 8010b56:	2b00      	cmp	r3, #0
 8010b58:	d14d      	bne.n	8010bf6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8010b5a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8010b5c:	eb09 0306 	add.w	r3, r9, r6
 8010b60:	4413      	add	r3, r2
 8010b62:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8010b64:	f9b2 2000 	ldrsh.w	r2, [r2]
 8010b68:	4293      	cmp	r3, r2
 8010b6a:	da4e      	bge.n	8010c0a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8010b6c:	e036      	b.n	8010bdc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8010b6e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 8010b70:	e79c      	b.n	8010aac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 8010b72:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8010b76:	9301      	str	r3, [sp, #4]
 8010b78:	ab1d      	add	r3, sp, #116	@ 0x74
 8010b7a:	9300      	str	r3, [sp, #0]
 8010b7c:	4659      	mov	r1, fp
 8010b7e:	ab1c      	add	r3, sp, #112	@ 0x70
 8010b80:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8010b82:	f003 fbf6 	bl	8014372 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8010b86:	4604      	mov	r4, r0
 8010b88:	e7c0      	b.n	8010b0c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8010b8a:	6828      	ldr	r0, [r5, #0]
 8010b8c:	6803      	ldr	r3, [r0, #0]
 8010b8e:	691b      	ldr	r3, [r3, #16]
 8010b90:	4798      	blx	r3
 8010b92:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8010b96:	4298      	cmp	r0, r3
 8010b98:	f000 80a7 	beq.w	8010cea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8010b9c:	f242 030b 	movw	r3, #8203	@ 0x200b
 8010ba0:	4298      	cmp	r0, r3
 8010ba2:	f000 80a2 	beq.w	8010cea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8010ba6:	f1bb 0f00 	cmp.w	fp, #0
 8010baa:	d100      	bne.n	8010bae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8010bac:	444e      	add	r6, r9
 8010bae:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8010bb0:	2a00      	cmp	r2, #0
 8010bb2:	d1c0      	bne.n	8010b36 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8010bb4:	4691      	mov	r9, r2
 8010bb6:	e098      	b.n	8010cea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8010bb8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8010bba:	2b00      	cmp	r3, #0
 8010bbc:	f000 80c1 	beq.w	8010d42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 8010bc0:	f1bb 0f00 	cmp.w	fp, #0
 8010bc4:	d117      	bne.n	8010bf6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8010bc6:	6828      	ldr	r0, [r5, #0]
 8010bc8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8010bca:	6803      	ldr	r3, [r0, #0]
 8010bcc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010bce:	4798      	blx	r3
 8010bd0:	4406      	add	r6, r0
 8010bd2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8010bd4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8010bd6:	1af3      	subs	r3, r6, r3
 8010bd8:	4293      	cmp	r3, r2
 8010bda:	dd16      	ble.n	8010c0a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8010bdc:	2c00      	cmp	r4, #0
 8010bde:	f000 80ae 	beq.w	8010d3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8010be2:	2c0a      	cmp	r4, #10
 8010be4:	f040 809c 	bne.w	8010d20 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 8010be8:	240a      	movs	r4, #10
 8010bea:	fab4 f084 	clz	r0, r4
 8010bee:	0940      	lsrs	r0, r0, #5
 8010bf0:	b01f      	add	sp, #124	@ 0x7c
 8010bf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010bf6:	6828      	ldr	r0, [r5, #0]
 8010bf8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8010bfa:	6803      	ldr	r3, [r0, #0]
 8010bfc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010bfe:	4798      	blx	r3
 8010c00:	f1bb 0f01 	cmp.w	fp, #1
 8010c04:	eba6 0600 	sub.w	r6, r6, r0
 8010c08:	d0a7      	beq.n	8010b5a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8010c0a:	981c      	ldr	r0, [sp, #112]	@ 0x70
 8010c0c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8010c0e:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8010c12:	f9b3 8000 	ldrsh.w	r8, [r3]
 8010c16:	7b43      	ldrb	r3, [r0, #13]
 8010c18:	015b      	lsls	r3, r3, #5
 8010c1a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8010c1e:	7983      	ldrb	r3, [r0, #6]
 8010c20:	4431      	add	r1, r6
 8010c22:	4313      	orrs	r3, r2
 8010c24:	440b      	add	r3, r1
 8010c26:	4543      	cmp	r3, r8
 8010c28:	db5f      	blt.n	8010cea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8010c2a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8010c2c:	4299      	cmp	r1, r3
 8010c2e:	da5c      	bge.n	8010cea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8010c30:	6828      	ldr	r0, [r5, #0]
 8010c32:	6803      	ldr	r3, [r0, #0]
 8010c34:	45b0      	cmp	r8, r6
 8010c36:	bfc8      	it	gt
 8010c38:	eba8 0806 	subgt.w	r8, r8, r6
 8010c3c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010c3e:	bfcc      	ite	gt
 8010c40:	fa1f f888 	uxthgt.w	r8, r8
 8010c44:	f04f 0800 	movle.w	r8, #0
 8010c48:	4798      	blx	r3
 8010c4a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8010c4c:	7b53      	ldrb	r3, [r2, #13]
 8010c4e:	00d9      	lsls	r1, r3, #3
 8010c50:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 8010c54:	7a11      	ldrb	r1, [r2, #8]
 8010c56:	4339      	orrs	r1, r7
 8010c58:	065f      	lsls	r7, r3, #25
 8010c5a:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8010c5c:	bf44      	itt	mi
 8010c5e:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 8010c62:	b209      	sxthmi	r1, r1
 8010c64:	19c7      	adds	r7, r0, r7
 8010c66:	1a7f      	subs	r7, r7, r1
 8010c68:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 8010c6a:	b2bf      	uxth	r7, r7
 8010c6c:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8010c70:	fa0f fa87 	sxth.w	sl, r7
 8010c74:	4551      	cmp	r1, sl
 8010c76:	dd3c      	ble.n	8010cf2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 8010c78:	011b      	lsls	r3, r3, #4
 8010c7a:	79d0      	ldrb	r0, [r2, #7]
 8010c7c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010c80:	4303      	orrs	r3, r0
 8010c82:	449a      	add	sl, r3
 8010c84:	4551      	cmp	r1, sl
 8010c86:	dc30      	bgt.n	8010cea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8010c88:	1bcf      	subs	r7, r1, r7
 8010c8a:	b23f      	sxth	r7, r7
 8010c8c:	468a      	mov	sl, r1
 8010c8e:	9219      	str	r2, [sp, #100]	@ 0x64
 8010c90:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8010c92:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8010c94:	6828      	ldr	r0, [r5, #0]
 8010c96:	2a00      	cmp	r2, #0
 8010c98:	d12d      	bne.n	8010cf6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 8010c9a:	9318      	str	r3, [sp, #96]	@ 0x60
 8010c9c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010c9e:	6819      	ldr	r1, [r3, #0]
 8010ca0:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 8010ca2:	6801      	ldr	r1, [r0, #0]
 8010ca4:	9314      	str	r3, [sp, #80]	@ 0x50
 8010ca6:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8010ca8:	4788      	blx	r1
 8010caa:	79a9      	ldrb	r1, [r5, #6]
 8010cac:	910b      	str	r1, [sp, #44]	@ 0x2c
 8010cae:	7ba9      	ldrb	r1, [r5, #14]
 8010cb0:	910a      	str	r1, [sp, #40]	@ 0x28
 8010cb2:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 8010cb6:	9109      	str	r1, [sp, #36]	@ 0x24
 8010cb8:	68a9      	ldr	r1, [r5, #8]
 8010cba:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8010cbc:	9306      	str	r3, [sp, #24]
 8010cbe:	b2bf      	uxth	r7, r7
 8010cc0:	e9cd 8702 	strd	r8, r7, [sp, #8]
 8010cc4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8010cc6:	9304      	str	r3, [sp, #16]
 8010cc8:	44b0      	add	r8, r6
 8010cca:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8010cce:	fa0f f388 	sxth.w	r3, r8
 8010cd2:	9300      	str	r3, [sp, #0]
 8010cd4:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8010cd6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8010cd8:	9205      	str	r2, [sp, #20]
 8010cda:	f8cd a004 	str.w	sl, [sp, #4]
 8010cde:	681a      	ldr	r2, [r3, #0]
 8010ce0:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8010ce2:	685b      	ldr	r3, [r3, #4]
 8010ce4:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8010ce6:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 8010ce8:	47b8      	blx	r7
 8010cea:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010cec:	3301      	adds	r3, #1
 8010cee:	930d      	str	r3, [sp, #52]	@ 0x34
 8010cf0:	e6e4      	b.n	8010abc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 8010cf2:	2700      	movs	r7, #0
 8010cf4:	e7cb      	b.n	8010c8e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 8010cf6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8010cf8:	f8d2 c008 	ldr.w	ip, [r2, #8]
 8010cfc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8010cfe:	f8dc 1000 	ldr.w	r1, [ip]
 8010d02:	e9cd 6204 	strd	r6, r2, [sp, #16]
 8010d06:	79aa      	ldrb	r2, [r5, #6]
 8010d08:	9203      	str	r2, [sp, #12]
 8010d0a:	7baa      	ldrb	r2, [r5, #14]
 8010d0c:	9202      	str	r2, [sp, #8]
 8010d0e:	68aa      	ldr	r2, [r5, #8]
 8010d10:	e9cd 0200 	strd	r0, r2, [sp]
 8010d14:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8010d16:	688f      	ldr	r7, [r1, #8]
 8010d18:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8010d1a:	4660      	mov	r0, ip
 8010d1c:	47b8      	blx	r7
 8010d1e:	e7e4      	b.n	8010cea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8010d20:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8010d22:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 8010d24:	3501      	adds	r5, #1
 8010d26:	429d      	cmp	r5, r3
 8010d28:	f6bf af5f 	bge.w	8010bea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 8010d2c:	4659      	mov	r1, fp
 8010d2e:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8010d30:	f7f3 fd8c 	bl	800484c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010d34:	4604      	mov	r4, r0
 8010d36:	b110      	cbz	r0, 8010d3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8010d38:	280a      	cmp	r0, #10
 8010d3a:	d1f2      	bne.n	8010d22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 8010d3c:	e754      	b.n	8010be8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8010d3e:	2400      	movs	r4, #0
 8010d40:	e753      	b.n	8010bea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 8010d42:	f1bb 0f00 	cmp.w	fp, #0
 8010d46:	f43f af44 	beq.w	8010bd2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 8010d4a:	e75e      	b.n	8010c0a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

08010d4c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8010d4c:	b530      	push	{r4, r5, lr}
 8010d4e:	8ac4      	ldrh	r4, [r0, #22]
 8010d50:	8b45      	ldrh	r5, [r0, #26]
 8010d52:	8343      	strh	r3, [r0, #26]
 8010d54:	442c      	add	r4, r5
 8010d56:	1ae4      	subs	r4, r4, r3
 8010d58:	82c4      	strh	r4, [r0, #22]
 8010d5a:	8b83      	ldrh	r3, [r0, #28]
 8010d5c:	8b04      	ldrh	r4, [r0, #24]
 8010d5e:	4422      	add	r2, r4
 8010d60:	440c      	add	r4, r1
 8010d62:	1a59      	subs	r1, r3, r1
 8010d64:	83c2      	strh	r2, [r0, #30]
 8010d66:	8304      	strh	r4, [r0, #24]
 8010d68:	8381      	strh	r1, [r0, #28]
 8010d6a:	bd30      	pop	{r4, r5, pc}

08010d6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8010d6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010d70:	4604      	mov	r4, r0
 8010d72:	8a47      	ldrh	r7, [r0, #18]
 8010d74:	68c0      	ldr	r0, [r0, #12]
 8010d76:	6803      	ldr	r3, [r0, #0]
 8010d78:	b085      	sub	sp, #20
 8010d7a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010d7c:	4798      	blx	r3
 8010d7e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8010d82:	7a63      	ldrb	r3, [r4, #9]
 8010d84:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8010d88:	42b7      	cmp	r7, r6
 8010d8a:	f103 33ff 	add.w	r3, r3, #4294967295
 8010d8e:	bfac      	ite	ge
 8010d90:	f04f 0900 	movge.w	r9, #0
 8010d94:	f04f 0901 	movlt.w	r9, #1
 8010d98:	2b05      	cmp	r3, #5
 8010d9a:	d804      	bhi.n	8010da6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8010d9c:	e8df f003 	tbb	[pc, r3]
 8010da0:	470e0854 	.word	0x470e0854
 8010da4:	4c4c      	.short	0x4c4c
 8010da6:	2500      	movs	r5, #0
 8010da8:	46a9      	mov	r9, r5
 8010daa:	462e      	mov	r6, r5
 8010dac:	462f      	mov	r7, r5
 8010dae:	e00d      	b.n	8010dcc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8010db0:	42b7      	cmp	r7, r6
 8010db2:	bfb4      	ite	lt
 8010db4:	2600      	movlt	r6, #0
 8010db6:	2601      	movge	r6, #1
 8010db8:	2500      	movs	r5, #0
 8010dba:	e7f7      	b.n	8010dac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8010dbc:	42b7      	cmp	r7, r6
 8010dbe:	464d      	mov	r5, r9
 8010dc0:	f04f 0900 	mov.w	r9, #0
 8010dc4:	bfb4      	ite	lt
 8010dc6:	2600      	movlt	r6, #0
 8010dc8:	2601      	movge	r6, #1
 8010dca:	464f      	mov	r7, r9
 8010dcc:	f04f 0800 	mov.w	r8, #0
 8010dd0:	f8a4 8016 	strh.w	r8, [r4, #22]
 8010dd4:	f8a4 8018 	strh.w	r8, [r4, #24]
 8010dd8:	f8cd 8004 	str.w	r8, [sp, #4]
 8010ddc:	2300      	movs	r3, #0
 8010dde:	9303      	str	r3, [sp, #12]
 8010de0:	8823      	ldrh	r3, [r4, #0]
 8010de2:	2b20      	cmp	r3, #32
 8010de4:	d034      	beq.n	8010e50 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8010de6:	f242 010b 	movw	r1, #8203	@ 0x200b
 8010dea:	1a5a      	subs	r2, r3, r1
 8010dec:	f1d2 0a00 	rsbs	sl, r2, #0
 8010df0:	eb4a 0a02 	adc.w	sl, sl, r2
 8010df4:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8010df8:	4293      	cmp	r3, r2
 8010dfa:	d009      	beq.n	8010e10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8010dfc:	428b      	cmp	r3, r1
 8010dfe:	9a01      	ldr	r2, [sp, #4]
 8010e00:	bf18      	it	ne
 8010e02:	461a      	movne	r2, r3
 8010e04:	9201      	str	r2, [sp, #4]
 8010e06:	bf0c      	ite	eq
 8010e08:	f04f 0a01 	moveq.w	sl, #1
 8010e0c:	f04f 0a00 	movne.w	sl, #0
 8010e10:	ab03      	add	r3, sp, #12
 8010e12:	68e2      	ldr	r2, [r4, #12]
 8010e14:	7a21      	ldrb	r1, [r4, #8]
 8010e16:	6860      	ldr	r0, [r4, #4]
 8010e18:	f003 fa62 	bl	80142e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010e1c:	8020      	strh	r0, [r4, #0]
 8010e1e:	b9d8      	cbnz	r0, 8010e58 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8010e20:	8ba2      	ldrh	r2, [r4, #28]
 8010e22:	2300      	movs	r3, #0
 8010e24:	4611      	mov	r1, r2
 8010e26:	4620      	mov	r0, r4
 8010e28:	f7ff ff90 	bl	8010d4c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8010e2c:	e06e      	b.n	8010f0c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8010e2e:	2500      	movs	r5, #0
 8010e30:	46a9      	mov	r9, r5
 8010e32:	462e      	mov	r6, r5
 8010e34:	2701      	movs	r7, #1
 8010e36:	e7c9      	b.n	8010dcc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8010e38:	42b7      	cmp	r7, r6
 8010e3a:	f04f 0500 	mov.w	r5, #0
 8010e3e:	bfb4      	ite	lt
 8010e40:	2700      	movlt	r7, #0
 8010e42:	2701      	movge	r7, #1
 8010e44:	462e      	mov	r6, r5
 8010e46:	e7c1      	b.n	8010dcc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8010e48:	2500      	movs	r5, #0
 8010e4a:	46a9      	mov	r9, r5
 8010e4c:	2601      	movs	r6, #1
 8010e4e:	e7ad      	b.n	8010dac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8010e50:	9301      	str	r3, [sp, #4]
 8010e52:	f04f 0a01 	mov.w	sl, #1
 8010e56:	e7db      	b.n	8010e10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8010e58:	8b63      	ldrh	r3, [r4, #26]
 8010e5a:	280a      	cmp	r0, #10
 8010e5c:	f103 0301 	add.w	r3, r3, #1
 8010e60:	8363      	strh	r3, [r4, #26]
 8010e62:	d0dd      	beq.n	8010e20 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8010e64:	9a03      	ldr	r2, [sp, #12]
 8010e66:	bb62      	cbnz	r2, 8010ec2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8010e68:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8010e6c:	4298      	cmp	r0, r3
 8010e6e:	d003      	beq.n	8010e78 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8010e70:	f242 030b 	movw	r3, #8203	@ 0x200b
 8010e74:	4298      	cmp	r0, r3
 8010e76:	d1b1      	bne.n	8010ddc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010e78:	8823      	ldrh	r3, [r4, #0]
 8010e7a:	8ba1      	ldrh	r1, [r4, #28]
 8010e7c:	2b20      	cmp	r3, #32
 8010e7e:	d003      	beq.n	8010e88 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8010e80:	f242 000b 	movw	r0, #8203	@ 0x200b
 8010e84:	4283      	cmp	r3, r0
 8010e86:	d131      	bne.n	8010eec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8010e88:	f1ba 0f00 	cmp.w	sl, #0
 8010e8c:	bf0a      	itet	eq
 8010e8e:	4688      	moveq	r8, r1
 8010e90:	4650      	movne	r0, sl
 8010e92:	2001      	moveq	r0, #1
 8010e94:	440a      	add	r2, r1
 8010e96:	8b23      	ldrh	r3, [r4, #24]
 8010e98:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8010e9c:	b292      	uxth	r2, r2
 8010e9e:	83a2      	strh	r2, [r4, #28]
 8010ea0:	4413      	add	r3, r2
 8010ea2:	f1b9 0f00 	cmp.w	r9, #0
 8010ea6:	d102      	bne.n	8010eae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8010ea8:	2d00      	cmp	r5, #0
 8010eaa:	d042      	beq.n	8010f32 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8010eac:	b300      	cbz	r0, 8010ef0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8010eae:	8c21      	ldrh	r1, [r4, #32]
 8010eb0:	4419      	add	r1, r3
 8010eb2:	458c      	cmp	ip, r1
 8010eb4:	da37      	bge.n	8010f26 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8010eb6:	8ae1      	ldrh	r1, [r4, #22]
 8010eb8:	2900      	cmp	r1, #0
 8010eba:	d034      	beq.n	8010f26 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8010ebc:	4563      	cmp	r3, ip
 8010ebe:	dd8d      	ble.n	8010ddc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010ec0:	e01d      	b.n	8010efe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8010ec2:	8893      	ldrh	r3, [r2, #4]
 8010ec4:	8023      	strh	r3, [r4, #0]
 8010ec6:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8010eca:	9901      	ldr	r1, [sp, #4]
 8010ecc:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8010ed0:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 8010ed4:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8010ed8:	ea4b 0b00 	orr.w	fp, fp, r0
 8010edc:	68e0      	ldr	r0, [r4, #12]
 8010ede:	6803      	ldr	r3, [r0, #0]
 8010ee0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010ee2:	4798      	blx	r3
 8010ee4:	eb0b 0200 	add.w	r2, fp, r0
 8010ee8:	b292      	uxth	r2, r2
 8010eea:	e7c5      	b.n	8010e78 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8010eec:	2000      	movs	r0, #0
 8010eee:	e7d1      	b.n	8010e94 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8010ef0:	4563      	cmp	r3, ip
 8010ef2:	f77f af73 	ble.w	8010ddc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010ef6:	8ae3      	ldrh	r3, [r4, #22]
 8010ef8:	2b00      	cmp	r3, #0
 8010efa:	f43f af6f 	beq.w	8010ddc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010efe:	2301      	movs	r3, #1
 8010f00:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 8010f04:	8c22      	ldrh	r2, [r4, #32]
 8010f06:	8be3      	ldrh	r3, [r4, #30]
 8010f08:	4413      	add	r3, r2
 8010f0a:	83e3      	strh	r3, [r4, #30]
 8010f0c:	68e0      	ldr	r0, [r4, #12]
 8010f0e:	6803      	ldr	r3, [r0, #0]
 8010f10:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010f12:	4798      	blx	r3
 8010f14:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8010f18:	4418      	add	r0, r3
 8010f1a:	8a63      	ldrh	r3, [r4, #18]
 8010f1c:	1a18      	subs	r0, r3, r0
 8010f1e:	8260      	strh	r0, [r4, #18]
 8010f20:	b005      	add	sp, #20
 8010f22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f26:	2300      	movs	r3, #0
 8010f28:	4611      	mov	r1, r2
 8010f2a:	4620      	mov	r0, r4
 8010f2c:	f7ff ff0e 	bl	8010d4c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8010f30:	e754      	b.n	8010ddc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010f32:	4563      	cmp	r3, ip
 8010f34:	dd14      	ble.n	8010f60 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8010f36:	b117      	cbz	r7, 8010f3e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8010f38:	2301      	movs	r3, #1
 8010f3a:	460a      	mov	r2, r1
 8010f3c:	e772      	b.n	8010e24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8010f3e:	2e00      	cmp	r6, #0
 8010f40:	f43f af4c 	beq.w	8010ddc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010f44:	2800      	cmp	r0, #0
 8010f46:	f47f af49 	bne.w	8010ddc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010f4a:	f1ba 0f00 	cmp.w	sl, #0
 8010f4e:	d002      	beq.n	8010f56 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8010f50:	2301      	movs	r3, #1
 8010f52:	4642      	mov	r2, r8
 8010f54:	e767      	b.n	8010e26 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8010f56:	8ae3      	ldrh	r3, [r4, #22]
 8010f58:	2b00      	cmp	r3, #0
 8010f5a:	f43f af3f 	beq.w	8010ddc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010f5e:	e7d5      	b.n	8010f0c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8010f60:	2800      	cmp	r0, #0
 8010f62:	f47f af3b 	bne.w	8010ddc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010f66:	f1ba 0f00 	cmp.w	sl, #0
 8010f6a:	f43f af37 	beq.w	8010ddc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010f6e:	2301      	movs	r3, #1
 8010f70:	4642      	mov	r2, r8
 8010f72:	e7da      	b.n	8010f2a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08010f74 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8010f74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010f76:	4605      	mov	r5, r0
 8010f78:	b08f      	sub	sp, #60	@ 0x3c
 8010f7a:	4617      	mov	r7, r2
 8010f7c:	461c      	mov	r4, r3
 8010f7e:	460e      	mov	r6, r1
 8010f80:	b1d1      	cbz	r1, 8010fb8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8010f82:	681b      	ldr	r3, [r3, #0]
 8010f84:	4620      	mov	r0, r4
 8010f86:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010f88:	4798      	blx	r3
 8010f8a:	4240      	negs	r0, r0
 8010f8c:	b200      	sxth	r0, r0
 8010f8e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8010f92:	9603      	str	r6, [sp, #12]
 8010f94:	9700      	str	r7, [sp, #0]
 8010f96:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8010f9a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 8010f9e:	4629      	mov	r1, r5
 8010fa0:	a805      	add	r0, sp, #20
 8010fa2:	f7ff fcab 	bl	80108fc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8010fa6:	2401      	movs	r4, #1
 8010fa8:	a805      	add	r0, sp, #20
 8010faa:	f7ff fedf 	bl	8010d6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8010fae:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8010fb2:	b163      	cbz	r3, 8010fce <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8010fb4:	3401      	adds	r4, #1
 8010fb6:	e7f7      	b.n	8010fa8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8010fb8:	f003 fa60 	bl	801447c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010fbc:	2401      	movs	r4, #1
 8010fbe:	280a      	cmp	r0, #10
 8010fc0:	4628      	mov	r0, r5
 8010fc2:	bf08      	it	eq
 8010fc4:	3401      	addeq	r4, #1
 8010fc6:	f003 fa59 	bl	801447c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010fca:	2800      	cmp	r0, #0
 8010fcc:	d1f7      	bne.n	8010fbe <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8010fce:	b2a0      	uxth	r0, r4
 8010fd0:	b00f      	add	sp, #60	@ 0x3c
 8010fd2:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010fd4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8010fd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010fd8:	b0e3      	sub	sp, #396	@ 0x18c
 8010fda:	461c      	mov	r4, r3
 8010fdc:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 8010fde:	4683      	mov	fp, r0
 8010fe0:	4688      	mov	r8, r1
 8010fe2:	2b00      	cmp	r3, #0
 8010fe4:	f000 8112 	beq.w	801120c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010fe8:	6823      	ldr	r3, [r4, #0]
 8010fea:	2b00      	cmp	r3, #0
 8010fec:	f000 810e 	beq.w	801120c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010ff0:	7ba3      	ldrb	r3, [r4, #14]
 8010ff2:	2b00      	cmp	r3, #0
 8010ff4:	f000 810a 	beq.w	801120c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010ff8:	6810      	ldr	r0, [r2, #0]
 8010ffa:	6851      	ldr	r1, [r2, #4]
 8010ffc:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8011000:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8011004:	ad0a      	add	r5, sp, #40	@ 0x28
 8011006:	462b      	mov	r3, r5
 8011008:	c303      	stmia	r3!, {r0, r1}
 801100a:	2100      	movs	r1, #0
 801100c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8011010:	910c      	str	r1, [sp, #48]	@ 0x30
 8011012:	79a2      	ldrb	r2, [r4, #6]
 8011014:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8011018:	a90c      	add	r1, sp, #48	@ 0x30
 801101a:	4628      	mov	r0, r5
 801101c:	f7ff fced 	bl	80109fa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8011020:	a90c      	add	r1, sp, #48	@ 0x30
 8011022:	4608      	mov	r0, r1
 8011024:	79a2      	ldrb	r2, [r4, #6]
 8011026:	f7ff fce8 	bl	80109fa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801102a:	a817      	add	r0, sp, #92	@ 0x5c
 801102c:	f002 fdea 	bl	8013c04 <_ZN8touchgfx12TextProviderC1Ev>
 8011030:	6820      	ldr	r0, [r4, #0]
 8011032:	6803      	ldr	r3, [r0, #0]
 8011034:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011036:	4798      	blx	r3
 8011038:	4606      	mov	r6, r0
 801103a:	6820      	ldr	r0, [r4, #0]
 801103c:	6803      	ldr	r3, [r0, #0]
 801103e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011040:	4798      	blx	r3
 8011042:	4633      	mov	r3, r6
 8011044:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 8011046:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 8011048:	9000      	str	r0, [sp, #0]
 801104a:	a817      	add	r0, sp, #92	@ 0x5c
 801104c:	f002 fe2d 	bl	8013caa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011050:	6820      	ldr	r0, [r4, #0]
 8011052:	f894 a004 	ldrb.w	sl, [r4, #4]
 8011056:	6803      	ldr	r3, [r0, #0]
 8011058:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801105a:	4798      	blx	r3
 801105c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8011060:	6823      	ldr	r3, [r4, #0]
 8011062:	4607      	mov	r7, r0
 8011064:	4406      	add	r6, r0
 8011066:	a830      	add	r0, sp, #192	@ 0xc0
 8011068:	f893 9009 	ldrb.w	r9, [r3, #9]
 801106c:	f002 fdca 	bl	8013c04 <_ZN8touchgfx12TextProviderC1Ev>
 8011070:	7c23      	ldrb	r3, [r4, #16]
 8011072:	b17b      	cbz	r3, 8011094 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8011074:	6820      	ldr	r0, [r4, #0]
 8011076:	6803      	ldr	r3, [r0, #0]
 8011078:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801107a:	4798      	blx	r3
 801107c:	9009      	str	r0, [sp, #36]	@ 0x24
 801107e:	6820      	ldr	r0, [r4, #0]
 8011080:	6802      	ldr	r2, [r0, #0]
 8011082:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8011084:	4790      	blx	r2
 8011086:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011088:	9000      	str	r0, [sp, #0]
 801108a:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 801108c:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 801108e:	a830      	add	r0, sp, #192	@ 0xc0
 8011090:	f002 fe0b 	bl	8013caa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011094:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8011098:	7be2      	ldrb	r2, [r4, #15]
 801109a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 801109e:	1a8a      	subs	r2, r1, r2
 80110a0:	7c21      	ldrb	r1, [r4, #16]
 80110a2:	9103      	str	r1, [sp, #12]
 80110a4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80110a8:	9102      	str	r1, [sp, #8]
 80110aa:	6821      	ldr	r1, [r4, #0]
 80110ac:	9101      	str	r1, [sp, #4]
 80110ae:	7961      	ldrb	r1, [r4, #5]
 80110b0:	9100      	str	r1, [sp, #0]
 80110b2:	b292      	uxth	r2, r2
 80110b4:	a930      	add	r1, sp, #192	@ 0xc0
 80110b6:	a80e      	add	r0, sp, #56	@ 0x38
 80110b8:	f7ff fc20 	bl	80108fc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80110bc:	2e00      	cmp	r6, #0
 80110be:	dc5b      	bgt.n	8011178 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 80110c0:	af17      	add	r7, sp, #92	@ 0x5c
 80110c2:	f04f 0900 	mov.w	r9, #0
 80110c6:	7c23      	ldrb	r3, [r4, #16]
 80110c8:	2b00      	cmp	r3, #0
 80110ca:	f000 80b1 	beq.w	8011230 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 80110ce:	a80e      	add	r0, sp, #56	@ 0x38
 80110d0:	f7ff fe4c 	bl	8010d6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80110d4:	f1ba 0f00 	cmp.w	sl, #0
 80110d8:	f000 80a5 	beq.w	8011226 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80110dc:	7c23      	ldrb	r3, [r4, #16]
 80110de:	9309      	str	r3, [sp, #36]	@ 0x24
 80110e0:	2264      	movs	r2, #100	@ 0x64
 80110e2:	4639      	mov	r1, r7
 80110e4:	a849      	add	r0, sp, #292	@ 0x124
 80110e6:	f014 fbbc 	bl	8025862 <memcpy>
 80110ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80110ec:	2b00      	cmp	r3, #0
 80110ee:	f000 80a7 	beq.w	8011240 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80110f2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 80110f6:	7922      	ldrb	r2, [r4, #4]
 80110f8:	2a01      	cmp	r2, #1
 80110fa:	f040 808a 	bne.w	8011212 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80110fe:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 8011102:	1ac0      	subs	r0, r0, r3
 8011104:	2302      	movs	r3, #2
 8011106:	fb90 f0f3 	sdiv	r0, r0, r3
 801110a:	b200      	sxth	r0, r0
 801110c:	7c23      	ldrb	r3, [r4, #16]
 801110e:	2b00      	cmp	r3, #0
 8011110:	f000 808b 	beq.w	801122a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8011114:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 8011118:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 801111c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8011120:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8011124:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8011128:	4410      	add	r0, r2
 801112a:	b200      	sxth	r0, r0
 801112c:	9000      	str	r0, [sp, #0]
 801112e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8011132:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8011136:	4642      	mov	r2, r8
 8011138:	2100      	movs	r1, #0
 801113a:	4658      	mov	r0, fp
 801113c:	f7ff fc8e 	bl	8010a5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8011140:	2800      	cmp	r0, #0
 8011142:	d163      	bne.n	801120c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8011144:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8011148:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 801114c:	b2b2      	uxth	r2, r6
 801114e:	4413      	add	r3, r2
 8011150:	1a8a      	subs	r2, r1, r2
 8011152:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 8011156:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 801115a:	b21b      	sxth	r3, r3
 801115c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8011160:	2a00      	cmp	r2, #0
 8011162:	d153      	bne.n	801120c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8011164:	6822      	ldr	r2, [r4, #0]
 8011166:	8869      	ldrh	r1, [r5, #2]
 8011168:	7a12      	ldrb	r2, [r2, #8]
 801116a:	1a9b      	subs	r3, r3, r2
 801116c:	88ea      	ldrh	r2, [r5, #6]
 801116e:	440a      	add	r2, r1
 8011170:	b212      	sxth	r2, r2
 8011172:	4293      	cmp	r3, r2
 8011174:	dda7      	ble.n	80110c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8011176:	e049      	b.n	801120c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8011178:	7c23      	ldrb	r3, [r4, #16]
 801117a:	444f      	add	r7, r9
 801117c:	b1c3      	cbz	r3, 80111b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801117e:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 8011182:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8011186:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801118a:	443b      	add	r3, r7
 801118c:	4293      	cmp	r3, r2
 801118e:	da97      	bge.n	80110c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8011190:	a80e      	add	r0, sp, #56	@ 0x38
 8011192:	f7ff fdeb 	bl	8010d6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011196:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 801119a:	3b01      	subs	r3, #1
 801119c:	b29b      	uxth	r3, r3
 801119e:	454b      	cmp	r3, r9
 80111a0:	9309      	str	r3, [sp, #36]	@ 0x24
 80111a2:	d021      	beq.n	80111e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 80111a4:	7961      	ldrb	r1, [r4, #5]
 80111a6:	a817      	add	r0, sp, #92	@ 0x5c
 80111a8:	f7f3 fb50 	bl	800484c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80111ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80111ae:	e7f4      	b.n	801119a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 80111b0:	fa1f f986 	uxth.w	r9, r6
 80111b4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80111b8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80111bc:	443b      	add	r3, r7
 80111be:	4293      	cmp	r3, r2
 80111c0:	f6bf af7e 	bge.w	80110c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80111c4:	a817      	add	r0, sp, #92	@ 0x5c
 80111c6:	f003 f959 	bl	801447c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80111ca:	b1f8      	cbz	r0, 801120c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80111cc:	280a      	cmp	r0, #10
 80111ce:	d1f1      	bne.n	80111b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80111d0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 80111d4:	444b      	add	r3, r9
 80111d6:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80111da:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 80111de:	eba3 0309 	sub.w	r3, r3, r9
 80111e2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80111e6:	e7e5      	b.n	80111b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80111e8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 80111ec:	b2b3      	uxth	r3, r6
 80111ee:	441a      	add	r2, r3
 80111f0:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80111f4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 80111f8:	1ad3      	subs	r3, r2, r3
 80111fa:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80111fe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8011202:	b11b      	cbz	r3, 801120c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8011204:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 8011208:	2b00      	cmp	r3, #0
 801120a:	d0ba      	beq.n	8011182 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801120c:	b063      	add	sp, #396	@ 0x18c
 801120e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011212:	2a02      	cmp	r2, #2
 8011214:	d105      	bne.n	8011222 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8011216:	7be2      	ldrb	r2, [r4, #15]
 8011218:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 801121c:	1a80      	subs	r0, r0, r2
 801121e:	1ac0      	subs	r0, r0, r3
 8011220:	e773      	b.n	801110a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8011222:	2000      	movs	r0, #0
 8011224:	e772      	b.n	801110c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8011226:	7be0      	ldrb	r0, [r4, #15]
 8011228:	e770      	b.n	801110c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801122a:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 801122e:	e773      	b.n	8011118 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8011230:	f1ba 0f00 	cmp.w	sl, #0
 8011234:	d0f7      	beq.n	8011226 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8011236:	2264      	movs	r2, #100	@ 0x64
 8011238:	4639      	mov	r1, r7
 801123a:	a849      	add	r0, sp, #292	@ 0x124
 801123c:	f014 fb11 	bl	8025862 <memcpy>
 8011240:	2300      	movs	r3, #0
 8011242:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8011246:	6821      	ldr	r1, [r4, #0]
 8011248:	a849      	add	r0, sp, #292	@ 0x124
 801124a:	f7ff fb9a 	bl	8010982 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801124e:	b203      	sxth	r3, r0
 8011250:	e751      	b.n	80110f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08011252 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8011252:	2b03      	cmp	r3, #3
 8011254:	d818      	bhi.n	8011288 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8011256:	e8df f003 	tbb	[pc, r3]
 801125a:	0602      	.short	0x0602
 801125c:	130d      	.short	0x130d
 801125e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8011262:	1850      	adds	r0, r2, r1
 8011264:	4770      	bx	lr
 8011266:	8803      	ldrh	r3, [r0, #0]
 8011268:	8880      	ldrh	r0, [r0, #4]
 801126a:	4418      	add	r0, r3
 801126c:	b200      	sxth	r0, r0
 801126e:	1a80      	subs	r0, r0, r2
 8011270:	3801      	subs	r0, #1
 8011272:	4770      	bx	lr
 8011274:	8803      	ldrh	r3, [r0, #0]
 8011276:	8880      	ldrh	r0, [r0, #4]
 8011278:	4418      	add	r0, r3
 801127a:	b200      	sxth	r0, r0
 801127c:	1a40      	subs	r0, r0, r1
 801127e:	e7f7      	b.n	8011270 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8011280:	f9b0 0000 	ldrsh.w	r0, [r0]
 8011284:	4410      	add	r0, r2
 8011286:	4770      	bx	lr
 8011288:	2000      	movs	r0, #0
 801128a:	4770      	bx	lr

0801128c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801128c:	2b03      	cmp	r3, #3
 801128e:	d817      	bhi.n	80112c0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8011290:	e8df f003 	tbb	[pc, r3]
 8011294:	10090602 	.word	0x10090602
 8011298:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801129c:	1850      	adds	r0, r2, r1
 801129e:	4770      	bx	lr
 80112a0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80112a4:	e7fa      	b.n	801129c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 80112a6:	8843      	ldrh	r3, [r0, #2]
 80112a8:	88c0      	ldrh	r0, [r0, #6]
 80112aa:	4418      	add	r0, r3
 80112ac:	b200      	sxth	r0, r0
 80112ae:	1a80      	subs	r0, r0, r2
 80112b0:	3801      	subs	r0, #1
 80112b2:	4770      	bx	lr
 80112b4:	8843      	ldrh	r3, [r0, #2]
 80112b6:	88c0      	ldrh	r0, [r0, #6]
 80112b8:	4418      	add	r0, r3
 80112ba:	b200      	sxth	r0, r0
 80112bc:	1a40      	subs	r0, r0, r1
 80112be:	e7f7      	b.n	80112b0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 80112c0:	2000      	movs	r0, #0
 80112c2:	4770      	bx	lr

080112c4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 80112c4:	4b01      	ldr	r3, [pc, #4]	@ (80112cc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 80112c6:	2200      	movs	r2, #0
 80112c8:	601a      	str	r2, [r3, #0]
 80112ca:	4770      	bx	lr
 80112cc:	20015248 	.word	0x20015248

080112d0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80112d0:	4603      	mov	r3, r0
 80112d2:	b1c8      	cbz	r0, 8011308 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80112d4:	0c02      	lsrs	r2, r0, #16
 80112d6:	0412      	lsls	r2, r2, #16
 80112d8:	b9a2      	cbnz	r2, 8011304 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80112da:	0403      	lsls	r3, r0, #16
 80112dc:	2010      	movs	r0, #16
 80112de:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 80112e2:	bf04      	itt	eq
 80112e4:	021b      	lsleq	r3, r3, #8
 80112e6:	3008      	addeq	r0, #8
 80112e8:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 80112ec:	bf04      	itt	eq
 80112ee:	011b      	lsleq	r3, r3, #4
 80112f0:	3004      	addeq	r0, #4
 80112f2:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 80112f6:	bf04      	itt	eq
 80112f8:	009b      	lsleq	r3, r3, #2
 80112fa:	3002      	addeq	r0, #2
 80112fc:	2b00      	cmp	r3, #0
 80112fe:	db04      	blt.n	801130a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8011300:	3001      	adds	r0, #1
 8011302:	4770      	bx	lr
 8011304:	2000      	movs	r0, #0
 8011306:	e7ea      	b.n	80112de <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8011308:	2020      	movs	r0, #32
 801130a:	4770      	bx	lr

0801130c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801130c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011310:	b087      	sub	sp, #28
 8011312:	460d      	mov	r5, r1
 8011314:	4616      	mov	r6, r2
 8011316:	4698      	mov	r8, r3
 8011318:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 801131c:	4601      	mov	r1, r0
 801131e:	b120      	cbz	r0, 801132a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8011320:	b11a      	cbz	r2, 801132a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8011322:	2d1f      	cmp	r5, #31
 8011324:	d801      	bhi.n	801132a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8011326:	2b1f      	cmp	r3, #31
 8011328:	d904      	bls.n	8011334 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801132a:	2000      	movs	r0, #0
 801132c:	6038      	str	r0, [r7, #0]
 801132e:	b007      	add	sp, #28
 8011330:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011334:	b97d      	cbnz	r5, 8011356 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8011336:	b143      	cbz	r3, 801134a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8011338:	4602      	mov	r2, r0
 801133a:	e9cd 4700 	strd	r4, r7, [sp]
 801133e:	462b      	mov	r3, r5
 8011340:	4641      	mov	r1, r8
 8011342:	4630      	mov	r0, r6
 8011344:	f7ff ffe2 	bl	801130c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8011348:	e7f1      	b.n	801132e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801134a:	f04f 33ff 	mov.w	r3, #4294967295
 801134e:	603b      	str	r3, [r7, #0]
 8011350:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8011354:	e7eb      	b.n	801132e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8011356:	fa32 fa05 	lsrs.w	sl, r2, r5
 801135a:	d106      	bne.n	801136a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801135c:	4346      	muls	r6, r0
 801135e:	fbb6 f0f4 	udiv	r0, r6, r4
 8011362:	fb04 6610 	mls	r6, r4, r0, r6
 8011366:	603e      	str	r6, [r7, #0]
 8011368:	e7e1      	b.n	801132e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801136a:	2201      	movs	r2, #1
 801136c:	40aa      	lsls	r2, r5
 801136e:	3a01      	subs	r2, #1
 8011370:	4016      	ands	r6, r2
 8011372:	fa00 fb05 	lsl.w	fp, r0, r5
 8011376:	4630      	mov	r0, r6
 8011378:	fbbb f9f4 	udiv	r9, fp, r4
 801137c:	fb0a f309 	mul.w	r3, sl, r9
 8011380:	9303      	str	r3, [sp, #12]
 8011382:	f7ff ffa5 	bl	80112d0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8011386:	462b      	mov	r3, r5
 8011388:	460a      	mov	r2, r1
 801138a:	e9cd 4700 	strd	r4, r7, [sp]
 801138e:	4601      	mov	r1, r0
 8011390:	4630      	mov	r0, r6
 8011392:	f7ff ffbb 	bl	801130c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8011396:	fb04 b919 	mls	r9, r4, r9, fp
 801139a:	4606      	mov	r6, r0
 801139c:	4648      	mov	r0, r9
 801139e:	eb05 0108 	add.w	r1, r5, r8
 80113a2:	f7ff ff95 	bl	80112d0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80113a6:	ab05      	add	r3, sp, #20
 80113a8:	e9cd 4300 	strd	r4, r3, [sp]
 80113ac:	464a      	mov	r2, r9
 80113ae:	4603      	mov	r3, r0
 80113b0:	4650      	mov	r0, sl
 80113b2:	f7ff ffab 	bl	801130c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80113b6:	6839      	ldr	r1, [r7, #0]
 80113b8:	9a05      	ldr	r2, [sp, #20]
 80113ba:	9b03      	ldr	r3, [sp, #12]
 80113bc:	4411      	add	r1, r2
 80113be:	fbb1 f2f4 	udiv	r2, r1, r4
 80113c2:	18d3      	adds	r3, r2, r3
 80113c4:	441e      	add	r6, r3
 80113c6:	fb04 1412 	mls	r4, r4, r2, r1
 80113ca:	4430      	add	r0, r6
 80113cc:	603c      	str	r4, [r7, #0]
 80113ce:	e7ae      	b.n	801132e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080113d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80113d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80113d4:	b085      	sub	sp, #20
 80113d6:	f1b0 0900 	subs.w	r9, r0, #0
 80113da:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80113dc:	461d      	mov	r5, r3
 80113de:	bfbf      	itttt	lt
 80113e0:	6823      	ldrlt	r3, [r4, #0]
 80113e2:	425b      	neglt	r3, r3
 80113e4:	f1c9 0900 	rsblt	r9, r9, #0
 80113e8:	6023      	strlt	r3, [r4, #0]
 80113ea:	bfb4      	ite	lt
 80113ec:	f04f 36ff 	movlt.w	r6, #4294967295
 80113f0:	2601      	movge	r6, #1
 80113f2:	2a00      	cmp	r2, #0
 80113f4:	4617      	mov	r7, r2
 80113f6:	da04      	bge.n	8011402 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80113f8:	6823      	ldr	r3, [r4, #0]
 80113fa:	425b      	negs	r3, r3
 80113fc:	4257      	negs	r7, r2
 80113fe:	4276      	negs	r6, r6
 8011400:	6023      	str	r3, [r4, #0]
 8011402:	2d00      	cmp	r5, #0
 8011404:	4638      	mov	r0, r7
 8011406:	bfba      	itte	lt
 8011408:	426d      	neglt	r5, r5
 801140a:	f04f 38ff 	movlt.w	r8, #4294967295
 801140e:	f04f 0801 	movge.w	r8, #1
 8011412:	f7ff ff5d 	bl	80112d0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8011416:	ab03      	add	r3, sp, #12
 8011418:	e9cd 5300 	strd	r5, r3, [sp]
 801141c:	463a      	mov	r2, r7
 801141e:	4603      	mov	r3, r0
 8011420:	4648      	mov	r0, r9
 8011422:	f7ff ff73 	bl	801130c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8011426:	6823      	ldr	r3, [r4, #0]
 8011428:	9a03      	ldr	r2, [sp, #12]
 801142a:	4546      	cmp	r6, r8
 801142c:	441a      	add	r2, r3
 801142e:	fb92 f3f5 	sdiv	r3, r2, r5
 8011432:	4418      	add	r0, r3
 8011434:	bf18      	it	ne
 8011436:	4240      	negne	r0, r0
 8011438:	fb05 2313 	mls	r3, r5, r3, r2
 801143c:	1c72      	adds	r2, r6, #1
 801143e:	6023      	str	r3, [r4, #0]
 8011440:	d105      	bne.n	801144e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8011442:	2b00      	cmp	r3, #0
 8011444:	f1c3 0200 	rsb	r2, r3, #0
 8011448:	db0b      	blt.n	8011462 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801144a:	6022      	str	r2, [r4, #0]
 801144c:	e006      	b.n	801145c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801144e:	2e01      	cmp	r6, #1
 8011450:	d104      	bne.n	801145c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8011452:	2b00      	cmp	r3, #0
 8011454:	da02      	bge.n	801145c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8011456:	442b      	add	r3, r5
 8011458:	3801      	subs	r0, #1
 801145a:	6023      	str	r3, [r4, #0]
 801145c:	b005      	add	sp, #20
 801145e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011462:	3801      	subs	r0, #1
 8011464:	1b52      	subs	r2, r2, r5
 8011466:	e7f0      	b.n	801144a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08011468 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8011468:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801146c:	4c1c      	ldr	r4, [pc, #112]	@ (80114e0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801146e:	6807      	ldr	r7, [r0, #0]
 8011470:	69a3      	ldr	r3, [r4, #24]
 8011472:	4605      	mov	r5, r0
 8011474:	b92b      	cbnz	r3, 8011482 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8011476:	6840      	ldr	r0, [r0, #4]
 8011478:	e9c5 7000 	strd	r7, r0, [r5]
 801147c:	b004      	add	sp, #16
 801147e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011482:	68a2      	ldr	r2, [r4, #8]
 8011484:	6820      	ldr	r0, [r4, #0]
 8011486:	ae04      	add	r6, sp, #16
 8011488:	f04f 0802 	mov.w	r8, #2
 801148c:	fb93 f1f8 	sdiv	r1, r3, r8
 8011490:	440a      	add	r2, r1
 8011492:	f846 2d04 	str.w	r2, [r6, #-4]!
 8011496:	69e1      	ldr	r1, [r4, #28]
 8011498:	9600      	str	r6, [sp, #0]
 801149a:	463a      	mov	r2, r7
 801149c:	f7ff ff98 	bl	80113d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80114a0:	69a3      	ldr	r3, [r4, #24]
 80114a2:	686a      	ldr	r2, [r5, #4]
 80114a4:	6a21      	ldr	r1, [r4, #32]
 80114a6:	9600      	str	r6, [sp, #0]
 80114a8:	4607      	mov	r7, r0
 80114aa:	6860      	ldr	r0, [r4, #4]
 80114ac:	f7ff ff90 	bl	80113d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80114b0:	6962      	ldr	r2, [r4, #20]
 80114b2:	69a3      	ldr	r3, [r4, #24]
 80114b4:	fb93 f8f8 	sdiv	r8, r3, r8
 80114b8:	4442      	add	r2, r8
 80114ba:	9203      	str	r2, [sp, #12]
 80114bc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80114be:	682a      	ldr	r2, [r5, #0]
 80114c0:	9600      	str	r6, [sp, #0]
 80114c2:	4407      	add	r7, r0
 80114c4:	68e0      	ldr	r0, [r4, #12]
 80114c6:	f7ff ff83 	bl	80113d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80114ca:	9600      	str	r6, [sp, #0]
 80114cc:	4680      	mov	r8, r0
 80114ce:	69a3      	ldr	r3, [r4, #24]
 80114d0:	686a      	ldr	r2, [r5, #4]
 80114d2:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 80114d4:	6920      	ldr	r0, [r4, #16]
 80114d6:	f7ff ff7b 	bl	80113d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80114da:	4440      	add	r0, r8
 80114dc:	e7cc      	b.n	8011478 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80114de:	bf00      	nop
 80114e0:	2001524c 	.word	0x2001524c

080114e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80114e4:	4b07      	ldr	r3, [pc, #28]	@ (8011504 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80114e6:	781b      	ldrb	r3, [r3, #0]
 80114e8:	2b01      	cmp	r3, #1
 80114ea:	d109      	bne.n	8011500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80114ec:	f9b1 3000 	ldrsh.w	r3, [r1]
 80114f0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80114f4:	8003      	strh	r3, [r0, #0]
 80114f6:	4b04      	ldr	r3, [pc, #16]	@ (8011508 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80114f8:	881b      	ldrh	r3, [r3, #0]
 80114fa:	3b01      	subs	r3, #1
 80114fc:	1a9b      	subs	r3, r3, r2
 80114fe:	800b      	strh	r3, [r1, #0]
 8011500:	4770      	bx	lr
 8011502:	bf00      	nop
 8011504:	20015230 	.word	0x20015230
 8011508:	2001522c 	.word	0x2001522c

0801150c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801150c:	b510      	push	{r4, lr}
 801150e:	4b07      	ldr	r3, [pc, #28]	@ (801152c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8011510:	781b      	ldrb	r3, [r3, #0]
 8011512:	2b01      	cmp	r3, #1
 8011514:	d108      	bne.n	8011528 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8011516:	4b06      	ldr	r3, [pc, #24]	@ (8011530 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8011518:	880c      	ldrh	r4, [r1, #0]
 801151a:	881b      	ldrh	r3, [r3, #0]
 801151c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8011520:	3b01      	subs	r3, #1
 8011522:	1b1b      	subs	r3, r3, r4
 8011524:	8003      	strh	r3, [r0, #0]
 8011526:	800a      	strh	r2, [r1, #0]
 8011528:	bd10      	pop	{r4, pc}
 801152a:	bf00      	nop
 801152c:	20015230 	.word	0x20015230
 8011530:	2001522c 	.word	0x2001522c

08011534 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8011534:	b510      	push	{r4, lr}
 8011536:	4b0a      	ldr	r3, [pc, #40]	@ (8011560 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8011538:	781b      	ldrb	r3, [r3, #0]
 801153a:	2b01      	cmp	r3, #1
 801153c:	d10e      	bne.n	801155c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801153e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8011542:	8843      	ldrh	r3, [r0, #2]
 8011544:	f9b0 4000 	ldrsh.w	r4, [r0]
 8011548:	8044      	strh	r4, [r0, #2]
 801154a:	18ca      	adds	r2, r1, r3
 801154c:	4b05      	ldr	r3, [pc, #20]	@ (8011564 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801154e:	881b      	ldrh	r3, [r3, #0]
 8011550:	1a9b      	subs	r3, r3, r2
 8011552:	8003      	strh	r3, [r0, #0]
 8011554:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8011558:	80c3      	strh	r3, [r0, #6]
 801155a:	8081      	strh	r1, [r0, #4]
 801155c:	bd10      	pop	{r4, pc}
 801155e:	bf00      	nop
 8011560:	20015230 	.word	0x20015230
 8011564:	2001522c 	.word	0x2001522c

08011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8011568:	4b08      	ldr	r3, [pc, #32]	@ (801158c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801156a:	781b      	ldrb	r3, [r3, #0]
 801156c:	2b01      	cmp	r3, #1
 801156e:	d10c      	bne.n	801158a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8011570:	8803      	ldrh	r3, [r0, #0]
 8011572:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8011576:	8842      	ldrh	r2, [r0, #2]
 8011578:	8002      	strh	r2, [r0, #0]
 801157a:	185a      	adds	r2, r3, r1
 801157c:	4b04      	ldr	r3, [pc, #16]	@ (8011590 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801157e:	881b      	ldrh	r3, [r3, #0]
 8011580:	1a9b      	subs	r3, r3, r2
 8011582:	8043      	strh	r3, [r0, #2]
 8011584:	88c3      	ldrh	r3, [r0, #6]
 8011586:	8083      	strh	r3, [r0, #4]
 8011588:	80c1      	strh	r1, [r0, #6]
 801158a:	4770      	bx	lr
 801158c:	20015230 	.word	0x20015230
 8011590:	2001522c 	.word	0x2001522c

08011594 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8011594:	b510      	push	{r4, lr}
 8011596:	4b07      	ldr	r3, [pc, #28]	@ (80115b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8011598:	781b      	ldrb	r3, [r3, #0]
 801159a:	2b01      	cmp	r3, #1
 801159c:	d108      	bne.n	80115b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801159e:	f9b1 3000 	ldrsh.w	r3, [r1]
 80115a2:	f9b0 4000 	ldrsh.w	r4, [r0]
 80115a6:	8003      	strh	r3, [r0, #0]
 80115a8:	8893      	ldrh	r3, [r2, #4]
 80115aa:	3b01      	subs	r3, #1
 80115ac:	1b1b      	subs	r3, r3, r4
 80115ae:	800b      	strh	r3, [r1, #0]
 80115b0:	bd10      	pop	{r4, pc}
 80115b2:	bf00      	nop
 80115b4:	20015230 	.word	0x20015230

080115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80115b8:	b510      	push	{r4, lr}
 80115ba:	4b0a      	ldr	r3, [pc, #40]	@ (80115e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80115bc:	781b      	ldrb	r3, [r3, #0]
 80115be:	2b01      	cmp	r3, #1
 80115c0:	460a      	mov	r2, r1
 80115c2:	d10d      	bne.n	80115e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80115c4:	8881      	ldrh	r1, [r0, #4]
 80115c6:	8803      	ldrh	r3, [r0, #0]
 80115c8:	440b      	add	r3, r1
 80115ca:	4601      	mov	r1, r0
 80115cc:	3b01      	subs	r3, #1
 80115ce:	f821 3b02 	strh.w	r3, [r1], #2
 80115d2:	f7ff ffdf 	bl	8011594 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80115d6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80115da:	88c2      	ldrh	r2, [r0, #6]
 80115dc:	8082      	strh	r2, [r0, #4]
 80115de:	80c3      	strh	r3, [r0, #6]
 80115e0:	bd10      	pop	{r4, pc}
 80115e2:	bf00      	nop
 80115e4:	20015230 	.word	0x20015230

080115e8 <_ZN8touchgfx11Application13requestRedrawEv>:
 80115e8:	4b06      	ldr	r3, [pc, #24]	@ (8011604 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80115ea:	f9b3 2000 	ldrsh.w	r2, [r3]
 80115ee:	4b06      	ldr	r3, [pc, #24]	@ (8011608 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80115f0:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 80115f4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80115f8:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 80115fc:	2100      	movs	r1, #0
 80115fe:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 8011602:	4770      	bx	lr
 8011604:	2001522c 	.word	0x2001522c
 8011608:	2001522e 	.word	0x2001522e

0801160c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 801160c:	4b03      	ldr	r3, [pc, #12]	@ (801161c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 801160e:	6818      	ldr	r0, [r3, #0]
 8011610:	b110      	cbz	r0, 8011618 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8011612:	6803      	ldr	r3, [r0, #0]
 8011614:	699b      	ldr	r3, [r3, #24]
 8011616:	4718      	bx	r3
 8011618:	4770      	bx	lr
 801161a:	bf00      	nop
 801161c:	2001527c 	.word	0x2001527c

08011620 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8011620:	4770      	bx	lr
	...

08011624 <_ZN8touchgfx11Application4drawEv>:
 8011624:	b507      	push	{r0, r1, r2, lr}
 8011626:	4b09      	ldr	r3, [pc, #36]	@ (801164c <_ZN8touchgfx11Application4drawEv+0x28>)
 8011628:	f9b3 2000 	ldrsh.w	r2, [r3]
 801162c:	4b08      	ldr	r3, [pc, #32]	@ (8011650 <_ZN8touchgfx11Application4drawEv+0x2c>)
 801162e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011632:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011636:	f8ad 3006 	strh.w	r3, [sp, #6]
 801163a:	6803      	ldr	r3, [r0, #0]
 801163c:	2100      	movs	r1, #0
 801163e:	9100      	str	r1, [sp, #0]
 8011640:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011642:	4669      	mov	r1, sp
 8011644:	4798      	blx	r3
 8011646:	b003      	add	sp, #12
 8011648:	f85d fb04 	ldr.w	pc, [sp], #4
 801164c:	2001522c 	.word	0x2001522c
 8011650:	2001522e 	.word	0x2001522e

08011654 <_ZN8touchgfx11Application10invalidateEv>:
 8011654:	4b09      	ldr	r3, [pc, #36]	@ (801167c <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8011656:	f9b3 2000 	ldrsh.w	r2, [r3]
 801165a:	4b09      	ldr	r3, [pc, #36]	@ (8011680 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 801165c:	b082      	sub	sp, #8
 801165e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011662:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011666:	2100      	movs	r1, #0
 8011668:	f8ad 3006 	strh.w	r3, [sp, #6]
 801166c:	9100      	str	r1, [sp, #0]
 801166e:	6803      	ldr	r3, [r0, #0]
 8011670:	aa02      	add	r2, sp, #8
 8011672:	e912 0006 	ldmdb	r2, {r1, r2}
 8011676:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8011678:	b002      	add	sp, #8
 801167a:	4718      	bx	r3
 801167c:	2001522c 	.word	0x2001522c
 8011680:	2001522e 	.word	0x2001522e

08011684 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8011684:	4b03      	ldr	r3, [pc, #12]	@ (8011694 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8011686:	6818      	ldr	r0, [r3, #0]
 8011688:	b110      	cbz	r0, 8011690 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 801168a:	6803      	ldr	r3, [r0, #0]
 801168c:	69db      	ldr	r3, [r3, #28]
 801168e:	4718      	bx	r3
 8011690:	4770      	bx	lr
 8011692:	bf00      	nop
 8011694:	2001527c 	.word	0x2001527c

08011698 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8011698:	4b03      	ldr	r3, [pc, #12]	@ (80116a8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 801169a:	6818      	ldr	r0, [r3, #0]
 801169c:	b110      	cbz	r0, 80116a4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801169e:	6803      	ldr	r3, [r0, #0]
 80116a0:	6a1b      	ldr	r3, [r3, #32]
 80116a2:	4718      	bx	r3
 80116a4:	4770      	bx	lr
 80116a6:	bf00      	nop
 80116a8:	2001527c 	.word	0x2001527c

080116ac <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80116ac:	2300      	movs	r3, #0
 80116ae:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 80116b2:	4770      	bx	lr

080116b4 <_ZN8touchgfx11Application14handleKeyEventEh>:
 80116b4:	4b03      	ldr	r3, [pc, #12]	@ (80116c4 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80116b6:	6818      	ldr	r0, [r3, #0]
 80116b8:	b110      	cbz	r0, 80116c0 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80116ba:	6803      	ldr	r3, [r0, #0]
 80116bc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80116be:	4718      	bx	r3
 80116c0:	4770      	bx	lr
 80116c2:	bf00      	nop
 80116c4:	2001527c 	.word	0x2001527c

080116c8 <_ZN8touchgfx11ApplicationD1Ev>:
 80116c8:	4770      	bx	lr

080116ca <_ZN8touchgfx11ApplicationD0Ev>:
 80116ca:	b510      	push	{r4, lr}
 80116cc:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 80116d0:	4604      	mov	r4, r0
 80116d2:	f012 feb2 	bl	802443a <_ZdlPvj>
 80116d6:	4620      	mov	r0, r4
 80116d8:	bd10      	pop	{r4, pc}

080116da <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80116da:	b510      	push	{r4, lr}
 80116dc:	f9b1 4000 	ldrsh.w	r4, [r1]
 80116e0:	888a      	ldrh	r2, [r1, #4]
 80116e2:	f9b0 3000 	ldrsh.w	r3, [r0]
 80116e6:	4422      	add	r2, r4
 80116e8:	b212      	sxth	r2, r2
 80116ea:	4293      	cmp	r3, r2
 80116ec:	da15      	bge.n	801171a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80116ee:	8882      	ldrh	r2, [r0, #4]
 80116f0:	4413      	add	r3, r2
 80116f2:	b21b      	sxth	r3, r3
 80116f4:	429c      	cmp	r4, r3
 80116f6:	da10      	bge.n	801171a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80116f8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80116fc:	88c9      	ldrh	r1, [r1, #6]
 80116fe:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8011702:	4419      	add	r1, r3
 8011704:	b209      	sxth	r1, r1
 8011706:	428a      	cmp	r2, r1
 8011708:	da07      	bge.n	801171a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801170a:	88c0      	ldrh	r0, [r0, #6]
 801170c:	4410      	add	r0, r2
 801170e:	b200      	sxth	r0, r0
 8011710:	4283      	cmp	r3, r0
 8011712:	bfac      	ite	ge
 8011714:	2000      	movge	r0, #0
 8011716:	2001      	movlt	r0, #1
 8011718:	bd10      	pop	{r4, pc}
 801171a:	2000      	movs	r0, #0
 801171c:	e7fc      	b.n	8011718 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0801171e <_ZN8touchgfx4Rect10restrictToEss>:
 801171e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8011722:	2b00      	cmp	r3, #0
 8011724:	b510      	push	{r4, lr}
 8011726:	da04      	bge.n	8011732 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8011728:	8884      	ldrh	r4, [r0, #4]
 801172a:	4423      	add	r3, r4
 801172c:	8083      	strh	r3, [r0, #4]
 801172e:	2300      	movs	r3, #0
 8011730:	8003      	strh	r3, [r0, #0]
 8011732:	f9b0 4000 	ldrsh.w	r4, [r0]
 8011736:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801173a:	1b09      	subs	r1, r1, r4
 801173c:	428b      	cmp	r3, r1
 801173e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8011742:	bfc8      	it	gt
 8011744:	8081      	strhgt	r1, [r0, #4]
 8011746:	2b00      	cmp	r3, #0
 8011748:	da04      	bge.n	8011754 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 801174a:	88c1      	ldrh	r1, [r0, #6]
 801174c:	440b      	add	r3, r1
 801174e:	80c3      	strh	r3, [r0, #6]
 8011750:	2300      	movs	r3, #0
 8011752:	8043      	strh	r3, [r0, #2]
 8011754:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8011758:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 801175c:	1a52      	subs	r2, r2, r1
 801175e:	4293      	cmp	r3, r2
 8011760:	bfc8      	it	gt
 8011762:	80c2      	strhgt	r2, [r0, #6]
 8011764:	bd10      	pop	{r4, pc}
	...

08011768 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8011768:	b510      	push	{r4, lr}
 801176a:	4b10      	ldr	r3, [pc, #64]	@ (80117ac <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 801176c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011770:	4b0f      	ldr	r3, [pc, #60]	@ (80117b0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8011772:	460c      	mov	r4, r1
 8011774:	4620      	mov	r0, r4
 8011776:	f9b3 1000 	ldrsh.w	r1, [r3]
 801177a:	f7ff ffd0 	bl	801171e <_ZN8touchgfx4Rect10restrictToEss>
 801177e:	4b0d      	ldr	r3, [pc, #52]	@ (80117b4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8011780:	6818      	ldr	r0, [r3, #0]
 8011782:	b190      	cbz	r0, 80117aa <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8011784:	6803      	ldr	r3, [r0, #0]
 8011786:	4621      	mov	r1, r4
 8011788:	689b      	ldr	r3, [r3, #8]
 801178a:	4798      	blx	r3
 801178c:	4b0a      	ldr	r3, [pc, #40]	@ (80117b8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801178e:	6818      	ldr	r0, [r3, #0]
 8011790:	b118      	cbz	r0, 801179a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8011792:	6803      	ldr	r3, [r0, #0]
 8011794:	4621      	mov	r1, r4
 8011796:	689b      	ldr	r3, [r3, #8]
 8011798:	4798      	blx	r3
 801179a:	4b08      	ldr	r3, [pc, #32]	@ (80117bc <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 801179c:	6818      	ldr	r0, [r3, #0]
 801179e:	6803      	ldr	r3, [r0, #0]
 80117a0:	4621      	mov	r1, r4
 80117a2:	69db      	ldr	r3, [r3, #28]
 80117a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80117a8:	4718      	bx	r3
 80117aa:	bd10      	pop	{r4, pc}
 80117ac:	2001522e 	.word	0x2001522e
 80117b0:	2001522c 	.word	0x2001522c
 80117b4:	2001527c 	.word	0x2001527c
 80117b8:	20015278 	.word	0x20015278
 80117bc:	20015238 	.word	0x20015238

080117c0 <_ZNK8touchgfx4Rect8includesERKS0_>:
 80117c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80117c2:	4606      	mov	r6, r0
 80117c4:	4608      	mov	r0, r1
 80117c6:	460f      	mov	r7, r1
 80117c8:	f7fa fd3b 	bl	800c242 <_ZNK8touchgfx4Rect7isEmptyEv>
 80117cc:	b9e8      	cbnz	r0, 801180a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80117ce:	f9b7 5000 	ldrsh.w	r5, [r7]
 80117d2:	f9b6 4000 	ldrsh.w	r4, [r6]
 80117d6:	42a5      	cmp	r5, r4
 80117d8:	db17      	blt.n	801180a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80117da:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80117de:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80117e2:	429a      	cmp	r2, r3
 80117e4:	db11      	blt.n	801180a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80117e6:	88b9      	ldrh	r1, [r7, #4]
 80117e8:	440d      	add	r5, r1
 80117ea:	88b1      	ldrh	r1, [r6, #4]
 80117ec:	440c      	add	r4, r1
 80117ee:	b22d      	sxth	r5, r5
 80117f0:	b224      	sxth	r4, r4
 80117f2:	42a5      	cmp	r5, r4
 80117f4:	dc09      	bgt.n	801180a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80117f6:	88f8      	ldrh	r0, [r7, #6]
 80117f8:	4410      	add	r0, r2
 80117fa:	88f2      	ldrh	r2, [r6, #6]
 80117fc:	4413      	add	r3, r2
 80117fe:	b200      	sxth	r0, r0
 8011800:	b21b      	sxth	r3, r3
 8011802:	4298      	cmp	r0, r3
 8011804:	bfcc      	ite	gt
 8011806:	2000      	movgt	r0, #0
 8011808:	2001      	movle	r0, #1
 801180a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801180c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 801180c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801180e:	4604      	mov	r4, r0
 8011810:	4608      	mov	r0, r1
 8011812:	460d      	mov	r5, r1
 8011814:	f7fa fd15 	bl	800c242 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011818:	b978      	cbnz	r0, 801183a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 801181a:	4620      	mov	r0, r4
 801181c:	f7fa fd11 	bl	800c242 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011820:	f9b5 6000 	ldrsh.w	r6, [r5]
 8011824:	b150      	cbz	r0, 801183c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8011826:	8026      	strh	r6, [r4, #0]
 8011828:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801182c:	8063      	strh	r3, [r4, #2]
 801182e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8011832:	80a3      	strh	r3, [r4, #4]
 8011834:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8011838:	80e3      	strh	r3, [r4, #6]
 801183a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801183c:	f9b4 1000 	ldrsh.w	r1, [r4]
 8011840:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8011844:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8011848:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 801184c:	88ed      	ldrh	r5, [r5, #6]
 801184e:	42b1      	cmp	r1, r6
 8011850:	460f      	mov	r7, r1
 8011852:	bfa8      	it	ge
 8011854:	4637      	movge	r7, r6
 8011856:	4293      	cmp	r3, r2
 8011858:	4618      	mov	r0, r3
 801185a:	4466      	add	r6, ip
 801185c:	bfa8      	it	ge
 801185e:	4610      	movge	r0, r2
 8011860:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8011864:	8027      	strh	r7, [r4, #0]
 8011866:	442a      	add	r2, r5
 8011868:	88e5      	ldrh	r5, [r4, #6]
 801186a:	8060      	strh	r0, [r4, #2]
 801186c:	4461      	add	r1, ip
 801186e:	442b      	add	r3, r5
 8011870:	b236      	sxth	r6, r6
 8011872:	b209      	sxth	r1, r1
 8011874:	b212      	sxth	r2, r2
 8011876:	b21b      	sxth	r3, r3
 8011878:	428e      	cmp	r6, r1
 801187a:	bfac      	ite	ge
 801187c:	ebc7 0106 	rsbge	r1, r7, r6
 8011880:	ebc7 0101 	rsblt	r1, r7, r1
 8011884:	429a      	cmp	r2, r3
 8011886:	bfac      	ite	ge
 8011888:	ebc0 0202 	rsbge	r2, r0, r2
 801188c:	ebc0 0203 	rsblt	r2, r0, r3
 8011890:	80a1      	strh	r1, [r4, #4]
 8011892:	80e2      	strh	r2, [r4, #6]
 8011894:	e7d1      	b.n	801183a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08011898 <_ZN8touchgfx11Application11getInstanceEv>:
 8011898:	4b01      	ldr	r3, [pc, #4]	@ (80118a0 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801189a:	6818      	ldr	r0, [r3, #0]
 801189c:	4770      	bx	lr
 801189e:	bf00      	nop
 80118a0:	2001528c 	.word	0x2001528c

080118a4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 80118a4:	b510      	push	{r4, lr}
 80118a6:	2300      	movs	r3, #0
 80118a8:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 80118ac:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 80118b0:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 80118b4:	4604      	mov	r4, r0
 80118b6:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 80118ba:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 80118be:	429a      	cmp	r2, r3
 80118c0:	d90e      	bls.n	80118e0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 80118c2:	18e2      	adds	r2, r4, r3
 80118c4:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 80118c8:	b122      	cbz	r2, 80118d4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 80118ca:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80118ce:	6803      	ldr	r3, [r0, #0]
 80118d0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80118d2:	4798      	blx	r3
 80118d4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 80118d8:	3301      	adds	r3, #1
 80118da:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 80118de:	e7ea      	b.n	80118b6 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 80118e0:	bd10      	pop	{r4, pc}

080118e2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 80118e2:	2300      	movs	r3, #0
 80118e4:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 80118e8:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 80118ec:	30a4      	adds	r0, #164	@ 0xa4
 80118ee:	f802 3b01 	strb.w	r3, [r2], #1
 80118f2:	4282      	cmp	r2, r0
 80118f4:	d1fb      	bne.n	80118ee <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 80118f6:	4770      	bx	lr

080118f8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80118f8:	b570      	push	{r4, r5, r6, lr}
 80118fa:	4c0b      	ldr	r4, [pc, #44]	@ (8011928 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 80118fc:	4605      	mov	r5, r0
 80118fe:	6820      	ldr	r0, [r4, #0]
 8011900:	460e      	mov	r6, r1
 8011902:	b110      	cbz	r0, 801190a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8011904:	6803      	ldr	r3, [r0, #0]
 8011906:	695b      	ldr	r3, [r3, #20]
 8011908:	4798      	blx	r3
 801190a:	1d28      	adds	r0, r5, #4
 801190c:	f7ff ffe9 	bl	80118e2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8011910:	6026      	str	r6, [r4, #0]
 8011912:	6833      	ldr	r3, [r6, #0]
 8011914:	4630      	mov	r0, r6
 8011916:	68db      	ldr	r3, [r3, #12]
 8011918:	4798      	blx	r3
 801191a:	682b      	ldr	r3, [r5, #0]
 801191c:	4628      	mov	r0, r5
 801191e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011920:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011924:	4718      	bx	r3
 8011926:	bf00      	nop
 8011928:	2001527c 	.word	0x2001527c

0801192c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 801192c:	2300      	movs	r3, #0
 801192e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 8011932:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 8011936:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011938:	461a      	mov	r2, r3
 801193a:	461c      	mov	r4, r3
 801193c:	461d      	mov	r5, r3
 801193e:	459c      	cmp	ip, r3
 8011940:	dd1a      	ble.n	8011978 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8011942:	18c6      	adds	r6, r0, r3
 8011944:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 8011948:	b16e      	cbz	r6, 8011966 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 801194a:	429a      	cmp	r2, r3
 801194c:	d008      	beq.n	8011960 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801194e:	fa1f fe82 	uxth.w	lr, r2
 8011952:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8011956:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 801195a:	1887      	adds	r7, r0, r2
 801195c:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 8011960:	3201      	adds	r2, #1
 8011962:	3301      	adds	r3, #1
 8011964:	e7eb      	b.n	801193e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8011966:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 801196a:	4299      	cmp	r1, r3
 801196c:	bfa8      	it	ge
 801196e:	3501      	addge	r5, #1
 8011970:	429e      	cmp	r6, r3
 8011972:	bfc8      	it	gt
 8011974:	3401      	addgt	r4, #1
 8011976:	e7f4      	b.n	8011962 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8011978:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 801197c:	1b49      	subs	r1, r1, r5
 801197e:	1b1b      	subs	r3, r3, r4
 8011980:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 8011984:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8011988:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 801198c:	4293      	cmp	r3, r2
 801198e:	dd03      	ble.n	8011998 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8011990:	3b01      	subs	r3, #1
 8011992:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 8011996:	e7f7      	b.n	8011988 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8011998:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0801199c <_ZN8touchgfx11Application15handleTickEventEv>:
 801199c:	b570      	push	{r4, r5, r6, lr}
 801199e:	4d16      	ldr	r5, [pc, #88]	@ (80119f8 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 80119a0:	4604      	mov	r4, r0
 80119a2:	6828      	ldr	r0, [r5, #0]
 80119a4:	b140      	cbz	r0, 80119b8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80119a6:	7a03      	ldrb	r3, [r0, #8]
 80119a8:	b933      	cbnz	r3, 80119b8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80119aa:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 80119ae:	6803      	ldr	r3, [r0, #0]
 80119b0:	689b      	ldr	r3, [r3, #8]
 80119b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80119b6:	4718      	bx	r3
 80119b8:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 80119bc:	4e0f      	ldr	r6, [pc, #60]	@ (80119fc <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 80119be:	b973      	cbnz	r3, 80119de <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80119c0:	b168      	cbz	r0, 80119de <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80119c2:	7a03      	ldrb	r3, [r0, #8]
 80119c4:	b15b      	cbz	r3, 80119de <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80119c6:	6830      	ldr	r0, [r6, #0]
 80119c8:	b110      	cbz	r0, 80119d0 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80119ca:	6803      	ldr	r3, [r0, #0]
 80119cc:	691b      	ldr	r3, [r3, #16]
 80119ce:	4798      	blx	r3
 80119d0:	6828      	ldr	r0, [r5, #0]
 80119d2:	6803      	ldr	r3, [r0, #0]
 80119d4:	68db      	ldr	r3, [r3, #12]
 80119d6:	4798      	blx	r3
 80119d8:	2301      	movs	r3, #1
 80119da:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 80119de:	3404      	adds	r4, #4
 80119e0:	4620      	mov	r0, r4
 80119e2:	f7ff ff5f 	bl	80118a4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 80119e6:	4620      	mov	r0, r4
 80119e8:	f7ff ffa0 	bl	801192c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80119ec:	6830      	ldr	r0, [r6, #0]
 80119ee:	b110      	cbz	r0, 80119f6 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 80119f0:	6803      	ldr	r3, [r0, #0]
 80119f2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80119f4:	e7dd      	b.n	80119b2 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80119f6:	bd70      	pop	{r4, r5, r6, pc}
 80119f8:	20015280 	.word	0x20015280
 80119fc:	2001527c 	.word	0x2001527c

08011a00 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8011a00:	4603      	mov	r3, r0
 8011a02:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 8011a06:	2200      	movs	r2, #0
 8011a08:	801a      	strh	r2, [r3, #0]
 8011a0a:	805a      	strh	r2, [r3, #2]
 8011a0c:	809a      	strh	r2, [r3, #4]
 8011a0e:	80da      	strh	r2, [r3, #6]
 8011a10:	3308      	adds	r3, #8
 8011a12:	428b      	cmp	r3, r1
 8011a14:	d1f8      	bne.n	8011a08 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8011a16:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 8011a1a:	4770      	bx	lr

08011a1c <_ZN8touchgfx11ApplicationC1Ev>:
 8011a1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011a1e:	4606      	mov	r6, r0
 8011a20:	4b1c      	ldr	r3, [pc, #112]	@ (8011a94 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8011a22:	f846 3b04 	str.w	r3, [r6], #4
 8011a26:	4604      	mov	r4, r0
 8011a28:	2500      	movs	r5, #0
 8011a2a:	22a8      	movs	r2, #168	@ 0xa8
 8011a2c:	2100      	movs	r1, #0
 8011a2e:	4630      	mov	r0, r6
 8011a30:	f013 fe47 	bl	80256c2 <memset>
 8011a34:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 8011a38:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8011a3c:	f7ff ffe0 	bl	8011a00 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011a40:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8011a44:	f7ff ffdc 	bl	8011a00 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011a48:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 8011a4c:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 8011a50:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 8011a54:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 8011a58:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 8011a5c:	490e      	ldr	r1, [pc, #56]	@ (8011a98 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8011a5e:	480f      	ldr	r0, [pc, #60]	@ (8011a9c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8011a60:	4f0f      	ldr	r7, [pc, #60]	@ (8011aa0 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8011a62:	f011 fe75 	bl	8023750 <CRC_Lock>
 8011a66:	4b0f      	ldr	r3, [pc, #60]	@ (8011aa4 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8011a68:	b158      	cbz	r0, 8011a82 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8011a6a:	801d      	strh	r5, [r3, #0]
 8011a6c:	4a0e      	ldr	r2, [pc, #56]	@ (8011aa8 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8011a6e:	2300      	movs	r3, #0
 8011a70:	6013      	str	r3, [r2, #0]
 8011a72:	4a0e      	ldr	r2, [pc, #56]	@ (8011aac <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8011a74:	603b      	str	r3, [r7, #0]
 8011a76:	4630      	mov	r0, r6
 8011a78:	6013      	str	r3, [r2, #0]
 8011a7a:	f7ff ff32 	bl	80118e2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8011a7e:	4620      	mov	r0, r4
 8011a80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011a82:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8011a86:	2002      	movs	r0, #2
 8011a88:	801a      	strh	r2, [r3, #0]
 8011a8a:	6038      	str	r0, [r7, #0]
 8011a8c:	f001 ff40 	bl	8013910 <_ZN8touchgfx6Screen4drawEv>
 8011a90:	e7ec      	b.n	8011a6c <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8011a92:	bf00      	nop
 8011a94:	0802849c 	.word	0x0802849c
 8011a98:	b5e8b5cd 	.word	0xb5e8b5cd
 8011a9c:	f407a5c2 	.word	0xf407a5c2
 8011aa0:	2001527c 	.word	0x2001527c
 8011aa4:	20000084 	.word	0x20000084
 8011aa8:	2001528c 	.word	0x2001528c
 8011aac:	20015280 	.word	0x20015280

08011ab0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8011ab0:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 8011ab4:	3b01      	subs	r3, #1
 8011ab6:	b29b      	uxth	r3, r3
 8011ab8:	428b      	cmp	r3, r1
 8011aba:	b510      	push	{r4, lr}
 8011abc:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 8011ac0:	d908      	bls.n	8011ad4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8011ac2:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8011ac6:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8011aca:	681a      	ldr	r2, [r3, #0]
 8011acc:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8011ad0:	685a      	ldr	r2, [r3, #4]
 8011ad2:	6062      	str	r2, [r4, #4]
 8011ad4:	bd10      	pop	{r4, pc}
	...

08011ad8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8011ad8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011adc:	4b92      	ldr	r3, [pc, #584]	@ (8011d28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
 8011ade:	b08f      	sub	sp, #60	@ 0x3c
 8011ae0:	ac0a      	add	r4, sp, #40	@ 0x28
 8011ae2:	e884 0006 	stmia.w	r4, {r1, r2}
 8011ae6:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011aea:	4b90      	ldr	r3, [pc, #576]	@ (8011d2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
 8011aec:	4683      	mov	fp, r0
 8011aee:	f9b3 1000 	ldrsh.w	r1, [r3]
 8011af2:	4620      	mov	r0, r4
 8011af4:	f7ff fe13 	bl	801171e <_ZN8touchgfx4Rect10restrictToEss>
 8011af8:	4620      	mov	r0, r4
 8011afa:	f7fa fba2 	bl	800c242 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011afe:	2800      	cmp	r0, #0
 8011b00:	d170      	bne.n	8011be4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 8011b02:	4b8b      	ldr	r3, [pc, #556]	@ (8011d30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 8011b04:	681b      	ldr	r3, [r3, #0]
 8011b06:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8011b0a:	2b02      	cmp	r3, #2
 8011b0c:	d06a      	beq.n	8011be4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 8011b0e:	9403      	str	r4, [sp, #12]
 8011b10:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8011b14:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8011b18:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8011b1c:	35a4      	adds	r5, #164	@ 0xa4
 8011b1e:	9301      	str	r3, [sp, #4]
 8011b20:	b15c      	cbz	r4, 8011b3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 8011b22:	4629      	mov	r1, r5
 8011b24:	9803      	ldr	r0, [sp, #12]
 8011b26:	f7ff fe4b 	bl	80117c0 <_ZNK8touchgfx4Rect8includesERKS0_>
 8011b2a:	3c01      	subs	r4, #1
 8011b2c:	b118      	cbz	r0, 8011b36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 8011b2e:	b2a1      	uxth	r1, r4
 8011b30:	9801      	ldr	r0, [sp, #4]
 8011b32:	f7ff ffbd 	bl	8011ab0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011b36:	3d08      	subs	r5, #8
 8011b38:	e7f2      	b.n	8011b20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 8011b3a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 8011b3e:	f8cd a010 	str.w	sl, [sp, #16]
 8011b42:	f10a 33ff 	add.w	r3, sl, #4294967295
 8011b46:	9302      	str	r3, [sp, #8]
 8011b48:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8011b4c:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 8011b50:	9306      	str	r3, [sp, #24]
 8011b52:	445c      	add	r4, fp
 8011b54:	2500      	movs	r5, #0
 8011b56:	4626      	mov	r6, r4
 8011b58:	f8cd a014 	str.w	sl, [sp, #20]
 8011b5c:	462f      	mov	r7, r5
 8011b5e:	9b05      	ldr	r3, [sp, #20]
 8011b60:	2b00      	cmp	r3, #0
 8011b62:	d073      	beq.n	8011c4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
 8011b64:	9903      	ldr	r1, [sp, #12]
 8011b66:	4630      	mov	r0, r6
 8011b68:	f7ff fdb7 	bl	80116da <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011b6c:	b350      	cbz	r0, 8011bc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 8011b6e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 8011b72:	f9b6 c000 	ldrsh.w	ip, [r6]
 8011b76:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 8011b7a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8011b7e:	45e6      	cmp	lr, ip
 8011b80:	db33      	blt.n	8011bea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 8011b82:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8011b86:	88b3      	ldrh	r3, [r6, #4]
 8011b88:	4472      	add	r2, lr
 8011b8a:	4463      	add	r3, ip
 8011b8c:	b212      	sxth	r2, r2
 8011b8e:	b21b      	sxth	r3, r3
 8011b90:	429a      	cmp	r2, r3
 8011b92:	dc2a      	bgt.n	8011bea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 8011b94:	88f3      	ldrh	r3, [r6, #6]
 8011b96:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8011b9a:	fa1f f289 	uxth.w	r2, r9
 8011b9e:	4413      	add	r3, r2
 8011ba0:	b29b      	uxth	r3, r3
 8011ba2:	45c8      	cmp	r8, r9
 8011ba4:	fa1f fc88 	uxth.w	ip, r8
 8011ba8:	fa0f fe83 	sxth.w	lr, r3
 8011bac:	db0f      	blt.n	8011bce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
 8011bae:	eba3 030c 	sub.w	r3, r3, ip
 8011bb2:	1ac9      	subs	r1, r1, r3
 8011bb4:	b209      	sxth	r1, r1
 8011bb6:	2900      	cmp	r1, #0
 8011bb8:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8011bbc:	dd12      	ble.n	8011be4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 8011bbe:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 8011bc2:	4605      	mov	r5, r0
 8011bc4:	9b05      	ldr	r3, [sp, #20]
 8011bc6:	3b01      	subs	r3, #1
 8011bc8:	9305      	str	r3, [sp, #20]
 8011bca:	3e08      	subs	r6, #8
 8011bcc:	e7c7      	b.n	8011b5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
 8011bce:	4461      	add	r1, ip
 8011bd0:	b209      	sxth	r1, r1
 8011bd2:	4571      	cmp	r1, lr
 8011bd4:	dc38      	bgt.n	8011c48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 8011bd6:	eba2 020c 	sub.w	r2, r2, ip
 8011bda:	b212      	sxth	r2, r2
 8011bdc:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8011be0:	2a00      	cmp	r2, #0
 8011be2:	dcee      	bgt.n	8011bc2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8011be4:	b00f      	add	sp, #60	@ 0x3c
 8011be6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011bea:	45c8      	cmp	r8, r9
 8011bec:	db2c      	blt.n	8011c48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 8011bee:	88f3      	ldrh	r3, [r6, #6]
 8011bf0:	4499      	add	r9, r3
 8011bf2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 8011bf6:	4498      	add	r8, r3
 8011bf8:	fa0f f989 	sxth.w	r9, r9
 8011bfc:	fa0f f888 	sxth.w	r8, r8
 8011c00:	45c1      	cmp	r9, r8
 8011c02:	db21      	blt.n	8011c48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 8011c04:	88b3      	ldrh	r3, [r6, #4]
 8011c06:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8011c0a:	fa1f f28c 	uxth.w	r2, ip
 8011c0e:	4413      	add	r3, r2
 8011c10:	b29b      	uxth	r3, r3
 8011c12:	45e6      	cmp	lr, ip
 8011c14:	fa1f f88e 	uxth.w	r8, lr
 8011c18:	fa0f f983 	sxth.w	r9, r3
 8011c1c:	db0a      	blt.n	8011c34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
 8011c1e:	eba3 0308 	sub.w	r3, r3, r8
 8011c22:	1ac9      	subs	r1, r1, r3
 8011c24:	b209      	sxth	r1, r1
 8011c26:	2900      	cmp	r1, #0
 8011c28:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 8011c2c:	ddda      	ble.n	8011be4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 8011c2e:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8011c32:	e7c6      	b.n	8011bc2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8011c34:	4441      	add	r1, r8
 8011c36:	b209      	sxth	r1, r1
 8011c38:	4549      	cmp	r1, r9
 8011c3a:	dc05      	bgt.n	8011c48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 8011c3c:	eba2 0208 	sub.w	r2, r2, r8
 8011c40:	b212      	sxth	r2, r2
 8011c42:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8011c46:	e7cb      	b.n	8011be0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
 8011c48:	4607      	mov	r7, r0
 8011c4a:	e7bb      	b.n	8011bc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 8011c4c:	2d00      	cmp	r5, #0
 8011c4e:	d181      	bne.n	8011b54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
 8011c50:	2f00      	cmp	r7, #0
 8011c52:	f000 81df 	beq.w	8012014 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8011c56:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 8011c5a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 8011c5e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 8011c62:	b2b3      	uxth	r3, r6
 8011c64:	9305      	str	r3, [sp, #20]
 8011c66:	9a05      	ldr	r2, [sp, #20]
 8011c68:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8011c6c:	4413      	add	r3, r2
 8011c6e:	b2ba      	uxth	r2, r7
 8011c70:	4492      	add	sl, r2
 8011c72:	b29b      	uxth	r3, r3
 8011c74:	fa1f fa8a 	uxth.w	sl, sl
 8011c78:	fa0f f883 	sxth.w	r8, r3
 8011c7c:	fa0f f98a 	sxth.w	r9, sl
 8011c80:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8011c84:	9b04      	ldr	r3, [sp, #16]
 8011c86:	2b00      	cmp	r3, #0
 8011c88:	d054      	beq.n	8011d34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
 8011c8a:	9903      	ldr	r1, [sp, #12]
 8011c8c:	4620      	mov	r0, r4
 8011c8e:	f7ff fd24 	bl	80116da <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011c92:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8011c96:	b1c0      	cbz	r0, 8011cca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8011c98:	f9b4 e000 	ldrsh.w	lr, [r4]
 8011c9c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8011ca0:	4576      	cmp	r6, lr
 8011ca2:	dc22      	bgt.n	8011cea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 8011ca4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8011ca8:	44f4      	add	ip, lr
 8011caa:	fa0f fc8c 	sxth.w	ip, ip
 8011cae:	45e0      	cmp	r8, ip
 8011cb0:	db1b      	blt.n	8011cea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 8011cb2:	428f      	cmp	r7, r1
 8011cb4:	fa1f fc81 	uxth.w	ip, r1
 8011cb8:	88e1      	ldrh	r1, [r4, #6]
 8011cba:	dc0d      	bgt.n	8011cd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
 8011cbc:	ebaa 0c0c 	sub.w	ip, sl, ip
 8011cc0:	eba1 010c 	sub.w	r1, r1, ip
 8011cc4:	f8a4 9002 	strh.w	r9, [r4, #2]
 8011cc8:	80e1      	strh	r1, [r4, #6]
 8011cca:	4628      	mov	r0, r5
 8011ccc:	9904      	ldr	r1, [sp, #16]
 8011cce:	3901      	subs	r1, #1
 8011cd0:	9104      	str	r1, [sp, #16]
 8011cd2:	3c08      	subs	r4, #8
 8011cd4:	4605      	mov	r5, r0
 8011cd6:	e7d3      	b.n	8011c80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
 8011cd8:	4461      	add	r1, ip
 8011cda:	b209      	sxth	r1, r1
 8011cdc:	4549      	cmp	r1, r9
 8011cde:	dcf5      	bgt.n	8011ccc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8011ce0:	eba2 0c0c 	sub.w	ip, r2, ip
 8011ce4:	f8a4 c006 	strh.w	ip, [r4, #6]
 8011ce8:	e7ef      	b.n	8011cca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8011cea:	428f      	cmp	r7, r1
 8011cec:	dcee      	bgt.n	8011ccc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8011cee:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8011cf2:	4461      	add	r1, ip
 8011cf4:	b209      	sxth	r1, r1
 8011cf6:	4589      	cmp	r9, r1
 8011cf8:	dbe8      	blt.n	8011ccc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8011cfa:	4576      	cmp	r6, lr
 8011cfc:	fa1f fc8e 	uxth.w	ip, lr
 8011d00:	88a1      	ldrh	r1, [r4, #4]
 8011d02:	dc07      	bgt.n	8011d14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
 8011d04:	eba3 0c0c 	sub.w	ip, r3, ip
 8011d08:	eba1 010c 	sub.w	r1, r1, ip
 8011d0c:	f8a4 8000 	strh.w	r8, [r4]
 8011d10:	80a1      	strh	r1, [r4, #4]
 8011d12:	e7da      	b.n	8011cca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8011d14:	4461      	add	r1, ip
 8011d16:	b209      	sxth	r1, r1
 8011d18:	4588      	cmp	r8, r1
 8011d1a:	dbd7      	blt.n	8011ccc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8011d1c:	9905      	ldr	r1, [sp, #20]
 8011d1e:	eba1 0c0c 	sub.w	ip, r1, ip
 8011d22:	f8a4 c004 	strh.w	ip, [r4, #4]
 8011d26:	e7d0      	b.n	8011cca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8011d28:	2001522e 	.word	0x2001522e
 8011d2c:	2001522c 	.word	0x2001522c
 8011d30:	20015238 	.word	0x20015238
 8011d34:	2d00      	cmp	r5, #0
 8011d36:	f000 816d 	beq.w	8012014 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8011d3a:	9b06      	ldr	r3, [sp, #24]
 8011d3c:	445b      	add	r3, fp
 8011d3e:	461c      	mov	r4, r3
 8011d40:	9b02      	ldr	r3, [sp, #8]
 8011d42:	3301      	adds	r3, #1
 8011d44:	f000 8166 	beq.w	8012014 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8011d48:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 8011d4c:	4629      	mov	r1, r5
 8011d4e:	9803      	ldr	r0, [sp, #12]
 8011d50:	f7ff fd36 	bl	80117c0 <_ZNK8touchgfx4Rect8includesERKS0_>
 8011d54:	b120      	cbz	r0, 8011d60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
 8011d56:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8011d5a:	9801      	ldr	r0, [sp, #4]
 8011d5c:	f7ff fea8 	bl	8011ab0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011d60:	9903      	ldr	r1, [sp, #12]
 8011d62:	4628      	mov	r0, r5
 8011d64:	f7ff fcb9 	bl	80116da <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011d68:	2800      	cmp	r0, #0
 8011d6a:	f000 809c 	beq.w	8011ea6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 8011d6e:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 8011d72:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8011d76:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8011d7a:	9309      	str	r3, [sp, #36]	@ 0x24
 8011d7c:	fa1f f189 	uxth.w	r1, r9
 8011d80:	eb01 0c03 	add.w	ip, r1, r3
 8011d84:	fa1f fa8c 	uxth.w	sl, ip
 8011d88:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8011d8c:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 8011d90:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 8011d94:	b283      	uxth	r3, r0
 8011d96:	eb03 050c 	add.w	r5, r3, ip
 8011d9a:	b2ad      	uxth	r5, r5
 8011d9c:	9505      	str	r5, [sp, #20]
 8011d9e:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8011da2:	9504      	str	r5, [sp, #16]
 8011da4:	4548      	cmp	r0, r9
 8011da6:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 8011daa:	f340 8099 	ble.w	8011ee0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 8011dae:	1a5b      	subs	r3, r3, r1
 8011db0:	b29b      	uxth	r3, r3
 8011db2:	4596      	cmp	lr, r2
 8011db4:	fa0f f08a 	sxth.w	r0, sl
 8011db8:	b21e      	sxth	r6, r3
 8011dba:	dd2e      	ble.n	8011e1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
 8011dbc:	9f02      	ldr	r7, [sp, #8]
 8011dbe:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 8011dc2:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8011dc6:	9f04      	ldr	r7, [sp, #16]
 8011dc8:	1a3f      	subs	r7, r7, r0
 8011dca:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 8011dce:	fa1f fe8e 	uxth.w	lr, lr
 8011dd2:	b292      	uxth	r2, r2
 8011dd4:	ebae 0102 	sub.w	r1, lr, r2
 8011dd8:	44a6      	add	lr, r4
 8011dda:	4402      	add	r2, r0
 8011ddc:	b289      	uxth	r1, r1
 8011dde:	fa0f fe8e 	sxth.w	lr, lr
 8011de2:	b212      	sxth	r2, r2
 8011de4:	b20d      	sxth	r5, r1
 8011de6:	ebae 0202 	sub.w	r2, lr, r2
 8011dea:	436f      	muls	r7, r5
 8011dec:	4372      	muls	r2, r6
 8011dee:	4297      	cmp	r7, r2
 8011df0:	db09      	blt.n	8011e06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
 8011df2:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 8011df6:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 8011dfa:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8011dfe:	449c      	add	ip, r3
 8011e00:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8011e04:	e684      	b.n	8011b10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8011e06:	4421      	add	r1, r4
 8011e08:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 8011e0c:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 8011e10:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8011e14:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8011e18:	e67a      	b.n	8011b10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8011e1a:	9f04      	ldr	r7, [sp, #16]
 8011e1c:	42b8      	cmp	r0, r7
 8011e1e:	da27      	bge.n	8011e70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
 8011e20:	9902      	ldr	r1, [sp, #8]
 8011e22:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 8011e26:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8011e2a:	eb05 010e 	add.w	r1, r5, lr
 8011e2e:	fa1f f881 	uxth.w	r8, r1
 8011e32:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 8011e36:	4411      	add	r1, r2
 8011e38:	eba1 0108 	sub.w	r1, r1, r8
 8011e3c:	b289      	uxth	r1, r1
 8011e3e:	fa0f f988 	sxth.w	r9, r8
 8011e42:	eba2 020e 	sub.w	r2, r2, lr
 8011e46:	fa0f f881 	sxth.w	r8, r1
 8011e4a:	1a3f      	subs	r7, r7, r0
 8011e4c:	4372      	muls	r2, r6
 8011e4e:	fb08 f707 	mul.w	r7, r8, r7
 8011e52:	42ba      	cmp	r2, r7
 8011e54:	dc06      	bgt.n	8011e64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
 8011e56:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 8011e5a:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 8011e5e:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 8011e62:	e7ca      	b.n	8011dfa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 8011e64:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 8011e68:	4429      	add	r1, r5
 8011e6a:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8011e6e:	e64f      	b.n	8011b10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8011e70:	9805      	ldr	r0, [sp, #20]
 8011e72:	ebaa 0000 	sub.w	r0, sl, r0
 8011e76:	b280      	uxth	r0, r0
 8011e78:	2d06      	cmp	r5, #6
 8011e7a:	fa0f fe80 	sxth.w	lr, r0
 8011e7e:	d817      	bhi.n	8011eb0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
 8011e80:	9b04      	ldr	r3, [sp, #16]
 8011e82:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 8011e86:	1c6b      	adds	r3, r5, #1
 8011e88:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 8011e8c:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 8011e90:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8011e94:	9b01      	ldr	r3, [sp, #4]
 8011e96:	9801      	ldr	r0, [sp, #4]
 8011e98:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8011e9c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8011ea0:	805a      	strh	r2, [r3, #2]
 8011ea2:	809e      	strh	r6, [r3, #4]
 8011ea4:	80d9      	strh	r1, [r3, #6]
 8011ea6:	9b02      	ldr	r3, [sp, #8]
 8011ea8:	3b01      	subs	r3, #1
 8011eaa:	9302      	str	r3, [sp, #8]
 8011eac:	3c08      	subs	r4, #8
 8011eae:	e747      	b.n	8011d40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
 8011eb0:	9a02      	ldr	r2, [sp, #8]
 8011eb2:	45b6      	cmp	lr, r6
 8011eb4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8011eb8:	db0d      	blt.n	8011ed6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
 8011eba:	449c      	add	ip, r3
 8011ebc:	fa1f fc8c 	uxth.w	ip, ip
 8011ec0:	445a      	add	r2, fp
 8011ec2:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8011ec6:	448c      	add	ip, r1
 8011ec8:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8011ecc:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 8011ed0:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 8011ed4:	e61c      	b.n	8011b10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8011ed6:	445a      	add	r2, fp
 8011ed8:	4484      	add	ip, r0
 8011eda:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 8011ede:	e78f      	b.n	8011e00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 8011ee0:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 8011ee4:	fa1f f18e 	uxth.w	r1, lr
 8011ee8:	eb01 0806 	add.w	r8, r1, r6
 8011eec:	b293      	uxth	r3, r2
 8011eee:	fa1f f888 	uxth.w	r8, r8
 8011ef2:	9306      	str	r3, [sp, #24]
 8011ef4:	fa0f f388 	sxth.w	r3, r8
 8011ef8:	9307      	str	r3, [sp, #28]
 8011efa:	9f06      	ldr	r7, [sp, #24]
 8011efc:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8011f00:	443b      	add	r3, r7
 8011f02:	b29b      	uxth	r3, r3
 8011f04:	4596      	cmp	lr, r2
 8011f06:	9308      	str	r3, [sp, #32]
 8011f08:	da24      	bge.n	8011f54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 8011f0a:	9905      	ldr	r1, [sp, #20]
 8011f0c:	eba3 0308 	sub.w	r3, r3, r8
 8011f10:	ebaa 0401 	sub.w	r4, sl, r1
 8011f14:	b2a4      	uxth	r4, r4
 8011f16:	b29b      	uxth	r3, r3
 8011f18:	b225      	sxth	r5, r4
 8011f1a:	b219      	sxth	r1, r3
 8011f1c:	eba2 020e 	sub.w	r2, r2, lr
 8011f20:	eba9 0000 	sub.w	r0, r9, r0
 8011f24:	436a      	muls	r2, r5
 8011f26:	4348      	muls	r0, r1
 8011f28:	4282      	cmp	r2, r0
 8011f2a:	9a02      	ldr	r2, [sp, #8]
 8011f2c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8011f30:	445a      	add	r2, fp
 8011f32:	dc06      	bgt.n	8011f42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 8011f34:	9b07      	ldr	r3, [sp, #28]
 8011f36:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 8011f3a:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 8011f3e:	44a4      	add	ip, r4
 8011f40:	e75e      	b.n	8011e00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 8011f42:	9904      	ldr	r1, [sp, #16]
 8011f44:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 8011f48:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 8011f4c:	4433      	add	r3, r6
 8011f4e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8011f52:	e5dd      	b.n	8011b10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8011f54:	9f06      	ldr	r7, [sp, #24]
 8011f56:	9b04      	ldr	r3, [sp, #16]
 8011f58:	1bc9      	subs	r1, r1, r7
 8011f5a:	fa0f f78a 	sxth.w	r7, sl
 8011f5e:	b289      	uxth	r1, r1
 8011f60:	429f      	cmp	r7, r3
 8011f62:	fa0f fe81 	sxth.w	lr, r1
 8011f66:	dd23      	ble.n	8011fb0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
 8011f68:	9a05      	ldr	r2, [sp, #20]
 8011f6a:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011f6e:	9d07      	ldr	r5, [sp, #28]
 8011f70:	ebaa 0202 	sub.w	r2, sl, r2
 8011f74:	b292      	uxth	r2, r2
 8011f76:	eba5 0a03 	sub.w	sl, r5, r3
 8011f7a:	b214      	sxth	r4, r2
 8011f7c:	eba9 0000 	sub.w	r0, r9, r0
 8011f80:	9b02      	ldr	r3, [sp, #8]
 8011f82:	fb0e f000 	mul.w	r0, lr, r0
 8011f86:	fb04 fa0a 	mul.w	sl, r4, sl
 8011f8a:	00db      	lsls	r3, r3, #3
 8011f8c:	4550      	cmp	r0, sl
 8011f8e:	445b      	add	r3, fp
 8011f90:	db03      	blt.n	8011f9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 8011f92:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 8011f96:	4494      	add	ip, r2
 8011f98:	e732      	b.n	8011e00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 8011f9a:	9a04      	ldr	r2, [sp, #16]
 8011f9c:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 8011fa0:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 8011fa4:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 8011fa8:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8011fac:	4431      	add	r1, r6
 8011fae:	e75c      	b.n	8011e6a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
 8011fb0:	9b08      	ldr	r3, [sp, #32]
 8011fb2:	eba3 0308 	sub.w	r3, r3, r8
 8011fb6:	b29b      	uxth	r3, r3
 8011fb8:	2d06      	cmp	r5, #6
 8011fba:	b218      	sxth	r0, r3
 8011fbc:	d813      	bhi.n	8011fe6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
 8011fbe:	9b07      	ldr	r3, [sp, #28]
 8011fc0:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 8011fc4:	1c6b      	adds	r3, r5, #1
 8011fc6:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 8011fca:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8011fce:	9b01      	ldr	r3, [sp, #4]
 8011fd0:	9901      	ldr	r1, [sp, #4]
 8011fd2:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8011fd6:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8011fda:	805a      	strh	r2, [r3, #2]
 8011fdc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8011fde:	809a      	strh	r2, [r3, #4]
 8011fe0:	f8a3 e006 	strh.w	lr, [r3, #6]
 8011fe4:	e75f      	b.n	8011ea6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 8011fe6:	9c02      	ldr	r4, [sp, #8]
 8011fe8:	4570      	cmp	r0, lr
 8011fea:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8011fee:	db0d      	blt.n	801200c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
 8011ff0:	4431      	add	r1, r6
 8011ff2:	9b06      	ldr	r3, [sp, #24]
 8011ff4:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8011ff8:	b289      	uxth	r1, r1
 8011ffa:	445c      	add	r4, fp
 8011ffc:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8012000:	4419      	add	r1, r3
 8012002:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 8012006:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 801200a:	e581      	b.n	8011b10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801200c:	445c      	add	r4, fp
 801200e:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 8012012:	e79b      	b.n	8011f4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 8012014:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8012018:	1e65      	subs	r5, r4, #1
 801201a:	b2ad      	uxth	r5, r5
 801201c:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8012020:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8012024:	42b5      	cmp	r5, r6
 8012026:	d044      	beq.n	80120b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
 8012028:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801202c:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 8012030:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8012034:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 8012038:	4282      	cmp	r2, r0
 801203a:	d11f      	bne.n	801207c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 801203c:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 8012040:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8012044:	459c      	cmp	ip, r3
 8012046:	d119      	bne.n	801207c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 8012048:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 801204c:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8012050:	19d8      	adds	r0, r3, r7
 8012052:	b200      	sxth	r0, r0
 8012054:	4288      	cmp	r0, r1
 8012056:	d109      	bne.n	801206c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8012058:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 801205c:	4413      	add	r3, r2
 801205e:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8012062:	4629      	mov	r1, r5
 8012064:	9801      	ldr	r0, [sp, #4]
 8012066:	f7ff fd23 	bl	8011ab0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801206a:	e003      	b.n	8012074 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 801206c:	4411      	add	r1, r2
 801206e:	b209      	sxth	r1, r1
 8012070:	42b9      	cmp	r1, r7
 8012072:	d0f3      	beq.n	801205c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8012074:	3d01      	subs	r5, #1
 8012076:	b2ad      	uxth	r5, r5
 8012078:	3c08      	subs	r4, #8
 801207a:	e7d3      	b.n	8012024 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
 801207c:	42b9      	cmp	r1, r7
 801207e:	d1f9      	bne.n	8012074 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 8012080:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 8012084:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8012088:	4299      	cmp	r1, r3
 801208a:	d1f3      	bne.n	8012074 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 801208c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8012090:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8012094:	181f      	adds	r7, r3, r0
 8012096:	b23f      	sxth	r7, r7
 8012098:	42ba      	cmp	r2, r7
 801209a:	d105      	bne.n	80120a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
 801209c:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 80120a0:	440b      	add	r3, r1
 80120a2:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80120a6:	e7dc      	b.n	8012062 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
 80120a8:	440a      	add	r2, r1
 80120aa:	b212      	sxth	r2, r2
 80120ac:	4290      	cmp	r0, r2
 80120ae:	d1e1      	bne.n	8012074 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 80120b0:	e7f6      	b.n	80120a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
 80120b2:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 80120b6:	2e07      	cmp	r6, #7
 80120b8:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80120bc:	d812      	bhi.n	80120e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
 80120be:	1c75      	adds	r5, r6, #1
 80120c0:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 80120c4:	9d01      	ldr	r5, [sp, #4]
 80120c6:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 80120ca:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 80120ce:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80120d2:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 80120d6:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80120da:	442c      	add	r4, r5
 80120dc:	8061      	strh	r1, [r4, #2]
 80120de:	80a2      	strh	r2, [r4, #4]
 80120e0:	80e3      	strh	r3, [r4, #6]
 80120e2:	e57f      	b.n	8011be4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 80120e4:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 80120e8:	3e01      	subs	r6, #1
 80120ea:	445c      	add	r4, fp
 80120ec:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 80120f0:	f04f 37ff 	mov.w	r7, #4294967295
 80120f4:	2500      	movs	r5, #0
 80120f6:	9305      	str	r3, [sp, #20]
 80120f8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 80120fc:	9302      	str	r3, [sp, #8]
 80120fe:	1e72      	subs	r2, r6, #1
 8012100:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8012104:	9304      	str	r3, [sp, #16]
 8012106:	4691      	mov	r9, r2
 8012108:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 801210c:	f1b9 3fff 	cmp.w	r9, #4294967295
 8012110:	bf14      	ite	ne
 8012112:	9905      	ldrne	r1, [sp, #20]
 8012114:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8012118:	6818      	ldr	r0, [r3, #0]
 801211a:	9207      	str	r2, [sp, #28]
 801211c:	bf18      	it	ne
 801211e:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8012122:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8012126:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801212a:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801212e:	9306      	str	r3, [sp, #24]
 8012130:	fb18 f801 	smulbb	r8, r8, r1
 8012134:	6859      	ldr	r1, [r3, #4]
 8012136:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801213a:	4671      	mov	r1, lr
 801213c:	a80c      	add	r0, sp, #48	@ 0x30
 801213e:	f7ff fb65 	bl	801180c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8012142:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8012146:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 801214a:	9b04      	ldr	r3, [sp, #16]
 801214c:	9a02      	ldr	r2, [sp, #8]
 801214e:	fb10 f001 	smulbb	r0, r0, r1
 8012152:	fb02 8803 	mla	r8, r2, r3, r8
 8012156:	eba0 0108 	sub.w	r1, r0, r8
 801215a:	f04f 0c08 	mov.w	ip, #8
 801215e:	fb90 f0fc 	sdiv	r0, r0, ip
 8012162:	4288      	cmp	r0, r1
 8012164:	dc20      	bgt.n	80121a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 8012166:	4551      	cmp	r1, sl
 8012168:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 801216c:	da03      	bge.n	8012176 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69e>
 801216e:	b1d9      	cbz	r1, 80121a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 8012170:	468a      	mov	sl, r1
 8012172:	464f      	mov	r7, r9
 8012174:	4635      	mov	r5, r6
 8012176:	f109 39ff 	add.w	r9, r9, #4294967295
 801217a:	f119 0f02 	cmn.w	r9, #2
 801217e:	d1c5      	bne.n	801210c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
 8012180:	4616      	mov	r6, r2
 8012182:	3201      	adds	r2, #1
 8012184:	f1a4 0408 	sub.w	r4, r4, #8
 8012188:	d1b6      	bne.n	80120f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
 801218a:	9b01      	ldr	r3, [sp, #4]
 801218c:	b2ac      	uxth	r4, r5
 801218e:	00ed      	lsls	r5, r5, #3
 8012190:	1958      	adds	r0, r3, r5
 8012192:	1c7b      	adds	r3, r7, #1
 8012194:	d10b      	bne.n	80121ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d6>
 8012196:	4601      	mov	r1, r0
 8012198:	9803      	ldr	r0, [sp, #12]
 801219a:	f7ff fb37 	bl	801180c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801219e:	4621      	mov	r1, r4
 80121a0:	9801      	ldr	r0, [sp, #4]
 80121a2:	f7ff fc85 	bl	8011ab0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80121a6:	e4b3      	b.n	8011b10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 80121a8:	464f      	mov	r7, r9
 80121aa:	4635      	mov	r5, r6
 80121ac:	e7ed      	b.n	801218a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b2>
 80121ae:	9b01      	ldr	r3, [sp, #4]
 80121b0:	00ff      	lsls	r7, r7, #3
 80121b2:	19d9      	adds	r1, r3, r7
 80121b4:	f7ff fb2a 	bl	801180c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80121b8:	9b03      	ldr	r3, [sp, #12]
 80121ba:	cb03      	ldmia	r3!, {r0, r1}
 80121bc:	445f      	add	r7, fp
 80121be:	445d      	add	r5, fp
 80121c0:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 80121c4:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 80121c8:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80121cc:	9b03      	ldr	r3, [sp, #12]
 80121ce:	6869      	ldr	r1, [r5, #4]
 80121d0:	c303      	stmia	r3!, {r0, r1}
 80121d2:	e7e4      	b.n	801219e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>

080121d4 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80121d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80121d8:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 80121dc:	b0a1      	sub	sp, #132	@ 0x84
 80121de:	4604      	mov	r4, r0
 80121e0:	4630      	mov	r0, r6
 80121e2:	f7fa f82e 	bl	800c242 <_ZNK8touchgfx4Rect7isEmptyEv>
 80121e6:	4605      	mov	r5, r0
 80121e8:	b948      	cbnz	r0, 80121fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80121ea:	6823      	ldr	r3, [r4, #0]
 80121ec:	e896 0006 	ldmia.w	r6, {r1, r2}
 80121f0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80121f2:	4620      	mov	r0, r4
 80121f4:	4798      	blx	r3
 80121f6:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 80121fa:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 80121fe:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8012202:	2b00      	cmp	r3, #0
 8012204:	d149      	bne.n	801229a <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
 8012206:	4bb1      	ldr	r3, [pc, #708]	@ (80124cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 8012208:	681b      	ldr	r3, [r3, #0]
 801220a:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
 801220e:	1ebb      	subs	r3, r7, #2
 8012210:	425f      	negs	r7, r3
 8012212:	415f      	adcs	r7, r3
 8012214:	4bae      	ldr	r3, [pc, #696]	@ (80124d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
 8012216:	681b      	ldr	r3, [r3, #0]
 8012218:	2b00      	cmp	r3, #0
 801221a:	d040      	beq.n	801229e <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 801221c:	4dad      	ldr	r5, [pc, #692]	@ (80124d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
 801221e:	4628      	mov	r0, r5
 8012220:	f7fa f80f 	bl	800c242 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012224:	4606      	mov	r6, r0
 8012226:	2800      	cmp	r0, #0
 8012228:	d139      	bne.n	801229e <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 801222a:	4628      	mov	r0, r5
 801222c:	f7ff f982 	bl	8011534 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8012230:	6823      	ldr	r3, [r4, #0]
 8012232:	6829      	ldr	r1, [r5, #0]
 8012234:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8012236:	686a      	ldr	r2, [r5, #4]
 8012238:	4620      	mov	r0, r4
 801223a:	4798      	blx	r3
 801223c:	802e      	strh	r6, [r5, #0]
 801223e:	806e      	strh	r6, [r5, #2]
 8012240:	80ae      	strh	r6, [r5, #4]
 8012242:	80ee      	strh	r6, [r5, #6]
 8012244:	af0f      	add	r7, sp, #60	@ 0x3c
 8012246:	4ea4      	ldr	r6, [pc, #656]	@ (80124d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
 8012248:	4638      	mov	r0, r7
 801224a:	f7ff fbd9 	bl	8011a00 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801224e:	8835      	ldrh	r5, [r6, #0]
 8012250:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
 8012254:	462b      	mov	r3, r5
 8012256:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 801225a:	4563      	cmp	r3, ip
 801225c:	d224      	bcs.n	80122a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 801225e:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
 8012262:	2907      	cmp	r1, #7
 8012264:	d816      	bhi.n	8012294 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8012266:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 801226a:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 801226e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8012272:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
 8012276:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
 801227a:	1c4a      	adds	r2, r1, #1
 801227c:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
 8012280:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
 8012284:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
 8012288:	f8a2 a002 	strh.w	sl, [r2, #2]
 801228c:	f8a2 8004 	strh.w	r8, [r2, #4]
 8012290:	f8a2 e006 	strh.w	lr, [r2, #6]
 8012294:	3301      	adds	r3, #1
 8012296:	b29b      	uxth	r3, r3
 8012298:	e7df      	b.n	801225a <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 801229a:	2701      	movs	r7, #1
 801229c:	e7ba      	b.n	8012214 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
 801229e:	2f00      	cmp	r7, #0
 80122a0:	d1d0      	bne.n	8012244 <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
 80122a2:	b021      	add	sp, #132	@ 0x84
 80122a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80122a8:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 80122ac:	42ab      	cmp	r3, r5
 80122ae:	d90c      	bls.n	80122ca <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
 80122b0:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 80122b4:	6822      	ldr	r2, [r4, #0]
 80122b6:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 80122ba:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 80122bc:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 80122c0:	4620      	mov	r0, r4
 80122c2:	3501      	adds	r5, #1
 80122c4:	47b8      	blx	r7
 80122c6:	b2ad      	uxth	r5, r5
 80122c8:	e7ee      	b.n	80122a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 80122ca:	4d80      	ldr	r5, [pc, #512]	@ (80124cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 80122cc:	6828      	ldr	r0, [r5, #0]
 80122ce:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 80122d2:	2b01      	cmp	r3, #1
 80122d4:	f040 813b 	bne.w	801254e <_ZN8touchgfx11Application15drawCachedAreasEv+0x37a>
 80122d8:	4a80      	ldr	r2, [pc, #512]	@ (80124dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
 80122da:	8833      	ldrh	r3, [r6, #0]
 80122dc:	7812      	ldrb	r2, [r2, #0]
 80122de:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
 80122e2:	2a01      	cmp	r2, #1
 80122e4:	d014      	beq.n	8012310 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80122e6:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
 80122ea:	32ae      	adds	r2, #174	@ 0xae
 80122ec:	f04f 0900 	mov.w	r9, #0
 80122f0:	4283      	cmp	r3, r0
 80122f2:	f102 0208 	add.w	r2, r2, #8
 80122f6:	f280 8082 	bge.w	80123fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 80122fa:	f832 1c04 	ldrh.w	r1, [r2, #-4]
 80122fe:	f832 7c08 	ldrh.w	r7, [r2, #-8]
 8012302:	4439      	add	r1, r7
 8012304:	b209      	sxth	r1, r1
 8012306:	4589      	cmp	r9, r1
 8012308:	bfb8      	it	lt
 801230a:	4689      	movlt	r9, r1
 801230c:	3301      	adds	r3, #1
 801230e:	e7ef      	b.n	80122f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
 8012310:	4f73      	ldr	r7, [pc, #460]	@ (80124e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
 8012312:	883a      	ldrh	r2, [r7, #0]
 8012314:	4693      	mov	fp, r2
 8012316:	4283      	cmp	r3, r0
 8012318:	da08      	bge.n	801232c <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
 801231a:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
 801231e:	3301      	adds	r3, #1
 8012320:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
 8012324:	458b      	cmp	fp, r1
 8012326:	bfa8      	it	ge
 8012328:	468b      	movge	fp, r1
 801232a:	e7f4      	b.n	8012316 <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
 801232c:	2300      	movs	r3, #0
 801232e:	2a0f      	cmp	r2, #15
 8012330:	f8df 91b0 	ldr.w	r9, [pc, #432]	@ 80124e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
 8012334:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8012338:	bf8c      	ite	hi
 801233a:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
 801233e:	f04f 0801 	movls.w	r8, #1
 8012342:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8012346:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801234a:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801234e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8012352:	6828      	ldr	r0, [r5, #0]
 8012354:	455b      	cmp	r3, fp
 8012356:	f340 80c7 	ble.w	80124e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 801235a:	6803      	ldr	r3, [r0, #0]
 801235c:	f8b7 a000 	ldrh.w	sl, [r7]
 8012360:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8012364:	4798      	blx	r3
 8012366:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801236a:	682b      	ldr	r3, [r5, #0]
 801236c:	ebaa 0000 	sub.w	r0, sl, r0
 8012370:	b280      	uxth	r0, r0
 8012372:	ebac 0e08 	sub.w	lr, ip, r8
 8012376:	4570      	cmp	r0, lr
 8012378:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
 801237c:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
 8012380:	dd05      	ble.n	801238e <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 8012382:	4558      	cmp	r0, fp
 8012384:	dd03      	ble.n	801238e <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 8012386:	b901      	cbnz	r1, 801238a <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8012388:	b392      	cbz	r2, 80123f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x21c>
 801238a:	4658      	mov	r0, fp
 801238c:	e006      	b.n	801239c <_ZN8touchgfx11Application15drawCachedAreasEv+0x1c8>
 801238e:	2900      	cmp	r1, #0
 8012390:	d1fb      	bne.n	801238a <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8012392:	2a00      	cmp	r2, #0
 8012394:	d1f9      	bne.n	801238a <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8012396:	4558      	cmp	r0, fp
 8012398:	bfb8      	it	lt
 801239a:	4658      	movlt	r0, fp
 801239c:	f9b9 3000 	ldrsh.w	r3, [r9]
 80123a0:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
 80123a4:	2200      	movs	r2, #0
 80123a6:	ebac 0000 	sub.w	r0, ip, r0
 80123aa:	f8b6 a000 	ldrh.w	sl, [r6]
 80123ae:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80123b2:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 80123b6:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80123ba:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80123be:	4553      	cmp	r3, sl
 80123c0:	ddc5      	ble.n	801234e <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 80123c2:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 80123c6:	ab0d      	add	r3, sp, #52	@ 0x34
 80123c8:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80123cc:	6851      	ldr	r1, [r2, #4]
 80123ce:	c303      	stmia	r3!, {r0, r1}
 80123d0:	a80d      	add	r0, sp, #52	@ 0x34
 80123d2:	a90b      	add	r1, sp, #44	@ 0x2c
 80123d4:	f7f9 fef2 	bl	800c1bc <_ZN8touchgfx4RectaNERKS0_>
 80123d8:	a80d      	add	r0, sp, #52	@ 0x34
 80123da:	f7f9 ff32 	bl	800c242 <_ZNK8touchgfx4Rect7isEmptyEv>
 80123de:	b920      	cbnz	r0, 80123ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x216>
 80123e0:	6823      	ldr	r3, [r4, #0]
 80123e2:	a90d      	add	r1, sp, #52	@ 0x34
 80123e4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80123e6:	4620      	mov	r0, r4
 80123e8:	4798      	blx	r3
 80123ea:	f10a 0a01 	add.w	sl, sl, #1
 80123ee:	e7e4      	b.n	80123ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e6>
 80123f0:	681a      	ldr	r2, [r3, #0]
 80123f2:	2101      	movs	r1, #1
 80123f4:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
 80123f8:	4618      	mov	r0, r3
 80123fa:	4790      	blx	r2
 80123fc:	e7a7      	b.n	801234e <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 80123fe:	4b39      	ldr	r3, [pc, #228]	@ (80124e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
 8012400:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 80124e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>
 8012404:	881f      	ldrh	r7, [r3, #0]
 8012406:	2300      	movs	r3, #0
 8012408:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
 801240c:	2f0f      	cmp	r7, #15
 801240e:	bf8c      	ite	hi
 8012410:	08ff      	lsrhi	r7, r7, #3
 8012412:	2701      	movls	r7, #1
 8012414:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8012418:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
 801241c:	6828      	ldr	r0, [r5, #0]
 801241e:	4413      	add	r3, r2
 8012420:	b21b      	sxth	r3, r3
 8012422:	454b      	cmp	r3, r9
 8012424:	da60      	bge.n	80124e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 8012426:	6803      	ldr	r3, [r0, #0]
 8012428:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801242c:	4798      	blx	r3
 801242e:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
 8012432:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8012436:	682a      	ldr	r2, [r5, #0]
 8012438:	4473      	add	r3, lr
 801243a:	b21b      	sxth	r3, r3
 801243c:	eb03 0e07 	add.w	lr, r3, r7
 8012440:	4570      	cmp	r0, lr
 8012442:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
 8012446:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
 801244a:	da0d      	bge.n	8012468 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 801244c:	4548      	cmp	r0, r9
 801244e:	da0b      	bge.n	8012468 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 8012450:	f1bc 0f00 	cmp.w	ip, #0
 8012454:	d138      	bne.n	80124c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 8012456:	2900      	cmp	r1, #0
 8012458:	d136      	bne.n	80124c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 801245a:	6813      	ldr	r3, [r2, #0]
 801245c:	2101      	movs	r1, #1
 801245e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8012462:	4610      	mov	r0, r2
 8012464:	4798      	blx	r3
 8012466:	e7d5      	b.n	8012414 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8012468:	f1bc 0f00 	cmp.w	ip, #0
 801246c:	d12c      	bne.n	80124c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 801246e:	bb59      	cbnz	r1, 80124c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 8012470:	4548      	cmp	r0, r9
 8012472:	bfa8      	it	ge
 8012474:	4648      	movge	r0, r9
 8012476:	f9b8 2000 	ldrsh.w	r2, [r8]
 801247a:	f8b6 a000 	ldrh.w	sl, [r6]
 801247e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8012482:	2100      	movs	r1, #0
 8012484:	1ac0      	subs	r0, r0, r3
 8012486:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 801248a:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801248e:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 8012492:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8012496:	4553      	cmp	r3, sl
 8012498:	ddbc      	ble.n	8012414 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 801249a:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 801249e:	ab0d      	add	r3, sp, #52	@ 0x34
 80124a0:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80124a4:	6851      	ldr	r1, [r2, #4]
 80124a6:	c303      	stmia	r3!, {r0, r1}
 80124a8:	a80d      	add	r0, sp, #52	@ 0x34
 80124aa:	a90b      	add	r1, sp, #44	@ 0x2c
 80124ac:	f7f9 fe86 	bl	800c1bc <_ZN8touchgfx4RectaNERKS0_>
 80124b0:	a80d      	add	r0, sp, #52	@ 0x34
 80124b2:	f7f9 fec6 	bl	800c242 <_ZNK8touchgfx4Rect7isEmptyEv>
 80124b6:	b920      	cbnz	r0, 80124c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ee>
 80124b8:	6823      	ldr	r3, [r4, #0]
 80124ba:	a90d      	add	r1, sp, #52	@ 0x34
 80124bc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80124be:	4620      	mov	r0, r4
 80124c0:	4798      	blx	r3
 80124c2:	f10a 0a01 	add.w	sl, sl, #1
 80124c6:	e7e4      	b.n	8012492 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2be>
 80124c8:	4648      	mov	r0, r9
 80124ca:	e7d4      	b.n	8012476 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a2>
 80124cc:	20015238 	.word	0x20015238
 80124d0:	20015278 	.word	0x20015278
 80124d4:	20015284 	.word	0x20015284
 80124d8:	20000084 	.word	0x20000084
 80124dc:	20015230 	.word	0x20015230
 80124e0:	2001522c 	.word	0x2001522c
 80124e4:	2001522e 	.word	0x2001522e
 80124e8:	6828      	ldr	r0, [r5, #0]
 80124ea:	6803      	ldr	r3, [r0, #0]
 80124ec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80124ee:	4798      	blx	r3
 80124f0:	4ba5      	ldr	r3, [pc, #660]	@ (8012788 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
 80124f2:	781b      	ldrb	r3, [r3, #0]
 80124f4:	2b00      	cmp	r3, #0
 80124f6:	f43f aed4 	beq.w	80122a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 80124fa:	2300      	movs	r3, #0
 80124fc:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 8012500:	4ba2      	ldr	r3, [pc, #648]	@ (801278c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
 8012502:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
 8012506:	881b      	ldrh	r3, [r3, #0]
 8012508:	a80f      	add	r0, sp, #60	@ 0x3c
 801250a:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
 801250e:	42b3      	cmp	r3, r6
 8012510:	f4bf aec7 	bcs.w	80122a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 8012514:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 8012518:	2907      	cmp	r1, #7
 801251a:	d815      	bhi.n	8012548 <_ZN8touchgfx11Application15drawCachedAreasEv+0x374>
 801251c:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8012520:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 8012524:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8012528:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 801252c:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8012530:	1c4a      	adds	r2, r1, #1
 8012532:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 8012536:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
 801253a:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
 801253e:	f8a2 e002 	strh.w	lr, [r2, #2]
 8012542:	f8a2 c004 	strh.w	ip, [r2, #4]
 8012546:	80d7      	strh	r7, [r2, #6]
 8012548:	3301      	adds	r3, #1
 801254a:	b29b      	uxth	r3, r3
 801254c:	e7df      	b.n	801250e <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 801254e:	2b02      	cmp	r3, #2
 8012550:	f040 80d1 	bne.w	80126f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8012554:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8012558:	9308      	str	r3, [sp, #32]
 801255a:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
 801255e:	9307      	str	r3, [sp, #28]
 8012560:	6803      	ldr	r3, [r0, #0]
 8012562:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
 8012566:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801256a:	4798      	blx	r3
 801256c:	4b88      	ldr	r3, [pc, #544]	@ (8012790 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
 801256e:	881b      	ldrh	r3, [r3, #0]
 8012570:	9302      	str	r3, [sp, #8]
 8012572:	4b88      	ldr	r3, [pc, #544]	@ (8012794 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
 8012574:	881e      	ldrh	r6, [r3, #0]
 8012576:	4b88      	ldr	r3, [pc, #544]	@ (8012798 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8012578:	781b      	ldrb	r3, [r3, #0]
 801257a:	f10b 37ff 	add.w	r7, fp, #4294967295
 801257e:	2b01      	cmp	r3, #1
 8012580:	bf1c      	itt	ne
 8012582:	9b02      	ldrne	r3, [sp, #8]
 8012584:	9602      	strne	r6, [sp, #8]
 8012586:	b2bf      	uxth	r7, r7
 8012588:	fa0f f887 	sxth.w	r8, r7
 801258c:	4682      	mov	sl, r0
 801258e:	f04f 0000 	mov.w	r0, #0
 8012592:	bf18      	it	ne
 8012594:	461e      	movne	r6, r3
 8012596:	f7ef f9bf 	bl	8001918 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801259a:	fb96 fbfb 	sdiv	fp, r6, fp
 801259e:	fb0b f808 	mul.w	r8, fp, r8
 80125a2:	45c2      	cmp	sl, r8
 80125a4:	da0c      	bge.n	80125c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
 80125a6:	6828      	ldr	r0, [r5, #0]
 80125a8:	6803      	ldr	r3, [r0, #0]
 80125aa:	210a      	movs	r1, #10
 80125ac:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 80125b0:	4798      	blx	r3
 80125b2:	6828      	ldr	r0, [r5, #0]
 80125b4:	6803      	ldr	r3, [r0, #0]
 80125b6:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 80125ba:	4798      	blx	r3
 80125bc:	4682      	mov	sl, r0
 80125be:	e7f0      	b.n	80125a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
 80125c0:	2000      	movs	r0, #0
 80125c2:	f7ef f9d3 	bl	800196c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80125c6:	fa1f f38b 	uxth.w	r3, fp
 80125ca:	fb17 f703 	smulbb	r7, r7, r3
 80125ce:	9304      	str	r3, [sp, #16]
 80125d0:	b2bb      	uxth	r3, r7
 80125d2:	9305      	str	r3, [sp, #20]
 80125d4:	f04f 0800 	mov.w	r8, #0
 80125d8:	0973      	lsrs	r3, r6, #5
 80125da:	4f70      	ldr	r7, [pc, #448]	@ (801279c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
 80125dc:	9306      	str	r3, [sp, #24]
 80125de:	4645      	mov	r5, r8
 80125e0:	42b5      	cmp	r5, r6
 80125e2:	d085      	beq.n	80124f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80125e4:	6838      	ldr	r0, [r7, #0]
 80125e6:	6803      	ldr	r3, [r0, #0]
 80125e8:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 80125ec:	4798      	blx	r3
 80125ee:	4582      	cmp	sl, r0
 80125f0:	4681      	mov	r9, r0
 80125f2:	d907      	bls.n	8012604 <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
 80125f4:	f1b8 0f00 	cmp.w	r8, #0
 80125f8:	d007      	beq.n	801260a <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
 80125fa:	6838      	ldr	r0, [r7, #0]
 80125fc:	6803      	ldr	r3, [r0, #0]
 80125fe:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 8012602:	e774      	b.n	80124ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 8012604:	f1b8 0f00 	cmp.w	r8, #0
 8012608:	d003      	beq.n	8012612 <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
 801260a:	454d      	cmp	r5, r9
 801260c:	d3f5      	bcc.n	80125fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
 801260e:	f04f 0801 	mov.w	r8, #1
 8012612:	9a04      	ldr	r2, [sp, #16]
 8012614:	fb95 f3fb 	sdiv	r3, r5, fp
 8012618:	9303      	str	r3, [sp, #12]
 801261a:	3301      	adds	r3, #1
 801261c:	fb13 f302 	smulbb	r3, r3, r2
 8012620:	b299      	uxth	r1, r3
 8012622:	f1b8 0f00 	cmp.w	r8, #0
 8012626:	d04e      	beq.n	80126c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f2>
 8012628:	eb09 030b 	add.w	r3, r9, fp
 801262c:	42b3      	cmp	r3, r6
 801262e:	bfa8      	it	ge
 8012630:	4633      	movge	r3, r6
 8012632:	9807      	ldr	r0, [sp, #28]
 8012634:	b29b      	uxth	r3, r3
 8012636:	428b      	cmp	r3, r1
 8012638:	bf94      	ite	ls
 801263a:	ebc5 0203 	rsbls	r2, r5, r3
 801263e:	ebc5 0201 	rsbhi	r2, r5, r1
 8012642:	4282      	cmp	r2, r0
 8012644:	bfa8      	it	ge
 8012646:	4602      	movge	r2, r0
 8012648:	9808      	ldr	r0, [sp, #32]
 801264a:	fa1f fa82 	uxth.w	sl, r2
 801264e:	4582      	cmp	sl, r0
 8012650:	d205      	bcs.n	801265e <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 8012652:	fa15 f082 	uxtah	r0, r5, r2
 8012656:	4286      	cmp	r6, r0
 8012658:	d001      	beq.n	801265e <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 801265a:	4299      	cmp	r1, r3
 801265c:	d240      	bcs.n	80126e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x50c>
 801265e:	2001      	movs	r0, #1
 8012660:	9209      	str	r2, [sp, #36]	@ 0x24
 8012662:	f7ef f959 	bl	8001918 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8012666:	6838      	ldr	r0, [r7, #0]
 8012668:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 801266c:	6803      	ldr	r3, [r0, #0]
 801266e:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8012672:	4798      	blx	r3
 8012674:	4b48      	ldr	r3, [pc, #288]	@ (8012798 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8012676:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8012678:	781b      	ldrb	r3, [r3, #0]
 801267a:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801267e:	2b01      	cmp	r3, #1
 8012680:	b212      	sxth	r2, r2
 8012682:	f04f 0000 	mov.w	r0, #0
 8012686:	d122      	bne.n	80126ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fa>
 8012688:	1b73      	subs	r3, r6, r5
 801268a:	eba3 030a 	sub.w	r3, r3, sl
 801268e:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8012692:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
 8012696:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801269a:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
 801269e:	6823      	ldr	r3, [r4, #0]
 80126a0:	a90d      	add	r1, sp, #52	@ 0x34
 80126a2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80126a4:	4620      	mov	r0, r4
 80126a6:	4798      	blx	r3
 80126a8:	6838      	ldr	r0, [r7, #0]
 80126aa:	9b03      	ldr	r3, [sp, #12]
 80126ac:	4259      	negs	r1, r3
 80126ae:	6803      	ldr	r3, [r0, #0]
 80126b0:	b209      	sxth	r1, r1
 80126b2:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80126b6:	4798      	blx	r3
 80126b8:	4455      	add	r5, sl
 80126ba:	2001      	movs	r0, #1
 80126bc:	b2ad      	uxth	r5, r5
 80126be:	f7ef f955 	bl	800196c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80126c2:	46ca      	mov	sl, r9
 80126c4:	e78c      	b.n	80125e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
 80126c6:	9b05      	ldr	r3, [sp, #20]
 80126c8:	eba9 0303 	sub.w	r3, r9, r3
 80126cc:	e7b1      	b.n	8012632 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 80126ce:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 80126d2:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
 80126d6:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
 80126da:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 80126de:	e7de      	b.n	801269e <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ca>
 80126e0:	6838      	ldr	r0, [r7, #0]
 80126e2:	6803      	ldr	r3, [r0, #0]
 80126e4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80126e6:	4798      	blx	r3
 80126e8:	6838      	ldr	r0, [r7, #0]
 80126ea:	9906      	ldr	r1, [sp, #24]
 80126ec:	6803      	ldr	r3, [r0, #0]
 80126ee:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 80126f2:	4798      	blx	r3
 80126f4:	e7e5      	b.n	80126c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ee>
 80126f6:	2b03      	cmp	r3, #3
 80126f8:	f040 8130 	bne.w	801295c <_ZN8touchgfx11Application15drawCachedAreasEv+0x788>
 80126fc:	4b26      	ldr	r3, [pc, #152]	@ (8012798 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 80126fe:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
 8012702:	781b      	ldrb	r3, [r3, #0]
 8012704:	2b01      	cmp	r3, #1
 8012706:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 801270a:	f000 8093 	beq.w	8012834 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 801270e:	8832      	ldrh	r2, [r6, #0]
 8012710:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8012714:	3201      	adds	r2, #1
 8012716:	b292      	uxth	r2, r2
 8012718:	2900      	cmp	r1, #0
 801271a:	f43f aee9 	beq.w	80124f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801271e:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
 8012722:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
 8012726:	441d      	add	r5, r3
 8012728:	b22d      	sxth	r5, r5
 801272a:	4694      	mov	ip, r2
 801272c:	f04f 0800 	mov.w	r8, #0
 8012730:	fa1f f38c 	uxth.w	r3, ip
 8012734:	4299      	cmp	r1, r3
 8012736:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 801273a:	f240 80ba 	bls.w	80128b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6de>
 801273e:	4427      	add	r7, r4
 8012740:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8012744:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 8012748:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 801274c:	4283      	cmp	r3, r0
 801274e:	f340 809c 	ble.w	801288a <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b6>
 8012752:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
 8012756:	4405      	add	r5, r0
 8012758:	b22d      	sxth	r5, r5
 801275a:	429d      	cmp	r5, r3
 801275c:	bfa8      	it	ge
 801275e:	461d      	movge	r5, r3
 8012760:	46e0      	mov	r8, ip
 8012762:	f10c 0c01 	add.w	ip, ip, #1
 8012766:	e7e3      	b.n	8012730 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>
 8012768:	d10a      	bne.n	8012780 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5ac>
 801276a:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
 801276e:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 8012772:	4562      	cmp	r2, ip
 8012774:	bfb8      	it	lt
 8012776:	4662      	movlt	r2, ip
 8012778:	4288      	cmp	r0, r1
 801277a:	bfb8      	it	lt
 801277c:	4698      	movlt	r8, r3
 801277e:	e082      	b.n	8012886 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 8012780:	428a      	cmp	r2, r1
 8012782:	bfb8      	it	lt
 8012784:	460a      	movlt	r2, r1
 8012786:	e07e      	b.n	8012886 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 8012788:	20015236 	.word	0x20015236
 801278c:	20000084 	.word	0x20000084
 8012790:	2001522e 	.word	0x2001522e
 8012794:	2001522c 	.word	0x2001522c
 8012798:	20015230 	.word	0x20015230
 801279c:	20015238 	.word	0x20015238
 80127a0:	19e1      	adds	r1, r4, r7
 80127a2:	ab0d      	add	r3, sp, #52	@ 0x34
 80127a4:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80127a8:	6849      	ldr	r1, [r1, #4]
 80127aa:	c303      	stmia	r3!, {r0, r1}
 80127ac:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 80127b0:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 80127b4:	454b      	cmp	r3, r9
 80127b6:	bfb8      	it	lt
 80127b8:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
 80127bc:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 80127c0:	440b      	add	r3, r1
 80127c2:	1a9b      	subs	r3, r3, r2
 80127c4:	a80d      	add	r0, sp, #52	@ 0x34
 80127c6:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 80127ca:	f7fe fecd 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80127ce:	a80d      	add	r0, sp, #52	@ 0x34
 80127d0:	f7f9 fd37 	bl	800c242 <_ZNK8touchgfx4Rect7isEmptyEv>
 80127d4:	bb70      	cbnz	r0, 8012834 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 80127d6:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
 80127da:	6828      	ldr	r0, [r5, #0]
 80127dc:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 80127e0:	f8d0 e000 	ldr.w	lr, [r0]
 80127e4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 80127e8:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 80127ec:	45cc      	cmp	ip, r9
 80127ee:	bfd4      	ite	le
 80127f0:	fa1f fc8c 	uxthle.w	ip, ip
 80127f4:	fa1f fc89 	uxthgt.w	ip, r9
 80127f8:	f8cd c000 	str.w	ip, [sp]
 80127fc:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
 8012800:	47d8      	blx	fp
 8012802:	4683      	mov	fp, r0
 8012804:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8012808:	a80d      	add	r0, sp, #52	@ 0x34
 801280a:	f7fe fe93 	bl	8011534 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801280e:	6823      	ldr	r3, [r4, #0]
 8012810:	4427      	add	r7, r4
 8012812:	4620      	mov	r0, r4
 8012814:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8012816:	a90d      	add	r1, sp, #52	@ 0x34
 8012818:	4798      	blx	r3
 801281a:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
 801281e:	eba0 000b 	sub.w	r0, r0, fp
 8012822:	b200      	sxth	r0, r0
 8012824:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
 8012828:	b920      	cbnz	r0, 8012834 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 801282a:	fa1f f188 	uxth.w	r1, r8
 801282e:	4650      	mov	r0, sl
 8012830:	f7ff f93e 	bl	8011ab0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012834:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 8012838:	f1bb 0f00 	cmp.w	fp, #0
 801283c:	f43f ae58 	beq.w	80124f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8012840:	8833      	ldrh	r3, [r6, #0]
 8012842:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 8012846:	3301      	adds	r3, #1
 8012848:	b29b      	uxth	r3, r3
 801284a:	f04f 0800 	mov.w	r8, #0
 801284e:	b299      	uxth	r1, r3
 8012850:	458b      	cmp	fp, r1
 8012852:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8012856:	d9a3      	bls.n	80127a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
 8012858:	4427      	add	r7, r4
 801285a:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 801285e:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
 8012862:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
 8012866:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 801286a:	4408      	add	r0, r1
 801286c:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 8012870:	4461      	add	r1, ip
 8012872:	b200      	sxth	r0, r0
 8012874:	b209      	sxth	r1, r1
 8012876:	4288      	cmp	r0, r1
 8012878:	f6bf af76 	bge.w	8012768 <_ZN8touchgfx11Application15drawCachedAreasEv+0x594>
 801287c:	4584      	cmp	ip, r0
 801287e:	4662      	mov	r2, ip
 8012880:	4698      	mov	r8, r3
 8012882:	bfb8      	it	lt
 8012884:	4602      	movlt	r2, r0
 8012886:	3301      	adds	r3, #1
 8012888:	e7e1      	b.n	801284e <_ZN8touchgfx11Application15drawCachedAreasEv+0x67a>
 801288a:	d10e      	bne.n	80128aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d6>
 801288c:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8012890:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8012894:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 8012898:	4473      	add	r3, lr
 801289a:	b21b      	sxth	r3, r3
 801289c:	429d      	cmp	r5, r3
 801289e:	bfa8      	it	ge
 80128a0:	461d      	movge	r5, r3
 80128a2:	4287      	cmp	r7, r0
 80128a4:	bfb8      	it	lt
 80128a6:	46e0      	movlt	r8, ip
 80128a8:	e75b      	b.n	8012762 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 80128aa:	4285      	cmp	r5, r0
 80128ac:	bfa8      	it	ge
 80128ae:	4605      	movge	r5, r0
 80128b0:	e757      	b.n	8012762 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 80128b2:	eb0a 0007 	add.w	r0, sl, r7
 80128b6:	4427      	add	r7, r4
 80128b8:	e9cd 2102 	strd	r2, r1, [sp, #8]
 80128bc:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 80128c0:	45cb      	cmp	fp, r9
 80128c2:	bfbe      	ittt	lt
 80128c4:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
 80128c8:	445d      	addlt	r5, fp
 80128ca:	b22d      	sxthlt	r5, r5
 80128cc:	f7f9 fcb9 	bl	800c242 <_ZNK8touchgfx4Rect7isEmptyEv>
 80128d0:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80128d4:	2800      	cmp	r0, #0
 80128d6:	f47f af1f 	bne.w	8012718 <_ZN8touchgfx11Application15drawCachedAreasEv+0x544>
 80128da:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 80128de:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 80128e2:	482b      	ldr	r0, [pc, #172]	@ (8012990 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7bc>)
 80128e4:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 80128e8:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 80128ec:	6800      	ldr	r0, [r0, #0]
 80128ee:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
 80128f2:	1aad      	subs	r5, r5, r2
 80128f4:	454d      	cmp	r5, r9
 80128f6:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 80128fa:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 80128fe:	bfa8      	it	ge
 8012900:	464d      	movge	r5, r9
 8012902:	f8d0 c000 	ldr.w	ip, [r0]
 8012906:	b2ad      	uxth	r5, r5
 8012908:	fa1f fb8b 	uxth.w	fp, fp
 801290c:	455d      	cmp	r5, fp
 801290e:	bf94      	ite	ls
 8012910:	9500      	strls	r5, [sp, #0]
 8012912:	f8cd b000 	strhi.w	fp, [sp]
 8012916:	b292      	uxth	r2, r2
 8012918:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
 801291c:	b29b      	uxth	r3, r3
 801291e:	b289      	uxth	r1, r1
 8012920:	47a8      	blx	r5
 8012922:	6823      	ldr	r3, [r4, #0]
 8012924:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8012928:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801292a:	a90d      	add	r1, sp, #52	@ 0x34
 801292c:	4620      	mov	r0, r4
 801292e:	4798      	blx	r3
 8012930:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 8012934:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 8012938:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 801293c:	1a5b      	subs	r3, r3, r1
 801293e:	440a      	add	r2, r1
 8012940:	b21b      	sxth	r3, r3
 8012942:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 8012946:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 801294a:	2b00      	cmp	r3, #0
 801294c:	f47f aedf 	bne.w	801270e <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 8012950:	fa1f f188 	uxth.w	r1, r8
 8012954:	4650      	mov	r0, sl
 8012956:	f7ff f8ab 	bl	8011ab0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801295a:	e6d8      	b.n	801270e <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 801295c:	8835      	ldrh	r5, [r6, #0]
 801295e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8012962:	42ab      	cmp	r3, r5
 8012964:	f67f adc4 	bls.w	80124f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8012968:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 801296c:	ab0d      	add	r3, sp, #52	@ 0x34
 801296e:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8012972:	6851      	ldr	r1, [r2, #4]
 8012974:	c303      	stmia	r3!, {r0, r1}
 8012976:	a80d      	add	r0, sp, #52	@ 0x34
 8012978:	f7f9 fc63 	bl	800c242 <_ZNK8touchgfx4Rect7isEmptyEv>
 801297c:	b920      	cbnz	r0, 8012988 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b4>
 801297e:	6823      	ldr	r3, [r4, #0]
 8012980:	a90d      	add	r1, sp, #52	@ 0x34
 8012982:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8012984:	4620      	mov	r0, r4
 8012986:	4798      	blx	r3
 8012988:	3501      	adds	r5, #1
 801298a:	b2ad      	uxth	r5, r5
 801298c:	e7e7      	b.n	801295e <_ZN8touchgfx11Application15drawCachedAreasEv+0x78a>
 801298e:	bf00      	nop
 8012990:	20015238 	.word	0x20015238

08012994 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8012994:	4b03      	ldr	r3, [pc, #12]	@ (80129a4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8012996:	2200      	movs	r2, #0
 8012998:	801a      	strh	r2, [r3, #0]
 801299a:	805a      	strh	r2, [r3, #2]
 801299c:	809a      	strh	r2, [r3, #4]
 801299e:	80da      	strh	r2, [r3, #6]
 80129a0:	4770      	bx	lr
 80129a2:	bf00      	nop
 80129a4:	20015284 	.word	0x20015284

080129a8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80129a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80129ac:	4606      	mov	r6, r0
 80129ae:	b09d      	sub	sp, #116	@ 0x74
 80129b0:	a803      	add	r0, sp, #12
 80129b2:	4614      	mov	r4, r2
 80129b4:	468a      	mov	sl, r1
 80129b6:	461d      	mov	r5, r3
 80129b8:	f001 f924 	bl	8013c04 <_ZN8touchgfx12TextProviderC1Ev>
 80129bc:	6833      	ldr	r3, [r6, #0]
 80129be:	4630      	mov	r0, r6
 80129c0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80129c2:	4798      	blx	r3
 80129c4:	6833      	ldr	r3, [r6, #0]
 80129c6:	4607      	mov	r7, r0
 80129c8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80129ca:	4630      	mov	r0, r6
 80129cc:	4798      	blx	r3
 80129ce:	462a      	mov	r2, r5
 80129d0:	9000      	str	r0, [sp, #0]
 80129d2:	4621      	mov	r1, r4
 80129d4:	463b      	mov	r3, r7
 80129d6:	a803      	add	r0, sp, #12
 80129d8:	f001 f967 	bl	8013caa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80129dc:	2500      	movs	r5, #0
 80129de:	462c      	mov	r4, r5
 80129e0:	46a9      	mov	r9, r5
 80129e2:	46a8      	mov	r8, r5
 80129e4:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 80129e8:	2300      	movs	r3, #0
 80129ea:	9302      	str	r3, [sp, #8]
 80129ec:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80129f0:	429c      	cmp	r4, r3
 80129f2:	d002      	beq.n	80129fa <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 80129f4:	455c      	cmp	r4, fp
 80129f6:	bf18      	it	ne
 80129f8:	4625      	movne	r5, r4
 80129fa:	ab02      	add	r3, sp, #8
 80129fc:	4632      	mov	r2, r6
 80129fe:	4651      	mov	r1, sl
 8012a00:	a803      	add	r0, sp, #12
 8012a02:	f001 fc6d 	bl	80142e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012a06:	4604      	mov	r4, r0
 8012a08:	b108      	cbz	r0, 8012a0e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8012a0a:	280a      	cmp	r0, #10
 8012a0c:	d10a      	bne.n	8012a24 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8012a0e:	45c1      	cmp	r9, r8
 8012a10:	bf38      	it	cc
 8012a12:	46c1      	movcc	r9, r8
 8012a14:	f04f 0800 	mov.w	r8, #0
 8012a18:	2c00      	cmp	r4, #0
 8012a1a:	d1e5      	bne.n	80129e8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8012a1c:	4648      	mov	r0, r9
 8012a1e:	b01d      	add	sp, #116	@ 0x74
 8012a20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012a24:	9a02      	ldr	r2, [sp, #8]
 8012a26:	2a00      	cmp	r2, #0
 8012a28:	d0de      	beq.n	80129e8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8012a2a:	7b57      	ldrb	r7, [r2, #13]
 8012a2c:	6833      	ldr	r3, [r6, #0]
 8012a2e:	8894      	ldrh	r4, [r2, #4]
 8012a30:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8012a32:	007f      	lsls	r7, r7, #1
 8012a34:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 8012a38:	7a97      	ldrb	r7, [r2, #10]
 8012a3a:	4629      	mov	r1, r5
 8012a3c:	4307      	orrs	r7, r0
 8012a3e:	4630      	mov	r0, r6
 8012a40:	4798      	blx	r3
 8012a42:	4438      	add	r0, r7
 8012a44:	4480      	add	r8, r0
 8012a46:	fa1f f888 	uxth.w	r8, r8
 8012a4a:	e7e5      	b.n	8012a18 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08012a4c <_ZNK8touchgfx4Font12getCharWidthEt>:
 8012a4c:	b508      	push	{r3, lr}
 8012a4e:	6803      	ldr	r3, [r0, #0]
 8012a50:	68db      	ldr	r3, [r3, #12]
 8012a52:	4798      	blx	r3
 8012a54:	b128      	cbz	r0, 8012a62 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8012a56:	7b43      	ldrb	r3, [r0, #13]
 8012a58:	7a80      	ldrb	r0, [r0, #10]
 8012a5a:	005b      	lsls	r3, r3, #1
 8012a5c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8012a60:	4318      	orrs	r0, r3
 8012a62:	bd08      	pop	{r3, pc}

08012a64 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8012a64:	b40e      	push	{r1, r2, r3}
 8012a66:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012a68:	b09e      	sub	sp, #120	@ 0x78
 8012a6a:	ab23      	add	r3, sp, #140	@ 0x8c
 8012a6c:	4605      	mov	r5, r0
 8012a6e:	f853 4b04 	ldr.w	r4, [r3], #4
 8012a72:	9303      	str	r3, [sp, #12]
 8012a74:	a805      	add	r0, sp, #20
 8012a76:	f001 f8c5 	bl	8013c04 <_ZN8touchgfx12TextProviderC1Ev>
 8012a7a:	682b      	ldr	r3, [r5, #0]
 8012a7c:	4628      	mov	r0, r5
 8012a7e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8012a80:	4798      	blx	r3
 8012a82:	682b      	ldr	r3, [r5, #0]
 8012a84:	4606      	mov	r6, r0
 8012a86:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8012a88:	4628      	mov	r0, r5
 8012a8a:	4798      	blx	r3
 8012a8c:	4633      	mov	r3, r6
 8012a8e:	ae1e      	add	r6, sp, #120	@ 0x78
 8012a90:	4621      	mov	r1, r4
 8012a92:	9000      	str	r0, [sp, #0]
 8012a94:	9a03      	ldr	r2, [sp, #12]
 8012a96:	2400      	movs	r4, #0
 8012a98:	a805      	add	r0, sp, #20
 8012a9a:	f001 f906 	bl	8013caa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012a9e:	f846 4d68 	str.w	r4, [r6, #-104]!
 8012aa2:	462a      	mov	r2, r5
 8012aa4:	4633      	mov	r3, r6
 8012aa6:	4621      	mov	r1, r4
 8012aa8:	a805      	add	r0, sp, #20
 8012aaa:	f001 fc19 	bl	80142e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012aae:	b1f0      	cbz	r0, 8012aee <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8012ab0:	280a      	cmp	r0, #10
 8012ab2:	d018      	beq.n	8012ae6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8012ab4:	9f04      	ldr	r7, [sp, #16]
 8012ab6:	b1b7      	cbz	r7, 8012ae6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8012ab8:	7b78      	ldrb	r0, [r7, #13]
 8012aba:	7a3b      	ldrb	r3, [r7, #8]
 8012abc:	88ea      	ldrh	r2, [r5, #6]
 8012abe:	00c1      	lsls	r1, r0, #3
 8012ac0:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8012ac4:	4319      	orrs	r1, r3
 8012ac6:	0643      	lsls	r3, r0, #25
 8012ac8:	bf44      	itt	mi
 8012aca:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 8012ace:	b219      	sxthmi	r1, r3
 8012ad0:	0100      	lsls	r0, r0, #4
 8012ad2:	79fb      	ldrb	r3, [r7, #7]
 8012ad4:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8012ad8:	4303      	orrs	r3, r0
 8012ada:	4413      	add	r3, r2
 8012adc:	1a5b      	subs	r3, r3, r1
 8012ade:	b21b      	sxth	r3, r3
 8012ae0:	429c      	cmp	r4, r3
 8012ae2:	bfb8      	it	lt
 8012ae4:	461c      	movlt	r4, r3
 8012ae6:	4633      	mov	r3, r6
 8012ae8:	462a      	mov	r2, r5
 8012aea:	2100      	movs	r1, #0
 8012aec:	e7dc      	b.n	8012aa8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8012aee:	b2a0      	uxth	r0, r4
 8012af0:	b01e      	add	sp, #120	@ 0x78
 8012af2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8012af6:	b003      	add	sp, #12
 8012af8:	4770      	bx	lr

08012afa <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8012afa:	7a43      	ldrb	r3, [r0, #9]
 8012afc:	8880      	ldrh	r0, [r0, #4]
 8012afe:	4418      	add	r0, r3
 8012b00:	b280      	uxth	r0, r0
 8012b02:	4770      	bx	lr

08012b04 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8012b04:	6803      	ldr	r3, [r0, #0]
 8012b06:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8012b08:	4718      	bx	r3

08012b0a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8012b0a:	b40e      	push	{r1, r2, r3}
 8012b0c:	b570      	push	{r4, r5, r6, lr}
 8012b0e:	b09d      	sub	sp, #116	@ 0x74
 8012b10:	ab21      	add	r3, sp, #132	@ 0x84
 8012b12:	4604      	mov	r4, r0
 8012b14:	f853 5b04 	ldr.w	r5, [r3], #4
 8012b18:	9302      	str	r3, [sp, #8]
 8012b1a:	a803      	add	r0, sp, #12
 8012b1c:	f001 f872 	bl	8013c04 <_ZN8touchgfx12TextProviderC1Ev>
 8012b20:	6823      	ldr	r3, [r4, #0]
 8012b22:	4620      	mov	r0, r4
 8012b24:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8012b26:	4798      	blx	r3
 8012b28:	6823      	ldr	r3, [r4, #0]
 8012b2a:	4606      	mov	r6, r0
 8012b2c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8012b2e:	4620      	mov	r0, r4
 8012b30:	4798      	blx	r3
 8012b32:	4633      	mov	r3, r6
 8012b34:	9000      	str	r0, [sp, #0]
 8012b36:	9a02      	ldr	r2, [sp, #8]
 8012b38:	4629      	mov	r1, r5
 8012b3a:	a803      	add	r0, sp, #12
 8012b3c:	f001 f8b5 	bl	8013caa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012b40:	a803      	add	r0, sp, #12
 8012b42:	f001 fc9b 	bl	801447c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8012b46:	2401      	movs	r4, #1
 8012b48:	b2a3      	uxth	r3, r4
 8012b4a:	b140      	cbz	r0, 8012b5e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8012b4c:	280a      	cmp	r0, #10
 8012b4e:	bf08      	it	eq
 8012b50:	3301      	addeq	r3, #1
 8012b52:	a803      	add	r0, sp, #12
 8012b54:	bf08      	it	eq
 8012b56:	b21c      	sxtheq	r4, r3
 8012b58:	f001 fc90 	bl	801447c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8012b5c:	e7f4      	b.n	8012b48 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8012b5e:	4618      	mov	r0, r3
 8012b60:	b01d      	add	sp, #116	@ 0x74
 8012b62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012b66:	b003      	add	sp, #12
 8012b68:	4770      	bx	lr

08012b6a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8012b6a:	b40e      	push	{r1, r2, r3}
 8012b6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012b6e:	b09e      	sub	sp, #120	@ 0x78
 8012b70:	ab23      	add	r3, sp, #140	@ 0x8c
 8012b72:	4604      	mov	r4, r0
 8012b74:	f853 5b04 	ldr.w	r5, [r3], #4
 8012b78:	9303      	str	r3, [sp, #12]
 8012b7a:	a805      	add	r0, sp, #20
 8012b7c:	f001 f842 	bl	8013c04 <_ZN8touchgfx12TextProviderC1Ev>
 8012b80:	6823      	ldr	r3, [r4, #0]
 8012b82:	4620      	mov	r0, r4
 8012b84:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8012b86:	4798      	blx	r3
 8012b88:	6823      	ldr	r3, [r4, #0]
 8012b8a:	4606      	mov	r6, r0
 8012b8c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8012b8e:	4620      	mov	r0, r4
 8012b90:	4798      	blx	r3
 8012b92:	4633      	mov	r3, r6
 8012b94:	4629      	mov	r1, r5
 8012b96:	9000      	str	r0, [sp, #0]
 8012b98:	9a03      	ldr	r2, [sp, #12]
 8012b9a:	a805      	add	r0, sp, #20
 8012b9c:	ad1e      	add	r5, sp, #120	@ 0x78
 8012b9e:	f001 f884 	bl	8013caa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012ba2:	2100      	movs	r1, #0
 8012ba4:	f845 1d68 	str.w	r1, [r5, #-104]!
 8012ba8:	4622      	mov	r2, r4
 8012baa:	462b      	mov	r3, r5
 8012bac:	a805      	add	r0, sp, #20
 8012bae:	f001 fb97 	bl	80142e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012bb2:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 8012bb6:	b1d8      	cbz	r0, 8012bf0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8012bb8:	280a      	cmp	r0, #10
 8012bba:	d012      	beq.n	8012be2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8012bbc:	9804      	ldr	r0, [sp, #16]
 8012bbe:	b180      	cbz	r0, 8012be2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8012bc0:	7b47      	ldrb	r7, [r0, #13]
 8012bc2:	88e2      	ldrh	r2, [r4, #6]
 8012bc4:	00fb      	lsls	r3, r7, #3
 8012bc6:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8012bca:	7a03      	ldrb	r3, [r0, #8]
 8012bcc:	430b      	orrs	r3, r1
 8012bce:	0679      	lsls	r1, r7, #25
 8012bd0:	bf44      	itt	mi
 8012bd2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012bd6:	b21b      	sxthmi	r3, r3
 8012bd8:	1ad3      	subs	r3, r2, r3
 8012bda:	b21b      	sxth	r3, r3
 8012bdc:	429e      	cmp	r6, r3
 8012bde:	bfa8      	it	ge
 8012be0:	461e      	movge	r6, r3
 8012be2:	462b      	mov	r3, r5
 8012be4:	4622      	mov	r2, r4
 8012be6:	2100      	movs	r1, #0
 8012be8:	a805      	add	r0, sp, #20
 8012bea:	f001 fb79 	bl	80142e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012bee:	e7e2      	b.n	8012bb6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8012bf0:	4630      	mov	r0, r6
 8012bf2:	b01e      	add	sp, #120	@ 0x78
 8012bf4:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8012bf8:	b003      	add	sp, #12
 8012bfa:	4770      	bx	lr

08012bfc <_ZNK8touchgfx8Drawable10invalidateEv>:
 8012bfc:	b513      	push	{r0, r1, r4, lr}
 8012bfe:	6803      	ldr	r3, [r0, #0]
 8012c00:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8012c04:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012c08:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012c0c:	2400      	movs	r4, #0
 8012c0e:	9400      	str	r4, [sp, #0]
 8012c10:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012c14:	691b      	ldr	r3, [r3, #16]
 8012c16:	4669      	mov	r1, sp
 8012c18:	4798      	blx	r3
 8012c1a:	b002      	add	sp, #8
 8012c1c:	bd10      	pop	{r4, pc}

08012c1e <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8012c1e:	b538      	push	{r3, r4, r5, lr}
 8012c20:	680b      	ldr	r3, [r1, #0]
 8012c22:	460c      	mov	r4, r1
 8012c24:	68db      	ldr	r3, [r3, #12]
 8012c26:	4605      	mov	r5, r0
 8012c28:	4798      	blx	r3
 8012c2a:	6823      	ldr	r3, [r4, #0]
 8012c2c:	4620      	mov	r0, r4
 8012c2e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012c30:	4629      	mov	r1, r5
 8012c32:	4798      	blx	r3
 8012c34:	4628      	mov	r0, r5
 8012c36:	bd38      	pop	{r3, r4, r5, pc}

08012c38 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8012c38:	b410      	push	{r4}
 8012c3a:	880a      	ldrh	r2, [r1, #0]
 8012c3c:	8884      	ldrh	r4, [r0, #4]
 8012c3e:	4422      	add	r2, r4
 8012c40:	800a      	strh	r2, [r1, #0]
 8012c42:	88c4      	ldrh	r4, [r0, #6]
 8012c44:	884a      	ldrh	r2, [r1, #2]
 8012c46:	4422      	add	r2, r4
 8012c48:	804a      	strh	r2, [r1, #2]
 8012c4a:	6940      	ldr	r0, [r0, #20]
 8012c4c:	b120      	cbz	r0, 8012c58 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8012c4e:	6803      	ldr	r3, [r0, #0]
 8012c50:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012c54:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012c56:	4718      	bx	r3
 8012c58:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012c5c:	4770      	bx	lr

08012c5e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8012c5e:	b570      	push	{r4, r5, r6, lr}
 8012c60:	8882      	ldrh	r2, [r0, #4]
 8012c62:	880b      	ldrh	r3, [r1, #0]
 8012c64:	4413      	add	r3, r2
 8012c66:	800b      	strh	r3, [r1, #0]
 8012c68:	88c2      	ldrh	r2, [r0, #6]
 8012c6a:	884b      	ldrh	r3, [r1, #2]
 8012c6c:	460c      	mov	r4, r1
 8012c6e:	4413      	add	r3, r2
 8012c70:	804b      	strh	r3, [r1, #2]
 8012c72:	4605      	mov	r5, r0
 8012c74:	1d01      	adds	r1, r0, #4
 8012c76:	4620      	mov	r0, r4
 8012c78:	f7f9 faa0 	bl	800c1bc <_ZN8touchgfx4RectaNERKS0_>
 8012c7c:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012c80:	2b00      	cmp	r3, #0
 8012c82:	dd0b      	ble.n	8012c9c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012c84:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8012c88:	2b00      	cmp	r3, #0
 8012c8a:	dd07      	ble.n	8012c9c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012c8c:	6968      	ldr	r0, [r5, #20]
 8012c8e:	b128      	cbz	r0, 8012c9c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012c90:	6803      	ldr	r3, [r0, #0]
 8012c92:	4621      	mov	r1, r4
 8012c94:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012c96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012c9a:	4718      	bx	r3
 8012c9c:	bd70      	pop	{r4, r5, r6, pc}
	...

08012ca0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8012ca0:	b570      	push	{r4, r5, r6, lr}
 8012ca2:	8882      	ldrh	r2, [r0, #4]
 8012ca4:	880b      	ldrh	r3, [r1, #0]
 8012ca6:	4413      	add	r3, r2
 8012ca8:	800b      	strh	r3, [r1, #0]
 8012caa:	88c2      	ldrh	r2, [r0, #6]
 8012cac:	884b      	ldrh	r3, [r1, #2]
 8012cae:	460c      	mov	r4, r1
 8012cb0:	4413      	add	r3, r2
 8012cb2:	804b      	strh	r3, [r1, #2]
 8012cb4:	4605      	mov	r5, r0
 8012cb6:	1d01      	adds	r1, r0, #4
 8012cb8:	4620      	mov	r0, r4
 8012cba:	f7f9 fa7f 	bl	800c1bc <_ZN8touchgfx4RectaNERKS0_>
 8012cbe:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012cc2:	2b00      	cmp	r3, #0
 8012cc4:	dd19      	ble.n	8012cfa <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8012cc6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8012cca:	2b00      	cmp	r3, #0
 8012ccc:	dd15      	ble.n	8012cfa <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8012cce:	6968      	ldr	r0, [r5, #20]
 8012cd0:	b128      	cbz	r0, 8012cde <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8012cd2:	6803      	ldr	r3, [r0, #0]
 8012cd4:	4621      	mov	r1, r4
 8012cd6:	691b      	ldr	r3, [r3, #16]
 8012cd8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012cdc:	4718      	bx	r3
 8012cde:	4b07      	ldr	r3, [pc, #28]	@ (8012cfc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8012ce0:	681b      	ldr	r3, [r3, #0]
 8012ce2:	3304      	adds	r3, #4
 8012ce4:	429d      	cmp	r5, r3
 8012ce6:	d108      	bne.n	8012cfa <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8012ce8:	f7fe fdd6 	bl	8011898 <_ZN8touchgfx11Application11getInstanceEv>
 8012cec:	6803      	ldr	r3, [r0, #0]
 8012cee:	6821      	ldr	r1, [r4, #0]
 8012cf0:	6862      	ldr	r2, [r4, #4]
 8012cf2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8012cf4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012cf8:	4718      	bx	r3
 8012cfa:	bd70      	pop	{r4, r5, r6, pc}
 8012cfc:	2001527c 	.word	0x2001527c

08012d00 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8012d00:	b570      	push	{r4, r5, r6, lr}
 8012d02:	4604      	mov	r4, r0
 8012d04:	4616      	mov	r6, r2
 8012d06:	460d      	mov	r5, r1
 8012d08:	b901      	cbnz	r1, 8012d0c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8012d0a:	b192      	cbz	r2, 8012d32 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8012d0c:	6823      	ldr	r3, [r4, #0]
 8012d0e:	4620      	mov	r0, r4
 8012d10:	699b      	ldr	r3, [r3, #24]
 8012d12:	4798      	blx	r3
 8012d14:	88e2      	ldrh	r2, [r4, #6]
 8012d16:	88a1      	ldrh	r1, [r4, #4]
 8012d18:	4432      	add	r2, r6
 8012d1a:	4429      	add	r1, r5
 8012d1c:	4620      	mov	r0, r4
 8012d1e:	b212      	sxth	r2, r2
 8012d20:	b209      	sxth	r1, r1
 8012d22:	f7f0 fb40 	bl	80033a6 <_ZN8touchgfx8Drawable5setXYEss>
 8012d26:	6823      	ldr	r3, [r4, #0]
 8012d28:	4620      	mov	r0, r4
 8012d2a:	699b      	ldr	r3, [r3, #24]
 8012d2c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012d30:	4718      	bx	r3
 8012d32:	bd70      	pop	{r4, r5, r6, pc}

08012d34 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8012d34:	b510      	push	{r4, lr}
 8012d36:	4604      	mov	r4, r0
 8012d38:	4608      	mov	r0, r1
 8012d3a:	2300      	movs	r3, #0
 8012d3c:	8023      	strh	r3, [r4, #0]
 8012d3e:	8063      	strh	r3, [r4, #2]
 8012d40:	6803      	ldr	r3, [r0, #0]
 8012d42:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012d46:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8012d4a:	80a1      	strh	r1, [r4, #4]
 8012d4c:	80e2      	strh	r2, [r4, #6]
 8012d4e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012d50:	4621      	mov	r1, r4
 8012d52:	4798      	blx	r3
 8012d54:	4620      	mov	r0, r4
 8012d56:	bd10      	pop	{r4, pc}

08012d58 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 8012d58:	4770      	bx	lr

08012d5a <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 8012d5a:	b510      	push	{r4, lr}
 8012d5c:	211c      	movs	r1, #28
 8012d5e:	4604      	mov	r4, r0
 8012d60:	f011 fb6b 	bl	802443a <_ZdlPvj>
 8012d64:	4620      	mov	r0, r4
 8012d66:	bd10      	pop	{r4, pc}

08012d68 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 8012d68:	4a04      	ldr	r2, [pc, #16]	@ (8012d7c <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 8012d6a:	6002      	str	r2, [r0, #0]
 8012d6c:	2200      	movs	r2, #0
 8012d6e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8012d72:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8012d76:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012d7a:	4770      	bx	lr
 8012d7c:	08028558 	.word	0x08028558

08012d80 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 8012d80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d84:	4604      	mov	r4, r0
 8012d86:	b087      	sub	sp, #28
 8012d88:	8b45      	ldrh	r5, [r0, #26]
 8012d8a:	f8b2 c000 	ldrh.w	ip, [r2]
 8012d8e:	9105      	str	r1, [sp, #20]
 8012d90:	68e1      	ldr	r1, [r4, #12]
 8012d92:	9203      	str	r2, [sp, #12]
 8012d94:	1c68      	adds	r0, r5, #1
 8012d96:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8012d9a:	f01c 0501 	ands.w	r5, ip, #1
 8012d9e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012da2:	9502      	str	r5, [sp, #8]
 8012da4:	b280      	uxth	r0, r0
 8012da6:	d07d      	beq.n	8012ea4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
 8012da8:	ee07 2a90 	vmov	s15, r2
 8012dac:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8012db0:	8360      	strh	r0, [r4, #26]
 8012db2:	edc1 6a00 	vstr	s13, [r1]
 8012db6:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8012dba:	8b61      	ldrh	r1, [r4, #26]
 8012dbc:	ee07 2a10 	vmov	s14, r2
 8012dc0:	68e2      	ldr	r2, [r4, #12]
 8012dc2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012dc6:	f04f 0e00 	mov.w	lr, #0
 8012dca:	1c48      	adds	r0, r1, #1
 8012dcc:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8012dd0:	ee06 ea10 	vmov	s12, lr
 8012dd4:	8360      	strh	r0, [r4, #26]
 8012dd6:	ed82 7a00 	vstr	s14, [r2]
 8012dda:	8b21      	ldrh	r1, [r4, #24]
 8012ddc:	68a2      	ldr	r2, [r4, #8]
 8012dde:	2501      	movs	r5, #1
 8012de0:	1c48      	adds	r0, r1, #1
 8012de2:	8320      	strh	r0, [r4, #24]
 8012de4:	5455      	strb	r5, [r2, r1]
 8012de6:	2200      	movs	r2, #0
 8012de8:	3304      	adds	r3, #4
 8012dea:	ee07 2a90 	vmov	s15, r2
 8012dee:	9300      	str	r3, [sp, #0]
 8012df0:	46aa      	mov	sl, r5
 8012df2:	4613      	mov	r3, r2
 8012df4:	4611      	mov	r1, r2
 8012df6:	462e      	mov	r6, r5
 8012df8:	9201      	str	r2, [sp, #4]
 8012dfa:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 8012dfe:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 8012e02:	9805      	ldr	r0, [sp, #20]
 8012e04:	f8d4 b008 	ldr.w	fp, [r4, #8]
 8012e08:	f108 0701 	add.w	r7, r8, #1
 8012e0c:	42a8      	cmp	r0, r5
 8012e0e:	b2bf      	uxth	r7, r7
 8012e10:	eb0b 0908 	add.w	r9, fp, r8
 8012e14:	f340 80db 	ble.w	8012fce <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
 8012e18:	fa4c f906 	asr.w	r9, ip, r6
 8012e1c:	f009 0901 	and.w	r9, r9, #1
 8012e20:	fa5f f389 	uxtb.w	r3, r9
 8012e24:	9304      	str	r3, [sp, #16]
 8012e26:	9b00      	ldr	r3, [sp, #0]
 8012e28:	f9b3 1000 	ldrsh.w	r1, [r3]
 8012e2c:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8012e30:	f1b9 0f00 	cmp.w	r9, #0
 8012e34:	d07d      	beq.n	8012f32 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
 8012e36:	ee05 1a10 	vmov	s10, r1
 8012e3a:	eef8 4ac5 	vcvt.f32.s32	s9, s10
 8012e3e:	ee05 3a10 	vmov	s10, r3
 8012e42:	8327      	strh	r7, [r4, #24]
 8012e44:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8012e48:	f1ba 0f00 	cmp.w	sl, #0
 8012e4c:	d050      	beq.n	8012ef0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
 8012e4e:	f04f 0002 	mov.w	r0, #2
 8012e52:	f80b 0008 	strb.w	r0, [fp, r8]
 8012e56:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8012e5a:	68e7      	ldr	r7, [r4, #12]
 8012e5c:	f108 0901 	add.w	r9, r8, #1
 8012e60:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8012e64:	f8a4 901a 	strh.w	r9, [r4, #26]
 8012e68:	edc7 4a00 	vstr	s9, [r7]
 8012e6c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8012e70:	68e7      	ldr	r7, [r4, #12]
 8012e72:	f108 0901 	add.w	r9, r8, #1
 8012e76:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8012e7a:	f8a4 901a 	strh.w	r9, [r4, #26]
 8012e7e:	ed87 5a00 	vstr	s10, [r7]
 8012e82:	3601      	adds	r6, #1
 8012e84:	2e10      	cmp	r6, #16
 8012e86:	d106      	bne.n	8012e96 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
 8012e88:	9e01      	ldr	r6, [sp, #4]
 8012e8a:	9803      	ldr	r0, [sp, #12]
 8012e8c:	3601      	adds	r6, #1
 8012e8e:	9601      	str	r6, [sp, #4]
 8012e90:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
 8012e94:	2600      	movs	r6, #0
 8012e96:	9800      	ldr	r0, [sp, #0]
 8012e98:	f8dd a010 	ldr.w	sl, [sp, #16]
 8012e9c:	3004      	adds	r0, #4
 8012e9e:	3501      	adds	r5, #1
 8012ea0:	9000      	str	r0, [sp, #0]
 8012ea2:	e7ac      	b.n	8012dfe <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
 8012ea4:	ee06 2a10 	vmov	s12, r2
 8012ea8:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 8012eac:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8012eb0:	ee16 5a10 	vmov	r5, s12
 8012eb4:	442a      	add	r2, r5
 8012eb6:	ee06 2a90 	vmov	s13, r2
 8012eba:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 8012ebe:	8360      	strh	r0, [r4, #26]
 8012ec0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012ec4:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8012ec8:	4472      	add	r2, lr
 8012eca:	ee07 2a10 	vmov	s14, r2
 8012ece:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8012ed2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012ed6:	edc1 6a00 	vstr	s13, [r1]
 8012eda:	8b61      	ldrh	r1, [r4, #26]
 8012edc:	68e2      	ldr	r2, [r4, #12]
 8012ede:	ee27 7a27 	vmul.f32	s14, s14, s15
 8012ee2:	1c48      	adds	r0, r1, #1
 8012ee4:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8012ee8:	8360      	strh	r0, [r4, #26]
 8012eea:	ed82 7a00 	vstr	s14, [r2]
 8012eee:	e774      	b.n	8012dda <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
 8012ef0:	f04f 0005 	mov.w	r0, #5
 8012ef4:	f80b 0008 	strb.w	r0, [fp, r8]
 8012ef8:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8012efc:	68e7      	ldr	r7, [r4, #12]
 8012efe:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
 8012f02:	f108 0901 	add.w	r9, r8, #1
 8012f06:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8012f0a:	f8a4 901a 	strh.w	r9, [r4, #26]
 8012f0e:	ed87 4a00 	vstr	s8, [r7]
 8012f12:	ee04 2a10 	vmov	s8, r2
 8012f16:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8012f1a:	68e7      	ldr	r7, [r4, #12]
 8012f1c:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 8012f20:	f108 0901 	add.w	r9, r8, #1
 8012f24:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8012f28:	f8a4 901a 	strh.w	r9, [r4, #26]
 8012f2c:	ed87 4a00 	vstr	s8, [r7]
 8012f30:	e791      	b.n	8012e56 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
 8012f32:	f1ba 0f00 	cmp.w	sl, #0
 8012f36:	d146      	bne.n	8012fc6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
 8012f38:	f04f 0005 	mov.w	r0, #5
 8012f3c:	8327      	strh	r7, [r4, #24]
 8012f3e:	f80b 0008 	strb.w	r0, [fp, r8]
 8012f42:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8012f46:	68e7      	ldr	r7, [r4, #12]
 8012f48:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8012f4c:	f108 0901 	add.w	r9, r8, #1
 8012f50:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8012f54:	ee17 0a90 	vmov	r0, s15
 8012f58:	f8a4 901a 	strh.w	r9, [r4, #26]
 8012f5c:	ed87 5a00 	vstr	s10, [r7]
 8012f60:	ee05 2a10 	vmov	s10, r2
 8012f64:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8012f68:	68e7      	ldr	r7, [r4, #12]
 8012f6a:	4408      	add	r0, r1
 8012f6c:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8012f70:	ee07 0a90 	vmov	s15, r0
 8012f74:	f108 0901 	add.w	r9, r8, #1
 8012f78:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8012f7c:	f8a4 901a 	strh.w	r9, [r4, #26]
 8012f80:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012f84:	ed87 5a00 	vstr	s10, [r7]
 8012f88:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8012f8c:	68e7      	ldr	r7, [r4, #12]
 8012f8e:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8012f92:	f108 0901 	add.w	r9, r8, #1
 8012f96:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8012f9a:	441a      	add	r2, r3
 8012f9c:	f8a4 901a 	strh.w	r9, [r4, #26]
 8012fa0:	edc7 7a00 	vstr	s15, [r7]
 8012fa4:	ee07 2a90 	vmov	s15, r2
 8012fa8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012fac:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8012fb0:	68e7      	ldr	r7, [r4, #12]
 8012fb2:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8012fb6:	f108 0901 	add.w	r9, r8, #1
 8012fba:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8012fbe:	f8a4 901a 	strh.w	r9, [r4, #26]
 8012fc2:	edc7 7a00 	vstr	s15, [r7]
 8012fc6:	461a      	mov	r2, r3
 8012fc8:	ee07 1a90 	vmov	s15, r1
 8012fcc:	e759      	b.n	8012e82 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 8012fce:	f1ba 0f00 	cmp.w	sl, #0
 8012fd2:	d045      	beq.n	8013060 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 8012fd4:	ee05 1a90 	vmov	s11, r1
 8012fd8:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8012fdc:	eef4 5a66 	vcmp.f32	s11, s13
 8012fe0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012fe4:	d108      	bne.n	8012ff8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
 8012fe6:	ee05 3a90 	vmov	s11, r3
 8012fea:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8012fee:	eef4 5a47 	vcmp.f32	s11, s14
 8012ff2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012ff6:	d033      	beq.n	8013060 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 8012ff8:	9b02      	ldr	r3, [sp, #8]
 8012ffa:	8327      	strh	r7, [r4, #24]
 8012ffc:	b1b3      	cbz	r3, 801302c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
 8012ffe:	2302      	movs	r3, #2
 8013000:	f889 3000 	strb.w	r3, [r9]
 8013004:	8b62      	ldrh	r2, [r4, #26]
 8013006:	68e3      	ldr	r3, [r4, #12]
 8013008:	1c51      	adds	r1, r2, #1
 801300a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801300e:	8361      	strh	r1, [r4, #26]
 8013010:	edc3 6a00 	vstr	s13, [r3]
 8013014:	8b62      	ldrh	r2, [r4, #26]
 8013016:	68e3      	ldr	r3, [r4, #12]
 8013018:	1c51      	adds	r1, r2, #1
 801301a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801301e:	8361      	strh	r1, [r4, #26]
 8013020:	ed83 7a00 	vstr	s14, [r3]
 8013024:	9800      	ldr	r0, [sp, #0]
 8013026:	b007      	add	sp, #28
 8013028:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801302c:	2305      	movs	r3, #5
 801302e:	f889 3000 	strb.w	r3, [r9]
 8013032:	8b62      	ldrh	r2, [r4, #26]
 8013034:	68e3      	ldr	r3, [r4, #12]
 8013036:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801303a:	1c51      	adds	r1, r2, #1
 801303c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8013040:	8361      	strh	r1, [r4, #26]
 8013042:	ee07 ea90 	vmov	s15, lr
 8013046:	ed83 6a00 	vstr	s12, [r3]
 801304a:	8b62      	ldrh	r2, [r4, #26]
 801304c:	68e3      	ldr	r3, [r4, #12]
 801304e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013052:	1c51      	adds	r1, r2, #1
 8013054:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8013058:	8361      	strh	r1, [r4, #26]
 801305a:	edc3 7a00 	vstr	s15, [r3]
 801305e:	e7d1      	b.n	8013004 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 8013060:	ee05 2a90 	vmov	s11, r2
 8013064:	9902      	ldr	r1, [sp, #8]
 8013066:	8327      	strh	r7, [r4, #24]
 8013068:	2305      	movs	r3, #5
 801306a:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 801306e:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8013072:	f889 3000 	strb.w	r3, [r9]
 8013076:	b181      	cbz	r1, 801309a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
 8013078:	8b62      	ldrh	r2, [r4, #26]
 801307a:	68e3      	ldr	r3, [r4, #12]
 801307c:	1c51      	adds	r1, r2, #1
 801307e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8013082:	8361      	strh	r1, [r4, #26]
 8013084:	ed83 5a00 	vstr	s10, [r3]
 8013088:	8b62      	ldrh	r2, [r4, #26]
 801308a:	68e3      	ldr	r3, [r4, #12]
 801308c:	1c51      	adds	r1, r2, #1
 801308e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8013092:	8361      	strh	r1, [r4, #26]
 8013094:	edc3 5a00 	vstr	s11, [r3]
 8013098:	e7b4      	b.n	8013004 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 801309a:	8b65      	ldrh	r5, [r4, #26]
 801309c:	68e1      	ldr	r1, [r4, #12]
 801309e:	1c6e      	adds	r6, r5, #1
 80130a0:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 80130a4:	8366      	strh	r6, [r4, #26]
 80130a6:	ed81 5a00 	vstr	s10, [r1]
 80130aa:	8b65      	ldrh	r5, [r4, #26]
 80130ac:	68e1      	ldr	r1, [r4, #12]
 80130ae:	1c6e      	adds	r6, r5, #1
 80130b0:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 80130b4:	8366      	strh	r6, [r4, #26]
 80130b6:	edc1 5a00 	vstr	s11, [r1]
 80130ba:	8b65      	ldrh	r5, [r4, #26]
 80130bc:	68e1      	ldr	r1, [r4, #12]
 80130be:	1c6e      	adds	r6, r5, #1
 80130c0:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 80130c4:	ee17 0a90 	vmov	r0, s15
 80130c8:	ee16 5a10 	vmov	r5, s12
 80130cc:	4428      	add	r0, r5
 80130ce:	ee07 0a90 	vmov	s15, r0
 80130d2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80130d6:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 80130da:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80130de:	4472      	add	r2, lr
 80130e0:	8366      	strh	r6, [r4, #26]
 80130e2:	edc1 7a00 	vstr	s15, [r1]
 80130e6:	ee07 2a90 	vmov	s15, r2
 80130ea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80130ee:	8b61      	ldrh	r1, [r4, #26]
 80130f0:	68e5      	ldr	r5, [r4, #12]
 80130f2:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80130f6:	1c4e      	adds	r6, r1, #1
 80130f8:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 80130fc:	8366      	strh	r6, [r4, #26]
 80130fe:	edc1 7a00 	vstr	s15, [r1]
 8013102:	8b22      	ldrh	r2, [r4, #24]
 8013104:	68a1      	ldr	r1, [r4, #8]
 8013106:	1c55      	adds	r5, r2, #1
 8013108:	8325      	strh	r5, [r4, #24]
 801310a:	548b      	strb	r3, [r1, r2]
 801310c:	e791      	b.n	8013032 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

08013110 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 8013110:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013114:	b08e      	sub	sp, #56	@ 0x38
 8013116:	4604      	mov	r4, r0
 8013118:	4688      	mov	r8, r1
 801311a:	4615      	mov	r5, r2
 801311c:	4699      	mov	r9, r3
 801311e:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 8013120:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 8013124:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 8013126:	f7ef fa87 	bl	8002638 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 801312a:	6060      	str	r0, [r4, #4]
 801312c:	f1b9 0f00 	cmp.w	r9, #0
 8013130:	f000 80e8 	beq.w	8013304 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 8013134:	2800      	cmp	r0, #0
 8013136:	f000 80e5 	beq.w	8013304 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 801313a:	a805      	add	r0, sp, #20
 801313c:	f000 f8f9 	bl	8013332 <_ZN8touchgfx9Matrix3x3C1Ev>
 8013140:	6833      	ldr	r3, [r6, #0]
 8013142:	4630      	mov	r0, r6
 8013144:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8013146:	4798      	blx	r3
 8013148:	a805      	add	r0, sp, #20
 801314a:	eef0 0a40 	vmov.f32	s1, s0
 801314e:	f000 f8f4 	bl	801333a <_ZN8touchgfx9Matrix3x35scaleEff>
 8013152:	6860      	ldr	r0, [r4, #4]
 8013154:	f1ba 0f03 	cmp.w	sl, #3
 8013158:	d83b      	bhi.n	80131d2 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 801315a:	e8df f00a 	tbb	[pc, sl]
 801315e:	1002      	.short	0x1002
 8013160:	9f71      	.short	0x9f71
 8013162:	6803      	ldr	r3, [r0, #0]
 8013164:	462a      	mov	r2, r5
 8013166:	689b      	ldr	r3, [r3, #8]
 8013168:	4641      	mov	r1, r8
 801316a:	4798      	blx	r3
 801316c:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8013170:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8013174:	ee07 7a90 	vmov	s15, r7
 8013178:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 801317c:	e026      	b.n	80131cc <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 801317e:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 8013182:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8013186:	8869      	ldrh	r1, [r5, #2]
 8013188:	f8ad 2010 	strh.w	r2, [sp, #16]
 801318c:	1a9b      	subs	r3, r3, r2
 801318e:	1a5b      	subs	r3, r3, r1
 8013190:	f8ad 300c 	strh.w	r3, [sp, #12]
 8013194:	882b      	ldrh	r3, [r5, #0]
 8013196:	f8ad 300e 	strh.w	r3, [sp, #14]
 801319a:	88ab      	ldrh	r3, [r5, #4]
 801319c:	f8ad 3012 	strh.w	r3, [sp, #18]
 80131a0:	6803      	ldr	r3, [r0, #0]
 80131a2:	aa03      	add	r2, sp, #12
 80131a4:	689b      	ldr	r3, [r3, #8]
 80131a6:	4641      	mov	r1, r8
 80131a8:	4798      	blx	r3
 80131aa:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 801330c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 80131ae:	a805      	add	r0, sp, #20
 80131b0:	f000 f8e8 	bl	8013384 <_ZN8touchgfx9Matrix3x36rotateEf>
 80131b4:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 80131b8:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 80131ba:	ee07 7a90 	vmov	s15, r7
 80131be:	1a9b      	subs	r3, r3, r2
 80131c0:	ee00 3a10 	vmov	s0, r3
 80131c4:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 80131c8:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 80131cc:	a805      	add	r0, sp, #20
 80131ce:	f000 f927 	bl	8013420 <_ZN8touchgfx9Matrix3x39translateEff>
 80131d2:	6860      	ldr	r0, [r4, #4]
 80131d4:	6803      	ldr	r3, [r0, #0]
 80131d6:	a905      	add	r1, sp, #20
 80131d8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80131da:	4798      	blx	r3
 80131dc:	6860      	ldr	r0, [r4, #4]
 80131de:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 80131e0:	6803      	ldr	r3, [r0, #0]
 80131e2:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 80131e6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80131e8:	4798      	blx	r3
 80131ea:	6860      	ldr	r0, [r4, #4]
 80131ec:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 80131f0:	6803      	ldr	r3, [r0, #0]
 80131f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80131f4:	4798      	blx	r3
 80131f6:	6860      	ldr	r0, [r4, #4]
 80131f8:	6803      	ldr	r3, [r0, #0]
 80131fa:	2101      	movs	r1, #1
 80131fc:	68db      	ldr	r3, [r3, #12]
 80131fe:	2500      	movs	r5, #0
 8013200:	4798      	blx	r3
 8013202:	f8b9 7000 	ldrh.w	r7, [r9]
 8013206:	61a5      	str	r5, [r4, #24]
 8013208:	f104 0310 	add.w	r3, r4, #16
 801320c:	f104 0208 	add.w	r2, r4, #8
 8013210:	f104 0114 	add.w	r1, r4, #20
 8013214:	f104 000c 	add.w	r0, r4, #12
 8013218:	f109 0602 	add.w	r6, r9, #2
 801321c:	f7f1 fbca 	bl	80049b4 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 8013220:	42af      	cmp	r7, r5
 8013222:	dd60      	ble.n	80132e6 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 8013224:	8831      	ldrh	r1, [r6, #0]
 8013226:	f101 030f 	add.w	r3, r1, #15
 801322a:	1cb2      	adds	r2, r6, #2
 801322c:	f3c3 1307 	ubfx	r3, r3, #4, #8
 8013230:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013234:	4620      	mov	r0, r4
 8013236:	f7ff fda3 	bl	8012d80 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 801323a:	3501      	adds	r5, #1
 801323c:	4606      	mov	r6, r0
 801323e:	e7ef      	b.n	8013220 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 8013240:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8013244:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8013248:	8829      	ldrh	r1, [r5, #0]
 801324a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801324e:	1a9b      	subs	r3, r3, r2
 8013250:	1a5b      	subs	r3, r3, r1
 8013252:	f8ad 300c 	strh.w	r3, [sp, #12]
 8013256:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801325a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801325e:	886d      	ldrh	r5, [r5, #2]
 8013260:	f8ad 1012 	strh.w	r1, [sp, #18]
 8013264:	1a5b      	subs	r3, r3, r1
 8013266:	1b5b      	subs	r3, r3, r5
 8013268:	f8ad 300e 	strh.w	r3, [sp, #14]
 801326c:	6803      	ldr	r3, [r0, #0]
 801326e:	aa03      	add	r2, sp, #12
 8013270:	689b      	ldr	r3, [r3, #8]
 8013272:	4641      	mov	r1, r8
 8013274:	4798      	blx	r3
 8013276:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 8013310 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 801327a:	a805      	add	r0, sp, #20
 801327c:	f000 f882 	bl	8013384 <_ZN8touchgfx9Matrix3x36rotateEf>
 8013280:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8013284:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8013286:	1a9b      	subs	r3, r3, r2
 8013288:	ee00 3a90 	vmov	s1, r3
 801328c:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 8013290:	1bdb      	subs	r3, r3, r7
 8013292:	ee00 3a10 	vmov	s0, r3
 8013296:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 801329a:	e795      	b.n	80131c8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 801329c:	886b      	ldrh	r3, [r5, #2]
 801329e:	f8ad 300c 	strh.w	r3, [sp, #12]
 80132a2:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80132a6:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80132aa:	8829      	ldrh	r1, [r5, #0]
 80132ac:	f8ad 2012 	strh.w	r2, [sp, #18]
 80132b0:	1a9b      	subs	r3, r3, r2
 80132b2:	1a5b      	subs	r3, r3, r1
 80132b4:	f8ad 300e 	strh.w	r3, [sp, #14]
 80132b8:	88eb      	ldrh	r3, [r5, #6]
 80132ba:	f8ad 3010 	strh.w	r3, [sp, #16]
 80132be:	6803      	ldr	r3, [r0, #0]
 80132c0:	aa03      	add	r2, sp, #12
 80132c2:	689b      	ldr	r3, [r3, #8]
 80132c4:	4641      	mov	r1, r8
 80132c6:	4798      	blx	r3
 80132c8:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 8013314 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 80132cc:	a805      	add	r0, sp, #20
 80132ce:	f000 f859 	bl	8013384 <_ZN8touchgfx9Matrix3x36rotateEf>
 80132d2:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80132d6:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 80132da:	1bdb      	subs	r3, r3, r7
 80132dc:	ee00 3a90 	vmov	s1, r3
 80132e0:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 80132e4:	e748      	b.n	8013178 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 80132e6:	6860      	ldr	r0, [r4, #4]
 80132e8:	8b22      	ldrh	r2, [r4, #24]
 80132ea:	6803      	ldr	r3, [r0, #0]
 80132ec:	2100      	movs	r1, #0
 80132ee:	9101      	str	r1, [sp, #4]
 80132f0:	8b61      	ldrh	r1, [r4, #26]
 80132f2:	9100      	str	r1, [sp, #0]
 80132f4:	6a1d      	ldr	r5, [r3, #32]
 80132f6:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 80132fa:	47a8      	blx	r5
 80132fc:	6860      	ldr	r0, [r4, #4]
 80132fe:	6803      	ldr	r3, [r0, #0]
 8013300:	69db      	ldr	r3, [r3, #28]
 8013302:	4798      	blx	r3
 8013304:	b00e      	add	sp, #56	@ 0x38
 8013306:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801330a:	bf00      	nop
 801330c:	42b40000 	.word	0x42b40000
 8013310:	43340000 	.word	0x43340000
 8013314:	43870000 	.word	0x43870000

08013318 <_ZN8touchgfx9Matrix3x35resetEv>:
 8013318:	2300      	movs	r3, #0
 801331a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801331e:	6002      	str	r2, [r0, #0]
 8013320:	6043      	str	r3, [r0, #4]
 8013322:	6083      	str	r3, [r0, #8]
 8013324:	60c3      	str	r3, [r0, #12]
 8013326:	6102      	str	r2, [r0, #16]
 8013328:	6143      	str	r3, [r0, #20]
 801332a:	6183      	str	r3, [r0, #24]
 801332c:	61c3      	str	r3, [r0, #28]
 801332e:	6202      	str	r2, [r0, #32]
 8013330:	4770      	bx	lr

08013332 <_ZN8touchgfx9Matrix3x3C1Ev>:
 8013332:	b508      	push	{r3, lr}
 8013334:	f7ff fff0 	bl	8013318 <_ZN8touchgfx9Matrix3x35resetEv>
 8013338:	bd08      	pop	{r3, pc}

0801333a <_ZN8touchgfx9Matrix3x35scaleEff>:
 801333a:	edd0 7a00 	vldr	s15, [r0]
 801333e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8013342:	edc0 7a00 	vstr	s15, [r0]
 8013346:	edd0 7a01 	vldr	s15, [r0, #4]
 801334a:	ee67 7a80 	vmul.f32	s15, s15, s0
 801334e:	edc0 7a01 	vstr	s15, [r0, #4]
 8013352:	edd0 7a02 	vldr	s15, [r0, #8]
 8013356:	ee27 0a80 	vmul.f32	s0, s15, s0
 801335a:	edd0 7a03 	vldr	s15, [r0, #12]
 801335e:	ed80 0a02 	vstr	s0, [r0, #8]
 8013362:	ee67 7aa0 	vmul.f32	s15, s15, s1
 8013366:	edc0 7a03 	vstr	s15, [r0, #12]
 801336a:	edd0 7a04 	vldr	s15, [r0, #16]
 801336e:	ee67 7aa0 	vmul.f32	s15, s15, s1
 8013372:	edc0 7a04 	vstr	s15, [r0, #16]
 8013376:	edd0 7a05 	vldr	s15, [r0, #20]
 801337a:	ee67 0aa0 	vmul.f32	s1, s15, s1
 801337e:	edc0 0a05 	vstr	s1, [r0, #20]
 8013382:	4770      	bx	lr

08013384 <_ZN8touchgfx9Matrix3x36rotateEf>:
 8013384:	b510      	push	{r4, lr}
 8013386:	eddf 7a24 	vldr	s15, [pc, #144]	@ 8013418 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 801338a:	ee20 0a27 	vmul.f32	s0, s0, s15
 801338e:	eddf 7a23 	vldr	s15, [pc, #140]	@ 801341c <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 8013392:	ed2d 8b02 	vpush	{d8}
 8013396:	eec0 8a27 	vdiv.f32	s17, s0, s15
 801339a:	4604      	mov	r4, r0
 801339c:	eeb0 0a68 	vmov.f32	s0, s17
 80133a0:	f011 f894 	bl	80244cc <cosf>
 80133a4:	eeb0 8a40 	vmov.f32	s16, s0
 80133a8:	eeb0 0a68 	vmov.f32	s0, s17
 80133ac:	f011 f8d2 	bl	8024554 <sinf>
 80133b0:	edd4 6a03 	vldr	s13, [r4, #12]
 80133b4:	edd4 4a00 	vldr	s9, [r4]
 80133b8:	ed94 7a04 	vldr	s14, [r4, #16]
 80133bc:	ed94 5a01 	vldr	s10, [r4, #4]
 80133c0:	edd4 5a02 	vldr	s11, [r4, #8]
 80133c4:	ee60 7a66 	vnmul.f32	s15, s0, s13
 80133c8:	ee66 6a88 	vmul.f32	s13, s13, s16
 80133cc:	eee8 7a24 	vfma.f32	s15, s16, s9
 80133d0:	eee0 6a24 	vfma.f32	s13, s0, s9
 80133d4:	edc4 7a00 	vstr	s15, [r4]
 80133d8:	ee60 7a47 	vnmul.f32	s15, s0, s14
 80133dc:	ee27 7a08 	vmul.f32	s14, s14, s16
 80133e0:	eee8 7a05 	vfma.f32	s15, s16, s10
 80133e4:	eea0 7a05 	vfma.f32	s14, s0, s10
 80133e8:	edc4 7a01 	vstr	s15, [r4, #4]
 80133ec:	edd4 7a05 	vldr	s15, [r4, #20]
 80133f0:	edc4 6a03 	vstr	s13, [r4, #12]
 80133f4:	ee20 6a67 	vnmul.f32	s12, s0, s15
 80133f8:	ee67 7a88 	vmul.f32	s15, s15, s16
 80133fc:	eea8 6a25 	vfma.f32	s12, s16, s11
 8013400:	ecbd 8b02 	vpop	{d8}
 8013404:	eee0 7a25 	vfma.f32	s15, s0, s11
 8013408:	ed84 6a02 	vstr	s12, [r4, #8]
 801340c:	ed84 7a04 	vstr	s14, [r4, #16]
 8013410:	edc4 7a05 	vstr	s15, [r4, #20]
 8013414:	bd10      	pop	{r4, pc}
 8013416:	bf00      	nop
 8013418:	40490fdb 	.word	0x40490fdb
 801341c:	43340000 	.word	0x43340000

08013420 <_ZN8touchgfx9Matrix3x39translateEff>:
 8013420:	ed90 6a06 	vldr	s12, [r0, #24]
 8013424:	edd0 7a00 	vldr	s15, [r0]
 8013428:	edd0 6a07 	vldr	s13, [r0, #28]
 801342c:	ed90 7a08 	vldr	s14, [r0, #32]
 8013430:	eee6 7a00 	vfma.f32	s15, s12, s0
 8013434:	edc0 7a00 	vstr	s15, [r0]
 8013438:	edd0 7a01 	vldr	s15, [r0, #4]
 801343c:	eee6 7a80 	vfma.f32	s15, s13, s0
 8013440:	edc0 7a01 	vstr	s15, [r0, #4]
 8013444:	edd0 7a02 	vldr	s15, [r0, #8]
 8013448:	eee7 7a00 	vfma.f32	s15, s14, s0
 801344c:	edc0 7a02 	vstr	s15, [r0, #8]
 8013450:	edd0 7a03 	vldr	s15, [r0, #12]
 8013454:	eee6 7a20 	vfma.f32	s15, s12, s1
 8013458:	edc0 7a03 	vstr	s15, [r0, #12]
 801345c:	edd0 7a04 	vldr	s15, [r0, #16]
 8013460:	eee6 7aa0 	vfma.f32	s15, s13, s1
 8013464:	edc0 7a04 	vstr	s15, [r0, #16]
 8013468:	edd0 7a05 	vldr	s15, [r0, #20]
 801346c:	eee7 7a20 	vfma.f32	s15, s14, s1
 8013470:	edc0 7a05 	vstr	s15, [r0, #20]
 8013474:	4770      	bx	lr

08013476 <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
 8013476:	edd0 6a01 	vldr	s13, [r0, #4]
 801347a:	edd0 7a04 	vldr	s15, [r0, #16]
 801347e:	ed90 7a03 	vldr	s14, [r0, #12]
 8013482:	ee60 7aa7 	vmul.f32	s15, s1, s15
 8013486:	ee60 0aa6 	vmul.f32	s1, s1, s13
 801348a:	edd0 6a00 	vldr	s13, [r0]
 801348e:	eee7 7a00 	vfma.f32	s15, s14, s0
 8013492:	b084      	sub	sp, #16
 8013494:	eee6 0a80 	vfma.f32	s1, s13, s0
 8013498:	ed90 7a05 	vldr	s14, [r0, #20]
 801349c:	ed90 0a02 	vldr	s0, [r0, #8]
 80134a0:	ee30 0a80 	vadd.f32	s0, s1, s0
 80134a4:	ee77 0a87 	vadd.f32	s1, s15, s14
 80134a8:	b004      	add	sp, #16
 80134aa:	4770      	bx	lr

080134ac <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80134ac:	b530      	push	{r4, r5, lr}
 80134ae:	8083      	strh	r3, [r0, #4]
 80134b0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80134b4:	80c3      	strh	r3, [r0, #6]
 80134b6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80134ba:	7203      	strb	r3, [r0, #8]
 80134bc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80134c0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80134c4:	7243      	strb	r3, [r0, #9]
 80134c6:	7a83      	ldrb	r3, [r0, #10]
 80134c8:	6141      	str	r1, [r0, #20]
 80134ca:	f365 0306 	bfi	r3, r5, #0, #7
 80134ce:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80134d2:	8302      	strh	r2, [r0, #24]
 80134d4:	f365 13c7 	bfi	r3, r5, #7, #1
 80134d8:	7283      	strb	r3, [r0, #10]
 80134da:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80134de:	72c3      	strb	r3, [r0, #11]
 80134e0:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 80134e4:	7303      	strb	r3, [r0, #12]
 80134e6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80134ea:	81c3      	strh	r3, [r0, #14]
 80134ec:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80134f0:	8203      	strh	r3, [r0, #16]
 80134f2:	4b01      	ldr	r3, [pc, #4]	@ (80134f8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80134f4:	6003      	str	r3, [r0, #0]
 80134f6:	bd30      	pop	{r4, r5, pc}
 80134f8:	0802856c 	.word	0x0802856c

080134fc <_ZNK8touchgfx9ConstFont4findEt>:
 80134fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80134fe:	6944      	ldr	r4, [r0, #20]
 8013500:	b3bc      	cbz	r4, 8013572 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013502:	88a3      	ldrh	r3, [r4, #4]
 8013504:	8b02      	ldrh	r2, [r0, #24]
 8013506:	1acb      	subs	r3, r1, r3
 8013508:	f102 32ff 	add.w	r2, r2, #4294967295
 801350c:	d431      	bmi.n	8013572 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801350e:	4293      	cmp	r3, r2
 8013510:	dd0c      	ble.n	801352c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8013512:	230e      	movs	r3, #14
 8013514:	fb03 4302 	mla	r3, r3, r2, r4
 8013518:	889b      	ldrh	r3, [r3, #4]
 801351a:	1a5b      	subs	r3, r3, r1
 801351c:	1ad3      	subs	r3, r2, r3
 801351e:	429a      	cmp	r2, r3
 8013520:	db27      	blt.n	8013572 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013522:	2b00      	cmp	r3, #0
 8013524:	bfbc      	itt	lt
 8013526:	2302      	movlt	r3, #2
 8013528:	fb92 f3f3 	sdivlt	r3, r2, r3
 801352c:	2500      	movs	r5, #0
 801352e:	260e      	movs	r6, #14
 8013530:	4295      	cmp	r5, r2
 8013532:	dc1e      	bgt.n	8013572 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013534:	fb06 4003 	mla	r0, r6, r3, r4
 8013538:	8887      	ldrh	r7, [r0, #4]
 801353a:	42b9      	cmp	r1, r7
 801353c:	d01a      	beq.n	8013574 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801353e:	d20d      	bcs.n	801355c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8013540:	1e5a      	subs	r2, r3, #1
 8013542:	4295      	cmp	r5, r2
 8013544:	dc15      	bgt.n	8013572 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013546:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801354a:	1a5b      	subs	r3, r3, r1
 801354c:	1ad3      	subs	r3, r2, r3
 801354e:	429a      	cmp	r2, r3
 8013550:	db0f      	blt.n	8013572 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013552:	429d      	cmp	r5, r3
 8013554:	ddec      	ble.n	8013530 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8013556:	1953      	adds	r3, r2, r5
 8013558:	105b      	asrs	r3, r3, #1
 801355a:	e7e9      	b.n	8013530 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801355c:	1c5d      	adds	r5, r3, #1
 801355e:	42aa      	cmp	r2, r5
 8013560:	db07      	blt.n	8013572 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013562:	8a43      	ldrh	r3, [r0, #18]
 8013564:	1acb      	subs	r3, r1, r3
 8013566:	442b      	add	r3, r5
 8013568:	429d      	cmp	r5, r3
 801356a:	dc02      	bgt.n	8013572 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801356c:	429a      	cmp	r2, r3
 801356e:	dadf      	bge.n	8013530 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8013570:	e7f1      	b.n	8013556 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8013572:	2000      	movs	r0, #0
 8013574:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013576 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8013576:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013578:	4604      	mov	r4, r0
 801357a:	4617      	mov	r7, r2
 801357c:	461e      	mov	r6, r3
 801357e:	b911      	cbnz	r1, 8013586 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8013580:	2500      	movs	r5, #0
 8013582:	4628      	mov	r0, r5
 8013584:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013586:	290a      	cmp	r1, #10
 8013588:	d0fa      	beq.n	8013580 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801358a:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 801358e:	4291      	cmp	r1, r2
 8013590:	d0f6      	beq.n	8013580 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8013592:	f242 020b 	movw	r2, #8203	@ 0x200b
 8013596:	4291      	cmp	r1, r2
 8013598:	d0f2      	beq.n	8013580 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801359a:	f7ff ffaf 	bl	80134fc <_ZNK8touchgfx9ConstFont4findEt>
 801359e:	4605      	mov	r5, r0
 80135a0:	b950      	cbnz	r0, 80135b8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80135a2:	6823      	ldr	r3, [r4, #0]
 80135a4:	4620      	mov	r0, r4
 80135a6:	691b      	ldr	r3, [r3, #16]
 80135a8:	4798      	blx	r3
 80135aa:	4601      	mov	r1, r0
 80135ac:	4620      	mov	r0, r4
 80135ae:	f7ff ffa5 	bl	80134fc <_ZNK8touchgfx9ConstFont4findEt>
 80135b2:	4605      	mov	r5, r0
 80135b4:	2800      	cmp	r0, #0
 80135b6:	d0e3      	beq.n	8013580 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80135b8:	6823      	ldr	r3, [r4, #0]
 80135ba:	4629      	mov	r1, r5
 80135bc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80135be:	4620      	mov	r0, r4
 80135c0:	4798      	blx	r3
 80135c2:	6038      	str	r0, [r7, #0]
 80135c4:	6823      	ldr	r3, [r4, #0]
 80135c6:	4620      	mov	r0, r4
 80135c8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80135ca:	4798      	blx	r3
 80135cc:	7030      	strb	r0, [r6, #0]
 80135ce:	e7d8      	b.n	8013582 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080135d0 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80135d0:	2000      	movs	r0, #0
 80135d2:	4770      	bx	lr

080135d4 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80135d4:	2001      	movs	r0, #1
 80135d6:	4770      	bx	lr

080135d8 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80135d8:	2002      	movs	r0, #2
 80135da:	4770      	bx	lr

080135dc <_ZN8touchgfx6ScreenD1Ev>:
 80135dc:	4770      	bx	lr

080135de <_ZN8touchgfx12GestureEventD1Ev>:
 80135de:	4770      	bx	lr

080135e0 <_ZN8touchgfx9DragEventD1Ev>:
 80135e0:	4770      	bx	lr

080135e2 <_ZN8touchgfx10ClickEventD1Ev>:
 80135e2:	4770      	bx	lr

080135e4 <_ZN8touchgfx10ClickEventD0Ev>:
 80135e4:	b510      	push	{r4, lr}
 80135e6:	210c      	movs	r1, #12
 80135e8:	4604      	mov	r4, r0
 80135ea:	f010 ff26 	bl	802443a <_ZdlPvj>
 80135ee:	4620      	mov	r0, r4
 80135f0:	bd10      	pop	{r4, pc}

080135f2 <_ZN8touchgfx9DragEventD0Ev>:
 80135f2:	b510      	push	{r4, lr}
 80135f4:	2110      	movs	r1, #16
 80135f6:	4604      	mov	r4, r0
 80135f8:	f010 ff1f 	bl	802443a <_ZdlPvj>
 80135fc:	4620      	mov	r0, r4
 80135fe:	bd10      	pop	{r4, pc}

08013600 <_ZN8touchgfx12GestureEventD0Ev>:
 8013600:	b510      	push	{r4, lr}
 8013602:	210c      	movs	r1, #12
 8013604:	4604      	mov	r4, r0
 8013606:	f010 ff18 	bl	802443a <_ZdlPvj>
 801360a:	4620      	mov	r0, r4
 801360c:	bd10      	pop	{r4, pc}

0801360e <_ZN8touchgfx6ScreenD0Ev>:
 801360e:	b510      	push	{r4, lr}
 8013610:	213c      	movs	r1, #60	@ 0x3c
 8013612:	4604      	mov	r4, r0
 8013614:	f010 ff11 	bl	802443a <_ZdlPvj>
 8013618:	4620      	mov	r0, r4
 801361a:	bd10      	pop	{r4, pc}

0801361c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801361c:	b530      	push	{r4, r5, lr}
 801361e:	460d      	mov	r5, r1
 8013620:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8013622:	b087      	sub	sp, #28
 8013624:	4604      	mov	r4, r0
 8013626:	b301      	cbz	r1, 801366a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8013628:	a801      	add	r0, sp, #4
 801362a:	f7ff fb83 	bl	8012d34 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801362e:	892a      	ldrh	r2, [r5, #8]
 8013630:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8013634:	7928      	ldrb	r0, [r5, #4]
 8013636:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801363a:	f88d 0010 	strb.w	r0, [sp, #16]
 801363e:	1ad2      	subs	r2, r2, r3
 8013640:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8013642:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8013644:	f8ad 1012 	strh.w	r1, [sp, #18]
 8013648:	441a      	add	r2, r3
 801364a:	896b      	ldrh	r3, [r5, #10]
 801364c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8013650:	f8ad 2014 	strh.w	r2, [sp, #20]
 8013654:	1b5b      	subs	r3, r3, r5
 8013656:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 8013658:	442b      	add	r3, r5
 801365a:	4d05      	ldr	r5, [pc, #20]	@ (8013670 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801365c:	9503      	str	r5, [sp, #12]
 801365e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013662:	6803      	ldr	r3, [r0, #0]
 8013664:	a903      	add	r1, sp, #12
 8013666:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8013668:	4798      	blx	r3
 801366a:	b007      	add	sp, #28
 801366c:	bd30      	pop	{r4, r5, pc}
 801366e:	bf00      	nop
 8013670:	080285fc 	.word	0x080285fc

08013674 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8013674:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013678:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 801367a:	b08a      	sub	sp, #40	@ 0x28
 801367c:	4604      	mov	r4, r0
 801367e:	460d      	mov	r5, r1
 8013680:	b113      	cbz	r3, 8013688 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8013682:	790b      	ldrb	r3, [r1, #4]
 8013684:	2b00      	cmp	r3, #0
 8013686:	d044      	beq.n	8013712 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8013688:	f104 0804 	add.w	r8, r4, #4
 801368c:	4641      	mov	r1, r8
 801368e:	a803      	add	r0, sp, #12
 8013690:	f7ff fb50 	bl	8012d34 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013694:	792b      	ldrb	r3, [r5, #4]
 8013696:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801369a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801369e:	b983      	cbnz	r3, 80136c2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80136a0:	892a      	ldrh	r2, [r5, #8]
 80136a2:	88e9      	ldrh	r1, [r5, #6]
 80136a4:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 80136a8:	1b92      	subs	r2, r2, r6
 80136aa:	1bc9      	subs	r1, r1, r7
 80136ac:	9301      	str	r3, [sp, #4]
 80136ae:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 80136b2:	9300      	str	r3, [sp, #0]
 80136b4:	b212      	sxth	r2, r2
 80136b6:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 80136ba:	b209      	sxth	r1, r1
 80136bc:	4640      	mov	r0, r8
 80136be:	f7f8 fc99 	bl	800bff4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80136c2:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80136c4:	b329      	cbz	r1, 8013712 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80136c6:	a805      	add	r0, sp, #20
 80136c8:	f7ff fb34 	bl	8012d34 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80136cc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80136d0:	792b      	ldrb	r3, [r5, #4]
 80136d2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80136d4:	f88d 3020 	strb.w	r3, [sp, #32]
 80136d8:	1abf      	subs	r7, r7, r2
 80136da:	88ea      	ldrh	r2, [r5, #6]
 80136dc:	4417      	add	r7, r2
 80136de:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 80136e0:	4417      	add	r7, r2
 80136e2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80136e6:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 80136ea:	1ab6      	subs	r6, r6, r2
 80136ec:	892a      	ldrh	r2, [r5, #8]
 80136ee:	4416      	add	r6, r2
 80136f0:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80136f2:	4416      	add	r6, r2
 80136f4:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 80136f8:	4a07      	ldr	r2, [pc, #28]	@ (8013718 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80136fa:	9207      	str	r2, [sp, #28]
 80136fc:	2600      	movs	r6, #0
 80136fe:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 8013702:	6803      	ldr	r3, [r0, #0]
 8013704:	a907      	add	r1, sp, #28
 8013706:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8013708:	4798      	blx	r3
 801370a:	792b      	ldrb	r3, [r5, #4]
 801370c:	b10b      	cbz	r3, 8013712 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801370e:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 8013712:	b00a      	add	sp, #40	@ 0x28
 8013714:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013718:	080285d4 	.word	0x080285d4

0801371c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801371c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013720:	460c      	mov	r4, r1
 8013722:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8013724:	b088      	sub	sp, #32
 8013726:	4605      	mov	r5, r0
 8013728:	2900      	cmp	r1, #0
 801372a:	d06d      	beq.n	8013808 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801372c:	4668      	mov	r0, sp
 801372e:	f7ff fb01 	bl	8012d34 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013732:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 8013734:	88e3      	ldrh	r3, [r4, #6]
 8013736:	f9bd 8000 	ldrsh.w	r8, [sp]
 801373a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801373e:	440b      	add	r3, r1
 8013740:	b21b      	sxth	r3, r3
 8013742:	4543      	cmp	r3, r8
 8013744:	db31      	blt.n	80137aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013746:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801374a:	44c4      	add	ip, r8
 801374c:	fa0f fc8c 	sxth.w	ip, ip
 8013750:	4563      	cmp	r3, ip
 8013752:	da2a      	bge.n	80137aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013754:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 8013756:	8926      	ldrh	r6, [r4, #8]
 8013758:	4416      	add	r6, r2
 801375a:	b236      	sxth	r6, r6
 801375c:	42be      	cmp	r6, r7
 801375e:	db24      	blt.n	80137aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013760:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8013764:	4438      	add	r0, r7
 8013766:	b200      	sxth	r0, r0
 8013768:	4286      	cmp	r6, r0
 801376a:	da1e      	bge.n	80137aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801376c:	8963      	ldrh	r3, [r4, #10]
 801376e:	4419      	add	r1, r3
 8013770:	b209      	sxth	r1, r1
 8013772:	4541      	cmp	r1, r8
 8013774:	db08      	blt.n	8013788 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8013776:	4561      	cmp	r1, ip
 8013778:	da06      	bge.n	8013788 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801377a:	89a3      	ldrh	r3, [r4, #12]
 801377c:	441a      	add	r2, r3
 801377e:	b212      	sxth	r2, r2
 8013780:	42ba      	cmp	r2, r7
 8013782:	db01      	blt.n	8013788 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8013784:	4282      	cmp	r2, r0
 8013786:	db10      	blt.n	80137aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013788:	4b21      	ldr	r3, [pc, #132]	@ (8013810 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801378a:	9304      	str	r3, [sp, #16]
 801378c:	2302      	movs	r3, #2
 801378e:	f88d 3014 	strb.w	r3, [sp, #20]
 8013792:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8013794:	2300      	movs	r3, #0
 8013796:	f8ad 3016 	strh.w	r3, [sp, #22]
 801379a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801379e:	f8ad 301a 	strh.w	r3, [sp, #26]
 80137a2:	6803      	ldr	r3, [r0, #0]
 80137a4:	a904      	add	r1, sp, #16
 80137a6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80137a8:	4798      	blx	r3
 80137aa:	1d29      	adds	r1, r5, #4
 80137ac:	a802      	add	r0, sp, #8
 80137ae:	f7ff fac1 	bl	8012d34 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80137b2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80137b6:	88e0      	ldrh	r0, [r4, #6]
 80137b8:	7921      	ldrb	r1, [r4, #4]
 80137ba:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 80137be:	8922      	ldrh	r2, [r4, #8]
 80137c0:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 80137c2:	f88d 1014 	strb.w	r1, [sp, #20]
 80137c6:	eba3 0808 	sub.w	r8, r3, r8
 80137ca:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80137ce:	1bdf      	subs	r7, r3, r7
 80137d0:	b2bb      	uxth	r3, r7
 80137d2:	fa1f f888 	uxth.w	r8, r8
 80137d6:	8967      	ldrh	r7, [r4, #10]
 80137d8:	89a4      	ldrh	r4, [r4, #12]
 80137da:	4440      	add	r0, r8
 80137dc:	4460      	add	r0, ip
 80137de:	441a      	add	r2, r3
 80137e0:	44b8      	add	r8, r7
 80137e2:	4423      	add	r3, r4
 80137e4:	f8ad 0016 	strh.w	r0, [sp, #22]
 80137e8:	4433      	add	r3, r6
 80137ea:	4432      	add	r2, r6
 80137ec:	44e0      	add	r8, ip
 80137ee:	4c09      	ldr	r4, [pc, #36]	@ (8013814 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80137f0:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 80137f2:	9404      	str	r4, [sp, #16]
 80137f4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80137f8:	f8ad 801a 	strh.w	r8, [sp, #26]
 80137fc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013800:	6803      	ldr	r3, [r0, #0]
 8013802:	a904      	add	r1, sp, #16
 8013804:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8013806:	4798      	blx	r3
 8013808:	b008      	add	sp, #32
 801380a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801380e:	bf00      	nop
 8013810:	080285d4 	.word	0x080285d4
 8013814:	080285e8 	.word	0x080285e8

08013818 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8013818:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801381a:	4604      	mov	r4, r0
 801381c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8013820:	3201      	adds	r2, #1
 8013822:	d112      	bne.n	801384a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8013824:	6803      	ldr	r3, [r0, #0]
 8013826:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801382a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801382e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8013832:	2500      	movs	r5, #0
 8013834:	9500      	str	r5, [sp, #0]
 8013836:	466d      	mov	r5, sp
 8013838:	4629      	mov	r1, r5
 801383a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801383e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013840:	4798      	blx	r3
 8013842:	e895 0003 	ldmia.w	r5, {r0, r1}
 8013846:	e884 0003 	stmia.w	r4, {r0, r1}
 801384a:	4620      	mov	r0, r4
 801384c:	b003      	add	sp, #12
 801384e:	bd30      	pop	{r4, r5, pc}

08013850 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8013850:	b513      	push	{r0, r1, r4, lr}
 8013852:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8013856:	3301      	adds	r3, #1
 8013858:	4604      	mov	r4, r0
 801385a:	d109      	bne.n	8013870 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801385c:	4601      	mov	r1, r0
 801385e:	4668      	mov	r0, sp
 8013860:	f7ff fa68 	bl	8012d34 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013864:	f8bd 3000 	ldrh.w	r3, [sp]
 8013868:	8423      	strh	r3, [r4, #32]
 801386a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801386e:	8463      	strh	r3, [r4, #34]	@ 0x22
 8013870:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8013874:	b002      	add	sp, #8
 8013876:	bd10      	pop	{r4, pc}

08013878 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8013878:	b513      	push	{r0, r1, r4, lr}
 801387a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 801387e:	3301      	adds	r3, #1
 8013880:	4604      	mov	r4, r0
 8013882:	d109      	bne.n	8013898 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8013884:	4601      	mov	r1, r0
 8013886:	4668      	mov	r0, sp
 8013888:	f7ff fa54 	bl	8012d34 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801388c:	f8bd 3000 	ldrh.w	r3, [sp]
 8013890:	8423      	strh	r3, [r4, #32]
 8013892:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013896:	8463      	strh	r3, [r4, #34]	@ 0x22
 8013898:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 801389c:	b002      	add	sp, #8
 801389e:	bd10      	pop	{r4, pc}

080138a0 <_ZN8touchgfx6ScreenC1Ev>:
 80138a0:	b570      	push	{r4, r5, r6, lr}
 80138a2:	4605      	mov	r5, r0
 80138a4:	4b16      	ldr	r3, [pc, #88]	@ (8013900 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80138a6:	f845 3b04 	str.w	r3, [r5], #4
 80138aa:	2300      	movs	r3, #0
 80138ac:	8103      	strh	r3, [r0, #8]
 80138ae:	8143      	strh	r3, [r0, #10]
 80138b0:	8183      	strh	r3, [r0, #12]
 80138b2:	81c3      	strh	r3, [r0, #14]
 80138b4:	8203      	strh	r3, [r0, #16]
 80138b6:	8243      	strh	r3, [r0, #18]
 80138b8:	8283      	strh	r3, [r0, #20]
 80138ba:	82c3      	strh	r3, [r0, #22]
 80138bc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80138c0:	6203      	str	r3, [r0, #32]
 80138c2:	8483      	strh	r3, [r0, #36]	@ 0x24
 80138c4:	84c3      	strh	r3, [r0, #38]	@ 0x26
 80138c6:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 80138ca:	4a0e      	ldr	r2, [pc, #56]	@ (8013904 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80138cc:	6343      	str	r3, [r0, #52]	@ 0x34
 80138ce:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 80138d2:	4b0d      	ldr	r3, [pc, #52]	@ (8013908 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80138d4:	6042      	str	r2, [r0, #4]
 80138d6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80138da:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 80138dc:	4a0b      	ldr	r2, [pc, #44]	@ (801390c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80138de:	4604      	mov	r4, r0
 80138e0:	2101      	movs	r1, #1
 80138e2:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 80138e6:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 80138ea:	f9b2 1000 	ldrsh.w	r1, [r2]
 80138ee:	4628      	mov	r0, r5
 80138f0:	4798      	blx	r3
 80138f2:	6863      	ldr	r3, [r4, #4]
 80138f4:	4628      	mov	r0, r5
 80138f6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80138f8:	4631      	mov	r1, r6
 80138fa:	4798      	blx	r3
 80138fc:	4620      	mov	r0, r4
 80138fe:	bd70      	pop	{r4, r5, r6, pc}
 8013900:	08028610 	.word	0x08028610
 8013904:	08028160 	.word	0x08028160
 8013908:	2001522e 	.word	0x2001522e
 801390c:	2001522c 	.word	0x2001522c

08013910 <_ZN8touchgfx6Screen4drawEv>:
 8013910:	b507      	push	{r0, r1, r2, lr}
 8013912:	4b09      	ldr	r3, [pc, #36]	@ (8013938 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8013914:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013918:	4b08      	ldr	r3, [pc, #32]	@ (801393c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801391a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801391e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013922:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013926:	6803      	ldr	r3, [r0, #0]
 8013928:	2100      	movs	r1, #0
 801392a:	9100      	str	r1, [sp, #0]
 801392c:	689b      	ldr	r3, [r3, #8]
 801392e:	4669      	mov	r1, sp
 8013930:	4798      	blx	r3
 8013932:	b003      	add	sp, #12
 8013934:	f85d fb04 	ldr.w	pc, [sp], #4
 8013938:	2001522c 	.word	0x2001522c
 801393c:	2001522e 	.word	0x2001522e

08013940 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8013940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013944:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8013948:	2b00      	cmp	r3, #0
 801394a:	b089      	sub	sp, #36	@ 0x24
 801394c:	4680      	mov	r8, r0
 801394e:	460c      	mov	r4, r1
 8013950:	4615      	mov	r5, r2
 8013952:	dd0e      	ble.n	8013972 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8013954:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8013958:	2b00      	cmp	r3, #0
 801395a:	dd0a      	ble.n	8013972 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801395c:	4628      	mov	r0, r5
 801395e:	f7ff ff5b 	bl	8013818 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8013962:	4621      	mov	r1, r4
 8013964:	f7fd feb9 	bl	80116da <_ZNK8touchgfx4Rect9intersectERKS0_>
 8013968:	69eb      	ldr	r3, [r5, #28]
 801396a:	b928      	cbnz	r0, 8013978 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801396c:	461d      	mov	r5, r3
 801396e:	2b00      	cmp	r3, #0
 8013970:	d1f4      	bne.n	801395c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8013972:	b009      	add	sp, #36	@ 0x24
 8013974:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013978:	ae04      	add	r6, sp, #16
 801397a:	2b00      	cmp	r3, #0
 801397c:	f000 80b5 	beq.w	8013aea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8013980:	682b      	ldr	r3, [r5, #0]
 8013982:	4629      	mov	r1, r5
 8013984:	68db      	ldr	r3, [r3, #12]
 8013986:	a802      	add	r0, sp, #8
 8013988:	4798      	blx	r3
 801398a:	4628      	mov	r0, r5
 801398c:	f7ff ff60 	bl	8013850 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8013990:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8013994:	4407      	add	r7, r0
 8013996:	4628      	mov	r0, r5
 8013998:	f7ff ff6e 	bl	8013878 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801399c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80139a0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80139a4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80139a8:	4418      	add	r0, r3
 80139aa:	4621      	mov	r1, r4
 80139ac:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80139b0:	f8ad 0012 	strh.w	r0, [sp, #18]
 80139b4:	b23f      	sxth	r7, r7
 80139b6:	4630      	mov	r0, r6
 80139b8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80139bc:	f8ad 7010 	strh.w	r7, [sp, #16]
 80139c0:	f7f8 fbfc 	bl	800c1bc <_ZN8touchgfx4RectaNERKS0_>
 80139c4:	4628      	mov	r0, r5
 80139c6:	f7ff ff27 	bl	8013818 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80139ca:	4602      	mov	r2, r0
 80139cc:	e896 0003 	ldmia.w	r6, {r0, r1}
 80139d0:	ab06      	add	r3, sp, #24
 80139d2:	e883 0003 	stmia.w	r3, {r0, r1}
 80139d6:	4611      	mov	r1, r2
 80139d8:	4618      	mov	r0, r3
 80139da:	f7f8 fbef 	bl	800c1bc <_ZN8touchgfx4RectaNERKS0_>
 80139de:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80139e2:	f9b4 1000 	ldrsh.w	r1, [r4]
 80139e6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80139ea:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80139ee:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80139f2:	4299      	cmp	r1, r3
 80139f4:	d10b      	bne.n	8013a0e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80139f6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80139fa:	4552      	cmp	r2, sl
 80139fc:	d107      	bne.n	8013a0e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80139fe:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8013a02:	455a      	cmp	r2, fp
 8013a04:	d103      	bne.n	8013a0e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8013a06:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8013a0a:	454a      	cmp	r2, r9
 8013a0c:	d06d      	beq.n	8013aea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8013a0e:	f1bb 0f00 	cmp.w	fp, #0
 8013a12:	dd65      	ble.n	8013ae0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8013a14:	f1b9 0f00 	cmp.w	r9, #0
 8013a18:	dd62      	ble.n	8013ae0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8013a1a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013a1e:	fa1f f08a 	uxth.w	r0, sl
 8013a22:	4552      	cmp	r2, sl
 8013a24:	9000      	str	r0, [sp, #0]
 8013a26:	da12      	bge.n	8013a4e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8013a28:	9301      	str	r3, [sp, #4]
 8013a2a:	9b00      	ldr	r3, [sp, #0]
 8013a2c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013a30:	f8ad 2012 	strh.w	r2, [sp, #18]
 8013a34:	1a9a      	subs	r2, r3, r2
 8013a36:	f8ad 1010 	strh.w	r1, [sp, #16]
 8013a3a:	f8ad 0014 	strh.w	r0, [sp, #20]
 8013a3e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8013a42:	69ea      	ldr	r2, [r5, #28]
 8013a44:	4631      	mov	r1, r6
 8013a46:	4640      	mov	r0, r8
 8013a48:	f7ff ff7a 	bl	8013940 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013a4c:	9b01      	ldr	r3, [sp, #4]
 8013a4e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8013a52:	429a      	cmp	r2, r3
 8013a54:	b29f      	uxth	r7, r3
 8013a56:	da0d      	bge.n	8013a74 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8013a58:	f8ad 2010 	strh.w	r2, [sp, #16]
 8013a5c:	1aba      	subs	r2, r7, r2
 8013a5e:	f8ad a012 	strh.w	sl, [sp, #18]
 8013a62:	f8ad 2014 	strh.w	r2, [sp, #20]
 8013a66:	f8ad 9016 	strh.w	r9, [sp, #22]
 8013a6a:	69ea      	ldr	r2, [r5, #28]
 8013a6c:	4631      	mov	r1, r6
 8013a6e:	4640      	mov	r0, r8
 8013a70:	f7ff ff66 	bl	8013940 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013a74:	8822      	ldrh	r2, [r4, #0]
 8013a76:	88a3      	ldrh	r3, [r4, #4]
 8013a78:	445f      	add	r7, fp
 8013a7a:	4413      	add	r3, r2
 8013a7c:	b29b      	uxth	r3, r3
 8013a7e:	b2bf      	uxth	r7, r7
 8013a80:	b23a      	sxth	r2, r7
 8013a82:	b219      	sxth	r1, r3
 8013a84:	4291      	cmp	r1, r2
 8013a86:	dd0d      	ble.n	8013aa4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8013a88:	1bdb      	subs	r3, r3, r7
 8013a8a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8013a8e:	f8ad a012 	strh.w	sl, [sp, #18]
 8013a92:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013a96:	f8ad 9016 	strh.w	r9, [sp, #22]
 8013a9a:	69ea      	ldr	r2, [r5, #28]
 8013a9c:	4631      	mov	r1, r6
 8013a9e:	4640      	mov	r0, r8
 8013aa0:	f7ff ff4e 	bl	8013940 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013aa4:	88e2      	ldrh	r2, [r4, #6]
 8013aa6:	8863      	ldrh	r3, [r4, #2]
 8013aa8:	4413      	add	r3, r2
 8013aaa:	9a00      	ldr	r2, [sp, #0]
 8013aac:	444a      	add	r2, r9
 8013aae:	b29b      	uxth	r3, r3
 8013ab0:	fa1f f982 	uxth.w	r9, r2
 8013ab4:	fa0f f289 	sxth.w	r2, r9
 8013ab8:	b219      	sxth	r1, r3
 8013aba:	428a      	cmp	r2, r1
 8013abc:	da15      	bge.n	8013aea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8013abe:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013ac2:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013ac6:	f8ad 1014 	strh.w	r1, [sp, #20]
 8013aca:	eba3 0309 	sub.w	r3, r3, r9
 8013ace:	f8ad 0010 	strh.w	r0, [sp, #16]
 8013ad2:	f8ad 2012 	strh.w	r2, [sp, #18]
 8013ad6:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013ada:	69ea      	ldr	r2, [r5, #28]
 8013adc:	4631      	mov	r1, r6
 8013ade:	e001      	b.n	8013ae4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8013ae0:	69ea      	ldr	r2, [r5, #28]
 8013ae2:	4621      	mov	r1, r4
 8013ae4:	4640      	mov	r0, r8
 8013ae6:	f7ff ff2b 	bl	8013940 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013aea:	4628      	mov	r0, r5
 8013aec:	f7ff fe94 	bl	8013818 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8013af0:	6861      	ldr	r1, [r4, #4]
 8013af2:	4602      	mov	r2, r0
 8013af4:	6820      	ldr	r0, [r4, #0]
 8013af6:	4633      	mov	r3, r6
 8013af8:	c303      	stmia	r3!, {r0, r1}
 8013afa:	4611      	mov	r1, r2
 8013afc:	4630      	mov	r0, r6
 8013afe:	f7f8 fb5d 	bl	800c1bc <_ZN8touchgfx4RectaNERKS0_>
 8013b02:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8013b06:	2b00      	cmp	r3, #0
 8013b08:	f77f af33 	ble.w	8013972 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8013b0c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8013b10:	2b00      	cmp	r3, #0
 8013b12:	f77f af2e 	ble.w	8013972 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8013b16:	4628      	mov	r0, r5
 8013b18:	f7ff fe9a 	bl	8013850 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8013b1c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8013b20:	1a18      	subs	r0, r3, r0
 8013b22:	f8ad 0010 	strh.w	r0, [sp, #16]
 8013b26:	4628      	mov	r0, r5
 8013b28:	f7ff fea6 	bl	8013878 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8013b2c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8013b30:	1a18      	subs	r0, r3, r0
 8013b32:	f8ad 0012 	strh.w	r0, [sp, #18]
 8013b36:	682b      	ldr	r3, [r5, #0]
 8013b38:	4631      	mov	r1, r6
 8013b3a:	689b      	ldr	r3, [r3, #8]
 8013b3c:	4628      	mov	r0, r5
 8013b3e:	4798      	blx	r3
 8013b40:	e717      	b.n	8013972 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08013b42 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8013b42:	b570      	push	{r4, r5, r6, lr}
 8013b44:	460c      	mov	r4, r1
 8013b46:	b086      	sub	sp, #24
 8013b48:	1d06      	adds	r6, r0, #4
 8013b4a:	2300      	movs	r3, #0
 8013b4c:	4631      	mov	r1, r6
 8013b4e:	4605      	mov	r5, r0
 8013b50:	a802      	add	r0, sp, #8
 8013b52:	9301      	str	r3, [sp, #4]
 8013b54:	f7ff f8ee 	bl	8012d34 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013b58:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8013b5c:	8822      	ldrh	r2, [r4, #0]
 8013b5e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8013b62:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013b66:	f8ad 0014 	strh.w	r0, [sp, #20]
 8013b6a:	1ad2      	subs	r2, r2, r3
 8013b6c:	8863      	ldrh	r3, [r4, #2]
 8013b6e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8013b72:	1a5b      	subs	r3, r3, r1
 8013b74:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8013b78:	f8ad 1016 	strh.w	r1, [sp, #22]
 8013b7c:	aa01      	add	r2, sp, #4
 8013b7e:	a904      	add	r1, sp, #16
 8013b80:	4630      	mov	r0, r6
 8013b82:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013b86:	f7f8 fbf1 	bl	800c36c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8013b8a:	9a01      	ldr	r2, [sp, #4]
 8013b8c:	b11a      	cbz	r2, 8013b96 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8013b8e:	4621      	mov	r1, r4
 8013b90:	4628      	mov	r0, r5
 8013b92:	f7ff fed5 	bl	8013940 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013b96:	b006      	add	sp, #24
 8013b98:	bd70      	pop	{r4, r5, r6, pc}

08013b9a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8013b9a:	b530      	push	{r4, r5, lr}
 8013b9c:	4602      	mov	r2, r0
 8013b9e:	4604      	mov	r4, r0
 8013ba0:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8013ba4:	b085      	sub	sp, #20
 8013ba6:	460d      	mov	r5, r1
 8013ba8:	6851      	ldr	r1, [r2, #4]
 8013baa:	466b      	mov	r3, sp
 8013bac:	c303      	stmia	r3!, {r0, r1}
 8013bae:	4629      	mov	r1, r5
 8013bb0:	4668      	mov	r0, sp
 8013bb2:	f7f8 fb03 	bl	800c1bc <_ZN8touchgfx4RectaNERKS0_>
 8013bb6:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8013bba:	b12b      	cbz	r3, 8013bc8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8013bbc:	4669      	mov	r1, sp
 8013bbe:	4620      	mov	r0, r4
 8013bc0:	f7ff ffbf 	bl	8013b42 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8013bc4:	b005      	add	sp, #20
 8013bc6:	bd30      	pop	{r4, r5, pc}
 8013bc8:	3404      	adds	r4, #4
 8013bca:	4621      	mov	r1, r4
 8013bcc:	a802      	add	r0, sp, #8
 8013bce:	f7ff f8b1 	bl	8012d34 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013bd2:	f8bd 3000 	ldrh.w	r3, [sp]
 8013bd6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8013bda:	1a9b      	subs	r3, r3, r2
 8013bdc:	f8ad 3000 	strh.w	r3, [sp]
 8013be0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8013be4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013be8:	4669      	mov	r1, sp
 8013bea:	1a9b      	subs	r3, r3, r2
 8013bec:	4620      	mov	r0, r4
 8013bee:	f8ad 3002 	strh.w	r3, [sp, #2]
 8013bf2:	f7f8 fb82 	bl	800c2fa <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8013bf6:	e7e5      	b.n	8013bc4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08013bf8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8013bf8:	680a      	ldr	r2, [r1, #0]
 8013bfa:	460b      	mov	r3, r1
 8013bfc:	6992      	ldr	r2, [r2, #24]
 8013bfe:	1d01      	adds	r1, r0, #4
 8013c00:	4618      	mov	r0, r3
 8013c02:	4710      	bx	r2

08013c04 <_ZN8touchgfx12TextProviderC1Ev>:
 8013c04:	b538      	push	{r3, r4, r5, lr}
 8013c06:	2500      	movs	r5, #0
 8013c08:	2302      	movs	r3, #2
 8013c0a:	4604      	mov	r4, r0
 8013c0c:	e9c0 5500 	strd	r5, r5, [r0]
 8013c10:	7403      	strb	r3, [r0, #16]
 8013c12:	6145      	str	r5, [r0, #20]
 8013c14:	7605      	strb	r5, [r0, #24]
 8013c16:	83c5      	strh	r5, [r0, #30]
 8013c18:	8405      	strh	r5, [r0, #32]
 8013c1a:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8013c1c:	8705      	strh	r5, [r0, #56]	@ 0x38
 8013c1e:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 8013c20:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 8013c24:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8013c28:	220e      	movs	r2, #14
 8013c2a:	4629      	mov	r1, r5
 8013c2c:	304c      	adds	r0, #76	@ 0x4c
 8013c2e:	f011 fd48 	bl	80256c2 <memset>
 8013c32:	2301      	movs	r3, #1
 8013c34:	4620      	mov	r0, r4
 8013c36:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 8013c3a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8013c3e:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8013c42:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8013c46:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 8013c4a:	f7f0 fe41 	bl	80048d0 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8013c4e:	4620      	mov	r0, r4
 8013c50:	bd38      	pop	{r3, r4, r5, pc}

08013c52 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8013c52:	b530      	push	{r4, r5, lr}
 8013c54:	2500      	movs	r5, #0
 8013c56:	2401      	movs	r4, #1
 8013c58:	6843      	ldr	r3, [r0, #4]
 8013c5a:	b913      	cbnz	r3, 8013c62 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8013c5c:	6803      	ldr	r3, [r0, #0]
 8013c5e:	b313      	cbz	r3, 8013ca6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8013c60:	6043      	str	r3, [r0, #4]
 8013c62:	7e03      	ldrb	r3, [r0, #24]
 8013c64:	b143      	cbz	r3, 8013c78 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8013c66:	6943      	ldr	r3, [r0, #20]
 8013c68:	b12b      	cbz	r3, 8013c76 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8013c6a:	881a      	ldrh	r2, [r3, #0]
 8013c6c:	b11a      	cbz	r2, 8013c76 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8013c6e:	1c9a      	adds	r2, r3, #2
 8013c70:	6142      	str	r2, [r0, #20]
 8013c72:	8818      	ldrh	r0, [r3, #0]
 8013c74:	bd30      	pop	{r4, r5, pc}
 8013c76:	7605      	strb	r5, [r0, #24]
 8013c78:	6843      	ldr	r3, [r0, #4]
 8013c7a:	8819      	ldrh	r1, [r3, #0]
 8013c7c:	b199      	cbz	r1, 8013ca6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8013c7e:	1c9a      	adds	r2, r3, #2
 8013c80:	2902      	cmp	r1, #2
 8013c82:	6042      	str	r2, [r0, #4]
 8013c84:	d1f5      	bne.n	8013c72 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8013c86:	7c03      	ldrb	r3, [r0, #16]
 8013c88:	2b01      	cmp	r3, #1
 8013c8a:	d8e5      	bhi.n	8013c58 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8013c8c:	1c5a      	adds	r2, r3, #1
 8013c8e:	3302      	adds	r3, #2
 8013c90:	7402      	strb	r2, [r0, #16]
 8013c92:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8013c96:	6143      	str	r3, [r0, #20]
 8013c98:	2b00      	cmp	r3, #0
 8013c9a:	d0dd      	beq.n	8013c58 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8013c9c:	881b      	ldrh	r3, [r3, #0]
 8013c9e:	2b00      	cmp	r3, #0
 8013ca0:	d0da      	beq.n	8013c58 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8013ca2:	7604      	strb	r4, [r0, #24]
 8013ca4:	e7d8      	b.n	8013c58 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8013ca6:	2000      	movs	r0, #0
 8013ca8:	e7e4      	b.n	8013c74 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08013caa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8013caa:	b430      	push	{r4, r5}
 8013cac:	6001      	str	r1, [r0, #0]
 8013cae:	2100      	movs	r1, #0
 8013cb0:	6041      	str	r1, [r0, #4]
 8013cb2:	6815      	ldr	r5, [r2, #0]
 8013cb4:	6085      	str	r5, [r0, #8]
 8013cb6:	6852      	ldr	r2, [r2, #4]
 8013cb8:	6443      	str	r3, [r0, #68]	@ 0x44
 8013cba:	9b02      	ldr	r3, [sp, #8]
 8013cbc:	60c2      	str	r2, [r0, #12]
 8013cbe:	7401      	strb	r1, [r0, #16]
 8013cc0:	6141      	str	r1, [r0, #20]
 8013cc2:	7601      	strb	r1, [r0, #24]
 8013cc4:	8701      	strh	r1, [r0, #56]	@ 0x38
 8013cc6:	8401      	strh	r1, [r0, #32]
 8013cc8:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 8013ccc:	6483      	str	r3, [r0, #72]	@ 0x48
 8013cce:	bc30      	pop	{r4, r5}
 8013cd0:	f7f0 bdfe 	b.w	80048d0 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08013cd4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8013cd4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013cd6:	4605      	mov	r5, r0
 8013cd8:	4608      	mov	r0, r1
 8013cda:	b1e9      	cbz	r1, 8013d18 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8013cdc:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8013ce0:	460b      	mov	r3, r1
 8013ce2:	f101 0708 	add.w	r7, r1, #8
 8013ce6:	4622      	mov	r2, r4
 8013ce8:	6818      	ldr	r0, [r3, #0]
 8013cea:	6859      	ldr	r1, [r3, #4]
 8013cec:	4626      	mov	r6, r4
 8013cee:	c603      	stmia	r6!, {r0, r1}
 8013cf0:	3308      	adds	r3, #8
 8013cf2:	42bb      	cmp	r3, r7
 8013cf4:	4634      	mov	r4, r6
 8013cf6:	d1f7      	bne.n	8013ce8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8013cf8:	6818      	ldr	r0, [r3, #0]
 8013cfa:	6030      	str	r0, [r6, #0]
 8013cfc:	889b      	ldrh	r3, [r3, #4]
 8013cfe:	80b3      	strh	r3, [r6, #4]
 8013d00:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8013d04:	015b      	lsls	r3, r3, #5
 8013d06:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8013d0a:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8013d0e:	430b      	orrs	r3, r1
 8013d10:	425b      	negs	r3, r3
 8013d12:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8013d16:	4610      	mov	r0, r2
 8013d18:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013d1a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8013d1a:	b538      	push	{r3, r4, r5, lr}
 8013d1c:	460c      	mov	r4, r1
 8013d1e:	6811      	ldr	r1, [r2, #0]
 8013d20:	4610      	mov	r0, r2
 8013d22:	68cd      	ldr	r5, [r1, #12]
 8013d24:	4619      	mov	r1, r3
 8013d26:	47a8      	blx	r5
 8013d28:	2800      	cmp	r0, #0
 8013d2a:	bf08      	it	eq
 8013d2c:	4620      	moveq	r0, r4
 8013d2e:	bd38      	pop	{r3, r4, r5, pc}

08013d30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8013d30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013d34:	468c      	mov	ip, r1
 8013d36:	4605      	mov	r5, r0
 8013d38:	4614      	mov	r4, r2
 8013d3a:	b942      	cbnz	r2, 8013d4e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8013d3c:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8013d40:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8013d44:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 8013d48:	4620      	mov	r0, r4
 8013d4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013d4e:	7b50      	ldrb	r0, [r2, #13]
 8013d50:	8893      	ldrh	r3, [r2, #4]
 8013d52:	0106      	lsls	r6, r0, #4
 8013d54:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8013d58:	79e6      	ldrb	r6, [r4, #7]
 8013d5a:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 8013d5e:	4316      	orrs	r6, r2
 8013d60:	185a      	adds	r2, r3, r1
 8013d62:	b291      	uxth	r1, r2
 8013d64:	291d      	cmp	r1, #29
 8013d66:	b2b7      	uxth	r7, r6
 8013d68:	d87e      	bhi.n	8013e68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8013d6a:	2201      	movs	r2, #1
 8013d6c:	408a      	lsls	r2, r1
 8013d6e:	498a      	ldr	r1, [pc, #552]	@ (8013f98 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 8013d70:	420a      	tst	r2, r1
 8013d72:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8013d76:	d12d      	bne.n	8013dd4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8013d78:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8013d7c:	d074      	beq.n	8013e68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8013d7e:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8013d82:	4623      	mov	r3, r4
 8013d84:	f104 0e08 	add.w	lr, r4, #8
 8013d88:	4614      	mov	r4, r2
 8013d8a:	6818      	ldr	r0, [r3, #0]
 8013d8c:	6859      	ldr	r1, [r3, #4]
 8013d8e:	4694      	mov	ip, r2
 8013d90:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8013d94:	3308      	adds	r3, #8
 8013d96:	4573      	cmp	r3, lr
 8013d98:	4662      	mov	r2, ip
 8013d9a:	d1f6      	bne.n	8013d8a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8013d9c:	6818      	ldr	r0, [r3, #0]
 8013d9e:	f8cc 0000 	str.w	r0, [ip]
 8013da2:	889b      	ldrh	r3, [r3, #4]
 8013da4:	f8ac 3004 	strh.w	r3, [ip, #4]
 8013da8:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 8013dac:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 8013db0:	b2b3      	uxth	r3, r6
 8013db2:	1aca      	subs	r2, r1, r3
 8013db4:	b292      	uxth	r2, r2
 8013db6:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 8013dba:	10d2      	asrs	r2, r2, #3
 8013dbc:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 8013dc0:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 8013dc4:	4302      	orrs	r2, r0
 8013dc6:	1bcf      	subs	r7, r1, r7
 8013dc8:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 8013dcc:	1afb      	subs	r3, r7, r3
 8013dce:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 8013dd2:	e7b9      	b.n	8013d48 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8013dd4:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8013dd8:	4623      	mov	r3, r4
 8013dda:	f104 0808 	add.w	r8, r4, #8
 8013dde:	4614      	mov	r4, r2
 8013de0:	6818      	ldr	r0, [r3, #0]
 8013de2:	6859      	ldr	r1, [r3, #4]
 8013de4:	4696      	mov	lr, r2
 8013de6:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8013dea:	3308      	adds	r3, #8
 8013dec:	4543      	cmp	r3, r8
 8013dee:	4672      	mov	r2, lr
 8013df0:	d1f6      	bne.n	8013de0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 8013df2:	6818      	ldr	r0, [r3, #0]
 8013df4:	f8ce 0000 	str.w	r0, [lr]
 8013df8:	889b      	ldrh	r3, [r3, #4]
 8013dfa:	f8ae 3004 	strh.w	r3, [lr, #4]
 8013dfe:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 8013e00:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8013e04:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8013e06:	f640 6333 	movw	r3, #3635	@ 0xe33
 8013e0a:	4299      	cmp	r1, r3
 8013e0c:	d111      	bne.n	8013e32 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 8013e0e:	f8dc 3000 	ldr.w	r3, [ip]
 8013e12:	4660      	mov	r0, ip
 8013e14:	68db      	ldr	r3, [r3, #12]
 8013e16:	4798      	blx	r3
 8013e18:	7b41      	ldrb	r1, [r0, #13]
 8013e1a:	00cb      	lsls	r3, r1, #3
 8013e1c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8013e20:	7a03      	ldrb	r3, [r0, #8]
 8013e22:	4313      	orrs	r3, r2
 8013e24:	064a      	lsls	r2, r1, #25
 8013e26:	bf44      	itt	mi
 8013e28:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8013e2c:	b21b      	sxthmi	r3, r3
 8013e2e:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8013e32:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 8013e36:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 8013e3a:	443b      	add	r3, r7
 8013e3c:	4433      	add	r3, r6
 8013e3e:	b29b      	uxth	r3, r3
 8013e40:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8013e44:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 8013e48:	10db      	asrs	r3, r3, #3
 8013e4a:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8013e4e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8013e52:	4313      	orrs	r3, r2
 8013e54:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 8013e58:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 8013e5c:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 8013e60:	1a9b      	subs	r3, r3, r2
 8013e62:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8013e66:	e76f      	b.n	8013d48 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8013e68:	f023 0204 	bic.w	r2, r3, #4
 8013e6c:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8013e70:	428a      	cmp	r2, r1
 8013e72:	d003      	beq.n	8013e7c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 8013e74:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8013e78:	4293      	cmp	r3, r2
 8013e7a:	d137      	bne.n	8013eec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 8013e7c:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 8013e80:	4622      	mov	r2, r4
 8013e82:	f104 0808 	add.w	r8, r4, #8
 8013e86:	4634      	mov	r4, r6
 8013e88:	6810      	ldr	r0, [r2, #0]
 8013e8a:	6851      	ldr	r1, [r2, #4]
 8013e8c:	46b6      	mov	lr, r6
 8013e8e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8013e92:	3208      	adds	r2, #8
 8013e94:	4542      	cmp	r2, r8
 8013e96:	4676      	mov	r6, lr
 8013e98:	d1f6      	bne.n	8013e88 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 8013e9a:	6810      	ldr	r0, [r2, #0]
 8013e9c:	f8ce 0000 	str.w	r0, [lr]
 8013ea0:	8892      	ldrh	r2, [r2, #4]
 8013ea2:	f8ae 2004 	strh.w	r2, [lr, #4]
 8013ea6:	3b01      	subs	r3, #1
 8013ea8:	b29b      	uxth	r3, r3
 8013eaa:	4662      	mov	r2, ip
 8013eac:	4621      	mov	r1, r4
 8013eae:	4628      	mov	r0, r5
 8013eb0:	f7ff ff33 	bl	8013d1a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8013eb4:	7b41      	ldrb	r1, [r0, #13]
 8013eb6:	00cb      	lsls	r3, r1, #3
 8013eb8:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8013ebc:	7a03      	ldrb	r3, [r0, #8]
 8013ebe:	0648      	lsls	r0, r1, #25
 8013ec0:	ea43 0302 	orr.w	r3, r3, r2
 8013ec4:	bf44      	itt	mi
 8013ec6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8013eca:	b21b      	sxthmi	r3, r3
 8013ecc:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8013ed0:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8013ed4:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 8013ed8:	005b      	lsls	r3, r3, #1
 8013eda:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8013ede:	4313      	orrs	r3, r2
 8013ee0:	115a      	asrs	r2, r3, #5
 8013ee2:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8013ee6:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 8013eea:	e046      	b.n	8013f7a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 8013eec:	00c2      	lsls	r2, r0, #3
 8013eee:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 8013ef2:	7a22      	ldrb	r2, [r4, #8]
 8013ef4:	430a      	orrs	r2, r1
 8013ef6:	0641      	lsls	r1, r0, #25
 8013ef8:	bf44      	itt	mi
 8013efa:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 8013efe:	b212      	sxthmi	r2, r2
 8013f00:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8013f04:	f640 6109 	movw	r1, #3593	@ 0xe09
 8013f08:	f023 0210 	bic.w	r2, r3, #16
 8013f0c:	428a      	cmp	r2, r1
 8013f0e:	d003      	beq.n	8013f18 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 8013f10:	f640 6213 	movw	r2, #3603	@ 0xe13
 8013f14:	4293      	cmp	r3, r2
 8013f16:	d13d      	bne.n	8013f94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 8013f18:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8013f1c:	f104 0808 	add.w	r8, r4, #8
 8013f20:	4696      	mov	lr, r2
 8013f22:	6820      	ldr	r0, [r4, #0]
 8013f24:	6861      	ldr	r1, [r4, #4]
 8013f26:	4616      	mov	r6, r2
 8013f28:	c603      	stmia	r6!, {r0, r1}
 8013f2a:	3408      	adds	r4, #8
 8013f2c:	4544      	cmp	r4, r8
 8013f2e:	4632      	mov	r2, r6
 8013f30:	d1f7      	bne.n	8013f22 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 8013f32:	6820      	ldr	r0, [r4, #0]
 8013f34:	6030      	str	r0, [r6, #0]
 8013f36:	88a1      	ldrh	r1, [r4, #4]
 8013f38:	80b1      	strh	r1, [r6, #4]
 8013f3a:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 8013f3e:	0076      	lsls	r6, r6, #1
 8013f40:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8013f44:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 8013f48:	4316      	orrs	r6, r2
 8013f4a:	f640 6213 	movw	r2, #3603	@ 0xe13
 8013f4e:	4293      	cmp	r3, r2
 8013f50:	bf1a      	itte	ne
 8013f52:	f103 33ff 	addne.w	r3, r3, #4294967295
 8013f56:	b29b      	uxthne	r3, r3
 8013f58:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8013f5c:	4662      	mov	r2, ip
 8013f5e:	4671      	mov	r1, lr
 8013f60:	4628      	mov	r0, r5
 8013f62:	4674      	mov	r4, lr
 8013f64:	f7ff fed9 	bl	8013d1a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8013f68:	7b43      	ldrb	r3, [r0, #13]
 8013f6a:	7a82      	ldrb	r2, [r0, #10]
 8013f6c:	005b      	lsls	r3, r3, #1
 8013f6e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8013f72:	4313      	orrs	r3, r2
 8013f74:	1af6      	subs	r6, r6, r3
 8013f76:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 8013f7a:	7b61      	ldrb	r1, [r4, #13]
 8013f7c:	00cb      	lsls	r3, r1, #3
 8013f7e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8013f82:	7a23      	ldrb	r3, [r4, #8]
 8013f84:	4313      	orrs	r3, r2
 8013f86:	064a      	lsls	r2, r1, #25
 8013f88:	bf44      	itt	mi
 8013f8a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8013f8e:	b21b      	sxthmi	r3, r3
 8013f90:	1bdb      	subs	r3, r3, r7
 8013f92:	e71c      	b.n	8013dce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8013f94:	2300      	movs	r3, #0
 8013f96:	e7a6      	b.n	8013ee6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 8013f98:	3fc00079 	.word	0x3fc00079

08013f9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8013f9c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013fa0:	4604      	mov	r4, r0
 8013fa2:	b942      	cbnz	r2, 8013fb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8013fa4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8013fa8:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 8013fac:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8013fb0:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8013fb4:	e047      	b.n	8014046 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8013fb6:	7b51      	ldrb	r1, [r2, #13]
 8013fb8:	8893      	ldrh	r3, [r2, #4]
 8013fba:	010d      	lsls	r5, r1, #4
 8013fbc:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 8013fc0:	79d5      	ldrb	r5, [r2, #7]
 8013fc2:	4305      	orrs	r5, r0
 8013fc4:	2d04      	cmp	r5, #4
 8013fc6:	bfcc      	ite	gt
 8013fc8:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8013fcc:	f04f 0e01 	movle.w	lr, #1
 8013fd0:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 8013fd4:	f200 80ab 	bhi.w	801412e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8013fd8:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 8013fdc:	4283      	cmp	r3, r0
 8013fde:	d216      	bcs.n	801400e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013fe0:	f240 605b 	movw	r0, #1627	@ 0x65b
 8013fe4:	4283      	cmp	r3, r0
 8013fe6:	d859      	bhi.n	801409c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8013fe8:	f240 6057 	movw	r0, #1623	@ 0x657
 8013fec:	4283      	cmp	r3, r0
 8013fee:	d20e      	bcs.n	801400e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013ff0:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8013ff4:	d24a      	bcs.n	801408c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8013ff6:	f240 604e 	movw	r0, #1614	@ 0x64e
 8013ffa:	4283      	cmp	r3, r0
 8013ffc:	d207      	bcs.n	801400e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013ffe:	f240 601a 	movw	r0, #1562	@ 0x61a
 8014002:	4283      	cmp	r3, r0
 8014004:	d02a      	beq.n	801405c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014006:	d821      	bhi.n	801404c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8014008:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 801400c:	d35b      	bcc.n	80140c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801400e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8014012:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8014016:	f040 80d0 	bne.w	80141ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801401a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 801401e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8014022:	f040 80ca 	bne.w	80141ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8014026:	00cb      	lsls	r3, r1, #3
 8014028:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801402c:	7a13      	ldrb	r3, [r2, #8]
 801402e:	0649      	lsls	r1, r1, #25
 8014030:	ea43 0300 	orr.w	r3, r3, r0
 8014034:	bf44      	itt	mi
 8014036:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801403a:	b21b      	sxthmi	r3, r3
 801403c:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8014040:	1b5d      	subs	r5, r3, r5
 8014042:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8014046:	4610      	mov	r0, r2
 8014048:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801404c:	f240 604b 	movw	r0, #1611	@ 0x64b
 8014050:	4283      	cmp	r3, r0
 8014052:	d338      	bcc.n	80140c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8014054:	f240 604c 	movw	r0, #1612	@ 0x64c
 8014058:	4283      	cmp	r3, r0
 801405a:	d9d8      	bls.n	801400e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801405c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8014060:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8014064:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8014068:	f040 80f2 	bne.w	8014250 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801406c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8014070:	f040 80ee 	bne.w	8014250 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8014074:	00cb      	lsls	r3, r1, #3
 8014076:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801407a:	7a13      	ldrb	r3, [r2, #8]
 801407c:	064e      	lsls	r6, r1, #25
 801407e:	ea43 0300 	orr.w	r3, r3, r0
 8014082:	bf44      	itt	mi
 8014084:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8014088:	b21b      	sxthmi	r3, r3
 801408a:	e7d9      	b.n	8014040 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801408c:	f240 6054 	movw	r0, #1620	@ 0x654
 8014090:	4283      	cmp	r3, r0
 8014092:	d8e3      	bhi.n	801405c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014094:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8014098:	d9e0      	bls.n	801405c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801409a:	e7b8      	b.n	801400e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801409c:	f240 6074 	movw	r0, #1652	@ 0x674
 80140a0:	4283      	cmp	r3, r0
 80140a2:	d0b4      	beq.n	801400e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80140a4:	d82d      	bhi.n	8014102 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80140a6:	f240 605e 	movw	r0, #1630	@ 0x65e
 80140aa:	4283      	cmp	r3, r0
 80140ac:	d804      	bhi.n	80140b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 80140ae:	f240 605d 	movw	r0, #1629	@ 0x65d
 80140b2:	4283      	cmp	r3, r0
 80140b4:	d3d2      	bcc.n	801405c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80140b6:	e7aa      	b.n	801400e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80140b8:	f240 605f 	movw	r0, #1631	@ 0x65f
 80140bc:	4283      	cmp	r3, r0
 80140be:	d0cd      	beq.n	801405c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80140c0:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 80140c4:	d0a3      	beq.n	801400e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80140c6:	00cb      	lsls	r3, r1, #3
 80140c8:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 80140cc:	7a13      	ldrb	r3, [r2, #8]
 80140ce:	0649      	lsls	r1, r1, #25
 80140d0:	ea43 0300 	orr.w	r3, r3, r0
 80140d4:	bf44      	itt	mi
 80140d6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80140da:	b21b      	sxthmi	r3, r3
 80140dc:	1b5d      	subs	r5, r3, r5
 80140de:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80140e2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80140e6:	7b53      	ldrb	r3, [r2, #13]
 80140e8:	015b      	lsls	r3, r3, #5
 80140ea:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80140ee:	7993      	ldrb	r3, [r2, #6]
 80140f0:	430b      	orrs	r3, r1
 80140f2:	005b      	lsls	r3, r3, #1
 80140f4:	2105      	movs	r1, #5
 80140f6:	fb93 f3f1 	sdiv	r3, r3, r1
 80140fa:	f992 1009 	ldrsb.w	r1, [r2, #9]
 80140fe:	440b      	add	r3, r1
 8014100:	e756      	b.n	8013fb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8014102:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 8014106:	4283      	cmp	r3, r0
 8014108:	d809      	bhi.n	801411e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801410a:	f240 60df 	movw	r0, #1759	@ 0x6df
 801410e:	4283      	cmp	r3, r0
 8014110:	f4bf af7d 	bcs.w	801400e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014114:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8014118:	2b05      	cmp	r3, #5
 801411a:	d8d4      	bhi.n	80140c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801411c:	e777      	b.n	801400e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801411e:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8014122:	4283      	cmp	r3, r0
 8014124:	d09a      	beq.n	801405c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014126:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 801412a:	4283      	cmp	r3, r0
 801412c:	e7ca      	b.n	80140c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801412e:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8014132:	d22b      	bcs.n	801418c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8014134:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8014138:	4283      	cmp	r3, r0
 801413a:	d28f      	bcs.n	801405c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801413c:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8014140:	4283      	cmp	r3, r0
 8014142:	d816      	bhi.n	8014172 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8014144:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8014148:	4283      	cmp	r3, r0
 801414a:	f4bf af60 	bcs.w	801400e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801414e:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8014152:	4283      	cmp	r3, r0
 8014154:	d80a      	bhi.n	801416c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8014156:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 801415a:	4283      	cmp	r3, r0
 801415c:	f4bf af57 	bcs.w	801400e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014160:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8014164:	4283      	cmp	r3, r0
 8014166:	f43f af79 	beq.w	801405c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801416a:	e7ac      	b.n	80140c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801416c:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8014170:	e7f8      	b.n	8014164 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8014172:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 8014176:	4283      	cmp	r3, r0
 8014178:	d802      	bhi.n	8014180 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801417a:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 801417e:	e798      	b.n	80140b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8014180:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8014184:	4283      	cmp	r3, r0
 8014186:	f47f af42 	bne.w	801400e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801418a:	e767      	b.n	801405c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801418c:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8014190:	4283      	cmp	r3, r0
 8014192:	f43f af63 	beq.w	801405c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014196:	d802      	bhi.n	801419e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8014198:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 801419c:	e7f2      	b.n	8014184 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801419e:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 80141a2:	4283      	cmp	r3, r0
 80141a4:	d805      	bhi.n	80141b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80141a6:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 80141aa:	4283      	cmp	r3, r0
 80141ac:	f4ff af2f 	bcc.w	801400e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80141b0:	e754      	b.n	801405c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80141b2:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 80141b6:	4283      	cmp	r3, r0
 80141b8:	e7af      	b.n	801411a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 80141ba:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 80141be:	4617      	mov	r7, r2
 80141c0:	f102 0808 	add.w	r8, r2, #8
 80141c4:	4666      	mov	r6, ip
 80141c6:	6838      	ldr	r0, [r7, #0]
 80141c8:	6879      	ldr	r1, [r7, #4]
 80141ca:	46e6      	mov	lr, ip
 80141cc:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80141d0:	3708      	adds	r7, #8
 80141d2:	4547      	cmp	r7, r8
 80141d4:	46f4      	mov	ip, lr
 80141d6:	d1f6      	bne.n	80141c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80141d8:	6838      	ldr	r0, [r7, #0]
 80141da:	f8ce 0000 	str.w	r0, [lr]
 80141de:	88b9      	ldrh	r1, [r7, #4]
 80141e0:	f8ae 1004 	strh.w	r1, [lr, #4]
 80141e4:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 80141e8:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80141ec:	d009      	beq.n	8014202 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 80141ee:	7b51      	ldrb	r1, [r2, #13]
 80141f0:	7992      	ldrb	r2, [r2, #6]
 80141f2:	0149      	lsls	r1, r1, #5
 80141f4:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80141f8:	4311      	orrs	r1, r2
 80141fa:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80141fe:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8014202:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8014206:	b2ad      	uxth	r5, r5
 8014208:	d00d      	beq.n	8014226 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801420a:	442b      	add	r3, r5
 801420c:	b29b      	uxth	r3, r3
 801420e:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8014212:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8014216:	10db      	asrs	r3, r3, #3
 8014218:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801421c:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8014220:	4313      	orrs	r3, r2
 8014222:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8014226:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 801422a:	00cb      	lsls	r3, r1, #3
 801422c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8014230:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8014234:	064f      	lsls	r7, r1, #25
 8014236:	ea43 0302 	orr.w	r3, r3, r2
 801423a:	bf44      	itt	mi
 801423c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8014240:	b21b      	sxthmi	r3, r3
 8014242:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8014246:	1b5b      	subs	r3, r3, r5
 8014248:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 801424c:	4632      	mov	r2, r6
 801424e:	e6fa      	b.n	8014046 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8014250:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8014254:	4617      	mov	r7, r2
 8014256:	f102 0908 	add.w	r9, r2, #8
 801425a:	4666      	mov	r6, ip
 801425c:	6838      	ldr	r0, [r7, #0]
 801425e:	6879      	ldr	r1, [r7, #4]
 8014260:	46e0      	mov	r8, ip
 8014262:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8014266:	3708      	adds	r7, #8
 8014268:	454f      	cmp	r7, r9
 801426a:	46c4      	mov	ip, r8
 801426c:	d1f6      	bne.n	801425c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801426e:	6838      	ldr	r0, [r7, #0]
 8014270:	f8c8 0000 	str.w	r0, [r8]
 8014274:	88b9      	ldrh	r1, [r7, #4]
 8014276:	f8a8 1004 	strh.w	r1, [r8, #4]
 801427a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 801427e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8014282:	d009      	beq.n	8014298 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8014284:	7b51      	ldrb	r1, [r2, #13]
 8014286:	7992      	ldrb	r2, [r2, #6]
 8014288:	0149      	lsls	r1, r1, #5
 801428a:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801428e:	4311      	orrs	r1, r2
 8014290:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8014294:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8014298:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801429c:	d00e      	beq.n	80142bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801429e:	eba3 030e 	sub.w	r3, r3, lr
 80142a2:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 80142a6:	b29b      	uxth	r3, r3
 80142a8:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 80142ac:	10db      	asrs	r3, r3, #3
 80142ae:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80142b2:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80142b6:	4313      	orrs	r3, r2
 80142b8:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 80142bc:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 80142c0:	00cb      	lsls	r3, r1, #3
 80142c2:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80142c6:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 80142ca:	0648      	lsls	r0, r1, #25
 80142cc:	ea43 0302 	orr.w	r3, r3, r2
 80142d0:	bf44      	itt	mi
 80142d2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80142d6:	b21b      	sxthmi	r3, r3
 80142d8:	1b5d      	subs	r5, r3, r5
 80142da:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80142de:	e7b5      	b.n	801424c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

080142e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80142e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80142e4:	461e      	mov	r6, r3
 80142e6:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80142e8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80142ec:	4604      	mov	r4, r0
 80142ee:	4617      	mov	r7, r2
 80142f0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80142f4:	f7f0 faaa 	bl	800484c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80142f8:	4605      	mov	r5, r0
 80142fa:	b918      	cbnz	r0, 8014304 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80142fc:	6030      	str	r0, [r6, #0]
 80142fe:	4628      	mov	r0, r5
 8014300:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014304:	683b      	ldr	r3, [r7, #0]
 8014306:	4601      	mov	r1, r0
 8014308:	68db      	ldr	r3, [r3, #12]
 801430a:	4638      	mov	r0, r7
 801430c:	4798      	blx	r3
 801430e:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8014312:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8014316:	4602      	mov	r2, r0
 8014318:	6030      	str	r0, [r6, #0]
 801431a:	d213      	bcs.n	8014344 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801431c:	4643      	mov	r3, r8
 801431e:	4639      	mov	r1, r7
 8014320:	4620      	mov	r0, r4
 8014322:	f7ff fe3b 	bl	8013f9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8014326:	6030      	str	r0, [r6, #0]
 8014328:	6833      	ldr	r3, [r6, #0]
 801432a:	b143      	cbz	r3, 801433e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801432c:	7b5a      	ldrb	r2, [r3, #13]
 801432e:	7a9b      	ldrb	r3, [r3, #10]
 8014330:	0052      	lsls	r2, r2, #1
 8014332:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8014336:	4313      	orrs	r3, r2
 8014338:	bf0c      	ite	eq
 801433a:	2301      	moveq	r3, #1
 801433c:	2300      	movne	r3, #0
 801433e:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8014342:	e7dc      	b.n	80142fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8014344:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8014348:	b29b      	uxth	r3, r3
 801434a:	2b7f      	cmp	r3, #127	@ 0x7f
 801434c:	d804      	bhi.n	8014358 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801434e:	4639      	mov	r1, r7
 8014350:	4620      	mov	r0, r4
 8014352:	f7ff fced 	bl	8013d30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8014356:	e7e6      	b.n	8014326 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8014358:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 801435c:	2b00      	cmp	r3, #0
 801435e:	d0e3      	beq.n	8014328 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8014360:	f640 1302 	movw	r3, #2306	@ 0x902
 8014364:	429d      	cmp	r5, r3
 8014366:	d1df      	bne.n	8014328 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8014368:	4601      	mov	r1, r0
 801436a:	4620      	mov	r0, r4
 801436c:	f7ff fcb2 	bl	8013cd4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8014370:	e7d9      	b.n	8014326 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08014372 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8014372:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014376:	461e      	mov	r6, r3
 8014378:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801437a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801437e:	4604      	mov	r4, r0
 8014380:	4617      	mov	r7, r2
 8014382:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8014386:	f7f0 fa61 	bl	800484c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801438a:	4605      	mov	r5, r0
 801438c:	b918      	cbnz	r0, 8014396 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801438e:	6030      	str	r0, [r6, #0]
 8014390:	4628      	mov	r0, r5
 8014392:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014396:	683b      	ldr	r3, [r7, #0]
 8014398:	4601      	mov	r1, r0
 801439a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801439e:	4638      	mov	r0, r7
 80143a0:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80143a4:	47c8      	blx	r9
 80143a6:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 80143aa:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80143ae:	4602      	mov	r2, r0
 80143b0:	6030      	str	r0, [r6, #0]
 80143b2:	d213      	bcs.n	80143dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80143b4:	4643      	mov	r3, r8
 80143b6:	4639      	mov	r1, r7
 80143b8:	4620      	mov	r0, r4
 80143ba:	f7ff fdef 	bl	8013f9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80143be:	6030      	str	r0, [r6, #0]
 80143c0:	6833      	ldr	r3, [r6, #0]
 80143c2:	b143      	cbz	r3, 80143d6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80143c4:	7b5a      	ldrb	r2, [r3, #13]
 80143c6:	7a9b      	ldrb	r3, [r3, #10]
 80143c8:	0052      	lsls	r2, r2, #1
 80143ca:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 80143ce:	4313      	orrs	r3, r2
 80143d0:	bf0c      	ite	eq
 80143d2:	2301      	moveq	r3, #1
 80143d4:	2300      	movne	r3, #0
 80143d6:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 80143da:	e7d9      	b.n	8014390 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80143dc:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 80143e0:	b29b      	uxth	r3, r3
 80143e2:	2b7f      	cmp	r3, #127	@ 0x7f
 80143e4:	d804      	bhi.n	80143f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80143e6:	4639      	mov	r1, r7
 80143e8:	4620      	mov	r0, r4
 80143ea:	f7ff fca1 	bl	8013d30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80143ee:	e7e6      	b.n	80143be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80143f0:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 80143f4:	2b00      	cmp	r3, #0
 80143f6:	d0e3      	beq.n	80143c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80143f8:	f640 1302 	movw	r3, #2306	@ 0x902
 80143fc:	429d      	cmp	r5, r3
 80143fe:	d1df      	bne.n	80143c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8014400:	4601      	mov	r1, r0
 8014402:	4620      	mov	r0, r4
 8014404:	f7ff fc66 	bl	8013cd4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8014408:	e7d9      	b.n	80143be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801440a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801440a:	b510      	push	{r4, lr}
 801440c:	4604      	mov	r4, r0
 801440e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8014412:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8014414:	b1f1      	cbz	r1, 8014454 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8014416:	2b0a      	cmp	r3, #10
 8014418:	d02f      	beq.n	801447a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801441a:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 801441c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8014420:	3901      	subs	r1, #1
 8014422:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8014424:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 8014428:	1c51      	adds	r1, r2, #1
 801442a:	b289      	uxth	r1, r1
 801442c:	2901      	cmp	r1, #1
 801442e:	bf84      	itt	hi
 8014430:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8014434:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 8014436:	f103 0201 	add.w	r2, r3, #1
 801443a:	8722      	strh	r2, [r4, #56]	@ 0x38
 801443c:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801443e:	bf98      	it	ls
 8014440:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8014442:	4413      	add	r3, r2
 8014444:	b29b      	uxth	r3, r3
 8014446:	2b09      	cmp	r3, #9
 8014448:	bf88      	it	hi
 801444a:	3b0a      	subhi	r3, #10
 801444c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8014450:	8458      	strh	r0, [r3, #34]	@ 0x22
 8014452:	e7dc      	b.n	801440e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8014454:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8014456:	2b0a      	cmp	r3, #10
 8014458:	d00f      	beq.n	801447a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801445a:	4620      	mov	r0, r4
 801445c:	f7ff fbf9 	bl	8013c52 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8014460:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8014462:	1c5a      	adds	r2, r3, #1
 8014464:	8722      	strh	r2, [r4, #56]	@ 0x38
 8014466:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8014468:	4413      	add	r3, r2
 801446a:	b29b      	uxth	r3, r3
 801446c:	2b09      	cmp	r3, #9
 801446e:	bf88      	it	hi
 8014470:	3b0a      	subhi	r3, #10
 8014472:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8014476:	8458      	strh	r0, [r3, #34]	@ 0x22
 8014478:	e7ec      	b.n	8014454 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801447a:	bd10      	pop	{r4, pc}

0801447c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801447c:	b538      	push	{r3, r4, r5, lr}
 801447e:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8014480:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8014484:	4604      	mov	r4, r0
 8014486:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8014488:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 801448a:	3a01      	subs	r2, #1
 801448c:	8702      	strh	r2, [r0, #56]	@ 0x38
 801448e:	1c5a      	adds	r2, r3, #1
 8014490:	b292      	uxth	r2, r2
 8014492:	2a09      	cmp	r2, #9
 8014494:	bf86      	itte	hi
 8014496:	3b09      	subhi	r3, #9
 8014498:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 801449a:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 801449c:	f7ff ffb5 	bl	801440a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80144a0:	8c23      	ldrh	r3, [r4, #32]
 80144a2:	2b01      	cmp	r3, #1
 80144a4:	bf9c      	itt	ls
 80144a6:	3301      	addls	r3, #1
 80144a8:	8423      	strhls	r3, [r4, #32]
 80144aa:	8be3      	ldrh	r3, [r4, #30]
 80144ac:	b90b      	cbnz	r3, 80144b2 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80144ae:	2302      	movs	r3, #2
 80144b0:	83e3      	strh	r3, [r4, #30]
 80144b2:	8be3      	ldrh	r3, [r4, #30]
 80144b4:	3b01      	subs	r3, #1
 80144b6:	b29b      	uxth	r3, r3
 80144b8:	83e3      	strh	r3, [r4, #30]
 80144ba:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80144be:	4628      	mov	r0, r5
 80144c0:	8365      	strh	r5, [r4, #26]
 80144c2:	bd38      	pop	{r3, r4, r5, pc}

080144c4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80144c4:	428a      	cmp	r2, r1
 80144c6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80144ca:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 80144cc:	d931      	bls.n	8014532 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80144ce:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 80144d0:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 80144d4:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 80144d8:	19ee      	adds	r6, r5, r7
 80144da:	1a54      	subs	r4, r2, r1
 80144dc:	3e01      	subs	r6, #1
 80144de:	fa1f fe84 	uxth.w	lr, r4
 80144e2:	b2b4      	uxth	r4, r6
 80144e4:	eba4 090e 	sub.w	r9, r4, lr
 80144e8:	fa1f f989 	uxth.w	r9, r9
 80144ec:	2c09      	cmp	r4, #9
 80144ee:	4626      	mov	r6, r4
 80144f0:	bf88      	it	hi
 80144f2:	f1a4 060a 	subhi.w	r6, r4, #10
 80144f6:	f1bc 0f00 	cmp.w	ip, #0
 80144fa:	bf08      	it	eq
 80144fc:	f04f 0c02 	moveq.w	ip, #2
 8014500:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8014504:	f10c 3cff 	add.w	ip, ip, #4294967295
 8014508:	fa1f fc8c 	uxth.w	ip, ip
 801450c:	3c01      	subs	r4, #1
 801450e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 8014512:	b2a4      	uxth	r4, r4
 8014514:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8014518:	454c      	cmp	r4, r9
 801451a:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 801451e:	d1e5      	bne.n	80144ec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8014520:	eba5 050e 	sub.w	r5, r5, lr
 8014524:	eb0e 0408 	add.w	r4, lr, r8
 8014528:	8705      	strh	r5, [r0, #56]	@ 0x38
 801452a:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 801452e:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8014532:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8014534:	1a64      	subs	r4, r4, r1
 8014536:	4439      	add	r1, r7
 8014538:	b289      	uxth	r1, r1
 801453a:	2909      	cmp	r1, #9
 801453c:	bf88      	it	hi
 801453e:	390a      	subhi	r1, #10
 8014540:	8704      	strh	r4, [r0, #56]	@ 0x38
 8014542:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8014544:	250a      	movs	r5, #10
 8014546:	b18a      	cbz	r2, 801456c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8014548:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 801454a:	3a01      	subs	r2, #1
 801454c:	b292      	uxth	r2, r2
 801454e:	3101      	adds	r1, #1
 8014550:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8014554:	8701      	strh	r1, [r0, #56]	@ 0x38
 8014556:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8014558:	b901      	cbnz	r1, 801455c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801455a:	86c5      	strh	r5, [r0, #54]	@ 0x36
 801455c:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 801455e:	3901      	subs	r1, #1
 8014560:	b289      	uxth	r1, r1
 8014562:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8014564:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8014568:	844c      	strh	r4, [r1, #34]	@ 0x22
 801456a:	e7ec      	b.n	8014546 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801456c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014570:	f7ff bf4b 	b.w	801440a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08014574 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8014574:	b570      	push	{r4, r5, r6, lr}
 8014576:	2500      	movs	r5, #0
 8014578:	4295      	cmp	r5, r2
 801457a:	d011      	beq.n	80145a0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801457c:	8bc4      	ldrh	r4, [r0, #30]
 801457e:	f831 6b02 	ldrh.w	r6, [r1], #2
 8014582:	4414      	add	r4, r2
 8014584:	3c01      	subs	r4, #1
 8014586:	1b64      	subs	r4, r4, r5
 8014588:	b2a4      	uxth	r4, r4
 801458a:	2c01      	cmp	r4, #1
 801458c:	bf88      	it	hi
 801458e:	3c02      	subhi	r4, #2
 8014590:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8014594:	8b64      	ldrh	r4, [r4, #26]
 8014596:	42b4      	cmp	r4, r6
 8014598:	d117      	bne.n	80145ca <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801459a:	3501      	adds	r5, #1
 801459c:	b2ad      	uxth	r5, r5
 801459e:	e7eb      	b.n	8014578 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80145a0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80145a4:	2400      	movs	r4, #0
 80145a6:	4413      	add	r3, r2
 80145a8:	b2a2      	uxth	r2, r4
 80145aa:	429a      	cmp	r2, r3
 80145ac:	da0f      	bge.n	80145ce <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80145ae:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 80145b0:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80145b4:	4432      	add	r2, r6
 80145b6:	b292      	uxth	r2, r2
 80145b8:	2a09      	cmp	r2, #9
 80145ba:	bf88      	it	hi
 80145bc:	3a0a      	subhi	r2, #10
 80145be:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80145c2:	3401      	adds	r4, #1
 80145c4:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 80145c6:	42aa      	cmp	r2, r5
 80145c8:	d0ee      	beq.n	80145a8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80145ca:	2000      	movs	r0, #0
 80145cc:	bd70      	pop	{r4, r5, r6, pc}
 80145ce:	2001      	movs	r0, #1
 80145d0:	e7fc      	b.n	80145cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080145d2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80145d2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80145d6:	4605      	mov	r5, r0
 80145d8:	4616      	mov	r6, r2
 80145da:	1c8c      	adds	r4, r1, #2
 80145dc:	8809      	ldrh	r1, [r1, #0]
 80145de:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80145e2:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80145e6:	42b3      	cmp	r3, r6
 80145e8:	d124      	bne.n	8014634 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80145ea:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80145ee:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80145f2:	f001 070f 	and.w	r7, r1, #15
 80145f6:	f8cd 8000 	str.w	r8, [sp]
 80145fa:	464b      	mov	r3, r9
 80145fc:	4652      	mov	r2, sl
 80145fe:	4621      	mov	r1, r4
 8014600:	4628      	mov	r0, r5
 8014602:	f7ff ffb7 	bl	8014574 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8014606:	4683      	mov	fp, r0
 8014608:	b168      	cbz	r0, 8014626 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801460a:	eb0a 0109 	add.w	r1, sl, r9
 801460e:	4441      	add	r1, r8
 8014610:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8014614:	463a      	mov	r2, r7
 8014616:	4649      	mov	r1, r9
 8014618:	4628      	mov	r0, r5
 801461a:	f7ff ff53 	bl	80144c4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801461e:	4658      	mov	r0, fp
 8014620:	b003      	add	sp, #12
 8014622:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014626:	eb07 010a 	add.w	r1, r7, sl
 801462a:	4449      	add	r1, r9
 801462c:	4441      	add	r1, r8
 801462e:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8014632:	e7d2      	b.n	80145da <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8014634:	f04f 0b00 	mov.w	fp, #0
 8014638:	e7f1      	b.n	801461e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801463a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801463a:	b570      	push	{r4, r5, r6, lr}
 801463c:	8810      	ldrh	r0, [r2, #0]
 801463e:	4298      	cmp	r0, r3
 8014640:	d817      	bhi.n	8014672 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8014642:	1e48      	subs	r0, r1, #1
 8014644:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8014648:	4298      	cmp	r0, r3
 801464a:	d312      	bcc.n	8014672 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801464c:	2400      	movs	r4, #0
 801464e:	428c      	cmp	r4, r1
 8014650:	d20f      	bcs.n	8014672 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8014652:	1860      	adds	r0, r4, r1
 8014654:	1040      	asrs	r0, r0, #1
 8014656:	0085      	lsls	r5, r0, #2
 8014658:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801465c:	42b3      	cmp	r3, r6
 801465e:	d902      	bls.n	8014666 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8014660:	3001      	adds	r0, #1
 8014662:	b284      	uxth	r4, r0
 8014664:	e7f3      	b.n	801464e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8014666:	d201      	bcs.n	801466c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8014668:	b281      	uxth	r1, r0
 801466a:	e7f0      	b.n	801464e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801466c:	442a      	add	r2, r5
 801466e:	8850      	ldrh	r0, [r2, #2]
 8014670:	bd70      	pop	{r4, r5, r6, pc}
 8014672:	2000      	movs	r0, #0
 8014674:	e7fc      	b.n	8014670 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08014676 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8014676:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801467a:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 801467c:	886f      	ldrh	r7, [r5, #2]
 801467e:	4604      	mov	r4, r0
 8014680:	087f      	lsrs	r7, r7, #1
 8014682:	260b      	movs	r6, #11
 8014684:	3e01      	subs	r6, #1
 8014686:	d013      	beq.n	80146b0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8014688:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 801468a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801468e:	462a      	mov	r2, r5
 8014690:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8014694:	4639      	mov	r1, r7
 8014696:	4643      	mov	r3, r8
 8014698:	4620      	mov	r0, r4
 801469a:	f7ff ffce 	bl	801463a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801469e:	b138      	cbz	r0, 80146b0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80146a0:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80146a4:	4642      	mov	r2, r8
 80146a6:	4620      	mov	r0, r4
 80146a8:	f7ff ff93 	bl	80145d2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80146ac:	2800      	cmp	r0, #0
 80146ae:	d1e9      	bne.n	8014684 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80146b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080146b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80146b4:	b570      	push	{r4, r5, r6, lr}
 80146b6:	694a      	ldr	r2, [r1, #20]
 80146b8:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 80146ba:	684b      	ldr	r3, [r1, #4]
 80146bc:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 80146be:	1b54      	subs	r4, r2, r5
 80146c0:	f000 8106 	beq.w	80148d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80146c4:	1b9b      	subs	r3, r3, r6
 80146c6:	d003      	beq.n	80146d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80146c8:	4363      	muls	r3, r4
 80146ca:	2210      	movs	r2, #16
 80146cc:	fb93 f3f2 	sdiv	r3, r3, r2
 80146d0:	680c      	ldr	r4, [r1, #0]
 80146d2:	698a      	ldr	r2, [r1, #24]
 80146d4:	1b65      	subs	r5, r4, r5
 80146d6:	f000 80fd 	beq.w	80148d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80146da:	1b92      	subs	r2, r2, r6
 80146dc:	d003      	beq.n	80146e6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80146de:	436a      	muls	r2, r5
 80146e0:	2410      	movs	r4, #16
 80146e2:	fb92 f2f4 	sdiv	r2, r2, r4
 80146e6:	1a9b      	subs	r3, r3, r2
 80146e8:	ee07 3a90 	vmov	s15, r3
 80146ec:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 8014910 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80146f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80146f4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80146f8:	ee67 7a84 	vmul.f32	s15, s15, s8
 80146fc:	460a      	mov	r2, r1
 80146fe:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8014702:	4603      	mov	r3, r0
 8014704:	f100 040c 	add.w	r4, r0, #12
 8014708:	eeb1 6a43 	vneg.f32	s12, s6
 801470c:	edd2 7a02 	vldr	s15, [r2, #8]
 8014710:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8014714:	3214      	adds	r2, #20
 8014716:	ece3 6a01 	vstmia	r3!, {s13}
 801471a:	ed52 7a02 	vldr	s15, [r2, #-8]
 801471e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014722:	429c      	cmp	r4, r3
 8014724:	edc3 7a02 	vstr	s15, [r3, #8]
 8014728:	ed52 7a01 	vldr	s15, [r2, #-4]
 801472c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014730:	edc3 7a05 	vstr	s15, [r3, #20]
 8014734:	d1ea      	bne.n	801470c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8014736:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8014738:	698b      	ldr	r3, [r1, #24]
 801473a:	edd0 4a02 	vldr	s9, [r0, #8]
 801473e:	edd0 3a00 	vldr	s7, [r0]
 8014742:	edd0 6a01 	vldr	s13, [r0, #4]
 8014746:	ed90 5a05 	vldr	s10, [r0, #20]
 801474a:	ed90 2a03 	vldr	s4, [r0, #12]
 801474e:	edd0 5a04 	vldr	s11, [r0, #16]
 8014752:	ed90 1a07 	vldr	s2, [r0, #28]
 8014756:	edd0 2a06 	vldr	s5, [r0, #24]
 801475a:	1a9b      	subs	r3, r3, r2
 801475c:	ee07 3a90 	vmov	s15, r3
 8014760:	684b      	ldr	r3, [r1, #4]
 8014762:	1a9b      	subs	r3, r3, r2
 8014764:	ee07 3a10 	vmov	s14, r3
 8014768:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801476c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8014770:	ee67 7a84 	vmul.f32	s15, s15, s8
 8014774:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8014778:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801477c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8014780:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014784:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8014788:	eee6 7a87 	vfma.f32	s15, s13, s14
 801478c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8014790:	ee67 7a83 	vmul.f32	s15, s15, s6
 8014794:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 8014798:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801479a:	694a      	ldr	r2, [r1, #20]
 801479c:	1b13      	subs	r3, r2, r4
 801479e:	ee07 3a10 	vmov	s14, r3
 80147a2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80147a6:	680b      	ldr	r3, [r1, #0]
 80147a8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80147ac:	1b1b      	subs	r3, r3, r4
 80147ae:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80147b2:	ee07 3a10 	vmov	s14, r3
 80147b6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80147ba:	ee27 7a04 	vmul.f32	s14, s14, s8
 80147be:	eee6 4a87 	vfma.f32	s9, s13, s14
 80147c2:	ee64 4a86 	vmul.f32	s9, s9, s12
 80147c6:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 80147ca:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80147cc:	698b      	ldr	r3, [r1, #24]
 80147ce:	1a9b      	subs	r3, r3, r2
 80147d0:	ee06 3a90 	vmov	s13, r3
 80147d4:	684b      	ldr	r3, [r1, #4]
 80147d6:	1a9b      	subs	r3, r3, r2
 80147d8:	ee07 3a10 	vmov	s14, r3
 80147dc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80147e0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80147e4:	ee66 6a84 	vmul.f32	s13, s13, s8
 80147e8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80147ec:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80147f0:	eee5 6a87 	vfma.f32	s13, s11, s14
 80147f4:	ee66 6a83 	vmul.f32	s13, s13, s6
 80147f8:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 80147fc:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80147fe:	694a      	ldr	r2, [r1, #20]
 8014800:	1b13      	subs	r3, r2, r4
 8014802:	ee07 3a10 	vmov	s14, r3
 8014806:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801480a:	680b      	ldr	r3, [r1, #0]
 801480c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014810:	1b1b      	subs	r3, r3, r4
 8014812:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8014816:	ee07 3a10 	vmov	s14, r3
 801481a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801481e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014822:	eea5 5a87 	vfma.f32	s10, s11, s14
 8014826:	edd0 5a08 	vldr	s11, [r0, #32]
 801482a:	ee25 5a06 	vmul.f32	s10, s10, s12
 801482e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8014832:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 8014836:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8014838:	698b      	ldr	r3, [r1, #24]
 801483a:	1a9b      	subs	r3, r3, r2
 801483c:	ee07 3a10 	vmov	s14, r3
 8014840:	684b      	ldr	r3, [r1, #4]
 8014842:	1a9b      	subs	r3, r3, r2
 8014844:	ee01 3a90 	vmov	s3, r3
 8014848:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801484c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8014850:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014854:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8014858:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801485c:	ee61 1a84 	vmul.f32	s3, s3, s8
 8014860:	eea1 7a21 	vfma.f32	s14, s2, s3
 8014864:	ee27 7a03 	vmul.f32	s14, s14, s6
 8014868:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 801486c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801486e:	694a      	ldr	r2, [r1, #20]
 8014870:	1b13      	subs	r3, r2, r4
 8014872:	ee03 3a10 	vmov	s6, r3
 8014876:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801487a:	680b      	ldr	r3, [r1, #0]
 801487c:	ee23 3a04 	vmul.f32	s6, s6, s8
 8014880:	1b1b      	subs	r3, r3, r4
 8014882:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8014886:	ee03 3a10 	vmov	s6, r3
 801488a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801488e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8014892:	eee1 5a04 	vfma.f32	s11, s2, s8
 8014896:	ee25 6a86 	vmul.f32	s12, s11, s12
 801489a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801489e:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 80148a2:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80148a6:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80148aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80148ae:	dd13      	ble.n	80148d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80148b0:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80148b4:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80148b8:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80148ba:	eee3 7a87 	vfma.f32	s15, s7, s14
 80148be:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80148c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80148c6:	dd15      	ble.n	80148f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80148c8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80148cc:	6403      	str	r3, [r0, #64]	@ 0x40
 80148ce:	bd70      	pop	{r4, r5, r6, pc}
 80148d0:	4623      	mov	r3, r4
 80148d2:	e6fd      	b.n	80146d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80148d4:	462a      	mov	r2, r5
 80148d6:	e706      	b.n	80146e6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80148d8:	d502      	bpl.n	80148e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80148da:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 80148de:	e7e9      	b.n	80148b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80148e0:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80148e4:	eea3 2a85 	vfma.f32	s4, s7, s10
 80148e8:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80148ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80148f0:	dade      	bge.n	80148b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80148f2:	e7f2      	b.n	80148da <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80148f4:	d502      	bpl.n	80148fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80148f6:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 80148fa:	e7e7      	b.n	80148cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80148fc:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8014900:	eee3 4a86 	vfma.f32	s9, s7, s12
 8014904:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8014908:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801490c:	dadc      	bge.n	80148c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801490e:	e7f2      	b.n	80148f6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8014910:	3d800000 	.word	0x3d800000

08014914 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8014914:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014918:	2714      	movs	r7, #20
 801491a:	435f      	muls	r7, r3
 801491c:	eb02 0c07 	add.w	ip, r2, r7
 8014920:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8014924:	f115 0e0f 	adds.w	lr, r5, #15
 8014928:	f100 80a2 	bmi.w	8014a70 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801492c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8014930:	9c08      	ldr	r4, [sp, #32]
 8014932:	f8c0 e014 	str.w	lr, [r0, #20]
 8014936:	2614      	movs	r6, #20
 8014938:	4366      	muls	r6, r4
 801493a:	eb02 0806 	add.w	r8, r2, r6
 801493e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8014942:	f115 040f 	adds.w	r4, r5, #15
 8014946:	f100 809f 	bmi.w	8014a88 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801494a:	1124      	asrs	r4, r4, #4
 801494c:	eba4 040e 	sub.w	r4, r4, lr
 8014950:	6184      	str	r4, [r0, #24]
 8014952:	2c00      	cmp	r4, #0
 8014954:	f000 808a 	beq.w	8014a6c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8014958:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801495c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8014960:	5995      	ldr	r5, [r2, r6]
 8014962:	eba4 0809 	sub.w	r8, r4, r9
 8014966:	59d4      	ldr	r4, [r2, r7]
 8014968:	eba5 0a04 	sub.w	sl, r5, r4
 801496c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8014970:	fb0e fe05 	mul.w	lr, lr, r5
 8014974:	fb0a ee19 	mls	lr, sl, r9, lr
 8014978:	fb08 e404 	mla	r4, r8, r4, lr
 801497c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8014980:	3c01      	subs	r4, #1
 8014982:	19a4      	adds	r4, r4, r6
 8014984:	f100 808c 	bmi.w	8014aa0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8014988:	fb94 fef6 	sdiv	lr, r4, r6
 801498c:	f8c0 e000 	str.w	lr, [r0]
 8014990:	fb06 441e 	mls	r4, r6, lr, r4
 8014994:	6104      	str	r4, [r0, #16]
 8014996:	2d00      	cmp	r5, #0
 8014998:	f2c0 8095 	blt.w	8014ac6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801499c:	fb95 f4f6 	sdiv	r4, r5, r6
 80149a0:	6044      	str	r4, [r0, #4]
 80149a2:	fb06 5514 	mls	r5, r6, r4, r5
 80149a6:	6085      	str	r5, [r0, #8]
 80149a8:	60c6      	str	r6, [r0, #12]
 80149aa:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80149ae:	6945      	ldr	r5, [r0, #20]
 80149b0:	59d2      	ldr	r2, [r2, r7]
 80149b2:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 8014ae8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80149b6:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 80149ba:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80149be:	ee07 4a10 	vmov	s14, r4
 80149c2:	6804      	ldr	r4, [r0, #0]
 80149c4:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80149c8:	ee07 2a90 	vmov	s15, r2
 80149cc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80149d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80149d4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80149d8:	ee27 7a26 	vmul.f32	s14, s14, s13
 80149dc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80149e0:	edd3 6a00 	vldr	s13, [r3]
 80149e4:	eee6 6a07 	vfma.f32	s13, s12, s14
 80149e8:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 80149ec:	eee6 6a27 	vfma.f32	s13, s12, s15
 80149f0:	edc0 6a07 	vstr	s13, [r0, #28]
 80149f4:	edd0 6a01 	vldr	s13, [r0, #4]
 80149f8:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 80149fc:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8014a00:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8014a04:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8014a08:	ed80 6a08 	vstr	s12, [r0, #32]
 8014a0c:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8014a0e:	6242      	str	r2, [r0, #36]	@ 0x24
 8014a10:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8014a14:	ed93 6a03 	vldr	s12, [r3, #12]
 8014a18:	eea5 6a87 	vfma.f32	s12, s11, s14
 8014a1c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8014a20:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8014a24:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8014a28:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8014a2c:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8014a30:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8014a34:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8014a38:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8014a3a:	6302      	str	r2, [r0, #48]	@ 0x30
 8014a3c:	ed93 6a06 	vldr	s12, [r3, #24]
 8014a40:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8014a44:	eea5 6a87 	vfma.f32	s12, s11, s14
 8014a48:	eeb0 7a46 	vmov.f32	s14, s12
 8014a4c:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8014a50:	eea6 7a27 	vfma.f32	s14, s12, s15
 8014a54:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8014a58:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 8014a5c:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8014a60:	eee6 7a87 	vfma.f32	s15, s13, s14
 8014a64:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8014a68:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 8014a6a:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8014a6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014a70:	f1c5 0501 	rsb	r5, r5, #1
 8014a74:	f015 050f 	ands.w	r5, r5, #15
 8014a78:	bf18      	it	ne
 8014a7a:	2501      	movne	r5, #1
 8014a7c:	2410      	movs	r4, #16
 8014a7e:	fb9e fef4 	sdiv	lr, lr, r4
 8014a82:	ebae 0e05 	sub.w	lr, lr, r5
 8014a86:	e753      	b.n	8014930 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8014a88:	f1c5 0501 	rsb	r5, r5, #1
 8014a8c:	f015 050f 	ands.w	r5, r5, #15
 8014a90:	bf18      	it	ne
 8014a92:	2501      	movne	r5, #1
 8014a94:	f04f 0910 	mov.w	r9, #16
 8014a98:	fb94 f4f9 	sdiv	r4, r4, r9
 8014a9c:	1b64      	subs	r4, r4, r5
 8014a9e:	e755      	b.n	801494c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8014aa0:	4264      	negs	r4, r4
 8014aa2:	fb94 fef6 	sdiv	lr, r4, r6
 8014aa6:	f1ce 0800 	rsb	r8, lr, #0
 8014aaa:	fb06 441e 	mls	r4, r6, lr, r4
 8014aae:	f8c0 8000 	str.w	r8, [r0]
 8014ab2:	6104      	str	r4, [r0, #16]
 8014ab4:	2c00      	cmp	r4, #0
 8014ab6:	f43f af6e 	beq.w	8014996 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8014aba:	ea6f 0e0e 	mvn.w	lr, lr
 8014abe:	f8c0 e000 	str.w	lr, [r0]
 8014ac2:	1b34      	subs	r4, r6, r4
 8014ac4:	e766      	b.n	8014994 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8014ac6:	426d      	negs	r5, r5
 8014ac8:	fb95 f4f6 	sdiv	r4, r5, r6
 8014acc:	f1c4 0e00 	rsb	lr, r4, #0
 8014ad0:	fb06 5514 	mls	r5, r6, r4, r5
 8014ad4:	f8c0 e004 	str.w	lr, [r0, #4]
 8014ad8:	6085      	str	r5, [r0, #8]
 8014ada:	2d00      	cmp	r5, #0
 8014adc:	f43f af64 	beq.w	80149a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8014ae0:	43e4      	mvns	r4, r4
 8014ae2:	6044      	str	r4, [r0, #4]
 8014ae4:	1b75      	subs	r5, r6, r5
 8014ae6:	e75e      	b.n	80149a6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8014ae8:	3d800000 	.word	0x3d800000

08014aec <_ZN8touchgfx7Unicode6strlenEPKt>:
 8014aec:	4602      	mov	r2, r0
 8014aee:	b148      	cbz	r0, 8014b04 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8014af0:	2300      	movs	r3, #0
 8014af2:	b298      	uxth	r0, r3
 8014af4:	3301      	adds	r3, #1
 8014af6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8014afa:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8014afe:	2900      	cmp	r1, #0
 8014b00:	d1f7      	bne.n	8014af2 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8014b02:	4770      	bx	lr
 8014b04:	4770      	bx	lr

08014b06 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8014b06:	b530      	push	{r4, r5, lr}
 8014b08:	4604      	mov	r4, r0
 8014b0a:	b159      	cbz	r1, 8014b24 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8014b0c:	b148      	cbz	r0, 8014b22 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8014b0e:	2300      	movs	r3, #0
 8014b10:	b298      	uxth	r0, r3
 8014b12:	4282      	cmp	r2, r0
 8014b14:	d905      	bls.n	8014b22 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8014b16:	5ccd      	ldrb	r5, [r1, r3]
 8014b18:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8014b1c:	3301      	adds	r3, #1
 8014b1e:	2d00      	cmp	r5, #0
 8014b20:	d1f6      	bne.n	8014b10 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8014b22:	bd30      	pop	{r4, r5, pc}
 8014b24:	4608      	mov	r0, r1
 8014b26:	e7fc      	b.n	8014b22 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08014b28 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8014b28:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014b2a:	b08b      	sub	sp, #44	@ 0x2c
 8014b2c:	468c      	mov	ip, r1
 8014b2e:	2100      	movs	r1, #0
 8014b30:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8014b34:	4604      	mov	r4, r0
 8014b36:	261f      	movs	r6, #31
 8014b38:	af01      	add	r7, sp, #4
 8014b3a:	fb94 fef3 	sdiv	lr, r4, r3
 8014b3e:	fb03 441e 	mls	r4, r3, lr, r4
 8014b42:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8014b46:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8014b4a:	b2ec      	uxtb	r4, r5
 8014b4c:	2d09      	cmp	r5, #9
 8014b4e:	bfd4      	ite	le
 8014b50:	3430      	addle	r4, #48	@ 0x30
 8014b52:	3457      	addgt	r4, #87	@ 0x57
 8014b54:	b2e4      	uxtb	r4, r4
 8014b56:	55bc      	strb	r4, [r7, r6]
 8014b58:	4674      	mov	r4, lr
 8014b5a:	1e71      	subs	r1, r6, #1
 8014b5c:	b974      	cbnz	r4, 8014b7c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8014b5e:	2800      	cmp	r0, #0
 8014b60:	da05      	bge.n	8014b6e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8014b62:	ab0a      	add	r3, sp, #40	@ 0x28
 8014b64:	4419      	add	r1, r3
 8014b66:	232d      	movs	r3, #45	@ 0x2d
 8014b68:	f801 3c24 	strb.w	r3, [r1, #-36]
 8014b6c:	1eb1      	subs	r1, r6, #2
 8014b6e:	3101      	adds	r1, #1
 8014b70:	4439      	add	r1, r7
 8014b72:	4660      	mov	r0, ip
 8014b74:	f7ff ffc7 	bl	8014b06 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8014b78:	b00b      	add	sp, #44	@ 0x2c
 8014b7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014b7c:	460e      	mov	r6, r1
 8014b7e:	e7dc      	b.n	8014b3a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08014b80 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8014b80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014b82:	b08b      	sub	sp, #44	@ 0x2c
 8014b84:	468c      	mov	ip, r1
 8014b86:	2100      	movs	r1, #0
 8014b88:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8014b8c:	ae01      	add	r6, sp, #4
 8014b8e:	211f      	movs	r1, #31
 8014b90:	fbb0 f7f3 	udiv	r7, r0, r3
 8014b94:	fb03 0517 	mls	r5, r3, r7, r0
 8014b98:	b2ec      	uxtb	r4, r5
 8014b9a:	2d09      	cmp	r5, #9
 8014b9c:	bfd4      	ite	le
 8014b9e:	3430      	addle	r4, #48	@ 0x30
 8014ba0:	3457      	addgt	r4, #87	@ 0x57
 8014ba2:	b2e4      	uxtb	r4, r4
 8014ba4:	558c      	strb	r4, [r1, r6]
 8014ba6:	4638      	mov	r0, r7
 8014ba8:	1e4c      	subs	r4, r1, #1
 8014baa:	b92f      	cbnz	r7, 8014bb8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8014bac:	4431      	add	r1, r6
 8014bae:	4660      	mov	r0, ip
 8014bb0:	f7ff ffa9 	bl	8014b06 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8014bb4:	b00b      	add	sp, #44	@ 0x2c
 8014bb6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014bb8:	4621      	mov	r1, r4
 8014bba:	e7e9      	b.n	8014b90 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08014bbc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8014bbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014bc0:	4691      	mov	r9, r2
 8014bc2:	b085      	sub	sp, #20
 8014bc4:	6802      	ldr	r2, [r0, #0]
 8014bc6:	9201      	str	r2, [sp, #4]
 8014bc8:	4688      	mov	r8, r1
 8014bca:	4683      	mov	fp, r0
 8014bcc:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 8014bd0:	9103      	str	r1, [sp, #12]
 8014bd2:	4610      	mov	r0, r2
 8014bd4:	461c      	mov	r4, r3
 8014bd6:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 8014bda:	9302      	str	r3, [sp, #8]
 8014bdc:	f7ff ff86 	bl	8014aec <_ZN8touchgfx7Unicode6strlenEPKt>
 8014be0:	f1b8 0f00 	cmp.w	r8, #0
 8014be4:	bf0c      	ite	eq
 8014be6:	4684      	moveq	ip, r0
 8014be8:	f100 0c01 	addne.w	ip, r0, #1
 8014bec:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 8014bf0:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 8014bf4:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8014bf6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8014bf8:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 8014bfc:	9903      	ldr	r1, [sp, #12]
 8014bfe:	fa1f fc8c 	uxth.w	ip, ip
 8014c02:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8014c06:	d041      	beq.n	8014c8c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8014c08:	d834      	bhi.n	8014c74 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8014c0a:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 8014c0e:	d059      	beq.n	8014cc4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8014c10:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 8014c14:	d03a      	beq.n	8014c8c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8014c16:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 8014c1a:	d034      	beq.n	8014c86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8014c1c:	2400      	movs	r4, #0
 8014c1e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 8014c22:	3a01      	subs	r2, #1
 8014c24:	b169      	cbz	r1, 8014c42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8014c26:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8014c28:	458c      	cmp	ip, r1
 8014c2a:	da09      	bge.n	8014c40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8014c2c:	eba1 010c 	sub.w	r1, r1, ip
 8014c30:	b289      	uxth	r1, r1
 8014c32:	b933      	cbnz	r3, 8014c42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8014c34:	2e00      	cmp	r6, #0
 8014c36:	d051      	beq.n	8014cdc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8014c38:	2800      	cmp	r0, #0
 8014c3a:	d04f      	beq.n	8014cdc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8014c3c:	440c      	add	r4, r1
 8014c3e:	b2a4      	uxth	r4, r4
 8014c40:	2100      	movs	r1, #0
 8014c42:	682b      	ldr	r3, [r5, #0]
 8014c44:	4293      	cmp	r3, r2
 8014c46:	da07      	bge.n	8014c58 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8014c48:	f1b8 0f00 	cmp.w	r8, #0
 8014c4c:	d004      	beq.n	8014c58 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8014c4e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8014c52:	682b      	ldr	r3, [r5, #0]
 8014c54:	3301      	adds	r3, #1
 8014c56:	602b      	str	r3, [r5, #0]
 8014c58:	2730      	movs	r7, #48	@ 0x30
 8014c5a:	2c00      	cmp	r4, #0
 8014c5c:	d04e      	beq.n	8014cfc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8014c5e:	682e      	ldr	r6, [r5, #0]
 8014c60:	3c01      	subs	r4, #1
 8014c62:	42b2      	cmp	r2, r6
 8014c64:	b2a4      	uxth	r4, r4
 8014c66:	dd49      	ble.n	8014cfc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8014c68:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8014c6c:	682b      	ldr	r3, [r5, #0]
 8014c6e:	3301      	adds	r3, #1
 8014c70:	602b      	str	r3, [r5, #0]
 8014c72:	e7f2      	b.n	8014c5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8014c74:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 8014c78:	d01d      	beq.n	8014cb6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8014c7a:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 8014c7e:	d002      	beq.n	8014c86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8014c80:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 8014c84:	e7c9      	b.n	8014c1a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8014c86:	4684      	mov	ip, r0
 8014c88:	f04f 0800 	mov.w	r8, #0
 8014c8c:	2c00      	cmp	r4, #0
 8014c8e:	d0c6      	beq.n	8014c1e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8014c90:	b947      	cbnz	r7, 8014ca4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8014c92:	2801      	cmp	r0, #1
 8014c94:	d106      	bne.n	8014ca4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8014c96:	8814      	ldrh	r4, [r2, #0]
 8014c98:	2c30      	cmp	r4, #48	@ 0x30
 8014c9a:	bf02      	ittt	eq
 8014c9c:	3202      	addeq	r2, #2
 8014c9e:	f8cb 2000 	streq.w	r2, [fp]
 8014ca2:	4638      	moveq	r0, r7
 8014ca4:	45bc      	cmp	ip, r7
 8014ca6:	da14      	bge.n	8014cd2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8014ca8:	b2bf      	uxth	r7, r7
 8014caa:	eba7 040c 	sub.w	r4, r7, ip
 8014cae:	b2a4      	uxth	r4, r4
 8014cb0:	46bc      	mov	ip, r7
 8014cb2:	2600      	movs	r6, #0
 8014cb4:	e7b3      	b.n	8014c1e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8014cb6:	4684      	mov	ip, r0
 8014cb8:	b16c      	cbz	r4, 8014cd6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8014cba:	42b8      	cmp	r0, r7
 8014cbc:	dd00      	ble.n	8014cc0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8014cbe:	b2b8      	uxth	r0, r7
 8014cc0:	2400      	movs	r4, #0
 8014cc2:	e003      	b.n	8014ccc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8014cc4:	f04f 0c01 	mov.w	ip, #1
 8014cc8:	2400      	movs	r4, #0
 8014cca:	4660      	mov	r0, ip
 8014ccc:	4626      	mov	r6, r4
 8014cce:	46a0      	mov	r8, r4
 8014cd0:	e7a5      	b.n	8014c1e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8014cd2:	2400      	movs	r4, #0
 8014cd4:	e7ed      	b.n	8014cb2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8014cd6:	4626      	mov	r6, r4
 8014cd8:	46a0      	mov	r8, r4
 8014cda:	e7a0      	b.n	8014c1e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8014cdc:	2900      	cmp	r1, #0
 8014cde:	d0b0      	beq.n	8014c42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8014ce0:	2720      	movs	r7, #32
 8014ce2:	682e      	ldr	r6, [r5, #0]
 8014ce4:	2900      	cmp	r1, #0
 8014ce6:	d0ac      	beq.n	8014c42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8014ce8:	3901      	subs	r1, #1
 8014cea:	4296      	cmp	r6, r2
 8014cec:	b289      	uxth	r1, r1
 8014cee:	daa7      	bge.n	8014c40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8014cf0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8014cf4:	682b      	ldr	r3, [r5, #0]
 8014cf6:	3301      	adds	r3, #1
 8014cf8:	602b      	str	r3, [r5, #0]
 8014cfa:	e7f2      	b.n	8014ce2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8014cfc:	b188      	cbz	r0, 8014d22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8014cfe:	682b      	ldr	r3, [r5, #0]
 8014d00:	3801      	subs	r0, #1
 8014d02:	429a      	cmp	r2, r3
 8014d04:	b280      	uxth	r0, r0
 8014d06:	dd0c      	ble.n	8014d22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8014d08:	f8db 3000 	ldr.w	r3, [fp]
 8014d0c:	1c9c      	adds	r4, r3, #2
 8014d0e:	f8cb 4000 	str.w	r4, [fp]
 8014d12:	881c      	ldrh	r4, [r3, #0]
 8014d14:	682b      	ldr	r3, [r5, #0]
 8014d16:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8014d1a:	682b      	ldr	r3, [r5, #0]
 8014d1c:	3301      	adds	r3, #1
 8014d1e:	602b      	str	r3, [r5, #0]
 8014d20:	e7ec      	b.n	8014cfc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8014d22:	2620      	movs	r6, #32
 8014d24:	b151      	cbz	r1, 8014d3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8014d26:	6828      	ldr	r0, [r5, #0]
 8014d28:	3901      	subs	r1, #1
 8014d2a:	4282      	cmp	r2, r0
 8014d2c:	b289      	uxth	r1, r1
 8014d2e:	dd05      	ble.n	8014d3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8014d30:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8014d34:	682b      	ldr	r3, [r5, #0]
 8014d36:	3301      	adds	r3, #1
 8014d38:	602b      	str	r3, [r5, #0]
 8014d3a:	e7f3      	b.n	8014d24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8014d3c:	b005      	add	sp, #20
 8014d3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014d42 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8014d42:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014d46:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8014d4a:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 8014d4e:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 8014d52:	2400      	movs	r4, #0
 8014d54:	8014      	strh	r4, [r2, #0]
 8014d56:	701c      	strb	r4, [r3, #0]
 8014d58:	f888 4000 	strb.w	r4, [r8]
 8014d5c:	f88c 4000 	strb.w	r4, [ip]
 8014d60:	f88e 4000 	strb.w	r4, [lr]
 8014d64:	703c      	strb	r4, [r7, #0]
 8014d66:	6804      	ldr	r4, [r0, #0]
 8014d68:	b1a4      	cbz	r4, 8014d94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8014d6a:	8824      	ldrh	r4, [r4, #0]
 8014d6c:	f04f 0901 	mov.w	r9, #1
 8014d70:	b314      	cbz	r4, 8014db8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8014d72:	2c2b      	cmp	r4, #43	@ 0x2b
 8014d74:	d001      	beq.n	8014d7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8014d76:	2c20      	cmp	r4, #32
 8014d78:	d110      	bne.n	8014d9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8014d7a:	8014      	strh	r4, [r2, #0]
 8014d7c:	6804      	ldr	r4, [r0, #0]
 8014d7e:	b10c      	cbz	r4, 8014d84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8014d80:	3402      	adds	r4, #2
 8014d82:	6004      	str	r4, [r0, #0]
 8014d84:	680c      	ldr	r4, [r1, #0]
 8014d86:	b10c      	cbz	r4, 8014d8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8014d88:	3401      	adds	r4, #1
 8014d8a:	600c      	str	r4, [r1, #0]
 8014d8c:	6804      	ldr	r4, [r0, #0]
 8014d8e:	b17c      	cbz	r4, 8014db0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8014d90:	8824      	ldrh	r4, [r4, #0]
 8014d92:	e7ed      	b.n	8014d70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8014d94:	680c      	ldr	r4, [r1, #0]
 8014d96:	b17c      	cbz	r4, 8014db8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8014d98:	7824      	ldrb	r4, [r4, #0]
 8014d9a:	e7e7      	b.n	8014d6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8014d9c:	2c2d      	cmp	r4, #45	@ 0x2d
 8014d9e:	d102      	bne.n	8014da6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8014da0:	f883 9000 	strb.w	r9, [r3]
 8014da4:	e7ea      	b.n	8014d7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8014da6:	2c23      	cmp	r4, #35	@ 0x23
 8014da8:	d107      	bne.n	8014dba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8014daa:	f888 9000 	strb.w	r9, [r8]
 8014dae:	e7e5      	b.n	8014d7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8014db0:	680c      	ldr	r4, [r1, #0]
 8014db2:	b10c      	cbz	r4, 8014db8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8014db4:	7824      	ldrb	r4, [r4, #0]
 8014db6:	e7db      	b.n	8014d70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8014db8:	2400      	movs	r4, #0
 8014dba:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 8014dbe:	2b09      	cmp	r3, #9
 8014dc0:	d901      	bls.n	8014dc6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8014dc2:	2c2a      	cmp	r4, #42	@ 0x2a
 8014dc4:	d122      	bne.n	8014e0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8014dc6:	2301      	movs	r3, #1
 8014dc8:	2c30      	cmp	r4, #48	@ 0x30
 8014dca:	f88e 3000 	strb.w	r3, [lr]
 8014dce:	d10d      	bne.n	8014dec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8014dd0:	f88c 3000 	strb.w	r3, [ip]
 8014dd4:	6803      	ldr	r3, [r0, #0]
 8014dd6:	b10b      	cbz	r3, 8014ddc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8014dd8:	3302      	adds	r3, #2
 8014dda:	6003      	str	r3, [r0, #0]
 8014ddc:	680b      	ldr	r3, [r1, #0]
 8014dde:	b10b      	cbz	r3, 8014de4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8014de0:	3301      	adds	r3, #1
 8014de2:	600b      	str	r3, [r1, #0]
 8014de4:	6803      	ldr	r3, [r0, #0]
 8014de6:	2b00      	cmp	r3, #0
 8014de8:	d02f      	beq.n	8014e4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8014dea:	881c      	ldrh	r4, [r3, #0]
 8014dec:	2c2a      	cmp	r4, #42	@ 0x2a
 8014dee:	d135      	bne.n	8014e5c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8014df0:	f04f 33ff 	mov.w	r3, #4294967295
 8014df4:	6033      	str	r3, [r6, #0]
 8014df6:	6803      	ldr	r3, [r0, #0]
 8014df8:	b10b      	cbz	r3, 8014dfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8014dfa:	3302      	adds	r3, #2
 8014dfc:	6003      	str	r3, [r0, #0]
 8014dfe:	680b      	ldr	r3, [r1, #0]
 8014e00:	b10b      	cbz	r3, 8014e06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8014e02:	3301      	adds	r3, #1
 8014e04:	600b      	str	r3, [r1, #0]
 8014e06:	6803      	ldr	r3, [r0, #0]
 8014e08:	b31b      	cbz	r3, 8014e52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8014e0a:	881c      	ldrh	r4, [r3, #0]
 8014e0c:	2c2e      	cmp	r4, #46	@ 0x2e
 8014e0e:	d11a      	bne.n	8014e46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8014e10:	2301      	movs	r3, #1
 8014e12:	703b      	strb	r3, [r7, #0]
 8014e14:	6803      	ldr	r3, [r0, #0]
 8014e16:	b10b      	cbz	r3, 8014e1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8014e18:	3302      	adds	r3, #2
 8014e1a:	6003      	str	r3, [r0, #0]
 8014e1c:	680b      	ldr	r3, [r1, #0]
 8014e1e:	b10b      	cbz	r3, 8014e24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8014e20:	3301      	adds	r3, #1
 8014e22:	600b      	str	r3, [r1, #0]
 8014e24:	6803      	ldr	r3, [r0, #0]
 8014e26:	2b00      	cmp	r3, #0
 8014e28:	d036      	beq.n	8014e98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8014e2a:	881b      	ldrh	r3, [r3, #0]
 8014e2c:	2b2a      	cmp	r3, #42	@ 0x2a
 8014e2e:	d137      	bne.n	8014ea0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8014e30:	f04f 33ff 	mov.w	r3, #4294967295
 8014e34:	602b      	str	r3, [r5, #0]
 8014e36:	6803      	ldr	r3, [r0, #0]
 8014e38:	b10b      	cbz	r3, 8014e3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8014e3a:	3302      	adds	r3, #2
 8014e3c:	6003      	str	r3, [r0, #0]
 8014e3e:	680b      	ldr	r3, [r1, #0]
 8014e40:	b10b      	cbz	r3, 8014e46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8014e42:	3301      	adds	r3, #1
 8014e44:	600b      	str	r3, [r1, #0]
 8014e46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014e4a:	680c      	ldr	r4, [r1, #0]
 8014e4c:	b134      	cbz	r4, 8014e5c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8014e4e:	7824      	ldrb	r4, [r4, #0]
 8014e50:	e7cc      	b.n	8014dec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8014e52:	680b      	ldr	r3, [r1, #0]
 8014e54:	2b00      	cmp	r3, #0
 8014e56:	d0f6      	beq.n	8014e46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8014e58:	781c      	ldrb	r4, [r3, #0]
 8014e5a:	e7d7      	b.n	8014e0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8014e5c:	2300      	movs	r3, #0
 8014e5e:	6033      	str	r3, [r6, #0]
 8014e60:	220a      	movs	r2, #10
 8014e62:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 8014e66:	fa1f f38c 	uxth.w	r3, ip
 8014e6a:	2b09      	cmp	r3, #9
 8014e6c:	d8ce      	bhi.n	8014e0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8014e6e:	6833      	ldr	r3, [r6, #0]
 8014e70:	fb02 c303 	mla	r3, r2, r3, ip
 8014e74:	6033      	str	r3, [r6, #0]
 8014e76:	6803      	ldr	r3, [r0, #0]
 8014e78:	b10b      	cbz	r3, 8014e7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8014e7a:	3302      	adds	r3, #2
 8014e7c:	6003      	str	r3, [r0, #0]
 8014e7e:	680b      	ldr	r3, [r1, #0]
 8014e80:	b10b      	cbz	r3, 8014e86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8014e82:	3301      	adds	r3, #1
 8014e84:	600b      	str	r3, [r1, #0]
 8014e86:	6803      	ldr	r3, [r0, #0]
 8014e88:	b10b      	cbz	r3, 8014e8e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8014e8a:	881c      	ldrh	r4, [r3, #0]
 8014e8c:	e7e9      	b.n	8014e62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8014e8e:	680c      	ldr	r4, [r1, #0]
 8014e90:	2c00      	cmp	r4, #0
 8014e92:	d0e6      	beq.n	8014e62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8014e94:	7824      	ldrb	r4, [r4, #0]
 8014e96:	e7e4      	b.n	8014e62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8014e98:	680b      	ldr	r3, [r1, #0]
 8014e9a:	b10b      	cbz	r3, 8014ea0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8014e9c:	781b      	ldrb	r3, [r3, #0]
 8014e9e:	e7c5      	b.n	8014e2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8014ea0:	2200      	movs	r2, #0
 8014ea2:	602a      	str	r2, [r5, #0]
 8014ea4:	240a      	movs	r4, #10
 8014ea6:	3b30      	subs	r3, #48	@ 0x30
 8014ea8:	b29e      	uxth	r6, r3
 8014eaa:	2e09      	cmp	r6, #9
 8014eac:	682a      	ldr	r2, [r5, #0]
 8014eae:	d813      	bhi.n	8014ed8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8014eb0:	fb04 3302 	mla	r3, r4, r2, r3
 8014eb4:	602b      	str	r3, [r5, #0]
 8014eb6:	6803      	ldr	r3, [r0, #0]
 8014eb8:	b10b      	cbz	r3, 8014ebe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8014eba:	3302      	adds	r3, #2
 8014ebc:	6003      	str	r3, [r0, #0]
 8014ebe:	680b      	ldr	r3, [r1, #0]
 8014ec0:	b10b      	cbz	r3, 8014ec6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8014ec2:	3301      	adds	r3, #1
 8014ec4:	600b      	str	r3, [r1, #0]
 8014ec6:	6803      	ldr	r3, [r0, #0]
 8014ec8:	b10b      	cbz	r3, 8014ece <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8014eca:	881b      	ldrh	r3, [r3, #0]
 8014ecc:	e7eb      	b.n	8014ea6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8014ece:	680b      	ldr	r3, [r1, #0]
 8014ed0:	2b00      	cmp	r3, #0
 8014ed2:	d0e8      	beq.n	8014ea6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8014ed4:	781b      	ldrb	r3, [r3, #0]
 8014ed6:	e7e6      	b.n	8014ea6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8014ed8:	2a06      	cmp	r2, #6
 8014eda:	bfa8      	it	ge
 8014edc:	2206      	movge	r2, #6
 8014ede:	602a      	str	r2, [r5, #0]
 8014ee0:	e7b1      	b.n	8014e46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08014ee2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8014ee2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ee6:	b0a3      	sub	sp, #140	@ 0x8c
 8014ee8:	2600      	movs	r6, #0
 8014eea:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 8014eee:	4607      	mov	r7, r0
 8014ef0:	4688      	mov	r8, r1
 8014ef2:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8014ef6:	4631      	mov	r1, r6
 8014ef8:	2242      	movs	r2, #66	@ 0x42
 8014efa:	4648      	mov	r0, r9
 8014efc:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 8014efe:	960d      	str	r6, [sp, #52]	@ 0x34
 8014f00:	f010 fbdf 	bl	80256c2 <memset>
 8014f04:	b15f      	cbz	r7, 8014f1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8014f06:	f108 3aff 	add.w	sl, r8, #4294967295
 8014f0a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014f0c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014f0e:	b152      	cbz	r2, 8014f26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8014f10:	8812      	ldrh	r2, [r2, #0]
 8014f12:	b10a      	cbz	r2, 8014f18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8014f14:	459a      	cmp	sl, r3
 8014f16:	dc2e      	bgt.n	8014f76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8014f18:	2200      	movs	r2, #0
 8014f1a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014f1e:	4638      	mov	r0, r7
 8014f20:	b023      	add	sp, #140	@ 0x8c
 8014f22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014f26:	9a08      	ldr	r2, [sp, #32]
 8014f28:	2a00      	cmp	r2, #0
 8014f2a:	d0f5      	beq.n	8014f18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8014f2c:	7812      	ldrb	r2, [r2, #0]
 8014f2e:	e7f0      	b.n	8014f12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8014f30:	2d00      	cmp	r5, #0
 8014f32:	d0ea      	beq.n	8014f0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014f34:	782a      	ldrb	r2, [r5, #0]
 8014f36:	b142      	cbz	r2, 8014f4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8014f38:	2a25      	cmp	r2, #37	@ 0x25
 8014f3a:	d001      	beq.n	8014f40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8014f3c:	459a      	cmp	sl, r3
 8014f3e:	dc08      	bgt.n	8014f52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8014f40:	f1bb 0f00 	cmp.w	fp, #0
 8014f44:	d121      	bne.n	8014f8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8014f46:	2d00      	cmp	r5, #0
 8014f48:	d0df      	beq.n	8014f0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014f4a:	782a      	ldrb	r2, [r5, #0]
 8014f4c:	f04f 0b00 	mov.w	fp, #0
 8014f50:	e01d      	b.n	8014f8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8014f52:	f1bb 0f00 	cmp.w	fp, #0
 8014f56:	d078      	beq.n	801504a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8014f58:	f8bb 2000 	ldrh.w	r2, [fp]
 8014f5c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014f60:	f1bb 0f00 	cmp.w	fp, #0
 8014f64:	d002      	beq.n	8014f6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8014f66:	f10b 0202 	add.w	r2, fp, #2
 8014f6a:	9209      	str	r2, [sp, #36]	@ 0x24
 8014f6c:	b10d      	cbz	r5, 8014f72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8014f6e:	3501      	adds	r5, #1
 8014f70:	9508      	str	r5, [sp, #32]
 8014f72:	3301      	adds	r3, #1
 8014f74:	930d      	str	r3, [sp, #52]	@ 0x34
 8014f76:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8014f7a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014f7c:	f1bb 0f00 	cmp.w	fp, #0
 8014f80:	d0d6      	beq.n	8014f30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8014f82:	f8bb 2000 	ldrh.w	r2, [fp]
 8014f86:	2a00      	cmp	r2, #0
 8014f88:	d1d6      	bne.n	8014f38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8014f8a:	f8bb 2000 	ldrh.w	r2, [fp]
 8014f8e:	2a00      	cmp	r2, #0
 8014f90:	d0bb      	beq.n	8014f0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014f92:	459a      	cmp	sl, r3
 8014f94:	ddb9      	ble.n	8014f0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014f96:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 8014f9a:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 8014f9e:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 8014fa2:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 8014fa6:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 8014faa:	960e      	str	r6, [sp, #56]	@ 0x38
 8014fac:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 8014fb0:	960f      	str	r6, [sp, #60]	@ 0x3c
 8014fb2:	f1bb 0f00 	cmp.w	fp, #0
 8014fb6:	d002      	beq.n	8014fbe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8014fb8:	f10b 0302 	add.w	r3, fp, #2
 8014fbc:	9309      	str	r3, [sp, #36]	@ 0x24
 8014fbe:	b10d      	cbz	r5, 8014fc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8014fc0:	1c6b      	adds	r3, r5, #1
 8014fc2:	9308      	str	r3, [sp, #32]
 8014fc4:	ab0f      	add	r3, sp, #60	@ 0x3c
 8014fc6:	9305      	str	r3, [sp, #20]
 8014fc8:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 8014fcc:	9304      	str	r3, [sp, #16]
 8014fce:	ab0e      	add	r3, sp, #56	@ 0x38
 8014fd0:	9303      	str	r3, [sp, #12]
 8014fd2:	ab0c      	add	r3, sp, #48	@ 0x30
 8014fd4:	9302      	str	r3, [sp, #8]
 8014fd6:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 8014fda:	9301      	str	r3, [sp, #4]
 8014fdc:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 8014fe0:	9300      	str	r3, [sp, #0]
 8014fe2:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 8014fe6:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 8014fea:	a908      	add	r1, sp, #32
 8014fec:	a809      	add	r0, sp, #36	@ 0x24
 8014fee:	f7ff fea8 	bl	8014d42 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8014ff2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014ff4:	2b00      	cmp	r3, #0
 8014ff6:	bfbe      	ittt	lt
 8014ff8:	6823      	ldrlt	r3, [r4, #0]
 8014ffa:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8014ffe:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8015000:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8015002:	bfb8      	it	lt
 8015004:	3404      	addlt	r4, #4
 8015006:	2b00      	cmp	r3, #0
 8015008:	bfb8      	it	lt
 801500a:	6823      	ldrlt	r3, [r4, #0]
 801500c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8015010:	bfbe      	ittt	lt
 8015012:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8015016:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 8015018:	3404      	addlt	r4, #4
 801501a:	b1d9      	cbz	r1, 8015054 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801501c:	880b      	ldrh	r3, [r1, #0]
 801501e:	2b69      	cmp	r3, #105	@ 0x69
 8015020:	d01f      	beq.n	8015062 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8015022:	d82f      	bhi.n	8015084 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8015024:	2b58      	cmp	r3, #88	@ 0x58
 8015026:	d01c      	beq.n	8015062 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8015028:	d818      	bhi.n	801505c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801502a:	2b25      	cmp	r3, #37	@ 0x25
 801502c:	d034      	beq.n	8015098 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801502e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8015032:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015034:	f1bb 0f00 	cmp.w	fp, #0
 8015038:	f000 80b8 	beq.w	80151ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801503c:	f8bb 5000 	ldrh.w	r5, [fp]
 8015040:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8015044:	3301      	adds	r3, #1
 8015046:	930d      	str	r3, [sp, #52]	@ 0x34
 8015048:	e029      	b.n	801509e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801504a:	b10d      	cbz	r5, 8015050 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801504c:	782a      	ldrb	r2, [r5, #0]
 801504e:	e785      	b.n	8014f5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8015050:	462a      	mov	r2, r5
 8015052:	e783      	b.n	8014f5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8015054:	2a00      	cmp	r2, #0
 8015056:	d0ea      	beq.n	801502e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8015058:	7813      	ldrb	r3, [r2, #0]
 801505a:	e7e0      	b.n	801501e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801505c:	3b63      	subs	r3, #99	@ 0x63
 801505e:	2b01      	cmp	r3, #1
 8015060:	d8e5      	bhi.n	801502e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8015062:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 8015066:	b329      	cbz	r1, 80150b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8015068:	880b      	ldrh	r3, [r1, #0]
 801506a:	2b69      	cmp	r3, #105	@ 0x69
 801506c:	d063      	beq.n	8015136 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801506e:	d825      	bhi.n	80150bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8015070:	2b63      	cmp	r3, #99	@ 0x63
 8015072:	d038      	beq.n	80150e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8015074:	2b64      	cmp	r3, #100	@ 0x64
 8015076:	d05e      	beq.n	8015136 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8015078:	2b58      	cmp	r3, #88	@ 0x58
 801507a:	d07b      	beq.n	8015174 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801507c:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 8015080:	4625      	mov	r5, r4
 8015082:	e036      	b.n	80150f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8015084:	2b73      	cmp	r3, #115	@ 0x73
 8015086:	d0ec      	beq.n	8015062 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8015088:	d802      	bhi.n	8015090 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801508a:	2b6f      	cmp	r3, #111	@ 0x6f
 801508c:	d1cf      	bne.n	801502e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801508e:	e7e8      	b.n	8015062 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8015090:	2b75      	cmp	r3, #117	@ 0x75
 8015092:	d0e6      	beq.n	8015062 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8015094:	2b78      	cmp	r3, #120	@ 0x78
 8015096:	e7f9      	b.n	801508c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8015098:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801509a:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801509e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80150a0:	b10b      	cbz	r3, 80150a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 80150a2:	3302      	adds	r3, #2
 80150a4:	9309      	str	r3, [sp, #36]	@ 0x24
 80150a6:	9b08      	ldr	r3, [sp, #32]
 80150a8:	2b00      	cmp	r3, #0
 80150aa:	f43f af2e 	beq.w	8014f0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80150ae:	3301      	adds	r3, #1
 80150b0:	9308      	str	r3, [sp, #32]
 80150b2:	e72a      	b.n	8014f0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80150b4:	2a00      	cmp	r2, #0
 80150b6:	d0e1      	beq.n	801507c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80150b8:	7813      	ldrb	r3, [r2, #0]
 80150ba:	e7d6      	b.n	801506a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 80150bc:	2b73      	cmp	r3, #115	@ 0x73
 80150be:	d036      	beq.n	801512e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 80150c0:	d807      	bhi.n	80150d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 80150c2:	2b6f      	cmp	r3, #111	@ 0x6f
 80150c4:	d1da      	bne.n	801507c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80150c6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80150c8:	1d25      	adds	r5, r4, #4
 80150ca:	eba8 0202 	sub.w	r2, r8, r2
 80150ce:	2308      	movs	r3, #8
 80150d0:	e04a      	b.n	8015168 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80150d2:	2b75      	cmp	r3, #117	@ 0x75
 80150d4:	d043      	beq.n	801515e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 80150d6:	2b78      	cmp	r3, #120	@ 0x78
 80150d8:	d1d0      	bne.n	801507c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80150da:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80150dc:	1d25      	adds	r5, r4, #4
 80150de:	eba8 0202 	sub.w	r2, r8, r2
 80150e2:	2310      	movs	r3, #16
 80150e4:	e040      	b.n	8015168 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80150e6:	6823      	ldr	r3, [r4, #0]
 80150e8:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 80150ec:	1d25      	adds	r5, r4, #4
 80150ee:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 80150f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80150f4:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 80150f8:	2b00      	cmp	r3, #0
 80150fa:	d052      	beq.n	80151a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 80150fc:	881a      	ldrh	r2, [r3, #0]
 80150fe:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 8015102:	a80d      	add	r0, sp, #52	@ 0x34
 8015104:	9005      	str	r0, [sp, #20]
 8015106:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 801510a:	9004      	str	r0, [sp, #16]
 801510c:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801510e:	9003      	str	r0, [sp, #12]
 8015110:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 8015114:	9002      	str	r0, [sp, #8]
 8015116:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8015118:	9001      	str	r0, [sp, #4]
 801511a:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 801511e:	9000      	str	r0, [sp, #0]
 8015120:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8015124:	a810      	add	r0, sp, #64	@ 0x40
 8015126:	f7ff fd49 	bl	8014bbc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801512a:	462c      	mov	r4, r5
 801512c:	e7b7      	b.n	801509e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801512e:	6823      	ldr	r3, [r4, #0]
 8015130:	1d25      	adds	r5, r4, #4
 8015132:	9310      	str	r3, [sp, #64]	@ 0x40
 8015134:	e7dd      	b.n	80150f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8015136:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015138:	6820      	ldr	r0, [r4, #0]
 801513a:	eba8 0202 	sub.w	r2, r8, r2
 801513e:	230a      	movs	r3, #10
 8015140:	b292      	uxth	r2, r2
 8015142:	4649      	mov	r1, r9
 8015144:	f7ff fcf0 	bl	8014b28 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8015148:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 801514c:	2b2d      	cmp	r3, #45	@ 0x2d
 801514e:	f104 0504 	add.w	r5, r4, #4
 8015152:	d1ce      	bne.n	80150f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8015154:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8015158:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801515a:	3302      	adds	r3, #2
 801515c:	e7e9      	b.n	8015132 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801515e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015160:	1d25      	adds	r5, r4, #4
 8015162:	eba8 0202 	sub.w	r2, r8, r2
 8015166:	230a      	movs	r3, #10
 8015168:	b292      	uxth	r2, r2
 801516a:	4649      	mov	r1, r9
 801516c:	6820      	ldr	r0, [r4, #0]
 801516e:	f7ff fd07 	bl	8014b80 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8015172:	e7be      	b.n	80150f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8015174:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015176:	6820      	ldr	r0, [r4, #0]
 8015178:	eba8 0202 	sub.w	r2, r8, r2
 801517c:	b292      	uxth	r2, r2
 801517e:	2310      	movs	r3, #16
 8015180:	4649      	mov	r1, r9
 8015182:	f7ff fcfd 	bl	8014b80 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8015186:	1d25      	adds	r5, r4, #4
 8015188:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 801518c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8015190:	2b00      	cmp	r3, #0
 8015192:	d0ae      	beq.n	80150f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8015194:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 8015198:	2919      	cmp	r1, #25
 801519a:	d8f7      	bhi.n	801518c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801519c:	3b20      	subs	r3, #32
 801519e:	8013      	strh	r3, [r2, #0]
 80151a0:	e7f4      	b.n	801518c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80151a2:	9a08      	ldr	r2, [sp, #32]
 80151a4:	2a00      	cmp	r2, #0
 80151a6:	d0aa      	beq.n	80150fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80151a8:	7812      	ldrb	r2, [r2, #0]
 80151aa:	e7a8      	b.n	80150fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80151ac:	2d00      	cmp	r5, #0
 80151ae:	f43f af47 	beq.w	8015040 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 80151b2:	782d      	ldrb	r5, [r5, #0]
 80151b4:	e744      	b.n	8015040 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

080151b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80151b6:	b507      	push	{r0, r1, r2, lr}
 80151b8:	9300      	str	r3, [sp, #0]
 80151ba:	4613      	mov	r3, r2
 80151bc:	2200      	movs	r2, #0
 80151be:	f7ff fe90 	bl	8014ee2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80151c2:	b003      	add	sp, #12
 80151c4:	f85d fb04 	ldr.w	pc, [sp], #4

080151c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 80151c8:	b40c      	push	{r2, r3}
 80151ca:	b507      	push	{r0, r1, r2, lr}
 80151cc:	ab04      	add	r3, sp, #16
 80151ce:	f853 2b04 	ldr.w	r2, [r3], #4
 80151d2:	9301      	str	r3, [sp, #4]
 80151d4:	f7ff ffef 	bl	80151b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 80151d8:	b003      	add	sp, #12
 80151da:	f85d eb04 	ldr.w	lr, [sp], #4
 80151de:	b002      	add	sp, #8
 80151e0:	4770      	bx	lr
	...

080151e4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80151e4:	4b01      	ldr	r3, [pc, #4]	@ (80151ec <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80151e6:	6018      	str	r0, [r3, #0]
 80151e8:	4770      	bx	lr
 80151ea:	bf00      	nop
 80151ec:	200152a0 	.word	0x200152a0

080151f0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80151f0:	4b06      	ldr	r3, [pc, #24]	@ (801520c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80151f2:	881a      	ldrh	r2, [r3, #0]
 80151f4:	4282      	cmp	r2, r0
 80151f6:	d807      	bhi.n	8015208 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80151f8:	4b05      	ldr	r3, [pc, #20]	@ (8015210 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80151fa:	881b      	ldrh	r3, [r3, #0]
 80151fc:	4413      	add	r3, r2
 80151fe:	4298      	cmp	r0, r3
 8015200:	bfac      	ite	ge
 8015202:	2000      	movge	r0, #0
 8015204:	2001      	movlt	r0, #1
 8015206:	4770      	bx	lr
 8015208:	2000      	movs	r0, #0
 801520a:	4770      	bx	lr
 801520c:	200152c0 	.word	0x200152c0
 8015210:	200152c4 	.word	0x200152c4

08015214 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8015214:	b508      	push	{r3, lr}
 8015216:	4601      	mov	r1, r0
 8015218:	f7ff ffea 	bl	80151f0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801521c:	b118      	cbz	r0, 8015226 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801521e:	4b02      	ldr	r3, [pc, #8]	@ (8015228 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8015220:	681b      	ldr	r3, [r3, #0]
 8015222:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8015226:	bd08      	pop	{r3, pc}
 8015228:	200152a4 	.word	0x200152a4

0801522c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801522c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801522e:	4c24      	ldr	r4, [pc, #144]	@ (80152c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8015230:	6823      	ldr	r3, [r4, #0]
 8015232:	2b00      	cmp	r3, #0
 8015234:	d042      	beq.n	80152bc <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8015236:	4a23      	ldr	r2, [pc, #140]	@ (80152c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8015238:	4d23      	ldr	r5, [pc, #140]	@ (80152c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801523a:	8811      	ldrh	r1, [r2, #0]
 801523c:	f8b5 c000 	ldrh.w	ip, [r5]
 8015240:	4822      	ldr	r0, [pc, #136]	@ (80152cc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8015242:	4461      	add	r1, ip
 8015244:	1c4a      	adds	r2, r1, #1
 8015246:	f022 0201 	bic.w	r2, r2, #1
 801524a:	008f      	lsls	r7, r1, #2
 801524c:	0412      	lsls	r2, r2, #16
 801524e:	19de      	adds	r6, r3, r7
 8015250:	0c12      	lsrs	r2, r2, #16
 8015252:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8015256:	6006      	str	r6, [r0, #0]
 8015258:	4e1d      	ldr	r6, [pc, #116]	@ (80152d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801525a:	19da      	adds	r2, r3, r7
 801525c:	6032      	str	r2, [r6, #0]
 801525e:	220e      	movs	r2, #14
 8015260:	fb02 f20c 	mul.w	r2, r2, ip
 8015264:	3203      	adds	r2, #3
 8015266:	f022 0203 	bic.w	r2, r2, #3
 801526a:	443a      	add	r2, r7
 801526c:	4f19      	ldr	r7, [pc, #100]	@ (80152d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801526e:	4413      	add	r3, r2
 8015270:	603b      	str	r3, [r7, #0]
 8015272:	4f19      	ldr	r7, [pc, #100]	@ (80152d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8015274:	2300      	movs	r3, #0
 8015276:	803b      	strh	r3, [r7, #0]
 8015278:	4f18      	ldr	r7, [pc, #96]	@ (80152dc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801527a:	683f      	ldr	r7, [r7, #0]
 801527c:	1aba      	subs	r2, r7, r2
 801527e:	4f18      	ldr	r7, [pc, #96]	@ (80152e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8015280:	603a      	str	r2, [r7, #0]
 8015282:	4a18      	ldr	r2, [pc, #96]	@ (80152e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8015284:	469c      	mov	ip, r3
 8015286:	8013      	strh	r3, [r2, #0]
 8015288:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 801528c:	428b      	cmp	r3, r1
 801528e:	d10d      	bne.n	80152ac <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8015290:	882d      	ldrh	r5, [r5, #0]
 8015292:	6830      	ldr	r0, [r6, #0]
 8015294:	2300      	movs	r3, #0
 8015296:	240e      	movs	r4, #14
 8015298:	429d      	cmp	r5, r3
 801529a:	d90f      	bls.n	80152bc <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801529c:	fb04 0203 	mla	r2, r4, r3, r0
 80152a0:	3301      	adds	r3, #1
 80152a2:	7b11      	ldrb	r1, [r2, #12]
 80152a4:	f36f 1145 	bfc	r1, #5, #1
 80152a8:	7311      	strb	r1, [r2, #12]
 80152aa:	e7f5      	b.n	8015298 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80152ac:	6822      	ldr	r2, [r4, #0]
 80152ae:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80152b2:	6802      	ldr	r2, [r0, #0]
 80152b4:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80152b8:	3301      	adds	r3, #1
 80152ba:	e7e7      	b.n	801528c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80152bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80152be:	bf00      	nop
 80152c0:	200152a4 	.word	0x200152a4
 80152c4:	200152c0 	.word	0x200152c0
 80152c8:	200152c4 	.word	0x200152c4
 80152cc:	200152b8 	.word	0x200152b8
 80152d0:	200152a8 	.word	0x200152a8
 80152d4:	200152b0 	.word	0x200152b0
 80152d8:	200152c2 	.word	0x200152c2
 80152dc:	200152ac 	.word	0x200152ac
 80152e0:	200152bc 	.word	0x200152bc
 80152e4:	200152b4 	.word	0x200152b4

080152e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80152e8:	4b06      	ldr	r3, [pc, #24]	@ (8015304 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80152ea:	681b      	ldr	r3, [r3, #0]
 80152ec:	b943      	cbnz	r3, 8015300 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80152ee:	b139      	cbz	r1, 8015300 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80152f0:	4b05      	ldr	r3, [pc, #20]	@ (8015308 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80152f2:	801a      	strh	r2, [r3, #0]
 80152f4:	4b05      	ldr	r3, [pc, #20]	@ (801530c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80152f6:	6019      	str	r1, [r3, #0]
 80152f8:	4b05      	ldr	r3, [pc, #20]	@ (8015310 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80152fa:	6018      	str	r0, [r3, #0]
 80152fc:	f7ff bf96 	b.w	801522c <_ZN8touchgfx6Bitmap10clearCacheEv>
 8015300:	4770      	bx	lr
 8015302:	bf00      	nop
 8015304:	200152b0 	.word	0x200152b0
 8015308:	200152c4 	.word	0x200152c4
 801530c:	200152ac 	.word	0x200152ac
 8015310:	200152a4 	.word	0x200152a4

08015314 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8015314:	b470      	push	{r4, r5, r6}
 8015316:	4c07      	ldr	r4, [pc, #28]	@ (8015334 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8015318:	6826      	ldr	r6, [r4, #0]
 801531a:	4605      	mov	r5, r0
 801531c:	4610      	mov	r0, r2
 801531e:	9a03      	ldr	r2, [sp, #12]
 8015320:	b936      	cbnz	r6, 8015330 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8015322:	6025      	str	r5, [r4, #0]
 8015324:	4c04      	ldr	r4, [pc, #16]	@ (8015338 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8015326:	8021      	strh	r1, [r4, #0]
 8015328:	bc70      	pop	{r4, r5, r6}
 801532a:	4619      	mov	r1, r3
 801532c:	f7ff bfdc 	b.w	80152e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8015330:	bc70      	pop	{r4, r5, r6}
 8015332:	4770      	bx	lr
 8015334:	200152c8 	.word	0x200152c8
 8015338:	200152c0 	.word	0x200152c0

0801533c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801533c:	4a12      	ldr	r2, [pc, #72]	@ (8015388 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801533e:	8803      	ldrh	r3, [r0, #0]
 8015340:	8812      	ldrh	r2, [r2, #0]
 8015342:	4293      	cmp	r3, r2
 8015344:	d207      	bcs.n	8015356 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8015346:	4a11      	ldr	r2, [pc, #68]	@ (801538c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8015348:	6812      	ldr	r2, [r2, #0]
 801534a:	2114      	movs	r1, #20
 801534c:	fb01 2303 	mla	r3, r1, r3, r2
 8015350:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8015354:	4770      	bx	lr
 8015356:	490e      	ldr	r1, [pc, #56]	@ (8015390 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8015358:	8809      	ldrh	r1, [r1, #0]
 801535a:	4411      	add	r1, r2
 801535c:	428b      	cmp	r3, r1
 801535e:	da04      	bge.n	801536a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8015360:	1a9b      	subs	r3, r3, r2
 8015362:	4a0c      	ldr	r2, [pc, #48]	@ (8015394 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8015364:	210e      	movs	r1, #14
 8015366:	6812      	ldr	r2, [r2, #0]
 8015368:	e7f0      	b.n	801534c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801536a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801536e:	4293      	cmp	r3, r2
 8015370:	d108      	bne.n	8015384 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8015372:	4b09      	ldr	r3, [pc, #36]	@ (8015398 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8015374:	781b      	ldrb	r3, [r3, #0]
 8015376:	b91b      	cbnz	r3, 8015380 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8015378:	4b08      	ldr	r3, [pc, #32]	@ (801539c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801537a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801537e:	4770      	bx	lr
 8015380:	4b07      	ldr	r3, [pc, #28]	@ (80153a0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8015382:	e7fa      	b.n	801537a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8015384:	2000      	movs	r0, #0
 8015386:	4770      	bx	lr
 8015388:	200152c0 	.word	0x200152c0
 801538c:	200152c8 	.word	0x200152c8
 8015390:	200152c4 	.word	0x200152c4
 8015394:	200152a8 	.word	0x200152a8
 8015398:	20015230 	.word	0x20015230
 801539c:	20015232 	.word	0x20015232
 80153a0:	20015234 	.word	0x20015234

080153a4 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80153a4:	4a12      	ldr	r2, [pc, #72]	@ (80153f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80153a6:	8803      	ldrh	r3, [r0, #0]
 80153a8:	8812      	ldrh	r2, [r2, #0]
 80153aa:	4293      	cmp	r3, r2
 80153ac:	d207      	bcs.n	80153be <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80153ae:	4a11      	ldr	r2, [pc, #68]	@ (80153f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80153b0:	6812      	ldr	r2, [r2, #0]
 80153b2:	2114      	movs	r1, #20
 80153b4:	fb01 2303 	mla	r3, r1, r3, r2
 80153b8:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80153bc:	4770      	bx	lr
 80153be:	490e      	ldr	r1, [pc, #56]	@ (80153f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80153c0:	8809      	ldrh	r1, [r1, #0]
 80153c2:	4411      	add	r1, r2
 80153c4:	428b      	cmp	r3, r1
 80153c6:	da04      	bge.n	80153d2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80153c8:	1a9b      	subs	r3, r3, r2
 80153ca:	4a0c      	ldr	r2, [pc, #48]	@ (80153fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80153cc:	210e      	movs	r1, #14
 80153ce:	6812      	ldr	r2, [r2, #0]
 80153d0:	e7f0      	b.n	80153b4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80153d2:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80153d6:	4293      	cmp	r3, r2
 80153d8:	d108      	bne.n	80153ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80153da:	4b09      	ldr	r3, [pc, #36]	@ (8015400 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80153dc:	781b      	ldrb	r3, [r3, #0]
 80153de:	b91b      	cbnz	r3, 80153e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80153e0:	4b08      	ldr	r3, [pc, #32]	@ (8015404 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80153e2:	f9b3 0000 	ldrsh.w	r0, [r3]
 80153e6:	4770      	bx	lr
 80153e8:	4b07      	ldr	r3, [pc, #28]	@ (8015408 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80153ea:	e7fa      	b.n	80153e2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80153ec:	2000      	movs	r0, #0
 80153ee:	4770      	bx	lr
 80153f0:	200152c0 	.word	0x200152c0
 80153f4:	200152c8 	.word	0x200152c8
 80153f8:	200152c4 	.word	0x200152c4
 80153fc:	200152a8 	.word	0x200152a8
 8015400:	20015230 	.word	0x20015230
 8015404:	20015234 	.word	0x20015234
 8015408:	20015232 	.word	0x20015232

0801540c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801540c:	b530      	push	{r4, r5, lr}
 801540e:	4a22      	ldr	r2, [pc, #136]	@ (8015498 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8015410:	880b      	ldrh	r3, [r1, #0]
 8015412:	8812      	ldrh	r2, [r2, #0]
 8015414:	4293      	cmp	r3, r2
 8015416:	d213      	bcs.n	8015440 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8015418:	4a20      	ldr	r2, [pc, #128]	@ (801549c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801541a:	6812      	ldr	r2, [r2, #0]
 801541c:	2114      	movs	r1, #20
 801541e:	fb01 2303 	mla	r3, r1, r3, r2
 8015422:	8a1a      	ldrh	r2, [r3, #16]
 8015424:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8015428:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801542c:	8a5b      	ldrh	r3, [r3, #18]
 801542e:	8004      	strh	r4, [r0, #0]
 8015430:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8015434:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8015438:	8041      	strh	r1, [r0, #2]
 801543a:	8082      	strh	r2, [r0, #4]
 801543c:	80c3      	strh	r3, [r0, #6]
 801543e:	e024      	b.n	801548a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8015440:	4917      	ldr	r1, [pc, #92]	@ (80154a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8015442:	8809      	ldrh	r1, [r1, #0]
 8015444:	4411      	add	r1, r2
 8015446:	428b      	cmp	r3, r1
 8015448:	da10      	bge.n	801546c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 801544a:	1a9b      	subs	r3, r3, r2
 801544c:	220e      	movs	r2, #14
 801544e:	4353      	muls	r3, r2
 8015450:	4a14      	ldr	r2, [pc, #80]	@ (80154a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8015452:	6811      	ldr	r1, [r2, #0]
 8015454:	18ca      	adds	r2, r1, r3
 8015456:	5ecd      	ldrsh	r5, [r1, r3]
 8015458:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 801545c:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8015460:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8015464:	8005      	strh	r5, [r0, #0]
 8015466:	8044      	strh	r4, [r0, #2]
 8015468:	8081      	strh	r1, [r0, #4]
 801546a:	e7e7      	b.n	801543c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801546c:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8015470:	4293      	cmp	r3, r2
 8015472:	d10b      	bne.n	801548c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 8015474:	4b0c      	ldr	r3, [pc, #48]	@ (80154a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8015476:	f9b3 1000 	ldrsh.w	r1, [r3]
 801547a:	4b0c      	ldr	r3, [pc, #48]	@ (80154ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 801547c:	8081      	strh	r1, [r0, #4]
 801547e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015482:	80c2      	strh	r2, [r0, #6]
 8015484:	2300      	movs	r3, #0
 8015486:	8003      	strh	r3, [r0, #0]
 8015488:	8043      	strh	r3, [r0, #2]
 801548a:	bd30      	pop	{r4, r5, pc}
 801548c:	2300      	movs	r3, #0
 801548e:	8003      	strh	r3, [r0, #0]
 8015490:	8043      	strh	r3, [r0, #2]
 8015492:	8083      	strh	r3, [r0, #4]
 8015494:	e7d2      	b.n	801543c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8015496:	bf00      	nop
 8015498:	200152c0 	.word	0x200152c0
 801549c:	200152c8 	.word	0x200152c8
 80154a0:	200152c4 	.word	0x200152c4
 80154a4:	200152a8 	.word	0x200152a8
 80154a8:	2001522c 	.word	0x2001522c
 80154ac:	2001522e 	.word	0x2001522e

080154b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80154b0:	4a17      	ldr	r2, [pc, #92]	@ (8015510 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 80154b2:	8803      	ldrh	r3, [r0, #0]
 80154b4:	8812      	ldrh	r2, [r2, #0]
 80154b6:	4293      	cmp	r3, r2
 80154b8:	d213      	bcs.n	80154e2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80154ba:	4a16      	ldr	r2, [pc, #88]	@ (8015514 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80154bc:	6812      	ldr	r2, [r2, #0]
 80154be:	2114      	movs	r1, #20
 80154c0:	fb01 2303 	mla	r3, r1, r3, r2
 80154c4:	8a1a      	ldrh	r2, [r3, #16]
 80154c6:	8919      	ldrh	r1, [r3, #8]
 80154c8:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80154cc:	428a      	cmp	r2, r1
 80154ce:	db1d      	blt.n	801550c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80154d0:	8a58      	ldrh	r0, [r3, #18]
 80154d2:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80154d6:	895b      	ldrh	r3, [r3, #10]
 80154d8:	4298      	cmp	r0, r3
 80154da:	bfac      	ite	ge
 80154dc:	2000      	movge	r0, #0
 80154de:	2001      	movlt	r0, #1
 80154e0:	4770      	bx	lr
 80154e2:	490d      	ldr	r1, [pc, #52]	@ (8015518 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80154e4:	8809      	ldrh	r1, [r1, #0]
 80154e6:	4411      	add	r1, r2
 80154e8:	428b      	cmp	r3, r1
 80154ea:	da0d      	bge.n	8015508 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80154ec:	1a9b      	subs	r3, r3, r2
 80154ee:	4a0b      	ldr	r2, [pc, #44]	@ (801551c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80154f0:	6812      	ldr	r2, [r2, #0]
 80154f2:	210e      	movs	r1, #14
 80154f4:	fb01 2303 	mla	r3, r1, r3, r2
 80154f8:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80154fc:	891a      	ldrh	r2, [r3, #8]
 80154fe:	4291      	cmp	r1, r2
 8015500:	db04      	blt.n	801550c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8015502:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8015506:	e7e6      	b.n	80154d6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8015508:	2000      	movs	r0, #0
 801550a:	4770      	bx	lr
 801550c:	2001      	movs	r0, #1
 801550e:	4770      	bx	lr
 8015510:	200152c0 	.word	0x200152c0
 8015514:	200152c8 	.word	0x200152c8
 8015518:	200152c4 	.word	0x200152c4
 801551c:	200152a8 	.word	0x200152a8

08015520 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8015520:	4a12      	ldr	r2, [pc, #72]	@ (801556c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8015522:	8803      	ldrh	r3, [r0, #0]
 8015524:	8811      	ldrh	r1, [r2, #0]
 8015526:	428b      	cmp	r3, r1
 8015528:	d20b      	bcs.n	8015542 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801552a:	4a11      	ldr	r2, [pc, #68]	@ (8015570 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801552c:	6812      	ldr	r2, [r2, #0]
 801552e:	b112      	cbz	r2, 8015536 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8015530:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8015534:	b9c0      	cbnz	r0, 8015568 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8015536:	4a0f      	ldr	r2, [pc, #60]	@ (8015574 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8015538:	6811      	ldr	r1, [r2, #0]
 801553a:	2214      	movs	r2, #20
 801553c:	4353      	muls	r3, r2
 801553e:	58c8      	ldr	r0, [r1, r3]
 8015540:	4770      	bx	lr
 8015542:	4a0d      	ldr	r2, [pc, #52]	@ (8015578 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8015544:	8812      	ldrh	r2, [r2, #0]
 8015546:	440a      	add	r2, r1
 8015548:	4293      	cmp	r3, r2
 801554a:	da04      	bge.n	8015556 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801554c:	4a08      	ldr	r2, [pc, #32]	@ (8015570 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801554e:	6812      	ldr	r2, [r2, #0]
 8015550:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8015554:	4770      	bx	lr
 8015556:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801555a:	4293      	cmp	r3, r2
 801555c:	d103      	bne.n	8015566 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801555e:	4b07      	ldr	r3, [pc, #28]	@ (801557c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8015560:	681b      	ldr	r3, [r3, #0]
 8015562:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8015564:	4770      	bx	lr
 8015566:	2000      	movs	r0, #0
 8015568:	4770      	bx	lr
 801556a:	bf00      	nop
 801556c:	200152c0 	.word	0x200152c0
 8015570:	200152a4 	.word	0x200152a4
 8015574:	200152c8 	.word	0x200152c8
 8015578:	200152c4 	.word	0x200152c4
 801557c:	20015238 	.word	0x20015238

08015580 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8015580:	4b24      	ldr	r3, [pc, #144]	@ (8015614 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8015582:	8802      	ldrh	r2, [r0, #0]
 8015584:	8818      	ldrh	r0, [r3, #0]
 8015586:	4282      	cmp	r2, r0
 8015588:	d221      	bcs.n	80155ce <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801558a:	4b23      	ldr	r3, [pc, #140]	@ (8015618 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801558c:	6819      	ldr	r1, [r3, #0]
 801558e:	2314      	movs	r3, #20
 8015590:	fb03 1302 	mla	r3, r3, r2, r1
 8015594:	6858      	ldr	r0, [r3, #4]
 8015596:	2800      	cmp	r0, #0
 8015598:	d03a      	beq.n	8015610 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801559a:	4920      	ldr	r1, [pc, #128]	@ (801561c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801559c:	6809      	ldr	r1, [r1, #0]
 801559e:	2900      	cmp	r1, #0
 80155a0:	d036      	beq.n	8015610 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80155a2:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80155a6:	2900      	cmp	r1, #0
 80155a8:	d032      	beq.n	8015610 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80155aa:	891a      	ldrh	r2, [r3, #8]
 80155ac:	8958      	ldrh	r0, [r3, #10]
 80155ae:	4350      	muls	r0, r2
 80155b0:	7c5a      	ldrb	r2, [r3, #17]
 80155b2:	7cdb      	ldrb	r3, [r3, #19]
 80155b4:	0952      	lsrs	r2, r2, #5
 80155b6:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80155ba:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80155be:	2b0b      	cmp	r3, #11
 80155c0:	bf18      	it	ne
 80155c2:	0040      	lslne	r0, r0, #1
 80155c4:	3003      	adds	r0, #3
 80155c6:	f020 0003 	bic.w	r0, r0, #3
 80155ca:	4408      	add	r0, r1
 80155cc:	4770      	bx	lr
 80155ce:	4b14      	ldr	r3, [pc, #80]	@ (8015620 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80155d0:	881b      	ldrh	r3, [r3, #0]
 80155d2:	4403      	add	r3, r0
 80155d4:	429a      	cmp	r2, r3
 80155d6:	da1a      	bge.n	801560e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80155d8:	4b12      	ldr	r3, [pc, #72]	@ (8015624 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80155da:	681b      	ldr	r3, [r3, #0]
 80155dc:	1a10      	subs	r0, r2, r0
 80155de:	210e      	movs	r1, #14
 80155e0:	fb01 3000 	mla	r0, r1, r0, r3
 80155e4:	7b03      	ldrb	r3, [r0, #12]
 80155e6:	f003 031f 	and.w	r3, r3, #31
 80155ea:	2b0b      	cmp	r3, #11
 80155ec:	d10b      	bne.n	8015606 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80155ee:	8903      	ldrh	r3, [r0, #8]
 80155f0:	8940      	ldrh	r0, [r0, #10]
 80155f2:	4358      	muls	r0, r3
 80155f4:	4b09      	ldr	r3, [pc, #36]	@ (801561c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80155f6:	6819      	ldr	r1, [r3, #0]
 80155f8:	3003      	adds	r0, #3
 80155fa:	f020 0303 	bic.w	r3, r0, #3
 80155fe:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8015602:	4418      	add	r0, r3
 8015604:	4770      	bx	lr
 8015606:	2b0d      	cmp	r3, #13
 8015608:	d101      	bne.n	801560e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801560a:	300d      	adds	r0, #13
 801560c:	4770      	bx	lr
 801560e:	2000      	movs	r0, #0
 8015610:	4770      	bx	lr
 8015612:	bf00      	nop
 8015614:	200152c0 	.word	0x200152c0
 8015618:	200152c8 	.word	0x200152c8
 801561c:	200152a4 	.word	0x200152a4
 8015620:	200152c4 	.word	0x200152c4
 8015624:	200152a8 	.word	0x200152a8

08015628 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8015628:	b510      	push	{r4, lr}
 801562a:	4b1f      	ldr	r3, [pc, #124]	@ (80156a8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 801562c:	8802      	ldrh	r2, [r0, #0]
 801562e:	881b      	ldrh	r3, [r3, #0]
 8015630:	429a      	cmp	r2, r3
 8015632:	d21a      	bcs.n	801566a <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 8015634:	4b1d      	ldr	r3, [pc, #116]	@ (80156ac <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 8015636:	681b      	ldr	r3, [r3, #0]
 8015638:	2114      	movs	r1, #20
 801563a:	fb01 3102 	mla	r1, r1, r2, r3
 801563e:	7c4b      	ldrb	r3, [r1, #17]
 8015640:	0958      	lsrs	r0, r3, #5
 8015642:	7ccb      	ldrb	r3, [r1, #19]
 8015644:	491a      	ldr	r1, [pc, #104]	@ (80156b0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 8015646:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801564a:	6809      	ldr	r1, [r1, #0]
 801564c:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 8015650:	b2d8      	uxtb	r0, r3
 8015652:	b149      	cbz	r1, 8015668 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8015654:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8015658:	b132      	cbz	r2, 8015668 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801565a:	2b0e      	cmp	r3, #14
 801565c:	d021      	beq.n	80156a2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 801565e:	280f      	cmp	r0, #15
 8015660:	d01d      	beq.n	801569e <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 8015662:	2810      	cmp	r0, #16
 8015664:	bf08      	it	eq
 8015666:	2002      	moveq	r0, #2
 8015668:	bd10      	pop	{r4, pc}
 801566a:	4912      	ldr	r1, [pc, #72]	@ (80156b4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 801566c:	8809      	ldrh	r1, [r1, #0]
 801566e:	4419      	add	r1, r3
 8015670:	428a      	cmp	r2, r1
 8015672:	da09      	bge.n	8015688 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 8015674:	1ad3      	subs	r3, r2, r3
 8015676:	4a10      	ldr	r2, [pc, #64]	@ (80156b8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 8015678:	6812      	ldr	r2, [r2, #0]
 801567a:	210e      	movs	r1, #14
 801567c:	fb01 2303 	mla	r3, r1, r3, r2
 8015680:	7b18      	ldrb	r0, [r3, #12]
 8015682:	f000 001f 	and.w	r0, r0, #31
 8015686:	e7ef      	b.n	8015668 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8015688:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 801568c:	429a      	cmp	r2, r3
 801568e:	d108      	bne.n	80156a2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8015690:	f7ed f928 	bl	80028e4 <_ZN8touchgfx3HAL3lcdEv>
 8015694:	6803      	ldr	r3, [r0, #0]
 8015696:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801569a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801569c:	4718      	bx	r3
 801569e:	2001      	movs	r0, #1
 80156a0:	e7e2      	b.n	8015668 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80156a2:	2000      	movs	r0, #0
 80156a4:	e7e0      	b.n	8015668 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80156a6:	bf00      	nop
 80156a8:	200152c0 	.word	0x200152c0
 80156ac:	200152c8 	.word	0x200152c8
 80156b0:	200152a4 	.word	0x200152a4
 80156b4:	200152c4 	.word	0x200152c4
 80156b8:	200152a8 	.word	0x200152a8

080156bc <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80156bc:	2010      	movs	r0, #16
 80156be:	4770      	bx	lr

080156c0 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 80156c0:	2000      	movs	r0, #0
 80156c2:	4770      	bx	lr

080156c4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80156c4:	4b02      	ldr	r3, [pc, #8]	@ (80156d0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 80156c6:	8818      	ldrh	r0, [r3, #0]
 80156c8:	0040      	lsls	r0, r0, #1
 80156ca:	b280      	uxth	r0, r0
 80156cc:	4770      	bx	lr
 80156ce:	bf00      	nop
 80156d0:	20015232 	.word	0x20015232

080156d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80156d4:	2bff      	cmp	r3, #255	@ 0xff
 80156d6:	d05e      	beq.n	8015796 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 80156d8:	2a0b      	cmp	r2, #11
 80156da:	d058      	beq.n	801578e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 80156dc:	d80e      	bhi.n	80156fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80156de:	2a03      	cmp	r2, #3
 80156e0:	d04d      	beq.n	801577e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 80156e2:	d804      	bhi.n	80156ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80156e4:	2a01      	cmp	r2, #1
 80156e6:	d04c      	beq.n	8015782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 80156e8:	d94d      	bls.n	8015786 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 80156ea:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 80156ec:	e031      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80156ee:	2a09      	cmp	r2, #9
 80156f0:	d04d      	beq.n	801578e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 80156f2:	d84a      	bhi.n	801578a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 80156f4:	2a08      	cmp	r2, #8
 80156f6:	d048      	beq.n	801578a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 80156f8:	2300      	movs	r3, #0
 80156fa:	e02a      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80156fc:	2a2f      	cmp	r2, #47	@ 0x2f
 80156fe:	d02c      	beq.n	801575a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8015700:	d811      	bhi.n	8015726 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 8015702:	2a2d      	cmp	r2, #45	@ 0x2d
 8015704:	d018      	beq.n	8015738 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 8015706:	d831      	bhi.n	801576c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 8015708:	2a2c      	cmp	r2, #44	@ 0x2c
 801570a:	d1f5      	bne.n	80156f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801570c:	684a      	ldr	r2, [r1, #4]
 801570e:	7813      	ldrb	r3, [r2, #0]
 8015710:	7852      	ldrb	r2, [r2, #1]
 8015712:	2a00      	cmp	r2, #0
 8015714:	d1f0      	bne.n	80156f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015716:	2b01      	cmp	r3, #1
 8015718:	d01d      	beq.n	8015756 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801571a:	2b00      	cmp	r3, #0
 801571c:	d02d      	beq.n	801577a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801571e:	2b02      	cmp	r3, #2
 8015720:	d1ea      	bne.n	80156f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015722:	68c3      	ldr	r3, [r0, #12]
 8015724:	e015      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015726:	2a31      	cmp	r2, #49	@ 0x31
 8015728:	d004      	beq.n	8015734 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 801572a:	d332      	bcc.n	8015792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 801572c:	2a32      	cmp	r2, #50	@ 0x32
 801572e:	d030      	beq.n	8015792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8015730:	2a33      	cmp	r2, #51	@ 0x33
 8015732:	d1e1      	bne.n	80156f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015734:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 8015736:	e00c      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015738:	684a      	ldr	r2, [r1, #4]
 801573a:	7813      	ldrb	r3, [r2, #0]
 801573c:	7852      	ldrb	r2, [r2, #1]
 801573e:	2a00      	cmp	r2, #0
 8015740:	d1da      	bne.n	80156f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015742:	2b01      	cmp	r3, #1
 8015744:	d004      	beq.n	8015750 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 8015746:	d30f      	bcc.n	8015768 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 8015748:	2b02      	cmp	r3, #2
 801574a:	d1d5      	bne.n	80156f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801574c:	6943      	ldr	r3, [r0, #20]
 801574e:	e000      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015750:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8015752:	4618      	mov	r0, r3
 8015754:	4770      	bx	lr
 8015756:	69c3      	ldr	r3, [r0, #28]
 8015758:	e7fb      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801575a:	684b      	ldr	r3, [r1, #4]
 801575c:	781a      	ldrb	r2, [r3, #0]
 801575e:	785b      	ldrb	r3, [r3, #1]
 8015760:	2b00      	cmp	r3, #0
 8015762:	d1c9      	bne.n	80156f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015764:	2a00      	cmp	r2, #0
 8015766:	d1f4      	bne.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015768:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801576a:	e7f2      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801576c:	684b      	ldr	r3, [r1, #4]
 801576e:	781a      	ldrb	r2, [r3, #0]
 8015770:	785b      	ldrb	r3, [r3, #1]
 8015772:	2b00      	cmp	r3, #0
 8015774:	d1c0      	bne.n	80156f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015776:	2a00      	cmp	r2, #0
 8015778:	d1eb      	bne.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801577a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 801577c:	e7e9      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801577e:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8015780:	e7e7      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015782:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8015784:	e7e5      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015786:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8015788:	e7e3      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801578a:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 801578c:	e7e1      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801578e:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 8015790:	e7df      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015792:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 8015794:	e7dd      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015796:	2a0b      	cmp	r2, #11
 8015798:	d059      	beq.n	801584e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 801579a:	d80e      	bhi.n	80157ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 801579c:	2a03      	cmp	r2, #3
 801579e:	d050      	beq.n	8015842 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 80157a0:	d804      	bhi.n	80157ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 80157a2:	2a01      	cmp	r2, #1
 80157a4:	d04f      	beq.n	8015846 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 80157a6:	d950      	bls.n	801584a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 80157a8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80157aa:	e7d2      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80157ac:	2a09      	cmp	r2, #9
 80157ae:	d04e      	beq.n	801584e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 80157b0:	d801      	bhi.n	80157b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 80157b2:	2a08      	cmp	r2, #8
 80157b4:	d1a0      	bne.n	80156f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80157b6:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 80157b8:	e7cb      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80157ba:	2a2f      	cmp	r2, #47	@ 0x2f
 80157bc:	d02d      	beq.n	801581a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 80157be:	d811      	bhi.n	80157e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80157c0:	2a2d      	cmp	r2, #45	@ 0x2d
 80157c2:	d018      	beq.n	80157f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 80157c4:	d833      	bhi.n	801582e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 80157c6:	2a2c      	cmp	r2, #44	@ 0x2c
 80157c8:	d196      	bne.n	80156f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80157ca:	684a      	ldr	r2, [r1, #4]
 80157cc:	7813      	ldrb	r3, [r2, #0]
 80157ce:	7852      	ldrb	r2, [r2, #1]
 80157d0:	2a00      	cmp	r2, #0
 80157d2:	d191      	bne.n	80156f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80157d4:	2b01      	cmp	r3, #1
 80157d6:	d01e      	beq.n	8015816 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80157d8:	2b00      	cmp	r3, #0
 80157da:	d030      	beq.n	801583e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 80157dc:	2b02      	cmp	r3, #2
 80157de:	d18b      	bne.n	80156f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80157e0:	6903      	ldr	r3, [r0, #16]
 80157e2:	e7b6      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80157e4:	2a31      	cmp	r2, #49	@ 0x31
 80157e6:	d004      	beq.n	80157f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 80157e8:	d333      	bcc.n	8015852 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 80157ea:	2a32      	cmp	r2, #50	@ 0x32
 80157ec:	d031      	beq.n	8015852 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 80157ee:	2a33      	cmp	r2, #51	@ 0x33
 80157f0:	d182      	bne.n	80156f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80157f2:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 80157f4:	e7ad      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80157f6:	684a      	ldr	r2, [r1, #4]
 80157f8:	7813      	ldrb	r3, [r2, #0]
 80157fa:	7852      	ldrb	r2, [r2, #1]
 80157fc:	2a00      	cmp	r2, #0
 80157fe:	f47f af7b 	bne.w	80156f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015802:	2b01      	cmp	r3, #1
 8015804:	d005      	beq.n	8015812 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8015806:	d310      	bcc.n	801582a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 8015808:	2b02      	cmp	r3, #2
 801580a:	f47f af75 	bne.w	80156f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801580e:	6983      	ldr	r3, [r0, #24]
 8015810:	e79f      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015812:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8015814:	e79d      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015816:	6a03      	ldr	r3, [r0, #32]
 8015818:	e79b      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801581a:	684b      	ldr	r3, [r1, #4]
 801581c:	781a      	ldrb	r2, [r3, #0]
 801581e:	785b      	ldrb	r3, [r3, #1]
 8015820:	2b00      	cmp	r3, #0
 8015822:	f47f af69 	bne.w	80156f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015826:	2a00      	cmp	r2, #0
 8015828:	d193      	bne.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801582a:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 801582c:	e791      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801582e:	684b      	ldr	r3, [r1, #4]
 8015830:	781a      	ldrb	r2, [r3, #0]
 8015832:	785b      	ldrb	r3, [r3, #1]
 8015834:	2b00      	cmp	r3, #0
 8015836:	f47f af5f 	bne.w	80156f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801583a:	2a00      	cmp	r2, #0
 801583c:	d189      	bne.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801583e:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8015840:	e787      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015842:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8015844:	e785      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015846:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 8015848:	e783      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801584a:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 801584c:	e781      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801584e:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8015850:	e77f      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015852:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8015854:	e77d      	b.n	8015752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

08015856 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015856:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801585a:	b087      	sub	sp, #28
 801585c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801585e:	9205      	str	r2, [sp, #20]
 8015860:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8015864:	9202      	str	r2, [sp, #8]
 8015866:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801586a:	9101      	str	r1, [sp, #4]
 801586c:	6841      	ldr	r1, [r0, #4]
 801586e:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8015872:	fb01 2404 	mla	r4, r1, r4, r2
 8015876:	6802      	ldr	r2, [r0, #0]
 8015878:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801587c:	f8de 2000 	ldr.w	r2, [lr]
 8015880:	9203      	str	r2, [sp, #12]
 8015882:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015886:	3204      	adds	r2, #4
 8015888:	9204      	str	r2, [sp, #16]
 801588a:	9a02      	ldr	r2, [sp, #8]
 801588c:	43d6      	mvns	r6, r2
 801588e:	b2f6      	uxtb	r6, r6
 8015890:	9a01      	ldr	r2, [sp, #4]
 8015892:	2a00      	cmp	r2, #0
 8015894:	dc03      	bgt.n	801589e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8015896:	9a05      	ldr	r2, [sp, #20]
 8015898:	2a00      	cmp	r2, #0
 801589a:	f340 8129 	ble.w	8015af0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801589e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80158a0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80158a4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80158a8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80158ac:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80158ae:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80158b2:	2b00      	cmp	r3, #0
 80158b4:	dd0e      	ble.n	80158d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80158b6:	1408      	asrs	r0, r1, #16
 80158b8:	d405      	bmi.n	80158c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80158ba:	4560      	cmp	r0, ip
 80158bc:	da03      	bge.n	80158c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80158be:	1410      	asrs	r0, r2, #16
 80158c0:	d401      	bmi.n	80158c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80158c2:	42b8      	cmp	r0, r7
 80158c4:	db07      	blt.n	80158d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80158c6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80158c8:	4401      	add	r1, r0
 80158ca:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80158cc:	3b01      	subs	r3, #1
 80158ce:	4402      	add	r2, r0
 80158d0:	3402      	adds	r4, #2
 80158d2:	e7ee      	b.n	80158b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80158d4:	d071      	beq.n	80159ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80158d6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80158d8:	1e58      	subs	r0, r3, #1
 80158da:	fb05 1500 	mla	r5, r5, r0, r1
 80158de:	142d      	asrs	r5, r5, #16
 80158e0:	d45f      	bmi.n	80159a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80158e2:	4565      	cmp	r5, ip
 80158e4:	da5d      	bge.n	80159a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80158e6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80158e8:	fb05 2000 	mla	r0, r5, r0, r2
 80158ec:	1400      	asrs	r0, r0, #16
 80158ee:	d458      	bmi.n	80159a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80158f0:	42b8      	cmp	r0, r7
 80158f2:	da56      	bge.n	80159a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80158f4:	f8bd b008 	ldrh.w	fp, [sp, #8]
 80158f8:	4699      	mov	r9, r3
 80158fa:	46a2      	mov	sl, r4
 80158fc:	f1b9 0f00 	cmp.w	r9, #0
 8015900:	dd57      	ble.n	80159b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8015902:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015906:	9803      	ldr	r0, [sp, #12]
 8015908:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801590c:	140d      	asrs	r5, r1, #16
 801590e:	fb07 000c 	mla	r0, r7, ip, r0
 8015912:	f109 39ff 	add.w	r9, r9, #4294967295
 8015916:	5d40      	ldrb	r0, [r0, r5]
 8015918:	9d04      	ldr	r5, [sp, #16]
 801591a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801591e:	f8ba 5000 	ldrh.w	r5, [sl]
 8015922:	122f      	asrs	r7, r5, #8
 8015924:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015928:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801592c:	fb17 f706 	smulbb	r7, r7, r6
 8015930:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015934:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015938:	00ed      	lsls	r5, r5, #3
 801593a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801593e:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8015942:	10c7      	asrs	r7, r0, #3
 8015944:	b2ed      	uxtb	r5, r5
 8015946:	00c0      	lsls	r0, r0, #3
 8015948:	fb18 f806 	smulbb	r8, r8, r6
 801594c:	fb15 f506 	smulbb	r5, r5, r6
 8015950:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015954:	b2c0      	uxtb	r0, r0
 8015956:	fa1f fc8c 	uxth.w	ip, ip
 801595a:	fb07 870b 	mla	r7, r7, fp, r8
 801595e:	fb00 500b 	mla	r0, r0, fp, r5
 8015962:	b280      	uxth	r0, r0
 8015964:	b2bf      	uxth	r7, r7
 8015966:	f10c 0501 	add.w	r5, ip, #1
 801596a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801596e:	f107 0801 	add.w	r8, r7, #1
 8015972:	1c45      	adds	r5, r0, #1
 8015974:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015978:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801597c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801597e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015982:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015986:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801598a:	ea45 0c0c 	orr.w	ip, r5, ip
 801598e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8015992:	4401      	add	r1, r0
 8015994:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8015996:	ea4c 0c08 	orr.w	ip, ip, r8
 801599a:	f82a cb02 	strh.w	ip, [sl], #2
 801599e:	4402      	add	r2, r0
 80159a0:	e7ac      	b.n	80158fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80159a2:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80159a6:	f04f 0800 	mov.w	r8, #0
 80159aa:	eb03 0008 	add.w	r0, r3, r8
 80159ae:	2800      	cmp	r0, #0
 80159b0:	dc41      	bgt.n	8015a36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80159b2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80159b6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80159ba:	9b01      	ldr	r3, [sp, #4]
 80159bc:	2b00      	cmp	r3, #0
 80159be:	f340 8097 	ble.w	8015af0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80159c2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80159c6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80159ca:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80159ce:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80159d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80159d4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80159d8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80159dc:	eef0 6a62 	vmov.f32	s13, s5
 80159e0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80159e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80159e8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80159ec:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 80159f0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80159f4:	eef0 6a43 	vmov.f32	s13, s6
 80159f8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80159fc:	ee12 2a90 	vmov	r2, s5
 8015a00:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015a04:	fb92 f3f3 	sdiv	r3, r2, r3
 8015a08:	ee13 2a10 	vmov	r2, s6
 8015a0c:	9313      	str	r3, [sp, #76]	@ 0x4c
 8015a0e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015a10:	fb92 f3f3 	sdiv	r3, r2, r3
 8015a14:	9314      	str	r3, [sp, #80]	@ 0x50
 8015a16:	9b01      	ldr	r3, [sp, #4]
 8015a18:	9a05      	ldr	r2, [sp, #20]
 8015a1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015a1e:	3b01      	subs	r3, #1
 8015a20:	9301      	str	r3, [sp, #4]
 8015a22:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8015a26:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015a28:	eeb0 3a67 	vmov.f32	s6, s15
 8015a2c:	bf08      	it	eq
 8015a2e:	4613      	moveq	r3, r2
 8015a30:	eef0 2a47 	vmov.f32	s5, s14
 8015a34:	e72c      	b.n	8015890 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8015a36:	140f      	asrs	r7, r1, #16
 8015a38:	d453      	bmi.n	8015ae2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015a3a:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015a3e:	42bd      	cmp	r5, r7
 8015a40:	dd4f      	ble.n	8015ae2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015a42:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015a46:	d44c      	bmi.n	8015ae2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015a48:	f8de 000c 	ldr.w	r0, [lr, #12]
 8015a4c:	4560      	cmp	r0, ip
 8015a4e:	dd48      	ble.n	8015ae2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015a50:	9803      	ldr	r0, [sp, #12]
 8015a52:	b22d      	sxth	r5, r5
 8015a54:	fb0c 0505 	mla	r5, ip, r5, r0
 8015a58:	5de8      	ldrb	r0, [r5, r7]
 8015a5a:	9d04      	ldr	r5, [sp, #16]
 8015a5c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015a60:	f06f 0501 	mvn.w	r5, #1
 8015a64:	fb05 fb08 	mul.w	fp, r5, r8
 8015a68:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015a6c:	f834 500b 	ldrh.w	r5, [r4, fp]
 8015a70:	122f      	asrs	r7, r5, #8
 8015a72:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015a76:	fb17 f706 	smulbb	r7, r7, r6
 8015a7a:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8015a7e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015a82:	00ed      	lsls	r5, r5, #3
 8015a84:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8015a88:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8015a8c:	10c7      	asrs	r7, r0, #3
 8015a8e:	b2ed      	uxtb	r5, r5
 8015a90:	00c0      	lsls	r0, r0, #3
 8015a92:	fb19 f906 	smulbb	r9, r9, r6
 8015a96:	fb15 f506 	smulbb	r5, r5, r6
 8015a9a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015a9e:	b2c0      	uxtb	r0, r0
 8015aa0:	fa1f fc8c 	uxth.w	ip, ip
 8015aa4:	fb07 970a 	mla	r7, r7, sl, r9
 8015aa8:	fb00 500a 	mla	r0, r0, sl, r5
 8015aac:	b2bf      	uxth	r7, r7
 8015aae:	b280      	uxth	r0, r0
 8015ab0:	f10c 0501 	add.w	r5, ip, #1
 8015ab4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015ab8:	f107 0901 	add.w	r9, r7, #1
 8015abc:	1c45      	adds	r5, r0, #1
 8015abe:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015ac2:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8015ac6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015aca:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015ace:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015ad2:	ea45 0c0c 	orr.w	ip, r5, ip
 8015ad6:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8015ada:	ea4c 0c09 	orr.w	ip, ip, r9
 8015ade:	f824 c00b 	strh.w	ip, [r4, fp]
 8015ae2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8015ae4:	4401      	add	r1, r0
 8015ae6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8015ae8:	f108 38ff 	add.w	r8, r8, #4294967295
 8015aec:	4402      	add	r2, r0
 8015aee:	e75c      	b.n	80159aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8015af0:	b007      	add	sp, #28
 8015af2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015af6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015af6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015afa:	b085      	sub	sp, #20
 8015afc:	4693      	mov	fp, r2
 8015afe:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8015b00:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8015b02:	6870      	ldr	r0, [r6, #4]
 8015b04:	9100      	str	r1, [sp, #0]
 8015b06:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8015b0a:	fb00 2404 	mla	r4, r0, r4, r2
 8015b0e:	6832      	ldr	r2, [r6, #0]
 8015b10:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015b14:	682a      	ldr	r2, [r5, #0]
 8015b16:	9201      	str	r2, [sp, #4]
 8015b18:	686a      	ldr	r2, [r5, #4]
 8015b1a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8015b1e:	3204      	adds	r2, #4
 8015b20:	9202      	str	r2, [sp, #8]
 8015b22:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015b26:	9a00      	ldr	r2, [sp, #0]
 8015b28:	2a00      	cmp	r2, #0
 8015b2a:	dc03      	bgt.n	8015b34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015b2c:	f1bb 0f00 	cmp.w	fp, #0
 8015b30:	f340 80a0 	ble.w	8015c74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8015b34:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8015b36:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015b3a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015b3e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8015b42:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8015b44:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8015b48:	2b00      	cmp	r3, #0
 8015b4a:	dd0c      	ble.n	8015b66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015b4c:	1406      	asrs	r6, r0, #16
 8015b4e:	d405      	bmi.n	8015b5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015b50:	454e      	cmp	r6, r9
 8015b52:	da03      	bge.n	8015b5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015b54:	1416      	asrs	r6, r2, #16
 8015b56:	d401      	bmi.n	8015b5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015b58:	4546      	cmp	r6, r8
 8015b5a:	db05      	blt.n	8015b68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015b5c:	4470      	add	r0, lr
 8015b5e:	4462      	add	r2, ip
 8015b60:	3b01      	subs	r3, #1
 8015b62:	3402      	adds	r4, #2
 8015b64:	e7f0      	b.n	8015b48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015b66:	d00f      	beq.n	8015b88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015b68:	1e5e      	subs	r6, r3, #1
 8015b6a:	fb0e 0706 	mla	r7, lr, r6, r0
 8015b6e:	143f      	asrs	r7, r7, #16
 8015b70:	d541      	bpl.n	8015bf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8015b72:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8015b76:	4698      	mov	r8, r3
 8015b78:	9603      	str	r6, [sp, #12]
 8015b7a:	f1b8 0f00 	cmp.w	r8, #0
 8015b7e:	dc59      	bgt.n	8015c34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015b80:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015b84:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015b88:	9b00      	ldr	r3, [sp, #0]
 8015b8a:	2b00      	cmp	r3, #0
 8015b8c:	dd72      	ble.n	8015c74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8015b8e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015b92:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015b96:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015b9a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015b9c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015ba0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015ba4:	eeb0 6a62 	vmov.f32	s12, s5
 8015ba8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015bac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015bb0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015bb4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8015bb8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015bbc:	eeb0 6a43 	vmov.f32	s12, s6
 8015bc0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015bc4:	ee12 2a90 	vmov	r2, s5
 8015bc8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015bcc:	fb92 fef3 	sdiv	lr, r2, r3
 8015bd0:	ee13 2a10 	vmov	r2, s6
 8015bd4:	fb92 fcf3 	sdiv	ip, r2, r3
 8015bd8:	9b00      	ldr	r3, [sp, #0]
 8015bda:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015bde:	3b01      	subs	r3, #1
 8015be0:	9300      	str	r3, [sp, #0]
 8015be2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8015be6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015be8:	eeb0 3a67 	vmov.f32	s6, s15
 8015bec:	bf08      	it	eq
 8015bee:	465b      	moveq	r3, fp
 8015bf0:	eef0 2a47 	vmov.f32	s5, s14
 8015bf4:	e797      	b.n	8015b26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8015bf6:	454f      	cmp	r7, r9
 8015bf8:	dabb      	bge.n	8015b72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015bfa:	fb0c 2606 	mla	r6, ip, r6, r2
 8015bfe:	1436      	asrs	r6, r6, #16
 8015c00:	d4b7      	bmi.n	8015b72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015c02:	4546      	cmp	r6, r8
 8015c04:	dab5      	bge.n	8015b72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015c06:	461e      	mov	r6, r3
 8015c08:	46a0      	mov	r8, r4
 8015c0a:	2e00      	cmp	r6, #0
 8015c0c:	ddb8      	ble.n	8015b80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8015c0e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8015c12:	9901      	ldr	r1, [sp, #4]
 8015c14:	1417      	asrs	r7, r2, #16
 8015c16:	ea4f 4920 	mov.w	r9, r0, asr #16
 8015c1a:	fb0a 1707 	mla	r7, sl, r7, r1
 8015c1e:	9902      	ldr	r1, [sp, #8]
 8015c20:	f817 7009 	ldrb.w	r7, [r7, r9]
 8015c24:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8015c28:	f828 7b02 	strh.w	r7, [r8], #2
 8015c2c:	4470      	add	r0, lr
 8015c2e:	4462      	add	r2, ip
 8015c30:	3e01      	subs	r6, #1
 8015c32:	e7ea      	b.n	8015c0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8015c34:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015c38:	d417      	bmi.n	8015c6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015c3a:	68ae      	ldr	r6, [r5, #8]
 8015c3c:	454e      	cmp	r6, r9
 8015c3e:	dd14      	ble.n	8015c6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015c40:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8015c44:	d411      	bmi.n	8015c6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015c46:	68ef      	ldr	r7, [r5, #12]
 8015c48:	4557      	cmp	r7, sl
 8015c4a:	dd0e      	ble.n	8015c6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015c4c:	9f01      	ldr	r7, [sp, #4]
 8015c4e:	b236      	sxth	r6, r6
 8015c50:	fb0a 7606 	mla	r6, sl, r6, r7
 8015c54:	9f02      	ldr	r7, [sp, #8]
 8015c56:	f816 6009 	ldrb.w	r6, [r6, r9]
 8015c5a:	f06f 0101 	mvn.w	r1, #1
 8015c5e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8015c62:	fb01 f608 	mul.w	r6, r1, r8
 8015c66:	9903      	ldr	r1, [sp, #12]
 8015c68:	538f      	strh	r7, [r1, r6]
 8015c6a:	4470      	add	r0, lr
 8015c6c:	4462      	add	r2, ip
 8015c6e:	f108 38ff 	add.w	r8, r8, #4294967295
 8015c72:	e782      	b.n	8015b7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015c74:	b005      	add	sp, #20
 8015c76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015c7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015c7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c7e:	b087      	sub	sp, #28
 8015c80:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8015c82:	9205      	str	r2, [sp, #20]
 8015c84:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8015c88:	9203      	str	r2, [sp, #12]
 8015c8a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8015c8e:	9102      	str	r1, [sp, #8]
 8015c90:	6861      	ldr	r1, [r4, #4]
 8015c92:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8015c96:	fb01 2000 	mla	r0, r1, r0, r2
 8015c9a:	6822      	ldr	r2, [r4, #0]
 8015c9c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8015ca0:	9200      	str	r2, [sp, #0]
 8015ca2:	f8dc 2000 	ldr.w	r2, [ip]
 8015ca6:	9204      	str	r2, [sp, #16]
 8015ca8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8015cac:	3204      	adds	r2, #4
 8015cae:	9201      	str	r2, [sp, #4]
 8015cb0:	9a03      	ldr	r2, [sp, #12]
 8015cb2:	43d5      	mvns	r5, r2
 8015cb4:	b2ed      	uxtb	r5, r5
 8015cb6:	9a02      	ldr	r2, [sp, #8]
 8015cb8:	2a00      	cmp	r2, #0
 8015cba:	dc03      	bgt.n	8015cc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8015cbc:	9a05      	ldr	r2, [sp, #20]
 8015cbe:	2a00      	cmp	r2, #0
 8015cc0:	f340 812c 	ble.w	8015f1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8015cc4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015cc6:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8015cca:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8015cce:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015cd2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8015cd4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8015cd8:	2b00      	cmp	r3, #0
 8015cda:	dd10      	ble.n	8015cfe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015cdc:	140c      	asrs	r4, r1, #16
 8015cde:	d405      	bmi.n	8015cec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015ce0:	4574      	cmp	r4, lr
 8015ce2:	da03      	bge.n	8015cec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015ce4:	1414      	asrs	r4, r2, #16
 8015ce6:	d401      	bmi.n	8015cec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015ce8:	42bc      	cmp	r4, r7
 8015cea:	db09      	blt.n	8015d00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8015cec:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8015cee:	9800      	ldr	r0, [sp, #0]
 8015cf0:	4421      	add	r1, r4
 8015cf2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8015cf4:	3002      	adds	r0, #2
 8015cf6:	4422      	add	r2, r4
 8015cf8:	3b01      	subs	r3, #1
 8015cfa:	9000      	str	r0, [sp, #0]
 8015cfc:	e7ec      	b.n	8015cd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8015cfe:	d071      	beq.n	8015de4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8015d00:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8015d02:	1e5c      	subs	r4, r3, #1
 8015d04:	fb06 1604 	mla	r6, r6, r4, r1
 8015d08:	1436      	asrs	r6, r6, #16
 8015d0a:	d45d      	bmi.n	8015dc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015d0c:	4576      	cmp	r6, lr
 8015d0e:	da5b      	bge.n	8015dc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015d10:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8015d12:	fb06 2404 	mla	r4, r6, r4, r2
 8015d16:	1424      	asrs	r4, r4, #16
 8015d18:	d456      	bmi.n	8015dc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015d1a:	42bc      	cmp	r4, r7
 8015d1c:	da54      	bge.n	8015dc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015d1e:	f8dd 9000 	ldr.w	r9, [sp]
 8015d22:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8015d26:	4698      	mov	r8, r3
 8015d28:	f1b8 0f00 	cmp.w	r8, #0
 8015d2c:	dd54      	ble.n	8015dd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8015d2e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8015d32:	9804      	ldr	r0, [sp, #16]
 8015d34:	1414      	asrs	r4, r2, #16
 8015d36:	fb07 0404 	mla	r4, r7, r4, r0
 8015d3a:	140e      	asrs	r6, r1, #16
 8015d3c:	9801      	ldr	r0, [sp, #4]
 8015d3e:	f814 e006 	ldrb.w	lr, [r4, r6]
 8015d42:	f8b9 4000 	ldrh.w	r4, [r9]
 8015d46:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015d4a:	eb00 0b0e 	add.w	fp, r0, lr
 8015d4e:	1227      	asrs	r7, r4, #8
 8015d50:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8015d54:	f89b b001 	ldrb.w	fp, [fp, #1]
 8015d58:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8015d5c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8015d5e:	fb16 f60a 	smulbb	r6, r6, sl
 8015d62:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015d66:	fb07 6705 	mla	r7, r7, r5, r6
 8015d6a:	10e6      	asrs	r6, r4, #3
 8015d6c:	00e4      	lsls	r4, r4, #3
 8015d6e:	b2e4      	uxtb	r4, r4
 8015d70:	fb1b fb0a 	smulbb	fp, fp, sl
 8015d74:	fb14 f405 	smulbb	r4, r4, r5
 8015d78:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015d7c:	b2bf      	uxth	r7, r7
 8015d7e:	fb06 b605 	mla	r6, r6, r5, fp
 8015d82:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8015d86:	b2b6      	uxth	r6, r6
 8015d88:	fa1f fe8e 	uxth.w	lr, lr
 8015d8c:	1c7c      	adds	r4, r7, #1
 8015d8e:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8015d92:	f106 0b01 	add.w	fp, r6, #1
 8015d96:	f10e 0401 	add.w	r4, lr, #1
 8015d9a:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8015d9e:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8015da2:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8015da6:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8015daa:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8015dae:	4327      	orrs	r7, r4
 8015db0:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8015db4:	4401      	add	r1, r0
 8015db6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8015db8:	ea47 070b 	orr.w	r7, r7, fp
 8015dbc:	f829 7b02 	strh.w	r7, [r9], #2
 8015dc0:	4402      	add	r2, r0
 8015dc2:	f108 38ff 	add.w	r8, r8, #4294967295
 8015dc6:	e7af      	b.n	8015d28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8015dc8:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8015dcc:	f04f 0e00 	mov.w	lr, #0
 8015dd0:	eb03 040e 	add.w	r4, r3, lr
 8015dd4:	2c00      	cmp	r4, #0
 8015dd6:	dc43      	bgt.n	8015e60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8015dd8:	9a00      	ldr	r2, [sp, #0]
 8015dda:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015dde:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015de2:	9300      	str	r3, [sp, #0]
 8015de4:	9b02      	ldr	r3, [sp, #8]
 8015de6:	2b00      	cmp	r3, #0
 8015de8:	f340 8098 	ble.w	8015f1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8015dec:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015df0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8015df4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015df8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015dfa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015dfe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015e02:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015e06:	eef0 6a62 	vmov.f32	s13, s5
 8015e0a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015e0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015e12:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015e16:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8015e1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015e1e:	eef0 6a43 	vmov.f32	s13, s6
 8015e22:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015e26:	ee12 2a90 	vmov	r2, s5
 8015e2a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015e2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015e32:	ee13 2a10 	vmov	r2, s6
 8015e36:	9313      	str	r3, [sp, #76]	@ 0x4c
 8015e38:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015e3a:	fb92 f3f3 	sdiv	r3, r2, r3
 8015e3e:	9314      	str	r3, [sp, #80]	@ 0x50
 8015e40:	9b02      	ldr	r3, [sp, #8]
 8015e42:	9a05      	ldr	r2, [sp, #20]
 8015e44:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015e48:	3b01      	subs	r3, #1
 8015e4a:	9302      	str	r3, [sp, #8]
 8015e4c:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8015e50:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015e52:	eeb0 3a67 	vmov.f32	s6, s15
 8015e56:	bf08      	it	eq
 8015e58:	4613      	moveq	r3, r2
 8015e5a:	eef0 2a47 	vmov.f32	s5, s14
 8015e5e:	e72a      	b.n	8015cb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015e60:	140f      	asrs	r7, r1, #16
 8015e62:	d454      	bmi.n	8015f0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015e64:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8015e68:	42be      	cmp	r6, r7
 8015e6a:	dd50      	ble.n	8015f0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015e6c:	ea5f 4822 	movs.w	r8, r2, asr #16
 8015e70:	d44d      	bmi.n	8015f0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015e72:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8015e76:	4544      	cmp	r4, r8
 8015e78:	dd49      	ble.n	8015f0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015e7a:	9c04      	ldr	r4, [sp, #16]
 8015e7c:	b236      	sxth	r6, r6
 8015e7e:	fb08 4606 	mla	r6, r8, r6, r4
 8015e82:	f06f 0001 	mvn.w	r0, #1
 8015e86:	f816 8007 	ldrb.w	r8, [r6, r7]
 8015e8a:	9c01      	ldr	r4, [sp, #4]
 8015e8c:	fb00 fa0e 	mul.w	sl, r0, lr
 8015e90:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8015e94:	9800      	ldr	r0, [sp, #0]
 8015e96:	eb04 0b08 	add.w	fp, r4, r8
 8015e9a:	f830 400a 	ldrh.w	r4, [r0, sl]
 8015e9e:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8015ea2:	9801      	ldr	r0, [sp, #4]
 8015ea4:	f89b b001 	ldrb.w	fp, [fp, #1]
 8015ea8:	f810 8008 	ldrb.w	r8, [r0, r8]
 8015eac:	9800      	ldr	r0, [sp, #0]
 8015eae:	1227      	asrs	r7, r4, #8
 8015eb0:	fb16 f609 	smulbb	r6, r6, r9
 8015eb4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015eb8:	fb07 6705 	mla	r7, r7, r5, r6
 8015ebc:	10e6      	asrs	r6, r4, #3
 8015ebe:	00e4      	lsls	r4, r4, #3
 8015ec0:	b2e4      	uxtb	r4, r4
 8015ec2:	fb1b fb09 	smulbb	fp, fp, r9
 8015ec6:	fb14 f405 	smulbb	r4, r4, r5
 8015eca:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015ece:	b2bf      	uxth	r7, r7
 8015ed0:	fb06 b605 	mla	r6, r6, r5, fp
 8015ed4:	fb08 4809 	mla	r8, r8, r9, r4
 8015ed8:	b2b6      	uxth	r6, r6
 8015eda:	fa1f f888 	uxth.w	r8, r8
 8015ede:	1c7c      	adds	r4, r7, #1
 8015ee0:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8015ee4:	f106 0b01 	add.w	fp, r6, #1
 8015ee8:	f108 0401 	add.w	r4, r8, #1
 8015eec:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8015ef0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8015ef4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8015ef8:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8015efc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8015f00:	4327      	orrs	r7, r4
 8015f02:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8015f06:	ea47 070b 	orr.w	r7, r7, fp
 8015f0a:	f820 700a 	strh.w	r7, [r0, sl]
 8015f0e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8015f10:	4401      	add	r1, r0
 8015f12:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8015f14:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015f18:	4402      	add	r2, r0
 8015f1a:	e759      	b.n	8015dd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015f1c:	b007      	add	sp, #28
 8015f1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08015f24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015f24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f28:	b085      	sub	sp, #20
 8015f2a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015f2e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8015f30:	9203      	str	r2, [sp, #12]
 8015f32:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8015f36:	6870      	ldr	r0, [r6, #4]
 8015f38:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8015f3a:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 8015f3e:	686f      	ldr	r7, [r5, #4]
 8015f40:	9101      	str	r1, [sp, #4]
 8015f42:	fb00 2404 	mla	r4, r0, r4, r2
 8015f46:	6832      	ldr	r2, [r6, #0]
 8015f48:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015f4c:	682a      	ldr	r2, [r5, #0]
 8015f4e:	9202      	str	r2, [sp, #8]
 8015f50:	3704      	adds	r7, #4
 8015f52:	9a01      	ldr	r2, [sp, #4]
 8015f54:	2a00      	cmp	r2, #0
 8015f56:	dc03      	bgt.n	8015f60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015f58:	9a03      	ldr	r2, [sp, #12]
 8015f5a:	2a00      	cmp	r2, #0
 8015f5c:	f340 80cc 	ble.w	80160f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8015f60:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8015f62:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015f66:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015f6a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8015f6e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8015f70:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8015f74:	2b00      	cmp	r3, #0
 8015f76:	dd0d      	ble.n	8015f94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015f78:	1406      	asrs	r6, r0, #16
 8015f7a:	d405      	bmi.n	8015f88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015f7c:	454e      	cmp	r6, r9
 8015f7e:	da03      	bge.n	8015f88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015f80:	1416      	asrs	r6, r2, #16
 8015f82:	d401      	bmi.n	8015f88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015f84:	4546      	cmp	r6, r8
 8015f86:	db06      	blt.n	8015f96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015f88:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 8015f8a:	4460      	add	r0, ip
 8015f8c:	4432      	add	r2, r6
 8015f8e:	3b01      	subs	r3, #1
 8015f90:	3402      	adds	r4, #2
 8015f92:	e7ef      	b.n	8015f74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8015f94:	d00f      	beq.n	8015fb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015f96:	1e5e      	subs	r6, r3, #1
 8015f98:	fb0c 0e06 	mla	lr, ip, r6, r0
 8015f9c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8015fa0:	d543      	bpl.n	801602a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8015fa2:	4698      	mov	r8, r3
 8015fa4:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8015fa8:	f1b8 0f00 	cmp.w	r8, #0
 8015fac:	dc71      	bgt.n	8016092 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8015fae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015fb2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015fb6:	9b01      	ldr	r3, [sp, #4]
 8015fb8:	2b00      	cmp	r3, #0
 8015fba:	f340 809d 	ble.w	80160f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8015fbe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015fc2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015fc6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015fca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015fcc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015fd0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015fd4:	eeb0 6a62 	vmov.f32	s12, s5
 8015fd8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015fdc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015fe0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015fe4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8015fe8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015fec:	eeb0 6a43 	vmov.f32	s12, s6
 8015ff0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015ff4:	ee12 2a90 	vmov	r2, s5
 8015ff8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015ffc:	fb92 fcf3 	sdiv	ip, r2, r3
 8016000:	ee13 2a10 	vmov	r2, s6
 8016004:	fb92 f3f3 	sdiv	r3, r2, r3
 8016008:	9312      	str	r3, [sp, #72]	@ 0x48
 801600a:	9b01      	ldr	r3, [sp, #4]
 801600c:	9a03      	ldr	r2, [sp, #12]
 801600e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016012:	3b01      	subs	r3, #1
 8016014:	9301      	str	r3, [sp, #4]
 8016016:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801601a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801601c:	eeb0 3a67 	vmov.f32	s6, s15
 8016020:	bf08      	it	eq
 8016022:	4613      	moveq	r3, r2
 8016024:	eef0 2a47 	vmov.f32	s5, s14
 8016028:	e793      	b.n	8015f52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801602a:	45ce      	cmp	lr, r9
 801602c:	dab9      	bge.n	8015fa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801602e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8016030:	fb01 2606 	mla	r6, r1, r6, r2
 8016034:	1436      	asrs	r6, r6, #16
 8016036:	d4b4      	bmi.n	8015fa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016038:	4546      	cmp	r6, r8
 801603a:	dab2      	bge.n	8015fa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801603c:	4698      	mov	r8, r3
 801603e:	46a2      	mov	sl, r4
 8016040:	f1b8 0f00 	cmp.w	r8, #0
 8016044:	ddb3      	ble.n	8015fae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8016046:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801604a:	9902      	ldr	r1, [sp, #8]
 801604c:	1416      	asrs	r6, r2, #16
 801604e:	fb09 1606 	mla	r6, r9, r6, r1
 8016052:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8016056:	492a      	ldr	r1, [pc, #168]	@ (8016100 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8016058:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801605c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8016060:	eb07 0b0e 	add.w	fp, r7, lr
 8016064:	4460      	add	r0, ip
 8016066:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801606a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801606e:	00f6      	lsls	r6, r6, #3
 8016070:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8016074:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8016078:	ea49 0606 	orr.w	r6, r9, r6
 801607c:	f817 900e 	ldrb.w	r9, [r7, lr]
 8016080:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8016082:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8016086:	f82a 6b02 	strh.w	r6, [sl], #2
 801608a:	440a      	add	r2, r1
 801608c:	f108 38ff 	add.w	r8, r8, #4294967295
 8016090:	e7d6      	b.n	8016040 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016092:	ea5f 4920 	movs.w	r9, r0, asr #16
 8016096:	d429      	bmi.n	80160ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8016098:	68ae      	ldr	r6, [r5, #8]
 801609a:	454e      	cmp	r6, r9
 801609c:	dd26      	ble.n	80160ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801609e:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80160a2:	d423      	bmi.n	80160ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80160a4:	68e9      	ldr	r1, [r5, #12]
 80160a6:	4559      	cmp	r1, fp
 80160a8:	dd20      	ble.n	80160ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80160aa:	9902      	ldr	r1, [sp, #8]
 80160ac:	fa0f fe86 	sxth.w	lr, r6
 80160b0:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80160b4:	f06f 0101 	mvn.w	r1, #1
 80160b8:	f81e e009 	ldrb.w	lr, [lr, r9]
 80160bc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80160c0:	eb07 060e 	add.w	r6, r7, lr
 80160c4:	fb01 f908 	mul.w	r9, r1, r8
 80160c8:	f896 b002 	ldrb.w	fp, [r6, #2]
 80160cc:	7876      	ldrb	r6, [r6, #1]
 80160ce:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 80160d2:	00f6      	lsls	r6, r6, #3
 80160d4:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80160d8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80160dc:	ea4b 0606 	orr.w	r6, fp, r6
 80160e0:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80160e4:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80160e8:	f82a 6009 	strh.w	r6, [sl, r9]
 80160ec:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80160ee:	4460      	add	r0, ip
 80160f0:	440a      	add	r2, r1
 80160f2:	f108 38ff 	add.w	r8, r8, #4294967295
 80160f6:	e757      	b.n	8015fa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80160f8:	b005      	add	sp, #20
 80160fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80160fe:	bf00      	nop
 8016100:	fffff800 	.word	0xfffff800

08016104 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016104:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016108:	b087      	sub	sp, #28
 801610a:	468b      	mov	fp, r1
 801610c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801610e:	9204      	str	r2, [sp, #16]
 8016110:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016114:	9205      	str	r2, [sp, #20]
 8016116:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801611a:	6841      	ldr	r1, [r0, #4]
 801611c:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8016120:	fb01 2404 	mla	r4, r1, r4, r2
 8016124:	6802      	ldr	r2, [r0, #0]
 8016126:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801612a:	f8dc 2000 	ldr.w	r2, [ip]
 801612e:	9201      	str	r2, [sp, #4]
 8016130:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8016134:	3204      	adds	r2, #4
 8016136:	9202      	str	r2, [sp, #8]
 8016138:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801613c:	f1bb 0f00 	cmp.w	fp, #0
 8016140:	dc03      	bgt.n	801614a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8016142:	9a04      	ldr	r2, [sp, #16]
 8016144:	2a00      	cmp	r2, #0
 8016146:	f340 8138 	ble.w	80163ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801614a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801614c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8016150:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8016154:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8016158:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801615a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801615e:	2b00      	cmp	r3, #0
 8016160:	dd0e      	ble.n	8016180 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016162:	1402      	asrs	r2, r0, #16
 8016164:	d405      	bmi.n	8016172 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016166:	42ba      	cmp	r2, r7
 8016168:	da03      	bge.n	8016172 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801616a:	140a      	asrs	r2, r1, #16
 801616c:	d401      	bmi.n	8016172 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801616e:	42b2      	cmp	r2, r6
 8016170:	db07      	blt.n	8016182 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016172:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8016174:	4410      	add	r0, r2
 8016176:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016178:	3b01      	subs	r3, #1
 801617a:	4411      	add	r1, r2
 801617c:	3402      	adds	r4, #2
 801617e:	e7ee      	b.n	801615e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8016180:	d019      	beq.n	80161b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8016182:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8016184:	1e5a      	subs	r2, r3, #1
 8016186:	fb05 0502 	mla	r5, r5, r2, r0
 801618a:	142d      	asrs	r5, r5, #16
 801618c:	d409      	bmi.n	80161a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801618e:	42bd      	cmp	r5, r7
 8016190:	da07      	bge.n	80161a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016192:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8016194:	fb05 1202 	mla	r2, r5, r2, r1
 8016198:	1412      	asrs	r2, r2, #16
 801619a:	d402      	bmi.n	80161a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801619c:	42b2      	cmp	r2, r6
 801619e:	f2c0 80ac 	blt.w	80162fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80161a2:	f04f 0e00 	mov.w	lr, #0
 80161a6:	eb03 020e 	add.w	r2, r3, lr
 80161aa:	2a00      	cmp	r2, #0
 80161ac:	dc3e      	bgt.n	801622c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80161ae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80161b2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80161b6:	f1bb 0f00 	cmp.w	fp, #0
 80161ba:	f340 80fe 	ble.w	80163ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80161be:	ee30 0a04 	vadd.f32	s0, s0, s8
 80161c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80161c6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80161ca:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80161cc:	f1bb 0b01 	subs.w	fp, fp, #1
 80161d0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80161d4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80161d8:	eeb0 6a62 	vmov.f32	s12, s5
 80161dc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80161e0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80161e4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80161e8:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80161ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80161f0:	eeb0 6a43 	vmov.f32	s12, s6
 80161f4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80161f8:	ee12 2a90 	vmov	r2, s5
 80161fc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016200:	fb92 f3f3 	sdiv	r3, r2, r3
 8016204:	ee13 2a10 	vmov	r2, s6
 8016208:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801620c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801620e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016210:	fb92 f3f3 	sdiv	r3, r2, r3
 8016214:	9a04      	ldr	r2, [sp, #16]
 8016216:	9314      	str	r3, [sp, #80]	@ 0x50
 8016218:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801621c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801621e:	eeb0 3a67 	vmov.f32	s6, s15
 8016222:	bf08      	it	eq
 8016224:	4613      	moveq	r3, r2
 8016226:	eef0 2a47 	vmov.f32	s5, s14
 801622a:	e787      	b.n	801613c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801622c:	1406      	asrs	r6, r0, #16
 801622e:	d45d      	bmi.n	80162ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016230:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8016234:	42b5      	cmp	r5, r6
 8016236:	dd59      	ble.n	80162ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016238:	140f      	asrs	r7, r1, #16
 801623a:	d457      	bmi.n	80162ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801623c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8016240:	42ba      	cmp	r2, r7
 8016242:	dd53      	ble.n	80162ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016244:	9a01      	ldr	r2, [sp, #4]
 8016246:	b22d      	sxth	r5, r5
 8016248:	fb07 2505 	mla	r5, r7, r5, r2
 801624c:	5daa      	ldrb	r2, [r5, r6]
 801624e:	9d02      	ldr	r5, [sp, #8]
 8016250:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8016254:	0e2e      	lsrs	r6, r5, #24
 8016256:	d049      	beq.n	80162ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016258:	f06f 0201 	mvn.w	r2, #1
 801625c:	fb02 f20e 	mul.w	r2, r2, lr
 8016260:	9203      	str	r2, [sp, #12]
 8016262:	f834 8002 	ldrh.w	r8, [r4, r2]
 8016266:	9a05      	ldr	r2, [sp, #20]
 8016268:	4356      	muls	r6, r2
 801626a:	1c72      	adds	r2, r6, #1
 801626c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8016270:	1212      	asrs	r2, r2, #8
 8016272:	fa1f f982 	uxth.w	r9, r2
 8016276:	ea4f 2728 	mov.w	r7, r8, asr #8
 801627a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801627e:	43d2      	mvns	r2, r2
 8016280:	b2d2      	uxtb	r2, r2
 8016282:	fb16 f609 	smulbb	r6, r6, r9
 8016286:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801628a:	fb07 6702 	mla	r7, r7, r2, r6
 801628e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016292:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8016296:	b2ed      	uxtb	r5, r5
 8016298:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801629c:	fa5f f888 	uxtb.w	r8, r8
 80162a0:	fb15 f509 	smulbb	r5, r5, r9
 80162a4:	fb08 5502 	mla	r5, r8, r2, r5
 80162a8:	b2bf      	uxth	r7, r7
 80162aa:	fb1a fa09 	smulbb	sl, sl, r9
 80162ae:	b2ad      	uxth	r5, r5
 80162b0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80162b4:	fb06 a602 	mla	r6, r6, r2, sl
 80162b8:	1c7a      	adds	r2, r7, #1
 80162ba:	f105 0a01 	add.w	sl, r5, #1
 80162be:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80162c2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80162c6:	b2b6      	uxth	r6, r6
 80162c8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80162cc:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80162d0:	ea4a 0707 	orr.w	r7, sl, r7
 80162d4:	f106 0a01 	add.w	sl, r6, #1
 80162d8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80162dc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80162e0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80162e4:	9a03      	ldr	r2, [sp, #12]
 80162e6:	ea47 070a 	orr.w	r7, r7, sl
 80162ea:	52a7      	strh	r7, [r4, r2]
 80162ec:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80162ee:	4410      	add	r0, r2
 80162f0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80162f2:	f10e 3eff 	add.w	lr, lr, #4294967295
 80162f6:	4411      	add	r1, r2
 80162f8:	e755      	b.n	80161a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80162fa:	f04f 0800 	mov.w	r8, #0
 80162fe:	eba3 0208 	sub.w	r2, r3, r8
 8016302:	2a00      	cmp	r2, #0
 8016304:	f77f af53 	ble.w	80161ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016308:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801630c:	9f01      	ldr	r7, [sp, #4]
 801630e:	140a      	asrs	r2, r1, #16
 8016310:	1405      	asrs	r5, r0, #16
 8016312:	fb06 7202 	mla	r2, r6, r2, r7
 8016316:	5d52      	ldrb	r2, [r2, r5]
 8016318:	9d02      	ldr	r5, [sp, #8]
 801631a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801631e:	0e2e      	lsrs	r6, r5, #24
 8016320:	d044      	beq.n	80163ac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8016322:	9a05      	ldr	r2, [sp, #20]
 8016324:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8016328:	4356      	muls	r6, r2
 801632a:	1c72      	adds	r2, r6, #1
 801632c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8016330:	1212      	asrs	r2, r2, #8
 8016332:	fa1f f982 	uxth.w	r9, r2
 8016336:	ea4f 272e 	mov.w	r7, lr, asr #8
 801633a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801633e:	43d2      	mvns	r2, r2
 8016340:	b2d2      	uxtb	r2, r2
 8016342:	fb16 f609 	smulbb	r6, r6, r9
 8016346:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801634a:	fb07 6702 	mla	r7, r7, r2, r6
 801634e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016352:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016356:	b2ed      	uxtb	r5, r5
 8016358:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801635c:	fa5f fe8e 	uxtb.w	lr, lr
 8016360:	fb15 f509 	smulbb	r5, r5, r9
 8016364:	fb0e 5502 	mla	r5, lr, r2, r5
 8016368:	b2bf      	uxth	r7, r7
 801636a:	fb1a fa09 	smulbb	sl, sl, r9
 801636e:	b2ad      	uxth	r5, r5
 8016370:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8016374:	fb06 a602 	mla	r6, r6, r2, sl
 8016378:	1c7a      	adds	r2, r7, #1
 801637a:	f105 0a01 	add.w	sl, r5, #1
 801637e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016382:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016386:	b2b6      	uxth	r6, r6
 8016388:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801638c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8016390:	ea4a 0707 	orr.w	r7, sl, r7
 8016394:	f106 0a01 	add.w	sl, r6, #1
 8016398:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801639c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80163a0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80163a4:	ea47 070a 	orr.w	r7, r7, sl
 80163a8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80163ac:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80163ae:	4410      	add	r0, r2
 80163b0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80163b2:	f108 0801 	add.w	r8, r8, #1
 80163b6:	4411      	add	r1, r2
 80163b8:	e7a1      	b.n	80162fe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80163ba:	b007      	add	sp, #28
 80163bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080163c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80163c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80163c4:	b085      	sub	sp, #20
 80163c6:	468b      	mov	fp, r1
 80163c8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80163ca:	9203      	str	r2, [sp, #12]
 80163cc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80163d0:	6841      	ldr	r1, [r0, #4]
 80163d2:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 80163d6:	fb01 2404 	mla	r4, r1, r4, r2
 80163da:	6802      	ldr	r2, [r0, #0]
 80163dc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80163e0:	f8de 2000 	ldr.w	r2, [lr]
 80163e4:	9200      	str	r2, [sp, #0]
 80163e6:	f8de 2004 	ldr.w	r2, [lr, #4]
 80163ea:	3204      	adds	r2, #4
 80163ec:	9201      	str	r2, [sp, #4]
 80163ee:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80163f2:	f1bb 0f00 	cmp.w	fp, #0
 80163f6:	dc03      	bgt.n	8016400 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80163f8:	9a03      	ldr	r2, [sp, #12]
 80163fa:	2a00      	cmp	r2, #0
 80163fc:	f340 8153 	ble.w	80166a6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8016400:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8016402:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8016406:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801640a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801640e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8016410:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8016414:	2b00      	cmp	r3, #0
 8016416:	dd0e      	ble.n	8016436 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016418:	1408      	asrs	r0, r1, #16
 801641a:	d405      	bmi.n	8016428 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801641c:	42b8      	cmp	r0, r7
 801641e:	da03      	bge.n	8016428 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016420:	1410      	asrs	r0, r2, #16
 8016422:	d401      	bmi.n	8016428 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016424:	42b0      	cmp	r0, r6
 8016426:	db07      	blt.n	8016438 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8016428:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801642a:	4401      	add	r1, r0
 801642c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801642e:	3b01      	subs	r3, #1
 8016430:	4402      	add	r2, r0
 8016432:	3402      	adds	r4, #2
 8016434:	e7ee      	b.n	8016414 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8016436:	d017      	beq.n	8016468 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016438:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801643a:	1e58      	subs	r0, r3, #1
 801643c:	fb05 1500 	mla	r5, r5, r0, r1
 8016440:	142d      	asrs	r5, r5, #16
 8016442:	d409      	bmi.n	8016458 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016444:	42bd      	cmp	r5, r7
 8016446:	da07      	bge.n	8016458 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016448:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801644a:	fb05 2000 	mla	r0, r5, r0, r2
 801644e:	1400      	asrs	r0, r0, #16
 8016450:	d402      	bmi.n	8016458 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016452:	42b0      	cmp	r0, r6
 8016454:	f2c0 80bc 	blt.w	80165d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8016458:	2600      	movs	r6, #0
 801645a:	1998      	adds	r0, r3, r6
 801645c:	2800      	cmp	r0, #0
 801645e:	dc3e      	bgt.n	80164de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8016460:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016464:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016468:	f1bb 0f00 	cmp.w	fp, #0
 801646c:	f340 811b 	ble.w	80166a6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8016470:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016474:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016478:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801647c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801647e:	f1bb 0b01 	subs.w	fp, fp, #1
 8016482:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016486:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801648a:	eeb0 6a62 	vmov.f32	s12, s5
 801648e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016492:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016496:	ee77 2a62 	vsub.f32	s5, s14, s5
 801649a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801649e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80164a2:	eeb0 6a43 	vmov.f32	s12, s6
 80164a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80164aa:	ee12 2a90 	vmov	r2, s5
 80164ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80164b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80164b6:	ee13 2a10 	vmov	r2, s6
 80164ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80164be:	9311      	str	r3, [sp, #68]	@ 0x44
 80164c0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80164c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80164c6:	9a03      	ldr	r2, [sp, #12]
 80164c8:	9312      	str	r3, [sp, #72]	@ 0x48
 80164ca:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80164ce:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80164d0:	eeb0 3a67 	vmov.f32	s6, s15
 80164d4:	bf08      	it	eq
 80164d6:	4613      	moveq	r3, r2
 80164d8:	eef0 2a47 	vmov.f32	s5, s14
 80164dc:	e789      	b.n	80163f2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80164de:	140f      	asrs	r7, r1, #16
 80164e0:	d426      	bmi.n	8016530 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80164e2:	f8de 5008 	ldr.w	r5, [lr, #8]
 80164e6:	42bd      	cmp	r5, r7
 80164e8:	dd22      	ble.n	8016530 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80164ea:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80164ee:	d41f      	bmi.n	8016530 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80164f0:	f8de 000c 	ldr.w	r0, [lr, #12]
 80164f4:	4560      	cmp	r0, ip
 80164f6:	dd1b      	ble.n	8016530 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80164f8:	9800      	ldr	r0, [sp, #0]
 80164fa:	b22d      	sxth	r5, r5
 80164fc:	fb0c 0505 	mla	r5, ip, r5, r0
 8016500:	5de8      	ldrb	r0, [r5, r7]
 8016502:	9d01      	ldr	r5, [sp, #4]
 8016504:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8016508:	0e07      	lsrs	r7, r0, #24
 801650a:	2fff      	cmp	r7, #255	@ 0xff
 801650c:	d116      	bne.n	801653c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801650e:	f06f 0501 	mvn.w	r5, #1
 8016512:	fb05 f706 	mul.w	r7, r5, r6
 8016516:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801651a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801651e:	0945      	lsrs	r5, r0, #5
 8016520:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016524:	ea4c 0505 	orr.w	r5, ip, r5
 8016528:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801652c:	4305      	orrs	r5, r0
 801652e:	53e5      	strh	r5, [r4, r7]
 8016530:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8016532:	4401      	add	r1, r0
 8016534:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8016536:	3e01      	subs	r6, #1
 8016538:	4402      	add	r2, r0
 801653a:	e78e      	b.n	801645a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801653c:	b2fd      	uxtb	r5, r7
 801653e:	2f00      	cmp	r7, #0
 8016540:	d0f6      	beq.n	8016530 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016542:	f06f 0701 	mvn.w	r7, #1
 8016546:	4377      	muls	r7, r6
 8016548:	fa1f f985 	uxth.w	r9, r5
 801654c:	f834 8007 	ldrh.w	r8, [r4, r7]
 8016550:	9702      	str	r7, [sp, #8]
 8016552:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8016556:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801655a:	43ed      	mvns	r5, r5
 801655c:	b2ed      	uxtb	r5, r5
 801655e:	fb17 f709 	smulbb	r7, r7, r9
 8016562:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016566:	fb0c 7c05 	mla	ip, ip, r5, r7
 801656a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801656e:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8016572:	b2c0      	uxtb	r0, r0
 8016574:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016578:	fa5f f888 	uxtb.w	r8, r8
 801657c:	fb10 f009 	smulbb	r0, r0, r9
 8016580:	fb08 0005 	mla	r0, r8, r5, r0
 8016584:	b280      	uxth	r0, r0
 8016586:	fa1f fc8c 	uxth.w	ip, ip
 801658a:	fb1a fa09 	smulbb	sl, sl, r9
 801658e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8016592:	fb07 a705 	mla	r7, r7, r5, sl
 8016596:	f100 0a01 	add.w	sl, r0, #1
 801659a:	f10c 0501 	add.w	r5, ip, #1
 801659e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80165a2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80165a6:	b2bf      	uxth	r7, r7
 80165a8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80165ac:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80165b0:	ea4a 0c0c 	orr.w	ip, sl, ip
 80165b4:	f107 0a01 	add.w	sl, r7, #1
 80165b8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80165bc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80165c0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80165c4:	9802      	ldr	r0, [sp, #8]
 80165c6:	ea4c 0c0a 	orr.w	ip, ip, sl
 80165ca:	f824 c000 	strh.w	ip, [r4, r0]
 80165ce:	e7af      	b.n	8016530 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80165d0:	f04f 0800 	mov.w	r8, #0
 80165d4:	eba3 0008 	sub.w	r0, r3, r8
 80165d8:	2800      	cmp	r0, #0
 80165da:	f77f af41 	ble.w	8016460 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80165de:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80165e2:	9f00      	ldr	r7, [sp, #0]
 80165e4:	1410      	asrs	r0, r2, #16
 80165e6:	140d      	asrs	r5, r1, #16
 80165e8:	fb06 7000 	mla	r0, r6, r0, r7
 80165ec:	5d40      	ldrb	r0, [r0, r5]
 80165ee:	9d01      	ldr	r5, [sp, #4]
 80165f0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80165f4:	0e2e      	lsrs	r6, r5, #24
 80165f6:	2eff      	cmp	r6, #255	@ 0xff
 80165f8:	d112      	bne.n	8016620 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 80165fa:	482c      	ldr	r0, [pc, #176]	@ (80166ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 80165fc:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8016600:	0968      	lsrs	r0, r5, #5
 8016602:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8016606:	4330      	orrs	r0, r6
 8016608:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801660c:	4328      	orrs	r0, r5
 801660e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8016612:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8016614:	4401      	add	r1, r0
 8016616:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8016618:	f108 0801 	add.w	r8, r8, #1
 801661c:	4402      	add	r2, r0
 801661e:	e7d9      	b.n	80165d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8016620:	b2f0      	uxtb	r0, r6
 8016622:	2e00      	cmp	r6, #0
 8016624:	d0f5      	beq.n	8016612 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8016626:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801662a:	fa1f f980 	uxth.w	r9, r0
 801662e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8016632:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8016636:	43c0      	mvns	r0, r0
 8016638:	b2c0      	uxtb	r0, r0
 801663a:	fb16 f609 	smulbb	r6, r6, r9
 801663e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016642:	fb07 6700 	mla	r7, r7, r0, r6
 8016646:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801664a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801664e:	b2ed      	uxtb	r5, r5
 8016650:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016654:	fa5f fc8c 	uxtb.w	ip, ip
 8016658:	fb15 f509 	smulbb	r5, r5, r9
 801665c:	fb0c 5500 	mla	r5, ip, r0, r5
 8016660:	b2bf      	uxth	r7, r7
 8016662:	fb1a fa09 	smulbb	sl, sl, r9
 8016666:	b2ad      	uxth	r5, r5
 8016668:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801666c:	fb06 a600 	mla	r6, r6, r0, sl
 8016670:	1c78      	adds	r0, r7, #1
 8016672:	f105 0a01 	add.w	sl, r5, #1
 8016676:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801667a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801667e:	b2b6      	uxth	r6, r6
 8016680:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016684:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8016688:	ea4a 0707 	orr.w	r7, sl, r7
 801668c:	f106 0a01 	add.w	sl, r6, #1
 8016690:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016694:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016698:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801669c:	ea47 070a 	orr.w	r7, r7, sl
 80166a0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80166a4:	e7b5      	b.n	8016612 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80166a6:	b005      	add	sp, #20
 80166a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80166ac:	fffff800 	.word	0xfffff800

080166b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80166b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80166b4:	b087      	sub	sp, #28
 80166b6:	468b      	mov	fp, r1
 80166b8:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80166ba:	9204      	str	r2, [sp, #16]
 80166bc:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80166c0:	9205      	str	r2, [sp, #20]
 80166c2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 80166c6:	6861      	ldr	r1, [r4, #4]
 80166c8:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80166cc:	fb01 2000 	mla	r0, r1, r0, r2
 80166d0:	6822      	ldr	r2, [r4, #0]
 80166d2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80166d6:	f8de 2000 	ldr.w	r2, [lr]
 80166da:	9201      	str	r2, [sp, #4]
 80166dc:	f8de 2004 	ldr.w	r2, [lr, #4]
 80166e0:	9202      	str	r2, [sp, #8]
 80166e2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80166e6:	f1bb 0f00 	cmp.w	fp, #0
 80166ea:	dc03      	bgt.n	80166f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80166ec:	9a04      	ldr	r2, [sp, #16]
 80166ee:	2a00      	cmp	r2, #0
 80166f0:	f340 8142 	ble.w	8016978 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80166f4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80166f6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80166fa:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80166fe:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8016702:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016704:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8016708:	2b00      	cmp	r3, #0
 801670a:	dd0e      	ble.n	801672a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801670c:	140c      	asrs	r4, r1, #16
 801670e:	d405      	bmi.n	801671c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016710:	42bc      	cmp	r4, r7
 8016712:	da03      	bge.n	801671c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016714:	1414      	asrs	r4, r2, #16
 8016716:	d401      	bmi.n	801671c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016718:	42b4      	cmp	r4, r6
 801671a:	db07      	blt.n	801672c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801671c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801671e:	4421      	add	r1, r4
 8016720:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8016722:	3b01      	subs	r3, #1
 8016724:	4422      	add	r2, r4
 8016726:	3002      	adds	r0, #2
 8016728:	e7ee      	b.n	8016708 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801672a:	d019      	beq.n	8016760 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801672c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801672e:	1e5c      	subs	r4, r3, #1
 8016730:	fb05 1504 	mla	r5, r5, r4, r1
 8016734:	142d      	asrs	r5, r5, #16
 8016736:	d409      	bmi.n	801674c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8016738:	42bd      	cmp	r5, r7
 801673a:	da07      	bge.n	801674c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801673c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801673e:	fb05 2404 	mla	r4, r5, r4, r2
 8016742:	1424      	asrs	r4, r4, #16
 8016744:	d402      	bmi.n	801674c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8016746:	42b4      	cmp	r4, r6
 8016748:	f2c0 80b1 	blt.w	80168ae <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801674c:	f04f 0800 	mov.w	r8, #0
 8016750:	eb03 0408 	add.w	r4, r3, r8
 8016754:	2c00      	cmp	r4, #0
 8016756:	dc3e      	bgt.n	80167d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8016758:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801675c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016760:	f1bb 0f00 	cmp.w	fp, #0
 8016764:	f340 8108 	ble.w	8016978 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8016768:	ee30 0a04 	vadd.f32	s0, s0, s8
 801676c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016770:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016774:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016776:	f1bb 0b01 	subs.w	fp, fp, #1
 801677a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801677e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016782:	eeb0 6a62 	vmov.f32	s12, s5
 8016786:	ee61 7a27 	vmul.f32	s15, s2, s15
 801678a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801678e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016792:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8016796:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801679a:	eeb0 6a43 	vmov.f32	s12, s6
 801679e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80167a2:	ee12 2a90 	vmov	r2, s5
 80167a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80167aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80167ae:	ee13 2a10 	vmov	r2, s6
 80167b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80167b6:	9313      	str	r3, [sp, #76]	@ 0x4c
 80167b8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80167ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80167be:	9a04      	ldr	r2, [sp, #16]
 80167c0:	9314      	str	r3, [sp, #80]	@ 0x50
 80167c2:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80167c6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80167c8:	eeb0 3a67 	vmov.f32	s6, s15
 80167cc:	bf08      	it	eq
 80167ce:	4613      	moveq	r3, r2
 80167d0:	eef0 2a47 	vmov.f32	s5, s14
 80167d4:	e787      	b.n	80166e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80167d6:	140e      	asrs	r6, r1, #16
 80167d8:	d462      	bmi.n	80168a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80167da:	f8de 5008 	ldr.w	r5, [lr, #8]
 80167de:	42b5      	cmp	r5, r6
 80167e0:	dd5e      	ble.n	80168a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80167e2:	1417      	asrs	r7, r2, #16
 80167e4:	d45c      	bmi.n	80168a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80167e6:	f8de 400c 	ldr.w	r4, [lr, #12]
 80167ea:	42bc      	cmp	r4, r7
 80167ec:	dd58      	ble.n	80168a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80167ee:	b22d      	sxth	r5, r5
 80167f0:	fb07 6505 	mla	r5, r7, r5, r6
 80167f4:	9c02      	ldr	r4, [sp, #8]
 80167f6:	5d66      	ldrb	r6, [r4, r5]
 80167f8:	2e00      	cmp	r6, #0
 80167fa:	d051      	beq.n	80168a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80167fc:	9c01      	ldr	r4, [sp, #4]
 80167fe:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8016802:	f06f 0401 	mvn.w	r4, #1
 8016806:	fb04 f408 	mul.w	r4, r4, r8
 801680a:	9403      	str	r4, [sp, #12]
 801680c:	5b05      	ldrh	r5, [r0, r4]
 801680e:	9c05      	ldr	r4, [sp, #20]
 8016810:	4366      	muls	r6, r4
 8016812:	1c74      	adds	r4, r6, #1
 8016814:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8016818:	1224      	asrs	r4, r4, #8
 801681a:	b2a7      	uxth	r7, r4
 801681c:	122e      	asrs	r6, r5, #8
 801681e:	43e4      	mvns	r4, r4
 8016820:	b2e4      	uxtb	r4, r4
 8016822:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8016826:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801682a:	fb16 f604 	smulbb	r6, r6, r4
 801682e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8016832:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016836:	00ed      	lsls	r5, r5, #3
 8016838:	fb0c 6c07 	mla	ip, ip, r7, r6
 801683c:	b2ed      	uxtb	r5, r5
 801683e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8016842:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8016846:	fb15 f504 	smulbb	r5, r5, r4
 801684a:	fa5f f989 	uxtb.w	r9, r9
 801684e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8016852:	fb09 5507 	mla	r5, r9, r7, r5
 8016856:	fb1a fa04 	smulbb	sl, sl, r4
 801685a:	fa1f fc8c 	uxth.w	ip, ip
 801685e:	b2ad      	uxth	r5, r5
 8016860:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8016864:	fb06 a607 	mla	r6, r6, r7, sl
 8016868:	f10c 0401 	add.w	r4, ip, #1
 801686c:	f105 0a01 	add.w	sl, r5, #1
 8016870:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8016874:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016878:	b2b6      	uxth	r6, r6
 801687a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801687e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8016882:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016886:	f106 0a01 	add.w	sl, r6, #1
 801688a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801688e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016892:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016896:	9c03      	ldr	r4, [sp, #12]
 8016898:	ea4c 0c0a 	orr.w	ip, ip, sl
 801689c:	f820 c004 	strh.w	ip, [r0, r4]
 80168a0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80168a2:	4421      	add	r1, r4
 80168a4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80168a6:	f108 38ff 	add.w	r8, r8, #4294967295
 80168aa:	4422      	add	r2, r4
 80168ac:	e750      	b.n	8016750 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80168ae:	f04f 0900 	mov.w	r9, #0
 80168b2:	eba3 0409 	sub.w	r4, r3, r9
 80168b6:	2c00      	cmp	r4, #0
 80168b8:	f77f af4e 	ble.w	8016758 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80168bc:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80168c0:	140d      	asrs	r5, r1, #16
 80168c2:	1414      	asrs	r4, r2, #16
 80168c4:	fb06 5404 	mla	r4, r6, r4, r5
 80168c8:	9d02      	ldr	r5, [sp, #8]
 80168ca:	5d2e      	ldrb	r6, [r5, r4]
 80168cc:	2e00      	cmp	r6, #0
 80168ce:	d04c      	beq.n	801696a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80168d0:	9d01      	ldr	r5, [sp, #4]
 80168d2:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80168d6:	9c05      	ldr	r4, [sp, #20]
 80168d8:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80168dc:	4366      	muls	r6, r4
 80168de:	1c74      	adds	r4, r6, #1
 80168e0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80168e4:	1224      	asrs	r4, r4, #8
 80168e6:	b2a7      	uxth	r7, r4
 80168e8:	122e      	asrs	r6, r5, #8
 80168ea:	43e4      	mvns	r4, r4
 80168ec:	b2e4      	uxtb	r4, r4
 80168ee:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80168f2:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80168f6:	fb16 f604 	smulbb	r6, r6, r4
 80168fa:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80168fe:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016902:	00ed      	lsls	r5, r5, #3
 8016904:	fb0c 6c07 	mla	ip, ip, r7, r6
 8016908:	b2ed      	uxtb	r5, r5
 801690a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801690e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016912:	fb15 f504 	smulbb	r5, r5, r4
 8016916:	fa5f f888 	uxtb.w	r8, r8
 801691a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801691e:	fb08 5507 	mla	r5, r8, r7, r5
 8016922:	fb1a fa04 	smulbb	sl, sl, r4
 8016926:	fa1f fc8c 	uxth.w	ip, ip
 801692a:	b2ad      	uxth	r5, r5
 801692c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8016930:	fb06 a607 	mla	r6, r6, r7, sl
 8016934:	f10c 0401 	add.w	r4, ip, #1
 8016938:	f105 0a01 	add.w	sl, r5, #1
 801693c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8016940:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016944:	b2b6      	uxth	r6, r6
 8016946:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801694a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801694e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016952:	f106 0a01 	add.w	sl, r6, #1
 8016956:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801695a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801695e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016962:	ea4c 0c0a 	orr.w	ip, ip, sl
 8016966:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801696a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801696c:	4421      	add	r1, r4
 801696e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8016970:	f109 0901 	add.w	r9, r9, #1
 8016974:	4422      	add	r2, r4
 8016976:	e79c      	b.n	80168b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8016978:	b007      	add	sp, #28
 801697a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801697e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801697e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016982:	b085      	sub	sp, #20
 8016984:	468b      	mov	fp, r1
 8016986:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8016988:	9203      	str	r2, [sp, #12]
 801698a:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 801698e:	6861      	ldr	r1, [r4, #4]
 8016990:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8016994:	fb01 2000 	mla	r0, r1, r0, r2
 8016998:	6822      	ldr	r2, [r4, #0]
 801699a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801699e:	f8d8 2000 	ldr.w	r2, [r8]
 80169a2:	9200      	str	r2, [sp, #0]
 80169a4:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80169a8:	9201      	str	r2, [sp, #4]
 80169aa:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80169ae:	f1bb 0f00 	cmp.w	fp, #0
 80169b2:	dc03      	bgt.n	80169bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80169b4:	9a03      	ldr	r2, [sp, #12]
 80169b6:	2a00      	cmp	r2, #0
 80169b8:	f340 8146 	ble.w	8016c48 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80169bc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80169be:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80169c2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80169c6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80169ca:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80169cc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80169d0:	2b00      	cmp	r3, #0
 80169d2:	dd0e      	ble.n	80169f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80169d4:	140c      	asrs	r4, r1, #16
 80169d6:	d405      	bmi.n	80169e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80169d8:	42bc      	cmp	r4, r7
 80169da:	da03      	bge.n	80169e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80169dc:	1414      	asrs	r4, r2, #16
 80169de:	d401      	bmi.n	80169e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80169e0:	42b4      	cmp	r4, r6
 80169e2:	db07      	blt.n	80169f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80169e4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80169e6:	4421      	add	r1, r4
 80169e8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80169ea:	3b01      	subs	r3, #1
 80169ec:	4422      	add	r2, r4
 80169ee:	3002      	adds	r0, #2
 80169f0:	e7ee      	b.n	80169d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80169f2:	d017      	beq.n	8016a24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80169f4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80169f6:	1e5c      	subs	r4, r3, #1
 80169f8:	fb05 1504 	mla	r5, r5, r4, r1
 80169fc:	142d      	asrs	r5, r5, #16
 80169fe:	d409      	bmi.n	8016a14 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016a00:	42bd      	cmp	r5, r7
 8016a02:	da07      	bge.n	8016a14 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016a04:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8016a06:	fb05 2404 	mla	r4, r5, r4, r2
 8016a0a:	1424      	asrs	r4, r4, #16
 8016a0c:	d402      	bmi.n	8016a14 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016a0e:	42b4      	cmp	r4, r6
 8016a10:	f2c0 80b3 	blt.w	8016b7a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8016a14:	2600      	movs	r6, #0
 8016a16:	199c      	adds	r4, r3, r6
 8016a18:	2c00      	cmp	r4, #0
 8016a1a:	dc3e      	bgt.n	8016a9a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016a1c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016a20:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016a24:	f1bb 0f00 	cmp.w	fp, #0
 8016a28:	f340 810e 	ble.w	8016c48 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8016a2c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016a30:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016a34:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016a38:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016a3a:	f1bb 0b01 	subs.w	fp, fp, #1
 8016a3e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016a42:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016a46:	eeb0 6a62 	vmov.f32	s12, s5
 8016a4a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016a4e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016a52:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016a56:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8016a5a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016a5e:	eeb0 6a43 	vmov.f32	s12, s6
 8016a62:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016a66:	ee12 2a90 	vmov	r2, s5
 8016a6a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016a6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8016a72:	ee13 2a10 	vmov	r2, s6
 8016a76:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016a7a:	9311      	str	r3, [sp, #68]	@ 0x44
 8016a7c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016a7e:	fb92 f3f3 	sdiv	r3, r2, r3
 8016a82:	9a03      	ldr	r2, [sp, #12]
 8016a84:	9312      	str	r3, [sp, #72]	@ 0x48
 8016a86:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8016a8a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016a8c:	eeb0 3a67 	vmov.f32	s6, s15
 8016a90:	bf08      	it	eq
 8016a92:	4613      	moveq	r3, r2
 8016a94:	eef0 2a47 	vmov.f32	s5, s14
 8016a98:	e789      	b.n	80169ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8016a9a:	140f      	asrs	r7, r1, #16
 8016a9c:	d418      	bmi.n	8016ad0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016a9e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8016aa2:	42bd      	cmp	r5, r7
 8016aa4:	dd14      	ble.n	8016ad0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016aa6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016aaa:	d411      	bmi.n	8016ad0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016aac:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8016ab0:	4564      	cmp	r4, ip
 8016ab2:	dd0d      	ble.n	8016ad0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016ab4:	b22d      	sxth	r5, r5
 8016ab6:	fb0c 7505 	mla	r5, ip, r5, r7
 8016aba:	9c01      	ldr	r4, [sp, #4]
 8016abc:	5d64      	ldrb	r4, [r4, r5]
 8016abe:	2cff      	cmp	r4, #255	@ 0xff
 8016ac0:	d10c      	bne.n	8016adc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8016ac2:	9c00      	ldr	r4, [sp, #0]
 8016ac4:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8016ac8:	f06f 0401 	mvn.w	r4, #1
 8016acc:	4374      	muls	r4, r6
 8016ace:	5305      	strh	r5, [r0, r4]
 8016ad0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8016ad2:	4421      	add	r1, r4
 8016ad4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8016ad6:	3e01      	subs	r6, #1
 8016ad8:	4422      	add	r2, r4
 8016ada:	e79c      	b.n	8016a16 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016adc:	2c00      	cmp	r4, #0
 8016ade:	d0f7      	beq.n	8016ad0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016ae0:	9f00      	ldr	r7, [sp, #0]
 8016ae2:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8016ae6:	f06f 0501 	mvn.w	r5, #1
 8016aea:	4375      	muls	r5, r6
 8016aec:	9502      	str	r5, [sp, #8]
 8016aee:	5b45      	ldrh	r5, [r0, r5]
 8016af0:	fa1f fc84 	uxth.w	ip, r4
 8016af4:	122f      	asrs	r7, r5, #8
 8016af6:	43e4      	mvns	r4, r4
 8016af8:	b2e4      	uxtb	r4, r4
 8016afa:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8016afe:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016b02:	fb17 f704 	smulbb	r7, r7, r4
 8016b06:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8016b0a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8016b0e:	00ed      	lsls	r5, r5, #3
 8016b10:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8016b14:	b2ed      	uxtb	r5, r5
 8016b16:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8016b1a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8016b1e:	fb15 f504 	smulbb	r5, r5, r4
 8016b22:	fa5f f989 	uxtb.w	r9, r9
 8016b26:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8016b2a:	fb09 550c 	mla	r5, r9, ip, r5
 8016b2e:	fb1a fa04 	smulbb	sl, sl, r4
 8016b32:	fa1f fe8e 	uxth.w	lr, lr
 8016b36:	b2ad      	uxth	r5, r5
 8016b38:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8016b3c:	fb07 a70c 	mla	r7, r7, ip, sl
 8016b40:	f10e 0401 	add.w	r4, lr, #1
 8016b44:	f105 0a01 	add.w	sl, r5, #1
 8016b48:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8016b4c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016b50:	b2bf      	uxth	r7, r7
 8016b52:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016b56:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8016b5a:	ea4a 0e0e 	orr.w	lr, sl, lr
 8016b5e:	f107 0a01 	add.w	sl, r7, #1
 8016b62:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016b66:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016b6a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016b6e:	9c02      	ldr	r4, [sp, #8]
 8016b70:	ea4e 0e0a 	orr.w	lr, lr, sl
 8016b74:	f820 e004 	strh.w	lr, [r0, r4]
 8016b78:	e7aa      	b.n	8016ad0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016b7a:	f04f 0900 	mov.w	r9, #0
 8016b7e:	eba3 0409 	sub.w	r4, r3, r9
 8016b82:	2c00      	cmp	r4, #0
 8016b84:	f77f af4a 	ble.w	8016a1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016b88:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8016b8c:	1414      	asrs	r4, r2, #16
 8016b8e:	140d      	asrs	r5, r1, #16
 8016b90:	fb06 5504 	mla	r5, r6, r4, r5
 8016b94:	9c01      	ldr	r4, [sp, #4]
 8016b96:	5d64      	ldrb	r4, [r4, r5]
 8016b98:	2cff      	cmp	r4, #255	@ 0xff
 8016b9a:	d10b      	bne.n	8016bb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8016b9c:	9c00      	ldr	r4, [sp, #0]
 8016b9e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8016ba2:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8016ba6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8016ba8:	4421      	add	r1, r4
 8016baa:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8016bac:	f109 0901 	add.w	r9, r9, #1
 8016bb0:	4422      	add	r2, r4
 8016bb2:	e7e4      	b.n	8016b7e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8016bb4:	2c00      	cmp	r4, #0
 8016bb6:	d0f6      	beq.n	8016ba6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8016bb8:	9e00      	ldr	r6, [sp, #0]
 8016bba:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8016bbe:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8016bc2:	b2a7      	uxth	r7, r4
 8016bc4:	122e      	asrs	r6, r5, #8
 8016bc6:	43e4      	mvns	r4, r4
 8016bc8:	b2e4      	uxtb	r4, r4
 8016bca:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016bce:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016bd2:	fb16 f604 	smulbb	r6, r6, r4
 8016bd6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8016bda:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016bde:	00ed      	lsls	r5, r5, #3
 8016be0:	fb0c 6c07 	mla	ip, ip, r7, r6
 8016be4:	b2ed      	uxtb	r5, r5
 8016be6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016bea:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016bee:	fb15 f504 	smulbb	r5, r5, r4
 8016bf2:	fa5f fe8e 	uxtb.w	lr, lr
 8016bf6:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8016bfa:	fb0e 5507 	mla	r5, lr, r7, r5
 8016bfe:	fb1a fa04 	smulbb	sl, sl, r4
 8016c02:	fa1f fc8c 	uxth.w	ip, ip
 8016c06:	b2ad      	uxth	r5, r5
 8016c08:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8016c0c:	fb06 a607 	mla	r6, r6, r7, sl
 8016c10:	f10c 0401 	add.w	r4, ip, #1
 8016c14:	f105 0a01 	add.w	sl, r5, #1
 8016c18:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8016c1c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016c20:	b2b6      	uxth	r6, r6
 8016c22:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016c26:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8016c2a:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016c2e:	f106 0a01 	add.w	sl, r6, #1
 8016c32:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016c36:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016c3a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016c3e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8016c42:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8016c46:	e7ae      	b.n	8016ba6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8016c48:	b005      	add	sp, #20
 8016c4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016c4e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016c4e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c52:	b085      	sub	sp, #20
 8016c54:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8016c56:	9203      	str	r2, [sp, #12]
 8016c58:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 8016c5c:	9201      	str	r2, [sp, #4]
 8016c5e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8016c62:	9100      	str	r1, [sp, #0]
 8016c64:	6841      	ldr	r1, [r0, #4]
 8016c66:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8016c6a:	fb01 2404 	mla	r4, r1, r4, r2
 8016c6e:	6802      	ldr	r2, [r0, #0]
 8016c70:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016c74:	f8de 2000 	ldr.w	r2, [lr]
 8016c78:	9202      	str	r2, [sp, #8]
 8016c7a:	9a01      	ldr	r2, [sp, #4]
 8016c7c:	43d6      	mvns	r6, r2
 8016c7e:	b2f6      	uxtb	r6, r6
 8016c80:	9a00      	ldr	r2, [sp, #0]
 8016c82:	2a00      	cmp	r2, #0
 8016c84:	dc03      	bgt.n	8016c8e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8016c86:	9a03      	ldr	r2, [sp, #12]
 8016c88:	2a00      	cmp	r2, #0
 8016c8a:	f340 8124 	ble.w	8016ed6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8016c8e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8016c90:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8016c94:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8016c98:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8016c9c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8016c9e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8016ca2:	2b00      	cmp	r3, #0
 8016ca4:	dd0e      	ble.n	8016cc4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016ca6:	1408      	asrs	r0, r1, #16
 8016ca8:	d405      	bmi.n	8016cb6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016caa:	4560      	cmp	r0, ip
 8016cac:	da03      	bge.n	8016cb6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016cae:	1410      	asrs	r0, r2, #16
 8016cb0:	d401      	bmi.n	8016cb6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016cb2:	42b8      	cmp	r0, r7
 8016cb4:	db07      	blt.n	8016cc6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8016cb6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8016cb8:	4401      	add	r1, r0
 8016cba:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8016cbc:	3b01      	subs	r3, #1
 8016cbe:	4402      	add	r2, r0
 8016cc0:	3402      	adds	r4, #2
 8016cc2:	e7ee      	b.n	8016ca2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8016cc4:	d06e      	beq.n	8016da4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8016cc6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8016cc8:	1e58      	subs	r0, r3, #1
 8016cca:	fb05 1500 	mla	r5, r5, r0, r1
 8016cce:	142d      	asrs	r5, r5, #16
 8016cd0:	d45c      	bmi.n	8016d8c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016cd2:	4565      	cmp	r5, ip
 8016cd4:	da5a      	bge.n	8016d8c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016cd6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8016cd8:	fb05 2000 	mla	r0, r5, r0, r2
 8016cdc:	1400      	asrs	r0, r0, #16
 8016cde:	d455      	bmi.n	8016d8c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016ce0:	42b8      	cmp	r0, r7
 8016ce2:	da53      	bge.n	8016d8c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016ce4:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8016ce8:	4699      	mov	r9, r3
 8016cea:	46a2      	mov	sl, r4
 8016cec:	f1b9 0f00 	cmp.w	r9, #0
 8016cf0:	dd54      	ble.n	8016d9c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8016cf2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8016cf6:	140d      	asrs	r5, r1, #16
 8016cf8:	1410      	asrs	r0, r2, #16
 8016cfa:	fb07 5000 	mla	r0, r7, r0, r5
 8016cfe:	9d02      	ldr	r5, [sp, #8]
 8016d00:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8016d04:	f8ba 5000 	ldrh.w	r5, [sl]
 8016d08:	122f      	asrs	r7, r5, #8
 8016d0a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8016d0e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016d12:	fb17 f706 	smulbb	r7, r7, r6
 8016d16:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8016d1a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016d1e:	00ed      	lsls	r5, r5, #3
 8016d20:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8016d24:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8016d28:	10c7      	asrs	r7, r0, #3
 8016d2a:	b2ed      	uxtb	r5, r5
 8016d2c:	00c0      	lsls	r0, r0, #3
 8016d2e:	fb18 f806 	smulbb	r8, r8, r6
 8016d32:	fb15 f506 	smulbb	r5, r5, r6
 8016d36:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8016d3a:	b2c0      	uxtb	r0, r0
 8016d3c:	fa1f fc8c 	uxth.w	ip, ip
 8016d40:	fb07 870b 	mla	r7, r7, fp, r8
 8016d44:	fb00 500b 	mla	r0, r0, fp, r5
 8016d48:	b280      	uxth	r0, r0
 8016d4a:	b2bf      	uxth	r7, r7
 8016d4c:	f10c 0501 	add.w	r5, ip, #1
 8016d50:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016d54:	f107 0801 	add.w	r8, r7, #1
 8016d58:	1c45      	adds	r5, r0, #1
 8016d5a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016d5e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8016d62:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8016d64:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8016d68:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016d6c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8016d70:	ea45 0c0c 	orr.w	ip, r5, ip
 8016d74:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8016d78:	4401      	add	r1, r0
 8016d7a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8016d7c:	ea4c 0c08 	orr.w	ip, ip, r8
 8016d80:	f82a cb02 	strh.w	ip, [sl], #2
 8016d84:	4402      	add	r2, r0
 8016d86:	f109 39ff 	add.w	r9, r9, #4294967295
 8016d8a:	e7af      	b.n	8016cec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016d8c:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8016d90:	f04f 0800 	mov.w	r8, #0
 8016d94:	eb03 0008 	add.w	r0, r3, r8
 8016d98:	2800      	cmp	r0, #0
 8016d9a:	dc41      	bgt.n	8016e20 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8016d9c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016da0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016da4:	9b00      	ldr	r3, [sp, #0]
 8016da6:	2b00      	cmp	r3, #0
 8016da8:	f340 8095 	ble.w	8016ed6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8016dac:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016db0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8016db4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8016db8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016dba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016dbe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016dc2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016dc6:	eef0 6a62 	vmov.f32	s13, s5
 8016dca:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016dce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016dd2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016dd6:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8016dda:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016dde:	eef0 6a43 	vmov.f32	s13, s6
 8016de2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016de6:	ee12 2a90 	vmov	r2, s5
 8016dea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016dee:	fb92 f3f3 	sdiv	r3, r2, r3
 8016df2:	ee13 2a10 	vmov	r2, s6
 8016df6:	9311      	str	r3, [sp, #68]	@ 0x44
 8016df8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016dfa:	fb92 f3f3 	sdiv	r3, r2, r3
 8016dfe:	9312      	str	r3, [sp, #72]	@ 0x48
 8016e00:	9b00      	ldr	r3, [sp, #0]
 8016e02:	9a03      	ldr	r2, [sp, #12]
 8016e04:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016e08:	3b01      	subs	r3, #1
 8016e0a:	9300      	str	r3, [sp, #0]
 8016e0c:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8016e10:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016e12:	eeb0 3a67 	vmov.f32	s6, s15
 8016e16:	bf08      	it	eq
 8016e18:	4613      	moveq	r3, r2
 8016e1a:	eef0 2a47 	vmov.f32	s5, s14
 8016e1e:	e72f      	b.n	8016c80 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8016e20:	140f      	asrs	r7, r1, #16
 8016e22:	d451      	bmi.n	8016ec8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016e24:	f8de 5008 	ldr.w	r5, [lr, #8]
 8016e28:	42bd      	cmp	r5, r7
 8016e2a:	dd4d      	ble.n	8016ec8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016e2c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016e30:	d44a      	bmi.n	8016ec8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016e32:	f8de 000c 	ldr.w	r0, [lr, #12]
 8016e36:	4560      	cmp	r0, ip
 8016e38:	dd46      	ble.n	8016ec8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016e3a:	b22d      	sxth	r5, r5
 8016e3c:	fb0c 7505 	mla	r5, ip, r5, r7
 8016e40:	9802      	ldr	r0, [sp, #8]
 8016e42:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8016e46:	f06f 0501 	mvn.w	r5, #1
 8016e4a:	fb05 fb08 	mul.w	fp, r5, r8
 8016e4e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8016e52:	f834 500b 	ldrh.w	r5, [r4, fp]
 8016e56:	122f      	asrs	r7, r5, #8
 8016e58:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016e5c:	fb17 f706 	smulbb	r7, r7, r6
 8016e60:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8016e64:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016e68:	00ed      	lsls	r5, r5, #3
 8016e6a:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8016e6e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8016e72:	10c7      	asrs	r7, r0, #3
 8016e74:	b2ed      	uxtb	r5, r5
 8016e76:	00c0      	lsls	r0, r0, #3
 8016e78:	fb19 f906 	smulbb	r9, r9, r6
 8016e7c:	fb15 f506 	smulbb	r5, r5, r6
 8016e80:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8016e84:	b2c0      	uxtb	r0, r0
 8016e86:	fa1f fc8c 	uxth.w	ip, ip
 8016e8a:	fb07 970a 	mla	r7, r7, sl, r9
 8016e8e:	fb00 500a 	mla	r0, r0, sl, r5
 8016e92:	b2bf      	uxth	r7, r7
 8016e94:	b280      	uxth	r0, r0
 8016e96:	f10c 0501 	add.w	r5, ip, #1
 8016e9a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016e9e:	f107 0901 	add.w	r9, r7, #1
 8016ea2:	1c45      	adds	r5, r0, #1
 8016ea4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016ea8:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8016eac:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8016eb0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016eb4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016eb8:	ea45 0c0c 	orr.w	ip, r5, ip
 8016ebc:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8016ec0:	ea4c 0c09 	orr.w	ip, ip, r9
 8016ec4:	f824 c00b 	strh.w	ip, [r4, fp]
 8016ec8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8016eca:	4401      	add	r1, r0
 8016ecc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8016ece:	f108 38ff 	add.w	r8, r8, #4294967295
 8016ed2:	4402      	add	r2, r0
 8016ed4:	e75e      	b.n	8016d94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8016ed6:	b005      	add	sp, #20
 8016ed8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016edc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016edc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ee0:	b085      	sub	sp, #20
 8016ee2:	4693      	mov	fp, r2
 8016ee4:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8016ee6:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8016ee8:	6870      	ldr	r0, [r6, #4]
 8016eea:	9101      	str	r1, [sp, #4]
 8016eec:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8016ef0:	fb00 2404 	mla	r4, r0, r4, r2
 8016ef4:	6832      	ldr	r2, [r6, #0]
 8016ef6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8016efa:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016efe:	682a      	ldr	r2, [r5, #0]
 8016f00:	9202      	str	r2, [sp, #8]
 8016f02:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8016f06:	9a01      	ldr	r2, [sp, #4]
 8016f08:	2a00      	cmp	r2, #0
 8016f0a:	dc03      	bgt.n	8016f14 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8016f0c:	f1bb 0f00 	cmp.w	fp, #0
 8016f10:	f340 809a 	ble.w	8017048 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8016f14:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8016f16:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8016f1a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8016f1e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8016f22:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8016f24:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8016f28:	2b00      	cmp	r3, #0
 8016f2a:	dd0c      	ble.n	8016f46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8016f2c:	1406      	asrs	r6, r0, #16
 8016f2e:	d405      	bmi.n	8016f3c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016f30:	454e      	cmp	r6, r9
 8016f32:	da03      	bge.n	8016f3c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016f34:	1416      	asrs	r6, r2, #16
 8016f36:	d401      	bmi.n	8016f3c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016f38:	4546      	cmp	r6, r8
 8016f3a:	db05      	blt.n	8016f48 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016f3c:	4470      	add	r0, lr
 8016f3e:	4462      	add	r2, ip
 8016f40:	3b01      	subs	r3, #1
 8016f42:	3402      	adds	r4, #2
 8016f44:	e7f0      	b.n	8016f28 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8016f46:	d00f      	beq.n	8016f68 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016f48:	1e5e      	subs	r6, r3, #1
 8016f4a:	fb0e 0706 	mla	r7, lr, r6, r0
 8016f4e:	143f      	asrs	r7, r7, #16
 8016f50:	d541      	bpl.n	8016fd6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8016f52:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8016f56:	4698      	mov	r8, r3
 8016f58:	9603      	str	r6, [sp, #12]
 8016f5a:	f1b8 0f00 	cmp.w	r8, #0
 8016f5e:	dc56      	bgt.n	801700e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8016f60:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016f64:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016f68:	9b01      	ldr	r3, [sp, #4]
 8016f6a:	2b00      	cmp	r3, #0
 8016f6c:	dd6c      	ble.n	8017048 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8016f6e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016f72:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016f76:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016f7a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016f7c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016f80:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016f84:	eeb0 6a62 	vmov.f32	s12, s5
 8016f88:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016f8c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016f90:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016f94:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8016f98:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016f9c:	eeb0 6a43 	vmov.f32	s12, s6
 8016fa0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016fa4:	ee12 2a90 	vmov	r2, s5
 8016fa8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016fac:	fb92 fef3 	sdiv	lr, r2, r3
 8016fb0:	ee13 2a10 	vmov	r2, s6
 8016fb4:	fb92 fcf3 	sdiv	ip, r2, r3
 8016fb8:	9b01      	ldr	r3, [sp, #4]
 8016fba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016fbe:	3b01      	subs	r3, #1
 8016fc0:	9301      	str	r3, [sp, #4]
 8016fc2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8016fc6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016fc8:	eeb0 3a67 	vmov.f32	s6, s15
 8016fcc:	bf08      	it	eq
 8016fce:	465b      	moveq	r3, fp
 8016fd0:	eef0 2a47 	vmov.f32	s5, s14
 8016fd4:	e797      	b.n	8016f06 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8016fd6:	454f      	cmp	r7, r9
 8016fd8:	dabb      	bge.n	8016f52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016fda:	fb0c 2606 	mla	r6, ip, r6, r2
 8016fde:	1436      	asrs	r6, r6, #16
 8016fe0:	d4b7      	bmi.n	8016f52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016fe2:	4546      	cmp	r6, r8
 8016fe4:	dab5      	bge.n	8016f52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016fe6:	461e      	mov	r6, r3
 8016fe8:	46a0      	mov	r8, r4
 8016fea:	2e00      	cmp	r6, #0
 8016fec:	ddb8      	ble.n	8016f60 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016fee:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8016ff2:	9902      	ldr	r1, [sp, #8]
 8016ff4:	1417      	asrs	r7, r2, #16
 8016ff6:	ea4f 4920 	mov.w	r9, r0, asr #16
 8016ffa:	fb0a 9707 	mla	r7, sl, r7, r9
 8016ffe:	4470      	add	r0, lr
 8017000:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8017004:	f828 7b02 	strh.w	r7, [r8], #2
 8017008:	4462      	add	r2, ip
 801700a:	3e01      	subs	r6, #1
 801700c:	e7ed      	b.n	8016fea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801700e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8017012:	d414      	bmi.n	801703e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8017014:	68ae      	ldr	r6, [r5, #8]
 8017016:	454e      	cmp	r6, r9
 8017018:	dd11      	ble.n	801703e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801701a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801701e:	d40e      	bmi.n	801703e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8017020:	68ef      	ldr	r7, [r5, #12]
 8017022:	4557      	cmp	r7, sl
 8017024:	dd0b      	ble.n	801703e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8017026:	b236      	sxth	r6, r6
 8017028:	fb0a 9606 	mla	r6, sl, r6, r9
 801702c:	9f02      	ldr	r7, [sp, #8]
 801702e:	f06f 0101 	mvn.w	r1, #1
 8017032:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8017036:	fb01 f608 	mul.w	r6, r1, r8
 801703a:	9903      	ldr	r1, [sp, #12]
 801703c:	538f      	strh	r7, [r1, r6]
 801703e:	4470      	add	r0, lr
 8017040:	4462      	add	r2, ip
 8017042:	f108 38ff 	add.w	r8, r8, #4294967295
 8017046:	e788      	b.n	8016f5a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017048:	b005      	add	sp, #20
 801704a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801704e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801704e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017052:	b087      	sub	sp, #28
 8017054:	468b      	mov	fp, r1
 8017056:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8017058:	9203      	str	r2, [sp, #12]
 801705a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801705e:	9204      	str	r2, [sp, #16]
 8017060:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8017064:	6841      	ldr	r1, [r0, #4]
 8017066:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801706a:	fb01 2505 	mla	r5, r1, r5, r2
 801706e:	6802      	ldr	r2, [r0, #0]
 8017070:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8017074:	f8d9 2000 	ldr.w	r2, [r9]
 8017078:	9201      	str	r2, [sp, #4]
 801707a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801707e:	f1bb 0f00 	cmp.w	fp, #0
 8017082:	dc03      	bgt.n	801708c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8017084:	9a03      	ldr	r2, [sp, #12]
 8017086:	2a00      	cmp	r2, #0
 8017088:	f340 8159 	ble.w	801733e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801708c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801708e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8017092:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8017096:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801709a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801709c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80170a0:	2b00      	cmp	r3, #0
 80170a2:	dd0e      	ble.n	80170c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80170a4:	1402      	asrs	r2, r0, #16
 80170a6:	d405      	bmi.n	80170b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80170a8:	42ba      	cmp	r2, r7
 80170aa:	da03      	bge.n	80170b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80170ac:	140a      	asrs	r2, r1, #16
 80170ae:	d401      	bmi.n	80170b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80170b0:	42b2      	cmp	r2, r6
 80170b2:	db07      	blt.n	80170c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80170b4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80170b6:	4410      	add	r0, r2
 80170b8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80170ba:	3b01      	subs	r3, #1
 80170bc:	4411      	add	r1, r2
 80170be:	3502      	adds	r5, #2
 80170c0:	e7ee      	b.n	80170a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80170c2:	d017      	beq.n	80170f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80170c4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80170c6:	1e5a      	subs	r2, r3, #1
 80170c8:	fb04 0402 	mla	r4, r4, r2, r0
 80170cc:	1424      	asrs	r4, r4, #16
 80170ce:	d409      	bmi.n	80170e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80170d0:	42bc      	cmp	r4, r7
 80170d2:	da07      	bge.n	80170e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80170d4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80170d6:	fb04 1202 	mla	r2, r4, r2, r1
 80170da:	1412      	asrs	r2, r2, #16
 80170dc:	d402      	bmi.n	80170e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80170de:	42b2      	cmp	r2, r6
 80170e0:	f2c0 80bf 	blt.w	8017262 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80170e4:	2700      	movs	r7, #0
 80170e6:	19da      	adds	r2, r3, r7
 80170e8:	2a00      	cmp	r2, #0
 80170ea:	dc3e      	bgt.n	801716a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80170ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80170f0:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80170f4:	f1bb 0f00 	cmp.w	fp, #0
 80170f8:	f340 8121 	ble.w	801733e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80170fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017100:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017104:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017108:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801710a:	f1bb 0b01 	subs.w	fp, fp, #1
 801710e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017112:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017116:	eeb0 6a62 	vmov.f32	s12, s5
 801711a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801711e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017122:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017126:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801712a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801712e:	eeb0 6a43 	vmov.f32	s12, s6
 8017132:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017136:	ee12 2a90 	vmov	r2, s5
 801713a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801713e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017142:	ee13 2a10 	vmov	r2, s6
 8017146:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801714a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801714c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801714e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017152:	9a03      	ldr	r2, [sp, #12]
 8017154:	9314      	str	r3, [sp, #80]	@ 0x50
 8017156:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801715a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801715c:	eeb0 3a67 	vmov.f32	s6, s15
 8017160:	bf08      	it	eq
 8017162:	4613      	moveq	r3, r2
 8017164:	eef0 2a47 	vmov.f32	s5, s14
 8017168:	e789      	b.n	801707e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801716a:	1406      	asrs	r6, r0, #16
 801716c:	d42d      	bmi.n	80171ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801716e:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8017172:	42b4      	cmp	r4, r6
 8017174:	dd29      	ble.n	80171ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8017176:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801717a:	d426      	bmi.n	80171ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801717c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8017180:	4562      	cmp	r2, ip
 8017182:	dd22      	ble.n	80171ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8017184:	b224      	sxth	r4, r4
 8017186:	9a01      	ldr	r2, [sp, #4]
 8017188:	fb0c 6404 	mla	r4, ip, r4, r6
 801718c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8017190:	0e22      	lsrs	r2, r4, #24
 8017192:	d01a      	beq.n	80171ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8017194:	9e04      	ldr	r6, [sp, #16]
 8017196:	4372      	muls	r2, r6
 8017198:	1c56      	adds	r6, r2, #1
 801719a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801719e:	1212      	asrs	r2, r2, #8
 80171a0:	0a26      	lsrs	r6, r4, #8
 80171a2:	2aff      	cmp	r2, #255	@ 0xff
 80171a4:	9605      	str	r6, [sp, #20]
 80171a6:	d116      	bne.n	80171d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80171a8:	f06f 0201 	mvn.w	r2, #1
 80171ac:	fb02 fc07 	mul.w	ip, r2, r7
 80171b0:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80171b4:	0962      	lsrs	r2, r4, #5
 80171b6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80171ba:	f026 0607 	bic.w	r6, r6, #7
 80171be:	4316      	orrs	r6, r2
 80171c0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80171c4:	4326      	orrs	r6, r4
 80171c6:	f825 600c 	strh.w	r6, [r5, ip]
 80171ca:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80171cc:	4410      	add	r0, r2
 80171ce:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80171d0:	3f01      	subs	r7, #1
 80171d2:	4411      	add	r1, r2
 80171d4:	e787      	b.n	80170e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80171d6:	f06f 0601 	mvn.w	r6, #1
 80171da:	437e      	muls	r6, r7
 80171dc:	fa1f fa82 	uxth.w	sl, r2
 80171e0:	f835 8006 	ldrh.w	r8, [r5, r6]
 80171e4:	9602      	str	r6, [sp, #8]
 80171e6:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80171ea:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 80171ee:	43d2      	mvns	r2, r2
 80171f0:	b2d2      	uxtb	r2, r2
 80171f2:	fb1c fc0a 	smulbb	ip, ip, sl
 80171f6:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80171fa:	fb0e ce02 	mla	lr, lr, r2, ip
 80171fe:	b2e4      	uxtb	r4, r4
 8017200:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8017204:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8017208:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801720c:	fa5f f888 	uxtb.w	r8, r8
 8017210:	fb14 f40a 	smulbb	r4, r4, sl
 8017214:	fb08 4402 	mla	r4, r8, r2, r4
 8017218:	fa1f fe8e 	uxth.w	lr, lr
 801721c:	fb16 f60a 	smulbb	r6, r6, sl
 8017220:	b2a4      	uxth	r4, r4
 8017222:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8017226:	fb0c 6c02 	mla	ip, ip, r2, r6
 801722a:	f10e 0201 	add.w	r2, lr, #1
 801722e:	1c66      	adds	r6, r4, #1
 8017230:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8017234:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8017238:	fa1f fc8c 	uxth.w	ip, ip
 801723c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017240:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8017244:	ea46 0e0e 	orr.w	lr, r6, lr
 8017248:	f10c 0601 	add.w	r6, ip, #1
 801724c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8017250:	0976      	lsrs	r6, r6, #5
 8017252:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017256:	9a02      	ldr	r2, [sp, #8]
 8017258:	ea4e 0e06 	orr.w	lr, lr, r6
 801725c:	f825 e002 	strh.w	lr, [r5, r2]
 8017260:	e7b3      	b.n	80171ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8017262:	f04f 0800 	mov.w	r8, #0
 8017266:	eba3 0208 	sub.w	r2, r3, r8
 801726a:	2a00      	cmp	r2, #0
 801726c:	f77f af3e 	ble.w	80170ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017270:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8017274:	1404      	asrs	r4, r0, #16
 8017276:	140a      	asrs	r2, r1, #16
 8017278:	fb06 4202 	mla	r2, r6, r2, r4
 801727c:	9c01      	ldr	r4, [sp, #4]
 801727e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8017282:	0e22      	lsrs	r2, r4, #24
 8017284:	d016      	beq.n	80172b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8017286:	9e04      	ldr	r6, [sp, #16]
 8017288:	4372      	muls	r2, r6
 801728a:	1c56      	adds	r6, r2, #1
 801728c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8017290:	1212      	asrs	r2, r2, #8
 8017292:	2aff      	cmp	r2, #255	@ 0xff
 8017294:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8017298:	d113      	bne.n	80172c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801729a:	0962      	lsrs	r2, r4, #5
 801729c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80172a0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80172a4:	f026 0607 	bic.w	r6, r6, #7
 80172a8:	4316      	orrs	r6, r2
 80172aa:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80172ae:	4326      	orrs	r6, r4
 80172b0:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80172b4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80172b6:	4410      	add	r0, r2
 80172b8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80172ba:	f108 0801 	add.w	r8, r8, #1
 80172be:	4411      	add	r1, r2
 80172c0:	e7d1      	b.n	8017266 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80172c2:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80172c6:	fa1f fa82 	uxth.w	sl, r2
 80172ca:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80172ce:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80172d2:	43d2      	mvns	r2, r2
 80172d4:	b2d2      	uxtb	r2, r2
 80172d6:	fb17 f70a 	smulbb	r7, r7, sl
 80172da:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80172de:	fb0c 7c02 	mla	ip, ip, r2, r7
 80172e2:	b2e4      	uxtb	r4, r4
 80172e4:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80172e8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80172ec:	fa5f fe8e 	uxtb.w	lr, lr
 80172f0:	fb14 f40a 	smulbb	r4, r4, sl
 80172f4:	fb0e 4402 	mla	r4, lr, r2, r4
 80172f8:	b2f6      	uxtb	r6, r6
 80172fa:	fa1f fc8c 	uxth.w	ip, ip
 80172fe:	fb16 f60a 	smulbb	r6, r6, sl
 8017302:	b2a4      	uxth	r4, r4
 8017304:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017308:	fb07 6702 	mla	r7, r7, r2, r6
 801730c:	f10c 0201 	add.w	r2, ip, #1
 8017310:	1c66      	adds	r6, r4, #1
 8017312:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8017316:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801731a:	b2bf      	uxth	r7, r7
 801731c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017320:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8017324:	ea46 0c0c 	orr.w	ip, r6, ip
 8017328:	1c7e      	adds	r6, r7, #1
 801732a:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801732e:	0976      	lsrs	r6, r6, #5
 8017330:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017334:	ea4c 0c06 	orr.w	ip, ip, r6
 8017338:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801733c:	e7ba      	b.n	80172b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801733e:	b007      	add	sp, #28
 8017340:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017344 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017344:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017348:	b085      	sub	sp, #20
 801734a:	468b      	mov	fp, r1
 801734c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801734e:	9203      	str	r2, [sp, #12]
 8017350:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8017354:	6841      	ldr	r1, [r0, #4]
 8017356:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801735a:	fb01 2404 	mla	r4, r1, r4, r2
 801735e:	6802      	ldr	r2, [r0, #0]
 8017360:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017364:	f8d8 2000 	ldr.w	r2, [r8]
 8017368:	9201      	str	r2, [sp, #4]
 801736a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801736e:	f1bb 0f00 	cmp.w	fp, #0
 8017372:	dc03      	bgt.n	801737c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8017374:	9a03      	ldr	r2, [sp, #12]
 8017376:	2a00      	cmp	r2, #0
 8017378:	f340 814f 	ble.w	801761a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801737c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801737e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8017382:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8017386:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801738a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801738c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8017390:	2b00      	cmp	r3, #0
 8017392:	dd0e      	ble.n	80173b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017394:	1408      	asrs	r0, r1, #16
 8017396:	d405      	bmi.n	80173a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017398:	42b8      	cmp	r0, r7
 801739a:	da03      	bge.n	80173a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801739c:	1410      	asrs	r0, r2, #16
 801739e:	d401      	bmi.n	80173a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80173a0:	42b0      	cmp	r0, r6
 80173a2:	db07      	blt.n	80173b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80173a4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80173a6:	4401      	add	r1, r0
 80173a8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80173aa:	3b01      	subs	r3, #1
 80173ac:	4402      	add	r2, r0
 80173ae:	3402      	adds	r4, #2
 80173b0:	e7ee      	b.n	8017390 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80173b2:	d017      	beq.n	80173e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80173b4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80173b6:	1e58      	subs	r0, r3, #1
 80173b8:	fb05 1500 	mla	r5, r5, r0, r1
 80173bc:	142d      	asrs	r5, r5, #16
 80173be:	d409      	bmi.n	80173d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80173c0:	42bd      	cmp	r5, r7
 80173c2:	da07      	bge.n	80173d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80173c4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80173c6:	fb05 2000 	mla	r0, r5, r0, r2
 80173ca:	1400      	asrs	r0, r0, #16
 80173cc:	d402      	bmi.n	80173d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80173ce:	42b0      	cmp	r0, r6
 80173d0:	f2c0 80ba 	blt.w	8017548 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80173d4:	2600      	movs	r6, #0
 80173d6:	1998      	adds	r0, r3, r6
 80173d8:	2800      	cmp	r0, #0
 80173da:	dc3e      	bgt.n	801745a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80173dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80173e0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80173e4:	f1bb 0f00 	cmp.w	fp, #0
 80173e8:	f340 8117 	ble.w	801761a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80173ec:	ee30 0a04 	vadd.f32	s0, s0, s8
 80173f0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80173f4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80173f8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80173fa:	f1bb 0b01 	subs.w	fp, fp, #1
 80173fe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017402:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017406:	eeb0 6a62 	vmov.f32	s12, s5
 801740a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801740e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017412:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017416:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801741a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801741e:	eeb0 6a43 	vmov.f32	s12, s6
 8017422:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017426:	ee12 2a90 	vmov	r2, s5
 801742a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801742e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017432:	ee13 2a10 	vmov	r2, s6
 8017436:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801743a:	9311      	str	r3, [sp, #68]	@ 0x44
 801743c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801743e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017442:	9a03      	ldr	r2, [sp, #12]
 8017444:	9312      	str	r3, [sp, #72]	@ 0x48
 8017446:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801744a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801744c:	eeb0 3a67 	vmov.f32	s6, s15
 8017450:	bf08      	it	eq
 8017452:	4613      	moveq	r3, r2
 8017454:	eef0 2a47 	vmov.f32	s5, s14
 8017458:	e789      	b.n	801736e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801745a:	140f      	asrs	r7, r1, #16
 801745c:	d424      	bmi.n	80174a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801745e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8017462:	42bd      	cmp	r5, r7
 8017464:	dd20      	ble.n	80174a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017466:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801746a:	d41d      	bmi.n	80174a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801746c:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8017470:	4560      	cmp	r0, ip
 8017472:	dd19      	ble.n	80174a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017474:	b22d      	sxth	r5, r5
 8017476:	fb0c 7505 	mla	r5, ip, r5, r7
 801747a:	9801      	ldr	r0, [sp, #4]
 801747c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8017480:	0e07      	lsrs	r7, r0, #24
 8017482:	2fff      	cmp	r7, #255	@ 0xff
 8017484:	d116      	bne.n	80174b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8017486:	f06f 0501 	mvn.w	r5, #1
 801748a:	fb05 f706 	mul.w	r7, r5, r6
 801748e:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8017492:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8017496:	0945      	lsrs	r5, r0, #5
 8017498:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801749c:	ea4c 0505 	orr.w	r5, ip, r5
 80174a0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80174a4:	4305      	orrs	r5, r0
 80174a6:	53e5      	strh	r5, [r4, r7]
 80174a8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80174aa:	4401      	add	r1, r0
 80174ac:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80174ae:	3e01      	subs	r6, #1
 80174b0:	4402      	add	r2, r0
 80174b2:	e790      	b.n	80173d6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80174b4:	b2fd      	uxtb	r5, r7
 80174b6:	2f00      	cmp	r7, #0
 80174b8:	d0f6      	beq.n	80174a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80174ba:	f06f 0701 	mvn.w	r7, #1
 80174be:	4377      	muls	r7, r6
 80174c0:	fa1f f985 	uxth.w	r9, r5
 80174c4:	f834 e007 	ldrh.w	lr, [r4, r7]
 80174c8:	9702      	str	r7, [sp, #8]
 80174ca:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80174ce:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80174d2:	43ed      	mvns	r5, r5
 80174d4:	b2ed      	uxtb	r5, r5
 80174d6:	fb17 f709 	smulbb	r7, r7, r9
 80174da:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80174de:	fb0c 7c05 	mla	ip, ip, r5, r7
 80174e2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80174e6:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80174ea:	b2c0      	uxtb	r0, r0
 80174ec:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80174f0:	fa5f fe8e 	uxtb.w	lr, lr
 80174f4:	fb10 f009 	smulbb	r0, r0, r9
 80174f8:	fb0e 0005 	mla	r0, lr, r5, r0
 80174fc:	b280      	uxth	r0, r0
 80174fe:	fa1f fc8c 	uxth.w	ip, ip
 8017502:	fb1a fa09 	smulbb	sl, sl, r9
 8017506:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801750a:	fb07 a705 	mla	r7, r7, r5, sl
 801750e:	f100 0a01 	add.w	sl, r0, #1
 8017512:	f10c 0501 	add.w	r5, ip, #1
 8017516:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801751a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801751e:	b2bf      	uxth	r7, r7
 8017520:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017524:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8017528:	ea4a 0c0c 	orr.w	ip, sl, ip
 801752c:	f107 0a01 	add.w	sl, r7, #1
 8017530:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8017534:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017538:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801753c:	9802      	ldr	r0, [sp, #8]
 801753e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8017542:	f824 c000 	strh.w	ip, [r4, r0]
 8017546:	e7af      	b.n	80174a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017548:	f04f 0e00 	mov.w	lr, #0
 801754c:	eba3 000e 	sub.w	r0, r3, lr
 8017550:	2800      	cmp	r0, #0
 8017552:	f77f af43 	ble.w	80173dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017556:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801755a:	140d      	asrs	r5, r1, #16
 801755c:	1410      	asrs	r0, r2, #16
 801755e:	fb06 5000 	mla	r0, r6, r0, r5
 8017562:	9d01      	ldr	r5, [sp, #4]
 8017564:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8017568:	0e2e      	lsrs	r6, r5, #24
 801756a:	2eff      	cmp	r6, #255	@ 0xff
 801756c:	d112      	bne.n	8017594 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801756e:	482c      	ldr	r0, [pc, #176]	@ (8017620 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8017570:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8017574:	0968      	lsrs	r0, r5, #5
 8017576:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801757a:	4330      	orrs	r0, r6
 801757c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8017580:	4328      	orrs	r0, r5
 8017582:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8017586:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8017588:	4401      	add	r1, r0
 801758a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801758c:	f10e 0e01 	add.w	lr, lr, #1
 8017590:	4402      	add	r2, r0
 8017592:	e7db      	b.n	801754c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8017594:	b2f0      	uxtb	r0, r6
 8017596:	2e00      	cmp	r6, #0
 8017598:	d0f5      	beq.n	8017586 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801759a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801759e:	fa1f f980 	uxth.w	r9, r0
 80175a2:	ea4f 272c 	mov.w	r7, ip, asr #8
 80175a6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80175aa:	43c0      	mvns	r0, r0
 80175ac:	b2c0      	uxtb	r0, r0
 80175ae:	fb16 f609 	smulbb	r6, r6, r9
 80175b2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80175b6:	fb07 6700 	mla	r7, r7, r0, r6
 80175ba:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80175be:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80175c2:	b2ed      	uxtb	r5, r5
 80175c4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80175c8:	fa5f fc8c 	uxtb.w	ip, ip
 80175cc:	fb15 f509 	smulbb	r5, r5, r9
 80175d0:	fb0c 5500 	mla	r5, ip, r0, r5
 80175d4:	b2bf      	uxth	r7, r7
 80175d6:	fb1a fa09 	smulbb	sl, sl, r9
 80175da:	b2ad      	uxth	r5, r5
 80175dc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80175e0:	fb06 a600 	mla	r6, r6, r0, sl
 80175e4:	1c78      	adds	r0, r7, #1
 80175e6:	f105 0a01 	add.w	sl, r5, #1
 80175ea:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80175ee:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80175f2:	b2b6      	uxth	r6, r6
 80175f4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80175f8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80175fc:	ea4a 0707 	orr.w	r7, sl, r7
 8017600:	f106 0a01 	add.w	sl, r6, #1
 8017604:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8017608:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801760c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017610:	ea47 070a 	orr.w	r7, r7, sl
 8017614:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8017618:	e7b5      	b.n	8017586 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801761a:	b005      	add	sp, #20
 801761c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017620:	fffff800 	.word	0xfffff800

08017624 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017628:	b087      	sub	sp, #28
 801762a:	468b      	mov	fp, r1
 801762c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801762e:	9203      	str	r2, [sp, #12]
 8017630:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8017634:	9204      	str	r2, [sp, #16]
 8017636:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801763a:	6841      	ldr	r1, [r0, #4]
 801763c:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8017640:	fb01 2404 	mla	r4, r1, r4, r2
 8017644:	6802      	ldr	r2, [r0, #0]
 8017646:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801764a:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801764e:	3201      	adds	r2, #1
 8017650:	f022 0201 	bic.w	r2, r2, #1
 8017654:	9200      	str	r2, [sp, #0]
 8017656:	f8d9 2000 	ldr.w	r2, [r9]
 801765a:	9201      	str	r2, [sp, #4]
 801765c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8017660:	f1bb 0f00 	cmp.w	fp, #0
 8017664:	dc03      	bgt.n	801766e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8017666:	9a03      	ldr	r2, [sp, #12]
 8017668:	2a00      	cmp	r2, #0
 801766a:	f340 8169 	ble.w	8017940 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801766e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8017670:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8017674:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8017678:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801767c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801767e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8017682:	2b00      	cmp	r3, #0
 8017684:	dd0e      	ble.n	80176a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8017686:	1402      	asrs	r2, r0, #16
 8017688:	d405      	bmi.n	8017696 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801768a:	42ba      	cmp	r2, r7
 801768c:	da03      	bge.n	8017696 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801768e:	140a      	asrs	r2, r1, #16
 8017690:	d401      	bmi.n	8017696 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017692:	42b2      	cmp	r2, r6
 8017694:	db07      	blt.n	80176a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8017696:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8017698:	4410      	add	r0, r2
 801769a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801769c:	3b01      	subs	r3, #1
 801769e:	4411      	add	r1, r2
 80176a0:	3402      	adds	r4, #2
 80176a2:	e7ee      	b.n	8017682 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80176a4:	d017      	beq.n	80176d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80176a6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80176a8:	1e5a      	subs	r2, r3, #1
 80176aa:	fb05 0502 	mla	r5, r5, r2, r0
 80176ae:	142d      	asrs	r5, r5, #16
 80176b0:	d409      	bmi.n	80176c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80176b2:	42bd      	cmp	r5, r7
 80176b4:	da07      	bge.n	80176c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80176b6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80176b8:	fb05 1202 	mla	r2, r5, r2, r1
 80176bc:	1412      	asrs	r2, r2, #16
 80176be:	d402      	bmi.n	80176c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80176c0:	42b2      	cmp	r2, r6
 80176c2:	f2c0 80c7 	blt.w	8017854 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 80176c6:	2700      	movs	r7, #0
 80176c8:	19da      	adds	r2, r3, r7
 80176ca:	2a00      	cmp	r2, #0
 80176cc:	dc3e      	bgt.n	801774c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80176ce:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80176d2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80176d6:	f1bb 0f00 	cmp.w	fp, #0
 80176da:	f340 8131 	ble.w	8017940 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80176de:	ee30 0a04 	vadd.f32	s0, s0, s8
 80176e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80176e6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80176ea:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80176ec:	f1bb 0b01 	subs.w	fp, fp, #1
 80176f0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80176f4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80176f8:	eeb0 6a62 	vmov.f32	s12, s5
 80176fc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017700:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017704:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017708:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801770c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017710:	eeb0 6a43 	vmov.f32	s12, s6
 8017714:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017718:	ee12 2a90 	vmov	r2, s5
 801771c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017720:	fb92 f3f3 	sdiv	r3, r2, r3
 8017724:	ee13 2a10 	vmov	r2, s6
 8017728:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801772c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801772e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017730:	fb92 f3f3 	sdiv	r3, r2, r3
 8017734:	9a03      	ldr	r2, [sp, #12]
 8017736:	9314      	str	r3, [sp, #80]	@ 0x50
 8017738:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801773c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801773e:	eeb0 3a67 	vmov.f32	s6, s15
 8017742:	bf08      	it	eq
 8017744:	4613      	moveq	r3, r2
 8017746:	eef0 2a47 	vmov.f32	s5, s14
 801774a:	e789      	b.n	8017660 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801774c:	1405      	asrs	r5, r0, #16
 801774e:	d435      	bmi.n	80177bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017750:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8017754:	42aa      	cmp	r2, r5
 8017756:	dd31      	ble.n	80177bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017758:	140e      	asrs	r6, r1, #16
 801775a:	d42f      	bmi.n	80177bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801775c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8017760:	42b2      	cmp	r2, r6
 8017762:	dd2b      	ble.n	80177bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017764:	9a00      	ldr	r2, [sp, #0]
 8017766:	fb06 5502 	mla	r5, r6, r2, r5
 801776a:	086a      	lsrs	r2, r5, #1
 801776c:	9e01      	ldr	r6, [sp, #4]
 801776e:	5cb2      	ldrb	r2, [r6, r2]
 8017770:	07ee      	lsls	r6, r5, #31
 8017772:	bf54      	ite	pl
 8017774:	f002 020f 	andpl.w	r2, r2, #15
 8017778:	1112      	asrmi	r2, r2, #4
 801777a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801777e:	b2d2      	uxtb	r2, r2
 8017780:	b1e2      	cbz	r2, 80177bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017782:	9d04      	ldr	r5, [sp, #16]
 8017784:	436a      	muls	r2, r5
 8017786:	1c55      	adds	r5, r2, #1
 8017788:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801778c:	4d6e      	ldr	r5, [pc, #440]	@ (8017948 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801778e:	682d      	ldr	r5, [r5, #0]
 8017790:	1212      	asrs	r2, r2, #8
 8017792:	0a2e      	lsrs	r6, r5, #8
 8017794:	2aff      	cmp	r2, #255	@ 0xff
 8017796:	9605      	str	r6, [sp, #20]
 8017798:	d116      	bne.n	80177c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801779a:	f06f 0201 	mvn.w	r2, #1
 801779e:	fb02 fc07 	mul.w	ip, r2, r7
 80177a2:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80177a6:	096a      	lsrs	r2, r5, #5
 80177a8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80177ac:	f026 0607 	bic.w	r6, r6, #7
 80177b0:	4316      	orrs	r6, r2
 80177b2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80177b6:	432e      	orrs	r6, r5
 80177b8:	f824 600c 	strh.w	r6, [r4, ip]
 80177bc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80177be:	4410      	add	r0, r2
 80177c0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80177c2:	3f01      	subs	r7, #1
 80177c4:	4411      	add	r1, r2
 80177c6:	e77f      	b.n	80176c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80177c8:	f06f 0601 	mvn.w	r6, #1
 80177cc:	437e      	muls	r6, r7
 80177ce:	fa1f fa82 	uxth.w	sl, r2
 80177d2:	f834 8006 	ldrh.w	r8, [r4, r6]
 80177d6:	9602      	str	r6, [sp, #8]
 80177d8:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80177dc:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 80177e0:	43d2      	mvns	r2, r2
 80177e2:	b2d2      	uxtb	r2, r2
 80177e4:	fb1c fc0a 	smulbb	ip, ip, sl
 80177e8:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80177ec:	fb0e ce02 	mla	lr, lr, r2, ip
 80177f0:	b2ed      	uxtb	r5, r5
 80177f2:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80177f6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80177fa:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80177fe:	fa5f f888 	uxtb.w	r8, r8
 8017802:	fb15 f50a 	smulbb	r5, r5, sl
 8017806:	fb08 5502 	mla	r5, r8, r2, r5
 801780a:	fa1f fe8e 	uxth.w	lr, lr
 801780e:	fb16 f60a 	smulbb	r6, r6, sl
 8017812:	b2ad      	uxth	r5, r5
 8017814:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8017818:	fb0c 6c02 	mla	ip, ip, r2, r6
 801781c:	f10e 0201 	add.w	r2, lr, #1
 8017820:	1c6e      	adds	r6, r5, #1
 8017822:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8017826:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801782a:	fa1f fc8c 	uxth.w	ip, ip
 801782e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017832:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8017836:	ea46 0e0e 	orr.w	lr, r6, lr
 801783a:	f10c 0601 	add.w	r6, ip, #1
 801783e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8017842:	0976      	lsrs	r6, r6, #5
 8017844:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017848:	9a02      	ldr	r2, [sp, #8]
 801784a:	ea4e 0e06 	orr.w	lr, lr, r6
 801784e:	f824 e002 	strh.w	lr, [r4, r2]
 8017852:	e7b3      	b.n	80177bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017854:	f04f 0800 	mov.w	r8, #0
 8017858:	eba3 0208 	sub.w	r2, r3, r8
 801785c:	2a00      	cmp	r2, #0
 801785e:	f77f af36 	ble.w	80176ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8017862:	9e00      	ldr	r6, [sp, #0]
 8017864:	1402      	asrs	r2, r0, #16
 8017866:	140d      	asrs	r5, r1, #16
 8017868:	fb06 2505 	mla	r5, r6, r5, r2
 801786c:	086a      	lsrs	r2, r5, #1
 801786e:	9e01      	ldr	r6, [sp, #4]
 8017870:	5cb2      	ldrb	r2, [r6, r2]
 8017872:	07ed      	lsls	r5, r5, #31
 8017874:	bf54      	ite	pl
 8017876:	f002 020f 	andpl.w	r2, r2, #15
 801787a:	1112      	asrmi	r2, r2, #4
 801787c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8017880:	b2d2      	uxtb	r2, r2
 8017882:	b1c2      	cbz	r2, 80178b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8017884:	9d04      	ldr	r5, [sp, #16]
 8017886:	436a      	muls	r2, r5
 8017888:	1c55      	adds	r5, r2, #1
 801788a:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801788e:	4d2e      	ldr	r5, [pc, #184]	@ (8017948 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8017890:	1212      	asrs	r2, r2, #8
 8017892:	682e      	ldr	r6, [r5, #0]
 8017894:	2aff      	cmp	r2, #255	@ 0xff
 8017896:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801789a:	d113      	bne.n	80178c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801789c:	0972      	lsrs	r2, r6, #5
 801789e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 80178a2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80178a6:	f025 0507 	bic.w	r5, r5, #7
 80178aa:	4315      	orrs	r5, r2
 80178ac:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80178b0:	4335      	orrs	r5, r6
 80178b2:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 80178b6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80178b8:	4410      	add	r0, r2
 80178ba:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80178bc:	f108 0801 	add.w	r8, r8, #1
 80178c0:	4411      	add	r1, r2
 80178c2:	e7c9      	b.n	8017858 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80178c4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80178c8:	fa1f fa82 	uxth.w	sl, r2
 80178cc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80178d0:	f3c6 4707 	ubfx	r7, r6, #16, #8
 80178d4:	43d2      	mvns	r2, r2
 80178d6:	b2d2      	uxtb	r2, r2
 80178d8:	fb17 f70a 	smulbb	r7, r7, sl
 80178dc:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80178e0:	fb0c 7c02 	mla	ip, ip, r2, r7
 80178e4:	b2f6      	uxtb	r6, r6
 80178e6:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80178ea:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80178ee:	fa5f fe8e 	uxtb.w	lr, lr
 80178f2:	fb16 f60a 	smulbb	r6, r6, sl
 80178f6:	fb0e 6602 	mla	r6, lr, r2, r6
 80178fa:	b2ed      	uxtb	r5, r5
 80178fc:	fa1f fc8c 	uxth.w	ip, ip
 8017900:	fb15 f50a 	smulbb	r5, r5, sl
 8017904:	b2b6      	uxth	r6, r6
 8017906:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801790a:	fb07 5702 	mla	r7, r7, r2, r5
 801790e:	f10c 0201 	add.w	r2, ip, #1
 8017912:	1c75      	adds	r5, r6, #1
 8017914:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8017918:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801791c:	b2bf      	uxth	r7, r7
 801791e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017922:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8017926:	ea45 0c0c 	orr.w	ip, r5, ip
 801792a:	1c7d      	adds	r5, r7, #1
 801792c:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8017930:	096d      	lsrs	r5, r5, #5
 8017932:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017936:	ea4c 0c05 	orr.w	ip, ip, r5
 801793a:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801793e:	e7ba      	b.n	80178b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8017940:	b007      	add	sp, #28
 8017942:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017946:	bf00      	nop
 8017948:	20015248 	.word	0x20015248

0801794c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801794c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017950:	b087      	sub	sp, #28
 8017952:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 8017c60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8017956:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8017958:	9205      	str	r2, [sp, #20]
 801795a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801795e:	9101      	str	r1, [sp, #4]
 8017960:	6841      	ldr	r1, [r0, #4]
 8017962:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8017966:	fb01 2404 	mla	r4, r1, r4, r2
 801796a:	6802      	ldr	r2, [r0, #0]
 801796c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017970:	f8db 2008 	ldr.w	r2, [fp, #8]
 8017974:	3201      	adds	r2, #1
 8017976:	f022 0201 	bic.w	r2, r2, #1
 801797a:	9202      	str	r2, [sp, #8]
 801797c:	f8db 2000 	ldr.w	r2, [fp]
 8017980:	9203      	str	r2, [sp, #12]
 8017982:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8017986:	9a01      	ldr	r2, [sp, #4]
 8017988:	2a00      	cmp	r2, #0
 801798a:	dc03      	bgt.n	8017994 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801798c:	9a05      	ldr	r2, [sp, #20]
 801798e:	2a00      	cmp	r2, #0
 8017990:	f340 8162 	ble.w	8017c58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8017994:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8017996:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801799a:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801799e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80179a2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80179a4:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80179a8:	2b00      	cmp	r3, #0
 80179aa:	dd0e      	ble.n	80179ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80179ac:	1402      	asrs	r2, r0, #16
 80179ae:	d405      	bmi.n	80179bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80179b0:	42ba      	cmp	r2, r7
 80179b2:	da03      	bge.n	80179bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80179b4:	140a      	asrs	r2, r1, #16
 80179b6:	d401      	bmi.n	80179bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80179b8:	42b2      	cmp	r2, r6
 80179ba:	db07      	blt.n	80179cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80179bc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80179be:	4410      	add	r0, r2
 80179c0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80179c2:	3b01      	subs	r3, #1
 80179c4:	4411      	add	r1, r2
 80179c6:	3402      	adds	r4, #2
 80179c8:	e7ee      	b.n	80179a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80179ca:	d017      	beq.n	80179fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80179cc:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80179ce:	1e5a      	subs	r2, r3, #1
 80179d0:	fb05 0502 	mla	r5, r5, r2, r0
 80179d4:	142d      	asrs	r5, r5, #16
 80179d6:	d409      	bmi.n	80179ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80179d8:	42bd      	cmp	r5, r7
 80179da:	da07      	bge.n	80179ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80179dc:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80179de:	fb05 1202 	mla	r2, r5, r2, r1
 80179e2:	1412      	asrs	r2, r2, #16
 80179e4:	d402      	bmi.n	80179ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80179e6:	42b2      	cmp	r2, r6
 80179e8:	f2c0 80c3 	blt.w	8017b72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 80179ec:	2500      	movs	r5, #0
 80179ee:	195a      	adds	r2, r3, r5
 80179f0:	2a00      	cmp	r2, #0
 80179f2:	dc3f      	bgt.n	8017a74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80179f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80179f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80179fc:	9b01      	ldr	r3, [sp, #4]
 80179fe:	2b00      	cmp	r3, #0
 8017a00:	f340 812a 	ble.w	8017c58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8017a04:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017a08:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017a0c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017a10:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017a12:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017a16:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017a1a:	eeb0 6a62 	vmov.f32	s12, s5
 8017a1e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017a22:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017a26:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017a2a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8017a2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017a32:	eeb0 6a43 	vmov.f32	s12, s6
 8017a36:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017a3a:	ee12 2a90 	vmov	r2, s5
 8017a3e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017a42:	fb92 f3f3 	sdiv	r3, r2, r3
 8017a46:	ee13 2a10 	vmov	r2, s6
 8017a4a:	9313      	str	r3, [sp, #76]	@ 0x4c
 8017a4c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017a4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017a52:	9314      	str	r3, [sp, #80]	@ 0x50
 8017a54:	9b01      	ldr	r3, [sp, #4]
 8017a56:	9a05      	ldr	r2, [sp, #20]
 8017a58:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017a5c:	3b01      	subs	r3, #1
 8017a5e:	9301      	str	r3, [sp, #4]
 8017a60:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8017a64:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017a66:	eeb0 3a67 	vmov.f32	s6, s15
 8017a6a:	bf08      	it	eq
 8017a6c:	4613      	moveq	r3, r2
 8017a6e:	eef0 2a47 	vmov.f32	s5, s14
 8017a72:	e788      	b.n	8017986 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8017a74:	1406      	asrs	r6, r0, #16
 8017a76:	d42c      	bmi.n	8017ad2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017a78:	f8db 2008 	ldr.w	r2, [fp, #8]
 8017a7c:	42b2      	cmp	r2, r6
 8017a7e:	dd28      	ble.n	8017ad2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017a80:	140f      	asrs	r7, r1, #16
 8017a82:	d426      	bmi.n	8017ad2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017a84:	f8db 200c 	ldr.w	r2, [fp, #12]
 8017a88:	42ba      	cmp	r2, r7
 8017a8a:	dd22      	ble.n	8017ad2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017a8c:	9a02      	ldr	r2, [sp, #8]
 8017a8e:	fb07 6602 	mla	r6, r7, r2, r6
 8017a92:	0872      	lsrs	r2, r6, #1
 8017a94:	9f03      	ldr	r7, [sp, #12]
 8017a96:	5cba      	ldrb	r2, [r7, r2]
 8017a98:	07f6      	lsls	r6, r6, #31
 8017a9a:	bf54      	ite	pl
 8017a9c:	f002 020f 	andpl.w	r2, r2, #15
 8017aa0:	1112      	asrmi	r2, r2, #4
 8017aa2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8017aa6:	b2d2      	uxtb	r2, r2
 8017aa8:	2aff      	cmp	r2, #255	@ 0xff
 8017aaa:	d118      	bne.n	8017ade <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8017aac:	f8d8 2000 	ldr.w	r2, [r8]
 8017ab0:	f06f 0601 	mvn.w	r6, #1
 8017ab4:	fb06 f705 	mul.w	r7, r6, r5
 8017ab8:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8017abc:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8017ac0:	0956      	lsrs	r6, r2, #5
 8017ac2:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017ac6:	ea4c 0606 	orr.w	r6, ip, r6
 8017aca:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017ace:	4316      	orrs	r6, r2
 8017ad0:	53e6      	strh	r6, [r4, r7]
 8017ad2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8017ad4:	4410      	add	r0, r2
 8017ad6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017ad8:	3d01      	subs	r5, #1
 8017ada:	4411      	add	r1, r2
 8017adc:	e787      	b.n	80179ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8017ade:	2a00      	cmp	r2, #0
 8017ae0:	d0f7      	beq.n	8017ad2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017ae2:	f06f 0601 	mvn.w	r6, #1
 8017ae6:	436e      	muls	r6, r5
 8017ae8:	f8d8 c000 	ldr.w	ip, [r8]
 8017aec:	f834 e006 	ldrh.w	lr, [r4, r6]
 8017af0:	9604      	str	r6, [sp, #16]
 8017af2:	fa1f f982 	uxth.w	r9, r2
 8017af6:	ea4f 272e 	mov.w	r7, lr, asr #8
 8017afa:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8017afe:	43d2      	mvns	r2, r2
 8017b00:	b2d2      	uxtb	r2, r2
 8017b02:	fb16 f609 	smulbb	r6, r6, r9
 8017b06:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017b0a:	fb07 6702 	mla	r7, r7, r2, r6
 8017b0e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8017b12:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8017b16:	fa5f fc8c 	uxtb.w	ip, ip
 8017b1a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017b1e:	fa5f fe8e 	uxtb.w	lr, lr
 8017b22:	fb1c fc09 	smulbb	ip, ip, r9
 8017b26:	fb0e cc02 	mla	ip, lr, r2, ip
 8017b2a:	b2bf      	uxth	r7, r7
 8017b2c:	fb1a fa09 	smulbb	sl, sl, r9
 8017b30:	fa1f fc8c 	uxth.w	ip, ip
 8017b34:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017b38:	fb06 a602 	mla	r6, r6, r2, sl
 8017b3c:	1c7a      	adds	r2, r7, #1
 8017b3e:	f10c 0a01 	add.w	sl, ip, #1
 8017b42:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8017b46:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8017b4a:	b2b6      	uxth	r6, r6
 8017b4c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017b50:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8017b54:	ea4a 0707 	orr.w	r7, sl, r7
 8017b58:	f106 0a01 	add.w	sl, r6, #1
 8017b5c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8017b60:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017b64:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017b68:	9a04      	ldr	r2, [sp, #16]
 8017b6a:	ea47 070a 	orr.w	r7, r7, sl
 8017b6e:	52a7      	strh	r7, [r4, r2]
 8017b70:	e7af      	b.n	8017ad2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017b72:	f04f 0e00 	mov.w	lr, #0
 8017b76:	eba3 020e 	sub.w	r2, r3, lr
 8017b7a:	2a00      	cmp	r2, #0
 8017b7c:	f77f af3a 	ble.w	80179f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8017b80:	9e02      	ldr	r6, [sp, #8]
 8017b82:	1402      	asrs	r2, r0, #16
 8017b84:	140d      	asrs	r5, r1, #16
 8017b86:	fb06 2505 	mla	r5, r6, r5, r2
 8017b8a:	086a      	lsrs	r2, r5, #1
 8017b8c:	9e03      	ldr	r6, [sp, #12]
 8017b8e:	5cb2      	ldrb	r2, [r6, r2]
 8017b90:	07ed      	lsls	r5, r5, #31
 8017b92:	bf54      	ite	pl
 8017b94:	f002 020f 	andpl.w	r2, r2, #15
 8017b98:	1112      	asrmi	r2, r2, #4
 8017b9a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8017b9e:	b2d2      	uxtb	r2, r2
 8017ba0:	2aff      	cmp	r2, #255	@ 0xff
 8017ba2:	d115      	bne.n	8017bd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8017ba4:	f8d8 5000 	ldr.w	r5, [r8]
 8017ba8:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8017bac:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8017bb0:	096a      	lsrs	r2, r5, #5
 8017bb2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017bb6:	4332      	orrs	r2, r6
 8017bb8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8017bbc:	432a      	orrs	r2, r5
 8017bbe:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8017bc2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8017bc4:	4410      	add	r0, r2
 8017bc6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017bc8:	f10e 0e01 	add.w	lr, lr, #1
 8017bcc:	4411      	add	r1, r2
 8017bce:	e7d2      	b.n	8017b76 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8017bd0:	2a00      	cmp	r2, #0
 8017bd2:	d0f6      	beq.n	8017bc2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8017bd4:	f8d8 7000 	ldr.w	r7, [r8]
 8017bd8:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8017bdc:	fa1f f982 	uxth.w	r9, r2
 8017be0:	ea4f 262c 	mov.w	r6, ip, asr #8
 8017be4:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8017be8:	43d2      	mvns	r2, r2
 8017bea:	b2d2      	uxtb	r2, r2
 8017bec:	fb15 f509 	smulbb	r5, r5, r9
 8017bf0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8017bf4:	fb06 5602 	mla	r6, r6, r2, r5
 8017bf8:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8017bfc:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8017c00:	b2ff      	uxtb	r7, r7
 8017c02:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017c06:	fa5f fc8c 	uxtb.w	ip, ip
 8017c0a:	fb17 f709 	smulbb	r7, r7, r9
 8017c0e:	fb0c 7702 	mla	r7, ip, r2, r7
 8017c12:	b2b6      	uxth	r6, r6
 8017c14:	fb1a fa09 	smulbb	sl, sl, r9
 8017c18:	b2bf      	uxth	r7, r7
 8017c1a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8017c1e:	fb05 a502 	mla	r5, r5, r2, sl
 8017c22:	1c72      	adds	r2, r6, #1
 8017c24:	f107 0a01 	add.w	sl, r7, #1
 8017c28:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8017c2c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8017c30:	b2ad      	uxth	r5, r5
 8017c32:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017c36:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8017c3a:	ea4a 0606 	orr.w	r6, sl, r6
 8017c3e:	f105 0a01 	add.w	sl, r5, #1
 8017c42:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017c46:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017c4a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017c4e:	ea46 060a 	orr.w	r6, r6, sl
 8017c52:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8017c56:	e7b4      	b.n	8017bc2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8017c58:	b007      	add	sp, #28
 8017c5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c5e:	bf00      	nop
 8017c60:	20015248 	.word	0x20015248

08017c64 <_ZN8touchgfx8LCD16bppD1Ev>:
 8017c64:	4770      	bx	lr

08017c66 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 8017c66:	4770      	bx	lr

08017c68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8017c68:	4770      	bx	lr

08017c6a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8017c6a:	4770      	bx	lr

08017c6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8017c6c:	4770      	bx	lr

08017c6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8017c6e:	4770      	bx	lr

08017c70 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8017c70:	4770      	bx	lr

08017c72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8017c72:	4770      	bx	lr

08017c74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8017c74:	4770      	bx	lr

08017c76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8017c76:	4770      	bx	lr

08017c78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8017c78:	4770      	bx	lr

08017c7a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8017c7a:	4770      	bx	lr

08017c7c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8017c7c:	4770      	bx	lr

08017c7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8017c7e:	4770      	bx	lr

08017c80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8017c80:	4770      	bx	lr

08017c82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8017c82:	4770      	bx	lr

08017c84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8017c84:	4770      	bx	lr

08017c86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8017c86:	4770      	bx	lr

08017c88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8017c88:	4770      	bx	lr

08017c8a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8017c8a:	4770      	bx	lr

08017c8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8017c8c:	4770      	bx	lr

08017c8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8017c8e:	4770      	bx	lr

08017c90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8017c90:	4770      	bx	lr

08017c92 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8017c92:	4770      	bx	lr

08017c94 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8017c94:	4770      	bx	lr

08017c96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8017c96:	4770      	bx	lr

08017c98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8017c98:	4770      	bx	lr

08017c9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8017c9a:	4770      	bx	lr

08017c9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8017c9c:	4770      	bx	lr

08017c9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8017c9e:	4770      	bx	lr

08017ca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8017ca0:	4770      	bx	lr

08017ca2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8017ca2:	4770      	bx	lr

08017ca4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8017ca4:	4770      	bx	lr

08017ca6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8017ca6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017caa:	b088      	sub	sp, #32
 8017cac:	ac08      	add	r4, sp, #32
 8017cae:	4606      	mov	r6, r0
 8017cb0:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8017cb4:	4620      	mov	r0, r4
 8017cb6:	4688      	mov	r8, r1
 8017cb8:	4691      	mov	r9, r2
 8017cba:	f7fd fc31 	bl	8015520 <_ZNK8touchgfx6Bitmap7getDataEv>
 8017cbe:	6833      	ldr	r3, [r6, #0]
 8017cc0:	4605      	mov	r5, r0
 8017cc2:	4620      	mov	r0, r4
 8017cc4:	699f      	ldr	r7, [r3, #24]
 8017cc6:	f7fd fb39 	bl	801533c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8017cca:	4682      	mov	sl, r0
 8017ccc:	4620      	mov	r0, r4
 8017cce:	f7fd fb69 	bl	80153a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8017cd2:	9500      	str	r5, [sp, #0]
 8017cd4:	e9cd a001 	strd	sl, r0, [sp, #4]
 8017cd8:	464b      	mov	r3, r9
 8017cda:	a806      	add	r0, sp, #24
 8017cdc:	4642      	mov	r2, r8
 8017cde:	4631      	mov	r1, r6
 8017ce0:	47b8      	blx	r7
 8017ce2:	4628      	mov	r0, r5
 8017ce4:	b008      	add	sp, #32
 8017ce6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08017cec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8017cec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8017cf0:	2300      	movs	r3, #0
 8017cf2:	9300      	str	r3, [sp, #0]
 8017cf4:	4b3d      	ldr	r3, [pc, #244]	@ (8017dec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8017cf6:	781b      	ldrb	r3, [r3, #0]
 8017cf8:	2b00      	cmp	r3, #0
 8017cfa:	d137      	bne.n	8017d6c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8017cfc:	4a3c      	ldr	r2, [pc, #240]	@ (8017df0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8017cfe:	f9b2 2000 	ldrsh.w	r2, [r2]
 8017d02:	f8ad 2004 	strh.w	r2, [sp, #4]
 8017d06:	2b00      	cmp	r3, #0
 8017d08:	d132      	bne.n	8017d70 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8017d0a:	4b3a      	ldr	r3, [pc, #232]	@ (8017df4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8017d0c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017d10:	6808      	ldr	r0, [r1, #0]
 8017d12:	6849      	ldr	r1, [r1, #4]
 8017d14:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017d18:	ac02      	add	r4, sp, #8
 8017d1a:	ab02      	add	r3, sp, #8
 8017d1c:	c303      	stmia	r3!, {r0, r1}
 8017d1e:	4669      	mov	r1, sp
 8017d20:	4620      	mov	r0, r4
 8017d22:	f7f9 fc49 	bl	80115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017d26:	4668      	mov	r0, sp
 8017d28:	f7f9 fc1e 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017d2c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017d30:	f8bd 2000 	ldrh.w	r2, [sp]
 8017d34:	4d30      	ldr	r5, [pc, #192]	@ (8017df8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8017d36:	4413      	add	r3, r2
 8017d38:	f8ad 3008 	strh.w	r3, [sp, #8]
 8017d3c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017d40:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017d44:	6828      	ldr	r0, [r5, #0]
 8017d46:	4413      	add	r3, r2
 8017d48:	f8ad 300a 	strh.w	r3, [sp, #10]
 8017d4c:	6803      	ldr	r3, [r0, #0]
 8017d4e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017d50:	4798      	blx	r3
 8017d52:	f010 0f01 	tst.w	r0, #1
 8017d56:	462f      	mov	r7, r5
 8017d58:	d00c      	beq.n	8017d74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8017d5a:	6828      	ldr	r0, [r5, #0]
 8017d5c:	6803      	ldr	r3, [r0, #0]
 8017d5e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8017d62:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8017d64:	4798      	blx	r3
 8017d66:	b004      	add	sp, #16
 8017d68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017d6c:	4a21      	ldr	r2, [pc, #132]	@ (8017df4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8017d6e:	e7c6      	b.n	8017cfe <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8017d70:	4b1f      	ldr	r3, [pc, #124]	@ (8017df0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8017d72:	e7cb      	b.n	8017d0c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8017d74:	6838      	ldr	r0, [r7, #0]
 8017d76:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8017d7a:	6803      	ldr	r3, [r0, #0]
 8017d7c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8017d80:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8017d82:	4798      	blx	r3
 8017d84:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8017d88:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017d8c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8017d90:	fb16 3602 	smlabb	r6, r6, r2, r3
 8017d94:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017d98:	6838      	ldr	r0, [r7, #0]
 8017d9a:	6803      	ldr	r3, [r0, #0]
 8017d9c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017d9e:	4798      	blx	r3
 8017da0:	4a13      	ldr	r2, [pc, #76]	@ (8017df0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8017da2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8017da6:	8813      	ldrh	r3, [r2, #0]
 8017da8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8017dac:	fb03 1404 	mla	r4, r3, r4, r1
 8017db0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017db4:	435d      	muls	r5, r3
 8017db6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8017dba:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8017dbe:	4691      	mov	r9, r2
 8017dc0:	6838      	ldr	r0, [r7, #0]
 8017dc2:	42ac      	cmp	r4, r5
 8017dc4:	6803      	ldr	r3, [r0, #0]
 8017dc6:	d20e      	bcs.n	8017de6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8017dc8:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
 8017dcc:	4632      	mov	r2, r6
 8017dce:	4643      	mov	r3, r8
 8017dd0:	4621      	mov	r1, r4
 8017dd2:	47d0      	blx	sl
 8017dd4:	f8b9 3000 	ldrh.w	r3, [r9]
 8017dd8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017ddc:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8017de0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8017de4:	e7ec      	b.n	8017dc0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8017de6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017de8:	4798      	blx	r3
 8017dea:	e7bc      	b.n	8017d66 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8017dec:	20015230 	.word	0x20015230
 8017df0:	20015232 	.word	0x20015232
 8017df4:	20015234 	.word	0x20015234
 8017df8:	20015238 	.word	0x20015238

08017dfc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8017dfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e00:	b08b      	sub	sp, #44	@ 0x2c
 8017e02:	460f      	mov	r7, r1
 8017e04:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8017e08:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8017e0c:	4616      	mov	r6, r2
 8017e0e:	f1bb 0f00 	cmp.w	fp, #0
 8017e12:	d04a      	beq.n	8017eaa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8017e14:	6810      	ldr	r0, [r2, #0]
 8017e16:	6851      	ldr	r1, [r2, #4]
 8017e18:	ad06      	add	r5, sp, #24
 8017e1a:	c503      	stmia	r5!, {r0, r1}
 8017e1c:	6818      	ldr	r0, [r3, #0]
 8017e1e:	6859      	ldr	r1, [r3, #4]
 8017e20:	ad08      	add	r5, sp, #32
 8017e22:	c503      	stmia	r5!, {r0, r1}
 8017e24:	a806      	add	r0, sp, #24
 8017e26:	f7f9 fb9f 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017e2a:	4631      	mov	r1, r6
 8017e2c:	a808      	add	r0, sp, #32
 8017e2e:	f7f9 fbc3 	bl	80115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017e32:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8017e36:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8017e3a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8017e3e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 8017e42:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8017e46:	fb16 2103 	smlabb	r1, r6, r3, r2
 8017e4a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8017e4e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8017e52:	4f5f      	ldr	r7, [pc, #380]	@ (8017fd0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8017e54:	440a      	add	r2, r1
 8017e56:	f8ad 2020 	strh.w	r2, [sp, #32]
 8017e5a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8017e5e:	6838      	ldr	r0, [r7, #0]
 8017e60:	4413      	add	r3, r2
 8017e62:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8017e66:	6803      	ldr	r3, [r0, #0]
 8017e68:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017e6a:	4798      	blx	r3
 8017e6c:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8017e70:	46b9      	mov	r9, r7
 8017e72:	d11d      	bne.n	8017eb0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8017e74:	b9fc      	cbnz	r4, 8017eb6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8017e76:	f010 0f01 	tst.w	r0, #1
 8017e7a:	d01c      	beq.n	8017eb6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8017e7c:	f8d9 0000 	ldr.w	r0, [r9]
 8017e80:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8017e84:	6801      	ldr	r1, [r0, #0]
 8017e86:	f8cd b00c 	str.w	fp, [sp, #12]
 8017e8a:	2700      	movs	r7, #0
 8017e8c:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8017e90:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8017e94:	9402      	str	r4, [sp, #8]
 8017e96:	b2ad      	uxth	r5, r5
 8017e98:	fa1f f488 	uxth.w	r4, r8
 8017e9c:	9501      	str	r5, [sp, #4]
 8017e9e:	9400      	str	r4, [sp, #0]
 8017ea0:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
 8017ea2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8017ea6:	4631      	mov	r1, r6
 8017ea8:	47a0      	blx	r4
 8017eaa:	b00b      	add	sp, #44	@ 0x2c
 8017eac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017eb0:	f010 0f04 	tst.w	r0, #4
 8017eb4:	e7e1      	b.n	8017e7a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8017eb6:	f8d9 0000 	ldr.w	r0, [r9]
 8017eba:	6803      	ldr	r3, [r0, #0]
 8017ebc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017ebe:	4798      	blx	r3
 8017ec0:	4b44      	ldr	r3, [pc, #272]	@ (8017fd4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8017ec2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 8017ec6:	881a      	ldrh	r2, [r3, #0]
 8017ec8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8017ecc:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8017ed0:	fb02 1404 	mla	r4, r2, r4, r1
 8017ed4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017ed8:	469a      	mov	sl, r3
 8017eda:	fb05 f502 	mul.w	r5, r5, r2
 8017ede:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8017ee2:	d059      	beq.n	8017f98 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8017ee4:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 8017ee8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8017eec:	fa1f f28b 	uxth.w	r2, fp
 8017ef0:	fa1f f989 	uxth.w	r9, r9
 8017ef4:	469e      	mov	lr, r3
 8017ef6:	42ac      	cmp	r4, r5
 8017ef8:	d264      	bcs.n	8017fc4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8017efa:	eb04 0a07 	add.w	sl, r4, r7
 8017efe:	4554      	cmp	r4, sl
 8017f00:	d23d      	bcs.n	8017f7e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8017f02:	8821      	ldrh	r1, [r4, #0]
 8017f04:	f836 3b02 	ldrh.w	r3, [r6], #2
 8017f08:	1208      	asrs	r0, r1, #8
 8017f0a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017f0e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8017f12:	fb10 f009 	smulbb	r0, r0, r9
 8017f16:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8017f1a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8017f1e:	00c9      	lsls	r1, r1, #3
 8017f20:	fb0c 0c02 	mla	ip, ip, r2, r0
 8017f24:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8017f28:	10d8      	asrs	r0, r3, #3
 8017f2a:	b2c9      	uxtb	r1, r1
 8017f2c:	00db      	lsls	r3, r3, #3
 8017f2e:	fa1f fc8c 	uxth.w	ip, ip
 8017f32:	fb1b fb09 	smulbb	fp, fp, r9
 8017f36:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8017f3a:	b2db      	uxtb	r3, r3
 8017f3c:	fb11 f109 	smulbb	r1, r1, r9
 8017f40:	fb00 b002 	mla	r0, r0, r2, fp
 8017f44:	fb03 1302 	mla	r3, r3, r2, r1
 8017f48:	f10c 0b01 	add.w	fp, ip, #1
 8017f4c:	b29b      	uxth	r3, r3
 8017f4e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8017f52:	b280      	uxth	r0, r0
 8017f54:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8017f58:	f103 0c01 	add.w	ip, r3, #1
 8017f5c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017f60:	1c43      	adds	r3, r0, #1
 8017f62:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017f66:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017f6a:	0940      	lsrs	r0, r0, #5
 8017f6c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8017f70:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8017f74:	ea4c 0c00 	orr.w	ip, ip, r0
 8017f78:	f824 cb02 	strh.w	ip, [r4], #2
 8017f7c:	e7bf      	b.n	8017efe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8017f7e:	f8be 3000 	ldrh.w	r3, [lr]
 8017f82:	eba3 0308 	sub.w	r3, r3, r8
 8017f86:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017f8a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8017f8e:	eba3 0308 	sub.w	r3, r3, r8
 8017f92:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8017f96:	e7ae      	b.n	8017ef6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8017f98:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8017f9c:	f8d9 0000 	ldr.w	r0, [r9]
 8017fa0:	42ac      	cmp	r4, r5
 8017fa2:	6803      	ldr	r3, [r0, #0]
 8017fa4:	d20e      	bcs.n	8017fc4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8017fa6:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
 8017faa:	4632      	mov	r2, r6
 8017fac:	463b      	mov	r3, r7
 8017fae:	4621      	mov	r1, r4
 8017fb0:	47c0      	blx	r8
 8017fb2:	f8ba 3000 	ldrh.w	r3, [sl]
 8017fb6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017fba:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8017fbe:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8017fc2:	e7eb      	b.n	8017f9c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8017fc4:	4b02      	ldr	r3, [pc, #8]	@ (8017fd0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8017fc6:	6818      	ldr	r0, [r3, #0]
 8017fc8:	6803      	ldr	r3, [r0, #0]
 8017fca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017fcc:	4798      	blx	r3
 8017fce:	e76c      	b.n	8017eaa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8017fd0:	20015238 	.word	0x20015238
 8017fd4:	20015232 	.word	0x20015232

08017fd8 <_ZN8touchgfx8LCD16bppD0Ev>:
 8017fd8:	b510      	push	{r4, lr}
 8017fda:	218c      	movs	r1, #140	@ 0x8c
 8017fdc:	4604      	mov	r4, r0
 8017fde:	f00c fa2c 	bl	802443a <_ZdlPvj>
 8017fe2:	4620      	mov	r0, r4
 8017fe4:	bd10      	pop	{r4, pc}

08017fe6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8017fe6:	b510      	push	{r4, lr}
 8017fe8:	2104      	movs	r1, #4
 8017fea:	4604      	mov	r4, r0
 8017fec:	f00c fa25 	bl	802443a <_ZdlPvj>
 8017ff0:	4620      	mov	r0, r4
 8017ff2:	bd10      	pop	{r4, pc}

08017ff4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8017ff4:	b510      	push	{r4, lr}
 8017ff6:	2104      	movs	r1, #4
 8017ff8:	4604      	mov	r4, r0
 8017ffa:	f00c fa1e 	bl	802443a <_ZdlPvj>
 8017ffe:	4620      	mov	r0, r4
 8018000:	bd10      	pop	{r4, pc}

08018002 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8018002:	b510      	push	{r4, lr}
 8018004:	f640 0144 	movw	r1, #2116	@ 0x844
 8018008:	4604      	mov	r4, r0
 801800a:	f00c fa16 	bl	802443a <_ZdlPvj>
 801800e:	4620      	mov	r0, r4
 8018010:	bd10      	pop	{r4, pc}

08018012 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 8018012:	b510      	push	{r4, lr}
 8018014:	f44f 7182 	mov.w	r1, #260	@ 0x104
 8018018:	4604      	mov	r4, r0
 801801a:	f00c fa0e 	bl	802443a <_ZdlPvj>
 801801e:	4620      	mov	r0, r4
 8018020:	bd10      	pop	{r4, pc}

08018022 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8018022:	b510      	push	{r4, lr}
 8018024:	2104      	movs	r1, #4
 8018026:	4604      	mov	r4, r0
 8018028:	f00c fa07 	bl	802443a <_ZdlPvj>
 801802c:	4620      	mov	r0, r4
 801802e:	bd10      	pop	{r4, pc}

08018030 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8018030:	b510      	push	{r4, lr}
 8018032:	2104      	movs	r1, #4
 8018034:	4604      	mov	r4, r0
 8018036:	f00c fa00 	bl	802443a <_ZdlPvj>
 801803a:	4620      	mov	r0, r4
 801803c:	bd10      	pop	{r4, pc}

0801803e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801803e:	b510      	push	{r4, lr}
 8018040:	2104      	movs	r1, #4
 8018042:	4604      	mov	r4, r0
 8018044:	f00c f9f9 	bl	802443a <_ZdlPvj>
 8018048:	4620      	mov	r0, r4
 801804a:	bd10      	pop	{r4, pc}

0801804c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801804c:	b510      	push	{r4, lr}
 801804e:	2104      	movs	r1, #4
 8018050:	4604      	mov	r4, r0
 8018052:	f00c f9f2 	bl	802443a <_ZdlPvj>
 8018056:	4620      	mov	r0, r4
 8018058:	bd10      	pop	{r4, pc}

0801805a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801805a:	b510      	push	{r4, lr}
 801805c:	2104      	movs	r1, #4
 801805e:	4604      	mov	r4, r0
 8018060:	f00c f9eb 	bl	802443a <_ZdlPvj>
 8018064:	4620      	mov	r0, r4
 8018066:	bd10      	pop	{r4, pc}

08018068 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8018068:	b510      	push	{r4, lr}
 801806a:	2104      	movs	r1, #4
 801806c:	4604      	mov	r4, r0
 801806e:	f00c f9e4 	bl	802443a <_ZdlPvj>
 8018072:	4620      	mov	r0, r4
 8018074:	bd10      	pop	{r4, pc}

08018076 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8018076:	b510      	push	{r4, lr}
 8018078:	2104      	movs	r1, #4
 801807a:	4604      	mov	r4, r0
 801807c:	f00c f9dd 	bl	802443a <_ZdlPvj>
 8018080:	4620      	mov	r0, r4
 8018082:	bd10      	pop	{r4, pc}

08018084 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8018084:	b510      	push	{r4, lr}
 8018086:	2104      	movs	r1, #4
 8018088:	4604      	mov	r4, r0
 801808a:	f00c f9d6 	bl	802443a <_ZdlPvj>
 801808e:	4620      	mov	r0, r4
 8018090:	bd10      	pop	{r4, pc}

08018092 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8018092:	b510      	push	{r4, lr}
 8018094:	2104      	movs	r1, #4
 8018096:	4604      	mov	r4, r0
 8018098:	f00c f9cf 	bl	802443a <_ZdlPvj>
 801809c:	4620      	mov	r0, r4
 801809e:	bd10      	pop	{r4, pc}

080180a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80180a0:	b510      	push	{r4, lr}
 80180a2:	2104      	movs	r1, #4
 80180a4:	4604      	mov	r4, r0
 80180a6:	f00c f9c8 	bl	802443a <_ZdlPvj>
 80180aa:	4620      	mov	r0, r4
 80180ac:	bd10      	pop	{r4, pc}

080180ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80180ae:	b510      	push	{r4, lr}
 80180b0:	2104      	movs	r1, #4
 80180b2:	4604      	mov	r4, r0
 80180b4:	f00c f9c1 	bl	802443a <_ZdlPvj>
 80180b8:	4620      	mov	r0, r4
 80180ba:	bd10      	pop	{r4, pc}

080180bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80180bc:	b510      	push	{r4, lr}
 80180be:	2104      	movs	r1, #4
 80180c0:	4604      	mov	r4, r0
 80180c2:	f00c f9ba 	bl	802443a <_ZdlPvj>
 80180c6:	4620      	mov	r0, r4
 80180c8:	bd10      	pop	{r4, pc}

080180ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80180ca:	b510      	push	{r4, lr}
 80180cc:	2104      	movs	r1, #4
 80180ce:	4604      	mov	r4, r0
 80180d0:	f00c f9b3 	bl	802443a <_ZdlPvj>
 80180d4:	4620      	mov	r0, r4
 80180d6:	bd10      	pop	{r4, pc}

080180d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80180d8:	b510      	push	{r4, lr}
 80180da:	2104      	movs	r1, #4
 80180dc:	4604      	mov	r4, r0
 80180de:	f00c f9ac 	bl	802443a <_ZdlPvj>
 80180e2:	4620      	mov	r0, r4
 80180e4:	bd10      	pop	{r4, pc}

080180e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80180e6:	b510      	push	{r4, lr}
 80180e8:	2104      	movs	r1, #4
 80180ea:	4604      	mov	r4, r0
 80180ec:	f00c f9a5 	bl	802443a <_ZdlPvj>
 80180f0:	4620      	mov	r0, r4
 80180f2:	bd10      	pop	{r4, pc}

080180f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80180f4:	b510      	push	{r4, lr}
 80180f6:	2104      	movs	r1, #4
 80180f8:	4604      	mov	r4, r0
 80180fa:	f00c f99e 	bl	802443a <_ZdlPvj>
 80180fe:	4620      	mov	r0, r4
 8018100:	bd10      	pop	{r4, pc}

08018102 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8018102:	b510      	push	{r4, lr}
 8018104:	2104      	movs	r1, #4
 8018106:	4604      	mov	r4, r0
 8018108:	f00c f997 	bl	802443a <_ZdlPvj>
 801810c:	4620      	mov	r0, r4
 801810e:	bd10      	pop	{r4, pc}

08018110 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8018110:	b510      	push	{r4, lr}
 8018112:	2104      	movs	r1, #4
 8018114:	4604      	mov	r4, r0
 8018116:	f00c f990 	bl	802443a <_ZdlPvj>
 801811a:	4620      	mov	r0, r4
 801811c:	bd10      	pop	{r4, pc}

0801811e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801811e:	b510      	push	{r4, lr}
 8018120:	2104      	movs	r1, #4
 8018122:	4604      	mov	r4, r0
 8018124:	f00c f989 	bl	802443a <_ZdlPvj>
 8018128:	4620      	mov	r0, r4
 801812a:	bd10      	pop	{r4, pc}

0801812c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801812c:	b510      	push	{r4, lr}
 801812e:	2104      	movs	r1, #4
 8018130:	4604      	mov	r4, r0
 8018132:	f00c f982 	bl	802443a <_ZdlPvj>
 8018136:	4620      	mov	r0, r4
 8018138:	bd10      	pop	{r4, pc}

0801813a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801813a:	b510      	push	{r4, lr}
 801813c:	2104      	movs	r1, #4
 801813e:	4604      	mov	r4, r0
 8018140:	f00c f97b 	bl	802443a <_ZdlPvj>
 8018144:	4620      	mov	r0, r4
 8018146:	bd10      	pop	{r4, pc}

08018148 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8018148:	b510      	push	{r4, lr}
 801814a:	2104      	movs	r1, #4
 801814c:	4604      	mov	r4, r0
 801814e:	f00c f974 	bl	802443a <_ZdlPvj>
 8018152:	4620      	mov	r0, r4
 8018154:	bd10      	pop	{r4, pc}

08018156 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8018156:	b510      	push	{r4, lr}
 8018158:	2104      	movs	r1, #4
 801815a:	4604      	mov	r4, r0
 801815c:	f00c f96d 	bl	802443a <_ZdlPvj>
 8018160:	4620      	mov	r0, r4
 8018162:	bd10      	pop	{r4, pc}

08018164 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8018164:	b510      	push	{r4, lr}
 8018166:	2104      	movs	r1, #4
 8018168:	4604      	mov	r4, r0
 801816a:	f00c f966 	bl	802443a <_ZdlPvj>
 801816e:	4620      	mov	r0, r4
 8018170:	bd10      	pop	{r4, pc}

08018172 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8018172:	b510      	push	{r4, lr}
 8018174:	2104      	movs	r1, #4
 8018176:	4604      	mov	r4, r0
 8018178:	f00c f95f 	bl	802443a <_ZdlPvj>
 801817c:	4620      	mov	r0, r4
 801817e:	bd10      	pop	{r4, pc}

08018180 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8018180:	b510      	push	{r4, lr}
 8018182:	2104      	movs	r1, #4
 8018184:	4604      	mov	r4, r0
 8018186:	f00c f958 	bl	802443a <_ZdlPvj>
 801818a:	4620      	mov	r0, r4
 801818c:	bd10      	pop	{r4, pc}

0801818e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801818e:	b510      	push	{r4, lr}
 8018190:	2104      	movs	r1, #4
 8018192:	4604      	mov	r4, r0
 8018194:	f00c f951 	bl	802443a <_ZdlPvj>
 8018198:	4620      	mov	r0, r4
 801819a:	bd10      	pop	{r4, pc}

0801819c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801819c:	b510      	push	{r4, lr}
 801819e:	2104      	movs	r1, #4
 80181a0:	4604      	mov	r4, r0
 80181a2:	f00c f94a 	bl	802443a <_ZdlPvj>
 80181a6:	4620      	mov	r0, r4
 80181a8:	bd10      	pop	{r4, pc}
	...

080181ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 80181ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80181b0:	b08f      	sub	sp, #60	@ 0x3c
 80181b2:	4616      	mov	r6, r2
 80181b4:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 80181b8:	9205      	str	r2, [sp, #20]
 80181ba:	4682      	mov	sl, r0
 80181bc:	460d      	mov	r5, r1
 80181be:	2a00      	cmp	r2, #0
 80181c0:	f000 82b7 	beq.w	8018732 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 80181c4:	6830      	ldr	r0, [r6, #0]
 80181c6:	6871      	ldr	r1, [r6, #4]
 80181c8:	ac0a      	add	r4, sp, #40	@ 0x28
 80181ca:	c403      	stmia	r4!, {r0, r1}
 80181cc:	6818      	ldr	r0, [r3, #0]
 80181ce:	6859      	ldr	r1, [r3, #4]
 80181d0:	ac0c      	add	r4, sp, #48	@ 0x30
 80181d2:	c403      	stmia	r4!, {r0, r1}
 80181d4:	a80a      	add	r0, sp, #40	@ 0x28
 80181d6:	f7f9 f9c7 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80181da:	4631      	mov	r1, r6
 80181dc:	a80c      	add	r0, sp, #48	@ 0x30
 80181de:	f7f9 f9eb 	bl	80115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80181e2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80181e6:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80181ea:	bfd7      	itett	le
 80181ec:	b293      	uxthle	r3, r2
 80181ee:	2301      	movgt	r3, #1
 80181f0:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80181f4:	fb91 f3f3 	sdivle	r3, r1, r3
 80181f8:	9300      	str	r3, [sp, #0]
 80181fa:	f105 0308 	add.w	r3, r5, #8
 80181fe:	9900      	ldr	r1, [sp, #0]
 8018200:	9306      	str	r3, [sp, #24]
 8018202:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8018206:	440b      	add	r3, r1
 8018208:	3b01      	subs	r3, #1
 801820a:	fb93 f3f1 	sdiv	r3, r3, r1
 801820e:	9906      	ldr	r1, [sp, #24]
 8018210:	3b01      	subs	r3, #1
 8018212:	b29b      	uxth	r3, r3
 8018214:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8018218:	9307      	str	r3, [sp, #28]
 801821a:	9900      	ldr	r1, [sp, #0]
 801821c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8018220:	fb93 f0f1 	sdiv	r0, r3, r1
 8018224:	b284      	uxth	r4, r0
 8018226:	9402      	str	r4, [sp, #8]
 8018228:	9d02      	ldr	r5, [sp, #8]
 801822a:	9c00      	ldr	r4, [sp, #0]
 801822c:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8018230:	fb05 3414 	mls	r4, r5, r4, r3
 8018234:	fb14 f402 	smulbb	r4, r4, r2
 8018238:	440c      	add	r4, r1
 801823a:	b2a4      	uxth	r4, r4
 801823c:	2d00      	cmp	r5, #0
 801823e:	d06c      	beq.n	801831a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 8018240:	1e6a      	subs	r2, r5, #1
 8018242:	9806      	ldr	r0, [sp, #24]
 8018244:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 8018248:	9a07      	ldr	r2, [sp, #28]
 801824a:	ba36      	rev	r6, r6
 801824c:	4416      	add	r6, r2
 801824e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8018252:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8018256:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 801858c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 801825a:	4411      	add	r1, r2
 801825c:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8018260:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 8018264:	4413      	add	r3, r2
 8018266:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801826a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801826e:	9301      	str	r3, [sp, #4]
 8018270:	4bc4      	ldr	r3, [pc, #784]	@ (8018584 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 8018272:	6818      	ldr	r0, [r3, #0]
 8018274:	6803      	ldr	r3, [r0, #0]
 8018276:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018278:	4798      	blx	r3
 801827a:	4bc3      	ldr	r3, [pc, #780]	@ (8018588 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 801827c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8018280:	881b      	ldrh	r3, [r3, #0]
 8018282:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 8018286:	fb03 2808 	mla	r8, r3, r8, r2
 801828a:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 801828e:	436b      	muls	r3, r5
 8018290:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 8018294:	9309      	str	r3, [sp, #36]	@ 0x24
 8018296:	2500      	movs	r5, #0
 8018298:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801829c:	fb94 f3f3 	sdiv	r3, r4, r3
 80182a0:	9304      	str	r3, [sp, #16]
 80182a2:	f10a 0304 	add.w	r3, sl, #4
 80182a6:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80182aa:	4629      	mov	r1, r5
 80182ac:	4618      	mov	r0, r3
 80182ae:	9308      	str	r3, [sp, #32]
 80182b0:	f00d fa07 	bl	80256c2 <memset>
 80182b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80182b6:	4543      	cmp	r3, r8
 80182b8:	f240 8236 	bls.w	8018728 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 80182bc:	2203      	movs	r2, #3
 80182be:	2107      	movs	r1, #7
 80182c0:	200b      	movs	r0, #11
 80182c2:	2c00      	cmp	r4, #0
 80182c4:	f000 8131 	beq.w	801852a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 80182c8:	7833      	ldrb	r3, [r6, #0]
 80182ca:	b2db      	uxtb	r3, r3
 80182cc:	2bfe      	cmp	r3, #254	@ 0xfe
 80182ce:	d126      	bne.n	801831e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 80182d0:	f896 e001 	ldrb.w	lr, [r6, #1]
 80182d4:	f896 c002 	ldrb.w	ip, [r6, #2]
 80182d8:	f896 b003 	ldrb.w	fp, [r6, #3]
 80182dc:	fa5f fe8e 	uxtb.w	lr, lr
 80182e0:	fa5f fc8c 	uxtb.w	ip, ip
 80182e4:	f36e 0507 	bfi	r5, lr, #0, #8
 80182e8:	f36c 250f 	bfi	r5, ip, #8, #8
 80182ec:	fa5f fb8b 	uxtb.w	fp, fp
 80182f0:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 80182f4:	f36b 4517 	bfi	r5, fp, #16, #8
 80182f8:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 80182fc:	0e2b      	lsrs	r3, r5, #24
 80182fe:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 8018302:	fb10 c303 	smlabb	r3, r0, r3, ip
 8018306:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801830a:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801830e:	3c01      	subs	r4, #1
 8018310:	1d37      	adds	r7, r6, #4
 8018312:	b2a4      	uxth	r4, r4
 8018314:	605d      	str	r5, [r3, #4]
 8018316:	463e      	mov	r6, r7
 8018318:	e7d3      	b.n	80182c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 801831a:	9e07      	ldr	r6, [sp, #28]
 801831c:	e797      	b.n	801824e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 801831e:	2bff      	cmp	r3, #255	@ 0xff
 8018320:	d127      	bne.n	8018372 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 8018322:	f896 c001 	ldrb.w	ip, [r6, #1]
 8018326:	78b3      	ldrb	r3, [r6, #2]
 8018328:	f896 e003 	ldrb.w	lr, [r6, #3]
 801832c:	f896 b004 	ldrb.w	fp, [r6, #4]
 8018330:	fa5f fc8c 	uxtb.w	ip, ip
 8018334:	b2db      	uxtb	r3, r3
 8018336:	f36c 0507 	bfi	r5, ip, #0, #8
 801833a:	f363 250f 	bfi	r5, r3, #8, #8
 801833e:	fa5f fe8e 	uxtb.w	lr, lr
 8018342:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8018346:	fb12 330e 	smlabb	r3, r2, lr, r3
 801834a:	fa5f fb8b 	uxtb.w	fp, fp
 801834e:	f36e 4517 	bfi	r5, lr, #16, #8
 8018352:	fb11 330c 	smlabb	r3, r1, ip, r3
 8018356:	f36b 651f 	bfi	r5, fp, #24, #8
 801835a:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 801835e:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 8018362:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 8018366:	3c01      	subs	r4, #1
 8018368:	1d77      	adds	r7, r6, #5
 801836a:	b2a4      	uxth	r4, r4
 801836c:	f8cb 5004 	str.w	r5, [fp, #4]
 8018370:	e7d1      	b.n	8018316 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8018372:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 8018376:	f106 0701 	add.w	r7, r6, #1
 801837a:	d107      	bne.n	801838c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 801837c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8018380:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8018384:	685d      	ldr	r5, [r3, #4]
 8018386:	3c01      	subs	r4, #1
 8018388:	b2a4      	uxth	r4, r4
 801838a:	e7c4      	b.n	8018316 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801838c:	f1bc 0f01 	cmp.w	ip, #1
 8018390:	d12c      	bne.n	80183ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 8018392:	f003 0e03 	and.w	lr, r3, #3
 8018396:	f1ae 0e02 	sub.w	lr, lr, #2
 801839a:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 801839e:	fa5f fe8e 	uxtb.w	lr, lr
 80183a2:	f003 0c0c 	and.w	ip, r3, #12
 80183a6:	f36e 0507 	bfi	r5, lr, #0, #8
 80183aa:	f1ac 0c08 	sub.w	ip, ip, #8
 80183ae:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 80183b2:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 80183b6:	f36c 250f 	bfi	r5, ip, #8, #8
 80183ba:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80183be:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80183c2:	3b02      	subs	r3, #2
 80183c4:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 80183c8:	b2db      	uxtb	r3, r3
 80183ca:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 80183ce:	f363 4517 	bfi	r5, r3, #16, #8
 80183d2:	fb12 cc03 	smlabb	ip, r2, r3, ip
 80183d6:	0e2e      	lsrs	r6, r5, #24
 80183d8:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 80183dc:	fb10 c606 	smlabb	r6, r0, r6, ip
 80183e0:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 80183e4:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 80183e8:	6075      	str	r5, [r6, #4]
 80183ea:	e7cc      	b.n	8018386 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 80183ec:	f1bc 0f02 	cmp.w	ip, #2
 80183f0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80183f4:	d12a      	bne.n	801844c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 80183f6:	1cb7      	adds	r7, r6, #2
 80183f8:	7876      	ldrb	r6, [r6, #1]
 80183fa:	b2f6      	uxtb	r6, r6
 80183fc:	f006 0c0f 	and.w	ip, r6, #15
 8018400:	3b20      	subs	r3, #32
 8018402:	f1ac 0c08 	sub.w	ip, ip, #8
 8018406:	449c      	add	ip, r3
 8018408:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 801840c:	fa5f fc8c 	uxtb.w	ip, ip
 8018410:	f36c 0507 	bfi	r5, ip, #0, #8
 8018414:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 8018418:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 801841c:	fa5f fe8e 	uxtb.w	lr, lr
 8018420:	1136      	asrs	r6, r6, #4
 8018422:	f36e 250f 	bfi	r5, lr, #8, #8
 8018426:	3e08      	subs	r6, #8
 8018428:	4433      	add	r3, r6
 801842a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801842e:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8018432:	b2db      	uxtb	r3, r3
 8018434:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 8018438:	f363 4517 	bfi	r5, r3, #16, #8
 801843c:	fb12 ee03 	smlabb	lr, r2, r3, lr
 8018440:	0e2e      	lsrs	r6, r5, #24
 8018442:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 8018446:	fb10 e606 	smlabb	r6, r0, r6, lr
 801844a:	e7c9      	b.n	80183e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 801844c:	1c5e      	adds	r6, r3, #1
 801844e:	42a6      	cmp	r6, r4
 8018450:	dd4e      	ble.n	80184f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 8018452:	1b36      	subs	r6, r6, r4
 8018454:	2e00      	cmp	r6, #0
 8018456:	dc4e      	bgt.n	80184f6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 8018458:	f8dd b004 	ldr.w	fp, [sp, #4]
 801845c:	2400      	movs	r4, #0
 801845e:	f1bb 0f00 	cmp.w	fp, #0
 8018462:	f340 8122 	ble.w	80186aa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 8018466:	1c7b      	adds	r3, r7, #1
 8018468:	9303      	str	r3, [sp, #12]
 801846a:	783b      	ldrb	r3, [r7, #0]
 801846c:	b2db      	uxtb	r3, r3
 801846e:	2bfe      	cmp	r3, #254	@ 0xfe
 8018470:	d160      	bne.n	8018534 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 8018472:	7879      	ldrb	r1, [r7, #1]
 8018474:	78ba      	ldrb	r2, [r7, #2]
 8018476:	78f8      	ldrb	r0, [r7, #3]
 8018478:	b2c9      	uxtb	r1, r1
 801847a:	f361 0507 	bfi	r5, r1, #0, #8
 801847e:	b2d2      	uxtb	r2, r2
 8018480:	1d3b      	adds	r3, r7, #4
 8018482:	f362 250f 	bfi	r5, r2, #8, #8
 8018486:	b2c0      	uxtb	r0, r0
 8018488:	9303      	str	r3, [sp, #12]
 801848a:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801848e:	2303      	movs	r3, #3
 8018490:	fb13 2200 	smlabb	r2, r3, r0, r2
 8018494:	f360 4517 	bfi	r5, r0, #16, #8
 8018498:	2307      	movs	r3, #7
 801849a:	fb13 2101 	smlabb	r1, r3, r1, r2
 801849e:	0e2e      	lsrs	r6, r5, #24
 80184a0:	230b      	movs	r3, #11
 80184a2:	fb13 1306 	smlabb	r3, r3, r6, r1
 80184a6:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80184aa:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80184ae:	605d      	str	r5, [r3, #4]
 80184b0:	2601      	movs	r6, #1
 80184b2:	4637      	mov	r7, r6
 80184b4:	0e2b      	lsrs	r3, r5, #24
 80184b6:	ebab 0b07 	sub.w	fp, fp, r7
 80184ba:	eba6 0607 	sub.w	r6, r6, r7
 80184be:	f040 80d3 	bne.w	8018668 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 80184c2:	b18c      	cbz	r4, 80184e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 80184c4:	4648      	mov	r0, r9
 80184c6:	00a1      	lsls	r1, r4, #2
 80184c8:	f7e9 fda2 	bl	8002010 <_ZN8touchgfx5paint9flushLineEPmi>
 80184cc:	9b05      	ldr	r3, [sp, #20]
 80184ce:	4622      	mov	r2, r4
 80184d0:	4649      	mov	r1, r9
 80184d2:	4640      	mov	r0, r8
 80184d4:	f7e9 fdea 	bl	80020ac <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 80184d8:	4b2c      	ldr	r3, [pc, #176]	@ (801858c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 80184da:	4a2d      	ldr	r2, [pc, #180]	@ (8018590 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 80184dc:	4599      	cmp	r9, r3
 80184de:	bf08      	it	eq
 80184e0:	4613      	moveq	r3, r2
 80184e2:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80184e6:	4699      	mov	r9, r3
 80184e8:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 80184ec:	2400      	movs	r4, #0
 80184ee:	e0da      	b.n	80186a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 80184f0:	1ba6      	subs	r6, r4, r6
 80184f2:	b2b4      	uxth	r4, r6
 80184f4:	e70f      	b.n	8018316 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 80184f6:	9b01      	ldr	r3, [sp, #4]
 80184f8:	9a01      	ldr	r2, [sp, #4]
 80184fa:	42b3      	cmp	r3, r6
 80184fc:	bfa8      	it	ge
 80184fe:	4633      	movge	r3, r6
 8018500:	0e2c      	lsrs	r4, r5, #24
 8018502:	eba2 0b03 	sub.w	fp, r2, r3
 8018506:	eba6 0603 	sub.w	r6, r6, r3
 801850a:	d00b      	beq.n	8018524 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 801850c:	f1a9 0104 	sub.w	r1, r9, #4
 8018510:	461a      	mov	r2, r3
 8018512:	2a00      	cmp	r2, #0
 8018514:	dc02      	bgt.n	801851c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 8018516:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801851a:	e7a0      	b.n	801845e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801851c:	f841 5f04 	str.w	r5, [r1, #4]!
 8018520:	3a01      	subs	r2, #1
 8018522:	e7f6      	b.n	8018512 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 8018524:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8018528:	e799      	b.n	801845e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801852a:	4637      	mov	r7, r6
 801852c:	f8dd b004 	ldr.w	fp, [sp, #4]
 8018530:	4626      	mov	r6, r4
 8018532:	e794      	b.n	801845e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8018534:	2bff      	cmp	r3, #255	@ 0xff
 8018536:	d11d      	bne.n	8018574 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 8018538:	7878      	ldrb	r0, [r7, #1]
 801853a:	78ba      	ldrb	r2, [r7, #2]
 801853c:	78fe      	ldrb	r6, [r7, #3]
 801853e:	1d7b      	adds	r3, r7, #5
 8018540:	b2c0      	uxtb	r0, r0
 8018542:	9303      	str	r3, [sp, #12]
 8018544:	793b      	ldrb	r3, [r7, #4]
 8018546:	f360 0507 	bfi	r5, r0, #0, #8
 801854a:	b2d2      	uxtb	r2, r2
 801854c:	b2d9      	uxtb	r1, r3
 801854e:	f362 250f 	bfi	r5, r2, #8, #8
 8018552:	b2f6      	uxtb	r6, r6
 8018554:	2303      	movs	r3, #3
 8018556:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801855a:	fb13 2206 	smlabb	r2, r3, r6, r2
 801855e:	2307      	movs	r3, #7
 8018560:	fb13 2000 	smlabb	r0, r3, r0, r2
 8018564:	f366 4517 	bfi	r5, r6, #16, #8
 8018568:	230b      	movs	r3, #11
 801856a:	f361 651f 	bfi	r5, r1, #24, #8
 801856e:	fb13 0301 	smlabb	r3, r3, r1, r0
 8018572:	e798      	b.n	80184a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 8018574:	119e      	asrs	r6, r3, #6
 8018576:	d10d      	bne.n	8018594 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 8018578:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801857c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8018580:	685d      	ldr	r5, [r3, #4]
 8018582:	e795      	b.n	80184b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8018584:	20015238 	.word	0x20015238
 8018588:	20015232 	.word	0x20015232
 801858c:	20000180 	.word	0x20000180
 8018590:	20000280 	.word	0x20000280
 8018594:	2e01      	cmp	r6, #1
 8018596:	ea4f 6115 	mov.w	r1, r5, lsr #24
 801859a:	d12b      	bne.n	80185f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 801859c:	f003 0003 	and.w	r0, r3, #3
 80185a0:	3802      	subs	r0, #2
 80185a2:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 80185a6:	b2c0      	uxtb	r0, r0
 80185a8:	f003 020c 	and.w	r2, r3, #12
 80185ac:	f360 0507 	bfi	r5, r0, #0, #8
 80185b0:	3a08      	subs	r2, #8
 80185b2:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 80185b6:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 80185ba:	f362 250f 	bfi	r5, r2, #8, #8
 80185be:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80185c2:	1e9f      	subs	r7, r3, #2
 80185c4:	f3c5 4307 	ubfx	r3, r5, #16, #8
 80185c8:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80185cc:	b2db      	uxtb	r3, r3
 80185ce:	2703      	movs	r7, #3
 80185d0:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80185d4:	fb17 2203 	smlabb	r2, r7, r3, r2
 80185d8:	2707      	movs	r7, #7
 80185da:	f363 4517 	bfi	r5, r3, #16, #8
 80185de:	fb17 2000 	smlabb	r0, r7, r0, r2
 80185e2:	230b      	movs	r3, #11
 80185e4:	fb13 0101 	smlabb	r1, r3, r1, r0
 80185e8:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 80185ec:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 80185f0:	604d      	str	r5, [r1, #4]
 80185f2:	e75e      	b.n	80184b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 80185f4:	2e02      	cmp	r6, #2
 80185f6:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80185fa:	d12f      	bne.n	801865c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 80185fc:	7878      	ldrb	r0, [r7, #1]
 80185fe:	1cba      	adds	r2, r7, #2
 8018600:	b2c0      	uxtb	r0, r0
 8018602:	9203      	str	r2, [sp, #12]
 8018604:	f000 020f 	and.w	r2, r0, #15
 8018608:	3b20      	subs	r3, #32
 801860a:	3a08      	subs	r2, #8
 801860c:	441a      	add	r2, r3
 801860e:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 8018612:	b2d2      	uxtb	r2, r2
 8018614:	f362 0507 	bfi	r5, r2, #0, #8
 8018618:	f3c5 2607 	ubfx	r6, r5, #8, #8
 801861c:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 8018620:	b2f6      	uxtb	r6, r6
 8018622:	1100      	asrs	r0, r0, #4
 8018624:	f366 250f 	bfi	r5, r6, #8, #8
 8018628:	3808      	subs	r0, #8
 801862a:	4403      	add	r3, r0
 801862c:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8018630:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8018634:	b2db      	uxtb	r3, r3
 8018636:	2003      	movs	r0, #3
 8018638:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 801863c:	fb10 6603 	smlabb	r6, r0, r3, r6
 8018640:	2007      	movs	r0, #7
 8018642:	f363 4517 	bfi	r5, r3, #16, #8
 8018646:	fb10 6202 	smlabb	r2, r0, r2, r6
 801864a:	230b      	movs	r3, #11
 801864c:	fb13 2101 	smlabb	r1, r3, r1, r2
 8018650:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8018654:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8018658:	604d      	str	r5, [r1, #4]
 801865a:	e729      	b.n	80184b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801865c:	1c5e      	adds	r6, r3, #1
 801865e:	45b3      	cmp	fp, r6
 8018660:	465f      	mov	r7, fp
 8018662:	bfa8      	it	ge
 8018664:	4637      	movge	r7, r6
 8018666:	e725      	b.n	80184b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 8018668:	193b      	adds	r3, r7, r4
 801866a:	2b40      	cmp	r3, #64	@ 0x40
 801866c:	dd13      	ble.n	8018696 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 801866e:	4648      	mov	r0, r9
 8018670:	00a1      	lsls	r1, r4, #2
 8018672:	f7e9 fccd 	bl	8002010 <_ZN8touchgfx5paint9flushLineEPmi>
 8018676:	4649      	mov	r1, r9
 8018678:	9b05      	ldr	r3, [sp, #20]
 801867a:	4622      	mov	r2, r4
 801867c:	4640      	mov	r0, r8
 801867e:	f7e9 fd15 	bl	80020ac <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8018682:	4b2d      	ldr	r3, [pc, #180]	@ (8018738 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 8018684:	4599      	cmp	r9, r3
 8018686:	bf0c      	ite	eq
 8018688:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 8018744 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 801868c:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 8018738 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 8018690:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8018694:	2400      	movs	r4, #0
 8018696:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 801869a:	463b      	mov	r3, r7
 801869c:	3b01      	subs	r3, #1
 801869e:	f842 5b04 	str.w	r5, [r2], #4
 80186a2:	d1fb      	bne.n	801869c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 80186a4:	443c      	add	r4, r7
 80186a6:	9f03      	ldr	r7, [sp, #12]
 80186a8:	e6d9      	b.n	801845e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 80186aa:	b15c      	cbz	r4, 80186c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 80186ac:	00a1      	lsls	r1, r4, #2
 80186ae:	4648      	mov	r0, r9
 80186b0:	f7e9 fcae 	bl	8002010 <_ZN8touchgfx5paint9flushLineEPmi>
 80186b4:	4640      	mov	r0, r8
 80186b6:	9b05      	ldr	r3, [sp, #20]
 80186b8:	4622      	mov	r2, r4
 80186ba:	4649      	mov	r1, r9
 80186bc:	f7e9 fcf6 	bl	80020ac <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 80186c0:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80186c4:	4b1d      	ldr	r3, [pc, #116]	@ (801873c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 80186c6:	9a01      	ldr	r2, [sp, #4]
 80186c8:	881b      	ldrh	r3, [r3, #0]
 80186ca:	1a9b      	subs	r3, r3, r2
 80186cc:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 80186d0:	9b04      	ldr	r3, [sp, #16]
 80186d2:	3301      	adds	r3, #1
 80186d4:	9304      	str	r3, [sp, #16]
 80186d6:	9a04      	ldr	r2, [sp, #16]
 80186d8:	9b00      	ldr	r3, [sp, #0]
 80186da:	4293      	cmp	r3, r2
 80186dc:	d11d      	bne.n	801871a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 80186de:	9b02      	ldr	r3, [sp, #8]
 80186e0:	9a02      	ldr	r2, [sp, #8]
 80186e2:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 80186e6:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 80186ea:	9808      	ldr	r0, [sp, #32]
 80186ec:	f103 0b01 	add.w	fp, r3, #1
 80186f0:	9b06      	ldr	r3, [sp, #24]
 80186f2:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 80186f6:	9b07      	ldr	r3, [sp, #28]
 80186f8:	2500      	movs	r5, #0
 80186fa:	ba3f      	rev	r7, r7
 80186fc:	1ba4      	subs	r4, r4, r6
 80186fe:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8018702:	4629      	mov	r1, r5
 8018704:	441f      	add	r7, r3
 8018706:	b2a4      	uxth	r4, r4
 8018708:	f00c ffdb 	bl	80256c2 <memset>
 801870c:	f8cd b008 	str.w	fp, [sp, #8]
 8018710:	9504      	str	r5, [sp, #16]
 8018712:	f7e9 fc73 	bl	8001ffc <_ZN8touchgfx5paint8tearDownEv>
 8018716:	463e      	mov	r6, r7
 8018718:	e5cc      	b.n	80182b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 801871a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801871e:	9b01      	ldr	r3, [sp, #4]
 8018720:	1ae4      	subs	r4, r4, r3
 8018722:	1ba4      	subs	r4, r4, r6
 8018724:	b2a4      	uxth	r4, r4
 8018726:	e7f4      	b.n	8018712 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 8018728:	4b05      	ldr	r3, [pc, #20]	@ (8018740 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 801872a:	6818      	ldr	r0, [r3, #0]
 801872c:	6803      	ldr	r3, [r0, #0]
 801872e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018730:	4798      	blx	r3
 8018732:	b00f      	add	sp, #60	@ 0x3c
 8018734:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018738:	20000180 	.word	0x20000180
 801873c:	20015232 	.word	0x20015232
 8018740:	20015238 	.word	0x20015238
 8018744:	20000280 	.word	0x20000280

08018748 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8018748:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801874c:	b08f      	sub	sp, #60	@ 0x3c
 801874e:	461c      	mov	r4, r3
 8018750:	9205      	str	r2, [sp, #20]
 8018752:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8018756:	9100      	str	r1, [sp, #0]
 8018758:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801875a:	9201      	str	r2, [sp, #4]
 801875c:	2a00      	cmp	r2, #0
 801875e:	f000 8115 	beq.w	801898c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 8018762:	6820      	ldr	r0, [r4, #0]
 8018764:	6861      	ldr	r1, [r4, #4]
 8018766:	aa0a      	add	r2, sp, #40	@ 0x28
 8018768:	c203      	stmia	r2!, {r0, r1}
 801876a:	6818      	ldr	r0, [r3, #0]
 801876c:	6859      	ldr	r1, [r3, #4]
 801876e:	aa0c      	add	r2, sp, #48	@ 0x30
 8018770:	c203      	stmia	r2!, {r0, r1}
 8018772:	a80a      	add	r0, sp, #40	@ 0x28
 8018774:	f7f8 fef8 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018778:	4621      	mov	r1, r4
 801877a:	a80c      	add	r0, sp, #48	@ 0x30
 801877c:	f7f8 ff1c 	bl	80115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018780:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8018784:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8018788:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801878c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8018790:	bfde      	ittt	le
 8018792:	b2b3      	uxthle	r3, r6
 8018794:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8018798:	fb92 f3f3 	sdivle	r3, r2, r3
 801879c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80187a0:	bfc8      	it	gt
 80187a2:	2301      	movgt	r3, #1
 80187a4:	fb92 f1f3 	sdiv	r1, r2, r3
 80187a8:	fa1f fc81 	uxth.w	ip, r1
 80187ac:	fb0c 2413 	mls	r4, ip, r3, r2
 80187b0:	fb14 f406 	smulbb	r4, r4, r6
 80187b4:	441d      	add	r5, r3
 80187b6:	4404      	add	r4, r0
 80187b8:	4661      	mov	r1, ip
 80187ba:	3d01      	subs	r5, #1
 80187bc:	b2a4      	uxth	r4, r4
 80187be:	fb95 f5f3 	sdiv	r5, r5, r3
 80187c2:	b131      	cbz	r1, 80187d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 80187c4:	9b05      	ldr	r3, [sp, #20]
 80187c6:	9900      	ldr	r1, [sp, #0]
 80187c8:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80187cc:	ba1b      	rev	r3, r3
 80187ce:	4419      	add	r1, r3
 80187d0:	9100      	str	r1, [sp, #0]
 80187d2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80187d6:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 80187da:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 80187de:	4418      	add	r0, r3
 80187e0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80187e4:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 80187e8:	441a      	add	r2, r3
 80187ea:	4b6a      	ldr	r3, [pc, #424]	@ (8018994 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 80187ec:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80187f0:	6818      	ldr	r0, [r3, #0]
 80187f2:	6803      	ldr	r3, [r0, #0]
 80187f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80187f6:	4798      	blx	r3
 80187f8:	4967      	ldr	r1, [pc, #412]	@ (8018998 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 80187fa:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80187fe:	880b      	ldrh	r3, [r1, #0]
 8018800:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8018804:	9109      	str	r1, [sp, #36]	@ 0x24
 8018806:	fb03 c202 	mla	r2, r3, r2, ip
 801880a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801880e:	4373      	muls	r3, r6
 8018810:	b2ad      	uxth	r5, r5
 8018812:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018816:	00ad      	lsls	r5, r5, #2
 8018818:	9306      	str	r3, [sp, #24]
 801881a:	1d2b      	adds	r3, r5, #4
 801881c:	9307      	str	r3, [sp, #28]
 801881e:	9b01      	ldr	r3, [sp, #4]
 8018820:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8018824:	9103      	str	r1, [sp, #12]
 8018826:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 801882a:	2c00      	cmp	r4, #0
 801882c:	bf0c      	ite	eq
 801882e:	46c6      	moveq	lr, r8
 8018830:	f04f 0e00 	movne.w	lr, #0
 8018834:	2300      	movs	r3, #0
 8018836:	b292      	uxth	r2, r2
 8018838:	fa1f fe8e 	uxth.w	lr, lr
 801883c:	9302      	str	r3, [sp, #8]
 801883e:	9204      	str	r2, [sp, #16]
 8018840:	9a06      	ldr	r2, [sp, #24]
 8018842:	4282      	cmp	r2, r0
 8018844:	f240 809d 	bls.w	8018982 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8018848:	b963      	cbnz	r3, 8018864 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801884a:	9b00      	ldr	r3, [sp, #0]
 801884c:	781a      	ldrb	r2, [r3, #0]
 801884e:	0993      	lsrs	r3, r2, #6
 8018850:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8018854:	9202      	str	r2, [sp, #8]
 8018856:	1e5a      	subs	r2, r3, #1
 8018858:	2a02      	cmp	r2, #2
 801885a:	d815      	bhi.n	8018888 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801885c:	9a00      	ldr	r2, [sp, #0]
 801885e:	3201      	adds	r2, #1
 8018860:	9200      	str	r2, [sp, #0]
 8018862:	b29b      	uxth	r3, r3
 8018864:	b1b4      	cbz	r4, 8018894 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 8018866:	429c      	cmp	r4, r3
 8018868:	bf95      	itete	ls
 801886a:	1b1c      	subls	r4, r3, r4
 801886c:	1ae4      	subhi	r4, r4, r3
 801886e:	fa1f fa84 	uxthls.w	sl, r4
 8018872:	b2a4      	uxthhi	r4, r4
 8018874:	bf87      	ittee	hi
 8018876:	4671      	movhi	r1, lr
 8018878:	f04f 0a00 	movhi.w	sl, #0
 801887c:	fa1f f188 	uxthls.w	r1, r8
 8018880:	2400      	movls	r4, #0
 8018882:	4653      	mov	r3, sl
 8018884:	468e      	mov	lr, r1
 8018886:	e7db      	b.n	8018840 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8018888:	9a00      	ldr	r2, [sp, #0]
 801888a:	9b00      	ldr	r3, [sp, #0]
 801888c:	3202      	adds	r2, #2
 801888e:	785b      	ldrb	r3, [r3, #1]
 8018890:	9200      	str	r2, [sp, #0]
 8018892:	e7e7      	b.n	8018864 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8018894:	2202      	movs	r2, #2
 8018896:	4615      	mov	r5, r2
 8018898:	9907      	ldr	r1, [sp, #28]
 801889a:	9a02      	ldr	r2, [sp, #8]
 801889c:	fb15 1202 	smlabb	r2, r5, r2, r1
 80188a0:	9905      	ldr	r1, [sp, #20]
 80188a2:	4573      	cmp	r3, lr
 80188a4:	f831 c002 	ldrh.w	ip, [r1, r2]
 80188a8:	9a01      	ldr	r2, [sp, #4]
 80188aa:	bf2b      	itete	cs
 80188ac:	eba3 0a0e 	subcs.w	sl, r3, lr
 80188b0:	ebae 0103 	subcc.w	r1, lr, r3
 80188b4:	46f1      	movcs	r9, lr
 80188b6:	4699      	movcc	r9, r3
 80188b8:	bf27      	ittee	cs
 80188ba:	fa1f fa8a 	uxthcs.w	sl, sl
 80188be:	4621      	movcs	r1, r4
 80188c0:	b289      	uxthcc	r1, r1
 80188c2:	46a2      	movcc	sl, r4
 80188c4:	2aff      	cmp	r2, #255	@ 0xff
 80188c6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80188ca:	d105      	bne.n	80188d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 80188cc:	4481      	add	r9, r0
 80188ce:	4581      	cmp	r9, r0
 80188d0:	d045      	beq.n	801895e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 80188d2:	f820 cb02 	strh.w	ip, [r0], #2
 80188d6:	e7fa      	b.n	80188ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80188d8:	9d03      	ldr	r5, [sp, #12]
 80188da:	ea4f 222c 	mov.w	r2, ip, asr #8
 80188de:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80188e2:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80188e6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80188ea:	436a      	muls	r2, r5
 80188ec:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80188f0:	fa5f fc8c 	uxtb.w	ip, ip
 80188f4:	9208      	str	r2, [sp, #32]
 80188f6:	fb0b fb05 	mul.w	fp, fp, r5
 80188fa:	fb0c fc05 	mul.w	ip, ip, r5
 80188fe:	4481      	add	r9, r0
 8018900:	4581      	cmp	r9, r0
 8018902:	d02c      	beq.n	801895e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8018904:	8802      	ldrh	r2, [r0, #0]
 8018906:	9d04      	ldr	r5, [sp, #16]
 8018908:	9f04      	ldr	r7, [sp, #16]
 801890a:	1216      	asrs	r6, r2, #8
 801890c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8018910:	fb16 f605 	smulbb	r6, r6, r5
 8018914:	9d08      	ldr	r5, [sp, #32]
 8018916:	442e      	add	r6, r5
 8018918:	10d5      	asrs	r5, r2, #3
 801891a:	00d2      	lsls	r2, r2, #3
 801891c:	b2d2      	uxtb	r2, r2
 801891e:	fb12 f207 	smulbb	r2, r2, r7
 8018922:	b2b6      	uxth	r6, r6
 8018924:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018928:	4462      	add	r2, ip
 801892a:	fb15 f507 	smulbb	r5, r5, r7
 801892e:	b292      	uxth	r2, r2
 8018930:	1c77      	adds	r7, r6, #1
 8018932:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8018936:	1c57      	adds	r7, r2, #1
 8018938:	445d      	add	r5, fp
 801893a:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801893e:	b2ad      	uxth	r5, r5
 8018940:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018944:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8018948:	4316      	orrs	r6, r2
 801894a:	1c6a      	adds	r2, r5, #1
 801894c:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8018950:	096d      	lsrs	r5, r5, #5
 8018952:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018956:	432e      	orrs	r6, r5
 8018958:	f820 6b02 	strh.w	r6, [r0], #2
 801895c:	e7d0      	b.n	8018900 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801895e:	4573      	cmp	r3, lr
 8018960:	d38f      	bcc.n	8018882 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8018962:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8018966:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018968:	fa1f f188 	uxth.w	r1, r8
 801896c:	1a64      	subs	r4, r4, r1
 801896e:	881b      	ldrh	r3, [r3, #0]
 8018970:	b2a4      	uxth	r4, r4
 8018972:	2c00      	cmp	r4, #0
 8018974:	eba3 0308 	sub.w	r3, r3, r8
 8018978:	bf18      	it	ne
 801897a:	2100      	movne	r1, #0
 801897c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018980:	e77f      	b.n	8018882 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8018982:	4b04      	ldr	r3, [pc, #16]	@ (8018994 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8018984:	6818      	ldr	r0, [r3, #0]
 8018986:	6803      	ldr	r3, [r0, #0]
 8018988:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801898a:	4798      	blx	r3
 801898c:	b00f      	add	sp, #60	@ 0x3c
 801898e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018992:	bf00      	nop
 8018994:	20015238 	.word	0x20015238
 8018998:	20015232 	.word	0x20015232

0801899c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801899c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80189a0:	b09f      	sub	sp, #124	@ 0x7c
 80189a2:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 80189a6:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 80189aa:	9209      	str	r2, [sp, #36]	@ 0x24
 80189ac:	461d      	mov	r5, r3
 80189ae:	4604      	mov	r4, r0
 80189b0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80189b2:	2a00      	cmp	r2, #0
 80189b4:	f000 81eb 	beq.w	8018d8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 80189b8:	6828      	ldr	r0, [r5, #0]
 80189ba:	6869      	ldr	r1, [r5, #4]
 80189bc:	aa1a      	add	r2, sp, #104	@ 0x68
 80189be:	c203      	stmia	r2!, {r0, r1}
 80189c0:	6818      	ldr	r0, [r3, #0]
 80189c2:	6859      	ldr	r1, [r3, #4]
 80189c4:	aa1c      	add	r2, sp, #112	@ 0x70
 80189c6:	c203      	stmia	r2!, {r0, r1}
 80189c8:	a81a      	add	r0, sp, #104	@ 0x68
 80189ca:	f7f8 fdcd 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80189ce:	4629      	mov	r1, r5
 80189d0:	a81c      	add	r0, sp, #112	@ 0x70
 80189d2:	f7f8 fdf1 	bl	80115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80189d6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 80189da:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 80189de:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 80189e2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80189e6:	bfd7      	itett	le
 80189e8:	b29a      	uxthle	r2, r3
 80189ea:	2201      	movgt	r2, #1
 80189ec:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80189f0:	fb91 f2f2 	sdivle	r2, r1, r2
 80189f4:	9202      	str	r2, [sp, #8]
 80189f6:	9802      	ldr	r0, [sp, #8]
 80189f8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 80189fc:	fb92 f0f0 	sdiv	r0, r2, r0
 8018a00:	b280      	uxth	r0, r0
 8018a02:	9010      	str	r0, [sp, #64]	@ 0x40
 8018a04:	9902      	ldr	r1, [sp, #8]
 8018a06:	9802      	ldr	r0, [sp, #8]
 8018a08:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8018a0a:	4488      	add	r8, r1
 8018a0c:	fb05 2510 	mls	r5, r5, r0, r2
 8018a10:	fb15 f503 	smulbb	r5, r5, r3
 8018a14:	f108 38ff 	add.w	r8, r8, #4294967295
 8018a18:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8018a1c:	fb98 f8f1 	sdiv	r8, r8, r1
 8018a20:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8018a24:	440d      	add	r5, r1
 8018a26:	4419      	add	r1, r3
 8018a28:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8018a2c:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8018a30:	441a      	add	r2, r3
 8018a32:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8018a36:	9304      	str	r3, [sp, #16]
 8018a38:	4b95      	ldr	r3, [pc, #596]	@ (8018c90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8018a3a:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8018a3e:	6818      	ldr	r0, [r3, #0]
 8018a40:	6803      	ldr	r3, [r0, #0]
 8018a42:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018a44:	4798      	blx	r3
 8018a46:	4b93      	ldr	r3, [pc, #588]	@ (8018c94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8018a48:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8018a4c:	881a      	ldrh	r2, [r3, #0]
 8018a4e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8018a52:	9318      	str	r3, [sp, #96]	@ 0x60
 8018a54:	fb02 7101 	mla	r1, r2, r1, r7
 8018a58:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018a5c:	4356      	muls	r6, r2
 8018a5e:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8018a62:	f108 0801 	add.w	r8, r8, #1
 8018a66:	920a      	str	r2, [sp, #40]	@ 0x28
 8018a68:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018a6a:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8018a6e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8018a70:	fa1f f888 	uxth.w	r8, r8
 8018a74:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8018a78:	f108 0204 	add.w	r2, r8, #4
 8018a7c:	9211      	str	r2, [sp, #68]	@ 0x44
 8018a7e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8018a80:	4b85      	ldr	r3, [pc, #532]	@ (8018c98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8018a82:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8018a86:	b2ad      	uxth	r5, r5
 8018a88:	9215      	str	r2, [sp, #84]	@ 0x54
 8018a8a:	2d00      	cmp	r5, #0
 8018a8c:	9a04      	ldr	r2, [sp, #16]
 8018a8e:	f04f 0100 	mov.w	r1, #0
 8018a92:	bf18      	it	ne
 8018a94:	2200      	movne	r2, #0
 8018a96:	1b1b      	subs	r3, r3, r4
 8018a98:	b292      	uxth	r2, r2
 8018a9a:	910d      	str	r1, [sp, #52]	@ 0x34
 8018a9c:	9319      	str	r3, [sp, #100]	@ 0x64
 8018a9e:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8018aa0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018aa2:	fa11 f383 	uxtah	r3, r1, r3
 8018aa6:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8018aa8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8018aac:	3304      	adds	r3, #4
 8018aae:	9306      	str	r3, [sp, #24]
 8018ab0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018ab2:	4283      	cmp	r3, r0
 8018ab4:	f240 8166 	bls.w	8018d84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 8018ab8:	9902      	ldr	r1, [sp, #8]
 8018aba:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8018abe:	fbb5 f3f3 	udiv	r3, r5, r3
 8018ac2:	1acb      	subs	r3, r1, r3
 8018ac4:	b29b      	uxth	r3, r3
 8018ac6:	9316      	str	r3, [sp, #88]	@ 0x58
 8018ac8:	9b06      	ldr	r3, [sp, #24]
 8018aca:	9e06      	ldr	r6, [sp, #24]
 8018acc:	7859      	ldrb	r1, [r3, #1]
 8018ace:	789b      	ldrb	r3, [r3, #2]
 8018ad0:	7836      	ldrb	r6, [r6, #0]
 8018ad2:	9612      	str	r6, [sp, #72]	@ 0x48
 8018ad4:	021b      	lsls	r3, r3, #8
 8018ad6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8018ada:	9906      	ldr	r1, [sp, #24]
 8018adc:	78c9      	ldrb	r1, [r1, #3]
 8018ade:	430b      	orrs	r3, r1
 8018ae0:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8018ae2:	3601      	adds	r6, #1
 8018ae4:	4419      	add	r1, r3
 8018ae6:	9605      	str	r6, [sp, #20]
 8018ae8:	1c4e      	adds	r6, r1, #1
 8018aea:	9603      	str	r6, [sp, #12]
 8018aec:	7849      	ldrb	r1, [r1, #1]
 8018aee:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8018af0:	0209      	lsls	r1, r1, #8
 8018af2:	5cf3      	ldrb	r3, [r6, r3]
 8018af4:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 8018af8:	4319      	orrs	r1, r3
 8018afa:	b28b      	uxth	r3, r1
 8018afc:	930c      	str	r3, [sp, #48]	@ 0x30
 8018afe:	2300      	movs	r3, #0
 8018b00:	f04f 0a01 	mov.w	sl, #1
 8018b04:	9307      	str	r3, [sp, #28]
 8018b06:	469c      	mov	ip, r3
 8018b08:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8018b0c:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8018b10:	46d3      	mov	fp, sl
 8018b12:	4657      	mov	r7, sl
 8018b14:	930e      	str	r3, [sp, #56]	@ 0x38
 8018b16:	2d00      	cmp	r5, #0
 8018b18:	d07e      	beq.n	8018c18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8018b1a:	42af      	cmp	r7, r5
 8018b1c:	d26e      	bcs.n	8018bfc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 8018b1e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018b20:	9201      	str	r2, [sp, #4]
 8018b22:	1bed      	subs	r5, r5, r7
 8018b24:	4283      	cmp	r3, r0
 8018b26:	b2ad      	uxth	r5, r5
 8018b28:	d802      	bhi.n	8018b30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8018b2a:	e073      	b.n	8018c14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 8018b2c:	2b00      	cmp	r3, #0
 8018b2e:	d15f      	bne.n	8018bf0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 8018b30:	9b03      	ldr	r3, [sp, #12]
 8018b32:	785b      	ldrb	r3, [r3, #1]
 8018b34:	f1cb 0207 	rsb	r2, fp, #7
 8018b38:	4093      	lsls	r3, r2
 8018b3a:	005b      	lsls	r3, r3, #1
 8018b3c:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8018b40:	9b03      	ldr	r3, [sp, #12]
 8018b42:	781b      	ldrb	r3, [r3, #0]
 8018b44:	fa43 f30b 	asr.w	r3, r3, fp
 8018b48:	b2db      	uxtb	r3, r3
 8018b4a:	4313      	orrs	r3, r2
 8018b4c:	f10b 0201 	add.w	r2, fp, #1
 8018b50:	fa5f fb82 	uxtb.w	fp, r2
 8018b54:	9a03      	ldr	r2, [sp, #12]
 8018b56:	f1bb 0f08 	cmp.w	fp, #8
 8018b5a:	bf15      	itete	ne
 8018b5c:	3201      	addne	r2, #1
 8018b5e:	3202      	addeq	r2, #2
 8018b60:	9203      	strne	r2, [sp, #12]
 8018b62:	9203      	streq	r2, [sp, #12]
 8018b64:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8018b66:	b29f      	uxth	r7, r3
 8018b68:	bf08      	it	eq
 8018b6a:	f04f 0b00 	moveq.w	fp, #0
 8018b6e:	42ba      	cmp	r2, r7
 8018b70:	d309      	bcc.n	8018b86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 8018b72:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8018b76:	2301      	movs	r3, #1
 8018b78:	9a05      	ldr	r2, [sp, #20]
 8018b7a:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 8018b7e:	d30e      	bcc.n	8018b9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 8018b80:	469a      	mov	sl, r3
 8018b82:	2600      	movs	r6, #0
 8018b84:	e035      	b.n	8018bf2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 8018b86:	9b05      	ldr	r3, [sp, #20]
 8018b88:	429f      	cmp	r7, r3
 8018b8a:	d318      	bcc.n	8018bbe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 8018b8c:	eb04 030a 	add.w	r3, r4, sl
 8018b90:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8018b94:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8018b98:	f10a 0301 	add.w	r3, sl, #1
 8018b9c:	b29b      	uxth	r3, r3
 8018b9e:	9a05      	ldr	r2, [sp, #20]
 8018ba0:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8018ba4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8018ba6:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8018baa:	7116      	strb	r6, [r2, #4]
 8018bac:	f10a 0601 	add.w	r6, sl, #1
 8018bb0:	80d1      	strh	r1, [r2, #6]
 8018bb2:	7156      	strb	r6, [r2, #5]
 8018bb4:	9a05      	ldr	r2, [sp, #20]
 8018bb6:	3201      	adds	r2, #1
 8018bb8:	b292      	uxth	r2, r2
 8018bba:	9205      	str	r2, [sp, #20]
 8018bbc:	e7e0      	b.n	8018b80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 8018bbe:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 8018bc2:	463a      	mov	r2, r7
 8018bc4:	795b      	ldrb	r3, [r3, #5]
 8018bc6:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8018bca:	4426      	add	r6, r4
 8018bcc:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8018bce:	eb01 0c06 	add.w	ip, r1, r6
 8018bd2:	f1bc 0f00 	cmp.w	ip, #0
 8018bd6:	dd07      	ble.n	8018be8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 8018bd8:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8018bdc:	f892 c004 	ldrb.w	ip, [r2, #4]
 8018be0:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8018be4:	88d2      	ldrh	r2, [r2, #6]
 8018be6:	e7f1      	b.n	8018bcc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 8018be8:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8018bec:	b29b      	uxth	r3, r3
 8018bee:	e7c3      	b.n	8018b78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 8018bf0:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8018bf2:	970c      	str	r7, [sp, #48]	@ 0x30
 8018bf4:	9a01      	ldr	r2, [sp, #4]
 8018bf6:	46b4      	mov	ip, r6
 8018bf8:	461f      	mov	r7, r3
 8018bfa:	e78c      	b.n	8018b16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 8018bfc:	1b7b      	subs	r3, r7, r5
 8018bfe:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018c02:	9201      	str	r2, [sp, #4]
 8018c04:	eb0c 0605 	add.w	r6, ip, r5
 8018c08:	b29b      	uxth	r3, r3
 8018c0a:	b2b6      	uxth	r6, r6
 8018c0c:	2500      	movs	r5, #0
 8018c0e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8018c10:	4282      	cmp	r2, r0
 8018c12:	d88b      	bhi.n	8018b2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8018c14:	9a01      	ldr	r2, [sp, #4]
 8018c16:	e74b      	b.n	8018ab0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 8018c18:	4297      	cmp	r7, r2
 8018c1a:	d332      	bcc.n	8018c82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 8018c1c:	1abb      	subs	r3, r7, r2
 8018c1e:	b29b      	uxth	r3, r3
 8018c20:	9208      	str	r2, [sp, #32]
 8018c22:	9501      	str	r5, [sp, #4]
 8018c24:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8018c26:	29ff      	cmp	r1, #255	@ 0xff
 8018c28:	9908      	ldr	r1, [sp, #32]
 8018c2a:	eb0c 0601 	add.w	r6, ip, r1
 8018c2e:	d135      	bne.n	8018c9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 8018c30:	f1a0 0e02 	sub.w	lr, r0, #2
 8018c34:	b2b6      	uxth	r6, r6
 8018c36:	45b4      	cmp	ip, r6
 8018c38:	f040 808c 	bne.w	8018d54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 8018c3c:	9908      	ldr	r1, [sp, #32]
 8018c3e:	4297      	cmp	r7, r2
 8018c40:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018c44:	d3e2      	bcc.n	8018c0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 8018c46:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8018c48:	9904      	ldr	r1, [sp, #16]
 8018c4a:	8812      	ldrh	r2, [r2, #0]
 8018c4c:	1a52      	subs	r2, r2, r1
 8018c4e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018c52:	9a07      	ldr	r2, [sp, #28]
 8018c54:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8018c56:	3201      	adds	r2, #1
 8018c58:	428a      	cmp	r2, r1
 8018c5a:	9207      	str	r2, [sp, #28]
 8018c5c:	f040 8087 	bne.w	8018d6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 8018c60:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8018c64:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8018c68:	9b04      	ldr	r3, [sp, #16]
 8018c6a:	1bed      	subs	r5, r5, r7
 8018c6c:	b2ad      	uxth	r5, r5
 8018c6e:	2d00      	cmp	r5, #0
 8018c70:	bf08      	it	eq
 8018c72:	461a      	moveq	r2, r3
 8018c74:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018c76:	bf18      	it	ne
 8018c78:	2200      	movne	r2, #0
 8018c7a:	3301      	adds	r3, #1
 8018c7c:	930d      	str	r3, [sp, #52]	@ 0x34
 8018c7e:	b292      	uxth	r2, r2
 8018c80:	e70d      	b.n	8018a9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 8018c82:	1bd1      	subs	r1, r2, r7
 8018c84:	b28b      	uxth	r3, r1
 8018c86:	9301      	str	r3, [sp, #4]
 8018c88:	9708      	str	r7, [sp, #32]
 8018c8a:	462b      	mov	r3, r5
 8018c8c:	e7ca      	b.n	8018c24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 8018c8e:	bf00      	nop
 8018c90:	20015238 	.word	0x20015238
 8018c94:	20015232 	.word	0x20015232
 8018c98:	fffff7fb 	.word	0xfffff7fb
 8018c9c:	b2b6      	uxth	r6, r6
 8018c9e:	900b      	str	r0, [sp, #44]	@ 0x2c
 8018ca0:	45b4      	cmp	ip, r6
 8018ca2:	d0cb      	beq.n	8018c3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 8018ca4:	f10c 0101 	add.w	r1, ip, #1
 8018ca8:	44a4      	add	ip, r4
 8018caa:	9117      	str	r1, [sp, #92]	@ 0x5c
 8018cac:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8018cb0:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8018cb2:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8018cb6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8018cb8:	f8b1 c000 	ldrh.w	ip, [r1]
 8018cbc:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8018cbe:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8018cc2:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8018cc6:	fb1e fe01 	smulbb	lr, lr, r1
 8018cca:	ea4f 2825 	mov.w	r8, r5, asr #8
 8018cce:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8018cd0:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8018cd4:	fb08 e801 	mla	r8, r8, r1, lr
 8018cd8:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8018cdc:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8018cde:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8018ce2:	fb19 f901 	smulbb	r9, r9, r1
 8018ce6:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 8018cea:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8018cec:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8018cf0:	fb0e 9e01 	mla	lr, lr, r1, r9
 8018cf4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018cf8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8018cfa:	fa5f fc8c 	uxtb.w	ip, ip
 8018cfe:	fb1c fc01 	smulbb	ip, ip, r1
 8018d02:	00ed      	lsls	r5, r5, #3
 8018d04:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8018d06:	b2ed      	uxtb	r5, r5
 8018d08:	fb05 c501 	mla	r5, r5, r1, ip
 8018d0c:	fa1f f888 	uxth.w	r8, r8
 8018d10:	fa1f fe8e 	uxth.w	lr, lr
 8018d14:	b2ad      	uxth	r5, r5
 8018d16:	f108 0c01 	add.w	ip, r8, #1
 8018d1a:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8018d1e:	f10e 0901 	add.w	r9, lr, #1
 8018d22:	f105 0c01 	add.w	ip, r5, #1
 8018d26:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8018d2a:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8018d2e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018d32:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8018d36:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018d3a:	ea4c 0808 	orr.w	r8, ip, r8
 8018d3e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8018d40:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 8018d44:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8018d48:	ea48 0809 	orr.w	r8, r8, r9
 8018d4c:	f821 8b02 	strh.w	r8, [r1], #2
 8018d50:	910b      	str	r1, [sp, #44]	@ 0x2c
 8018d52:	e7a5      	b.n	8018ca0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8018d54:	f10c 0801 	add.w	r8, ip, #1
 8018d58:	44a4      	add	ip, r4
 8018d5a:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8018d5c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8018d60:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8018d64:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8018d68:	fa1f fc88 	uxth.w	ip, r8
 8018d6c:	e763      	b.n	8018c36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 8018d6e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018d72:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8018d76:	1aad      	subs	r5, r5, r2
 8018d78:	b2ad      	uxth	r5, r5
 8018d7a:	2d00      	cmp	r5, #0
 8018d7c:	bf18      	it	ne
 8018d7e:	2200      	movne	r2, #0
 8018d80:	9201      	str	r2, [sp, #4]
 8018d82:	e744      	b.n	8018c0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 8018d84:	4b03      	ldr	r3, [pc, #12]	@ (8018d94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 8018d86:	6818      	ldr	r0, [r3, #0]
 8018d88:	6803      	ldr	r3, [r0, #0]
 8018d8a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018d8c:	4798      	blx	r3
 8018d8e:	b01f      	add	sp, #124	@ 0x7c
 8018d90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018d94:	20015238 	.word	0x20015238

08018d98 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 8018d98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d9c:	b093      	sub	sp, #76	@ 0x4c
 8018d9e:	4616      	mov	r6, r2
 8018da0:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 8018da4:	9003      	str	r0, [sp, #12]
 8018da6:	460d      	mov	r5, r1
 8018da8:	9201      	str	r2, [sp, #4]
 8018daa:	2a00      	cmp	r2, #0
 8018dac:	f000 8304 	beq.w	80193b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 8018db0:	6830      	ldr	r0, [r6, #0]
 8018db2:	6871      	ldr	r1, [r6, #4]
 8018db4:	ac0e      	add	r4, sp, #56	@ 0x38
 8018db6:	c403      	stmia	r4!, {r0, r1}
 8018db8:	6818      	ldr	r0, [r3, #0]
 8018dba:	6859      	ldr	r1, [r3, #4]
 8018dbc:	ac10      	add	r4, sp, #64	@ 0x40
 8018dbe:	c403      	stmia	r4!, {r0, r1}
 8018dc0:	a80e      	add	r0, sp, #56	@ 0x38
 8018dc2:	f7f8 fbd1 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018dc6:	4631      	mov	r1, r6
 8018dc8:	a810      	add	r0, sp, #64	@ 0x40
 8018dca:	f7f8 fbf5 	bl	80115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018dce:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8018dd2:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8018dd6:	bfd7      	itett	le
 8018dd8:	b293      	uxthle	r3, r2
 8018dda:	2301      	movgt	r3, #1
 8018ddc:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8018de0:	fb91 f3f3 	sdivle	r3, r1, r3
 8018de4:	9304      	str	r3, [sp, #16]
 8018de6:	f105 0308 	add.w	r3, r5, #8
 8018dea:	9904      	ldr	r1, [sp, #16]
 8018dec:	9308      	str	r3, [sp, #32]
 8018dee:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 8018df2:	440b      	add	r3, r1
 8018df4:	3b01      	subs	r3, #1
 8018df6:	fb93 f3f1 	sdiv	r3, r3, r1
 8018dfa:	9908      	ldr	r1, [sp, #32]
 8018dfc:	3b01      	subs	r3, #1
 8018dfe:	b29b      	uxth	r3, r3
 8018e00:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8018e04:	9309      	str	r3, [sp, #36]	@ 0x24
 8018e06:	9904      	ldr	r1, [sp, #16]
 8018e08:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8018e0c:	fb93 f0f1 	sdiv	r0, r3, r1
 8018e10:	b284      	uxth	r4, r0
 8018e12:	9405      	str	r4, [sp, #20]
 8018e14:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8018e18:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 8018e1c:	fb05 3914 	mls	r9, r5, r4, r3
 8018e20:	fb19 f902 	smulbb	r9, r9, r2
 8018e24:	4489      	add	r9, r1
 8018e26:	fa1f f989 	uxth.w	r9, r9
 8018e2a:	2d00      	cmp	r5, #0
 8018e2c:	d05d      	beq.n	8018eea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 8018e2e:	1e6a      	subs	r2, r5, #1
 8018e30:	9808      	ldr	r0, [sp, #32]
 8018e32:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 8018e36:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8018e38:	fa9a fa8a 	rev.w	sl, sl
 8018e3c:	4492      	add	sl, r2
 8018e3e:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8018e42:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8018e46:	4411      	add	r1, r2
 8018e48:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8018e4c:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 8018e50:	4413      	add	r3, r2
 8018e52:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8018e56:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8018e5a:	9302      	str	r3, [sp, #8]
 8018e5c:	4bcb      	ldr	r3, [pc, #812]	@ (801918c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 8018e5e:	6818      	ldr	r0, [r3, #0]
 8018e60:	6803      	ldr	r3, [r0, #0]
 8018e62:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018e64:	4798      	blx	r3
 8018e66:	4bca      	ldr	r3, [pc, #808]	@ (8019190 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 8018e68:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8018e6c:	881b      	ldrh	r3, [r3, #0]
 8018e6e:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 8018e72:	fb03 2404 	mla	r4, r3, r4, r2
 8018e76:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018e7a:	436b      	muls	r3, r5
 8018e7c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018e80:	930d      	str	r3, [sp, #52]	@ 0x34
 8018e82:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8018e86:	fb99 f3f3 	sdiv	r3, r9, r3
 8018e8a:	9306      	str	r3, [sp, #24]
 8018e8c:	9b01      	ldr	r3, [sp, #4]
 8018e8e:	43db      	mvns	r3, r3
 8018e90:	b2db      	uxtb	r3, r3
 8018e92:	930a      	str	r3, [sp, #40]	@ 0x28
 8018e94:	9b03      	ldr	r3, [sp, #12]
 8018e96:	3304      	adds	r3, #4
 8018e98:	4618      	mov	r0, r3
 8018e9a:	2280      	movs	r2, #128	@ 0x80
 8018e9c:	2100      	movs	r1, #0
 8018e9e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018ea0:	f00c fc0f 	bl	80256c2 <memset>
 8018ea4:	4bbb      	ldr	r3, [pc, #748]	@ (8019194 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 8018ea6:	9300      	str	r3, [sp, #0]
 8018ea8:	2300      	movs	r3, #0
 8018eaa:	f04f 0600 	mov.w	r6, #0
 8018eae:	9307      	str	r3, [sp, #28]
 8018eb0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018eb2:	42a3      	cmp	r3, r4
 8018eb4:	f240 827b 	bls.w	80193ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 8018eb8:	f04f 0e07 	mov.w	lr, #7
 8018ebc:	f1b9 0f00 	cmp.w	r9, #0
 8018ec0:	f000 8159 	beq.w	8019176 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 8018ec4:	f89a 5000 	ldrb.w	r5, [sl]
 8018ec8:	b2ed      	uxtb	r5, r5
 8018eca:	11aa      	asrs	r2, r5, #6
 8018ecc:	f10a 0701 	add.w	r7, sl, #1
 8018ed0:	d10e      	bne.n	8018ef0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 8018ed2:	9b03      	ldr	r3, [sp, #12]
 8018ed4:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8018ed8:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8018edc:	88ae      	ldrh	r6, [r5, #4]
 8018ede:	f109 39ff 	add.w	r9, r9, #4294967295
 8018ee2:	fa1f f989 	uxth.w	r9, r9
 8018ee6:	46ba      	mov	sl, r7
 8018ee8:	e7e8      	b.n	8018ebc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 8018eea:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 8018eee:	e7a6      	b.n	8018e3e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 8018ef0:	2a01      	cmp	r2, #1
 8018ef2:	d129      	bne.n	8018f48 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 8018ef4:	f3c6 0304 	ubfx	r3, r6, #0, #5
 8018ef8:	f005 0203 	and.w	r2, r5, #3
 8018efc:	3b02      	subs	r3, #2
 8018efe:	4413      	add	r3, r2
 8018f00:	f003 031f 	and.w	r3, r3, #31
 8018f04:	f3c5 0281 	ubfx	r2, r5, #2, #2
 8018f08:	f363 0604 	bfi	r6, r3, #0, #5
 8018f0c:	3a02      	subs	r2, #2
 8018f0e:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 8018f12:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8018f16:	f3c5 1501 	ubfx	r5, r5, #4, #2
 8018f1a:	f362 164a 	bfi	r6, r2, #5, #6
 8018f1e:	3d02      	subs	r5, #2
 8018f20:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 8018f24:	f005 051f 	and.w	r5, r5, #31
 8018f28:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8018f2c:	2103      	movs	r1, #3
 8018f2e:	fb11 2205 	smlabb	r2, r1, r5, r2
 8018f32:	fb1e 2303 	smlabb	r3, lr, r3, r2
 8018f36:	9a03      	ldr	r2, [sp, #12]
 8018f38:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8018f3c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018f40:	f365 26cf 	bfi	r6, r5, #11, #5
 8018f44:	809e      	strh	r6, [r3, #4]
 8018f46:	e7ca      	b.n	8018ede <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 8018f48:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8018f4c:	2a02      	cmp	r2, #2
 8018f4e:	b2ab      	uxth	r3, r5
 8018f50:	d136      	bne.n	8018fc0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 8018f52:	2101      	movs	r1, #1
 8018f54:	fb12 1205 	smlabb	r2, r2, r5, r1
 8018f58:	4492      	add	sl, r2
 8018f5a:	463a      	mov	r2, r7
 8018f5c:	4552      	cmp	r2, sl
 8018f5e:	d01c      	beq.n	8018f9a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 8018f60:	4694      	mov	ip, r2
 8018f62:	f04f 0b03 	mov.w	fp, #3
 8018f66:	f81c 1b02 	ldrb.w	r1, [ip], #2
 8018f6a:	7852      	ldrb	r2, [r2, #1]
 8018f6c:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8018f70:	f3c1 1045 	ubfx	r0, r1, #5, #6
 8018f74:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 8018f78:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8018f7c:	f001 021f 	and.w	r2, r1, #31
 8018f80:	fb1b 0008 	smlabb	r0, fp, r8, r0
 8018f84:	fb1e 0002 	smlabb	r0, lr, r2, r0
 8018f88:	9a03      	ldr	r2, [sp, #12]
 8018f8a:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8018f8e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8018f92:	460e      	mov	r6, r1
 8018f94:	8081      	strh	r1, [r0, #4]
 8018f96:	4662      	mov	r2, ip
 8018f98:	e7e0      	b.n	8018f5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 8018f9a:	4599      	cmp	r9, r3
 8018f9c:	d20b      	bcs.n	8018fb6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 8018f9e:	eba5 0509 	sub.w	r5, r5, r9
 8018fa2:	2d00      	cmp	r5, #0
 8018fa4:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 8018fa8:	f300 8209 	bgt.w	80193be <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 8018fac:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8018fb0:	2301      	movs	r3, #1
 8018fb2:	9307      	str	r3, [sp, #28]
 8018fb4:	e00c      	b.n	8018fd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8018fb6:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8018fba:	eba9 0903 	sub.w	r9, r9, r3
 8018fbe:	e790      	b.n	8018ee2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 8018fc0:	4599      	cmp	r9, r3
 8018fc2:	d2fa      	bcs.n	8018fba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 8018fc4:	eba5 0509 	sub.w	r5, r5, r9
 8018fc8:	2d00      	cmp	r5, #0
 8018fca:	dc1d      	bgt.n	8019008 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 8018fcc:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8018fd0:	f04f 0b00 	mov.w	fp, #0
 8018fd4:	f1b8 0f00 	cmp.w	r8, #0
 8018fd8:	f340 81a1 	ble.w	801931e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 8018fdc:	783b      	ldrb	r3, [r7, #0]
 8018fde:	b2db      	uxtb	r3, r3
 8018fe0:	119a      	asrs	r2, r3, #6
 8018fe2:	f107 0a01 	add.w	sl, r7, #1
 8018fe6:	f040 80d7 	bne.w	8019198 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 8018fea:	9a03      	ldr	r2, [sp, #12]
 8018fec:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8018ff0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018ff4:	889e      	ldrh	r6, [r3, #4]
 8018ff6:	9b01      	ldr	r3, [sp, #4]
 8018ff8:	2bff      	cmp	r3, #255	@ 0xff
 8018ffa:	f040 81e9 	bne.w	80193d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 8018ffe:	8026      	strh	r6, [r4, #0]
 8019000:	f108 38ff 	add.w	r8, r8, #4294967295
 8019004:	3402      	adds	r4, #2
 8019006:	e0be      	b.n	8019186 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8019008:	9b02      	ldr	r3, [sp, #8]
 801900a:	9a02      	ldr	r2, [sp, #8]
 801900c:	42ab      	cmp	r3, r5
 801900e:	bfa8      	it	ge
 8019010:	462b      	movge	r3, r5
 8019012:	eba2 0803 	sub.w	r8, r2, r3
 8019016:	9a07      	ldr	r2, [sp, #28]
 8019018:	1aed      	subs	r5, r5, r3
 801901a:	2a00      	cmp	r2, #0
 801901c:	d05a      	beq.n	80190d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 801901e:	9a01      	ldr	r2, [sp, #4]
 8019020:	2aff      	cmp	r2, #255	@ 0xff
 8019022:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019026:	d049      	beq.n	80190bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8019028:	f8bd e004 	ldrh.w	lr, [sp, #4]
 801902c:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 8019030:	42a3      	cmp	r3, r4
 8019032:	f240 80a5 	bls.w	8019180 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8019036:	46bc      	mov	ip, r7
 8019038:	8820      	ldrh	r0, [r4, #0]
 801903a:	f81c 2b02 	ldrb.w	r2, [ip], #2
 801903e:	7879      	ldrb	r1, [r7, #1]
 8019040:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8019044:	b212      	sxth	r2, r2
 8019046:	b291      	uxth	r1, r2
 8019048:	ea4f 2a20 	mov.w	sl, r0, asr #8
 801904c:	120f      	asrs	r7, r1, #8
 801904e:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8019052:	fb1a fa09 	smulbb	sl, sl, r9
 8019056:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801905a:	fb07 a70e 	mla	r7, r7, lr, sl
 801905e:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 8019062:	00c0      	lsls	r0, r0, #3
 8019064:	10c9      	asrs	r1, r1, #3
 8019066:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801906a:	00d2      	lsls	r2, r2, #3
 801906c:	b2c0      	uxtb	r0, r0
 801906e:	fb1a fa09 	smulbb	sl, sl, r9
 8019072:	fb10 f009 	smulbb	r0, r0, r9
 8019076:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801907a:	b2d2      	uxtb	r2, r2
 801907c:	b2bf      	uxth	r7, r7
 801907e:	fb01 a10e 	mla	r1, r1, lr, sl
 8019082:	fb02 020e 	mla	r2, r2, lr, r0
 8019086:	b289      	uxth	r1, r1
 8019088:	b292      	uxth	r2, r2
 801908a:	1c78      	adds	r0, r7, #1
 801908c:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8019090:	f101 0a01 	add.w	sl, r1, #1
 8019094:	1c50      	adds	r0, r2, #1
 8019096:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801909a:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 801909e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80190a2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80190a6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80190aa:	4307      	orrs	r7, r0
 80190ac:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80190b0:	ea47 070a 	orr.w	r7, r7, sl
 80190b4:	f824 7b02 	strh.w	r7, [r4], #2
 80190b8:	4667      	mov	r7, ip
 80190ba:	e7b9      	b.n	8019030 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 80190bc:	42a3      	cmp	r3, r4
 80190be:	d95f      	bls.n	8019180 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 80190c0:	463a      	mov	r2, r7
 80190c2:	f812 1b02 	ldrb.w	r1, [r2], #2
 80190c6:	7878      	ldrb	r0, [r7, #1]
 80190c8:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 80190cc:	f824 1b02 	strh.w	r1, [r4], #2
 80190d0:	4617      	mov	r7, r2
 80190d2:	e7f3      	b.n	80190bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 80190d4:	9901      	ldr	r1, [sp, #4]
 80190d6:	29ff      	cmp	r1, #255	@ 0xff
 80190d8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80190dc:	b2b2      	uxth	r2, r6
 80190de:	d044      	beq.n	801916a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 80190e0:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80190e4:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 80190e8:	ea4f 2922 	mov.w	r9, r2, asr #8
 80190ec:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80190f0:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 80190f4:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80190f8:	4608      	mov	r0, r1
 80190fa:	fb09 f901 	mul.w	r9, r9, r1
 80190fe:	fb0e fe01 	mul.w	lr, lr, r1
 8019102:	00d1      	lsls	r1, r2, #3
 8019104:	b2c9      	uxtb	r1, r1
 8019106:	4341      	muls	r1, r0
 8019108:	429c      	cmp	r4, r3
 801910a:	f4bf af61 	bcs.w	8018fd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801910e:	8822      	ldrh	r2, [r4, #0]
 8019110:	1210      	asrs	r0, r2, #8
 8019112:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8019116:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801911a:	00d2      	lsls	r2, r2, #3
 801911c:	fb00 900a 	mla	r0, r0, sl, r9
 8019120:	b2d2      	uxtb	r2, r2
 8019122:	b280      	uxth	r0, r0
 8019124:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8019128:	fb02 120a 	mla	r2, r2, sl, r1
 801912c:	b292      	uxth	r2, r2
 801912e:	f100 0b01 	add.w	fp, r0, #1
 8019132:	fb0c ec0a 	mla	ip, ip, sl, lr
 8019136:	fa1f fc8c 	uxth.w	ip, ip
 801913a:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801913e:	1c50      	adds	r0, r2, #1
 8019140:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8019144:	f10c 0201 	add.w	r2, ip, #1
 8019148:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801914c:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 8019150:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8019154:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019158:	ea40 0b0b 	orr.w	fp, r0, fp
 801915c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8019160:	ea4b 0b0c 	orr.w	fp, fp, ip
 8019164:	f824 bb02 	strh.w	fp, [r4], #2
 8019168:	e7ce      	b.n	8019108 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 801916a:	429c      	cmp	r4, r3
 801916c:	f4bf af30 	bcs.w	8018fd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8019170:	f824 2b02 	strh.w	r2, [r4], #2
 8019174:	e7f9      	b.n	801916a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 8019176:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801917a:	4657      	mov	r7, sl
 801917c:	464d      	mov	r5, r9
 801917e:	e727      	b.n	8018fd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8019180:	2300      	movs	r3, #0
 8019182:	e716      	b.n	8018fb2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 8019184:	44bb      	add	fp, r7
 8019186:	4657      	mov	r7, sl
 8019188:	e724      	b.n	8018fd4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 801918a:	bf00      	nop
 801918c:	20015238 	.word	0x20015238
 8019190:	20015232 	.word	0x20015232
 8019194:	20000180 	.word	0x20000180
 8019198:	2a01      	cmp	r2, #1
 801919a:	d12a      	bne.n	80191f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 801919c:	f3c6 0104 	ubfx	r1, r6, #0, #5
 80191a0:	f003 0203 	and.w	r2, r3, #3
 80191a4:	3902      	subs	r1, #2
 80191a6:	4411      	add	r1, r2
 80191a8:	f001 011f 	and.w	r1, r1, #31
 80191ac:	f3c3 0081 	ubfx	r0, r3, #2, #2
 80191b0:	f361 0604 	bfi	r6, r1, #0, #5
 80191b4:	3802      	subs	r0, #2
 80191b6:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 80191ba:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80191be:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80191c2:	f360 164a 	bfi	r6, r0, #5, #6
 80191c6:	3b02      	subs	r3, #2
 80191c8:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 80191cc:	f002 031f 	and.w	r3, r2, #31
 80191d0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80191d4:	2203      	movs	r2, #3
 80191d6:	f363 26cf 	bfi	r6, r3, #11, #5
 80191da:	fb12 0303 	smlabb	r3, r2, r3, r0
 80191de:	2207      	movs	r2, #7
 80191e0:	fb12 3301 	smlabb	r3, r2, r1, r3
 80191e4:	9a03      	ldr	r2, [sp, #12]
 80191e6:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80191ea:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80191ee:	809e      	strh	r6, [r3, #4]
 80191f0:	e701      	b.n	8018ff6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 80191f2:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 80191f6:	45a8      	cmp	r8, r5
 80191f8:	4647      	mov	r7, r8
 80191fa:	bfa8      	it	ge
 80191fc:	462f      	movge	r7, r5
 80191fe:	2a02      	cmp	r2, #2
 8019200:	d154      	bne.n	80192ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 8019202:	9b01      	ldr	r3, [sp, #4]
 8019204:	2bff      	cmp	r3, #255	@ 0xff
 8019206:	d01a      	beq.n	801923e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8019208:	eb0b 0307 	add.w	r3, fp, r7
 801920c:	2b40      	cmp	r3, #64	@ 0x40
 801920e:	dd16      	ble.n	801923e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8019210:	ea4f 094b 	mov.w	r9, fp, lsl #1
 8019214:	4649      	mov	r1, r9
 8019216:	9800      	ldr	r0, [sp, #0]
 8019218:	f7e8 fefa 	bl	8002010 <_ZN8touchgfx5paint9flushLineEPmi>
 801921c:	465a      	mov	r2, fp
 801921e:	9b01      	ldr	r3, [sp, #4]
 8019220:	9900      	ldr	r1, [sp, #0]
 8019222:	4620      	mov	r0, r4
 8019224:	f7e8 ff1e 	bl	8002064 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8019228:	9b00      	ldr	r3, [sp, #0]
 801922a:	461a      	mov	r2, r3
 801922c:	4b6c      	ldr	r3, [pc, #432]	@ (80193e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801922e:	429a      	cmp	r2, r3
 8019230:	bf0c      	ite	eq
 8019232:	4b6c      	ldreq	r3, [pc, #432]	@ (80193e4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8019234:	4b6a      	ldrne	r3, [pc, #424]	@ (80193e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8019236:	9300      	str	r3, [sp, #0]
 8019238:	444c      	add	r4, r9
 801923a:	f04f 0b00 	mov.w	fp, #0
 801923e:	4652      	mov	r2, sl
 8019240:	2100      	movs	r1, #0
 8019242:	42a9      	cmp	r1, r5
 8019244:	da2c      	bge.n	80192a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 8019246:	4694      	mov	ip, r2
 8019248:	f04f 0903 	mov.w	r9, #3
 801924c:	f81c 3b02 	ldrb.w	r3, [ip], #2
 8019250:	7852      	ldrb	r2, [r2, #1]
 8019252:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8019256:	f3c3 1045 	ubfx	r0, r3, #5, #6
 801925a:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 801925e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8019262:	f003 021f 	and.w	r2, r3, #31
 8019266:	fb19 000e 	smlabb	r0, r9, lr, r0
 801926a:	f04f 0e07 	mov.w	lr, #7
 801926e:	fb1e 0002 	smlabb	r0, lr, r2, r0
 8019272:	9a03      	ldr	r2, [sp, #12]
 8019274:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8019278:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801927c:	42b9      	cmp	r1, r7
 801927e:	461e      	mov	r6, r3
 8019280:	8083      	strh	r3, [r0, #4]
 8019282:	da0a      	bge.n	801929a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 8019284:	9a01      	ldr	r2, [sp, #4]
 8019286:	2aff      	cmp	r2, #255	@ 0xff
 8019288:	bf15      	itete	ne
 801928a:	9a00      	ldrne	r2, [sp, #0]
 801928c:	8023      	strheq	r3, [r4, #0]
 801928e:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 8019292:	3402      	addeq	r4, #2
 8019294:	bf18      	it	ne
 8019296:	f10b 0b01 	addne.w	fp, fp, #1
 801929a:	3101      	adds	r1, #1
 801929c:	4662      	mov	r2, ip
 801929e:	e7d0      	b.n	8019242 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 80192a0:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 80192a4:	eba8 0807 	sub.w	r8, r8, r7
 80192a8:	1bed      	subs	r5, r5, r7
 80192aa:	e76c      	b.n	8019186 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 80192ac:	9b01      	ldr	r3, [sp, #4]
 80192ae:	2bff      	cmp	r3, #255	@ 0xff
 80192b0:	eba8 0807 	sub.w	r8, r8, r7
 80192b4:	eba5 0507 	sub.w	r5, r5, r7
 80192b8:	fa1f f986 	uxth.w	r9, r6
 80192bc:	d027      	beq.n	801930e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 80192be:	eb0b 0307 	add.w	r3, fp, r7
 80192c2:	2b40      	cmp	r3, #64	@ 0x40
 80192c4:	dd18      	ble.n	80192f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 80192c6:	ea4f 034b 	mov.w	r3, fp, lsl #1
 80192ca:	4619      	mov	r1, r3
 80192cc:	9800      	ldr	r0, [sp, #0]
 80192ce:	930c      	str	r3, [sp, #48]	@ 0x30
 80192d0:	f7e8 fe9e 	bl	8002010 <_ZN8touchgfx5paint9flushLineEPmi>
 80192d4:	465a      	mov	r2, fp
 80192d6:	9b01      	ldr	r3, [sp, #4]
 80192d8:	9900      	ldr	r1, [sp, #0]
 80192da:	4620      	mov	r0, r4
 80192dc:	f7e8 fec2 	bl	8002064 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 80192e0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80192e2:	441c      	add	r4, r3
 80192e4:	9b00      	ldr	r3, [sp, #0]
 80192e6:	461a      	mov	r2, r3
 80192e8:	4b3d      	ldr	r3, [pc, #244]	@ (80193e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 80192ea:	429a      	cmp	r2, r3
 80192ec:	bf0c      	ite	eq
 80192ee:	4b3d      	ldreq	r3, [pc, #244]	@ (80193e4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 80192f0:	4b3b      	ldrne	r3, [pc, #236]	@ (80193e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 80192f2:	9300      	str	r3, [sp, #0]
 80192f4:	f04f 0b00 	mov.w	fp, #0
 80192f8:	9b00      	ldr	r3, [sp, #0]
 80192fa:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 80192fe:	463b      	mov	r3, r7
 8019300:	2b00      	cmp	r3, #0
 8019302:	f43f af3f 	beq.w	8019184 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 8019306:	f822 9b02 	strh.w	r9, [r2], #2
 801930a:	3b01      	subs	r3, #1
 801930c:	e7f8      	b.n	8019300 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 801930e:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 8019312:	42a7      	cmp	r7, r4
 8019314:	f67f af37 	bls.w	8019186 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8019318:	f824 9b02 	strh.w	r9, [r4], #2
 801931c:	e7f9      	b.n	8019312 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 801931e:	f1bb 0f00 	cmp.w	fp, #0
 8019322:	d00c      	beq.n	801933e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 8019324:	ea4f 084b 	mov.w	r8, fp, lsl #1
 8019328:	4641      	mov	r1, r8
 801932a:	9800      	ldr	r0, [sp, #0]
 801932c:	f7e8 fe70 	bl	8002010 <_ZN8touchgfx5paint9flushLineEPmi>
 8019330:	4620      	mov	r0, r4
 8019332:	9b01      	ldr	r3, [sp, #4]
 8019334:	9900      	ldr	r1, [sp, #0]
 8019336:	465a      	mov	r2, fp
 8019338:	f7e8 fe94 	bl	8002064 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801933c:	4444      	add	r4, r8
 801933e:	4b2a      	ldr	r3, [pc, #168]	@ (80193e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 8019340:	9a02      	ldr	r2, [sp, #8]
 8019342:	881b      	ldrh	r3, [r3, #0]
 8019344:	1a9b      	subs	r3, r3, r2
 8019346:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801934a:	9b06      	ldr	r3, [sp, #24]
 801934c:	3301      	adds	r3, #1
 801934e:	9306      	str	r3, [sp, #24]
 8019350:	9a06      	ldr	r2, [sp, #24]
 8019352:	9b04      	ldr	r3, [sp, #16]
 8019354:	4293      	cmp	r3, r2
 8019356:	d120      	bne.n	801939a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 8019358:	9b05      	ldr	r3, [sp, #20]
 801935a:	9a05      	ldr	r2, [sp, #20]
 801935c:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 8019360:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8019364:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8019366:	f103 0801 	add.w	r8, r3, #1
 801936a:	9b08      	ldr	r3, [sp, #32]
 801936c:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8019370:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019372:	ba3f      	rev	r7, r7
 8019374:	2280      	movs	r2, #128	@ 0x80
 8019376:	2100      	movs	r1, #0
 8019378:	441f      	add	r7, r3
 801937a:	eba9 0905 	sub.w	r9, r9, r5
 801937e:	f00c f9a0 	bl	80256c2 <memset>
 8019382:	2300      	movs	r3, #0
 8019384:	fa1f f989 	uxth.w	r9, r9
 8019388:	f04f 0600 	mov.w	r6, #0
 801938c:	f8cd 8014 	str.w	r8, [sp, #20]
 8019390:	9306      	str	r3, [sp, #24]
 8019392:	f7e8 fe33 	bl	8001ffc <_ZN8touchgfx5paint8tearDownEv>
 8019396:	46ba      	mov	sl, r7
 8019398:	e58a      	b.n	8018eb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 801939a:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 801939e:	9b02      	ldr	r3, [sp, #8]
 80193a0:	eba9 0903 	sub.w	r9, r9, r3
 80193a4:	eba9 0505 	sub.w	r5, r9, r5
 80193a8:	fa1f f985 	uxth.w	r9, r5
 80193ac:	e7f1      	b.n	8019392 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 80193ae:	4b0f      	ldr	r3, [pc, #60]	@ (80193ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 80193b0:	6818      	ldr	r0, [r3, #0]
 80193b2:	6803      	ldr	r3, [r0, #0]
 80193b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80193b6:	4798      	blx	r3
 80193b8:	b013      	add	sp, #76	@ 0x4c
 80193ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80193be:	9b02      	ldr	r3, [sp, #8]
 80193c0:	9a02      	ldr	r2, [sp, #8]
 80193c2:	42ab      	cmp	r3, r5
 80193c4:	bfa8      	it	ge
 80193c6:	462b      	movge	r3, r5
 80193c8:	eba2 0803 	sub.w	r8, r2, r3
 80193cc:	1aed      	subs	r5, r5, r3
 80193ce:	e626      	b.n	801901e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 80193d0:	f108 38ff 	add.w	r8, r8, #4294967295
 80193d4:	fa1f f986 	uxth.w	r9, r6
 80193d8:	2500      	movs	r5, #0
 80193da:	2701      	movs	r7, #1
 80193dc:	e76f      	b.n	80192be <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 80193de:	bf00      	nop
 80193e0:	20000180 	.word	0x20000180
 80193e4:	20000280 	.word	0x20000280
 80193e8:	20015232 	.word	0x20015232
 80193ec:	20015238 	.word	0x20015238

080193f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80193f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80193f4:	b08f      	sub	sp, #60	@ 0x3c
 80193f6:	461c      	mov	r4, r3
 80193f8:	9203      	str	r2, [sp, #12]
 80193fa:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80193fe:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8019400:	9202      	str	r2, [sp, #8]
 8019402:	460f      	mov	r7, r1
 8019404:	2a00      	cmp	r2, #0
 8019406:	f000 8128 	beq.w	801965a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801940a:	6820      	ldr	r0, [r4, #0]
 801940c:	6861      	ldr	r1, [r4, #4]
 801940e:	aa0a      	add	r2, sp, #40	@ 0x28
 8019410:	c203      	stmia	r2!, {r0, r1}
 8019412:	6818      	ldr	r0, [r3, #0]
 8019414:	6859      	ldr	r1, [r3, #4]
 8019416:	aa0c      	add	r2, sp, #48	@ 0x30
 8019418:	c203      	stmia	r2!, {r0, r1}
 801941a:	a80a      	add	r0, sp, #40	@ 0x28
 801941c:	f7f8 f8a4 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019420:	4621      	mov	r1, r4
 8019422:	a80c      	add	r0, sp, #48	@ 0x30
 8019424:	f7f8 f8c8 	bl	80115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019428:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801942c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8019430:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8019434:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8019438:	bfde      	ittt	le
 801943a:	b2b3      	uxthle	r3, r6
 801943c:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8019440:	fb92 f3f3 	sdivle	r3, r2, r3
 8019444:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8019448:	bfc8      	it	gt
 801944a:	2301      	movgt	r3, #1
 801944c:	fb92 f1f3 	sdiv	r1, r2, r3
 8019450:	fa1f fc81 	uxth.w	ip, r1
 8019454:	fb0c 2413 	mls	r4, ip, r3, r2
 8019458:	fb14 f406 	smulbb	r4, r4, r6
 801945c:	441d      	add	r5, r3
 801945e:	4404      	add	r4, r0
 8019460:	4661      	mov	r1, ip
 8019462:	3d01      	subs	r5, #1
 8019464:	b2a4      	uxth	r4, r4
 8019466:	fb95 f5f3 	sdiv	r5, r5, r3
 801946a:	b121      	cbz	r1, 8019476 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801946c:	9b03      	ldr	r3, [sp, #12]
 801946e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8019472:	ba1b      	rev	r3, r3
 8019474:	441f      	add	r7, r3
 8019476:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801947a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801947e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8019482:	4418      	add	r0, r3
 8019484:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8019488:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801948c:	441a      	add	r2, r3
 801948e:	4b74      	ldr	r3, [pc, #464]	@ (8019660 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8019490:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8019494:	6818      	ldr	r0, [r3, #0]
 8019496:	6803      	ldr	r3, [r0, #0]
 8019498:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801949a:	4798      	blx	r3
 801949c:	4a71      	ldr	r2, [pc, #452]	@ (8019664 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801949e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80194a2:	8813      	ldrh	r3, [r2, #0]
 80194a4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 80194a8:	9209      	str	r2, [sp, #36]	@ 0x24
 80194aa:	fb03 c101 	mla	r1, r3, r1, ip
 80194ae:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80194b2:	4373      	muls	r3, r6
 80194b4:	b2ad      	uxth	r5, r5
 80194b6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80194ba:	00ad      	lsls	r5, r5, #2
 80194bc:	2c00      	cmp	r4, #0
 80194be:	9304      	str	r3, [sp, #16]
 80194c0:	f105 0304 	add.w	r3, r5, #4
 80194c4:	9305      	str	r3, [sp, #20]
 80194c6:	bf0c      	ite	eq
 80194c8:	46c8      	moveq	r8, r9
 80194ca:	f04f 0800 	movne.w	r8, #0
 80194ce:	2300      	movs	r3, #0
 80194d0:	fa1f f888 	uxth.w	r8, r8
 80194d4:	9301      	str	r3, [sp, #4]
 80194d6:	9a04      	ldr	r2, [sp, #16]
 80194d8:	4282      	cmp	r2, r0
 80194da:	f240 80b9 	bls.w	8019650 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 80194de:	b95b      	cbnz	r3, 80194f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 80194e0:	783a      	ldrb	r2, [r7, #0]
 80194e2:	0993      	lsrs	r3, r2, #6
 80194e4:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80194e8:	9201      	str	r2, [sp, #4]
 80194ea:	1e5a      	subs	r2, r3, #1
 80194ec:	2a02      	cmp	r2, #2
 80194ee:	bf8d      	iteet	hi
 80194f0:	787b      	ldrbhi	r3, [r7, #1]
 80194f2:	3701      	addls	r7, #1
 80194f4:	b29b      	uxthls	r3, r3
 80194f6:	3702      	addhi	r7, #2
 80194f8:	b184      	cbz	r4, 801951c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 80194fa:	429c      	cmp	r4, r3
 80194fc:	bf95      	itete	ls
 80194fe:	1b1c      	subls	r4, r3, r4
 8019500:	1ae4      	subhi	r4, r4, r3
 8019502:	fa1f fa84 	uxthls.w	sl, r4
 8019506:	b2a4      	uxthhi	r4, r4
 8019508:	bf87      	ittee	hi
 801950a:	46c4      	movhi	ip, r8
 801950c:	f04f 0a00 	movhi.w	sl, #0
 8019510:	fa1f fc89 	uxthls.w	ip, r9
 8019514:	2400      	movls	r4, #0
 8019516:	4653      	mov	r3, sl
 8019518:	46e0      	mov	r8, ip
 801951a:	e7dc      	b.n	80194d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801951c:	2204      	movs	r2, #4
 801951e:	4615      	mov	r5, r2
 8019520:	9905      	ldr	r1, [sp, #20]
 8019522:	9a01      	ldr	r2, [sp, #4]
 8019524:	fb15 1202 	smlabb	r2, r5, r2, r1
 8019528:	9903      	ldr	r1, [sp, #12]
 801952a:	588a      	ldr	r2, [r1, r2]
 801952c:	4543      	cmp	r3, r8
 801952e:	bf27      	ittee	cs
 8019530:	eba3 0a08 	subcs.w	sl, r3, r8
 8019534:	46c6      	movcs	lr, r8
 8019536:	eba8 0c03 	subcc.w	ip, r8, r3
 801953a:	469e      	movcc	lr, r3
 801953c:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8019540:	bf27      	ittee	cs
 8019542:	fa1f fa8a 	uxthcs.w	sl, sl
 8019546:	46a4      	movcs	ip, r4
 8019548:	fa1f fc8c 	uxthcc.w	ip, ip
 801954c:	46a2      	movcc	sl, r4
 801954e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8019552:	2900      	cmp	r1, #0
 8019554:	d066      	beq.n	8019624 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 8019556:	29ff      	cmp	r1, #255	@ 0xff
 8019558:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801955c:	d114      	bne.n	8019588 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801955e:	9d02      	ldr	r5, [sp, #8]
 8019560:	2dff      	cmp	r5, #255	@ 0xff
 8019562:	d111      	bne.n	8019588 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8019564:	0951      	lsrs	r1, r2, #5
 8019566:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801956a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801956e:	f026 0607 	bic.w	r6, r6, #7
 8019572:	430e      	orrs	r6, r1
 8019574:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019578:	4316      	orrs	r6, r2
 801957a:	b2b6      	uxth	r6, r6
 801957c:	4486      	add	lr, r0
 801957e:	4586      	cmp	lr, r0
 8019580:	d051      	beq.n	8019626 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8019582:	f820 6b02 	strh.w	r6, [r0], #2
 8019586:	e7fa      	b.n	801957e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8019588:	9d02      	ldr	r5, [sp, #8]
 801958a:	4369      	muls	r1, r5
 801958c:	1c4d      	adds	r5, r1, #1
 801958e:	eb05 2521 	add.w	r5, r5, r1, asr #8
 8019592:	122d      	asrs	r5, r5, #8
 8019594:	ea6f 0b05 	mvn.w	fp, r5
 8019598:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801959c:	b2ad      	uxth	r5, r5
 801959e:	b2f6      	uxtb	r6, r6
 80195a0:	b2d2      	uxtb	r2, r2
 80195a2:	fb11 f105 	smulbb	r1, r1, r5
 80195a6:	fb16 f605 	smulbb	r6, r6, r5
 80195aa:	fb12 f205 	smulbb	r2, r2, r5
 80195ae:	b289      	uxth	r1, r1
 80195b0:	b2b6      	uxth	r6, r6
 80195b2:	b292      	uxth	r2, r2
 80195b4:	9106      	str	r1, [sp, #24]
 80195b6:	9607      	str	r6, [sp, #28]
 80195b8:	9208      	str	r2, [sp, #32]
 80195ba:	4486      	add	lr, r0
 80195bc:	fa5f fb8b 	uxtb.w	fp, fp
 80195c0:	4586      	cmp	lr, r0
 80195c2:	d030      	beq.n	8019626 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80195c4:	8802      	ldrh	r2, [r0, #0]
 80195c6:	9906      	ldr	r1, [sp, #24]
 80195c8:	1216      	asrs	r6, r2, #8
 80195ca:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80195ce:	10d5      	asrs	r5, r2, #3
 80195d0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80195d4:	fb06 160b 	mla	r6, r6, fp, r1
 80195d8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80195dc:	9907      	ldr	r1, [sp, #28]
 80195de:	00d2      	lsls	r2, r2, #3
 80195e0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80195e4:	fb05 150b 	mla	r5, r5, fp, r1
 80195e8:	b2d2      	uxtb	r2, r2
 80195ea:	9908      	ldr	r1, [sp, #32]
 80195ec:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80195f0:	b2b6      	uxth	r6, r6
 80195f2:	fb02 120b 	mla	r2, r2, fp, r1
 80195f6:	b292      	uxth	r2, r2
 80195f8:	1c71      	adds	r1, r6, #1
 80195fa:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 80195fe:	1c51      	adds	r1, r2, #1
 8019600:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019604:	b2ad      	uxth	r5, r5
 8019606:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801960a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801960e:	4316      	orrs	r6, r2
 8019610:	1c6a      	adds	r2, r5, #1
 8019612:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8019616:	096d      	lsrs	r5, r5, #5
 8019618:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801961c:	432e      	orrs	r6, r5
 801961e:	f820 6b02 	strh.w	r6, [r0], #2
 8019622:	e7cd      	b.n	80195c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8019624:	4470      	add	r0, lr
 8019626:	4543      	cmp	r3, r8
 8019628:	f4ff af75 	bcc.w	8019516 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801962c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8019630:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019632:	fa1f fc89 	uxth.w	ip, r9
 8019636:	eba4 040c 	sub.w	r4, r4, ip
 801963a:	881b      	ldrh	r3, [r3, #0]
 801963c:	b2a4      	uxth	r4, r4
 801963e:	2c00      	cmp	r4, #0
 8019640:	eba3 0309 	sub.w	r3, r3, r9
 8019644:	bf18      	it	ne
 8019646:	f04f 0c00 	movne.w	ip, #0
 801964a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801964e:	e762      	b.n	8019516 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8019650:	4b03      	ldr	r3, [pc, #12]	@ (8019660 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8019652:	6818      	ldr	r0, [r3, #0]
 8019654:	6803      	ldr	r3, [r0, #0]
 8019656:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019658:	4798      	blx	r3
 801965a:	b00f      	add	sp, #60	@ 0x3c
 801965c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019660:	20015238 	.word	0x20015238
 8019664:	20015232 	.word	0x20015232

08019668 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8019668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801966c:	b093      	sub	sp, #76	@ 0x4c
 801966e:	461c      	mov	r4, r3
 8019670:	9205      	str	r2, [sp, #20]
 8019672:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 8019676:	9101      	str	r1, [sp, #4]
 8019678:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801967a:	9202      	str	r2, [sp, #8]
 801967c:	2a00      	cmp	r2, #0
 801967e:	f000 812c 	beq.w	80198da <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8019682:	6820      	ldr	r0, [r4, #0]
 8019684:	6861      	ldr	r1, [r4, #4]
 8019686:	aa0e      	add	r2, sp, #56	@ 0x38
 8019688:	c203      	stmia	r2!, {r0, r1}
 801968a:	6818      	ldr	r0, [r3, #0]
 801968c:	6859      	ldr	r1, [r3, #4]
 801968e:	aa10      	add	r2, sp, #64	@ 0x40
 8019690:	c203      	stmia	r2!, {r0, r1}
 8019692:	a80e      	add	r0, sp, #56	@ 0x38
 8019694:	f7f7 ff68 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019698:	4621      	mov	r1, r4
 801969a:	a810      	add	r0, sp, #64	@ 0x40
 801969c:	f7f7 ff8c 	bl	80115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80196a0:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 80196a4:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 80196a8:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 80196ac:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80196b0:	bfde      	ittt	le
 80196b2:	b2b3      	uxthle	r3, r6
 80196b4:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80196b8:	fb92 f3f3 	sdivle	r3, r2, r3
 80196bc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80196c0:	bfc8      	it	gt
 80196c2:	2301      	movgt	r3, #1
 80196c4:	fb92 f1f3 	sdiv	r1, r2, r3
 80196c8:	fa1f fc81 	uxth.w	ip, r1
 80196cc:	fb0c 2413 	mls	r4, ip, r3, r2
 80196d0:	fb14 f406 	smulbb	r4, r4, r6
 80196d4:	441d      	add	r5, r3
 80196d6:	4404      	add	r4, r0
 80196d8:	4661      	mov	r1, ip
 80196da:	3d01      	subs	r5, #1
 80196dc:	b2a4      	uxth	r4, r4
 80196de:	fb95 f5f3 	sdiv	r5, r5, r3
 80196e2:	b131      	cbz	r1, 80196f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 80196e4:	9b05      	ldr	r3, [sp, #20]
 80196e6:	9901      	ldr	r1, [sp, #4]
 80196e8:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80196ec:	ba1b      	rev	r3, r3
 80196ee:	4419      	add	r1, r3
 80196f0:	9101      	str	r1, [sp, #4]
 80196f2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 80196f6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 80196fa:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 80196fe:	4418      	add	r0, r3
 8019700:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8019704:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8019708:	441a      	add	r2, r3
 801970a:	4b75      	ldr	r3, [pc, #468]	@ (80198e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801970c:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8019710:	6818      	ldr	r0, [r3, #0]
 8019712:	6803      	ldr	r3, [r0, #0]
 8019714:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019716:	4798      	blx	r3
 8019718:	4972      	ldr	r1, [pc, #456]	@ (80198e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801971a:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 801971e:	880b      	ldrh	r3, [r1, #0]
 8019720:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8019724:	910d      	str	r1, [sp, #52]	@ 0x34
 8019726:	fb03 c202 	mla	r2, r3, r2, ip
 801972a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801972e:	4373      	muls	r3, r6
 8019730:	b2ad      	uxth	r5, r5
 8019732:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019736:	00ad      	lsls	r5, r5, #2
 8019738:	9308      	str	r3, [sp, #32]
 801973a:	1d2b      	adds	r3, r5, #4
 801973c:	9309      	str	r3, [sp, #36]	@ 0x24
 801973e:	9b02      	ldr	r3, [sp, #8]
 8019740:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8019744:	9106      	str	r1, [sp, #24]
 8019746:	43da      	mvns	r2, r3
 8019748:	2c00      	cmp	r4, #0
 801974a:	bf0c      	ite	eq
 801974c:	46dc      	moveq	ip, fp
 801974e:	f04f 0c00 	movne.w	ip, #0
 8019752:	2300      	movs	r3, #0
 8019754:	b2d2      	uxtb	r2, r2
 8019756:	fa1f fc8c 	uxth.w	ip, ip
 801975a:	9303      	str	r3, [sp, #12]
 801975c:	9207      	str	r2, [sp, #28]
 801975e:	9a08      	ldr	r2, [sp, #32]
 8019760:	4282      	cmp	r2, r0
 8019762:	f240 80b5 	bls.w	80198d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8019766:	b963      	cbnz	r3, 8019782 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8019768:	9b01      	ldr	r3, [sp, #4]
 801976a:	781a      	ldrb	r2, [r3, #0]
 801976c:	0993      	lsrs	r3, r2, #6
 801976e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8019772:	9203      	str	r2, [sp, #12]
 8019774:	1e5a      	subs	r2, r3, #1
 8019776:	2a02      	cmp	r2, #2
 8019778:	d815      	bhi.n	80197a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801977a:	9a01      	ldr	r2, [sp, #4]
 801977c:	3201      	adds	r2, #1
 801977e:	9201      	str	r2, [sp, #4]
 8019780:	b29b      	uxth	r3, r3
 8019782:	b1b4      	cbz	r4, 80197b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 8019784:	429c      	cmp	r4, r3
 8019786:	bf95      	itete	ls
 8019788:	1b1c      	subls	r4, r3, r4
 801978a:	1ae4      	subhi	r4, r4, r3
 801978c:	fa1f f884 	uxthls.w	r8, r4
 8019790:	b2a4      	uxthhi	r4, r4
 8019792:	bf87      	ittee	hi
 8019794:	4666      	movhi	r6, ip
 8019796:	f04f 0800 	movhi.w	r8, #0
 801979a:	fa1f f68b 	uxthls.w	r6, fp
 801979e:	2400      	movls	r4, #0
 80197a0:	4643      	mov	r3, r8
 80197a2:	46b4      	mov	ip, r6
 80197a4:	e7db      	b.n	801975e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 80197a6:	9a01      	ldr	r2, [sp, #4]
 80197a8:	9b01      	ldr	r3, [sp, #4]
 80197aa:	3202      	adds	r2, #2
 80197ac:	785b      	ldrb	r3, [r3, #1]
 80197ae:	9201      	str	r2, [sp, #4]
 80197b0:	e7e7      	b.n	8019782 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 80197b2:	2203      	movs	r2, #3
 80197b4:	4615      	mov	r5, r2
 80197b6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80197b8:	9a03      	ldr	r2, [sp, #12]
 80197ba:	fb15 1202 	smlabb	r2, r5, r2, r1
 80197be:	9905      	ldr	r1, [sp, #20]
 80197c0:	4563      	cmp	r3, ip
 80197c2:	eb01 0502 	add.w	r5, r1, r2
 80197c6:	9902      	ldr	r1, [sp, #8]
 80197c8:	bf29      	itett	cs
 80197ca:	eba3 080c 	subcs.w	r8, r3, ip
 80197ce:	ebac 0603 	subcc.w	r6, ip, r3
 80197d2:	fa1f f888 	uxthcs.w	r8, r8
 80197d6:	46e1      	movcs	r9, ip
 80197d8:	bf2f      	iteee	cs
 80197da:	4626      	movcs	r6, r4
 80197dc:	b2b6      	uxthcc	r6, r6
 80197de:	4699      	movcc	r9, r3
 80197e0:	46a0      	movcc	r8, r4
 80197e2:	29ff      	cmp	r1, #255	@ 0xff
 80197e4:	d04a      	beq.n	801987c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 80197e6:	9f06      	ldr	r7, [sp, #24]
 80197e8:	78a9      	ldrb	r1, [r5, #2]
 80197ea:	9004      	str	r0, [sp, #16]
 80197ec:	4379      	muls	r1, r7
 80197ee:	910a      	str	r1, [sp, #40]	@ 0x28
 80197f0:	7869      	ldrb	r1, [r5, #1]
 80197f2:	4379      	muls	r1, r7
 80197f4:	910b      	str	r1, [sp, #44]	@ 0x2c
 80197f6:	9905      	ldr	r1, [sp, #20]
 80197f8:	5c8a      	ldrb	r2, [r1, r2]
 80197fa:	437a      	muls	r2, r7
 80197fc:	920c      	str	r2, [sp, #48]	@ 0x30
 80197fe:	46ca      	mov	sl, r9
 8019800:	f1ba 0f00 	cmp.w	sl, #0
 8019804:	d03d      	beq.n	8019882 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 8019806:	9a04      	ldr	r2, [sp, #16]
 8019808:	9f07      	ldr	r7, [sp, #28]
 801980a:	8812      	ldrh	r2, [r2, #0]
 801980c:	1215      	asrs	r5, r2, #8
 801980e:	46be      	mov	lr, r7
 8019810:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8019814:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8019816:	10d1      	asrs	r1, r2, #3
 8019818:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801981c:	fb05 750e 	mla	r5, r5, lr, r7
 8019820:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8019824:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8019826:	00d2      	lsls	r2, r2, #3
 8019828:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801982c:	fb01 710e 	mla	r1, r1, lr, r7
 8019830:	b2d2      	uxtb	r2, r2
 8019832:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8019834:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8019838:	b2ad      	uxth	r5, r5
 801983a:	fb02 720e 	mla	r2, r2, lr, r7
 801983e:	b292      	uxth	r2, r2
 8019840:	f105 0e01 	add.w	lr, r5, #1
 8019844:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8019848:	f102 0e01 	add.w	lr, r2, #1
 801984c:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8019850:	b289      	uxth	r1, r1
 8019852:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019856:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801985a:	4315      	orrs	r5, r2
 801985c:	1c4a      	adds	r2, r1, #1
 801985e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019862:	0949      	lsrs	r1, r1, #5
 8019864:	9a04      	ldr	r2, [sp, #16]
 8019866:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801986a:	430d      	orrs	r5, r1
 801986c:	f822 5b02 	strh.w	r5, [r2], #2
 8019870:	f10a 3aff 	add.w	sl, sl, #4294967295
 8019874:	9204      	str	r2, [sp, #16]
 8019876:	fa1f fa8a 	uxth.w	sl, sl
 801987a:	e7c1      	b.n	8019800 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801987c:	4649      	mov	r1, r9
 801987e:	4686      	mov	lr, r0
 8019880:	b999      	cbnz	r1, 80198aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8019882:	4563      	cmp	r3, ip
 8019884:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8019888:	d38a      	bcc.n	80197a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801988a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 801988e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019890:	fa1f f68b 	uxth.w	r6, fp
 8019894:	1ba4      	subs	r4, r4, r6
 8019896:	881b      	ldrh	r3, [r3, #0]
 8019898:	b2a4      	uxth	r4, r4
 801989a:	2c00      	cmp	r4, #0
 801989c:	eba3 030b 	sub.w	r3, r3, fp
 80198a0:	bf18      	it	ne
 80198a2:	2600      	movne	r6, #0
 80198a4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80198a8:	e77a      	b.n	80197a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 80198aa:	78aa      	ldrb	r2, [r5, #2]
 80198ac:	4f0e      	ldr	r7, [pc, #56]	@ (80198e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 80198ae:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 80198b2:	786a      	ldrb	r2, [r5, #1]
 80198b4:	00d2      	lsls	r2, r2, #3
 80198b6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80198ba:	ea4a 0202 	orr.w	r2, sl, r2
 80198be:	f895 a000 	ldrb.w	sl, [r5]
 80198c2:	3901      	subs	r1, #1
 80198c4:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 80198c8:	f82e 2b02 	strh.w	r2, [lr], #2
 80198cc:	b289      	uxth	r1, r1
 80198ce:	e7d7      	b.n	8019880 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 80198d0:	4b03      	ldr	r3, [pc, #12]	@ (80198e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 80198d2:	6818      	ldr	r0, [r3, #0]
 80198d4:	6803      	ldr	r3, [r0, #0]
 80198d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80198d8:	4798      	blx	r3
 80198da:	b013      	add	sp, #76	@ 0x4c
 80198dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80198e0:	20015238 	.word	0x20015238
 80198e4:	20015232 	.word	0x20015232
 80198e8:	fffff800 	.word	0xfffff800

080198ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80198ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80198f0:	b09d      	sub	sp, #116	@ 0x74
 80198f2:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 80198f6:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 80198fa:	920e      	str	r2, [sp, #56]	@ 0x38
 80198fc:	461c      	mov	r4, r3
 80198fe:	4683      	mov	fp, r0
 8019900:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8019902:	2a00      	cmp	r2, #0
 8019904:	f000 81e0 	beq.w	8019cc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 8019908:	6820      	ldr	r0, [r4, #0]
 801990a:	6861      	ldr	r1, [r4, #4]
 801990c:	aa18      	add	r2, sp, #96	@ 0x60
 801990e:	c203      	stmia	r2!, {r0, r1}
 8019910:	6818      	ldr	r0, [r3, #0]
 8019912:	6859      	ldr	r1, [r3, #4]
 8019914:	aa1a      	add	r2, sp, #104	@ 0x68
 8019916:	c203      	stmia	r2!, {r0, r1}
 8019918:	a818      	add	r0, sp, #96	@ 0x60
 801991a:	f7f7 fe25 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801991e:	4621      	mov	r1, r4
 8019920:	a81a      	add	r0, sp, #104	@ 0x68
 8019922:	f7f7 fe49 	bl	80115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019926:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 801992a:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 801992e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8019932:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8019936:	bfd7      	itett	le
 8019938:	b29a      	uxthle	r2, r3
 801993a:	2201      	movgt	r2, #1
 801993c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8019940:	fb91 f2f2 	sdivle	r2, r1, r2
 8019944:	9202      	str	r2, [sp, #8]
 8019946:	9802      	ldr	r0, [sp, #8]
 8019948:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 801994c:	fb92 f0f0 	sdiv	r0, r2, r0
 8019950:	b280      	uxth	r0, r0
 8019952:	900f      	str	r0, [sp, #60]	@ 0x3c
 8019954:	9902      	ldr	r1, [sp, #8]
 8019956:	9802      	ldr	r0, [sp, #8]
 8019958:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801995a:	440c      	add	r4, r1
 801995c:	fb05 2510 	mls	r5, r5, r0, r2
 8019960:	fb15 f503 	smulbb	r5, r5, r3
 8019964:	3c01      	subs	r4, #1
 8019966:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 801996a:	fb94 f4f1 	sdiv	r4, r4, r1
 801996e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8019972:	440d      	add	r5, r1
 8019974:	4419      	add	r1, r3
 8019976:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 801997a:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 801997e:	441a      	add	r2, r3
 8019980:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8019984:	9306      	str	r3, [sp, #24]
 8019986:	4bb3      	ldr	r3, [pc, #716]	@ (8019c54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 8019988:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 801998c:	6818      	ldr	r0, [r3, #0]
 801998e:	6803      	ldr	r3, [r0, #0]
 8019990:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019992:	4798      	blx	r3
 8019994:	4bb0      	ldr	r3, [pc, #704]	@ (8019c58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 8019996:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 801999a:	881a      	ldrh	r2, [r3, #0]
 801999c:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 80199a0:	9316      	str	r3, [sp, #88]	@ 0x58
 80199a2:	fb02 7101 	mla	r1, r2, r1, r7
 80199a6:	3401      	adds	r4, #1
 80199a8:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 80199ac:	b2a4      	uxth	r4, r4
 80199ae:	4356      	muls	r6, r2
 80199b0:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 80199b4:	00a4      	lsls	r4, r4, #2
 80199b6:	920a      	str	r2, [sp, #40]	@ 0x28
 80199b8:	1d22      	adds	r2, r4, #4
 80199ba:	b2ad      	uxth	r5, r5
 80199bc:	9213      	str	r2, [sp, #76]	@ 0x4c
 80199be:	4ba7      	ldr	r3, [pc, #668]	@ (8019c5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 80199c0:	9a06      	ldr	r2, [sp, #24]
 80199c2:	2d00      	cmp	r5, #0
 80199c4:	bf0c      	ite	eq
 80199c6:	4611      	moveq	r1, r2
 80199c8:	2100      	movne	r1, #0
 80199ca:	2200      	movs	r2, #0
 80199cc:	eba3 030b 	sub.w	r3, r3, fp
 80199d0:	b289      	uxth	r1, r1
 80199d2:	920d      	str	r2, [sp, #52]	@ 0x34
 80199d4:	9317      	str	r3, [sp, #92]	@ 0x5c
 80199d6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80199d8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80199da:	fa12 f383 	uxtah	r3, r2, r3
 80199de:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80199e0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80199e4:	3304      	adds	r3, #4
 80199e6:	9308      	str	r3, [sp, #32]
 80199e8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80199ea:	4543      	cmp	r3, r8
 80199ec:	f240 8167 	bls.w	8019cbe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 80199f0:	9a02      	ldr	r2, [sp, #8]
 80199f2:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 80199f6:	fbb5 f3f3 	udiv	r3, r5, r3
 80199fa:	1ad3      	subs	r3, r2, r3
 80199fc:	b29b      	uxth	r3, r3
 80199fe:	9314      	str	r3, [sp, #80]	@ 0x50
 8019a00:	9b08      	ldr	r3, [sp, #32]
 8019a02:	9808      	ldr	r0, [sp, #32]
 8019a04:	785a      	ldrb	r2, [r3, #1]
 8019a06:	789b      	ldrb	r3, [r3, #2]
 8019a08:	7800      	ldrb	r0, [r0, #0]
 8019a0a:	9010      	str	r0, [sp, #64]	@ 0x40
 8019a0c:	021b      	lsls	r3, r3, #8
 8019a0e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8019a12:	9a08      	ldr	r2, [sp, #32]
 8019a14:	78d2      	ldrb	r2, [r2, #3]
 8019a16:	4313      	orrs	r3, r2
 8019a18:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019a1a:	3001      	adds	r0, #1
 8019a1c:	441a      	add	r2, r3
 8019a1e:	9007      	str	r0, [sp, #28]
 8019a20:	1c50      	adds	r0, r2, #1
 8019a22:	9005      	str	r0, [sp, #20]
 8019a24:	7852      	ldrb	r2, [r2, #1]
 8019a26:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8019a28:	0212      	lsls	r2, r2, #8
 8019a2a:	5cc3      	ldrb	r3, [r0, r3]
 8019a2c:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8019a30:	431a      	orrs	r2, r3
 8019a32:	b293      	uxth	r3, r2
 8019a34:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019a36:	2300      	movs	r3, #0
 8019a38:	9309      	str	r3, [sp, #36]	@ 0x24
 8019a3a:	2301      	movs	r3, #1
 8019a3c:	9301      	str	r3, [sp, #4]
 8019a3e:	9304      	str	r3, [sp, #16]
 8019a40:	2300      	movs	r3, #0
 8019a42:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8019a46:	9303      	str	r3, [sp, #12]
 8019a48:	f04f 0e01 	mov.w	lr, #1
 8019a4c:	2d00      	cmp	r5, #0
 8019a4e:	d07c      	beq.n	8019b4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 8019a50:	45ae      	cmp	lr, r5
 8019a52:	d26b      	bcs.n	8019b2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8019a54:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019a56:	eba5 050e 	sub.w	r5, r5, lr
 8019a5a:	4543      	cmp	r3, r8
 8019a5c:	b2ad      	uxth	r5, r5
 8019a5e:	460c      	mov	r4, r1
 8019a60:	d802      	bhi.n	8019a68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 8019a62:	e070      	b.n	8019b46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8019a64:	2b00      	cmp	r3, #0
 8019a66:	d15c      	bne.n	8019b22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8019a68:	9b05      	ldr	r3, [sp, #20]
 8019a6a:	9a04      	ldr	r2, [sp, #16]
 8019a6c:	785b      	ldrb	r3, [r3, #1]
 8019a6e:	9904      	ldr	r1, [sp, #16]
 8019a70:	f1c2 0207 	rsb	r2, r2, #7
 8019a74:	4093      	lsls	r3, r2
 8019a76:	005b      	lsls	r3, r3, #1
 8019a78:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8019a7c:	9b05      	ldr	r3, [sp, #20]
 8019a7e:	781b      	ldrb	r3, [r3, #0]
 8019a80:	410b      	asrs	r3, r1
 8019a82:	3101      	adds	r1, #1
 8019a84:	b2c9      	uxtb	r1, r1
 8019a86:	2908      	cmp	r1, #8
 8019a88:	9104      	str	r1, [sp, #16]
 8019a8a:	9905      	ldr	r1, [sp, #20]
 8019a8c:	bf0a      	itet	eq
 8019a8e:	3102      	addeq	r1, #2
 8019a90:	3101      	addne	r1, #1
 8019a92:	9105      	streq	r1, [sp, #20]
 8019a94:	b2db      	uxtb	r3, r3
 8019a96:	bf0a      	itet	eq
 8019a98:	2100      	moveq	r1, #0
 8019a9a:	9105      	strne	r1, [sp, #20]
 8019a9c:	9104      	streq	r1, [sp, #16]
 8019a9e:	4313      	orrs	r3, r2
 8019aa0:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8019aa2:	b29a      	uxth	r2, r3
 8019aa4:	4291      	cmp	r1, r2
 8019aa6:	d30a      	bcc.n	8019abe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8019aa8:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8019aac:	2301      	movs	r3, #1
 8019aae:	9907      	ldr	r1, [sp, #28]
 8019ab0:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8019ab4:	d30f      	bcc.n	8019ad6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8019ab6:	2100      	movs	r1, #0
 8019ab8:	9301      	str	r3, [sp, #4]
 8019aba:	9103      	str	r1, [sp, #12]
 8019abc:	e032      	b.n	8019b24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 8019abe:	9b07      	ldr	r3, [sp, #28]
 8019ac0:	429a      	cmp	r2, r3
 8019ac2:	d318      	bcc.n	8019af6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 8019ac4:	9b01      	ldr	r3, [sp, #4]
 8019ac6:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 8019aca:	445b      	add	r3, fp
 8019acc:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8019ad0:	9b01      	ldr	r3, [sp, #4]
 8019ad2:	3301      	adds	r3, #1
 8019ad4:	b29b      	uxth	r3, r3
 8019ad6:	9907      	ldr	r1, [sp, #28]
 8019ad8:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8019adc:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8019ae0:	7108      	strb	r0, [r1, #4]
 8019ae2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8019ae4:	80c8      	strh	r0, [r1, #6]
 8019ae6:	9801      	ldr	r0, [sp, #4]
 8019ae8:	3001      	adds	r0, #1
 8019aea:	7148      	strb	r0, [r1, #5]
 8019aec:	9907      	ldr	r1, [sp, #28]
 8019aee:	3101      	adds	r1, #1
 8019af0:	b289      	uxth	r1, r1
 8019af2:	9107      	str	r1, [sp, #28]
 8019af4:	e7df      	b.n	8019ab6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8019af6:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8019afa:	4611      	mov	r1, r2
 8019afc:	795b      	ldrb	r3, [r3, #5]
 8019afe:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 8019b02:	4458      	add	r0, fp
 8019b04:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 8019b06:	4406      	add	r6, r0
 8019b08:	2e00      	cmp	r6, #0
 8019b0a:	dd06      	ble.n	8019b1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 8019b0c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8019b10:	790e      	ldrb	r6, [r1, #4]
 8019b12:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8019b16:	88c9      	ldrh	r1, [r1, #6]
 8019b18:	e7f4      	b.n	8019b04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 8019b1a:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 8019b1e:	b29b      	uxth	r3, r3
 8019b20:	e7c5      	b.n	8019aae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 8019b22:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019b24:	920b      	str	r2, [sp, #44]	@ 0x2c
 8019b26:	4621      	mov	r1, r4
 8019b28:	469e      	mov	lr, r3
 8019b2a:	e78f      	b.n	8019a4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 8019b2c:	9a03      	ldr	r2, [sp, #12]
 8019b2e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8019b32:	442a      	add	r2, r5
 8019b34:	ebae 0305 	sub.w	r3, lr, r5
 8019b38:	b292      	uxth	r2, r2
 8019b3a:	b29b      	uxth	r3, r3
 8019b3c:	9203      	str	r2, [sp, #12]
 8019b3e:	2500      	movs	r5, #0
 8019b40:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019b42:	4542      	cmp	r2, r8
 8019b44:	d88e      	bhi.n	8019a64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 8019b46:	4621      	mov	r1, r4
 8019b48:	e74e      	b.n	80199e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8019b4a:	458e      	cmp	lr, r1
 8019b4c:	bf29      	itett	cs
 8019b4e:	ebae 0301 	subcs.w	r3, lr, r1
 8019b52:	eba1 040e 	subcc.w	r4, r1, lr
 8019b56:	b29b      	uxthcs	r3, r3
 8019b58:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8019b5a:	bf2f      	iteee	cs
 8019b5c:	462c      	movcs	r4, r5
 8019b5e:	b2a4      	uxthcc	r4, r4
 8019b60:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 8019b64:	462b      	movcc	r3, r5
 8019b66:	f04f 0900 	mov.w	r9, #0
 8019b6a:	9a03      	ldr	r2, [sp, #12]
 8019b6c:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8019b6e:	444a      	add	r2, r9
 8019b70:	4548      	cmp	r0, r9
 8019b72:	b292      	uxth	r2, r2
 8019b74:	d074      	beq.n	8019c60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 8019b76:	445a      	add	r2, fp
 8019b78:	2004      	movs	r0, #4
 8019b7a:	4605      	mov	r5, r0
 8019b7c:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 8019b80:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8019b82:	fb15 0202 	smlabb	r2, r5, r2, r0
 8019b86:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019b88:	5880      	ldr	r0, [r0, r2]
 8019b8a:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8019b8e:	d014      	beq.n	8019bba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8019b90:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8019b94:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8019b98:	d112      	bne.n	8019bc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8019b9a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8019b9c:	2aff      	cmp	r2, #255	@ 0xff
 8019b9e:	d10f      	bne.n	8019bc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8019ba0:	0942      	lsrs	r2, r0, #5
 8019ba2:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8019ba6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019baa:	f025 0507 	bic.w	r5, r5, #7
 8019bae:	4315      	orrs	r5, r2
 8019bb0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019bb4:	4305      	orrs	r5, r0
 8019bb6:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8019bba:	f109 0901 	add.w	r9, r9, #1
 8019bbe:	e7d4      	b.n	8019b6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 8019bc0:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8019bc4:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8019bc8:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 8019bcc:	9215      	str	r2, [sp, #84]	@ 0x54
 8019bce:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8019bd0:	fb02 fa0a 	mul.w	sl, r2, sl
 8019bd4:	f10a 0201 	add.w	r2, sl, #1
 8019bd8:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8019bdc:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019be0:	1212      	asrs	r2, r2, #8
 8019be2:	fa1f fa82 	uxth.w	sl, r2
 8019be6:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8019bea:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8019bee:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019bf2:	43d2      	mvns	r2, r2
 8019bf4:	b2d2      	uxtb	r2, r2
 8019bf6:	fb16 f60a 	smulbb	r6, r6, sl
 8019bfa:	fa5f fc8c 	uxtb.w	ip, ip
 8019bfe:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8019c02:	b2c0      	uxtb	r0, r0
 8019c04:	fb07 6702 	mla	r7, r7, r2, r6
 8019c08:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8019c0c:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8019c0e:	fb10 f00a 	smulbb	r0, r0, sl
 8019c12:	fb0c 0002 	mla	r0, ip, r2, r0
 8019c16:	b2ed      	uxtb	r5, r5
 8019c18:	b2bf      	uxth	r7, r7
 8019c1a:	fb15 f50a 	smulbb	r5, r5, sl
 8019c1e:	b280      	uxth	r0, r0
 8019c20:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8019c24:	fb06 5602 	mla	r6, r6, r2, r5
 8019c28:	1c7a      	adds	r2, r7, #1
 8019c2a:	1c45      	adds	r5, r0, #1
 8019c2c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019c30:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019c34:	b2b6      	uxth	r6, r6
 8019c36:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019c3a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8019c3e:	432f      	orrs	r7, r5
 8019c40:	1c75      	adds	r5, r6, #1
 8019c42:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8019c46:	096d      	lsrs	r5, r5, #5
 8019c48:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019c4c:	432f      	orrs	r7, r5
 8019c4e:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8019c52:	e7b2      	b.n	8019bba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8019c54:	20015238 	.word	0x20015238
 8019c58:	20015232 	.word	0x20015232
 8019c5c:	fffff7fb 	.word	0xfffff7fb
 8019c60:	9203      	str	r2, [sp, #12]
 8019c62:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8019c64:	458e      	cmp	lr, r1
 8019c66:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8019c6a:	f4ff af68 	bcc.w	8019b3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 8019c6e:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8019c70:	9906      	ldr	r1, [sp, #24]
 8019c72:	8812      	ldrh	r2, [r2, #0]
 8019c74:	1a52      	subs	r2, r2, r1
 8019c76:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8019c7a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8019c7c:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8019c7e:	3201      	adds	r2, #1
 8019c80:	428a      	cmp	r2, r1
 8019c82:	9209      	str	r2, [sp, #36]	@ 0x24
 8019c84:	d111      	bne.n	8019caa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 8019c86:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 8019c8a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 8019c8e:	9b06      	ldr	r3, [sp, #24]
 8019c90:	eba5 0509 	sub.w	r5, r5, r9
 8019c94:	b2ad      	uxth	r5, r5
 8019c96:	2d00      	cmp	r5, #0
 8019c98:	bf08      	it	eq
 8019c9a:	4619      	moveq	r1, r3
 8019c9c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019c9e:	bf18      	it	ne
 8019ca0:	2100      	movne	r1, #0
 8019ca2:	3301      	adds	r3, #1
 8019ca4:	930d      	str	r3, [sp, #52]	@ 0x34
 8019ca6:	b289      	uxth	r1, r1
 8019ca8:	e695      	b.n	80199d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 8019caa:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8019cae:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8019cb2:	1b2d      	subs	r5, r5, r4
 8019cb4:	b2ad      	uxth	r5, r5
 8019cb6:	2d00      	cmp	r5, #0
 8019cb8:	bf18      	it	ne
 8019cba:	2400      	movne	r4, #0
 8019cbc:	e740      	b.n	8019b40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 8019cbe:	4b04      	ldr	r3, [pc, #16]	@ (8019cd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8019cc0:	6818      	ldr	r0, [r3, #0]
 8019cc2:	6803      	ldr	r3, [r0, #0]
 8019cc4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019cc6:	4798      	blx	r3
 8019cc8:	b01d      	add	sp, #116	@ 0x74
 8019cca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019cce:	bf00      	nop
 8019cd0:	20015238 	.word	0x20015238

08019cd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8019cd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019cd8:	b09f      	sub	sp, #124	@ 0x7c
 8019cda:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8019cde:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8019ce2:	920a      	str	r2, [sp, #40]	@ 0x28
 8019ce4:	461d      	mov	r5, r3
 8019ce6:	4604      	mov	r4, r0
 8019ce8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8019cea:	2a00      	cmp	r2, #0
 8019cec:	f000 81fa 	beq.w	801a0e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 8019cf0:	6828      	ldr	r0, [r5, #0]
 8019cf2:	6869      	ldr	r1, [r5, #4]
 8019cf4:	aa1a      	add	r2, sp, #104	@ 0x68
 8019cf6:	c203      	stmia	r2!, {r0, r1}
 8019cf8:	6818      	ldr	r0, [r3, #0]
 8019cfa:	6859      	ldr	r1, [r3, #4]
 8019cfc:	aa1c      	add	r2, sp, #112	@ 0x70
 8019cfe:	c203      	stmia	r2!, {r0, r1}
 8019d00:	a81a      	add	r0, sp, #104	@ 0x68
 8019d02:	f7f7 fc31 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019d06:	4629      	mov	r1, r5
 8019d08:	a81c      	add	r0, sp, #112	@ 0x70
 8019d0a:	f7f7 fc55 	bl	80115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019d0e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8019d12:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8019d16:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 8019d1a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8019d1e:	bfd7      	itett	le
 8019d20:	b29a      	uxthle	r2, r3
 8019d22:	2201      	movgt	r2, #1
 8019d24:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8019d28:	fb91 f2f2 	sdivle	r2, r1, r2
 8019d2c:	9201      	str	r2, [sp, #4]
 8019d2e:	9801      	ldr	r0, [sp, #4]
 8019d30:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8019d34:	fb92 f0f0 	sdiv	r0, r2, r0
 8019d38:	b280      	uxth	r0, r0
 8019d3a:	9010      	str	r0, [sp, #64]	@ 0x40
 8019d3c:	9901      	ldr	r1, [sp, #4]
 8019d3e:	9801      	ldr	r0, [sp, #4]
 8019d40:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8019d42:	440e      	add	r6, r1
 8019d44:	fb05 2510 	mls	r5, r5, r0, r2
 8019d48:	fb15 f503 	smulbb	r5, r5, r3
 8019d4c:	3e01      	subs	r6, #1
 8019d4e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8019d52:	fb96 f6f1 	sdiv	r6, r6, r1
 8019d56:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8019d5a:	440d      	add	r5, r1
 8019d5c:	4419      	add	r1, r3
 8019d5e:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8019d62:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8019d66:	441a      	add	r2, r3
 8019d68:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8019d6c:	9304      	str	r3, [sp, #16]
 8019d6e:	4b96      	ldr	r3, [pc, #600]	@ (8019fc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8019d70:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8019d74:	6818      	ldr	r0, [r3, #0]
 8019d76:	6803      	ldr	r3, [r0, #0]
 8019d78:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019d7a:	4798      	blx	r3
 8019d7c:	4b93      	ldr	r3, [pc, #588]	@ (8019fcc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8019d7e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8019d82:	881a      	ldrh	r2, [r3, #0]
 8019d84:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 8019d88:	9318      	str	r3, [sp, #96]	@ 0x60
 8019d8a:	fb02 c101 	mla	r1, r2, r1, ip
 8019d8e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8019d92:	4357      	muls	r7, r2
 8019d94:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8019d98:	3601      	adds	r6, #1
 8019d9a:	920b      	str	r2, [sp, #44]	@ 0x2c
 8019d9c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019d9e:	4b8c      	ldr	r3, [pc, #560]	@ (8019fd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8019da0:	b2b6      	uxth	r6, r6
 8019da2:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8019da6:	1d32      	adds	r2, r6, #4
 8019da8:	9206      	str	r2, [sp, #24]
 8019daa:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019dac:	43d2      	mvns	r2, r2
 8019dae:	b2d2      	uxtb	r2, r2
 8019db0:	b2ad      	uxth	r5, r5
 8019db2:	9215      	str	r2, [sp, #84]	@ 0x54
 8019db4:	9a04      	ldr	r2, [sp, #16]
 8019db6:	2d00      	cmp	r5, #0
 8019db8:	bf0c      	ite	eq
 8019dba:	4611      	moveq	r1, r2
 8019dbc:	2100      	movne	r1, #0
 8019dbe:	2200      	movs	r2, #0
 8019dc0:	1b1b      	subs	r3, r3, r4
 8019dc2:	b289      	uxth	r1, r1
 8019dc4:	920d      	str	r2, [sp, #52]	@ 0x34
 8019dc6:	9319      	str	r3, [sp, #100]	@ 0x64
 8019dc8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8019dca:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019dcc:	fa12 f383 	uxtah	r3, r2, r3
 8019dd0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019dd2:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8019dd6:	3304      	adds	r3, #4
 8019dd8:	9307      	str	r3, [sp, #28]
 8019dda:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019ddc:	455b      	cmp	r3, fp
 8019dde:	f240 817c 	bls.w	801a0da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 8019de2:	9a01      	ldr	r2, [sp, #4]
 8019de4:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8019de8:	fbb5 f3f3 	udiv	r3, r5, r3
 8019dec:	1ad3      	subs	r3, r2, r3
 8019dee:	b29b      	uxth	r3, r3
 8019df0:	9316      	str	r3, [sp, #88]	@ 0x58
 8019df2:	9b07      	ldr	r3, [sp, #28]
 8019df4:	9807      	ldr	r0, [sp, #28]
 8019df6:	785a      	ldrb	r2, [r3, #1]
 8019df8:	789b      	ldrb	r3, [r3, #2]
 8019dfa:	7800      	ldrb	r0, [r0, #0]
 8019dfc:	9011      	str	r0, [sp, #68]	@ 0x44
 8019dfe:	021b      	lsls	r3, r3, #8
 8019e00:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8019e04:	9a07      	ldr	r2, [sp, #28]
 8019e06:	78d2      	ldrb	r2, [r2, #3]
 8019e08:	4313      	orrs	r3, r2
 8019e0a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019e0c:	3001      	adds	r0, #1
 8019e0e:	441a      	add	r2, r3
 8019e10:	9005      	str	r0, [sp, #20]
 8019e12:	1c50      	adds	r0, r2, #1
 8019e14:	9003      	str	r0, [sp, #12]
 8019e16:	7852      	ldrb	r2, [r2, #1]
 8019e18:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8019e1a:	0212      	lsls	r2, r2, #8
 8019e1c:	5cc3      	ldrb	r3, [r0, r3]
 8019e1e:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8019e22:	431a      	orrs	r2, r3
 8019e24:	b293      	uxth	r3, r2
 8019e26:	930c      	str	r3, [sp, #48]	@ 0x30
 8019e28:	2300      	movs	r3, #0
 8019e2a:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8019e2e:	9308      	str	r3, [sp, #32]
 8019e30:	461a      	mov	r2, r3
 8019e32:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8019e36:	930e      	str	r3, [sp, #56]	@ 0x38
 8019e38:	f04f 0801 	mov.w	r8, #1
 8019e3c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8019e40:	f8cd 8008 	str.w	r8, [sp, #8]
 8019e44:	46c4      	mov	ip, r8
 8019e46:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019e48:	2d00      	cmp	r5, #0
 8019e4a:	d07c      	beq.n	8019f46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8019e4c:	45ac      	cmp	ip, r5
 8019e4e:	d26c      	bcs.n	8019f2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8019e50:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019e52:	eba5 050c 	sub.w	r5, r5, ip
 8019e56:	455b      	cmp	r3, fp
 8019e58:	b2ad      	uxth	r5, r5
 8019e5a:	4608      	mov	r0, r1
 8019e5c:	d802      	bhi.n	8019e64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8019e5e:	e070      	b.n	8019f42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 8019e60:	2b00      	cmp	r3, #0
 8019e62:	d15c      	bne.n	8019f1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8019e64:	9b03      	ldr	r3, [sp, #12]
 8019e66:	9a02      	ldr	r2, [sp, #8]
 8019e68:	785b      	ldrb	r3, [r3, #1]
 8019e6a:	9902      	ldr	r1, [sp, #8]
 8019e6c:	f1c2 0207 	rsb	r2, r2, #7
 8019e70:	4093      	lsls	r3, r2
 8019e72:	005b      	lsls	r3, r3, #1
 8019e74:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8019e78:	9b03      	ldr	r3, [sp, #12]
 8019e7a:	781b      	ldrb	r3, [r3, #0]
 8019e7c:	410b      	asrs	r3, r1
 8019e7e:	3101      	adds	r1, #1
 8019e80:	b2c9      	uxtb	r1, r1
 8019e82:	2908      	cmp	r1, #8
 8019e84:	9102      	str	r1, [sp, #8]
 8019e86:	9903      	ldr	r1, [sp, #12]
 8019e88:	bf0a      	itet	eq
 8019e8a:	3102      	addeq	r1, #2
 8019e8c:	3101      	addne	r1, #1
 8019e8e:	9103      	streq	r1, [sp, #12]
 8019e90:	b2db      	uxtb	r3, r3
 8019e92:	bf0a      	itet	eq
 8019e94:	2100      	moveq	r1, #0
 8019e96:	9103      	strne	r1, [sp, #12]
 8019e98:	9102      	streq	r1, [sp, #8]
 8019e9a:	4313      	orrs	r3, r2
 8019e9c:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8019e9e:	b29a      	uxth	r2, r3
 8019ea0:	4291      	cmp	r1, r2
 8019ea2:	d30a      	bcc.n	8019eba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8019ea4:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8019ea8:	2301      	movs	r3, #1
 8019eaa:	9905      	ldr	r1, [sp, #20]
 8019eac:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8019eb0:	d30f      	bcc.n	8019ed2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 8019eb2:	2100      	movs	r1, #0
 8019eb4:	4698      	mov	r8, r3
 8019eb6:	9100      	str	r1, [sp, #0]
 8019eb8:	e032      	b.n	8019f20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 8019eba:	9b05      	ldr	r3, [sp, #20]
 8019ebc:	429a      	cmp	r2, r3
 8019ebe:	d318      	bcc.n	8019ef2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8019ec0:	eb04 0308 	add.w	r3, r4, r8
 8019ec4:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 8019ec8:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8019ecc:	f108 0301 	add.w	r3, r8, #1
 8019ed0:	b29b      	uxth	r3, r3
 8019ed2:	9905      	ldr	r1, [sp, #20]
 8019ed4:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8019ed8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8019edc:	710e      	strb	r6, [r1, #4]
 8019ede:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8019ee0:	80ce      	strh	r6, [r1, #6]
 8019ee2:	f108 0601 	add.w	r6, r8, #1
 8019ee6:	714e      	strb	r6, [r1, #5]
 8019ee8:	9905      	ldr	r1, [sp, #20]
 8019eea:	3101      	adds	r1, #1
 8019eec:	b289      	uxth	r1, r1
 8019eee:	9105      	str	r1, [sp, #20]
 8019ef0:	e7df      	b.n	8019eb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 8019ef2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8019ef6:	4611      	mov	r1, r2
 8019ef8:	795b      	ldrb	r3, [r3, #5]
 8019efa:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8019efe:	4426      	add	r6, r4
 8019f00:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 8019f02:	4437      	add	r7, r6
 8019f04:	2f00      	cmp	r7, #0
 8019f06:	dd06      	ble.n	8019f16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8019f08:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8019f0c:	790f      	ldrb	r7, [r1, #4]
 8019f0e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8019f12:	88c9      	ldrh	r1, [r1, #6]
 8019f14:	e7f4      	b.n	8019f00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 8019f16:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8019f1a:	b29b      	uxth	r3, r3
 8019f1c:	e7c5      	b.n	8019eaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8019f1e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8019f20:	920c      	str	r2, [sp, #48]	@ 0x30
 8019f22:	4601      	mov	r1, r0
 8019f24:	9a00      	ldr	r2, [sp, #0]
 8019f26:	469c      	mov	ip, r3
 8019f28:	e78e      	b.n	8019e48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 8019f2a:	1957      	adds	r7, r2, r5
 8019f2c:	ebac 0305 	sub.w	r3, ip, r5
 8019f30:	b2ba      	uxth	r2, r7
 8019f32:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8019f36:	9200      	str	r2, [sp, #0]
 8019f38:	b29b      	uxth	r3, r3
 8019f3a:	2500      	movs	r5, #0
 8019f3c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019f3e:	455a      	cmp	r2, fp
 8019f40:	d88e      	bhi.n	8019e60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 8019f42:	4601      	mov	r1, r0
 8019f44:	e749      	b.n	8019dda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 8019f46:	458c      	cmp	ip, r1
 8019f48:	bf2c      	ite	cs
 8019f4a:	4628      	movcs	r0, r5
 8019f4c:	462b      	movcc	r3, r5
 8019f4e:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8019f50:	bf27      	ittee	cs
 8019f52:	9109      	strcs	r1, [sp, #36]	@ 0x24
 8019f54:	ebac 0301 	subcs.w	r3, ip, r1
 8019f58:	eba1 000c 	subcc.w	r0, r1, ip
 8019f5c:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 8019f60:	bf2c      	ite	cs
 8019f62:	b29b      	uxthcs	r3, r3
 8019f64:	b280      	uxthcc	r0, r0
 8019f66:	2dff      	cmp	r5, #255	@ 0xff
 8019f68:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8019f6a:	eb02 0705 	add.w	r7, r2, r5
 8019f6e:	b2bd      	uxth	r5, r7
 8019f70:	9500      	str	r5, [sp, #0]
 8019f72:	d12f      	bne.n	8019fd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 8019f74:	465e      	mov	r6, fp
 8019f76:	9d00      	ldr	r5, [sp, #0]
 8019f78:	42aa      	cmp	r2, r5
 8019f7a:	f040 8084 	bne.w	801a086 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 8019f7e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8019f80:	458c      	cmp	ip, r1
 8019f82:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8019f86:	d3d8      	bcc.n	8019f3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 8019f88:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8019f8a:	9904      	ldr	r1, [sp, #16]
 8019f8c:	8812      	ldrh	r2, [r2, #0]
 8019f8e:	1a52      	subs	r2, r2, r1
 8019f90:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8019f94:	9a08      	ldr	r2, [sp, #32]
 8019f96:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8019f98:	3201      	adds	r2, #1
 8019f9a:	428a      	cmp	r2, r1
 8019f9c:	9208      	str	r2, [sp, #32]
 8019f9e:	f040 8092 	bne.w	801a0c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 8019fa2:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8019fa6:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 8019faa:	9b04      	ldr	r3, [sp, #16]
 8019fac:	eba5 050c 	sub.w	r5, r5, ip
 8019fb0:	b2ad      	uxth	r5, r5
 8019fb2:	2d00      	cmp	r5, #0
 8019fb4:	bf08      	it	eq
 8019fb6:	4619      	moveq	r1, r3
 8019fb8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019fba:	bf18      	it	ne
 8019fbc:	2100      	movne	r1, #0
 8019fbe:	3301      	adds	r3, #1
 8019fc0:	930d      	str	r3, [sp, #52]	@ 0x34
 8019fc2:	b289      	uxth	r1, r1
 8019fc4:	e700      	b.n	8019dc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8019fc6:	bf00      	nop
 8019fc8:	20015238 	.word	0x20015238
 8019fcc:	20015232 	.word	0x20015232
 8019fd0:	fffff7fb 	.word	0xfffff7fb
 8019fd4:	46d9      	mov	r9, fp
 8019fd6:	9d00      	ldr	r5, [sp, #0]
 8019fd8:	42aa      	cmp	r2, r5
 8019fda:	d0d0      	beq.n	8019f7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 8019fdc:	1c55      	adds	r5, r2, #1
 8019fde:	4422      	add	r2, r4
 8019fe0:	9517      	str	r5, [sp, #92]	@ 0x5c
 8019fe2:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 8019fe6:	9a06      	ldr	r2, [sp, #24]
 8019fe8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019fec:	4472      	add	r2, lr
 8019fee:	9212      	str	r2, [sp, #72]	@ 0x48
 8019ff0:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8019ff2:	f8b9 2000 	ldrh.w	r2, [r9]
 8019ff6:	f897 a002 	ldrb.w	sl, [r7, #2]
 8019ffa:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8019ffc:	1216      	asrs	r6, r2, #8
 8019ffe:	fb1a fa07 	smulbb	sl, sl, r7
 801a002:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801a006:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801a008:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801a00c:	fb06 a607 	mla	r6, r6, r7, sl
 801a010:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801a012:	f897 a001 	ldrb.w	sl, [r7, #1]
 801a016:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801a018:	10d5      	asrs	r5, r2, #3
 801a01a:	fb1a fa07 	smulbb	sl, sl, r7
 801a01e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801a022:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801a024:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801a028:	fb05 a507 	mla	r5, r5, r7, sl
 801a02c:	9f06      	ldr	r7, [sp, #24]
 801a02e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801a032:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801a034:	00d2      	lsls	r2, r2, #3
 801a036:	fb1e fe07 	smulbb	lr, lr, r7
 801a03a:	b2d2      	uxtb	r2, r2
 801a03c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801a03e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801a042:	b2b6      	uxth	r6, r6
 801a044:	fb02 e207 	mla	r2, r2, r7, lr
 801a048:	b292      	uxth	r2, r2
 801a04a:	b2ad      	uxth	r5, r5
 801a04c:	f106 0a01 	add.w	sl, r6, #1
 801a050:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801a054:	f102 0e01 	add.w	lr, r2, #1
 801a058:	f105 0a01 	add.w	sl, r5, #1
 801a05c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801a060:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a064:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801a068:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a06c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a070:	ea4e 0606 	orr.w	r6, lr, r6
 801a074:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801a078:	ea46 060a 	orr.w	r6, r6, sl
 801a07c:	f829 6b02 	strh.w	r6, [r9], #2
 801a080:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801a084:	e7a7      	b.n	8019fd6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801a086:	f102 0e01 	add.w	lr, r2, #1
 801a08a:	4422      	add	r2, r4
 801a08c:	9f06      	ldr	r7, [sp, #24]
 801a08e:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 801a092:	9a06      	ldr	r2, [sp, #24]
 801a094:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a098:	eb02 0a05 	add.w	sl, r2, r5
 801a09c:	4a13      	ldr	r2, [pc, #76]	@ (801a0ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801a09e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801a0a2:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801a0a6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801a0aa:	00d2      	lsls	r2, r2, #3
 801a0ac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a0b0:	ea49 0202 	orr.w	r2, r9, r2
 801a0b4:	f817 9005 	ldrb.w	r9, [r7, r5]
 801a0b8:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801a0bc:	f826 2b02 	strh.w	r2, [r6], #2
 801a0c0:	fa1f f28e 	uxth.w	r2, lr
 801a0c4:	e757      	b.n	8019f76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801a0c6:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801a0ca:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801a0ce:	1a2d      	subs	r5, r5, r0
 801a0d0:	b2ad      	uxth	r5, r5
 801a0d2:	2d00      	cmp	r5, #0
 801a0d4:	bf18      	it	ne
 801a0d6:	2000      	movne	r0, #0
 801a0d8:	e730      	b.n	8019f3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801a0da:	4b05      	ldr	r3, [pc, #20]	@ (801a0f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801a0dc:	6818      	ldr	r0, [r3, #0]
 801a0de:	6803      	ldr	r3, [r0, #0]
 801a0e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a0e2:	4798      	blx	r3
 801a0e4:	b01f      	add	sp, #124	@ 0x7c
 801a0e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a0ea:	bf00      	nop
 801a0ec:	fffff800 	.word	0xfffff800
 801a0f0:	20015238 	.word	0x20015238

0801a0f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801a0f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a0f8:	b091      	sub	sp, #68	@ 0x44
 801a0fa:	469b      	mov	fp, r3
 801a0fc:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 801a100:	4616      	mov	r6, r2
 801a102:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 801a106:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a10a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801a10e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801a112:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801a116:	4604      	mov	r4, r0
 801a118:	460d      	mov	r5, r1
 801a11a:	4640      	mov	r0, r8
 801a11c:	4659      	mov	r1, fp
 801a11e:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801a122:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 801a126:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 801a12a:	f7f2 f847 	bl	800c1bc <_ZN8touchgfx4RectaNERKS0_>
 801a12e:	4631      	mov	r1, r6
 801a130:	4640      	mov	r0, r8
 801a132:	f7f2 f843 	bl	800c1bc <_ZN8touchgfx4RectaNERKS0_>
 801a136:	4b74      	ldr	r3, [pc, #464]	@ (801a308 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801a138:	8818      	ldrh	r0, [r3, #0]
 801a13a:	4b74      	ldr	r3, [pc, #464]	@ (801a30c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801a13c:	8819      	ldrh	r1, [r3, #0]
 801a13e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801a142:	2b00      	cmp	r3, #0
 801a144:	b202      	sxth	r2, r0
 801a146:	b20e      	sxth	r6, r1
 801a148:	da07      	bge.n	801a15a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801a14a:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801a14e:	4463      	add	r3, ip
 801a150:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801a154:	2300      	movs	r3, #0
 801a156:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 801a15a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801a15e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801a162:	1ad2      	subs	r2, r2, r3
 801a164:	4594      	cmp	ip, r2
 801a166:	bfc4      	itt	gt
 801a168:	1ac2      	subgt	r2, r0, r3
 801a16a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 801a16e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801a172:	2a00      	cmp	r2, #0
 801a174:	da07      	bge.n	801a186 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801a176:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 801a17a:	4462      	add	r2, ip
 801a17c:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801a180:	2200      	movs	r2, #0
 801a182:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801a186:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 801a18a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801a18e:	eba6 060a 	sub.w	r6, r6, sl
 801a192:	42b2      	cmp	r2, r6
 801a194:	bfc4      	itt	gt
 801a196:	eba1 020a 	subgt.w	r2, r1, sl
 801a19a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 801a19e:	4a5c      	ldr	r2, [pc, #368]	@ (801a310 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801a1a0:	7812      	ldrb	r2, [r2, #0]
 801a1a2:	b9a2      	cbnz	r2, 801a1ce <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801a1a4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801a1a8:	4286      	cmp	r6, r0
 801a1aa:	4640      	mov	r0, r8
 801a1ac:	9303      	str	r3, [sp, #12]
 801a1ae:	bf14      	ite	ne
 801a1b0:	2600      	movne	r6, #0
 801a1b2:	2601      	moveq	r6, #1
 801a1b4:	f7f2 f845 	bl	800c242 <_ZNK8touchgfx4Rect7isEmptyEv>
 801a1b8:	9b03      	ldr	r3, [sp, #12]
 801a1ba:	b160      	cbz	r0, 801a1d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801a1bc:	2300      	movs	r3, #0
 801a1be:	8023      	strh	r3, [r4, #0]
 801a1c0:	8063      	strh	r3, [r4, #2]
 801a1c2:	80a3      	strh	r3, [r4, #4]
 801a1c4:	4620      	mov	r0, r4
 801a1c6:	80e3      	strh	r3, [r4, #6]
 801a1c8:	b011      	add	sp, #68	@ 0x44
 801a1ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a1ce:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801a1d2:	428e      	cmp	r6, r1
 801a1d4:	e7e9      	b.n	801a1aa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801a1d6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801a1da:	9205      	str	r2, [sp, #20]
 801a1dc:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801a1e0:	9206      	str	r2, [sp, #24]
 801a1e2:	f8bb 2000 	ldrh.w	r2, [fp]
 801a1e6:	900e      	str	r0, [sp, #56]	@ 0x38
 801a1e8:	1a9b      	subs	r3, r3, r2
 801a1ea:	b21b      	sxth	r3, r3
 801a1ec:	9303      	str	r3, [sp, #12]
 801a1ee:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801a1f2:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 801a1f6:	ebaa 0a03 	sub.w	sl, sl, r3
 801a1fa:	fa0f f38a 	sxth.w	r3, sl
 801a1fe:	9304      	str	r3, [sp, #16]
 801a200:	9b03      	ldr	r3, [sp, #12]
 801a202:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801a206:	9b04      	ldr	r3, [sp, #16]
 801a208:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801a20c:	9b05      	ldr	r3, [sp, #20]
 801a20e:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801a212:	a90e      	add	r1, sp, #56	@ 0x38
 801a214:	9b06      	ldr	r3, [sp, #24]
 801a216:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801a21a:	a80c      	add	r0, sp, #48	@ 0x30
 801a21c:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 801a220:	f7f7 f9ca 	bl	80115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a224:	4640      	mov	r0, r8
 801a226:	f7f7 f99f 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a22a:	a80e      	add	r0, sp, #56	@ 0x38
 801a22c:	f7f7 f99c 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a230:	4b38      	ldr	r3, [pc, #224]	@ (801a314 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801a232:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 801a236:	881b      	ldrh	r3, [r3, #0]
 801a238:	9307      	str	r3, [sp, #28]
 801a23a:	682b      	ldr	r3, [r5, #0]
 801a23c:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 801a318 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801a240:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a242:	4628      	mov	r0, r5
 801a244:	4798      	blx	r3
 801a246:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 801a24a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801a24e:	4681      	mov	r9, r0
 801a250:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801a254:	f8db 0000 	ldr.w	r0, [fp]
 801a258:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801a25a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801a25e:	6803      	ldr	r3, [r0, #0]
 801a260:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801a262:	4798      	blx	r3
 801a264:	4607      	mov	r7, r0
 801a266:	f8db 0000 	ldr.w	r0, [fp]
 801a26a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801a26e:	6803      	ldr	r3, [r0, #0]
 801a270:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801a274:	9109      	str	r1, [sp, #36]	@ 0x24
 801a276:	9208      	str	r2, [sp, #32]
 801a278:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801a27a:	4798      	blx	r3
 801a27c:	f010 0f01 	tst.w	r0, #1
 801a280:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801a284:	d012      	beq.n	801a2ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801a286:	f8db 0000 	ldr.w	r0, [fp]
 801a28a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 801a28e:	6803      	ldr	r3, [r0, #0]
 801a290:	9200      	str	r2, [sp, #0]
 801a292:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 801a294:	e898 0006 	ldmia.w	r8, {r1, r2}
 801a298:	462b      	mov	r3, r5
 801a29a:	47b0      	blx	r6
 801a29c:	9b03      	ldr	r3, [sp, #12]
 801a29e:	8023      	strh	r3, [r4, #0]
 801a2a0:	9b04      	ldr	r3, [sp, #16]
 801a2a2:	8063      	strh	r3, [r4, #2]
 801a2a4:	9b05      	ldr	r3, [sp, #20]
 801a2a6:	80a3      	strh	r3, [r4, #4]
 801a2a8:	9b06      	ldr	r3, [sp, #24]
 801a2aa:	e78b      	b.n	801a1c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801a2ac:	fb09 f202 	mul.w	r2, r9, r2
 801a2b0:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801a2b4:	440f      	add	r7, r1
 801a2b6:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 801a2ba:	b166      	cbz	r6, 801a2d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801a2bc:	9a07      	ldr	r2, [sp, #28]
 801a2be:	4592      	cmp	sl, r2
 801a2c0:	d109      	bne.n	801a2d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801a2c2:	f8db 0000 	ldr.w	r0, [fp]
 801a2c6:	6802      	ldr	r2, [r0, #0]
 801a2c8:	fb09 f303 	mul.w	r3, r9, r3
 801a2cc:	6b96      	ldr	r6, [r2, #56]	@ 0x38
 801a2ce:	4629      	mov	r1, r5
 801a2d0:	463a      	mov	r2, r7
 801a2d2:	47b0      	blx	r6
 801a2d4:	e7e2      	b.n	801a29c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801a2d6:	fb0a f303 	mul.w	r3, sl, r3
 801a2da:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 801a318 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801a2de:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801a2e2:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801a2e6:	4545      	cmp	r5, r8
 801a2e8:	d2d8      	bcs.n	801a29c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801a2ea:	f8db 0000 	ldr.w	r0, [fp]
 801a2ee:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801a2f2:	6802      	ldr	r2, [r0, #0]
 801a2f4:	4629      	mov	r1, r5
 801a2f6:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
 801a2fa:	005b      	lsls	r3, r3, #1
 801a2fc:	463a      	mov	r2, r7
 801a2fe:	47d0      	blx	sl
 801a300:	444f      	add	r7, r9
 801a302:	4435      	add	r5, r6
 801a304:	e7ef      	b.n	801a2e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801a306:	bf00      	nop
 801a308:	2001522c 	.word	0x2001522c
 801a30c:	2001522e 	.word	0x2001522e
 801a310:	20015230 	.word	0x20015230
 801a314:	20015232 	.word	0x20015232
 801a318:	20015238 	.word	0x20015238

0801a31c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801a31c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a31e:	4606      	mov	r6, r0
 801a320:	b087      	sub	sp, #28
 801a322:	460c      	mov	r4, r1
 801a324:	4617      	mov	r7, r2
 801a326:	461d      	mov	r5, r3
 801a328:	b333      	cbz	r3, 801a378 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801a32a:	4608      	mov	r0, r1
 801a32c:	f7f1 ff89 	bl	800c242 <_ZNK8touchgfx4Rect7isEmptyEv>
 801a330:	bb10      	cbnz	r0, 801a378 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801a332:	6820      	ldr	r0, [r4, #0]
 801a334:	6861      	ldr	r1, [r4, #4]
 801a336:	4c1c      	ldr	r4, [pc, #112]	@ (801a3a8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801a338:	ab04      	add	r3, sp, #16
 801a33a:	c303      	stmia	r3!, {r0, r1}
 801a33c:	a804      	add	r0, sp, #16
 801a33e:	f7f7 f913 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a342:	6820      	ldr	r0, [r4, #0]
 801a344:	6803      	ldr	r3, [r0, #0]
 801a346:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801a348:	4798      	blx	r3
 801a34a:	2dff      	cmp	r5, #255	@ 0xff
 801a34c:	d016      	beq.n	801a37c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801a34e:	f010 0f08 	tst.w	r0, #8
 801a352:	6820      	ldr	r0, [r4, #0]
 801a354:	d015      	beq.n	801a382 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801a356:	2400      	movs	r4, #0
 801a358:	6801      	ldr	r1, [r0, #0]
 801a35a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801a35e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801a362:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801a366:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801a36a:	9401      	str	r4, [sp, #4]
 801a36c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801a370:	9400      	str	r4, [sp, #0]
 801a372:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
 801a374:	4639      	mov	r1, r7
 801a376:	47a0      	blx	r4
 801a378:	b007      	add	sp, #28
 801a37a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a37c:	f010 0f02 	tst.w	r0, #2
 801a380:	e7e7      	b.n	801a352 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801a382:	6803      	ldr	r3, [r0, #0]
 801a384:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a386:	4798      	blx	r3
 801a388:	4b08      	ldr	r3, [pc, #32]	@ (801a3ac <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801a38a:	881a      	ldrh	r2, [r3, #0]
 801a38c:	6833      	ldr	r3, [r6, #0]
 801a38e:	e9cd 7500 	strd	r7, r5, [sp]
 801a392:	4601      	mov	r1, r0
 801a394:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 801a396:	4630      	mov	r0, r6
 801a398:	ab04      	add	r3, sp, #16
 801a39a:	47a8      	blx	r5
 801a39c:	6820      	ldr	r0, [r4, #0]
 801a39e:	6803      	ldr	r3, [r0, #0]
 801a3a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a3a2:	4798      	blx	r3
 801a3a4:	e7e8      	b.n	801a378 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801a3a6:	bf00      	nop
 801a3a8:	20015238 	.word	0x20015238
 801a3ac:	20015232 	.word	0x20015232

0801a3b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801a3b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a3b4:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 801a3b8:	9e08      	ldr	r6, [sp, #32]
 801a3ba:	4688      	mov	r8, r1
 801a3bc:	4614      	mov	r4, r2
 801a3be:	461d      	mov	r5, r3
 801a3c0:	2f00      	cmp	r7, #0
 801a3c2:	f000 80a9 	beq.w	801a518 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801a3c6:	4618      	mov	r0, r3
 801a3c8:	f7f1 ff3b 	bl	800c242 <_ZNK8touchgfx4Rect7isEmptyEv>
 801a3cc:	2800      	cmp	r0, #0
 801a3ce:	f040 80a3 	bne.w	801a518 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801a3d2:	f9b5 1000 	ldrsh.w	r1, [r5]
 801a3d6:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801a3da:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801a3de:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801a3e2:	fb04 1303 	mla	r3, r4, r3, r1
 801a3e6:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801a3ea:	4365      	muls	r5, r4
 801a3ec:	2fff      	cmp	r7, #255	@ 0xff
 801a3ee:	eba4 0200 	sub.w	r2, r4, r0
 801a3f2:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801a3f6:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801a3fa:	d04a      	beq.n	801a492 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801a3fc:	b2bc      	uxth	r4, r7
 801a3fe:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 801a402:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801a406:	fa5f f788 	uxtb.w	r7, r8
 801a40a:	b2f3      	uxtb	r3, r6
 801a40c:	0040      	lsls	r0, r0, #1
 801a40e:	fb0e fe04 	mul.w	lr, lr, r4
 801a412:	4367      	muls	r7, r4
 801a414:	4363      	muls	r3, r4
 801a416:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801a41a:	fa1f fc8c 	uxth.w	ip, ip
 801a41e:	42a9      	cmp	r1, r5
 801a420:	d27a      	bcs.n	801a518 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801a422:	eb01 0900 	add.w	r9, r1, r0
 801a426:	4549      	cmp	r1, r9
 801a428:	d231      	bcs.n	801a48e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801a42a:	880a      	ldrh	r2, [r1, #0]
 801a42c:	1214      	asrs	r4, r2, #8
 801a42e:	10d6      	asrs	r6, r2, #3
 801a430:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801a434:	00d2      	lsls	r2, r2, #3
 801a436:	b2d2      	uxtb	r2, r2
 801a438:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801a43c:	fb14 f40c 	smulbb	r4, r4, ip
 801a440:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801a444:	4474      	add	r4, lr
 801a446:	fb12 f20c 	smulbb	r2, r2, ip
 801a44a:	b2a4      	uxth	r4, r4
 801a44c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801a450:	441a      	add	r2, r3
 801a452:	b292      	uxth	r2, r2
 801a454:	f104 0a01 	add.w	sl, r4, #1
 801a458:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801a45c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801a460:	fb16 f60c 	smulbb	r6, r6, ip
 801a464:	f102 0a01 	add.w	sl, r2, #1
 801a468:	443e      	add	r6, r7
 801a46a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801a46e:	b2b6      	uxth	r6, r6
 801a470:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801a474:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a478:	4322      	orrs	r2, r4
 801a47a:	1c74      	adds	r4, r6, #1
 801a47c:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801a480:	0976      	lsrs	r6, r6, #5
 801a482:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801a486:	4332      	orrs	r2, r6
 801a488:	f821 2b02 	strh.w	r2, [r1], #2
 801a48c:	e7cb      	b.n	801a426 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801a48e:	4441      	add	r1, r8
 801a490:	e7c5      	b.n	801a41e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801a492:	4f22      	ldr	r7, [pc, #136]	@ (801a51c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801a494:	0973      	lsrs	r3, r6, #5
 801a496:	ea08 0707 	and.w	r7, r8, r7
 801a49a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a49e:	433b      	orrs	r3, r7
 801a4a0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801a4a4:	4333      	orrs	r3, r6
 801a4a6:	07e7      	lsls	r7, r4, #31
 801a4a8:	b29b      	uxth	r3, r3
 801a4aa:	d50b      	bpl.n	801a4c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801a4ac:	0040      	lsls	r0, r0, #1
 801a4ae:	0052      	lsls	r2, r2, #1
 801a4b0:	42a9      	cmp	r1, r5
 801a4b2:	d231      	bcs.n	801a518 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801a4b4:	180c      	adds	r4, r1, r0
 801a4b6:	42a1      	cmp	r1, r4
 801a4b8:	d202      	bcs.n	801a4c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801a4ba:	f821 3b02 	strh.w	r3, [r1], #2
 801a4be:	e7fa      	b.n	801a4b6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801a4c0:	4411      	add	r1, r2
 801a4c2:	e7f5      	b.n	801a4b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801a4c4:	078e      	lsls	r6, r1, #30
 801a4c6:	d008      	beq.n	801a4da <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801a4c8:	0066      	lsls	r6, r4, #1
 801a4ca:	460a      	mov	r2, r1
 801a4cc:	42aa      	cmp	r2, r5
 801a4ce:	d202      	bcs.n	801a4d6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801a4d0:	8013      	strh	r3, [r2, #0]
 801a4d2:	4432      	add	r2, r6
 801a4d4:	e7fa      	b.n	801a4cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801a4d6:	3102      	adds	r1, #2
 801a4d8:	3801      	subs	r0, #1
 801a4da:	07c2      	lsls	r2, r0, #31
 801a4dc:	d50b      	bpl.n	801a4f6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801a4de:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 801a4e2:	3a01      	subs	r2, #1
 801a4e4:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801a4e8:	0066      	lsls	r6, r4, #1
 801a4ea:	42aa      	cmp	r2, r5
 801a4ec:	d202      	bcs.n	801a4f4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801a4ee:	8013      	strh	r3, [r2, #0]
 801a4f0:	4432      	add	r2, r6
 801a4f2:	e7fa      	b.n	801a4ea <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801a4f4:	3801      	subs	r0, #1
 801a4f6:	b178      	cbz	r0, 801a518 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801a4f8:	1040      	asrs	r0, r0, #1
 801a4fa:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801a4fe:	0080      	lsls	r0, r0, #2
 801a500:	0064      	lsls	r4, r4, #1
 801a502:	42a9      	cmp	r1, r5
 801a504:	d208      	bcs.n	801a518 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801a506:	180e      	adds	r6, r1, r0
 801a508:	460a      	mov	r2, r1
 801a50a:	42b2      	cmp	r2, r6
 801a50c:	d202      	bcs.n	801a514 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801a50e:	f842 3b04 	str.w	r3, [r2], #4
 801a512:	e7fa      	b.n	801a50a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801a514:	4421      	add	r1, r4
 801a516:	e7f4      	b.n	801a502 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801a518:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a51c:	00fff800 	.word	0x00fff800

0801a520 <_ZN8touchgfx8LCD16bppC1Ev>:
 801a520:	2200      	movs	r2, #0
 801a522:	4912      	ldr	r1, [pc, #72]	@ (801a56c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801a524:	6001      	str	r1, [r0, #0]
 801a526:	e9c0 2201 	strd	r2, r2, [r0, #4]
 801a52a:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801a52e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801a532:	e9c0 2207 	strd	r2, r2, [r0, #28]
 801a536:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 801a53a:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 801a53e:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 801a542:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 801a546:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 801a54a:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 801a54e:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 801a552:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 801a556:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 801a55a:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 801a55e:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 801a562:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 801a566:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 801a56a:	4770      	bx	lr
 801a56c:	080288e0 	.word	0x080288e0

0801a570 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801a570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a574:	460d      	mov	r5, r1
 801a576:	b08d      	sub	sp, #52	@ 0x34
 801a578:	4604      	mov	r4, r0
 801a57a:	6808      	ldr	r0, [r1, #0]
 801a57c:	6849      	ldr	r1, [r1, #4]
 801a57e:	4699      	mov	r9, r3
 801a580:	ab08      	add	r3, sp, #32
 801a582:	c303      	stmia	r3!, {r0, r1}
 801a584:	6810      	ldr	r0, [r2, #0]
 801a586:	6851      	ldr	r1, [r2, #4]
 801a588:	ab0a      	add	r3, sp, #40	@ 0x28
 801a58a:	c303      	stmia	r3!, {r0, r1}
 801a58c:	a808      	add	r0, sp, #32
 801a58e:	f7f6 ffeb 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a592:	4629      	mov	r1, r5
 801a594:	a80a      	add	r0, sp, #40	@ 0x28
 801a596:	f7f7 f80f 	bl	80115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a59a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801a59e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 801a5a2:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 801a5a6:	4d63      	ldr	r5, [pc, #396]	@ (801a734 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801a5a8:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 801a5ac:	6828      	ldr	r0, [r5, #0]
 801a5ae:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801a5b2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801a5b6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801a5ba:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801a5be:	440a      	add	r2, r1
 801a5c0:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801a5c4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 801a5c8:	4413      	add	r3, r2
 801a5ca:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801a5ce:	6803      	ldr	r3, [r0, #0]
 801a5d0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801a5d2:	4798      	blx	r3
 801a5d4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801a5d8:	d119      	bne.n	801a60e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801a5da:	f010 0f20 	tst.w	r0, #32
 801a5de:	6828      	ldr	r0, [r5, #0]
 801a5e0:	d018      	beq.n	801a614 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801a5e2:	2500      	movs	r5, #0
 801a5e4:	6801      	ldr	r1, [r0, #0]
 801a5e6:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801a5ea:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801a5ee:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801a5f2:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 801a5f6:	9502      	str	r5, [sp, #8]
 801a5f8:	b2b6      	uxth	r6, r6
 801a5fa:	fa1f f588 	uxth.w	r5, r8
 801a5fe:	9601      	str	r6, [sp, #4]
 801a600:	9500      	str	r5, [sp, #0]
 801a602:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
 801a604:	4621      	mov	r1, r4
 801a606:	47a8      	blx	r5
 801a608:	b00d      	add	sp, #52	@ 0x34
 801a60a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a60e:	f010 0f40 	tst.w	r0, #64	@ 0x40
 801a612:	e7e4      	b.n	801a5de <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801a614:	6803      	ldr	r3, [r0, #0]
 801a616:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a618:	4798      	blx	r3
 801a61a:	4947      	ldr	r1, [pc, #284]	@ (801a738 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801a61c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801a620:	880b      	ldrh	r3, [r1, #0]
 801a622:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 801a626:	fb03 5202 	mla	r2, r3, r2, r5
 801a62a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a62e:	4373      	muls	r3, r6
 801a630:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a634:	9307      	str	r3, [sp, #28]
 801a636:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801a63a:	9306      	str	r3, [sp, #24]
 801a63c:	468a      	mov	sl, r1
 801a63e:	9b07      	ldr	r3, [sp, #28]
 801a640:	4298      	cmp	r0, r3
 801a642:	d270      	bcs.n	801a726 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801a644:	9b06      	ldr	r3, [sp, #24]
 801a646:	4621      	mov	r1, r4
 801a648:	eb00 0b03 	add.w	fp, r0, r3
 801a64c:	4558      	cmp	r0, fp
 801a64e:	d25d      	bcs.n	801a70c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801a650:	f851 4b04 	ldr.w	r4, [r1], #4
 801a654:	0e23      	lsrs	r3, r4, #24
 801a656:	d014      	beq.n	801a682 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801a658:	2bff      	cmp	r3, #255	@ 0xff
 801a65a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801a65e:	d112      	bne.n	801a686 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801a660:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801a664:	d10f      	bne.n	801a686 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801a666:	0963      	lsrs	r3, r4, #5
 801a668:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801a66c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a670:	f02c 0c07 	bic.w	ip, ip, #7
 801a674:	ea43 0c0c 	orr.w	ip, r3, ip
 801a678:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a67c:	ea4c 0404 	orr.w	r4, ip, r4
 801a680:	8004      	strh	r4, [r0, #0]
 801a682:	3002      	adds	r0, #2
 801a684:	e7e2      	b.n	801a64c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801a686:	fb09 f303 	mul.w	r3, r9, r3
 801a68a:	8807      	ldrh	r7, [r0, #0]
 801a68c:	1c5a      	adds	r2, r3, #1
 801a68e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801a692:	1212      	asrs	r2, r2, #8
 801a694:	123e      	asrs	r6, r7, #8
 801a696:	b293      	uxth	r3, r2
 801a698:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801a69c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801a6a0:	43d2      	mvns	r2, r2
 801a6a2:	b2d2      	uxtb	r2, r2
 801a6a4:	10fd      	asrs	r5, r7, #3
 801a6a6:	fb1e fe03 	smulbb	lr, lr, r3
 801a6aa:	00ff      	lsls	r7, r7, #3
 801a6ac:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801a6b0:	fb06 e602 	mla	r6, r6, r2, lr
 801a6b4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801a6b8:	b2ff      	uxtb	r7, r7
 801a6ba:	fa5f fc8c 	uxtb.w	ip, ip
 801a6be:	b2e4      	uxtb	r4, r4
 801a6c0:	b2b6      	uxth	r6, r6
 801a6c2:	fb1c fc03 	smulbb	ip, ip, r3
 801a6c6:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801a6ca:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801a6ce:	fb14 f403 	smulbb	r4, r4, r3
 801a6d2:	fb05 c502 	mla	r5, r5, r2, ip
 801a6d6:	f106 0e01 	add.w	lr, r6, #1
 801a6da:	fb07 4702 	mla	r7, r7, r2, r4
 801a6de:	b2ad      	uxth	r5, r5
 801a6e0:	b2bf      	uxth	r7, r7
 801a6e2:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801a6e6:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 801a6ea:	f105 0c01 	add.w	ip, r5, #1
 801a6ee:	1c7e      	adds	r6, r7, #1
 801a6f0:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801a6f4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801a6f8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a6fc:	096d      	lsrs	r5, r5, #5
 801a6fe:	ea46 060e 	orr.w	r6, r6, lr
 801a702:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a706:	432e      	orrs	r6, r5
 801a708:	8006      	strh	r6, [r0, #0]
 801a70a:	e7ba      	b.n	801a682 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801a70c:	f8ba 3000 	ldrh.w	r3, [sl]
 801a710:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 801a714:	eba3 0308 	sub.w	r3, r3, r8
 801a718:	eba4 0408 	sub.w	r4, r4, r8
 801a71c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a720:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801a724:	e78b      	b.n	801a63e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801a726:	4b03      	ldr	r3, [pc, #12]	@ (801a734 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801a728:	6818      	ldr	r0, [r3, #0]
 801a72a:	6803      	ldr	r3, [r0, #0]
 801a72c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a72e:	4798      	blx	r3
 801a730:	e76a      	b.n	801a608 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801a732:	bf00      	nop
 801a734:	20015238 	.word	0x20015238
 801a738:	20015232 	.word	0x20015232

0801a73c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801a73c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801a740:	460c      	mov	r4, r1
 801a742:	b085      	sub	sp, #20
 801a744:	6810      	ldr	r0, [r2, #0]
 801a746:	6851      	ldr	r1, [r2, #4]
 801a748:	466d      	mov	r5, sp
 801a74a:	c503      	stmia	r5!, {r0, r1}
 801a74c:	6818      	ldr	r0, [r3, #0]
 801a74e:	6859      	ldr	r1, [r3, #4]
 801a750:	4616      	mov	r6, r2
 801a752:	c503      	stmia	r5!, {r0, r1}
 801a754:	4668      	mov	r0, sp
 801a756:	f7f6 ff07 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a75a:	4631      	mov	r1, r6
 801a75c:	a802      	add	r0, sp, #8
 801a75e:	f7f6 ff2b 	bl	80115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a762:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801a766:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801a76a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801a76e:	4d28      	ldr	r5, [pc, #160]	@ (801a810 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801a770:	4e28      	ldr	r6, [pc, #160]	@ (801a814 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801a772:	6828      	ldr	r0, [r5, #0]
 801a774:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801a778:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801a77c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801a780:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801a784:	f8bd 1000 	ldrh.w	r1, [sp]
 801a788:	440a      	add	r2, r1
 801a78a:	f8ad 2008 	strh.w	r2, [sp, #8]
 801a78e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801a792:	4413      	add	r3, r2
 801a794:	f8ad 300a 	strh.w	r3, [sp, #10]
 801a798:	6803      	ldr	r3, [r0, #0]
 801a79a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a79c:	4798      	blx	r3
 801a79e:	8833      	ldrh	r3, [r6, #0]
 801a7a0:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801a7a4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801a7a8:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 801a818 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801a7ac:	fb03 1202 	mla	r2, r3, r2, r1
 801a7b0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a7b4:	fb08 f303 	mul.w	r3, r8, r3
 801a7b8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a7bc:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801a7c0:	4298      	cmp	r0, r3
 801a7c2:	d21d      	bcs.n	801a800 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801a7c4:	eb00 080c 	add.w	r8, r0, ip
 801a7c8:	4540      	cmp	r0, r8
 801a7ca:	d20f      	bcs.n	801a7ec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801a7cc:	f854 1b04 	ldr.w	r1, [r4], #4
 801a7d0:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801a7d4:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801a7d8:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801a7dc:	ea42 0209 	orr.w	r2, r2, r9
 801a7e0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801a7e4:	430a      	orrs	r2, r1
 801a7e6:	f820 2b02 	strh.w	r2, [r0], #2
 801a7ea:	e7ed      	b.n	801a7c8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801a7ec:	8832      	ldrh	r2, [r6, #0]
 801a7ee:	1bd2      	subs	r2, r2, r7
 801a7f0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a7f4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801a7f8:	1bd2      	subs	r2, r2, r7
 801a7fa:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801a7fe:	e7df      	b.n	801a7c0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801a800:	6828      	ldr	r0, [r5, #0]
 801a802:	6803      	ldr	r3, [r0, #0]
 801a804:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a806:	4798      	blx	r3
 801a808:	b005      	add	sp, #20
 801a80a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801a80e:	bf00      	nop
 801a810:	20015238 	.word	0x20015238
 801a814:	20015232 	.word	0x20015232
 801a818:	fffff800 	.word	0xfffff800

0801a81c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801a81c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a820:	460e      	mov	r6, r1
 801a822:	b08e      	sub	sp, #56	@ 0x38
 801a824:	4604      	mov	r4, r0
 801a826:	6808      	ldr	r0, [r1, #0]
 801a828:	6849      	ldr	r1, [r1, #4]
 801a82a:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 801aa04 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801a82e:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 801aa08 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801a832:	461d      	mov	r5, r3
 801a834:	ab0a      	add	r3, sp, #40	@ 0x28
 801a836:	c303      	stmia	r3!, {r0, r1}
 801a838:	6810      	ldr	r0, [r2, #0]
 801a83a:	6851      	ldr	r1, [r2, #4]
 801a83c:	ab0c      	add	r3, sp, #48	@ 0x30
 801a83e:	c303      	stmia	r3!, {r0, r1}
 801a840:	a80a      	add	r0, sp, #40	@ 0x28
 801a842:	f7f6 fe91 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a846:	4631      	mov	r1, r6
 801a848:	a80c      	add	r0, sp, #48	@ 0x30
 801a84a:	f7f6 feb5 	bl	80115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a84e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801a852:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801a856:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801a85a:	f8d8 0000 	ldr.w	r0, [r8]
 801a85e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 801a862:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801a866:	fb11 2103 	smlabb	r1, r1, r3, r2
 801a86a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801a86e:	440c      	add	r4, r1
 801a870:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 801a874:	440a      	add	r2, r1
 801a876:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801a87a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801a87e:	4413      	add	r3, r2
 801a880:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801a884:	6803      	ldr	r3, [r0, #0]
 801a886:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801a888:	4798      	blx	r3
 801a88a:	2dff      	cmp	r5, #255	@ 0xff
 801a88c:	d124      	bne.n	801a8d8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801a88e:	f010 0f01 	tst.w	r0, #1
 801a892:	f8d8 0000 	ldr.w	r0, [r8]
 801a896:	d022      	beq.n	801a8de <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801a898:	2100      	movs	r1, #0
 801a89a:	f8d0 c000 	ldr.w	ip, [r0]
 801a89e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801a8a2:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 801a8a6:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801a8aa:	f04f 0e01 	mov.w	lr, #1
 801a8ae:	f8cd e018 	str.w	lr, [sp, #24]
 801a8b2:	f8b9 e000 	ldrh.w	lr, [r9]
 801a8b6:	9503      	str	r5, [sp, #12]
 801a8b8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801a8bc:	b2b6      	uxth	r6, r6
 801a8be:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801a8c2:	9102      	str	r1, [sp, #8]
 801a8c4:	b2bf      	uxth	r7, r7
 801a8c6:	9601      	str	r6, [sp, #4]
 801a8c8:	9700      	str	r7, [sp, #0]
 801a8ca:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
 801a8ce:	4621      	mov	r1, r4
 801a8d0:	47a8      	blx	r5
 801a8d2:	b00e      	add	sp, #56	@ 0x38
 801a8d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a8d8:	f010 0f04 	tst.w	r0, #4
 801a8dc:	e7d9      	b.n	801a892 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801a8de:	6803      	ldr	r3, [r0, #0]
 801a8e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a8e2:	4798      	blx	r3
 801a8e4:	f8b9 3000 	ldrh.w	r3, [r9]
 801a8e8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801a8ec:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 801a8f0:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801a8f4:	fb03 1202 	mla	r2, r3, r2, r1
 801a8f8:	ebac 0c07 	sub.w	ip, ip, r7
 801a8fc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a900:	435e      	muls	r6, r3
 801a902:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801a906:	2dff      	cmp	r5, #255	@ 0xff
 801a908:	eba3 0707 	sub.w	r7, r3, r7
 801a90c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801a910:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801a914:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801a918:	d049      	beq.n	801a9ae <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801a91a:	43eb      	mvns	r3, r5
 801a91c:	fa1f f985 	uxth.w	r9, r5
 801a920:	b2db      	uxtb	r3, r3
 801a922:	42b0      	cmp	r0, r6
 801a924:	d266      	bcs.n	801a9f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801a926:	eb00 0a0e 	add.w	sl, r0, lr
 801a92a:	4550      	cmp	r0, sl
 801a92c:	4621      	mov	r1, r4
 801a92e:	f104 0403 	add.w	r4, r4, #3
 801a932:	d25b      	bcs.n	801a9ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801a934:	8802      	ldrh	r2, [r0, #0]
 801a936:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801a93a:	ea4f 2822 	mov.w	r8, r2, asr #8
 801a93e:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801a942:	fb11 f109 	smulbb	r1, r1, r9
 801a946:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801a94a:	10d5      	asrs	r5, r2, #3
 801a94c:	fb08 1803 	mla	r8, r8, r3, r1
 801a950:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801a954:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801a958:	fb11 f109 	smulbb	r1, r1, r9
 801a95c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801a960:	fb05 1503 	mla	r5, r5, r3, r1
 801a964:	00d2      	lsls	r2, r2, #3
 801a966:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801a96a:	b2d2      	uxtb	r2, r2
 801a96c:	fb11 f109 	smulbb	r1, r1, r9
 801a970:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801a974:	fa1f f888 	uxth.w	r8, r8
 801a978:	fb02 1203 	mla	r2, r2, r3, r1
 801a97c:	b292      	uxth	r2, r2
 801a97e:	f108 0101 	add.w	r1, r8, #1
 801a982:	b2ad      	uxth	r5, r5
 801a984:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801a988:	1c51      	adds	r1, r2, #1
 801a98a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a98e:	1c69      	adds	r1, r5, #1
 801a990:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801a994:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801a998:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a99c:	096d      	lsrs	r5, r5, #5
 801a99e:	ea42 0208 	orr.w	r2, r2, r8
 801a9a2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a9a6:	432a      	orrs	r2, r5
 801a9a8:	f820 2b02 	strh.w	r2, [r0], #2
 801a9ac:	e7bd      	b.n	801a92a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801a9ae:	4a14      	ldr	r2, [pc, #80]	@ (801aa00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801a9b0:	42b0      	cmp	r0, r6
 801a9b2:	d21f      	bcs.n	801a9f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801a9b4:	eb00 050e 	add.w	r5, r0, lr
 801a9b8:	42a8      	cmp	r0, r5
 801a9ba:	4621      	mov	r1, r4
 801a9bc:	f104 0403 	add.w	r4, r4, #3
 801a9c0:	d210      	bcs.n	801a9e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801a9c2:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801a9c6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801a9ca:	00db      	lsls	r3, r3, #3
 801a9cc:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801a9d0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a9d4:	430b      	orrs	r3, r1
 801a9d6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801a9da:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801a9de:	f820 3b02 	strh.w	r3, [r0], #2
 801a9e2:	e7e9      	b.n	801a9b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801a9e4:	4438      	add	r0, r7
 801a9e6:	eb01 040c 	add.w	r4, r1, ip
 801a9ea:	e7e1      	b.n	801a9b0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801a9ec:	4438      	add	r0, r7
 801a9ee:	eb01 040c 	add.w	r4, r1, ip
 801a9f2:	e796      	b.n	801a922 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801a9f4:	4b03      	ldr	r3, [pc, #12]	@ (801aa04 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801a9f6:	6818      	ldr	r0, [r3, #0]
 801a9f8:	6803      	ldr	r3, [r0, #0]
 801a9fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a9fc:	4798      	blx	r3
 801a9fe:	e768      	b.n	801a8d2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801aa00:	fffff800 	.word	0xfffff800
 801aa04:	20015238 	.word	0x20015238
 801aa08:	20015232 	.word	0x20015232

0801aa0c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801aa0c:	b4f0      	push	{r4, r5, r6, r7}
 801aa0e:	4616      	mov	r6, r2
 801aa10:	2e01      	cmp	r6, #1
 801aa12:	461c      	mov	r4, r3
 801aa14:	460d      	mov	r5, r1
 801aa16:	9a04      	ldr	r2, [sp, #16]
 801aa18:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801aa1c:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801aa20:	d012      	beq.n	801aa48 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801aa22:	d303      	bcc.n	801aa2c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801aa24:	2e02      	cmp	r6, #2
 801aa26:	d00a      	beq.n	801aa3e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801aa28:	bcf0      	pop	{r4, r5, r6, r7}
 801aa2a:	4770      	bx	lr
 801aa2c:	6805      	ldr	r5, [r0, #0]
 801aa2e:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801aa32:	68ed      	ldr	r5, [r5, #12]
 801aa34:	4613      	mov	r3, r2
 801aa36:	46ac      	mov	ip, r5
 801aa38:	4622      	mov	r2, r4
 801aa3a:	bcf0      	pop	{r4, r5, r6, r7}
 801aa3c:	4760      	bx	ip
 801aa3e:	4621      	mov	r1, r4
 801aa40:	4628      	mov	r0, r5
 801aa42:	bcf0      	pop	{r4, r5, r6, r7}
 801aa44:	f7ff bd94 	b.w	801a570 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801aa48:	4621      	mov	r1, r4
 801aa4a:	4628      	mov	r0, r5
 801aa4c:	bcf0      	pop	{r4, r5, r6, r7}
 801aa4e:	f7ff bee5 	b.w	801a81c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801aa54 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801aa54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa58:	4681      	mov	r9, r0
 801aa5a:	b093      	sub	sp, #76	@ 0x4c
 801aa5c:	6810      	ldr	r0, [r2, #0]
 801aa5e:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 801aa62:	4f6d      	ldr	r7, [pc, #436]	@ (801ac18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801aa64:	4688      	mov	r8, r1
 801aa66:	6851      	ldr	r1, [r2, #4]
 801aa68:	ac0e      	add	r4, sp, #56	@ 0x38
 801aa6a:	c403      	stmia	r4!, {r0, r1}
 801aa6c:	6818      	ldr	r0, [r3, #0]
 801aa6e:	6859      	ldr	r1, [r3, #4]
 801aa70:	ac10      	add	r4, sp, #64	@ 0x40
 801aa72:	4616      	mov	r6, r2
 801aa74:	c403      	stmia	r4!, {r0, r1}
 801aa76:	a80e      	add	r0, sp, #56	@ 0x38
 801aa78:	f7f6 fd76 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801aa7c:	4631      	mov	r1, r6
 801aa7e:	a810      	add	r0, sp, #64	@ 0x40
 801aa80:	f7f6 fd9a 	bl	80115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801aa84:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801aa88:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801aa8c:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 801aa90:	4e62      	ldr	r6, [pc, #392]	@ (801ac1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801aa92:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 801aa96:	6830      	ldr	r0, [r6, #0]
 801aa98:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801aa9c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801aaa0:	4489      	add	r9, r1
 801aaa2:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 801aaa6:	440a      	add	r2, r1
 801aaa8:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 801aaac:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801aab0:	4413      	add	r3, r2
 801aab2:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801aab6:	6803      	ldr	r3, [r0, #0]
 801aab8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801aaba:	4798      	blx	r3
 801aabc:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801aac0:	6830      	ldr	r0, [r6, #0]
 801aac2:	d01d      	beq.n	801ab00 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801aac4:	2200      	movs	r2, #0
 801aac6:	6801      	ldr	r1, [r0, #0]
 801aac8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801aacc:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801aad0:	220b      	movs	r2, #11
 801aad2:	9207      	str	r2, [sp, #28]
 801aad4:	883a      	ldrh	r2, [r7, #0]
 801aad6:	9206      	str	r2, [sp, #24]
 801aad8:	2201      	movs	r2, #1
 801aada:	e9cd a204 	strd	sl, r2, [sp, #16]
 801aade:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 801aae2:	9203      	str	r2, [sp, #12]
 801aae4:	b2a4      	uxth	r4, r4
 801aae6:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 801aaea:	9200      	str	r2, [sp, #0]
 801aaec:	b2ad      	uxth	r5, r5
 801aaee:	9502      	str	r5, [sp, #8]
 801aaf0:	9401      	str	r4, [sp, #4]
 801aaf2:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
 801aaf4:	4642      	mov	r2, r8
 801aaf6:	4649      	mov	r1, r9
 801aaf8:	47a0      	blx	r4
 801aafa:	b013      	add	sp, #76	@ 0x4c
 801aafc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab00:	6803      	ldr	r3, [r0, #0]
 801ab02:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ab04:	4798      	blx	r3
 801ab06:	883b      	ldrh	r3, [r7, #0]
 801ab08:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801ab0c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 801ab10:	fb03 1202 	mla	r2, r3, r2, r1
 801ab14:	435d      	muls	r5, r3
 801ab16:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ab1a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801ab1e:	920c      	str	r2, [sp, #48]	@ 0x30
 801ab20:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801ab24:	1b12      	subs	r2, r2, r4
 801ab26:	920d      	str	r2, [sp, #52]	@ 0x34
 801ab28:	0062      	lsls	r2, r4, #1
 801ab2a:	1b1c      	subs	r4, r3, r4
 801ab2c:	0063      	lsls	r3, r4, #1
 801ab2e:	920a      	str	r2, [sp, #40]	@ 0x28
 801ab30:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ab32:	f04f 0e04 	mov.w	lr, #4
 801ab36:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ab38:	4298      	cmp	r0, r3
 801ab3a:	d266      	bcs.n	801ac0a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801ab3c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ab3e:	eb00 0b03 	add.w	fp, r0, r3
 801ab42:	4558      	cmp	r0, fp
 801ab44:	d25c      	bcs.n	801ac00 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801ab46:	f819 3b01 	ldrb.w	r3, [r9], #1
 801ab4a:	fb1e e303 	smlabb	r3, lr, r3, lr
 801ab4e:	f858 2003 	ldr.w	r2, [r8, r3]
 801ab52:	0e11      	lsrs	r1, r2, #24
 801ab54:	d012      	beq.n	801ab7c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801ab56:	29ff      	cmp	r1, #255	@ 0xff
 801ab58:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801ab5c:	d110      	bne.n	801ab80 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801ab5e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801ab62:	d10d      	bne.n	801ab80 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801ab64:	0953      	lsrs	r3, r2, #5
 801ab66:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 801ab6a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ab6e:	f027 0707 	bic.w	r7, r7, #7
 801ab72:	431f      	orrs	r7, r3
 801ab74:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ab78:	433a      	orrs	r2, r7
 801ab7a:	8002      	strh	r2, [r0, #0]
 801ab7c:	3002      	adds	r0, #2
 801ab7e:	e7e0      	b.n	801ab42 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801ab80:	fb0a f101 	mul.w	r1, sl, r1
 801ab84:	8806      	ldrh	r6, [r0, #0]
 801ab86:	1c4b      	adds	r3, r1, #1
 801ab88:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801ab8c:	1235      	asrs	r5, r6, #8
 801ab8e:	10f4      	asrs	r4, r6, #3
 801ab90:	121b      	asrs	r3, r3, #8
 801ab92:	00f6      	lsls	r6, r6, #3
 801ab94:	b299      	uxth	r1, r3
 801ab96:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801ab9a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801ab9e:	b2f6      	uxtb	r6, r6
 801aba0:	43db      	mvns	r3, r3
 801aba2:	b2d2      	uxtb	r2, r2
 801aba4:	b2db      	uxtb	r3, r3
 801aba6:	fb1c fc01 	smulbb	ip, ip, r1
 801abaa:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801abae:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801abb2:	fb12 f201 	smulbb	r2, r2, r1
 801abb6:	fb05 c503 	mla	r5, r5, r3, ip
 801abba:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801abbe:	b2ff      	uxtb	r7, r7
 801abc0:	fb06 2203 	mla	r2, r6, r3, r2
 801abc4:	b2ad      	uxth	r5, r5
 801abc6:	fb17 f701 	smulbb	r7, r7, r1
 801abca:	b292      	uxth	r2, r2
 801abcc:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801abd0:	fb04 7403 	mla	r4, r4, r3, r7
 801abd4:	f105 0c01 	add.w	ip, r5, #1
 801abd8:	1c57      	adds	r7, r2, #1
 801abda:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801abde:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801abe2:	b2a4      	uxth	r4, r4
 801abe4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801abe8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801abec:	433d      	orrs	r5, r7
 801abee:	1c67      	adds	r7, r4, #1
 801abf0:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801abf4:	0964      	lsrs	r4, r4, #5
 801abf6:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801abfa:	4325      	orrs	r5, r4
 801abfc:	8005      	strh	r5, [r0, #0]
 801abfe:	e7bd      	b.n	801ab7c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801ac00:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ac02:	4418      	add	r0, r3
 801ac04:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ac06:	4499      	add	r9, r3
 801ac08:	e795      	b.n	801ab36 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801ac0a:	4b04      	ldr	r3, [pc, #16]	@ (801ac1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801ac0c:	6818      	ldr	r0, [r3, #0]
 801ac0e:	6803      	ldr	r3, [r0, #0]
 801ac10:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801ac12:	4798      	blx	r3
 801ac14:	e771      	b.n	801aafa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801ac16:	bf00      	nop
 801ac18:	20015232 	.word	0x20015232
 801ac1c:	20015238 	.word	0x20015238

0801ac20 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801ac20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac24:	b087      	sub	sp, #28
 801ac26:	4680      	mov	r8, r0
 801ac28:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 801ac2c:	460d      	mov	r5, r1
 801ac2e:	4614      	mov	r4, r2
 801ac30:	2e00      	cmp	r6, #0
 801ac32:	f000 80b9 	beq.w	801ada8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801ac36:	6810      	ldr	r0, [r2, #0]
 801ac38:	6851      	ldr	r1, [r2, #4]
 801ac3a:	af02      	add	r7, sp, #8
 801ac3c:	c703      	stmia	r7!, {r0, r1}
 801ac3e:	6818      	ldr	r0, [r3, #0]
 801ac40:	6859      	ldr	r1, [r3, #4]
 801ac42:	af04      	add	r7, sp, #16
 801ac44:	c703      	stmia	r7!, {r0, r1}
 801ac46:	a802      	add	r0, sp, #8
 801ac48:	f7f6 fc8e 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ac4c:	4621      	mov	r1, r4
 801ac4e:	a804      	add	r0, sp, #16
 801ac50:	f7f6 fcb2 	bl	80115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ac54:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801ac58:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ac5c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801ac60:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801ac64:	fb14 2103 	smlabb	r1, r4, r3, r2
 801ac68:	eb08 0401 	add.w	r4, r8, r1
 801ac6c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801ac70:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801ac74:	440a      	add	r2, r1
 801ac76:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ac7a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ac7e:	4413      	add	r3, r2
 801ac80:	f8ad 3012 	strh.w	r3, [sp, #18]
 801ac84:	4b4a      	ldr	r3, [pc, #296]	@ (801adb0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801ac86:	6818      	ldr	r0, [r3, #0]
 801ac88:	6803      	ldr	r3, [r0, #0]
 801ac8a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ac8c:	4798      	blx	r3
 801ac8e:	4b49      	ldr	r3, [pc, #292]	@ (801adb4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801ac90:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801ac94:	881a      	ldrh	r2, [r3, #0]
 801ac96:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801ac9a:	2eff      	cmp	r6, #255	@ 0xff
 801ac9c:	fb02 c101 	mla	r1, r2, r1, ip
 801aca0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801aca4:	fb02 f207 	mul.w	r2, r2, r7
 801aca8:	f105 0104 	add.w	r1, r5, #4
 801acac:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801acb0:	461d      	mov	r5, r3
 801acb2:	d05a      	beq.n	801ad6a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801acb4:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 801acb8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801acbc:	b2b6      	uxth	r6, r6
 801acbe:	fa1f fe8e 	uxth.w	lr, lr
 801acc2:	9301      	str	r3, [sp, #4]
 801acc4:	4282      	cmp	r2, r0
 801acc6:	d96a      	bls.n	801ad9e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801acc8:	eb00 0b0a 	add.w	fp, r0, sl
 801accc:	4583      	cmp	fp, r0
 801acce:	d940      	bls.n	801ad52 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801acd0:	f814 3b01 	ldrb.w	r3, [r4], #1
 801acd4:	8805      	ldrh	r5, [r0, #0]
 801acd6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801acda:	122f      	asrs	r7, r5, #8
 801acdc:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801ace0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801ace4:	fb17 f70e 	smulbb	r7, r7, lr
 801ace8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801acec:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801acf0:	00ed      	lsls	r5, r5, #3
 801acf2:	fb0c 7c06 	mla	ip, ip, r6, r7
 801acf6:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801acfa:	10df      	asrs	r7, r3, #3
 801acfc:	b2ed      	uxtb	r5, r5
 801acfe:	00db      	lsls	r3, r3, #3
 801ad00:	fa1f fc8c 	uxth.w	ip, ip
 801ad04:	fb19 f90e 	smulbb	r9, r9, lr
 801ad08:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ad0c:	b2db      	uxtb	r3, r3
 801ad0e:	fb15 f50e 	smulbb	r5, r5, lr
 801ad12:	fb07 9706 	mla	r7, r7, r6, r9
 801ad16:	fb03 5306 	mla	r3, r3, r6, r5
 801ad1a:	f10c 0901 	add.w	r9, ip, #1
 801ad1e:	b29b      	uxth	r3, r3
 801ad20:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801ad24:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 801ad28:	f103 0c01 	add.w	ip, r3, #1
 801ad2c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ad30:	b2bf      	uxth	r7, r7
 801ad32:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ad36:	ea4c 0c09 	orr.w	ip, ip, r9
 801ad3a:	f107 0901 	add.w	r9, r7, #1
 801ad3e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801ad42:	097f      	lsrs	r7, r7, #5
 801ad44:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801ad48:	ea4c 0c07 	orr.w	ip, ip, r7
 801ad4c:	f820 cb02 	strh.w	ip, [r0], #2
 801ad50:	e7bc      	b.n	801accc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801ad52:	9b01      	ldr	r3, [sp, #4]
 801ad54:	881b      	ldrh	r3, [r3, #0]
 801ad56:	eba3 0308 	sub.w	r3, r3, r8
 801ad5a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ad5e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801ad62:	eba3 0308 	sub.w	r3, r3, r8
 801ad66:	441c      	add	r4, r3
 801ad68:	e7ac      	b.n	801acc4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801ad6a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801ad6e:	4282      	cmp	r2, r0
 801ad70:	d915      	bls.n	801ad9e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801ad72:	eb00 060a 	add.w	r6, r0, sl
 801ad76:	4286      	cmp	r6, r0
 801ad78:	d906      	bls.n	801ad88 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801ad7a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801ad7e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801ad82:	f820 3b02 	strh.w	r3, [r0], #2
 801ad86:	e7f6      	b.n	801ad76 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801ad88:	882b      	ldrh	r3, [r5, #0]
 801ad8a:	eba3 0308 	sub.w	r3, r3, r8
 801ad8e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ad92:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801ad96:	eba3 0308 	sub.w	r3, r3, r8
 801ad9a:	441c      	add	r4, r3
 801ad9c:	e7e7      	b.n	801ad6e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801ad9e:	4b04      	ldr	r3, [pc, #16]	@ (801adb0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801ada0:	6818      	ldr	r0, [r3, #0]
 801ada2:	6803      	ldr	r3, [r0, #0]
 801ada4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801ada6:	4798      	blx	r3
 801ada8:	b007      	add	sp, #28
 801adaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801adae:	bf00      	nop
 801adb0:	20015238 	.word	0x20015238
 801adb4:	20015232 	.word	0x20015232

0801adb8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801adb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801adbc:	b091      	sub	sp, #68	@ 0x44
 801adbe:	4680      	mov	r8, r0
 801adc0:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 801adc4:	460f      	mov	r7, r1
 801adc6:	4614      	mov	r4, r2
 801adc8:	2d00      	cmp	r5, #0
 801adca:	d051      	beq.n	801ae70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801adcc:	6810      	ldr	r0, [r2, #0]
 801adce:	6851      	ldr	r1, [r2, #4]
 801add0:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 801afd4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801add4:	ae0c      	add	r6, sp, #48	@ 0x30
 801add6:	c603      	stmia	r6!, {r0, r1}
 801add8:	6818      	ldr	r0, [r3, #0]
 801adda:	6859      	ldr	r1, [r3, #4]
 801addc:	ae0e      	add	r6, sp, #56	@ 0x38
 801adde:	c603      	stmia	r6!, {r0, r1}
 801ade0:	a80c      	add	r0, sp, #48	@ 0x30
 801ade2:	f7f6 fbc1 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ade6:	4621      	mov	r1, r4
 801ade8:	a80e      	add	r0, sp, #56	@ 0x38
 801adea:	f7f6 fbe5 	bl	80115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801adee:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 801adf2:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801adf6:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801adfa:	f8d9 0000 	ldr.w	r0, [r9]
 801adfe:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801ae02:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 801ae06:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ae0a:	eb08 0401 	add.w	r4, r8, r1
 801ae0e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801ae12:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 801afd8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801ae16:	440a      	add	r2, r1
 801ae18:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801ae1c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 801ae20:	4413      	add	r3, r2
 801ae22:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 801ae26:	6803      	ldr	r3, [r0, #0]
 801ae28:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801ae2a:	4798      	blx	r3
 801ae2c:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801ae30:	f8d9 0000 	ldr.w	r0, [r9]
 801ae34:	d01f      	beq.n	801ae76 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801ae36:	2200      	movs	r2, #0
 801ae38:	6801      	ldr	r1, [r0, #0]
 801ae3a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801ae3e:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801ae42:	220b      	movs	r2, #11
 801ae44:	9207      	str	r2, [sp, #28]
 801ae46:	f8b8 2000 	ldrh.w	r2, [r8]
 801ae4a:	9206      	str	r2, [sp, #24]
 801ae4c:	2201      	movs	r2, #1
 801ae4e:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801ae52:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 801ae56:	9203      	str	r2, [sp, #12]
 801ae58:	fa1f f28a 	uxth.w	r2, sl
 801ae5c:	9202      	str	r2, [sp, #8]
 801ae5e:	b2b6      	uxth	r6, r6
 801ae60:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801ae64:	9200      	str	r2, [sp, #0]
 801ae66:	9601      	str	r6, [sp, #4]
 801ae68:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
 801ae6a:	463a      	mov	r2, r7
 801ae6c:	4621      	mov	r1, r4
 801ae6e:	47a8      	blx	r5
 801ae70:	b011      	add	sp, #68	@ 0x44
 801ae72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ae76:	6803      	ldr	r3, [r0, #0]
 801ae78:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ae7a:	4798      	blx	r3
 801ae7c:	f8b8 2000 	ldrh.w	r2, [r8]
 801ae80:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801ae84:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 801ae88:	2dff      	cmp	r5, #255	@ 0xff
 801ae8a:	fb02 1303 	mla	r3, r2, r3, r1
 801ae8e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ae92:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801ae96:	fb0a fa02 	mul.w	sl, sl, r2
 801ae9a:	d062      	beq.n	801af62 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801ae9c:	ea6f 0c05 	mvn.w	ip, r5
 801aea0:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801aea4:	930a      	str	r3, [sp, #40]	@ 0x28
 801aea6:	b2ad      	uxth	r5, r5
 801aea8:	fa5f fc8c 	uxtb.w	ip, ip
 801aeac:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 801aeb0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801aeb2:	4298      	cmp	r0, r3
 801aeb4:	f080 8085 	bcs.w	801afc2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801aeb8:	eb00 0b09 	add.w	fp, r0, r9
 801aebc:	4558      	cmp	r0, fp
 801aebe:	d246      	bcs.n	801af4e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801aec0:	f814 eb01 	ldrb.w	lr, [r4], #1
 801aec4:	2303      	movs	r3, #3
 801aec6:	2204      	movs	r2, #4
 801aec8:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801aecc:	eb07 0a0e 	add.w	sl, r7, lr
 801aed0:	8803      	ldrh	r3, [r0, #0]
 801aed2:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801aed6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801aeda:	1219      	asrs	r1, r3, #8
 801aedc:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801aee0:	fb18 f805 	smulbb	r8, r8, r5
 801aee4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801aee8:	10da      	asrs	r2, r3, #3
 801aeea:	fb01 810c 	mla	r1, r1, ip, r8
 801aeee:	00db      	lsls	r3, r3, #3
 801aef0:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801aef4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801aef8:	b2db      	uxtb	r3, r3
 801aefa:	fb18 f805 	smulbb	r8, r8, r5
 801aefe:	fb1e fe05 	smulbb	lr, lr, r5
 801af02:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801af06:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801af0a:	b289      	uxth	r1, r1
 801af0c:	fb02 820c 	mla	r2, r2, ip, r8
 801af10:	fb03 e30c 	mla	r3, r3, ip, lr
 801af14:	b292      	uxth	r2, r2
 801af16:	b29b      	uxth	r3, r3
 801af18:	f101 0801 	add.w	r8, r1, #1
 801af1c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801af20:	f103 0e01 	add.w	lr, r3, #1
 801af24:	f102 0801 	add.w	r8, r2, #1
 801af28:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801af2c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801af30:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801af34:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801af38:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801af3c:	ea4e 0101 	orr.w	r1, lr, r1
 801af40:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801af44:	ea41 0108 	orr.w	r1, r1, r8
 801af48:	f820 1b02 	strh.w	r1, [r0], #2
 801af4c:	e7b6      	b.n	801aebc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801af4e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801af50:	881b      	ldrh	r3, [r3, #0]
 801af52:	1b9b      	subs	r3, r3, r6
 801af54:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801af58:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801af5c:	1b9b      	subs	r3, r3, r6
 801af5e:	441c      	add	r4, r3
 801af60:	e7a6      	b.n	801aeb0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801af62:	491b      	ldr	r1, [pc, #108]	@ (801afd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801af64:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801af68:	2203      	movs	r2, #3
 801af6a:	2504      	movs	r5, #4
 801af6c:	4550      	cmp	r0, sl
 801af6e:	d228      	bcs.n	801afc2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801af70:	eb00 0c09 	add.w	ip, r0, r9
 801af74:	4560      	cmp	r0, ip
 801af76:	4623      	mov	r3, r4
 801af78:	d219      	bcs.n	801afae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801af7a:	f893 e000 	ldrb.w	lr, [r3]
 801af7e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801af82:	eb07 0b0e 	add.w	fp, r7, lr
 801af86:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801af8a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801af8e:	f89b b001 	ldrb.w	fp, [fp, #1]
 801af92:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801af96:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801af9a:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801af9e:	ea43 030b 	orr.w	r3, r3, fp
 801afa2:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801afa6:	3401      	adds	r4, #1
 801afa8:	f820 3b02 	strh.w	r3, [r0], #2
 801afac:	e7e2      	b.n	801af74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801afae:	f8b8 3000 	ldrh.w	r3, [r8]
 801afb2:	1b9b      	subs	r3, r3, r6
 801afb4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801afb8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801afbc:	1b9b      	subs	r3, r3, r6
 801afbe:	441c      	add	r4, r3
 801afc0:	e7d4      	b.n	801af6c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801afc2:	4b04      	ldr	r3, [pc, #16]	@ (801afd4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801afc4:	6818      	ldr	r0, [r3, #0]
 801afc6:	6803      	ldr	r3, [r0, #0]
 801afc8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801afca:	4798      	blx	r3
 801afcc:	e750      	b.n	801ae70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801afce:	bf00      	nop
 801afd0:	fffff800 	.word	0xfffff800
 801afd4:	20015238 	.word	0x20015238
 801afd8:	20015232 	.word	0x20015232

0801afdc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801afdc:	b4f0      	push	{r4, r5, r6, r7}
 801afde:	460c      	mov	r4, r1
 801afe0:	4611      	mov	r1, r2
 801afe2:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801afe6:	780f      	ldrb	r7, [r1, #0]
 801afe8:	784e      	ldrb	r6, [r1, #1]
 801afea:	2f01      	cmp	r7, #1
 801afec:	461a      	mov	r2, r3
 801afee:	9b04      	ldr	r3, [sp, #16]
 801aff0:	d038      	beq.n	801b064 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 801aff2:	d31f      	bcc.n	801b034 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 801aff4:	2f02      	cmp	r7, #2
 801aff6:	d14d      	bne.n	801b094 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801aff8:	2e03      	cmp	r6, #3
 801affa:	d84b      	bhi.n	801b094 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801affc:	e8df f006 	tbb	[pc, r6]
 801b000:	17140702 	.word	0x17140702
 801b004:	9504      	str	r5, [sp, #16]
 801b006:	4620      	mov	r0, r4
 801b008:	bcf0      	pop	{r4, r5, r6, r7}
 801b00a:	f7ff be09 	b.w	801ac20 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801b00e:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801b010:	2800      	cmp	r0, #0
 801b012:	d03f      	beq.n	801b094 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801b014:	6806      	ldr	r6, [r0, #0]
 801b016:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801b01a:	68b5      	ldr	r5, [r6, #8]
 801b01c:	4613      	mov	r3, r2
 801b01e:	46ac      	mov	ip, r5
 801b020:	460a      	mov	r2, r1
 801b022:	4621      	mov	r1, r4
 801b024:	bcf0      	pop	{r4, r5, r6, r7}
 801b026:	4760      	bx	ip
 801b028:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801b02c:	e7f0      	b.n	801b010 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801b02e:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801b032:	e7ed      	b.n	801b010 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801b034:	2e03      	cmp	r6, #3
 801b036:	d82d      	bhi.n	801b094 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801b038:	e8df f006 	tbb	[pc, r6]
 801b03c:	110e0702 	.word	0x110e0702
 801b040:	9504      	str	r5, [sp, #16]
 801b042:	4620      	mov	r0, r4
 801b044:	bcf0      	pop	{r4, r5, r6, r7}
 801b046:	f7ff bd05 	b.w	801aa54 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801b04a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801b04c:	b310      	cbz	r0, 801b094 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801b04e:	6806      	ldr	r6, [r0, #0]
 801b050:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801b054:	68f5      	ldr	r5, [r6, #12]
 801b056:	e7e1      	b.n	801b01c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801b058:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801b05c:	e7f6      	b.n	801b04c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801b05e:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801b062:	e7f3      	b.n	801b04c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801b064:	2e03      	cmp	r6, #3
 801b066:	d815      	bhi.n	801b094 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801b068:	e8df f006 	tbb	[pc, r6]
 801b06c:	110e0702 	.word	0x110e0702
 801b070:	9504      	str	r5, [sp, #16]
 801b072:	4620      	mov	r0, r4
 801b074:	bcf0      	pop	{r4, r5, r6, r7}
 801b076:	f7ff be9f 	b.w	801adb8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801b07a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801b07c:	b150      	cbz	r0, 801b094 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801b07e:	6806      	ldr	r6, [r0, #0]
 801b080:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801b084:	6935      	ldr	r5, [r6, #16]
 801b086:	e7c9      	b.n	801b01c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801b088:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801b08c:	e7f6      	b.n	801b07c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801b08e:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801b092:	e7f3      	b.n	801b07c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801b094:	bcf0      	pop	{r4, r5, r6, r7}
 801b096:	4770      	bx	lr

0801b098 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801b098:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b09c:	4604      	mov	r4, r0
 801b09e:	b087      	sub	sp, #28
 801b0a0:	6810      	ldr	r0, [r2, #0]
 801b0a2:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 801b0a6:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 801b2e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801b0aa:	460e      	mov	r6, r1
 801b0ac:	6851      	ldr	r1, [r2, #4]
 801b0ae:	ad02      	add	r5, sp, #8
 801b0b0:	c503      	stmia	r5!, {r0, r1}
 801b0b2:	6818      	ldr	r0, [r3, #0]
 801b0b4:	6859      	ldr	r1, [r3, #4]
 801b0b6:	ad04      	add	r5, sp, #16
 801b0b8:	4617      	mov	r7, r2
 801b0ba:	c503      	stmia	r5!, {r0, r1}
 801b0bc:	a802      	add	r0, sp, #8
 801b0be:	f7f6 fa53 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b0c2:	4639      	mov	r1, r7
 801b0c4:	a804      	add	r0, sp, #16
 801b0c6:	f7f6 fa77 	bl	80115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b0ca:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801b0ce:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801b0d2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801b0d6:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801b0da:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801b0de:	fb11 2103 	smlabb	r1, r1, r3, r2
 801b0e2:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801b0e6:	440e      	add	r6, r1
 801b0e8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801b0ec:	440a      	add	r2, r1
 801b0ee:	f8ad 2010 	strh.w	r2, [sp, #16]
 801b0f2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801b0f6:	4413      	add	r3, r2
 801b0f8:	f8ad 3012 	strh.w	r3, [sp, #18]
 801b0fc:	4b77      	ldr	r3, [pc, #476]	@ (801b2dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801b0fe:	6818      	ldr	r0, [r3, #0]
 801b100:	6803      	ldr	r3, [r0, #0]
 801b102:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b104:	4798      	blx	r3
 801b106:	f8b9 b000 	ldrh.w	fp, [r9]
 801b10a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801b10e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801b112:	fb0b 2303 	mla	r3, fp, r3, r2
 801b116:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b11a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801b11e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801b122:	fb05 f50b 	mul.w	r5, r5, fp
 801b126:	9300      	str	r3, [sp, #0]
 801b128:	d069      	beq.n	801b1fe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801b12a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801b12e:	4558      	cmp	r0, fp
 801b130:	f080 80cc 	bcs.w	801b2cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801b134:	9b00      	ldr	r3, [sp, #0]
 801b136:	18c3      	adds	r3, r0, r3
 801b138:	9301      	str	r3, [sp, #4]
 801b13a:	4631      	mov	r1, r6
 801b13c:	9b01      	ldr	r3, [sp, #4]
 801b13e:	4298      	cmp	r0, r3
 801b140:	d24f      	bcs.n	801b1e2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801b142:	f811 2b01 	ldrb.w	r2, [r1], #1
 801b146:	2a00      	cmp	r2, #0
 801b148:	d048      	beq.n	801b1dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801b14a:	fb0a f202 	mul.w	r2, sl, r2
 801b14e:	1c53      	adds	r3, r2, #1
 801b150:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b154:	121b      	asrs	r3, r3, #8
 801b156:	d041      	beq.n	801b1dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801b158:	8802      	ldrh	r2, [r0, #0]
 801b15a:	f8b4 c000 	ldrh.w	ip, [r4]
 801b15e:	b29e      	uxth	r6, r3
 801b160:	1215      	asrs	r5, r2, #8
 801b162:	43db      	mvns	r3, r3
 801b164:	b2db      	uxtb	r3, r3
 801b166:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b16a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b16e:	fb15 f503 	smulbb	r5, r5, r3
 801b172:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801b176:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b17a:	00d2      	lsls	r2, r2, #3
 801b17c:	fb07 5706 	mla	r7, r7, r6, r5
 801b180:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801b184:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801b188:	b2d2      	uxtb	r2, r2
 801b18a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b18e:	b2bf      	uxth	r7, r7
 801b190:	fb1e fe03 	smulbb	lr, lr, r3
 801b194:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801b198:	fa5f fc8c 	uxtb.w	ip, ip
 801b19c:	fb12 f203 	smulbb	r2, r2, r3
 801b1a0:	fb05 e506 	mla	r5, r5, r6, lr
 801b1a4:	fb0c 2c06 	mla	ip, ip, r6, r2
 801b1a8:	f107 0e01 	add.w	lr, r7, #1
 801b1ac:	fa1f fc8c 	uxth.w	ip, ip
 801b1b0:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801b1b4:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 801b1b8:	f10c 0701 	add.w	r7, ip, #1
 801b1bc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b1c0:	b2ad      	uxth	r5, r5
 801b1c2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b1c6:	ea47 070e 	orr.w	r7, r7, lr
 801b1ca:	f105 0e01 	add.w	lr, r5, #1
 801b1ce:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801b1d2:	096d      	lsrs	r5, r5, #5
 801b1d4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b1d8:	432f      	orrs	r7, r5
 801b1da:	8007      	strh	r7, [r0, #0]
 801b1dc:	3002      	adds	r0, #2
 801b1de:	3402      	adds	r4, #2
 801b1e0:	e7ac      	b.n	801b13c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801b1e2:	f8b9 3000 	ldrh.w	r3, [r9]
 801b1e6:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801b1ea:	eba3 0308 	sub.w	r3, r3, r8
 801b1ee:	eba6 0608 	sub.w	r6, r6, r8
 801b1f2:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801b1f6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b1fa:	440e      	add	r6, r1
 801b1fc:	e797      	b.n	801b12e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801b1fe:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801b202:	42a8      	cmp	r0, r5
 801b204:	d262      	bcs.n	801b2cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801b206:	9b00      	ldr	r3, [sp, #0]
 801b208:	4631      	mov	r1, r6
 801b20a:	eb00 0b03 	add.w	fp, r0, r3
 801b20e:	4558      	cmp	r0, fp
 801b210:	d24e      	bcs.n	801b2b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801b212:	f811 3b01 	ldrb.w	r3, [r1], #1
 801b216:	b12b      	cbz	r3, 801b224 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801b218:	2bff      	cmp	r3, #255	@ 0xff
 801b21a:	f8b4 e000 	ldrh.w	lr, [r4]
 801b21e:	d104      	bne.n	801b22a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801b220:	f8a0 e000 	strh.w	lr, [r0]
 801b224:	3002      	adds	r0, #2
 801b226:	3402      	adds	r4, #2
 801b228:	e7f1      	b.n	801b20e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801b22a:	8802      	ldrh	r2, [r0, #0]
 801b22c:	b29f      	uxth	r7, r3
 801b22e:	1216      	asrs	r6, r2, #8
 801b230:	43db      	mvns	r3, r3
 801b232:	b2db      	uxtb	r3, r3
 801b234:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b238:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801b23c:	fb16 f603 	smulbb	r6, r6, r3
 801b240:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801b244:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801b248:	00d2      	lsls	r2, r2, #3
 801b24a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b24e:	b2d2      	uxtb	r2, r2
 801b250:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b254:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801b258:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b25c:	fb1a fa03 	smulbb	sl, sl, r3
 801b260:	fa1f fc8c 	uxth.w	ip, ip
 801b264:	fb12 f303 	smulbb	r3, r2, r3
 801b268:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801b26c:	fa5f fe8e 	uxtb.w	lr, lr
 801b270:	fb06 a607 	mla	r6, r6, r7, sl
 801b274:	f10c 0201 	add.w	r2, ip, #1
 801b278:	fb0e 3307 	mla	r3, lr, r7, r3
 801b27c:	b2b6      	uxth	r6, r6
 801b27e:	b29b      	uxth	r3, r3
 801b280:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b284:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 801b288:	f106 0a01 	add.w	sl, r6, #1
 801b28c:	f103 0c01 	add.w	ip, r3, #1
 801b290:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b294:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801b298:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b29c:	0976      	lsrs	r6, r6, #5
 801b29e:	ea4c 0c02 	orr.w	ip, ip, r2
 801b2a2:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801b2a6:	ea4c 0c06 	orr.w	ip, ip, r6
 801b2aa:	f8a0 c000 	strh.w	ip, [r0]
 801b2ae:	e7b9      	b.n	801b224 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801b2b0:	f8b9 3000 	ldrh.w	r3, [r9]
 801b2b4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801b2b8:	eba3 0308 	sub.w	r3, r3, r8
 801b2bc:	eba6 0608 	sub.w	r6, r6, r8
 801b2c0:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801b2c4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b2c8:	440e      	add	r6, r1
 801b2ca:	e79a      	b.n	801b202 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801b2cc:	4b03      	ldr	r3, [pc, #12]	@ (801b2dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801b2ce:	6818      	ldr	r0, [r3, #0]
 801b2d0:	6803      	ldr	r3, [r0, #0]
 801b2d2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801b2d4:	4798      	blx	r3
 801b2d6:	b007      	add	sp, #28
 801b2d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b2dc:	20015238 	.word	0x20015238
 801b2e0:	20015232 	.word	0x20015232

0801b2e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801b2e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b2e8:	b089      	sub	sp, #36	@ 0x24
 801b2ea:	4607      	mov	r7, r0
 801b2ec:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 801b2f0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b2f2:	4688      	mov	r8, r1
 801b2f4:	4692      	mov	sl, r2
 801b2f6:	4699      	mov	r9, r3
 801b2f8:	2e00      	cmp	r6, #0
 801b2fa:	d048      	beq.n	801b38e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b2fc:	4608      	mov	r0, r1
 801b2fe:	f7fa f81d 	bl	801533c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801b302:	4605      	mov	r5, r0
 801b304:	4640      	mov	r0, r8
 801b306:	f7fa f84d 	bl	80153a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801b30a:	f8ad 000e 	strh.w	r0, [sp, #14]
 801b30e:	4640      	mov	r0, r8
 801b310:	f8ad a008 	strh.w	sl, [sp, #8]
 801b314:	f8ad 500c 	strh.w	r5, [sp, #12]
 801b318:	f8ad 900a 	strh.w	r9, [sp, #10]
 801b31c:	f7fa f900 	bl	8015520 <_ZNK8touchgfx6Bitmap7getDataEv>
 801b320:	4605      	mov	r5, r0
 801b322:	4640      	mov	r0, r8
 801b324:	f7fa f92c 	bl	8015580 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801b328:	4682      	mov	sl, r0
 801b32a:	4640      	mov	r0, r8
 801b32c:	f7fa f97c 	bl	8015628 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801b330:	2810      	cmp	r0, #16
 801b332:	d82c      	bhi.n	801b38e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b334:	e8df f010 	tbh	[pc, r0, lsl #1]
 801b338:	00ba00ca 	.word	0x00ba00ca
 801b33c:	002b0011 	.word	0x002b0011
 801b340:	002b002b 	.word	0x002b002b
 801b344:	002b002b 	.word	0x002b002b
 801b348:	002b002b 	.word	0x002b002b
 801b34c:	00c1002b 	.word	0x00c1002b
 801b350:	002b002b 	.word	0x002b002b
 801b354:	002b0180 	.word	0x002b0180
 801b358:	0173      	.short	0x0173
 801b35a:	4bbc      	ldr	r3, [pc, #752]	@ (801b64c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 801b35c:	6818      	ldr	r0, [r3, #0]
 801b35e:	6803      	ldr	r3, [r0, #0]
 801b360:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801b362:	4798      	blx	r3
 801b364:	2eff      	cmp	r6, #255	@ 0xff
 801b366:	d101      	bne.n	801b36c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801b368:	0683      	lsls	r3, r0, #26
 801b36a:	d506      	bpl.n	801b37a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 801b36c:	4633      	mov	r3, r6
 801b36e:	4622      	mov	r2, r4
 801b370:	a902      	add	r1, sp, #8
 801b372:	4628      	mov	r0, r5
 801b374:	f7ff f8fc 	bl	801a570 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801b378:	e009      	b.n	801b38e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b37a:	4640      	mov	r0, r8
 801b37c:	f7fa f898 	bl	80154b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801b380:	b940      	cbnz	r0, 801b394 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 801b382:	4623      	mov	r3, r4
 801b384:	aa02      	add	r2, sp, #8
 801b386:	4629      	mov	r1, r5
 801b388:	4638      	mov	r0, r7
 801b38a:	f7ff f9d7 	bl	801a73c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801b38e:	b009      	add	sp, #36	@ 0x24
 801b390:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b394:	f10d 0918 	add.w	r9, sp, #24
 801b398:	4641      	mov	r1, r8
 801b39a:	4648      	mov	r0, r9
 801b39c:	f7fa f836 	bl	801540c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801b3a0:	e899 0003 	ldmia.w	r9, {r0, r1}
 801b3a4:	f10d 0810 	add.w	r8, sp, #16
 801b3a8:	e888 0003 	stmia.w	r8, {r0, r1}
 801b3ac:	4640      	mov	r0, r8
 801b3ae:	4621      	mov	r1, r4
 801b3b0:	f7f0 ff04 	bl	800c1bc <_ZN8touchgfx4RectaNERKS0_>
 801b3b4:	4640      	mov	r0, r8
 801b3b6:	f7f0 ff44 	bl	800c242 <_ZNK8touchgfx4Rect7isEmptyEv>
 801b3ba:	2800      	cmp	r0, #0
 801b3bc:	d1d6      	bne.n	801b36c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801b3be:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801b3c2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801b3c6:	4293      	cmp	r3, r2
 801b3c8:	dd12      	ble.n	801b3f0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 801b3ca:	1a9b      	subs	r3, r3, r2
 801b3cc:	f9b4 0000 	ldrsh.w	r0, [r4]
 801b3d0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b3d4:	f8ad 0018 	strh.w	r0, [sp, #24]
 801b3d8:	f8ad 201a 	strh.w	r2, [sp, #26]
 801b3dc:	f8ad 101c 	strh.w	r1, [sp, #28]
 801b3e0:	f8ad 301e 	strh.w	r3, [sp, #30]
 801b3e4:	464a      	mov	r2, r9
 801b3e6:	4633      	mov	r3, r6
 801b3e8:	a902      	add	r1, sp, #8
 801b3ea:	4628      	mov	r0, r5
 801b3ec:	f7ff f8c0 	bl	801a570 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801b3f0:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801b3f4:	f9b4 2000 	ldrsh.w	r2, [r4]
 801b3f8:	4293      	cmp	r3, r2
 801b3fa:	dd12      	ble.n	801b422 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 801b3fc:	1a9b      	subs	r3, r3, r2
 801b3fe:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801b402:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801b406:	f8ad 2018 	strh.w	r2, [sp, #24]
 801b40a:	f8ad 001a 	strh.w	r0, [sp, #26]
 801b40e:	f8ad 301c 	strh.w	r3, [sp, #28]
 801b412:	f8ad 101e 	strh.w	r1, [sp, #30]
 801b416:	23ff      	movs	r3, #255	@ 0xff
 801b418:	464a      	mov	r2, r9
 801b41a:	a902      	add	r1, sp, #8
 801b41c:	4628      	mov	r0, r5
 801b41e:	f7ff f8a7 	bl	801a570 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801b422:	4643      	mov	r3, r8
 801b424:	aa02      	add	r2, sp, #8
 801b426:	4629      	mov	r1, r5
 801b428:	4638      	mov	r0, r7
 801b42a:	f7ff f987 	bl	801a73c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801b42e:	88a2      	ldrh	r2, [r4, #4]
 801b430:	8823      	ldrh	r3, [r4, #0]
 801b432:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801b436:	4413      	add	r3, r2
 801b438:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b43c:	440a      	add	r2, r1
 801b43e:	b29b      	uxth	r3, r3
 801b440:	b292      	uxth	r2, r2
 801b442:	b211      	sxth	r1, r2
 801b444:	b218      	sxth	r0, r3
 801b446:	4288      	cmp	r0, r1
 801b448:	dd12      	ble.n	801b470 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 801b44a:	1a9b      	subs	r3, r3, r2
 801b44c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801b450:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801b454:	f8ad 1018 	strh.w	r1, [sp, #24]
 801b458:	f8ad 301c 	strh.w	r3, [sp, #28]
 801b45c:	f8ad 001e 	strh.w	r0, [sp, #30]
 801b460:	23ff      	movs	r3, #255	@ 0xff
 801b462:	464a      	mov	r2, r9
 801b464:	a902      	add	r1, sp, #8
 801b466:	4628      	mov	r0, r5
 801b468:	f8ad 601a 	strh.w	r6, [sp, #26]
 801b46c:	f7ff f880 	bl	801a570 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801b470:	88e2      	ldrh	r2, [r4, #6]
 801b472:	8863      	ldrh	r3, [r4, #2]
 801b474:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801b478:	4413      	add	r3, r2
 801b47a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801b47e:	440a      	add	r2, r1
 801b480:	b29b      	uxth	r3, r3
 801b482:	b292      	uxth	r2, r2
 801b484:	b211      	sxth	r1, r2
 801b486:	b218      	sxth	r0, r3
 801b488:	4288      	cmp	r0, r1
 801b48a:	dd80      	ble.n	801b38e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b48c:	1a9b      	subs	r3, r3, r2
 801b48e:	f9b4 6000 	ldrsh.w	r6, [r4]
 801b492:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801b496:	f8ad 301e 	strh.w	r3, [sp, #30]
 801b49a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801b49e:	f8ad 101a 	strh.w	r1, [sp, #26]
 801b4a2:	f8ad 001c 	strh.w	r0, [sp, #28]
 801b4a6:	23ff      	movs	r3, #255	@ 0xff
 801b4a8:	464a      	mov	r2, r9
 801b4aa:	e761      	b.n	801b370 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 801b4ac:	4633      	mov	r3, r6
 801b4ae:	4622      	mov	r2, r4
 801b4b0:	a902      	add	r1, sp, #8
 801b4b2:	4628      	mov	r0, r5
 801b4b4:	f7ff f9b2 	bl	801a81c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801b4b8:	e769      	b.n	801b38e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b4ba:	e9cd 4600 	strd	r4, r6, [sp]
 801b4be:	ab02      	add	r3, sp, #8
 801b4c0:	4652      	mov	r2, sl
 801b4c2:	4629      	mov	r1, r5
 801b4c4:	4638      	mov	r0, r7
 801b4c6:	f7ff fd89 	bl	801afdc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801b4ca:	e760      	b.n	801b38e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b4cc:	4640      	mov	r0, r8
 801b4ce:	f7f9 ffef 	bl	80154b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801b4d2:	b948      	cbnz	r0, 801b4e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 801b4d4:	683b      	ldr	r3, [r7, #0]
 801b4d6:	e9cd 6000 	strd	r6, r0, [sp]
 801b4da:	aa02      	add	r2, sp, #8
 801b4dc:	68de      	ldr	r6, [r3, #12]
 801b4de:	4629      	mov	r1, r5
 801b4e0:	4623      	mov	r3, r4
 801b4e2:	4638      	mov	r0, r7
 801b4e4:	47b0      	blx	r6
 801b4e6:	e752      	b.n	801b38e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b4e8:	f10d 0918 	add.w	r9, sp, #24
 801b4ec:	4641      	mov	r1, r8
 801b4ee:	4648      	mov	r0, r9
 801b4f0:	f7f9 ff8c 	bl	801540c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801b4f4:	e899 0003 	ldmia.w	r9, {r0, r1}
 801b4f8:	f10d 0810 	add.w	r8, sp, #16
 801b4fc:	e888 0003 	stmia.w	r8, {r0, r1}
 801b500:	4640      	mov	r0, r8
 801b502:	4621      	mov	r1, r4
 801b504:	f7f0 fe5a 	bl	800c1bc <_ZN8touchgfx4RectaNERKS0_>
 801b508:	4640      	mov	r0, r8
 801b50a:	f7f0 fe9a 	bl	800c242 <_ZNK8touchgfx4Rect7isEmptyEv>
 801b50e:	b138      	cbz	r0, 801b520 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 801b510:	9600      	str	r6, [sp, #0]
 801b512:	4623      	mov	r3, r4
 801b514:	aa02      	add	r2, sp, #8
 801b516:	4651      	mov	r1, sl
 801b518:	4628      	mov	r0, r5
 801b51a:	f7ff fdbd 	bl	801b098 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801b51e:	e736      	b.n	801b38e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b520:	683b      	ldr	r3, [r7, #0]
 801b522:	e9cd 6000 	strd	r6, r0, [sp]
 801b526:	aa02      	add	r2, sp, #8
 801b528:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801b52c:	4629      	mov	r1, r5
 801b52e:	4643      	mov	r3, r8
 801b530:	4638      	mov	r0, r7
 801b532:	47d8      	blx	fp
 801b534:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801b538:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801b53c:	4293      	cmp	r3, r2
 801b53e:	dd13      	ble.n	801b568 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 801b540:	f9b4 0000 	ldrsh.w	r0, [r4]
 801b544:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b548:	f8ad 0018 	strh.w	r0, [sp, #24]
 801b54c:	1a9b      	subs	r3, r3, r2
 801b54e:	f8ad 201a 	strh.w	r2, [sp, #26]
 801b552:	f8ad 101c 	strh.w	r1, [sp, #28]
 801b556:	f8ad 301e 	strh.w	r3, [sp, #30]
 801b55a:	9600      	str	r6, [sp, #0]
 801b55c:	464b      	mov	r3, r9
 801b55e:	aa02      	add	r2, sp, #8
 801b560:	4651      	mov	r1, sl
 801b562:	4628      	mov	r0, r5
 801b564:	f7ff fd98 	bl	801b098 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801b568:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801b56c:	f9b4 2000 	ldrsh.w	r2, [r4]
 801b570:	4293      	cmp	r3, r2
 801b572:	dd13      	ble.n	801b59c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 801b574:	1a9b      	subs	r3, r3, r2
 801b576:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801b57a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801b57e:	f8ad 2018 	strh.w	r2, [sp, #24]
 801b582:	f8ad 001a 	strh.w	r0, [sp, #26]
 801b586:	f8ad 301c 	strh.w	r3, [sp, #28]
 801b58a:	f8ad 101e 	strh.w	r1, [sp, #30]
 801b58e:	9600      	str	r6, [sp, #0]
 801b590:	464b      	mov	r3, r9
 801b592:	aa02      	add	r2, sp, #8
 801b594:	4651      	mov	r1, sl
 801b596:	4628      	mov	r0, r5
 801b598:	f7ff fd7e 	bl	801b098 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801b59c:	88a2      	ldrh	r2, [r4, #4]
 801b59e:	8823      	ldrh	r3, [r4, #0]
 801b5a0:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801b5a4:	4413      	add	r3, r2
 801b5a6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b5aa:	440a      	add	r2, r1
 801b5ac:	b29b      	uxth	r3, r3
 801b5ae:	b292      	uxth	r2, r2
 801b5b0:	b211      	sxth	r1, r2
 801b5b2:	b218      	sxth	r0, r3
 801b5b4:	4288      	cmp	r0, r1
 801b5b6:	dd13      	ble.n	801b5e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 801b5b8:	1a9b      	subs	r3, r3, r2
 801b5ba:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801b5be:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801b5c2:	f8ad 1018 	strh.w	r1, [sp, #24]
 801b5c6:	f8ad 301c 	strh.w	r3, [sp, #28]
 801b5ca:	f8ad 001e 	strh.w	r0, [sp, #30]
 801b5ce:	9600      	str	r6, [sp, #0]
 801b5d0:	464b      	mov	r3, r9
 801b5d2:	aa02      	add	r2, sp, #8
 801b5d4:	4651      	mov	r1, sl
 801b5d6:	4628      	mov	r0, r5
 801b5d8:	f8ad 701a 	strh.w	r7, [sp, #26]
 801b5dc:	f7ff fd5c 	bl	801b098 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801b5e0:	88e2      	ldrh	r2, [r4, #6]
 801b5e2:	8863      	ldrh	r3, [r4, #2]
 801b5e4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801b5e8:	4413      	add	r3, r2
 801b5ea:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801b5ee:	440a      	add	r2, r1
 801b5f0:	b29b      	uxth	r3, r3
 801b5f2:	b292      	uxth	r2, r2
 801b5f4:	b211      	sxth	r1, r2
 801b5f6:	b218      	sxth	r0, r3
 801b5f8:	4288      	cmp	r0, r1
 801b5fa:	f77f aec8 	ble.w	801b38e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b5fe:	f9b4 7000 	ldrsh.w	r7, [r4]
 801b602:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801b606:	f8ad 7018 	strh.w	r7, [sp, #24]
 801b60a:	1a9b      	subs	r3, r3, r2
 801b60c:	f8ad 301e 	strh.w	r3, [sp, #30]
 801b610:	f8ad 101a 	strh.w	r1, [sp, #26]
 801b614:	f8ad 001c 	strh.w	r0, [sp, #28]
 801b618:	9600      	str	r6, [sp, #0]
 801b61a:	464b      	mov	r3, r9
 801b61c:	e77a      	b.n	801b514 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 801b61e:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801b622:	2800      	cmp	r0, #0
 801b624:	f43f aeb3 	beq.w	801b38e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b628:	6803      	ldr	r3, [r0, #0]
 801b62a:	9600      	str	r6, [sp, #0]
 801b62c:	68de      	ldr	r6, [r3, #12]
 801b62e:	4623      	mov	r3, r4
 801b630:	aa02      	add	r2, sp, #8
 801b632:	4629      	mov	r1, r5
 801b634:	47b0      	blx	r6
 801b636:	e6aa      	b.n	801b38e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b638:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801b63c:	2800      	cmp	r0, #0
 801b63e:	f43f aea6 	beq.w	801b38e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b642:	6803      	ldr	r3, [r0, #0]
 801b644:	9600      	str	r6, [sp, #0]
 801b646:	689e      	ldr	r6, [r3, #8]
 801b648:	e7f1      	b.n	801b62e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 801b64a:	bf00      	nop
 801b64c:	20015238 	.word	0x20015238

0801b650 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801b650:	b180      	cbz	r0, 801b674 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801b652:	2903      	cmp	r1, #3
 801b654:	d81c      	bhi.n	801b690 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801b656:	e8df f001 	tbb	[pc, r1]
 801b65a:	1d02      	.short	0x1d02
 801b65c:	1f08      	.short	0x1f08
 801b65e:	4b10      	ldr	r3, [pc, #64]	@ (801b6a0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801b660:	8818      	ldrh	r0, [r3, #0]
 801b662:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801b666:	4240      	negs	r0, r0
 801b668:	4770      	bx	lr
 801b66a:	4b0d      	ldr	r3, [pc, #52]	@ (801b6a0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801b66c:	8818      	ldrh	r0, [r3, #0]
 801b66e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801b672:	4770      	bx	lr
 801b674:	2903      	cmp	r1, #3
 801b676:	d80b      	bhi.n	801b690 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801b678:	a301      	add	r3, pc, #4	@ (adr r3, 801b680 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801b67a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801b67e:	bf00      	nop
 801b680:	0801b695 	.word	0x0801b695
 801b684:	0801b66b 	.word	0x0801b66b
 801b688:	0801b699 	.word	0x0801b699
 801b68c:	0801b65f 	.word	0x0801b65f
 801b690:	2000      	movs	r0, #0
 801b692:	4770      	bx	lr
 801b694:	2001      	movs	r0, #1
 801b696:	4770      	bx	lr
 801b698:	f04f 30ff 	mov.w	r0, #4294967295
 801b69c:	4770      	bx	lr
 801b69e:	bf00      	nop
 801b6a0:	20015232 	.word	0x20015232

0801b6a4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801b6a4:	b180      	cbz	r0, 801b6c8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801b6a6:	2903      	cmp	r1, #3
 801b6a8:	d81c      	bhi.n	801b6e4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801b6aa:	e8df f001 	tbb	[pc, r1]
 801b6ae:	021d      	.short	0x021d
 801b6b0:	071f      	.short	0x071f
 801b6b2:	4b10      	ldr	r3, [pc, #64]	@ (801b6f4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801b6b4:	8818      	ldrh	r0, [r3, #0]
 801b6b6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801b6ba:	4770      	bx	lr
 801b6bc:	4b0d      	ldr	r3, [pc, #52]	@ (801b6f4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801b6be:	8818      	ldrh	r0, [r3, #0]
 801b6c0:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801b6c4:	4240      	negs	r0, r0
 801b6c6:	4770      	bx	lr
 801b6c8:	2903      	cmp	r1, #3
 801b6ca:	d80b      	bhi.n	801b6e4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801b6cc:	a301      	add	r3, pc, #4	@ (adr r3, 801b6d4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801b6ce:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801b6d2:	bf00      	nop
 801b6d4:	0801b6b3 	.word	0x0801b6b3
 801b6d8:	0801b6ed 	.word	0x0801b6ed
 801b6dc:	0801b6bd 	.word	0x0801b6bd
 801b6e0:	0801b6e9 	.word	0x0801b6e9
 801b6e4:	2000      	movs	r0, #0
 801b6e6:	4770      	bx	lr
 801b6e8:	2001      	movs	r0, #1
 801b6ea:	4770      	bx	lr
 801b6ec:	f04f 30ff 	mov.w	r0, #4294967295
 801b6f0:	4770      	bx	lr
 801b6f2:	bf00      	nop
 801b6f4:	20015232 	.word	0x20015232

0801b6f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801b6f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b6fc:	b099      	sub	sp, #100	@ 0x64
 801b6fe:	910d      	str	r1, [sp, #52]	@ 0x34
 801b700:	a914      	add	r1, sp, #80	@ 0x50
 801b702:	e881 000c 	stmia.w	r1, {r2, r3}
 801b706:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 801b70a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b70c:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 801b710:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801b714:	9310      	str	r3, [sp, #64]	@ 0x40
 801b716:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801b71a:	9308      	str	r3, [sp, #32]
 801b71c:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 801b720:	9309      	str	r3, [sp, #36]	@ 0x24
 801b722:	7b4b      	ldrb	r3, [r1, #13]
 801b724:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 801b728:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 801b72c:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 801b730:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
 801b732:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
 801b736:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 801b73a:	ea4f 1843 	mov.w	r8, r3, lsl #5
 801b73e:	f408 7080 	and.w	r0, r8, #256	@ 0x100
 801b742:	f891 8006 	ldrb.w	r8, [r1, #6]
 801b746:	ea58 0800 	orrs.w	r8, r8, r0
 801b74a:	f000 81ce 	beq.w	801baea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801b74e:	011b      	lsls	r3, r3, #4
 801b750:	79c8      	ldrb	r0, [r1, #7]
 801b752:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801b756:	4303      	orrs	r3, r0
 801b758:	930c      	str	r3, [sp, #48]	@ 0x30
 801b75a:	f000 81c6 	beq.w	801baea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801b75e:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801b762:	b29b      	uxth	r3, r3
 801b764:	2d00      	cmp	r5, #0
 801b766:	f000 812c 	beq.w	801b9c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ca>
 801b76a:	1aed      	subs	r5, r5, r3
 801b76c:	b2ad      	uxth	r5, r5
 801b76e:	0429      	lsls	r1, r5, #16
 801b770:	d502      	bpl.n	801b778 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 801b772:	1b64      	subs	r4, r4, r5
 801b774:	b224      	sxth	r4, r4
 801b776:	2500      	movs	r5, #0
 801b778:	f9b2 0000 	ldrsh.w	r0, [r2]
 801b77c:	8891      	ldrh	r1, [r2, #4]
 801b77e:	4284      	cmp	r4, r0
 801b780:	b283      	uxth	r3, r0
 801b782:	bfb8      	it	lt
 801b784:	18ed      	addlt	r5, r5, r3
 801b786:	440b      	add	r3, r1
 801b788:	b21b      	sxth	r3, r3
 801b78a:	930a      	str	r3, [sp, #40]	@ 0x28
 801b78c:	88d3      	ldrh	r3, [r2, #6]
 801b78e:	8852      	ldrh	r2, [r2, #2]
 801b790:	4413      	add	r3, r2
 801b792:	b21b      	sxth	r3, r3
 801b794:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b796:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b798:	930e      	str	r3, [sp, #56]	@ 0x38
 801b79a:	bfb8      	it	lt
 801b79c:	1b2c      	sublt	r4, r5, r4
 801b79e:	4bb5      	ldr	r3, [pc, #724]	@ (801ba74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 801b7a0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801b7a2:	f893 b000 	ldrb.w	fp, [r3]
 801b7a6:	bfbc      	itt	lt
 801b7a8:	b2a5      	uxthlt	r5, r4
 801b7aa:	4604      	movlt	r4, r0
 801b7ac:	4653      	mov	r3, sl
 801b7ae:	4621      	mov	r1, r4
 801b7b0:	a814      	add	r0, sp, #80	@ 0x50
 801b7b2:	f7f5 fd4e 	bl	8011252 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801b7b6:	4621      	mov	r1, r4
 801b7b8:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 801b7bc:	4653      	mov	r3, sl
 801b7be:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801b7c0:	a814      	add	r0, sp, #80	@ 0x50
 801b7c2:	f7f5 fd63 	bl	801128c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801b7c6:	a918      	add	r1, sp, #96	@ 0x60
 801b7c8:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801b7cc:	a817      	add	r0, sp, #92	@ 0x5c
 801b7ce:	f7f5 fe89 	bl	80114e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801b7d2:	f1ba 0f00 	cmp.w	sl, #0
 801b7d6:	f040 80f7 	bne.w	801b9c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d0>
 801b7da:	f1bb 0f01 	cmp.w	fp, #1
 801b7de:	f040 80fb 	bne.w	801b9d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e0>
 801b7e2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b7e4:	2b00      	cmp	r3, #0
 801b7e6:	f040 81a8 	bne.w	801bb3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x442>
 801b7ea:	fa1f f288 	uxth.w	r2, r8
 801b7ee:	b905      	cbnz	r5, 801b7f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfa>
 801b7f0:	b15e      	cbz	r6, 801b80a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 801b7f2:	9808      	ldr	r0, [sp, #32]
 801b7f4:	fb06 5302 	mla	r3, r6, r2, r5
 801b7f8:	4343      	muls	r3, r0
 801b7fa:	4631      	mov	r1, r6
 801b7fc:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
 801b800:	f003 0607 	and.w	r6, r3, #7
 801b804:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b806:	1a5b      	subs	r3, r3, r1
 801b808:	930e      	str	r3, [sp, #56]	@ 0x38
 801b80a:	f10b 31ff 	add.w	r1, fp, #4294967295
 801b80e:	424b      	negs	r3, r1
 801b810:	414b      	adcs	r3, r1
 801b812:	4618      	mov	r0, r3
 801b814:	4651      	mov	r1, sl
 801b816:	930c      	str	r3, [sp, #48]	@ 0x30
 801b818:	f7ff ff1a 	bl	801b650 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801b81c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b81e:	4683      	mov	fp, r0
 801b820:	4618      	mov	r0, r3
 801b822:	f7ff ff3f 	bl	801b6a4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801b826:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801b828:	4603      	mov	r3, r0
 801b82a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801b82c:	eba1 0a00 	sub.w	sl, r1, r0
 801b830:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801b832:	458a      	cmp	sl, r1
 801b834:	bfa8      	it	ge
 801b836:	468a      	movge	sl, r1
 801b838:	f1ba 0f00 	cmp.w	sl, #0
 801b83c:	f340 8155 	ble.w	801baea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801b840:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801b842:	1b64      	subs	r4, r4, r5
 801b844:	1b0c      	subs	r4, r1, r4
 801b846:	4544      	cmp	r4, r8
 801b848:	bfd4      	ite	le
 801b84a:	ebc5 0504 	rsble	r5, r5, r4
 801b84e:	ebc5 0508 	rsbgt	r5, r5, r8
 801b852:	2d00      	cmp	r5, #0
 801b854:	f340 8149 	ble.w	801baea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801b858:	9908      	ldr	r1, [sp, #32]
 801b85a:	1b52      	subs	r2, r2, r5
 801b85c:	434a      	muls	r2, r1
 801b85e:	920e      	str	r2, [sp, #56]	@ 0x38
 801b860:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801b862:	2a00      	cmp	r2, #0
 801b864:	f040 8175 	bne.w	801bb52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45a>
 801b868:	4a83      	ldr	r2, [pc, #524]	@ (801ba78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 801b86a:	930a      	str	r3, [sp, #40]	@ 0x28
 801b86c:	6810      	ldr	r0, [r2, #0]
 801b86e:	6802      	ldr	r2, [r0, #0]
 801b870:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 801b872:	4790      	blx	r2
 801b874:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b876:	9908      	ldr	r1, [sp, #32]
 801b878:	2201      	movs	r2, #1
 801b87a:	408a      	lsls	r2, r1
 801b87c:	3a01      	subs	r2, #1
 801b87e:	497f      	ldr	r1, [pc, #508]	@ (801ba7c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
 801b880:	b2d2      	uxtb	r2, r2
 801b882:	880c      	ldrh	r4, [r1, #0]
 801b884:	920c      	str	r2, [sp, #48]	@ 0x30
 801b886:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
 801b88a:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 801b88e:	fb04 1202 	mla	r2, r4, r2, r1
 801b892:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801b896:	ea4f 2419 	mov.w	r4, r9, lsr #8
 801b89a:	920a      	str	r2, [sp, #40]	@ 0x28
 801b89c:	f3c9 4207 	ubfx	r2, r9, #16, #8
 801b8a0:	9212      	str	r2, [sp, #72]	@ 0x48
 801b8a2:	b2e2      	uxtb	r2, r4
 801b8a4:	9211      	str	r2, [sp, #68]	@ 0x44
 801b8a6:	fa5f f289 	uxtb.w	r2, r9
 801b8aa:	9210      	str	r2, [sp, #64]	@ 0x40
 801b8ac:	4a74      	ldr	r2, [pc, #464]	@ (801ba80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 801b8ae:	ea4f 1159 	mov.w	r1, r9, lsr #5
 801b8b2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b8b6:	4022      	ands	r2, r4
 801b8b8:	430a      	orrs	r2, r1
 801b8ba:	f3c9 09c4 	ubfx	r9, r9, #3, #5
 801b8be:	ea42 0209 	orr.w	r2, r2, r9
 801b8c2:	ea4f 014b 	mov.w	r1, fp, lsl #1
 801b8c6:	b292      	uxth	r2, r2
 801b8c8:	fb05 3b1b 	mls	fp, r5, fp, r3
 801b8cc:	920f      	str	r2, [sp, #60]	@ 0x3c
 801b8ce:	460b      	mov	r3, r1
 801b8d0:	783a      	ldrb	r2, [r7, #0]
 801b8d2:	910b      	str	r1, [sp, #44]	@ 0x2c
 801b8d4:	436b      	muls	r3, r5
 801b8d6:	4132      	asrs	r2, r6
 801b8d8:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 801b8dc:	b2d2      	uxtb	r2, r2
 801b8de:	9313      	str	r3, [sp, #76]	@ 0x4c
 801b8e0:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801b8e4:	f0c0 8149 	bcc.w	801bb7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x482>
 801b8e8:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801b8ec:	46a9      	mov	r9, r5
 801b8ee:	f119 39ff 	adds.w	r9, r9, #4294967295
 801b8f2:	f0c0 8132 	bcc.w	801bb5a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
 801b8f6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b8f8:	4013      	ands	r3, r2
 801b8fa:	d054      	beq.n	801b9a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ae>
 801b8fc:	20ff      	movs	r0, #255	@ 0xff
 801b8fe:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801b900:	fb90 f1f1 	sdiv	r1, r0, r1
 801b904:	434b      	muls	r3, r1
 801b906:	2bfe      	cmp	r3, #254	@ 0xfe
 801b908:	dd03      	ble.n	801b912 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21a>
 801b90a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801b90c:	4281      	cmp	r1, r0
 801b90e:	f000 8122 	beq.w	801bb56 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
 801b912:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801b914:	f8b8 4000 	ldrh.w	r4, [r8]
 801b918:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801b91a:	fb11 f303 	smulbb	r3, r1, r3
 801b91e:	b29b      	uxth	r3, r3
 801b920:	1c59      	adds	r1, r3, #1
 801b922:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801b926:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b92a:	fa1f fe83 	uxth.w	lr, r3
 801b92e:	1221      	asrs	r1, r4, #8
 801b930:	fb10 fb0e 	smulbb	fp, r0, lr
 801b934:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b938:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801b93a:	43db      	mvns	r3, r3
 801b93c:	b2db      	uxtb	r3, r3
 801b93e:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801b942:	fb01 b103 	mla	r1, r1, r3, fp
 801b946:	ea4f 0ce4 	mov.w	ip, r4, asr #3
 801b94a:	fb10 fb0e 	smulbb	fp, r0, lr
 801b94e:	00e4      	lsls	r4, r4, #3
 801b950:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801b952:	b2e4      	uxtb	r4, r4
 801b954:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801b958:	fb10 fe0e 	smulbb	lr, r0, lr
 801b95c:	fb04 e403 	mla	r4, r4, r3, lr
 801b960:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801b964:	b289      	uxth	r1, r1
 801b966:	b2a4      	uxth	r4, r4
 801b968:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
 801b96c:	fb0c bc03 	mla	ip, ip, r3, fp
 801b970:	1c4b      	adds	r3, r1, #1
 801b972:	f104 0b01 	add.w	fp, r4, #1
 801b976:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b97a:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
 801b97e:	fa1f fc8c 	uxth.w	ip, ip
 801b982:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801b986:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801b98a:	ea4b 0101 	orr.w	r1, fp, r1
 801b98e:	f10c 0b01 	add.w	fp, ip, #1
 801b992:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 801b996:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801b99a:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801b99e:	ea41 010b 	orr.w	r1, r1, fp
 801b9a2:	f8a8 1000 	strh.w	r1, [r8]
 801b9a6:	9b08      	ldr	r3, [sp, #32]
 801b9a8:	441e      	add	r6, r3
 801b9aa:	b2b6      	uxth	r6, r6
 801b9ac:	2e07      	cmp	r6, #7
 801b9ae:	bf98      	it	ls
 801b9b0:	411a      	asrls	r2, r3
 801b9b2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b9b4:	bf89      	itett	hi
 801b9b6:	787a      	ldrbhi	r2, [r7, #1]
 801b9b8:	b2d2      	uxtbls	r2, r2
 801b9ba:	3701      	addhi	r7, #1
 801b9bc:	2600      	movhi	r6, #0
 801b9be:	4498      	add	r8, r3
 801b9c0:	e795      	b.n	801b8ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f6>
 801b9c2:	441c      	add	r4, r3
 801b9c4:	b224      	sxth	r4, r4
 801b9c6:	e6d7      	b.n	801b778 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 801b9c8:	f1ba 0f01 	cmp.w	sl, #1
 801b9cc:	f47f af09 	bne.w	801b7e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 801b9d0:	f1bb 0f01 	cmp.w	fp, #1
 801b9d4:	f47f af05 	bne.w	801b7e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 801b9d8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b9da:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801b9dc:	1a99      	subs	r1, r3, r2
 801b9de:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b9e0:	1b9b      	subs	r3, r3, r6
 801b9e2:	4299      	cmp	r1, r3
 801b9e4:	bfa8      	it	ge
 801b9e6:	4619      	movge	r1, r3
 801b9e8:	2900      	cmp	r1, #0
 801b9ea:	9112      	str	r1, [sp, #72]	@ 0x48
 801b9ec:	dd7d      	ble.n	801baea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801b9ee:	4a22      	ldr	r2, [pc, #136]	@ (801ba78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 801b9f0:	9211      	str	r2, [sp, #68]	@ 0x44
 801b9f2:	6810      	ldr	r0, [r2, #0]
 801b9f4:	6803      	ldr	r3, [r0, #0]
 801b9f6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801b9f8:	4798      	blx	r3
 801b9fa:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 801b9fe:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801ba00:	d006      	beq.n	801ba10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801ba02:	9b08      	ldr	r3, [sp, #32]
 801ba04:	2b04      	cmp	r3, #4
 801ba06:	d133      	bne.n	801ba70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>
 801ba08:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ba0a:	3300      	adds	r3, #0
 801ba0c:	bf18      	it	ne
 801ba0e:	2301      	movne	r3, #1
 801ba10:	0582      	lsls	r2, r0, #22
 801ba12:	fa1f fc88 	uxth.w	ip, r8
 801ba16:	f140 80b9 	bpl.w	801bb8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 801ba1a:	9808      	ldr	r0, [sp, #32]
 801ba1c:	2808      	cmp	r0, #8
 801ba1e:	f040 80b5 	bne.w	801bb8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 801ba22:	2b00      	cmp	r3, #0
 801ba24:	d064      	beq.n	801baf0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f8>
 801ba26:	f10c 0c01 	add.w	ip, ip, #1
 801ba2a:	f02c 0301 	bic.w	r3, ip, #1
 801ba2e:	b29b      	uxth	r3, r3
 801ba30:	bb45      	cbnz	r5, 801ba84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 801ba32:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801ba34:	eb08 0004 	add.w	r0, r8, r4
 801ba38:	4290      	cmp	r0, r2
 801ba3a:	dc23      	bgt.n	801ba84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 801ba3c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801ba3e:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 801ba42:	6810      	ldr	r0, [r2, #0]
 801ba44:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801ba48:	6804      	ldr	r4, [r0, #0]
 801ba4a:	9506      	str	r5, [sp, #24]
 801ba4c:	f44f 7580 	mov.w	r5, #256	@ 0x100
 801ba50:	9505      	str	r5, [sp, #20]
 801ba52:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ba54:	9302      	str	r3, [sp, #8]
 801ba56:	b289      	uxth	r1, r1
 801ba58:	e9cd 3100 	strd	r3, r1, [sp]
 801ba5c:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801ba60:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 801ba64:	6da4      	ldr	r4, [r4, #88]	@ 0x58
 801ba66:	4673      	mov	r3, lr
 801ba68:	fb06 710c 	mla	r1, r6, ip, r7
 801ba6c:	47a0      	blx	r4
 801ba6e:	e03c      	b.n	801baea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801ba70:	2300      	movs	r3, #0
 801ba72:	e7cd      	b.n	801ba10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801ba74:	20015230 	.word	0x20015230
 801ba78:	20015238 	.word	0x20015238
 801ba7c:	20015232 	.word	0x20015232
 801ba80:	00fff800 	.word	0x00fff800
 801ba84:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801ba86:	eba4 0e05 	sub.w	lr, r4, r5
 801ba8a:	eba2 0e0e 	sub.w	lr, r2, lr
 801ba8e:	45c6      	cmp	lr, r8
 801ba90:	bfd4      	ite	le
 801ba92:	ebc5 0e0e 	rsble	lr, r5, lr
 801ba96:	ebc5 0e08 	rsbgt	lr, r5, r8
 801ba9a:	f1be 0f00 	cmp.w	lr, #0
 801ba9e:	d024      	beq.n	801baea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801baa0:	07e8      	lsls	r0, r5, #31
 801baa2:	f53f ae9e 	bmi.w	801b7e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 801baa6:	f01e 0001 	ands.w	r0, lr, #1
 801baaa:	f47f ae9a 	bne.w	801b7e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 801baae:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801bab0:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
 801bab4:	6814      	ldr	r4, [r2, #0]
 801bab6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801baba:	086d      	lsrs	r5, r5, #1
 801babc:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 801bac0:	fb06 560c 	mla	r6, r6, ip, r5
 801bac4:	6825      	ldr	r5, [r4, #0]
 801bac6:	9006      	str	r0, [sp, #24]
 801bac8:	f44f 7080 	mov.w	r0, #256	@ 0x100
 801bacc:	9005      	str	r0, [sp, #20]
 801bace:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801bad0:	9302      	str	r3, [sp, #8]
 801bad2:	e9cd 9003 	strd	r9, r0, [sp, #12]
 801bad6:	b289      	uxth	r1, r1
 801bad8:	fa1f f38e 	uxth.w	r3, lr
 801badc:	9101      	str	r1, [sp, #4]
 801bade:	9300      	str	r3, [sp, #0]
 801bae0:	6dad      	ldr	r5, [r5, #88]	@ 0x58
 801bae2:	4643      	mov	r3, r8
 801bae4:	19b9      	adds	r1, r7, r6
 801bae6:	4620      	mov	r0, r4
 801bae8:	47a8      	blx	r5
 801baea:	b019      	add	sp, #100	@ 0x64
 801baec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801baf0:	4a28      	ldr	r2, [pc, #160]	@ (801bb94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 801baf2:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 801baf6:	6810      	ldr	r0, [r2, #0]
 801baf8:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801bafc:	f8d0 a000 	ldr.w	sl, [r0]
 801bb00:	9306      	str	r3, [sp, #24]
 801bb02:	f44f 7300 	mov.w	r3, #512	@ 0x200
 801bb06:	9305      	str	r3, [sp, #20]
 801bb08:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bb0a:	f8cd c008 	str.w	ip, [sp, #8]
 801bb0e:	e9cd 9303 	strd	r9, r3, [sp, #12]
 801bb12:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801bb14:	1b64      	subs	r4, r4, r5
 801bb16:	1b1c      	subs	r4, r3, r4
 801bb18:	fb06 5608 	mla	r6, r6, r8, r5
 801bb1c:	4544      	cmp	r4, r8
 801bb1e:	bfd4      	ite	le
 801bb20:	ebc5 0504 	rsble	r5, r5, r4
 801bb24:	ebc5 0508 	rsbgt	r5, r5, r8
 801bb28:	b289      	uxth	r1, r1
 801bb2a:	b2ad      	uxth	r5, r5
 801bb2c:	9101      	str	r1, [sp, #4]
 801bb2e:	9500      	str	r5, [sp, #0]
 801bb30:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
 801bb34:	4673      	mov	r3, lr
 801bb36:	19b9      	adds	r1, r7, r6
 801bb38:	e798      	b.n	801ba6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 801bb3a:	2208      	movs	r2, #8
 801bb3c:	9b08      	ldr	r3, [sp, #32]
 801bb3e:	fb92 f3f3 	sdiv	r3, r2, r3
 801bb42:	1e5a      	subs	r2, r3, #1
 801bb44:	4442      	add	r2, r8
 801bb46:	fb92 f2f3 	sdiv	r2, r2, r3
 801bb4a:	fb12 f203 	smulbb	r2, r2, r3
 801bb4e:	b292      	uxth	r2, r2
 801bb50:	e64d      	b.n	801b7ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf6>
 801bb52:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801bb54:	e68f      	b.n	801b876 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17e>
 801bb56:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801bb58:	e723      	b.n	801b9a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2aa>
 801bb5a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801bb5c:	b143      	cbz	r3, 801bb70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x478>
 801bb5e:	441e      	add	r6, r3
 801bb60:	b2b6      	uxth	r6, r6
 801bb62:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
 801bb66:	f006 0607 	and.w	r6, r6, #7
 801bb6a:	783a      	ldrb	r2, [r7, #0]
 801bb6c:	4132      	asrs	r2, r6
 801bb6e:	b2d2      	uxtb	r2, r2
 801bb70:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801bb72:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801bb74:	4419      	add	r1, r3
 801bb76:	910a      	str	r1, [sp, #40]	@ 0x28
 801bb78:	e6b2      	b.n	801b8e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e8>
 801bb7a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bb7c:	2b00      	cmp	r3, #0
 801bb7e:	d1b4      	bne.n	801baea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801bb80:	4b04      	ldr	r3, [pc, #16]	@ (801bb94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 801bb82:	6818      	ldr	r0, [r3, #0]
 801bb84:	6803      	ldr	r3, [r0, #0]
 801bb86:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801bb88:	4798      	blx	r3
 801bb8a:	e7ae      	b.n	801baea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801bb8c:	2b00      	cmp	r3, #0
 801bb8e:	f47f af4a 	bne.w	801ba26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32e>
 801bb92:	e626      	b.n	801b7e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 801bb94:	20015238 	.word	0x20015238

0801bb98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801bb98:	b538      	push	{r3, r4, r5, lr}
 801bb9a:	4c15      	ldr	r4, [pc, #84]	@ (801bbf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801bb9c:	7823      	ldrb	r3, [r4, #0]
 801bb9e:	f3bf 8f5b 	dmb	ish
 801bba2:	07da      	lsls	r2, r3, #31
 801bba4:	4605      	mov	r5, r0
 801bba6:	d40b      	bmi.n	801bbc0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801bba8:	4620      	mov	r0, r4
 801bbaa:	f008 fc48 	bl	802443e <__cxa_guard_acquire>
 801bbae:	b138      	cbz	r0, 801bbc0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801bbb0:	4620      	mov	r0, r4
 801bbb2:	f008 fc50 	bl	8024456 <__cxa_guard_release>
 801bbb6:	4a0f      	ldr	r2, [pc, #60]	@ (801bbf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801bbb8:	490f      	ldr	r1, [pc, #60]	@ (801bbf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801bbba:	4810      	ldr	r0, [pc, #64]	@ (801bbfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801bbbc:	f008 fc38 	bl	8024430 <__aeabi_atexit>
 801bbc0:	4c0f      	ldr	r4, [pc, #60]	@ (801bc00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801bbc2:	7823      	ldrb	r3, [r4, #0]
 801bbc4:	f3bf 8f5b 	dmb	ish
 801bbc8:	07db      	lsls	r3, r3, #31
 801bbca:	d40b      	bmi.n	801bbe4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801bbcc:	4620      	mov	r0, r4
 801bbce:	f008 fc36 	bl	802443e <__cxa_guard_acquire>
 801bbd2:	b138      	cbz	r0, 801bbe4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801bbd4:	4620      	mov	r0, r4
 801bbd6:	f008 fc3e 	bl	8024456 <__cxa_guard_release>
 801bbda:	4a06      	ldr	r2, [pc, #24]	@ (801bbf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801bbdc:	4909      	ldr	r1, [pc, #36]	@ (801bc04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801bbde:	480a      	ldr	r0, [pc, #40]	@ (801bc08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801bbe0:	f008 fc26 	bl	8024430 <__aeabi_atexit>
 801bbe4:	4b05      	ldr	r3, [pc, #20]	@ (801bbfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801bbe6:	616b      	str	r3, [r5, #20]
 801bbe8:	4b07      	ldr	r3, [pc, #28]	@ (801bc08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801bbea:	61ab      	str	r3, [r5, #24]
 801bbec:	bd38      	pop	{r3, r4, r5, pc}
 801bbee:	bf00      	nop
 801bbf0:	2001531c 	.word	0x2001531c
 801bbf4:	20000000 	.word	0x20000000
 801bbf8:	08017ca1 	.word	0x08017ca1
 801bbfc:	200000d0 	.word	0x200000d0
 801bc00:	20015320 	.word	0x20015320
 801bc04:	08017c9f 	.word	0x08017c9f
 801bc08:	200000d4 	.word	0x200000d4

0801bc0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801bc0c:	b538      	push	{r3, r4, r5, lr}
 801bc0e:	4c15      	ldr	r4, [pc, #84]	@ (801bc64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801bc10:	7823      	ldrb	r3, [r4, #0]
 801bc12:	f3bf 8f5b 	dmb	ish
 801bc16:	07da      	lsls	r2, r3, #31
 801bc18:	4605      	mov	r5, r0
 801bc1a:	d40b      	bmi.n	801bc34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801bc1c:	4620      	mov	r0, r4
 801bc1e:	f008 fc0e 	bl	802443e <__cxa_guard_acquire>
 801bc22:	b138      	cbz	r0, 801bc34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801bc24:	4620      	mov	r0, r4
 801bc26:	f008 fc16 	bl	8024456 <__cxa_guard_release>
 801bc2a:	4a0f      	ldr	r2, [pc, #60]	@ (801bc68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801bc2c:	490f      	ldr	r1, [pc, #60]	@ (801bc6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801bc2e:	4810      	ldr	r0, [pc, #64]	@ (801bc70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801bc30:	f008 fbfe 	bl	8024430 <__aeabi_atexit>
 801bc34:	4c0f      	ldr	r4, [pc, #60]	@ (801bc74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801bc36:	7823      	ldrb	r3, [r4, #0]
 801bc38:	f3bf 8f5b 	dmb	ish
 801bc3c:	07db      	lsls	r3, r3, #31
 801bc3e:	d40b      	bmi.n	801bc58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801bc40:	4620      	mov	r0, r4
 801bc42:	f008 fbfc 	bl	802443e <__cxa_guard_acquire>
 801bc46:	b138      	cbz	r0, 801bc58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801bc48:	4620      	mov	r0, r4
 801bc4a:	f008 fc04 	bl	8024456 <__cxa_guard_release>
 801bc4e:	4a06      	ldr	r2, [pc, #24]	@ (801bc68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801bc50:	4909      	ldr	r1, [pc, #36]	@ (801bc78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801bc52:	480a      	ldr	r0, [pc, #40]	@ (801bc7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801bc54:	f008 fbec 	bl	8024430 <__aeabi_atexit>
 801bc58:	4b05      	ldr	r3, [pc, #20]	@ (801bc70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801bc5a:	60eb      	str	r3, [r5, #12]
 801bc5c:	4b07      	ldr	r3, [pc, #28]	@ (801bc7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801bc5e:	612b      	str	r3, [r5, #16]
 801bc60:	bd38      	pop	{r3, r4, r5, pc}
 801bc62:	bf00      	nop
 801bc64:	200152f4 	.word	0x200152f4
 801bc68:	20000000 	.word	0x20000000
 801bc6c:	08017ca5 	.word	0x08017ca5
 801bc70:	200000a8 	.word	0x200000a8
 801bc74:	200152f8 	.word	0x200152f8
 801bc78:	08017ca3 	.word	0x08017ca3
 801bc7c:	200000ac 	.word	0x200000ac

0801bc80 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801bc80:	b510      	push	{r4, lr}
 801bc82:	4604      	mov	r4, r0
 801bc84:	f7ff ff88 	bl	801bb98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801bc88:	4620      	mov	r0, r4
 801bc8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801bc8e:	f7ff bfbd 	b.w	801bc0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801bc94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801bc94:	b538      	push	{r3, r4, r5, lr}
 801bc96:	4c15      	ldr	r4, [pc, #84]	@ (801bcec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801bc98:	7823      	ldrb	r3, [r4, #0]
 801bc9a:	f3bf 8f5b 	dmb	ish
 801bc9e:	07da      	lsls	r2, r3, #31
 801bca0:	4605      	mov	r5, r0
 801bca2:	d40b      	bmi.n	801bcbc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801bca4:	4620      	mov	r0, r4
 801bca6:	f008 fbca 	bl	802443e <__cxa_guard_acquire>
 801bcaa:	b138      	cbz	r0, 801bcbc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801bcac:	4620      	mov	r0, r4
 801bcae:	f008 fbd2 	bl	8024456 <__cxa_guard_release>
 801bcb2:	4a0f      	ldr	r2, [pc, #60]	@ (801bcf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801bcb4:	490f      	ldr	r1, [pc, #60]	@ (801bcf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801bcb6:	4810      	ldr	r0, [pc, #64]	@ (801bcf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801bcb8:	f008 fbba 	bl	8024430 <__aeabi_atexit>
 801bcbc:	4c0f      	ldr	r4, [pc, #60]	@ (801bcfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801bcbe:	7823      	ldrb	r3, [r4, #0]
 801bcc0:	f3bf 8f5b 	dmb	ish
 801bcc4:	07db      	lsls	r3, r3, #31
 801bcc6:	d40b      	bmi.n	801bce0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801bcc8:	4620      	mov	r0, r4
 801bcca:	f008 fbb8 	bl	802443e <__cxa_guard_acquire>
 801bcce:	b138      	cbz	r0, 801bce0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801bcd0:	4620      	mov	r0, r4
 801bcd2:	f008 fbc0 	bl	8024456 <__cxa_guard_release>
 801bcd6:	4a06      	ldr	r2, [pc, #24]	@ (801bcf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801bcd8:	4909      	ldr	r1, [pc, #36]	@ (801bd00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801bcda:	480a      	ldr	r0, [pc, #40]	@ (801bd04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801bcdc:	f008 fba8 	bl	8024430 <__aeabi_atexit>
 801bce0:	4b05      	ldr	r3, [pc, #20]	@ (801bcf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801bce2:	626b      	str	r3, [r5, #36]	@ 0x24
 801bce4:	4b07      	ldr	r3, [pc, #28]	@ (801bd04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801bce6:	62ab      	str	r3, [r5, #40]	@ 0x28
 801bce8:	bd38      	pop	{r3, r4, r5, pc}
 801bcea:	bf00      	nop
 801bcec:	20015324 	.word	0x20015324
 801bcf0:	20000000 	.word	0x20000000
 801bcf4:	08017c99 	.word	0x08017c99
 801bcf8:	200000d8 	.word	0x200000d8
 801bcfc:	20015328 	.word	0x20015328
 801bd00:	08017c97 	.word	0x08017c97
 801bd04:	200000dc 	.word	0x200000dc

0801bd08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801bd08:	b538      	push	{r3, r4, r5, lr}
 801bd0a:	4c15      	ldr	r4, [pc, #84]	@ (801bd60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801bd0c:	7823      	ldrb	r3, [r4, #0]
 801bd0e:	f3bf 8f5b 	dmb	ish
 801bd12:	07da      	lsls	r2, r3, #31
 801bd14:	4605      	mov	r5, r0
 801bd16:	d40b      	bmi.n	801bd30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801bd18:	4620      	mov	r0, r4
 801bd1a:	f008 fb90 	bl	802443e <__cxa_guard_acquire>
 801bd1e:	b138      	cbz	r0, 801bd30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801bd20:	4620      	mov	r0, r4
 801bd22:	f008 fb98 	bl	8024456 <__cxa_guard_release>
 801bd26:	4a0f      	ldr	r2, [pc, #60]	@ (801bd64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801bd28:	490f      	ldr	r1, [pc, #60]	@ (801bd68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801bd2a:	4810      	ldr	r0, [pc, #64]	@ (801bd6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801bd2c:	f008 fb80 	bl	8024430 <__aeabi_atexit>
 801bd30:	4c0f      	ldr	r4, [pc, #60]	@ (801bd70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801bd32:	7823      	ldrb	r3, [r4, #0]
 801bd34:	f3bf 8f5b 	dmb	ish
 801bd38:	07db      	lsls	r3, r3, #31
 801bd3a:	d40b      	bmi.n	801bd54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801bd3c:	4620      	mov	r0, r4
 801bd3e:	f008 fb7e 	bl	802443e <__cxa_guard_acquire>
 801bd42:	b138      	cbz	r0, 801bd54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801bd44:	4620      	mov	r0, r4
 801bd46:	f008 fb86 	bl	8024456 <__cxa_guard_release>
 801bd4a:	4a06      	ldr	r2, [pc, #24]	@ (801bd64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801bd4c:	4909      	ldr	r1, [pc, #36]	@ (801bd74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801bd4e:	480a      	ldr	r0, [pc, #40]	@ (801bd78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801bd50:	f008 fb6e 	bl	8024430 <__aeabi_atexit>
 801bd54:	4b05      	ldr	r3, [pc, #20]	@ (801bd6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801bd56:	61eb      	str	r3, [r5, #28]
 801bd58:	4b07      	ldr	r3, [pc, #28]	@ (801bd78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801bd5a:	622b      	str	r3, [r5, #32]
 801bd5c:	bd38      	pop	{r3, r4, r5, pc}
 801bd5e:	bf00      	nop
 801bd60:	200152fc 	.word	0x200152fc
 801bd64:	20000000 	.word	0x20000000
 801bd68:	08017c9d 	.word	0x08017c9d
 801bd6c:	200000b0 	.word	0x200000b0
 801bd70:	20015300 	.word	0x20015300
 801bd74:	08017c9b 	.word	0x08017c9b
 801bd78:	200000b4 	.word	0x200000b4

0801bd7c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801bd7c:	b510      	push	{r4, lr}
 801bd7e:	4604      	mov	r4, r0
 801bd80:	f7ff ff88 	bl	801bc94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801bd84:	4620      	mov	r0, r4
 801bd86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801bd8a:	f7ff bfbd 	b.w	801bd08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801bd90 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801bd90:	b538      	push	{r3, r4, r5, lr}
 801bd92:	4c15      	ldr	r4, [pc, #84]	@ (801bde8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801bd94:	7823      	ldrb	r3, [r4, #0]
 801bd96:	f3bf 8f5b 	dmb	ish
 801bd9a:	07da      	lsls	r2, r3, #31
 801bd9c:	4605      	mov	r5, r0
 801bd9e:	d40b      	bmi.n	801bdb8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801bda0:	4620      	mov	r0, r4
 801bda2:	f008 fb4c 	bl	802443e <__cxa_guard_acquire>
 801bda6:	b138      	cbz	r0, 801bdb8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801bda8:	4620      	mov	r0, r4
 801bdaa:	f008 fb54 	bl	8024456 <__cxa_guard_release>
 801bdae:	4a0f      	ldr	r2, [pc, #60]	@ (801bdec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801bdb0:	490f      	ldr	r1, [pc, #60]	@ (801bdf0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801bdb2:	4810      	ldr	r0, [pc, #64]	@ (801bdf4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801bdb4:	f008 fb3c 	bl	8024430 <__aeabi_atexit>
 801bdb8:	4c0f      	ldr	r4, [pc, #60]	@ (801bdf8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801bdba:	7823      	ldrb	r3, [r4, #0]
 801bdbc:	f3bf 8f5b 	dmb	ish
 801bdc0:	07db      	lsls	r3, r3, #31
 801bdc2:	d40b      	bmi.n	801bddc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801bdc4:	4620      	mov	r0, r4
 801bdc6:	f008 fb3a 	bl	802443e <__cxa_guard_acquire>
 801bdca:	b138      	cbz	r0, 801bddc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801bdcc:	4620      	mov	r0, r4
 801bdce:	f008 fb42 	bl	8024456 <__cxa_guard_release>
 801bdd2:	4a06      	ldr	r2, [pc, #24]	@ (801bdec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801bdd4:	4909      	ldr	r1, [pc, #36]	@ (801bdfc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801bdd6:	480a      	ldr	r0, [pc, #40]	@ (801be00 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801bdd8:	f008 fb2a 	bl	8024430 <__aeabi_atexit>
 801bddc:	4b05      	ldr	r3, [pc, #20]	@ (801bdf4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801bdde:	636b      	str	r3, [r5, #52]	@ 0x34
 801bde0:	4b07      	ldr	r3, [pc, #28]	@ (801be00 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801bde2:	63ab      	str	r3, [r5, #56]	@ 0x38
 801bde4:	bd38      	pop	{r3, r4, r5, pc}
 801bde6:	bf00      	nop
 801bde8:	20015334 	.word	0x20015334
 801bdec:	20000000 	.word	0x20000000
 801bdf0:	08017c91 	.word	0x08017c91
 801bdf4:	200000e8 	.word	0x200000e8
 801bdf8:	20015338 	.word	0x20015338
 801bdfc:	08017c8f 	.word	0x08017c8f
 801be00:	200000ec 	.word	0x200000ec

0801be04 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801be04:	b538      	push	{r3, r4, r5, lr}
 801be06:	4c15      	ldr	r4, [pc, #84]	@ (801be5c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801be08:	7823      	ldrb	r3, [r4, #0]
 801be0a:	f3bf 8f5b 	dmb	ish
 801be0e:	07da      	lsls	r2, r3, #31
 801be10:	4605      	mov	r5, r0
 801be12:	d40b      	bmi.n	801be2c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801be14:	4620      	mov	r0, r4
 801be16:	f008 fb12 	bl	802443e <__cxa_guard_acquire>
 801be1a:	b138      	cbz	r0, 801be2c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801be1c:	4620      	mov	r0, r4
 801be1e:	f008 fb1a 	bl	8024456 <__cxa_guard_release>
 801be22:	4a0f      	ldr	r2, [pc, #60]	@ (801be60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801be24:	490f      	ldr	r1, [pc, #60]	@ (801be64 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801be26:	4810      	ldr	r0, [pc, #64]	@ (801be68 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801be28:	f008 fb02 	bl	8024430 <__aeabi_atexit>
 801be2c:	4c0f      	ldr	r4, [pc, #60]	@ (801be6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801be2e:	7823      	ldrb	r3, [r4, #0]
 801be30:	f3bf 8f5b 	dmb	ish
 801be34:	07db      	lsls	r3, r3, #31
 801be36:	d40b      	bmi.n	801be50 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801be38:	4620      	mov	r0, r4
 801be3a:	f008 fb00 	bl	802443e <__cxa_guard_acquire>
 801be3e:	b138      	cbz	r0, 801be50 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801be40:	4620      	mov	r0, r4
 801be42:	f008 fb08 	bl	8024456 <__cxa_guard_release>
 801be46:	4a06      	ldr	r2, [pc, #24]	@ (801be60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801be48:	4909      	ldr	r1, [pc, #36]	@ (801be70 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801be4a:	480a      	ldr	r0, [pc, #40]	@ (801be74 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801be4c:	f008 faf0 	bl	8024430 <__aeabi_atexit>
 801be50:	4b05      	ldr	r3, [pc, #20]	@ (801be68 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801be52:	62eb      	str	r3, [r5, #44]	@ 0x2c
 801be54:	4b07      	ldr	r3, [pc, #28]	@ (801be74 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801be56:	632b      	str	r3, [r5, #48]	@ 0x30
 801be58:	bd38      	pop	{r3, r4, r5, pc}
 801be5a:	bf00      	nop
 801be5c:	20015304 	.word	0x20015304
 801be60:	20000000 	.word	0x20000000
 801be64:	08017c95 	.word	0x08017c95
 801be68:	200000b8 	.word	0x200000b8
 801be6c:	20015308 	.word	0x20015308
 801be70:	08017c93 	.word	0x08017c93
 801be74:	200000bc 	.word	0x200000bc

0801be78 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801be78:	b510      	push	{r4, lr}
 801be7a:	4604      	mov	r4, r0
 801be7c:	f7ff ff88 	bl	801bd90 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801be80:	4620      	mov	r0, r4
 801be82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801be86:	f7ff bfbd 	b.w	801be04 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801be8c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801be8c:	b538      	push	{r3, r4, r5, lr}
 801be8e:	4c15      	ldr	r4, [pc, #84]	@ (801bee4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801be90:	7823      	ldrb	r3, [r4, #0]
 801be92:	f3bf 8f5b 	dmb	ish
 801be96:	07da      	lsls	r2, r3, #31
 801be98:	4605      	mov	r5, r0
 801be9a:	d40b      	bmi.n	801beb4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801be9c:	4620      	mov	r0, r4
 801be9e:	f008 face 	bl	802443e <__cxa_guard_acquire>
 801bea2:	b138      	cbz	r0, 801beb4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801bea4:	4620      	mov	r0, r4
 801bea6:	f008 fad6 	bl	8024456 <__cxa_guard_release>
 801beaa:	4a0f      	ldr	r2, [pc, #60]	@ (801bee8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801beac:	490f      	ldr	r1, [pc, #60]	@ (801beec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801beae:	4810      	ldr	r0, [pc, #64]	@ (801bef0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801beb0:	f008 fabe 	bl	8024430 <__aeabi_atexit>
 801beb4:	4c0f      	ldr	r4, [pc, #60]	@ (801bef4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801beb6:	7823      	ldrb	r3, [r4, #0]
 801beb8:	f3bf 8f5b 	dmb	ish
 801bebc:	07db      	lsls	r3, r3, #31
 801bebe:	d40b      	bmi.n	801bed8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801bec0:	4620      	mov	r0, r4
 801bec2:	f008 fabc 	bl	802443e <__cxa_guard_acquire>
 801bec6:	b138      	cbz	r0, 801bed8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801bec8:	4620      	mov	r0, r4
 801beca:	f008 fac4 	bl	8024456 <__cxa_guard_release>
 801bece:	4a06      	ldr	r2, [pc, #24]	@ (801bee8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801bed0:	4909      	ldr	r1, [pc, #36]	@ (801bef8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801bed2:	480a      	ldr	r0, [pc, #40]	@ (801befc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801bed4:	f008 faac 	bl	8024430 <__aeabi_atexit>
 801bed8:	4b05      	ldr	r3, [pc, #20]	@ (801bef0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801beda:	656b      	str	r3, [r5, #84]	@ 0x54
 801bedc:	4b07      	ldr	r3, [pc, #28]	@ (801befc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801bede:	65ab      	str	r3, [r5, #88]	@ 0x58
 801bee0:	bd38      	pop	{r3, r4, r5, pc}
 801bee2:	bf00      	nop
 801bee4:	2001533c 	.word	0x2001533c
 801bee8:	20000000 	.word	0x20000000
 801beec:	08017c81 	.word	0x08017c81
 801bef0:	200000f0 	.word	0x200000f0
 801bef4:	20015340 	.word	0x20015340
 801bef8:	08017c7f 	.word	0x08017c7f
 801befc:	200000f4 	.word	0x200000f4

0801bf00 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801bf00:	b538      	push	{r3, r4, r5, lr}
 801bf02:	4c15      	ldr	r4, [pc, #84]	@ (801bf58 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801bf04:	7823      	ldrb	r3, [r4, #0]
 801bf06:	f3bf 8f5b 	dmb	ish
 801bf0a:	07da      	lsls	r2, r3, #31
 801bf0c:	4605      	mov	r5, r0
 801bf0e:	d40b      	bmi.n	801bf28 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801bf10:	4620      	mov	r0, r4
 801bf12:	f008 fa94 	bl	802443e <__cxa_guard_acquire>
 801bf16:	b138      	cbz	r0, 801bf28 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801bf18:	4620      	mov	r0, r4
 801bf1a:	f008 fa9c 	bl	8024456 <__cxa_guard_release>
 801bf1e:	4a0f      	ldr	r2, [pc, #60]	@ (801bf5c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801bf20:	490f      	ldr	r1, [pc, #60]	@ (801bf60 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801bf22:	4810      	ldr	r0, [pc, #64]	@ (801bf64 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801bf24:	f008 fa84 	bl	8024430 <__aeabi_atexit>
 801bf28:	4c0f      	ldr	r4, [pc, #60]	@ (801bf68 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801bf2a:	7823      	ldrb	r3, [r4, #0]
 801bf2c:	f3bf 8f5b 	dmb	ish
 801bf30:	07db      	lsls	r3, r3, #31
 801bf32:	d40b      	bmi.n	801bf4c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801bf34:	4620      	mov	r0, r4
 801bf36:	f008 fa82 	bl	802443e <__cxa_guard_acquire>
 801bf3a:	b138      	cbz	r0, 801bf4c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801bf3c:	4620      	mov	r0, r4
 801bf3e:	f008 fa8a 	bl	8024456 <__cxa_guard_release>
 801bf42:	4a06      	ldr	r2, [pc, #24]	@ (801bf5c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801bf44:	4909      	ldr	r1, [pc, #36]	@ (801bf6c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801bf46:	480a      	ldr	r0, [pc, #40]	@ (801bf70 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801bf48:	f008 fa72 	bl	8024430 <__aeabi_atexit>
 801bf4c:	4b05      	ldr	r3, [pc, #20]	@ (801bf64 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801bf4e:	64eb      	str	r3, [r5, #76]	@ 0x4c
 801bf50:	4b07      	ldr	r3, [pc, #28]	@ (801bf70 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801bf52:	652b      	str	r3, [r5, #80]	@ 0x50
 801bf54:	bd38      	pop	{r3, r4, r5, pc}
 801bf56:	bf00      	nop
 801bf58:	20015344 	.word	0x20015344
 801bf5c:	20000000 	.word	0x20000000
 801bf60:	08017c85 	.word	0x08017c85
 801bf64:	200000f8 	.word	0x200000f8
 801bf68:	20015348 	.word	0x20015348
 801bf6c:	08017c83 	.word	0x08017c83
 801bf70:	200000fc 	.word	0x200000fc

0801bf74 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801bf74:	b538      	push	{r3, r4, r5, lr}
 801bf76:	4c15      	ldr	r4, [pc, #84]	@ (801bfcc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801bf78:	7823      	ldrb	r3, [r4, #0]
 801bf7a:	f3bf 8f5b 	dmb	ish
 801bf7e:	07da      	lsls	r2, r3, #31
 801bf80:	4605      	mov	r5, r0
 801bf82:	d40b      	bmi.n	801bf9c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801bf84:	4620      	mov	r0, r4
 801bf86:	f008 fa5a 	bl	802443e <__cxa_guard_acquire>
 801bf8a:	b138      	cbz	r0, 801bf9c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801bf8c:	4620      	mov	r0, r4
 801bf8e:	f008 fa62 	bl	8024456 <__cxa_guard_release>
 801bf92:	4a0f      	ldr	r2, [pc, #60]	@ (801bfd0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801bf94:	490f      	ldr	r1, [pc, #60]	@ (801bfd4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801bf96:	4810      	ldr	r0, [pc, #64]	@ (801bfd8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801bf98:	f008 fa4a 	bl	8024430 <__aeabi_atexit>
 801bf9c:	4c0f      	ldr	r4, [pc, #60]	@ (801bfdc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801bf9e:	7823      	ldrb	r3, [r4, #0]
 801bfa0:	f3bf 8f5b 	dmb	ish
 801bfa4:	07db      	lsls	r3, r3, #31
 801bfa6:	d40b      	bmi.n	801bfc0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801bfa8:	4620      	mov	r0, r4
 801bfaa:	f008 fa48 	bl	802443e <__cxa_guard_acquire>
 801bfae:	b138      	cbz	r0, 801bfc0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801bfb0:	4620      	mov	r0, r4
 801bfb2:	f008 fa50 	bl	8024456 <__cxa_guard_release>
 801bfb6:	4a06      	ldr	r2, [pc, #24]	@ (801bfd0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801bfb8:	4909      	ldr	r1, [pc, #36]	@ (801bfe0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801bfba:	480a      	ldr	r0, [pc, #40]	@ (801bfe4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801bfbc:	f008 fa38 	bl	8024430 <__aeabi_atexit>
 801bfc0:	4b05      	ldr	r3, [pc, #20]	@ (801bfd8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801bfc2:	646b      	str	r3, [r5, #68]	@ 0x44
 801bfc4:	4b07      	ldr	r3, [pc, #28]	@ (801bfe4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801bfc6:	64ab      	str	r3, [r5, #72]	@ 0x48
 801bfc8:	bd38      	pop	{r3, r4, r5, pc}
 801bfca:	bf00      	nop
 801bfcc:	2001530c 	.word	0x2001530c
 801bfd0:	20000000 	.word	0x20000000
 801bfd4:	08017c89 	.word	0x08017c89
 801bfd8:	200000c0 	.word	0x200000c0
 801bfdc:	20015310 	.word	0x20015310
 801bfe0:	08017c87 	.word	0x08017c87
 801bfe4:	200000c4 	.word	0x200000c4

0801bfe8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801bfe8:	b538      	push	{r3, r4, r5, lr}
 801bfea:	4c15      	ldr	r4, [pc, #84]	@ (801c040 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801bfec:	7823      	ldrb	r3, [r4, #0]
 801bfee:	f3bf 8f5b 	dmb	ish
 801bff2:	07da      	lsls	r2, r3, #31
 801bff4:	4605      	mov	r5, r0
 801bff6:	d40b      	bmi.n	801c010 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801bff8:	4620      	mov	r0, r4
 801bffa:	f008 fa20 	bl	802443e <__cxa_guard_acquire>
 801bffe:	b138      	cbz	r0, 801c010 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801c000:	4620      	mov	r0, r4
 801c002:	f008 fa28 	bl	8024456 <__cxa_guard_release>
 801c006:	4a0f      	ldr	r2, [pc, #60]	@ (801c044 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801c008:	490f      	ldr	r1, [pc, #60]	@ (801c048 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801c00a:	4810      	ldr	r0, [pc, #64]	@ (801c04c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801c00c:	f008 fa10 	bl	8024430 <__aeabi_atexit>
 801c010:	4c0f      	ldr	r4, [pc, #60]	@ (801c050 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801c012:	7823      	ldrb	r3, [r4, #0]
 801c014:	f3bf 8f5b 	dmb	ish
 801c018:	07db      	lsls	r3, r3, #31
 801c01a:	d40b      	bmi.n	801c034 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801c01c:	4620      	mov	r0, r4
 801c01e:	f008 fa0e 	bl	802443e <__cxa_guard_acquire>
 801c022:	b138      	cbz	r0, 801c034 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801c024:	4620      	mov	r0, r4
 801c026:	f008 fa16 	bl	8024456 <__cxa_guard_release>
 801c02a:	4a06      	ldr	r2, [pc, #24]	@ (801c044 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801c02c:	4909      	ldr	r1, [pc, #36]	@ (801c054 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801c02e:	480a      	ldr	r0, [pc, #40]	@ (801c058 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801c030:	f008 f9fe 	bl	8024430 <__aeabi_atexit>
 801c034:	4b05      	ldr	r3, [pc, #20]	@ (801c04c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801c036:	63eb      	str	r3, [r5, #60]	@ 0x3c
 801c038:	4b07      	ldr	r3, [pc, #28]	@ (801c058 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801c03a:	642b      	str	r3, [r5, #64]	@ 0x40
 801c03c:	bd38      	pop	{r3, r4, r5, pc}
 801c03e:	bf00      	nop
 801c040:	2001532c 	.word	0x2001532c
 801c044:	20000000 	.word	0x20000000
 801c048:	08017c8d 	.word	0x08017c8d
 801c04c:	200000e0 	.word	0x200000e0
 801c050:	20015330 	.word	0x20015330
 801c054:	08017c8b 	.word	0x08017c8b
 801c058:	200000e4 	.word	0x200000e4

0801c05c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801c05c:	b510      	push	{r4, lr}
 801c05e:	4604      	mov	r4, r0
 801c060:	f7ff ff14 	bl	801be8c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801c064:	4620      	mov	r0, r4
 801c066:	f7ff ff85 	bl	801bf74 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801c06a:	4620      	mov	r0, r4
 801c06c:	f7ff ff48 	bl	801bf00 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801c070:	4620      	mov	r0, r4
 801c072:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c076:	f7ff bfb7 	b.w	801bfe8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801c07c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801c07c:	b538      	push	{r3, r4, r5, lr}
 801c07e:	4c15      	ldr	r4, [pc, #84]	@ (801c0d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801c080:	7823      	ldrb	r3, [r4, #0]
 801c082:	f3bf 8f5b 	dmb	ish
 801c086:	07da      	lsls	r2, r3, #31
 801c088:	4605      	mov	r5, r0
 801c08a:	d40b      	bmi.n	801c0a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801c08c:	4620      	mov	r0, r4
 801c08e:	f008 f9d6 	bl	802443e <__cxa_guard_acquire>
 801c092:	b138      	cbz	r0, 801c0a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801c094:	4620      	mov	r0, r4
 801c096:	f008 f9de 	bl	8024456 <__cxa_guard_release>
 801c09a:	4a0f      	ldr	r2, [pc, #60]	@ (801c0d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801c09c:	490f      	ldr	r1, [pc, #60]	@ (801c0dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801c09e:	4810      	ldr	r0, [pc, #64]	@ (801c0e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801c0a0:	f008 f9c6 	bl	8024430 <__aeabi_atexit>
 801c0a4:	4c0f      	ldr	r4, [pc, #60]	@ (801c0e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801c0a6:	7823      	ldrb	r3, [r4, #0]
 801c0a8:	f3bf 8f5b 	dmb	ish
 801c0ac:	07db      	lsls	r3, r3, #31
 801c0ae:	d40b      	bmi.n	801c0c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801c0b0:	4620      	mov	r0, r4
 801c0b2:	f008 f9c4 	bl	802443e <__cxa_guard_acquire>
 801c0b6:	b138      	cbz	r0, 801c0c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801c0b8:	4620      	mov	r0, r4
 801c0ba:	f008 f9cc 	bl	8024456 <__cxa_guard_release>
 801c0be:	4a06      	ldr	r2, [pc, #24]	@ (801c0d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801c0c0:	4909      	ldr	r1, [pc, #36]	@ (801c0e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801c0c2:	480a      	ldr	r0, [pc, #40]	@ (801c0ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801c0c4:	f008 f9b4 	bl	8024430 <__aeabi_atexit>
 801c0c8:	4b05      	ldr	r3, [pc, #20]	@ (801c0e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801c0ca:	666b      	str	r3, [r5, #100]	@ 0x64
 801c0cc:	4b07      	ldr	r3, [pc, #28]	@ (801c0ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801c0ce:	66ab      	str	r3, [r5, #104]	@ 0x68
 801c0d0:	bd38      	pop	{r3, r4, r5, pc}
 801c0d2:	bf00      	nop
 801c0d4:	20015314 	.word	0x20015314
 801c0d8:	20000000 	.word	0x20000000
 801c0dc:	08017c79 	.word	0x08017c79
 801c0e0:	200000c8 	.word	0x200000c8
 801c0e4:	20015318 	.word	0x20015318
 801c0e8:	08017c77 	.word	0x08017c77
 801c0ec:	200000cc 	.word	0x200000cc

0801c0f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801c0f0:	b538      	push	{r3, r4, r5, lr}
 801c0f2:	4c15      	ldr	r4, [pc, #84]	@ (801c148 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801c0f4:	7823      	ldrb	r3, [r4, #0]
 801c0f6:	f3bf 8f5b 	dmb	ish
 801c0fa:	07da      	lsls	r2, r3, #31
 801c0fc:	4605      	mov	r5, r0
 801c0fe:	d40b      	bmi.n	801c118 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801c100:	4620      	mov	r0, r4
 801c102:	f008 f99c 	bl	802443e <__cxa_guard_acquire>
 801c106:	b138      	cbz	r0, 801c118 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801c108:	4620      	mov	r0, r4
 801c10a:	f008 f9a4 	bl	8024456 <__cxa_guard_release>
 801c10e:	4a0f      	ldr	r2, [pc, #60]	@ (801c14c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801c110:	490f      	ldr	r1, [pc, #60]	@ (801c150 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801c112:	4810      	ldr	r0, [pc, #64]	@ (801c154 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801c114:	f008 f98c 	bl	8024430 <__aeabi_atexit>
 801c118:	4c0f      	ldr	r4, [pc, #60]	@ (801c158 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801c11a:	7823      	ldrb	r3, [r4, #0]
 801c11c:	f3bf 8f5b 	dmb	ish
 801c120:	07db      	lsls	r3, r3, #31
 801c122:	d40b      	bmi.n	801c13c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801c124:	4620      	mov	r0, r4
 801c126:	f008 f98a 	bl	802443e <__cxa_guard_acquire>
 801c12a:	b138      	cbz	r0, 801c13c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801c12c:	4620      	mov	r0, r4
 801c12e:	f008 f992 	bl	8024456 <__cxa_guard_release>
 801c132:	4a06      	ldr	r2, [pc, #24]	@ (801c14c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801c134:	4909      	ldr	r1, [pc, #36]	@ (801c15c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801c136:	480a      	ldr	r0, [pc, #40]	@ (801c160 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801c138:	f008 f97a 	bl	8024430 <__aeabi_atexit>
 801c13c:	4b05      	ldr	r3, [pc, #20]	@ (801c154 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801c13e:	65eb      	str	r3, [r5, #92]	@ 0x5c
 801c140:	4b07      	ldr	r3, [pc, #28]	@ (801c160 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801c142:	662b      	str	r3, [r5, #96]	@ 0x60
 801c144:	bd38      	pop	{r3, r4, r5, pc}
 801c146:	bf00      	nop
 801c148:	200152ec 	.word	0x200152ec
 801c14c:	20000000 	.word	0x20000000
 801c150:	08017c7d 	.word	0x08017c7d
 801c154:	200000a0 	.word	0x200000a0
 801c158:	200152f0 	.word	0x200152f0
 801c15c:	08017c7b 	.word	0x08017c7b
 801c160:	200000a4 	.word	0x200000a4

0801c164 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801c164:	b510      	push	{r4, lr}
 801c166:	4604      	mov	r4, r0
 801c168:	f7ff ff88 	bl	801c07c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801c16c:	4620      	mov	r0, r4
 801c16e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c172:	f7ff bfbd 	b.w	801c0f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801c178 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801c178:	b538      	push	{r3, r4, r5, lr}
 801c17a:	4c15      	ldr	r4, [pc, #84]	@ (801c1d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801c17c:	7823      	ldrb	r3, [r4, #0]
 801c17e:	f3bf 8f5b 	dmb	ish
 801c182:	07da      	lsls	r2, r3, #31
 801c184:	4605      	mov	r5, r0
 801c186:	d40b      	bmi.n	801c1a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801c188:	4620      	mov	r0, r4
 801c18a:	f008 f958 	bl	802443e <__cxa_guard_acquire>
 801c18e:	b138      	cbz	r0, 801c1a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801c190:	4620      	mov	r0, r4
 801c192:	f008 f960 	bl	8024456 <__cxa_guard_release>
 801c196:	4a0f      	ldr	r2, [pc, #60]	@ (801c1d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801c198:	490f      	ldr	r1, [pc, #60]	@ (801c1d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801c19a:	4810      	ldr	r0, [pc, #64]	@ (801c1dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801c19c:	f008 f948 	bl	8024430 <__aeabi_atexit>
 801c1a0:	4c0f      	ldr	r4, [pc, #60]	@ (801c1e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801c1a2:	7823      	ldrb	r3, [r4, #0]
 801c1a4:	f3bf 8f5b 	dmb	ish
 801c1a8:	07db      	lsls	r3, r3, #31
 801c1aa:	d40b      	bmi.n	801c1c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801c1ac:	4620      	mov	r0, r4
 801c1ae:	f008 f946 	bl	802443e <__cxa_guard_acquire>
 801c1b2:	b138      	cbz	r0, 801c1c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801c1b4:	4620      	mov	r0, r4
 801c1b6:	f008 f94e 	bl	8024456 <__cxa_guard_release>
 801c1ba:	4a06      	ldr	r2, [pc, #24]	@ (801c1d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801c1bc:	4909      	ldr	r1, [pc, #36]	@ (801c1e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801c1be:	480a      	ldr	r0, [pc, #40]	@ (801c1e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801c1c0:	f008 f936 	bl	8024430 <__aeabi_atexit>
 801c1c4:	4b05      	ldr	r3, [pc, #20]	@ (801c1dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801c1c6:	676b      	str	r3, [r5, #116]	@ 0x74
 801c1c8:	4b07      	ldr	r3, [pc, #28]	@ (801c1e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801c1ca:	67ab      	str	r3, [r5, #120]	@ 0x78
 801c1cc:	bd38      	pop	{r3, r4, r5, pc}
 801c1ce:	bf00      	nop
 801c1d0:	200152e4 	.word	0x200152e4
 801c1d4:	20000000 	.word	0x20000000
 801c1d8:	08017c71 	.word	0x08017c71
 801c1dc:	20000098 	.word	0x20000098
 801c1e0:	200152e8 	.word	0x200152e8
 801c1e4:	08017c6f 	.word	0x08017c6f
 801c1e8:	2000009c 	.word	0x2000009c

0801c1ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801c1ec:	b538      	push	{r3, r4, r5, lr}
 801c1ee:	4c15      	ldr	r4, [pc, #84]	@ (801c244 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801c1f0:	7823      	ldrb	r3, [r4, #0]
 801c1f2:	f3bf 8f5b 	dmb	ish
 801c1f6:	07da      	lsls	r2, r3, #31
 801c1f8:	4605      	mov	r5, r0
 801c1fa:	d40b      	bmi.n	801c214 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801c1fc:	4620      	mov	r0, r4
 801c1fe:	f008 f91e 	bl	802443e <__cxa_guard_acquire>
 801c202:	b138      	cbz	r0, 801c214 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801c204:	4620      	mov	r0, r4
 801c206:	f008 f926 	bl	8024456 <__cxa_guard_release>
 801c20a:	4a0f      	ldr	r2, [pc, #60]	@ (801c248 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801c20c:	490f      	ldr	r1, [pc, #60]	@ (801c24c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801c20e:	4810      	ldr	r0, [pc, #64]	@ (801c250 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801c210:	f008 f90e 	bl	8024430 <__aeabi_atexit>
 801c214:	4c0f      	ldr	r4, [pc, #60]	@ (801c254 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801c216:	7823      	ldrb	r3, [r4, #0]
 801c218:	f3bf 8f5b 	dmb	ish
 801c21c:	07db      	lsls	r3, r3, #31
 801c21e:	d40b      	bmi.n	801c238 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801c220:	4620      	mov	r0, r4
 801c222:	f008 f90c 	bl	802443e <__cxa_guard_acquire>
 801c226:	b138      	cbz	r0, 801c238 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801c228:	4620      	mov	r0, r4
 801c22a:	f008 f914 	bl	8024456 <__cxa_guard_release>
 801c22e:	4a06      	ldr	r2, [pc, #24]	@ (801c248 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801c230:	4909      	ldr	r1, [pc, #36]	@ (801c258 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801c232:	480a      	ldr	r0, [pc, #40]	@ (801c25c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801c234:	f008 f8fc 	bl	8024430 <__aeabi_atexit>
 801c238:	4b05      	ldr	r3, [pc, #20]	@ (801c250 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801c23a:	66eb      	str	r3, [r5, #108]	@ 0x6c
 801c23c:	4b07      	ldr	r3, [pc, #28]	@ (801c25c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801c23e:	672b      	str	r3, [r5, #112]	@ 0x70
 801c240:	bd38      	pop	{r3, r4, r5, pc}
 801c242:	bf00      	nop
 801c244:	200152dc 	.word	0x200152dc
 801c248:	20000000 	.word	0x20000000
 801c24c:	08017c75 	.word	0x08017c75
 801c250:	20000090 	.word	0x20000090
 801c254:	200152e0 	.word	0x200152e0
 801c258:	08017c73 	.word	0x08017c73
 801c25c:	20000094 	.word	0x20000094

0801c260 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801c260:	b510      	push	{r4, lr}
 801c262:	4604      	mov	r4, r0
 801c264:	f7ff ff88 	bl	801c178 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801c268:	4620      	mov	r0, r4
 801c26a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c26e:	f7ff bfbd 	b.w	801c1ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801c272 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801c272:	b510      	push	{r4, lr}
 801c274:	4604      	mov	r4, r0
 801c276:	f7ff fff3 	bl	801c260 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801c27a:	4620      	mov	r0, r4
 801c27c:	f7ff ff72 	bl	801c164 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801c280:	4620      	mov	r0, r4
 801c282:	f7ff fdf9 	bl	801be78 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801c286:	4620      	mov	r0, r4
 801c288:	f7ff fcfa 	bl	801bc80 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801c28c:	4620      	mov	r0, r4
 801c28e:	f7ff fd75 	bl	801bd7c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801c292:	4620      	mov	r0, r4
 801c294:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c298:	f7ff bee0 	b.w	801c05c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801c29c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801c29c:	b538      	push	{r3, r4, r5, lr}
 801c29e:	4c0b      	ldr	r4, [pc, #44]	@ (801c2cc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801c2a0:	7823      	ldrb	r3, [r4, #0]
 801c2a2:	f3bf 8f5b 	dmb	ish
 801c2a6:	07db      	lsls	r3, r3, #31
 801c2a8:	4605      	mov	r5, r0
 801c2aa:	d40b      	bmi.n	801c2c4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801c2ac:	4620      	mov	r0, r4
 801c2ae:	f008 f8c6 	bl	802443e <__cxa_guard_acquire>
 801c2b2:	b138      	cbz	r0, 801c2c4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801c2b4:	4620      	mov	r0, r4
 801c2b6:	f008 f8ce 	bl	8024456 <__cxa_guard_release>
 801c2ba:	4a05      	ldr	r2, [pc, #20]	@ (801c2d0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801c2bc:	4905      	ldr	r1, [pc, #20]	@ (801c2d4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801c2be:	4806      	ldr	r0, [pc, #24]	@ (801c2d8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801c2c0:	f008 f8b6 	bl	8024430 <__aeabi_atexit>
 801c2c4:	4b04      	ldr	r3, [pc, #16]	@ (801c2d8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801c2c6:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801c2c8:	bd38      	pop	{r3, r4, r5, pc}
 801c2ca:	bf00      	nop
 801c2cc:	200152d0 	.word	0x200152d0
 801c2d0:	20000000 	.word	0x20000000
 801c2d4:	08017c6d 	.word	0x08017c6d
 801c2d8:	20000088 	.word	0x20000088

0801c2dc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801c2dc:	b538      	push	{r3, r4, r5, lr}
 801c2de:	4c0b      	ldr	r4, [pc, #44]	@ (801c30c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801c2e0:	7823      	ldrb	r3, [r4, #0]
 801c2e2:	f3bf 8f5b 	dmb	ish
 801c2e6:	07db      	lsls	r3, r3, #31
 801c2e8:	4605      	mov	r5, r0
 801c2ea:	d40b      	bmi.n	801c304 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801c2ec:	4620      	mov	r0, r4
 801c2ee:	f008 f8a6 	bl	802443e <__cxa_guard_acquire>
 801c2f2:	b138      	cbz	r0, 801c304 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801c2f4:	4620      	mov	r0, r4
 801c2f6:	f008 f8ae 	bl	8024456 <__cxa_guard_release>
 801c2fa:	4a05      	ldr	r2, [pc, #20]	@ (801c310 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801c2fc:	4905      	ldr	r1, [pc, #20]	@ (801c314 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801c2fe:	4806      	ldr	r0, [pc, #24]	@ (801c318 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801c300:	f008 f896 	bl	8024430 <__aeabi_atexit>
 801c304:	4b04      	ldr	r3, [pc, #16]	@ (801c318 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801c306:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 801c30a:	bd38      	pop	{r3, r4, r5, pc}
 801c30c:	200152d4 	.word	0x200152d4
 801c310:	20000000 	.word	0x20000000
 801c314:	08017c6b 	.word	0x08017c6b
 801c318:	2000008c 	.word	0x2000008c

0801c31c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801c31c:	b570      	push	{r4, r5, r6, lr}
 801c31e:	4d0d      	ldr	r5, [pc, #52]	@ (801c354 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801c320:	4c0d      	ldr	r4, [pc, #52]	@ (801c358 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801c322:	782b      	ldrb	r3, [r5, #0]
 801c324:	f3bf 8f5b 	dmb	ish
 801c328:	f013 0f01 	tst.w	r3, #1
 801c32c:	4606      	mov	r6, r0
 801c32e:	d10d      	bne.n	801c34c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801c330:	4628      	mov	r0, r5
 801c332:	f008 f884 	bl	802443e <__cxa_guard_acquire>
 801c336:	b148      	cbz	r0, 801c34c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801c338:	4b08      	ldr	r3, [pc, #32]	@ (801c35c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801c33a:	6023      	str	r3, [r4, #0]
 801c33c:	4628      	mov	r0, r5
 801c33e:	f008 f88a 	bl	8024456 <__cxa_guard_release>
 801c342:	4a07      	ldr	r2, [pc, #28]	@ (801c360 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801c344:	4907      	ldr	r1, [pc, #28]	@ (801c364 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801c346:	4620      	mov	r0, r4
 801c348:	f008 f872 	bl	8024430 <__aeabi_atexit>
 801c34c:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 801c350:	bd70      	pop	{r4, r5, r6, pc}
 801c352:	bf00      	nop
 801c354:	200152d8 	.word	0x200152d8
 801c358:	20015450 	.word	0x20015450
 801c35c:	0802867c 	.word	0x0802867c
 801c360:	20000000 	.word	0x20000000
 801c364:	08017c69 	.word	0x08017c69

0801c368 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801c368:	b510      	push	{r4, lr}
 801c36a:	4604      	mov	r4, r0
 801c36c:	f7ff ff96 	bl	801c29c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801c370:	4620      	mov	r0, r4
 801c372:	f7ff ffb3 	bl	801c2dc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801c376:	4620      	mov	r0, r4
 801c378:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c37c:	f7ff bfce 	b.w	801c31c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801c380 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 801c380:	b570      	push	{r4, r5, r6, lr}
 801c382:	4d0d      	ldr	r5, [pc, #52]	@ (801c3b8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 801c384:	4c0d      	ldr	r4, [pc, #52]	@ (801c3bc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 801c386:	782b      	ldrb	r3, [r5, #0]
 801c388:	f3bf 8f5b 	dmb	ish
 801c38c:	f013 0f01 	tst.w	r3, #1
 801c390:	4606      	mov	r6, r0
 801c392:	d10d      	bne.n	801c3b0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801c394:	4628      	mov	r0, r5
 801c396:	f008 f852 	bl	802443e <__cxa_guard_acquire>
 801c39a:	b148      	cbz	r0, 801c3b0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801c39c:	4b08      	ldr	r3, [pc, #32]	@ (801c3c0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 801c39e:	6023      	str	r3, [r4, #0]
 801c3a0:	4628      	mov	r0, r5
 801c3a2:	f008 f858 	bl	8024456 <__cxa_guard_release>
 801c3a6:	4a07      	ldr	r2, [pc, #28]	@ (801c3c4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 801c3a8:	4907      	ldr	r1, [pc, #28]	@ (801c3c8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 801c3aa:	4620      	mov	r0, r4
 801c3ac:	f008 f840 	bl	8024430 <__aeabi_atexit>
 801c3b0:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 801c3b4:	bd70      	pop	{r4, r5, r6, pc}
 801c3b6:	bf00      	nop
 801c3b8:	200152cc 	.word	0x200152cc
 801c3bc:	2001534c 	.word	0x2001534c
 801c3c0:	08028698 	.word	0x08028698
 801c3c4:	20000000 	.word	0x20000000
 801c3c8:	08017c67 	.word	0x08017c67

0801c3cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801c3cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c3d0:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 801c3d4:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 801c3d8:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 801c3dc:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 801c3e0:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 801c3e4:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 801c3e8:	8808      	ldrh	r0, [r1, #0]
 801c3ea:	fb05 4c0e 	mla	ip, r5, lr, r4
 801c3ee:	2d00      	cmp	r5, #0
 801c3f0:	eb02 0a0c 	add.w	sl, r2, ip
 801c3f4:	f2c0 80b0 	blt.w	801c558 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801c3f8:	45ab      	cmp	fp, r5
 801c3fa:	f340 80ad 	ble.w	801c558 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801c3fe:	2c00      	cmp	r4, #0
 801c400:	f2c0 80a8 	blt.w	801c554 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801c404:	45a6      	cmp	lr, r4
 801c406:	f340 80a5 	ble.w	801c554 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801c40a:	f812 200c 	ldrb.w	r2, [r2, ip]
 801c40e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801c412:	1c62      	adds	r2, r4, #1
 801c414:	f100 80a3 	bmi.w	801c55e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801c418:	4596      	cmp	lr, r2
 801c41a:	f340 80a0 	ble.w	801c55e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801c41e:	f1b9 0f00 	cmp.w	r9, #0
 801c422:	f000 809c 	beq.w	801c55e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801c426:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801c42a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801c42e:	3501      	adds	r5, #1
 801c430:	f100 8099 	bmi.w	801c566 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801c434:	45ab      	cmp	fp, r5
 801c436:	f340 8096 	ble.w	801c566 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801c43a:	2f00      	cmp	r7, #0
 801c43c:	f000 8093 	beq.w	801c566 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801c440:	2c00      	cmp	r4, #0
 801c442:	f2c0 808e 	blt.w	801c562 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801c446:	45a6      	cmp	lr, r4
 801c448:	f340 808b 	ble.w	801c562 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801c44c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801c450:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801c454:	3401      	adds	r4, #1
 801c456:	f100 8089 	bmi.w	801c56c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801c45a:	45a6      	cmp	lr, r4
 801c45c:	f340 8086 	ble.w	801c56c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801c460:	f1b9 0f00 	cmp.w	r9, #0
 801c464:	f000 8082 	beq.w	801c56c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801c468:	44d6      	add	lr, sl
 801c46a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801c46e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801c472:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801c476:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801c47a:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801c47e:	fb19 fe07 	smulbb	lr, r9, r7
 801c482:	ea44 0808 	orr.w	r8, r4, r8
 801c486:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801c48a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801c48e:	f1c7 0210 	rsb	r2, r7, #16
 801c492:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801c496:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801c49a:	ea44 0c0c 	orr.w	ip, r4, ip
 801c49e:	eba2 0209 	sub.w	r2, r2, r9
 801c4a2:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801c4a6:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801c4aa:	fb04 f40c 	mul.w	r4, r4, ip
 801c4ae:	fb02 4808 	mla	r8, r2, r8, r4
 801c4b2:	041a      	lsls	r2, r3, #16
 801c4b4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801c4b8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801c4bc:	4313      	orrs	r3, r2
 801c4be:	042a      	lsls	r2, r5, #16
 801c4c0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801c4c4:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801c4c8:	fb0e 8303 	mla	r3, lr, r3, r8
 801c4cc:	432a      	orrs	r2, r5
 801c4ce:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801c4d2:	fb07 3202 	mla	r2, r7, r2, r3
 801c4d6:	0d53      	lsrs	r3, r2, #21
 801c4d8:	0952      	lsrs	r2, r2, #5
 801c4da:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c4de:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c4e2:	431a      	orrs	r2, r3
 801c4e4:	b293      	uxth	r3, r2
 801c4e6:	b2b4      	uxth	r4, r6
 801c4e8:	1202      	asrs	r2, r0, #8
 801c4ea:	43f6      	mvns	r6, r6
 801c4ec:	b2f6      	uxtb	r6, r6
 801c4ee:	121d      	asrs	r5, r3, #8
 801c4f0:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801c4f4:	fb12 f206 	smulbb	r2, r2, r6
 801c4f8:	10c7      	asrs	r7, r0, #3
 801c4fa:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c4fe:	00c0      	lsls	r0, r0, #3
 801c500:	fb05 2504 	mla	r5, r5, r4, r2
 801c504:	b2c0      	uxtb	r0, r0
 801c506:	10da      	asrs	r2, r3, #3
 801c508:	00db      	lsls	r3, r3, #3
 801c50a:	b2db      	uxtb	r3, r3
 801c50c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801c510:	fb10 f006 	smulbb	r0, r0, r6
 801c514:	b2ad      	uxth	r5, r5
 801c516:	fb03 0004 	mla	r0, r3, r4, r0
 801c51a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801c51e:	fb17 f706 	smulbb	r7, r7, r6
 801c522:	b280      	uxth	r0, r0
 801c524:	1c6b      	adds	r3, r5, #1
 801c526:	fb02 7204 	mla	r2, r2, r4, r7
 801c52a:	b292      	uxth	r2, r2
 801c52c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c530:	1c43      	adds	r3, r0, #1
 801c532:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c536:	1c50      	adds	r0, r2, #1
 801c538:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801c53c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c540:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c544:	0952      	lsrs	r2, r2, #5
 801c546:	432b      	orrs	r3, r5
 801c548:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c54c:	4313      	orrs	r3, r2
 801c54e:	800b      	strh	r3, [r1, #0]
 801c550:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c554:	4680      	mov	r8, r0
 801c556:	e75c      	b.n	801c412 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801c558:	4684      	mov	ip, r0
 801c55a:	4680      	mov	r8, r0
 801c55c:	e767      	b.n	801c42e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801c55e:	4684      	mov	ip, r0
 801c560:	e765      	b.n	801c42e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801c562:	4605      	mov	r5, r0
 801c564:	e776      	b.n	801c454 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801c566:	4603      	mov	r3, r0
 801c568:	4605      	mov	r5, r0
 801c56a:	e782      	b.n	801c472 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801c56c:	4603      	mov	r3, r0
 801c56e:	e780      	b.n	801c472 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801c570 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c574:	b099      	sub	sp, #100	@ 0x64
 801c576:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 801c57a:	9215      	str	r2, [sp, #84]	@ 0x54
 801c57c:	9309      	str	r3, [sp, #36]	@ 0x24
 801c57e:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801c580:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801c584:	930d      	str	r3, [sp, #52]	@ 0x34
 801c586:	910c      	str	r1, [sp, #48]	@ 0x30
 801c588:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 801c58c:	9016      	str	r0, [sp, #88]	@ 0x58
 801c58e:	6850      	ldr	r0, [r2, #4]
 801c590:	6812      	ldr	r2, [r2, #0]
 801c592:	fb00 1303 	mla	r3, r0, r3, r1
 801c596:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801c59a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801c59c:	681b      	ldr	r3, [r3, #0]
 801c59e:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c5a0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801c5a2:	685e      	ldr	r6, [r3, #4]
 801c5a4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c5a6:	43db      	mvns	r3, r3
 801c5a8:	b2db      	uxtb	r3, r3
 801c5aa:	3604      	adds	r6, #4
 801c5ac:	930a      	str	r3, [sp, #40]	@ 0x28
 801c5ae:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c5b0:	2b00      	cmp	r3, #0
 801c5b2:	dc03      	bgt.n	801c5bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c5b4:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801c5b6:	2b00      	cmp	r3, #0
 801c5b8:	f340 8225 	ble.w	801ca06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801c5bc:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801c5be:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c5c2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c5c6:	1e48      	subs	r0, r1, #1
 801c5c8:	1e57      	subs	r7, r2, #1
 801c5ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c5cc:	2b00      	cmp	r3, #0
 801c5ce:	f340 80e3 	ble.w	801c798 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801c5d2:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801c5d6:	ea4f 4325 	mov.w	r3, r5, asr #16
 801c5da:	d406      	bmi.n	801c5ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c5dc:	4584      	cmp	ip, r0
 801c5de:	da04      	bge.n	801c5ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c5e0:	2b00      	cmp	r3, #0
 801c5e2:	db02      	blt.n	801c5ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c5e4:	42bb      	cmp	r3, r7
 801c5e6:	f2c0 80d8 	blt.w	801c79a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c5ea:	f11c 0c01 	adds.w	ip, ip, #1
 801c5ee:	f100 80c9 	bmi.w	801c784 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c5f2:	4561      	cmp	r1, ip
 801c5f4:	f2c0 80c6 	blt.w	801c784 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c5f8:	3301      	adds	r3, #1
 801c5fa:	f100 80c3 	bmi.w	801c784 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c5fe:	429a      	cmp	r2, r3
 801c600:	f2c0 80c0 	blt.w	801c784 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c604:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801c608:	4647      	mov	r7, r8
 801c60a:	f1bb 0f00 	cmp.w	fp, #0
 801c60e:	f340 80e3 	ble.w	801c7d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801c612:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801c614:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801c616:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801c61a:	689b      	ldr	r3, [r3, #8]
 801c61c:	ea5f 422a 	movs.w	r2, sl, asr #16
 801c620:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801c624:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801c628:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801c62c:	f100 8121 	bmi.w	801c872 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801c630:	f103 39ff 	add.w	r9, r3, #4294967295
 801c634:	454a      	cmp	r2, r9
 801c636:	f280 811c 	bge.w	801c872 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801c63a:	f1bc 0f00 	cmp.w	ip, #0
 801c63e:	f2c0 8118 	blt.w	801c872 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801c642:	f10e 39ff 	add.w	r9, lr, #4294967295
 801c646:	45cc      	cmp	ip, r9
 801c648:	f280 8113 	bge.w	801c872 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801c64c:	b21b      	sxth	r3, r3
 801c64e:	fb0c 2203 	mla	r2, ip, r3, r2
 801c652:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c654:	eb04 0902 	add.w	r9, r4, r2
 801c658:	5ca2      	ldrb	r2, [r4, r2]
 801c65a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801c65e:	2800      	cmp	r0, #0
 801c660:	f000 80fe 	beq.w	801c860 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c664:	f899 2001 	ldrb.w	r2, [r9, #1]
 801c668:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801c66c:	9211      	str	r2, [sp, #68]	@ 0x44
 801c66e:	b151      	cbz	r1, 801c686 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c670:	eb09 0203 	add.w	r2, r9, r3
 801c674:	f819 3003 	ldrb.w	r3, [r9, r3]
 801c678:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c67c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c67e:	7853      	ldrb	r3, [r2, #1]
 801c680:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c684:	9312      	str	r3, [sp, #72]	@ 0x48
 801c686:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801c688:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c68a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801c68e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801c692:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801c696:	ea4c 0c03 	orr.w	ip, ip, r3
 801c69a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801c69c:	041b      	lsls	r3, r3, #16
 801c69e:	fb10 f201 	smulbb	r2, r0, r1
 801c6a2:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801c6a6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801c6aa:	10d2      	asrs	r2, r2, #3
 801c6ac:	4323      	orrs	r3, r4
 801c6ae:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801c6b2:	4353      	muls	r3, r2
 801c6b4:	fb09 330c 	mla	r3, r9, ip, r3
 801c6b8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801c6bc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801c6c0:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801c6c4:	ea4c 0e0e 	orr.w	lr, ip, lr
 801c6c8:	f1c1 0c10 	rsb	ip, r1, #16
 801c6cc:	ebac 0c00 	sub.w	ip, ip, r0
 801c6d0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801c6d4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801c6d8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801c6da:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801c6dc:	0418      	lsls	r0, r3, #16
 801c6de:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801c6e2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801c6e6:	4318      	orrs	r0, r3
 801c6e8:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801c6ec:	fb02 c200 	mla	r2, r2, r0, ip
 801c6f0:	0d53      	lsrs	r3, r2, #21
 801c6f2:	0952      	lsrs	r2, r2, #5
 801c6f4:	8838      	ldrh	r0, [r7, #0]
 801c6f6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c6fa:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c6fe:	431a      	orrs	r2, r3
 801c700:	b292      	uxth	r2, r2
 801c702:	1201      	asrs	r1, r0, #8
 801c704:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 801c708:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801c70c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801c710:	fb11 f104 	smulbb	r1, r1, r4
 801c714:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801c718:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801c71c:	00c0      	lsls	r0, r0, #3
 801c71e:	fb0c 1c03 	mla	ip, ip, r3, r1
 801c722:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801c726:	10d1      	asrs	r1, r2, #3
 801c728:	b2c0      	uxtb	r0, r0
 801c72a:	00d2      	lsls	r2, r2, #3
 801c72c:	b2d2      	uxtb	r2, r2
 801c72e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801c732:	fb1e fe04 	smulbb	lr, lr, r4
 801c736:	fb10 f004 	smulbb	r0, r0, r4
 801c73a:	fa1f fc8c 	uxth.w	ip, ip
 801c73e:	fb01 e103 	mla	r1, r1, r3, lr
 801c742:	fb02 0303 	mla	r3, r2, r3, r0
 801c746:	b29a      	uxth	r2, r3
 801c748:	f10c 0301 	add.w	r3, ip, #1
 801c74c:	b289      	uxth	r1, r1
 801c74e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801c752:	1c53      	adds	r3, r2, #1
 801c754:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c758:	1c4a      	adds	r2, r1, #1
 801c75a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c75e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801c762:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c766:	0949      	lsrs	r1, r1, #5
 801c768:	ea43 030c 	orr.w	r3, r3, ip
 801c76c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c770:	430b      	orrs	r3, r1
 801c772:	803b      	strh	r3, [r7, #0]
 801c774:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c776:	449a      	add	sl, r3
 801c778:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801c77a:	3702      	adds	r7, #2
 801c77c:	441d      	add	r5, r3
 801c77e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c782:	e742      	b.n	801c60a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c784:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c786:	449a      	add	sl, r3
 801c788:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801c78a:	441d      	add	r5, r3
 801c78c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c78e:	3b01      	subs	r3, #1
 801c790:	9309      	str	r3, [sp, #36]	@ 0x24
 801c792:	f108 0802 	add.w	r8, r8, #2
 801c796:	e718      	b.n	801c5ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801c798:	d023      	beq.n	801c7e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801c79a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c79c:	9825      	ldr	r0, [sp, #148]	@ 0x94
 801c79e:	3b01      	subs	r3, #1
 801c7a0:	fb00 a003 	mla	r0, r0, r3, sl
 801c7a4:	1400      	asrs	r0, r0, #16
 801c7a6:	f53f af2d 	bmi.w	801c604 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c7aa:	3901      	subs	r1, #1
 801c7ac:	4288      	cmp	r0, r1
 801c7ae:	f6bf af29 	bge.w	801c604 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c7b2:	9926      	ldr	r1, [sp, #152]	@ 0x98
 801c7b4:	fb01 5303 	mla	r3, r1, r3, r5
 801c7b8:	141b      	asrs	r3, r3, #16
 801c7ba:	f53f af23 	bmi.w	801c604 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c7be:	3a01      	subs	r2, #1
 801c7c0:	4293      	cmp	r3, r2
 801c7c2:	f6bf af1f 	bge.w	801c604 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c7c6:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801c7ca:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 801c7ce:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801c7d2:	f1be 0f00 	cmp.w	lr, #0
 801c7d6:	dc6c      	bgt.n	801c8b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801c7d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c7da:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c7de:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801c7e2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c7e4:	2b00      	cmp	r3, #0
 801c7e6:	f340 810e 	ble.w	801ca06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801c7ea:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c7ee:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c7f2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c7f6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c7f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c7fc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c800:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c804:	eef0 6a62 	vmov.f32	s13, s5
 801c808:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c80c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c810:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c814:	ee16 aa90 	vmov	sl, s13
 801c818:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c81c:	eef0 6a43 	vmov.f32	s13, s6
 801c820:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c824:	ee12 2a90 	vmov	r2, s5
 801c828:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c82c:	fb92 f3f3 	sdiv	r3, r2, r3
 801c830:	ee13 2a10 	vmov	r2, s6
 801c834:	9325      	str	r3, [sp, #148]	@ 0x94
 801c836:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c838:	fb92 f3f3 	sdiv	r3, r2, r3
 801c83c:	9326      	str	r3, [sp, #152]	@ 0x98
 801c83e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c840:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801c842:	3b01      	subs	r3, #1
 801c844:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c848:	930c      	str	r3, [sp, #48]	@ 0x30
 801c84a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c84c:	bf08      	it	eq
 801c84e:	4613      	moveq	r3, r2
 801c850:	ee16 5a90 	vmov	r5, s13
 801c854:	9309      	str	r3, [sp, #36]	@ 0x24
 801c856:	eeb0 3a67 	vmov.f32	s6, s15
 801c85a:	eef0 2a47 	vmov.f32	s5, s14
 801c85e:	e6a6      	b.n	801c5ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c860:	2900      	cmp	r1, #0
 801c862:	f43f af10 	beq.w	801c686 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c866:	f819 3003 	ldrb.w	r3, [r9, r3]
 801c86a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c86e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c870:	e709      	b.n	801c686 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c872:	f112 0901 	adds.w	r9, r2, #1
 801c876:	f53f af7d 	bmi.w	801c774 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c87a:	454b      	cmp	r3, r9
 801c87c:	f6ff af7a 	blt.w	801c774 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c880:	f11c 0901 	adds.w	r9, ip, #1
 801c884:	f53f af76 	bmi.w	801c774 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c888:	45ce      	cmp	lr, r9
 801c88a:	f6ff af73 	blt.w	801c774 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c88e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c890:	9202      	str	r2, [sp, #8]
 801c892:	b21b      	sxth	r3, r3
 801c894:	fa0f f28e 	sxth.w	r2, lr
 801c898:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801c89c:	e9cd c003 	strd	ip, r0, [sp, #12]
 801c8a0:	9201      	str	r2, [sp, #4]
 801c8a2:	9300      	str	r3, [sp, #0]
 801c8a4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801c8a6:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801c8a8:	4633      	mov	r3, r6
 801c8aa:	4639      	mov	r1, r7
 801c8ac:	f7ff fd8e 	bl	801c3cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801c8b0:	e760      	b.n	801c774 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c8b2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801c8b4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c8b6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801c8ba:	ea4f 422a 	mov.w	r2, sl, asr #16
 801c8be:	1429      	asrs	r1, r5, #16
 801c8c0:	fb03 2101 	mla	r1, r3, r1, r2
 801c8c4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801c8c6:	440a      	add	r2, r1
 801c8c8:	5c61      	ldrb	r1, [r4, r1]
 801c8ca:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801c8ce:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c8d2:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801c8d6:	f1bc 0f00 	cmp.w	ip, #0
 801c8da:	f000 808c 	beq.w	801c9f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801c8de:	7857      	ldrb	r7, [r2, #1]
 801c8e0:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801c8e4:	9413      	str	r4, [sp, #76]	@ 0x4c
 801c8e6:	b140      	cbz	r0, 801c8fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c8e8:	18d7      	adds	r7, r2, r3
 801c8ea:	5cd3      	ldrb	r3, [r2, r3]
 801c8ec:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c8f0:	9310      	str	r3, [sp, #64]	@ 0x40
 801c8f2:	787b      	ldrb	r3, [r7, #1]
 801c8f4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c8f8:	9314      	str	r3, [sp, #80]	@ 0x50
 801c8fa:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801c8fc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c8fe:	fb1c f200 	smulbb	r2, ip, r0
 801c902:	041f      	lsls	r7, r3, #16
 801c904:	10d2      	asrs	r2, r2, #3
 801c906:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801c90a:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801c90e:	431f      	orrs	r7, r3
 801c910:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801c914:	9317      	str	r3, [sp, #92]	@ 0x5c
 801c916:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801c918:	041b      	lsls	r3, r3, #16
 801c91a:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801c91e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801c922:	ea43 030b 	orr.w	r3, r3, fp
 801c926:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801c928:	4353      	muls	r3, r2
 801c92a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801c92e:	fb04 3707 	mla	r7, r4, r7, r3
 801c932:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801c936:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801c93a:	ea43 0b01 	orr.w	fp, r3, r1
 801c93e:	f1c0 0110 	rsb	r1, r0, #16
 801c942:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c944:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801c946:	eba1 0c0c 	sub.w	ip, r1, ip
 801c94a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801c94e:	fb0c 770b 	mla	r7, ip, fp, r7
 801c952:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801c956:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801c95a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801c95e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801c962:	ea4c 0c0b 	orr.w	ip, ip, fp
 801c966:	fb02 770c 	mla	r7, r2, ip, r7
 801c96a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801c96c:	0d79      	lsrs	r1, r7, #21
 801c96e:	097f      	lsrs	r7, r7, #5
 801c970:	8812      	ldrh	r2, [r2, #0]
 801c972:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c976:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801c97a:	430f      	orrs	r7, r1
 801c97c:	b2bb      	uxth	r3, r7
 801c97e:	1211      	asrs	r1, r2, #8
 801c980:	1218      	asrs	r0, r3, #8
 801c982:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801c986:	fb11 f104 	smulbb	r1, r1, r4
 801c98a:	10d7      	asrs	r7, r2, #3
 801c98c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801c990:	00d2      	lsls	r2, r2, #3
 801c992:	fb00 1009 	mla	r0, r0, r9, r1
 801c996:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801c99a:	10d9      	asrs	r1, r3, #3
 801c99c:	b2d2      	uxtb	r2, r2
 801c99e:	00db      	lsls	r3, r3, #3
 801c9a0:	fb17 f704 	smulbb	r7, r7, r4
 801c9a4:	fb12 f204 	smulbb	r2, r2, r4
 801c9a8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801c9ac:	b2db      	uxtb	r3, r3
 801c9ae:	b280      	uxth	r0, r0
 801c9b0:	fb01 7109 	mla	r1, r1, r9, r7
 801c9b4:	fb03 2309 	mla	r3, r3, r9, r2
 801c9b8:	b29b      	uxth	r3, r3
 801c9ba:	b289      	uxth	r1, r1
 801c9bc:	1c42      	adds	r2, r0, #1
 801c9be:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c9c2:	1c4f      	adds	r7, r1, #1
 801c9c4:	1c5a      	adds	r2, r3, #1
 801c9c6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801c9ca:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801c9ce:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801c9d2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c9d6:	0949      	lsrs	r1, r1, #5
 801c9d8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c9da:	4310      	orrs	r0, r2
 801c9dc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c9e0:	4308      	orrs	r0, r1
 801c9e2:	f823 0b02 	strh.w	r0, [r3], #2
 801c9e6:	930e      	str	r3, [sp, #56]	@ 0x38
 801c9e8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c9ea:	449a      	add	sl, r3
 801c9ec:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801c9ee:	f10e 3eff 	add.w	lr, lr, #4294967295
 801c9f2:	441d      	add	r5, r3
 801c9f4:	e6ed      	b.n	801c7d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801c9f6:	2800      	cmp	r0, #0
 801c9f8:	f43f af7f 	beq.w	801c8fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c9fc:	5cd3      	ldrb	r3, [r2, r3]
 801c9fe:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ca02:	9310      	str	r3, [sp, #64]	@ 0x40
 801ca04:	e779      	b.n	801c8fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ca06:	b019      	add	sp, #100	@ 0x64
 801ca08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ca0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801ca0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ca10:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801ca14:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801ca18:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801ca1c:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801ca20:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801ca24:	8808      	ldrh	r0, [r1, #0]
 801ca26:	fb08 470e 	mla	r7, r8, lr, r4
 801ca2a:	f1b8 0f00 	cmp.w	r8, #0
 801ca2e:	eb02 0907 	add.w	r9, r2, r7
 801ca32:	db67      	blt.n	801cb04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801ca34:	45c2      	cmp	sl, r8
 801ca36:	dd65      	ble.n	801cb04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801ca38:	2c00      	cmp	r4, #0
 801ca3a:	db61      	blt.n	801cb00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801ca3c:	45a6      	cmp	lr, r4
 801ca3e:	dd5f      	ble.n	801cb00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801ca40:	5dd2      	ldrb	r2, [r2, r7]
 801ca42:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801ca46:	1c62      	adds	r2, r4, #1
 801ca48:	d45f      	bmi.n	801cb0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ca4a:	4596      	cmp	lr, r2
 801ca4c:	dd5d      	ble.n	801cb0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ca4e:	2d00      	cmp	r5, #0
 801ca50:	d05b      	beq.n	801cb0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ca52:	f899 2001 	ldrb.w	r2, [r9, #1]
 801ca56:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801ca5a:	f118 0801 	adds.w	r8, r8, #1
 801ca5e:	d458      	bmi.n	801cb12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ca60:	45c2      	cmp	sl, r8
 801ca62:	dd56      	ble.n	801cb12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ca64:	2e00      	cmp	r6, #0
 801ca66:	d054      	beq.n	801cb12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ca68:	2c00      	cmp	r4, #0
 801ca6a:	db50      	blt.n	801cb0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ca6c:	45a6      	cmp	lr, r4
 801ca6e:	dd4e      	ble.n	801cb0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ca70:	f819 200e 	ldrb.w	r2, [r9, lr]
 801ca74:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801ca78:	3401      	adds	r4, #1
 801ca7a:	d407      	bmi.n	801ca8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ca7c:	45a6      	cmp	lr, r4
 801ca7e:	dd05      	ble.n	801ca8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ca80:	b125      	cbz	r5, 801ca8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ca82:	44ce      	add	lr, r9
 801ca84:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801ca88:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801ca8c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801ca90:	fb15 f406 	smulbb	r4, r5, r6
 801ca94:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ca98:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801ca9c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801caa0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801caa4:	ea43 0c0c 	orr.w	ip, r3, ip
 801caa8:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801caac:	f1c6 0310 	rsb	r3, r6, #16
 801cab0:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801cab4:	1b5b      	subs	r3, r3, r5
 801cab6:	ea4e 0707 	orr.w	r7, lr, r7
 801caba:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801cabe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801cac2:	437d      	muls	r5, r7
 801cac4:	fb03 5c0c 	mla	ip, r3, ip, r5
 801cac8:	0403      	lsls	r3, r0, #16
 801caca:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801cace:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801cad2:	4318      	orrs	r0, r3
 801cad4:	0413      	lsls	r3, r2, #16
 801cad6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801cada:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801cade:	4313      	orrs	r3, r2
 801cae0:	fb04 c000 	mla	r0, r4, r0, ip
 801cae4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801cae8:	fb06 0003 	mla	r0, r6, r3, r0
 801caec:	0d43      	lsrs	r3, r0, #21
 801caee:	0940      	lsrs	r0, r0, #5
 801caf0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801caf4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801caf8:	4318      	orrs	r0, r3
 801cafa:	8008      	strh	r0, [r1, #0]
 801cafc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cb00:	4684      	mov	ip, r0
 801cb02:	e7a0      	b.n	801ca46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801cb04:	4607      	mov	r7, r0
 801cb06:	4684      	mov	ip, r0
 801cb08:	e7a7      	b.n	801ca5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801cb0a:	4607      	mov	r7, r0
 801cb0c:	e7a5      	b.n	801ca5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801cb0e:	4602      	mov	r2, r0
 801cb10:	e7b2      	b.n	801ca78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801cb12:	4602      	mov	r2, r0
 801cb14:	e7ba      	b.n	801ca8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801cb16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cb16:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cb1a:	b093      	sub	sp, #76	@ 0x4c
 801cb1c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801cb20:	920f      	str	r2, [sp, #60]	@ 0x3c
 801cb22:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801cb24:	9108      	str	r1, [sp, #32]
 801cb26:	9306      	str	r3, [sp, #24]
 801cb28:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801cb2c:	9010      	str	r0, [sp, #64]	@ 0x40
 801cb2e:	6850      	ldr	r0, [r2, #4]
 801cb30:	6812      	ldr	r2, [r2, #0]
 801cb32:	fb00 1303 	mla	r3, r0, r3, r1
 801cb36:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801cb3a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cb3c:	681b      	ldr	r3, [r3, #0]
 801cb3e:	9307      	str	r3, [sp, #28]
 801cb40:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cb42:	685f      	ldr	r7, [r3, #4]
 801cb44:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801cb48:	3704      	adds	r7, #4
 801cb4a:	9b08      	ldr	r3, [sp, #32]
 801cb4c:	2b00      	cmp	r3, #0
 801cb4e:	dc03      	bgt.n	801cb58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801cb50:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801cb52:	2b00      	cmp	r3, #0
 801cb54:	f340 81b2 	ble.w	801cebc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801cb58:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cb5a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cb5e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cb62:	1e48      	subs	r0, r1, #1
 801cb64:	f102 3cff 	add.w	ip, r2, #4294967295
 801cb68:	9b06      	ldr	r3, [sp, #24]
 801cb6a:	2b00      	cmp	r3, #0
 801cb6c:	f340 80a9 	ble.w	801ccc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801cb70:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801cb74:	ea4f 4326 	mov.w	r3, r6, asr #16
 801cb78:	d406      	bmi.n	801cb88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cb7a:	4586      	cmp	lr, r0
 801cb7c:	da04      	bge.n	801cb88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cb7e:	2b00      	cmp	r3, #0
 801cb80:	db02      	blt.n	801cb88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cb82:	4563      	cmp	r3, ip
 801cb84:	f2c0 809e 	blt.w	801ccc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801cb88:	f11e 0e01 	adds.w	lr, lr, #1
 801cb8c:	f100 808f 	bmi.w	801ccae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cb90:	4571      	cmp	r1, lr
 801cb92:	f2c0 808c 	blt.w	801ccae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cb96:	3301      	adds	r3, #1
 801cb98:	f100 8089 	bmi.w	801ccae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cb9c:	429a      	cmp	r2, r3
 801cb9e:	f2c0 8086 	blt.w	801ccae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cba2:	f8dd b018 	ldr.w	fp, [sp, #24]
 801cba6:	46c8      	mov	r8, r9
 801cba8:	f1bb 0f00 	cmp.w	fp, #0
 801cbac:	f340 80a6 	ble.w	801ccfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801cbb0:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801cbb2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cbb4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801cbb8:	689b      	ldr	r3, [r3, #8]
 801cbba:	1422      	asrs	r2, r4, #16
 801cbbc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801cbc0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801cbc4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801cbc8:	f100 80e3 	bmi.w	801cd92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801cbcc:	f103 3aff 	add.w	sl, r3, #4294967295
 801cbd0:	4552      	cmp	r2, sl
 801cbd2:	f280 80de 	bge.w	801cd92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801cbd6:	f1bc 0f00 	cmp.w	ip, #0
 801cbda:	f2c0 80da 	blt.w	801cd92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801cbde:	f10e 3aff 	add.w	sl, lr, #4294967295
 801cbe2:	45d4      	cmp	ip, sl
 801cbe4:	f280 80d5 	bge.w	801cd92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801cbe8:	b21b      	sxth	r3, r3
 801cbea:	fb0c 2203 	mla	r2, ip, r3, r2
 801cbee:	9d07      	ldr	r5, [sp, #28]
 801cbf0:	eb05 0a02 	add.w	sl, r5, r2
 801cbf4:	5caa      	ldrb	r2, [r5, r2]
 801cbf6:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801cbfa:	2800      	cmp	r0, #0
 801cbfc:	f000 80c0 	beq.w	801cd80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801cc00:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801cc04:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801cc08:	920b      	str	r2, [sp, #44]	@ 0x2c
 801cc0a:	b151      	cbz	r1, 801cc22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801cc0c:	eb0a 0203 	add.w	r2, sl, r3
 801cc10:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801cc14:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801cc18:	9309      	str	r3, [sp, #36]	@ 0x24
 801cc1a:	7853      	ldrb	r3, [r2, #1]
 801cc1c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801cc20:	930c      	str	r3, [sp, #48]	@ 0x30
 801cc22:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801cc24:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801cc26:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801cc2a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801cc2e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801cc32:	ea4c 0c03 	orr.w	ip, ip, r3
 801cc36:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801cc38:	041b      	lsls	r3, r3, #16
 801cc3a:	fb10 f201 	smulbb	r2, r0, r1
 801cc3e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801cc42:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801cc46:	10d2      	asrs	r2, r2, #3
 801cc48:	432b      	orrs	r3, r5
 801cc4a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801cc4e:	4353      	muls	r3, r2
 801cc50:	fb0a 330c 	mla	r3, sl, ip, r3
 801cc54:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801cc58:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801cc5c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801cc60:	ea4c 0e0e 	orr.w	lr, ip, lr
 801cc64:	f1c1 0c10 	rsb	ip, r1, #16
 801cc68:	ebac 0c00 	sub.w	ip, ip, r0
 801cc6c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801cc70:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801cc74:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cc76:	0418      	lsls	r0, r3, #16
 801cc78:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801cc7c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801cc80:	4318      	orrs	r0, r3
 801cc82:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801cc86:	fb02 c200 	mla	r2, r2, r0, ip
 801cc8a:	0d53      	lsrs	r3, r2, #21
 801cc8c:	0952      	lsrs	r2, r2, #5
 801cc8e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cc92:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801cc96:	431a      	orrs	r2, r3
 801cc98:	f8a8 2000 	strh.w	r2, [r8]
 801cc9c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801cc9e:	441c      	add	r4, r3
 801cca0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cca2:	f108 0802 	add.w	r8, r8, #2
 801cca6:	441e      	add	r6, r3
 801cca8:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ccac:	e77c      	b.n	801cba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ccae:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ccb0:	441c      	add	r4, r3
 801ccb2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ccb4:	441e      	add	r6, r3
 801ccb6:	9b06      	ldr	r3, [sp, #24]
 801ccb8:	3b01      	subs	r3, #1
 801ccba:	9306      	str	r3, [sp, #24]
 801ccbc:	f109 0902 	add.w	r9, r9, #2
 801ccc0:	e752      	b.n	801cb68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ccc2:	d020      	beq.n	801cd06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ccc4:	9b06      	ldr	r3, [sp, #24]
 801ccc6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801ccc8:	3b01      	subs	r3, #1
 801ccca:	fb00 4003 	mla	r0, r0, r3, r4
 801ccce:	1400      	asrs	r0, r0, #16
 801ccd0:	f53f af67 	bmi.w	801cba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ccd4:	3901      	subs	r1, #1
 801ccd6:	4288      	cmp	r0, r1
 801ccd8:	f6bf af63 	bge.w	801cba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ccdc:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801ccde:	fb01 6303 	mla	r3, r1, r3, r6
 801cce2:	141b      	asrs	r3, r3, #16
 801cce4:	f53f af5d 	bmi.w	801cba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801cce8:	3a01      	subs	r2, #1
 801ccea:	4293      	cmp	r3, r2
 801ccec:	f6bf af59 	bge.w	801cba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ccf0:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801ccf4:	46ca      	mov	sl, r9
 801ccf6:	f1b8 0f00 	cmp.w	r8, #0
 801ccfa:	dc67      	bgt.n	801cdcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801ccfc:	9b06      	ldr	r3, [sp, #24]
 801ccfe:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801cd02:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801cd06:	9b08      	ldr	r3, [sp, #32]
 801cd08:	2b00      	cmp	r3, #0
 801cd0a:	f340 80d7 	ble.w	801cebc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801cd0e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cd12:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cd16:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801cd1a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801cd1c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cd20:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cd24:	eeb0 6a62 	vmov.f32	s12, s5
 801cd28:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cd2c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cd30:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cd34:	ee16 4a10 	vmov	r4, s12
 801cd38:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cd3c:	eeb0 6a43 	vmov.f32	s12, s6
 801cd40:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cd44:	ee12 2a90 	vmov	r2, s5
 801cd48:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cd4c:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd50:	ee13 2a10 	vmov	r2, s6
 801cd54:	931f      	str	r3, [sp, #124]	@ 0x7c
 801cd56:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801cd58:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd5c:	9320      	str	r3, [sp, #128]	@ 0x80
 801cd5e:	9b08      	ldr	r3, [sp, #32]
 801cd60:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801cd62:	3b01      	subs	r3, #1
 801cd64:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cd68:	9308      	str	r3, [sp, #32]
 801cd6a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801cd6c:	bf08      	it	eq
 801cd6e:	4613      	moveq	r3, r2
 801cd70:	ee16 6a10 	vmov	r6, s12
 801cd74:	9306      	str	r3, [sp, #24]
 801cd76:	eeb0 3a67 	vmov.f32	s6, s15
 801cd7a:	eef0 2a47 	vmov.f32	s5, s14
 801cd7e:	e6e4      	b.n	801cb4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801cd80:	2900      	cmp	r1, #0
 801cd82:	f43f af4e 	beq.w	801cc22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801cd86:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801cd8a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801cd8e:	9309      	str	r3, [sp, #36]	@ 0x24
 801cd90:	e747      	b.n	801cc22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801cd92:	f112 0a01 	adds.w	sl, r2, #1
 801cd96:	d481      	bmi.n	801cc9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cd98:	4553      	cmp	r3, sl
 801cd9a:	f6ff af7f 	blt.w	801cc9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cd9e:	f11c 0a01 	adds.w	sl, ip, #1
 801cda2:	f53f af7b 	bmi.w	801cc9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cda6:	45d6      	cmp	lr, sl
 801cda8:	f6ff af78 	blt.w	801cc9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cdac:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801cdb0:	b21b      	sxth	r3, r3
 801cdb2:	fa0f f28e 	sxth.w	r2, lr
 801cdb6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801cdba:	9201      	str	r2, [sp, #4]
 801cdbc:	9300      	str	r3, [sp, #0]
 801cdbe:	9a07      	ldr	r2, [sp, #28]
 801cdc0:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801cdc2:	463b      	mov	r3, r7
 801cdc4:	4641      	mov	r1, r8
 801cdc6:	f7ff fe21 	bl	801ca0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801cdca:	e767      	b.n	801cc9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cdcc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cdce:	9d07      	ldr	r5, [sp, #28]
 801cdd0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801cdd4:	1422      	asrs	r2, r4, #16
 801cdd6:	1431      	asrs	r1, r6, #16
 801cdd8:	fb03 2101 	mla	r1, r3, r1, r2
 801cddc:	9a07      	ldr	r2, [sp, #28]
 801cdde:	440a      	add	r2, r1
 801cde0:	5c69      	ldrb	r1, [r5, r1]
 801cde2:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801cde6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801cdea:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801cdee:	f1be 0f00 	cmp.w	lr, #0
 801cdf2:	d05c      	beq.n	801ceae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801cdf4:	f892 c001 	ldrb.w	ip, [r2, #1]
 801cdf8:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801cdfc:	950d      	str	r5, [sp, #52]	@ 0x34
 801cdfe:	b150      	cbz	r0, 801ce16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ce00:	eb02 0c03 	add.w	ip, r2, r3
 801ce04:	5cd3      	ldrb	r3, [r2, r3]
 801ce06:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ce0a:	930a      	str	r3, [sp, #40]	@ 0x28
 801ce0c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801ce10:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ce14:	930e      	str	r3, [sp, #56]	@ 0x38
 801ce16:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ce18:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ce1a:	fb1e f200 	smulbb	r2, lr, r0
 801ce1e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ce22:	10d2      	asrs	r2, r2, #3
 801ce24:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ce28:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ce2c:	ea4c 0c03 	orr.w	ip, ip, r3
 801ce30:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801ce34:	9311      	str	r3, [sp, #68]	@ 0x44
 801ce36:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ce38:	041b      	lsls	r3, r3, #16
 801ce3a:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801ce3e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ce42:	ea43 030b 	orr.w	r3, r3, fp
 801ce46:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801ce48:	4353      	muls	r3, r2
 801ce4a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ce4e:	fb05 3c0c 	mla	ip, r5, ip, r3
 801ce52:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801ce56:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801ce5a:	ea43 0b01 	orr.w	fp, r3, r1
 801ce5e:	f1c0 0110 	rsb	r1, r0, #16
 801ce62:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ce64:	eba1 0e0e 	sub.w	lr, r1, lr
 801ce68:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801ce6c:	fb0e cc0b 	mla	ip, lr, fp, ip
 801ce70:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801ce74:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801ce78:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ce7c:	ea4b 0e0e 	orr.w	lr, fp, lr
 801ce80:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801ce84:	fb02 cc0e 	mla	ip, r2, lr, ip
 801ce88:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801ce8c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ce90:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ce94:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801ce98:	ea43 0c0c 	orr.w	ip, r3, ip
 801ce9c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ce9e:	f82a cb02 	strh.w	ip, [sl], #2
 801cea2:	441c      	add	r4, r3
 801cea4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cea6:	f108 38ff 	add.w	r8, r8, #4294967295
 801ceaa:	441e      	add	r6, r3
 801ceac:	e723      	b.n	801ccf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801ceae:	2800      	cmp	r0, #0
 801ceb0:	d0b1      	beq.n	801ce16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ceb2:	5cd3      	ldrb	r3, [r2, r3]
 801ceb4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ceb8:	930a      	str	r3, [sp, #40]	@ 0x28
 801ceba:	e7ac      	b.n	801ce16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801cebc:	b013      	add	sp, #76	@ 0x4c
 801cebe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cec2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801cec2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cec6:	880d      	ldrh	r5, [r1, #0]
 801cec8:	b087      	sub	sp, #28
 801ceca:	10ef      	asrs	r7, r5, #3
 801cecc:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801ced0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ced4:	00ed      	lsls	r5, r5, #3
 801ced6:	9701      	str	r7, [sp, #4]
 801ced8:	b2ed      	uxtb	r5, r5
 801ceda:	9502      	str	r5, [sp, #8]
 801cedc:	9d01      	ldr	r5, [sp, #4]
 801cede:	9103      	str	r1, [sp, #12]
 801cee0:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801cee4:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801cee8:	9902      	ldr	r1, [sp, #8]
 801ceea:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801ceee:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801cef2:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801cef6:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801cefa:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801cefe:	022d      	lsls	r5, r5, #8
 801cf00:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801cf04:	fb06 0709 	mla	r7, r6, r9, r0
 801cf08:	430d      	orrs	r5, r1
 801cf0a:	2e00      	cmp	r6, #0
 801cf0c:	eb02 0c07 	add.w	ip, r2, r7
 801cf10:	9505      	str	r5, [sp, #20]
 801cf12:	f2c0 80b6 	blt.w	801d082 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801cf16:	45b3      	cmp	fp, r6
 801cf18:	f340 80b3 	ble.w	801d082 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801cf1c:	2800      	cmp	r0, #0
 801cf1e:	f2c0 80ae 	blt.w	801d07e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801cf22:	4581      	cmp	r9, r0
 801cf24:	f340 80ab 	ble.w	801d07e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801cf28:	5dd7      	ldrb	r7, [r2, r7]
 801cf2a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801cf2e:	441f      	add	r7, r3
 801cf30:	1c42      	adds	r2, r0, #1
 801cf32:	f100 80a9 	bmi.w	801d088 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801cf36:	4591      	cmp	r9, r2
 801cf38:	f340 80a6 	ble.w	801d088 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801cf3c:	2c00      	cmp	r4, #0
 801cf3e:	f000 80a3 	beq.w	801d088 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801cf42:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801cf46:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801cf4a:	441d      	add	r5, r3
 801cf4c:	3601      	adds	r6, #1
 801cf4e:	f100 809f 	bmi.w	801d090 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801cf52:	45b3      	cmp	fp, r6
 801cf54:	f340 809c 	ble.w	801d090 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801cf58:	f1be 0f00 	cmp.w	lr, #0
 801cf5c:	f000 8098 	beq.w	801d090 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801cf60:	2800      	cmp	r0, #0
 801cf62:	f2c0 8093 	blt.w	801d08c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801cf66:	4581      	cmp	r9, r0
 801cf68:	f340 8090 	ble.w	801d08c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801cf6c:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801cf70:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801cf74:	441e      	add	r6, r3
 801cf76:	3001      	adds	r0, #1
 801cf78:	f100 808d 	bmi.w	801d096 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801cf7c:	4581      	cmp	r9, r0
 801cf7e:	f340 808a 	ble.w	801d096 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801cf82:	2c00      	cmp	r4, #0
 801cf84:	f000 8087 	beq.w	801d096 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801cf88:	44e1      	add	r9, ip
 801cf8a:	f899 2001 	ldrb.w	r2, [r9, #1]
 801cf8e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801cf92:	4413      	add	r3, r2
 801cf94:	b2a4      	uxth	r4, r4
 801cf96:	fa1f fe8e 	uxth.w	lr, lr
 801cf9a:	fb04 fb0e 	mul.w	fp, r4, lr
 801cf9e:	0124      	lsls	r4, r4, #4
 801cfa0:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801cfa4:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801cfa8:	eba4 040b 	sub.w	r4, r4, fp
 801cfac:	fa1f f08e 	uxth.w	r0, lr
 801cfb0:	b2a2      	uxth	r2, r4
 801cfb2:	78ac      	ldrb	r4, [r5, #2]
 801cfb4:	f897 c002 	ldrb.w	ip, [r7, #2]
 801cfb8:	9901      	ldr	r1, [sp, #4]
 801cfba:	eba9 0900 	sub.w	r9, r9, r0
 801cfbe:	fa1f f989 	uxth.w	r9, r9
 801cfc2:	4354      	muls	r4, r2
 801cfc4:	fb09 440c 	mla	r4, r9, ip, r4
 801cfc8:	f896 c002 	ldrb.w	ip, [r6, #2]
 801cfcc:	fb00 440c 	mla	r4, r0, ip, r4
 801cfd0:	f893 c002 	ldrb.w	ip, [r3, #2]
 801cfd4:	fa1f fe88 	uxth.w	lr, r8
 801cfd8:	ea6f 0808 	mvn.w	r8, r8
 801cfdc:	fa5f f888 	uxtb.w	r8, r8
 801cfe0:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801cfe4:	fb1a fa08 	smulbb	sl, sl, r8
 801cfe8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801cfec:	fb0c ac0e 	mla	ip, ip, lr, sl
 801cff0:	f895 a001 	ldrb.w	sl, [r5, #1]
 801cff4:	787c      	ldrb	r4, [r7, #1]
 801cff6:	782d      	ldrb	r5, [r5, #0]
 801cff8:	783f      	ldrb	r7, [r7, #0]
 801cffa:	fb02 fa0a 	mul.w	sl, r2, sl
 801cffe:	fb09 aa04 	mla	sl, r9, r4, sl
 801d002:	7874      	ldrb	r4, [r6, #1]
 801d004:	436a      	muls	r2, r5
 801d006:	7835      	ldrb	r5, [r6, #0]
 801d008:	fb00 aa04 	mla	sl, r0, r4, sl
 801d00c:	fb09 2207 	mla	r2, r9, r7, r2
 801d010:	785c      	ldrb	r4, [r3, #1]
 801d012:	781b      	ldrb	r3, [r3, #0]
 801d014:	fb00 2005 	mla	r0, r0, r5, r2
 801d018:	fb0b a404 	mla	r4, fp, r4, sl
 801d01c:	fb0b 0b03 	mla	fp, fp, r3, r0
 801d020:	9b02      	ldr	r3, [sp, #8]
 801d022:	fb11 fa08 	smulbb	sl, r1, r8
 801d026:	fa1f fc8c 	uxth.w	ip, ip
 801d02a:	fb13 f808 	smulbb	r8, r3, r8
 801d02e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801d032:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801d036:	fb04 a40e 	mla	r4, r4, lr, sl
 801d03a:	f10c 0301 	add.w	r3, ip, #1
 801d03e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801d042:	fa1f fe8e 	uxth.w	lr, lr
 801d046:	b2a4      	uxth	r4, r4
 801d048:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d04c:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801d050:	f104 0a01 	add.w	sl, r4, #1
 801d054:	f10e 0c01 	add.w	ip, lr, #1
 801d058:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801d05c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801d060:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d064:	0964      	lsrs	r4, r4, #5
 801d066:	ea4c 0c03 	orr.w	ip, ip, r3
 801d06a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801d06e:	9b03      	ldr	r3, [sp, #12]
 801d070:	ea4c 0c04 	orr.w	ip, ip, r4
 801d074:	f8a3 c000 	strh.w	ip, [r3]
 801d078:	b007      	add	sp, #28
 801d07a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d07e:	af05      	add	r7, sp, #20
 801d080:	e756      	b.n	801cf30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801d082:	ad05      	add	r5, sp, #20
 801d084:	462f      	mov	r7, r5
 801d086:	e761      	b.n	801cf4c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801d088:	ad05      	add	r5, sp, #20
 801d08a:	e75f      	b.n	801cf4c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801d08c:	ae05      	add	r6, sp, #20
 801d08e:	e772      	b.n	801cf76 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801d090:	ab05      	add	r3, sp, #20
 801d092:	461e      	mov	r6, r3
 801d094:	e77e      	b.n	801cf94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801d096:	ab05      	add	r3, sp, #20
 801d098:	e77c      	b.n	801cf94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801d09a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d09a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d09e:	b095      	sub	sp, #84	@ 0x54
 801d0a0:	9212      	str	r2, [sp, #72]	@ 0x48
 801d0a2:	9309      	str	r3, [sp, #36]	@ 0x24
 801d0a4:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801d0a6:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801d0aa:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d0ac:	910e      	str	r1, [sp, #56]	@ 0x38
 801d0ae:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801d0b2:	9013      	str	r0, [sp, #76]	@ 0x4c
 801d0b4:	6850      	ldr	r0, [r2, #4]
 801d0b6:	6812      	ldr	r2, [r2, #0]
 801d0b8:	fb00 1303 	mla	r3, r0, r3, r1
 801d0bc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d0c0:	930a      	str	r3, [sp, #40]	@ 0x28
 801d0c2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801d0c4:	681b      	ldr	r3, [r3, #0]
 801d0c6:	930d      	str	r3, [sp, #52]	@ 0x34
 801d0c8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801d0ca:	685c      	ldr	r4, [r3, #4]
 801d0cc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d0ce:	43db      	mvns	r3, r3
 801d0d0:	b2db      	uxtb	r3, r3
 801d0d2:	3404      	adds	r4, #4
 801d0d4:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d0d6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d0d8:	2b00      	cmp	r3, #0
 801d0da:	dc03      	bgt.n	801d0e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d0dc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801d0de:	2b00      	cmp	r3, #0
 801d0e0:	f340 8255 	ble.w	801d58e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801d0e4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801d0e6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d0ea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d0ee:	1e48      	subs	r0, r1, #1
 801d0f0:	1e55      	subs	r5, r2, #1
 801d0f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d0f4:	2b00      	cmp	r3, #0
 801d0f6:	f340 80f9 	ble.w	801d2ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d0fa:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801d0fc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d0fe:	1436      	asrs	r6, r6, #16
 801d100:	ea4f 4323 	mov.w	r3, r3, asr #16
 801d104:	d406      	bmi.n	801d114 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d106:	4286      	cmp	r6, r0
 801d108:	da04      	bge.n	801d114 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d10a:	2b00      	cmp	r3, #0
 801d10c:	db02      	blt.n	801d114 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d10e:	42ab      	cmp	r3, r5
 801d110:	f2c0 80ed 	blt.w	801d2ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801d114:	3601      	adds	r6, #1
 801d116:	f100 80da 	bmi.w	801d2ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801d11a:	42b1      	cmp	r1, r6
 801d11c:	f2c0 80d7 	blt.w	801d2ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801d120:	3301      	adds	r3, #1
 801d122:	f100 80d4 	bmi.w	801d2ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801d126:	429a      	cmp	r2, r3
 801d128:	f2c0 80d1 	blt.w	801d2ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801d12c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d12e:	9311      	str	r3, [sp, #68]	@ 0x44
 801d130:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d132:	930c      	str	r3, [sp, #48]	@ 0x30
 801d134:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d136:	2b00      	cmp	r3, #0
 801d138:	f340 80fa 	ble.w	801d330 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801d13c:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801d13e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d140:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801d142:	68c6      	ldr	r6, [r0, #12]
 801d144:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801d146:	141d      	asrs	r5, r3, #16
 801d148:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801d14c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d14e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801d150:	1400      	asrs	r0, r0, #16
 801d152:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801d156:	6892      	ldr	r2, [r2, #8]
 801d158:	f100 813e 	bmi.w	801d3d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801d15c:	1e57      	subs	r7, r2, #1
 801d15e:	42b8      	cmp	r0, r7
 801d160:	f280 813a 	bge.w	801d3d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801d164:	2d00      	cmp	r5, #0
 801d166:	f2c0 8137 	blt.w	801d3d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801d16a:	1e77      	subs	r7, r6, #1
 801d16c:	42bd      	cmp	r5, r7
 801d16e:	f280 8133 	bge.w	801d3d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801d172:	b212      	sxth	r2, r2
 801d174:	fb05 0002 	mla	r0, r5, r2, r0
 801d178:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801d17a:	f815 a000 	ldrb.w	sl, [r5, r0]
 801d17e:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801d182:	182e      	adds	r6, r5, r0
 801d184:	eb04 050a 	add.w	r5, r4, sl
 801d188:	2b00      	cmp	r3, #0
 801d18a:	f000 8117 	beq.w	801d3bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801d18e:	f896 c001 	ldrb.w	ip, [r6, #1]
 801d192:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801d196:	44a4      	add	ip, r4
 801d198:	2900      	cmp	r1, #0
 801d19a:	f000 8117 	beq.w	801d3cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801d19e:	18b0      	adds	r0, r6, r2
 801d1a0:	5cb2      	ldrb	r2, [r6, r2]
 801d1a2:	7840      	ldrb	r0, [r0, #1]
 801d1a4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d1a8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d1ac:	4422      	add	r2, r4
 801d1ae:	4420      	add	r0, r4
 801d1b0:	b29b      	uxth	r3, r3
 801d1b2:	b289      	uxth	r1, r1
 801d1b4:	fb03 f901 	mul.w	r9, r3, r1
 801d1b8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801d1bc:	011b      	lsls	r3, r3, #4
 801d1be:	b289      	uxth	r1, r1
 801d1c0:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801d1c4:	f895 b002 	ldrb.w	fp, [r5, #2]
 801d1c8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801d1ca:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801d1ce:	f8b6 e000 	ldrh.w	lr, [r6]
 801d1d2:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801d1d6:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801d1da:	eba3 0309 	sub.w	r3, r3, r9
 801d1de:	b29b      	uxth	r3, r3
 801d1e0:	eba8 0801 	sub.w	r8, r8, r1
 801d1e4:	fa1f f888 	uxth.w	r8, r8
 801d1e8:	435f      	muls	r7, r3
 801d1ea:	fb08 770b 	mla	r7, r8, fp, r7
 801d1ee:	f892 b002 	ldrb.w	fp, [r2, #2]
 801d1f2:	9310      	str	r3, [sp, #64]	@ 0x40
 801d1f4:	fb01 770b 	mla	r7, r1, fp, r7
 801d1f8:	f890 b002 	ldrb.w	fp, [r0, #2]
 801d1fc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d1fe:	fb09 770b 	mla	r7, r9, fp, r7
 801d202:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801d206:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801d20a:	fb1b fb03 	smulbb	fp, fp, r3
 801d20e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801d212:	fb07 b706 	mla	r7, r7, r6, fp
 801d216:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d218:	f895 b001 	ldrb.w	fp, [r5, #1]
 801d21c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801d220:	f89c c000 	ldrb.w	ip, [ip]
 801d224:	435d      	muls	r5, r3
 801d226:	fb08 550b 	mla	r5, r8, fp, r5
 801d22a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801d22e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d230:	fb01 550b 	mla	r5, r1, fp, r5
 801d234:	f890 b001 	ldrb.w	fp, [r0, #1]
 801d238:	fb09 550b 	mla	r5, r9, fp, r5
 801d23c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801d240:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801d244:	fb1b fb03 	smulbb	fp, fp, r3
 801d248:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d24a:	fb03 f30c 	mul.w	r3, r3, ip
 801d24e:	f892 c000 	ldrb.w	ip, [r2]
 801d252:	fb08 330a 	mla	r3, r8, sl, r3
 801d256:	fb01 330c 	mla	r3, r1, ip, r3
 801d25a:	f890 c000 	ldrb.w	ip, [r0]
 801d25e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d262:	fb09 3c0c 	mla	ip, r9, ip, r3
 801d266:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d268:	fa5f fe8e 	uxtb.w	lr, lr
 801d26c:	b2bf      	uxth	r7, r7
 801d26e:	fb1e fe03 	smulbb	lr, lr, r3
 801d272:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801d276:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801d27a:	fb05 b506 	mla	r5, r5, r6, fp
 801d27e:	1c7b      	adds	r3, r7, #1
 801d280:	fb0c e606 	mla	r6, ip, r6, lr
 801d284:	b2ad      	uxth	r5, r5
 801d286:	b2b6      	uxth	r6, r6
 801d288:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801d28c:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801d290:	f105 0b01 	add.w	fp, r5, #1
 801d294:	1c77      	adds	r7, r6, #1
 801d296:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801d29a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801d29e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d2a2:	096d      	lsrs	r5, r5, #5
 801d2a4:	431f      	orrs	r7, r3
 801d2a6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d2aa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d2ac:	433d      	orrs	r5, r7
 801d2ae:	801d      	strh	r5, [r3, #0]
 801d2b0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d2b2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801d2b4:	3302      	adds	r3, #2
 801d2b6:	930c      	str	r3, [sp, #48]	@ 0x30
 801d2b8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d2ba:	4413      	add	r3, r2
 801d2bc:	931f      	str	r3, [sp, #124]	@ 0x7c
 801d2be:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801d2c0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d2c2:	4413      	add	r3, r2
 801d2c4:	9320      	str	r3, [sp, #128]	@ 0x80
 801d2c6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d2c8:	3b01      	subs	r3, #1
 801d2ca:	9311      	str	r3, [sp, #68]	@ 0x44
 801d2cc:	e732      	b.n	801d134 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d2ce:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d2d0:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801d2d2:	4433      	add	r3, r6
 801d2d4:	931f      	str	r3, [sp, #124]	@ 0x7c
 801d2d6:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801d2d8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d2da:	4433      	add	r3, r6
 801d2dc:	9320      	str	r3, [sp, #128]	@ 0x80
 801d2de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d2e0:	3b01      	subs	r3, #1
 801d2e2:	9309      	str	r3, [sp, #36]	@ 0x24
 801d2e4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d2e6:	3302      	adds	r3, #2
 801d2e8:	930a      	str	r3, [sp, #40]	@ 0x28
 801d2ea:	e702      	b.n	801d0f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d2ec:	d027      	beq.n	801d33e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801d2ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d2f0:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801d2f2:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801d2f4:	3b01      	subs	r3, #1
 801d2f6:	fb00 5003 	mla	r0, r0, r3, r5
 801d2fa:	1400      	asrs	r0, r0, #16
 801d2fc:	f53f af16 	bmi.w	801d12c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d300:	3901      	subs	r1, #1
 801d302:	4288      	cmp	r0, r1
 801d304:	f6bf af12 	bge.w	801d12c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d308:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801d30a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801d30c:	fb01 0303 	mla	r3, r1, r3, r0
 801d310:	141b      	asrs	r3, r3, #16
 801d312:	f53f af0b 	bmi.w	801d12c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d316:	3a01      	subs	r2, #1
 801d318:	4293      	cmp	r3, r2
 801d31a:	f6bf af07 	bge.w	801d12c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d31e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d320:	9311      	str	r3, [sp, #68]	@ 0x44
 801d322:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801d326:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d328:	930c      	str	r3, [sp, #48]	@ 0x30
 801d32a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d32c:	2b00      	cmp	r3, #0
 801d32e:	dc70      	bgt.n	801d412 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801d330:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d332:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801d334:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d338:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d33c:	930a      	str	r3, [sp, #40]	@ 0x28
 801d33e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d340:	2b00      	cmp	r3, #0
 801d342:	f340 8124 	ble.w	801d58e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801d346:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d34a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d34e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d352:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d354:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d358:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d35c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d360:	eef0 6a62 	vmov.f32	s13, s5
 801d364:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d368:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d36c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d370:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801d374:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d378:	eef0 6a43 	vmov.f32	s13, s6
 801d37c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d380:	ee12 2a90 	vmov	r2, s5
 801d384:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d388:	fb92 f3f3 	sdiv	r3, r2, r3
 801d38c:	ee13 2a10 	vmov	r2, s6
 801d390:	9321      	str	r3, [sp, #132]	@ 0x84
 801d392:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d394:	fb92 f3f3 	sdiv	r3, r2, r3
 801d398:	9322      	str	r3, [sp, #136]	@ 0x88
 801d39a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d39c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801d39e:	3b01      	subs	r3, #1
 801d3a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d3a4:	930e      	str	r3, [sp, #56]	@ 0x38
 801d3a6:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d3a8:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801d3ac:	bf08      	it	eq
 801d3ae:	4613      	moveq	r3, r2
 801d3b0:	9309      	str	r3, [sp, #36]	@ 0x24
 801d3b2:	eeb0 3a67 	vmov.f32	s6, s15
 801d3b6:	eef0 2a47 	vmov.f32	s5, s14
 801d3ba:	e68c      	b.n	801d0d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d3bc:	b149      	cbz	r1, 801d3d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801d3be:	5cb2      	ldrb	r2, [r6, r2]
 801d3c0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d3c4:	4422      	add	r2, r4
 801d3c6:	4628      	mov	r0, r5
 801d3c8:	46ac      	mov	ip, r5
 801d3ca:	e6f1      	b.n	801d1b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d3cc:	4628      	mov	r0, r5
 801d3ce:	462a      	mov	r2, r5
 801d3d0:	e6ee      	b.n	801d1b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d3d2:	4628      	mov	r0, r5
 801d3d4:	462a      	mov	r2, r5
 801d3d6:	e7f7      	b.n	801d3c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801d3d8:	1c47      	adds	r7, r0, #1
 801d3da:	f53f af69 	bmi.w	801d2b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d3de:	42ba      	cmp	r2, r7
 801d3e0:	f6ff af66 	blt.w	801d2b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d3e4:	1c6f      	adds	r7, r5, #1
 801d3e6:	f53f af63 	bmi.w	801d2b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d3ea:	42be      	cmp	r6, r7
 801d3ec:	f6ff af60 	blt.w	801d2b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d3f0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801d3f2:	9002      	str	r0, [sp, #8]
 801d3f4:	b236      	sxth	r6, r6
 801d3f6:	b212      	sxth	r2, r2
 801d3f8:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801d3fc:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801d400:	9200      	str	r2, [sp, #0]
 801d402:	9601      	str	r6, [sp, #4]
 801d404:	4623      	mov	r3, r4
 801d406:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801d40a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801d40c:	f7ff fd59 	bl	801cec2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801d410:	e74e      	b.n	801d2b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d412:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801d414:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801d416:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801d418:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d41a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801d41e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801d420:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801d424:	142d      	asrs	r5, r5, #16
 801d426:	1400      	asrs	r0, r0, #16
 801d428:	fb02 5000 	mla	r0, r2, r0, r5
 801d42c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801d42e:	f815 9000 	ldrb.w	r9, [r5, r0]
 801d432:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801d436:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801d43a:	182e      	adds	r6, r5, r0
 801d43c:	eb04 0509 	add.w	r5, r4, r9
 801d440:	2b00      	cmp	r3, #0
 801d442:	f000 8096 	beq.w	801d572 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801d446:	7877      	ldrb	r7, [r6, #1]
 801d448:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801d44c:	4427      	add	r7, r4
 801d44e:	2900      	cmp	r1, #0
 801d450:	f000 8097 	beq.w	801d582 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801d454:	18b0      	adds	r0, r6, r2
 801d456:	5cb2      	ldrb	r2, [r6, r2]
 801d458:	7840      	ldrb	r0, [r0, #1]
 801d45a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d45e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d462:	4422      	add	r2, r4
 801d464:	4420      	add	r0, r4
 801d466:	b29b      	uxth	r3, r3
 801d468:	b289      	uxth	r1, r1
 801d46a:	fb03 f801 	mul.w	r8, r3, r1
 801d46e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801d470:	f895 b002 	ldrb.w	fp, [r5, #2]
 801d474:	f8b6 c000 	ldrh.w	ip, [r6]
 801d478:	78be      	ldrb	r6, [r7, #2]
 801d47a:	f814 9009 	ldrb.w	r9, [r4, r9]
 801d47e:	011b      	lsls	r3, r3, #4
 801d480:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801d484:	b289      	uxth	r1, r1
 801d486:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801d48a:	eba3 0308 	sub.w	r3, r3, r8
 801d48e:	b29b      	uxth	r3, r3
 801d490:	ebae 0e01 	sub.w	lr, lr, r1
 801d494:	fa1f fe8e 	uxth.w	lr, lr
 801d498:	435e      	muls	r6, r3
 801d49a:	fb0e 660b 	mla	r6, lr, fp, r6
 801d49e:	f892 b002 	ldrb.w	fp, [r2, #2]
 801d4a2:	9310      	str	r3, [sp, #64]	@ 0x40
 801d4a4:	fb01 660b 	mla	r6, r1, fp, r6
 801d4a8:	f890 b002 	ldrb.w	fp, [r0, #2]
 801d4ac:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d4ae:	fb08 660b 	mla	r6, r8, fp, r6
 801d4b2:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801d4b6:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801d4ba:	fb1b fb03 	smulbb	fp, fp, r3
 801d4be:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801d4c2:	fb06 b60a 	mla	r6, r6, sl, fp
 801d4c6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d4c8:	f895 b001 	ldrb.w	fp, [r5, #1]
 801d4cc:	787d      	ldrb	r5, [r7, #1]
 801d4ce:	783f      	ldrb	r7, [r7, #0]
 801d4d0:	435d      	muls	r5, r3
 801d4d2:	fb0e 550b 	mla	r5, lr, fp, r5
 801d4d6:	f892 b001 	ldrb.w	fp, [r2, #1]
 801d4da:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d4dc:	fb01 550b 	mla	r5, r1, fp, r5
 801d4e0:	f890 b001 	ldrb.w	fp, [r0, #1]
 801d4e4:	fb08 550b 	mla	r5, r8, fp, r5
 801d4e8:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801d4ec:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801d4f0:	fb1b fb03 	smulbb	fp, fp, r3
 801d4f4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d4f6:	437b      	muls	r3, r7
 801d4f8:	7817      	ldrb	r7, [r2, #0]
 801d4fa:	fb0e 3309 	mla	r3, lr, r9, r3
 801d4fe:	fb01 3307 	mla	r3, r1, r7, r3
 801d502:	7807      	ldrb	r7, [r0, #0]
 801d504:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d508:	fb08 3707 	mla	r7, r8, r7, r3
 801d50c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d50e:	fa5f fc8c 	uxtb.w	ip, ip
 801d512:	fb1c fc03 	smulbb	ip, ip, r3
 801d516:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801d51a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801d51e:	fb05 b50a 	mla	r5, r5, sl, fp
 801d522:	fb07 c70a 	mla	r7, r7, sl, ip
 801d526:	b2b6      	uxth	r6, r6
 801d528:	b2ad      	uxth	r5, r5
 801d52a:	b2bf      	uxth	r7, r7
 801d52c:	1c73      	adds	r3, r6, #1
 801d52e:	1c7a      	adds	r2, r7, #1
 801d530:	f105 0b01 	add.w	fp, r5, #1
 801d534:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801d538:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801d53c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801d540:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d544:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801d548:	096d      	lsrs	r5, r5, #5
 801d54a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d54c:	4316      	orrs	r6, r2
 801d54e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d552:	432e      	orrs	r6, r5
 801d554:	f823 6b02 	strh.w	r6, [r3], #2
 801d558:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801d55a:	930c      	str	r3, [sp, #48]	@ 0x30
 801d55c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d55e:	4413      	add	r3, r2
 801d560:	931f      	str	r3, [sp, #124]	@ 0x7c
 801d562:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801d564:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d566:	4413      	add	r3, r2
 801d568:	9320      	str	r3, [sp, #128]	@ 0x80
 801d56a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d56c:	3b01      	subs	r3, #1
 801d56e:	9311      	str	r3, [sp, #68]	@ 0x44
 801d570:	e6db      	b.n	801d32a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801d572:	b149      	cbz	r1, 801d588 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801d574:	5cb2      	ldrb	r2, [r6, r2]
 801d576:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d57a:	4422      	add	r2, r4
 801d57c:	4628      	mov	r0, r5
 801d57e:	462f      	mov	r7, r5
 801d580:	e771      	b.n	801d466 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801d582:	4628      	mov	r0, r5
 801d584:	462a      	mov	r2, r5
 801d586:	e76e      	b.n	801d466 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801d588:	4628      	mov	r0, r5
 801d58a:	462a      	mov	r2, r5
 801d58c:	e7f7      	b.n	801d57e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801d58e:	b015      	add	sp, #84	@ 0x54
 801d590:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d594 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801d594:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d598:	880f      	ldrh	r7, [r1, #0]
 801d59a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801d59e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801d5a2:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801d5a6:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801d5aa:	023c      	lsls	r4, r7, #8
 801d5ac:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801d5b0:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801d5b4:	017c      	lsls	r4, r7, #5
 801d5b6:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801d5ba:	00ff      	lsls	r7, r7, #3
 801d5bc:	ea4b 0404 	orr.w	r4, fp, r4
 801d5c0:	b2ff      	uxtb	r7, r7
 801d5c2:	fb05 ca0e 	mla	sl, r5, lr, ip
 801d5c6:	4327      	orrs	r7, r4
 801d5c8:	2d00      	cmp	r5, #0
 801d5ca:	eb02 080a 	add.w	r8, r2, sl
 801d5ce:	9701      	str	r7, [sp, #4]
 801d5d0:	db7e      	blt.n	801d6d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801d5d2:	45a9      	cmp	r9, r5
 801d5d4:	dd7c      	ble.n	801d6d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801d5d6:	f1bc 0f00 	cmp.w	ip, #0
 801d5da:	db77      	blt.n	801d6cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801d5dc:	45e6      	cmp	lr, ip
 801d5de:	dd75      	ble.n	801d6cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801d5e0:	f812 700a 	ldrb.w	r7, [r2, sl]
 801d5e4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801d5e8:	441f      	add	r7, r3
 801d5ea:	f11c 0201 	adds.w	r2, ip, #1
 801d5ee:	d472      	bmi.n	801d6d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801d5f0:	4596      	cmp	lr, r2
 801d5f2:	dd70      	ble.n	801d6d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801d5f4:	2800      	cmp	r0, #0
 801d5f6:	d06e      	beq.n	801d6d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801d5f8:	f898 4001 	ldrb.w	r4, [r8, #1]
 801d5fc:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801d600:	441c      	add	r4, r3
 801d602:	3501      	adds	r5, #1
 801d604:	d46b      	bmi.n	801d6de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801d606:	45a9      	cmp	r9, r5
 801d608:	dd69      	ble.n	801d6de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801d60a:	2e00      	cmp	r6, #0
 801d60c:	d067      	beq.n	801d6de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801d60e:	f1bc 0f00 	cmp.w	ip, #0
 801d612:	db62      	blt.n	801d6da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801d614:	45e6      	cmp	lr, ip
 801d616:	dd60      	ble.n	801d6da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801d618:	f818 500e 	ldrb.w	r5, [r8, lr]
 801d61c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801d620:	441d      	add	r5, r3
 801d622:	f11c 0201 	adds.w	r2, ip, #1
 801d626:	d45d      	bmi.n	801d6e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801d628:	4596      	cmp	lr, r2
 801d62a:	dd5b      	ble.n	801d6e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801d62c:	2800      	cmp	r0, #0
 801d62e:	d059      	beq.n	801d6e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801d630:	44c6      	add	lr, r8
 801d632:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801d636:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d63a:	4413      	add	r3, r2
 801d63c:	b280      	uxth	r0, r0
 801d63e:	b2b2      	uxth	r2, r6
 801d640:	fb00 f602 	mul.w	r6, r0, r2
 801d644:	0100      	lsls	r0, r0, #4
 801d646:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801d64a:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801d64e:	1b80      	subs	r0, r0, r6
 801d650:	fa1f fc82 	uxth.w	ip, r2
 801d654:	b282      	uxth	r2, r0
 801d656:	78a0      	ldrb	r0, [r4, #2]
 801d658:	f897 e002 	ldrb.w	lr, [r7, #2]
 801d65c:	f897 9000 	ldrb.w	r9, [r7]
 801d660:	787f      	ldrb	r7, [r7, #1]
 801d662:	eba8 080c 	sub.w	r8, r8, ip
 801d666:	fa1f f888 	uxth.w	r8, r8
 801d66a:	4350      	muls	r0, r2
 801d66c:	fb08 0e0e 	mla	lr, r8, lr, r0
 801d670:	78a8      	ldrb	r0, [r5, #2]
 801d672:	fb0c e000 	mla	r0, ip, r0, lr
 801d676:	f893 e002 	ldrb.w	lr, [r3, #2]
 801d67a:	fb06 0e0e 	mla	lr, r6, lr, r0
 801d67e:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801d682:	f894 e000 	ldrb.w	lr, [r4]
 801d686:	fb02 fe0e 	mul.w	lr, r2, lr
 801d68a:	fb08 e909 	mla	r9, r8, r9, lr
 801d68e:	f895 e000 	ldrb.w	lr, [r5]
 801d692:	fb0c 990e 	mla	r9, ip, lr, r9
 801d696:	f893 e000 	ldrb.w	lr, [r3]
 801d69a:	785b      	ldrb	r3, [r3, #1]
 801d69c:	fb06 9e0e 	mla	lr, r6, lr, r9
 801d6a0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d6a4:	ea4e 0e00 	orr.w	lr, lr, r0
 801d6a8:	7860      	ldrb	r0, [r4, #1]
 801d6aa:	4350      	muls	r0, r2
 801d6ac:	786a      	ldrb	r2, [r5, #1]
 801d6ae:	fb08 0007 	mla	r0, r8, r7, r0
 801d6b2:	fb0c 0202 	mla	r2, ip, r2, r0
 801d6b6:	fb06 2303 	mla	r3, r6, r3, r2
 801d6ba:	095b      	lsrs	r3, r3, #5
 801d6bc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d6c0:	ea4e 0303 	orr.w	r3, lr, r3
 801d6c4:	800b      	strh	r3, [r1, #0]
 801d6c6:	b003      	add	sp, #12
 801d6c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d6cc:	af01      	add	r7, sp, #4
 801d6ce:	e78c      	b.n	801d5ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801d6d0:	ac01      	add	r4, sp, #4
 801d6d2:	4627      	mov	r7, r4
 801d6d4:	e795      	b.n	801d602 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801d6d6:	ac01      	add	r4, sp, #4
 801d6d8:	e793      	b.n	801d602 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801d6da:	ad01      	add	r5, sp, #4
 801d6dc:	e7a1      	b.n	801d622 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801d6de:	ab01      	add	r3, sp, #4
 801d6e0:	461d      	mov	r5, r3
 801d6e2:	e7ab      	b.n	801d63c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801d6e4:	ab01      	add	r3, sp, #4
 801d6e6:	e7a9      	b.n	801d63c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801d6e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d6e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d6ec:	b08f      	sub	sp, #60	@ 0x3c
 801d6ee:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801d6f2:	920c      	str	r2, [sp, #48]	@ 0x30
 801d6f4:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801d6f6:	910a      	str	r1, [sp, #40]	@ 0x28
 801d6f8:	9306      	str	r3, [sp, #24]
 801d6fa:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801d6fe:	900d      	str	r0, [sp, #52]	@ 0x34
 801d700:	6850      	ldr	r0, [r2, #4]
 801d702:	6812      	ldr	r2, [r2, #0]
 801d704:	fb00 1303 	mla	r3, r0, r3, r1
 801d708:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d70c:	9307      	str	r3, [sp, #28]
 801d70e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d710:	681b      	ldr	r3, [r3, #0]
 801d712:	9308      	str	r3, [sp, #32]
 801d714:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d716:	685c      	ldr	r4, [r3, #4]
 801d718:	3404      	adds	r4, #4
 801d71a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d71c:	2b00      	cmp	r3, #0
 801d71e:	dc03      	bgt.n	801d728 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801d720:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d722:	2b00      	cmp	r3, #0
 801d724:	f340 81d6 	ble.w	801dad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801d728:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d72a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d72e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d732:	1e48      	subs	r0, r1, #1
 801d734:	1e56      	subs	r6, r2, #1
 801d736:	9b06      	ldr	r3, [sp, #24]
 801d738:	2b00      	cmp	r3, #0
 801d73a:	f340 80b7 	ble.w	801d8ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801d73e:	ea5f 472b 	movs.w	r7, fp, asr #16
 801d742:	ea4f 4325 	mov.w	r3, r5, asr #16
 801d746:	d406      	bmi.n	801d756 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d748:	4287      	cmp	r7, r0
 801d74a:	da04      	bge.n	801d756 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d74c:	2b00      	cmp	r3, #0
 801d74e:	db02      	blt.n	801d756 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d750:	42b3      	cmp	r3, r6
 801d752:	f2c0 80ac 	blt.w	801d8ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801d756:	3701      	adds	r7, #1
 801d758:	f100 809d 	bmi.w	801d896 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801d75c:	42b9      	cmp	r1, r7
 801d75e:	f2c0 809a 	blt.w	801d896 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801d762:	3301      	adds	r3, #1
 801d764:	f100 8097 	bmi.w	801d896 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801d768:	429a      	cmp	r2, r3
 801d76a:	f2c0 8094 	blt.w	801d896 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801d76e:	9b06      	ldr	r3, [sp, #24]
 801d770:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d772:	9b07      	ldr	r3, [sp, #28]
 801d774:	9309      	str	r3, [sp, #36]	@ 0x24
 801d776:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d778:	2b00      	cmp	r3, #0
 801d77a:	f340 80b5 	ble.w	801d8e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d77e:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801d780:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801d782:	68c7      	ldr	r7, [r0, #12]
 801d784:	6892      	ldr	r2, [r2, #8]
 801d786:	ea5f 402b 	movs.w	r0, fp, asr #16
 801d78a:	ea4f 4625 	mov.w	r6, r5, asr #16
 801d78e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801d792:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801d796:	f100 80fb 	bmi.w	801d990 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801d79a:	f102 3cff 	add.w	ip, r2, #4294967295
 801d79e:	4560      	cmp	r0, ip
 801d7a0:	f280 80f6 	bge.w	801d990 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801d7a4:	2e00      	cmp	r6, #0
 801d7a6:	f2c0 80f3 	blt.w	801d990 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801d7aa:	f107 3cff 	add.w	ip, r7, #4294967295
 801d7ae:	4566      	cmp	r6, ip
 801d7b0:	f280 80ee 	bge.w	801d990 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801d7b4:	b212      	sxth	r2, r2
 801d7b6:	fb06 0002 	mla	r0, r6, r2, r0
 801d7ba:	9e08      	ldr	r6, [sp, #32]
 801d7bc:	1837      	adds	r7, r6, r0
 801d7be:	5c30      	ldrb	r0, [r6, r0]
 801d7c0:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801d7c4:	eb04 0c08 	add.w	ip, r4, r8
 801d7c8:	2b00      	cmp	r3, #0
 801d7ca:	f000 80d3 	beq.w	801d974 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801d7ce:	787e      	ldrb	r6, [r7, #1]
 801d7d0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801d7d4:	4426      	add	r6, r4
 801d7d6:	2900      	cmp	r1, #0
 801d7d8:	f000 80d4 	beq.w	801d984 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801d7dc:	18b8      	adds	r0, r7, r2
 801d7de:	5cba      	ldrb	r2, [r7, r2]
 801d7e0:	7840      	ldrb	r0, [r0, #1]
 801d7e2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d7e6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d7ea:	4422      	add	r2, r4
 801d7ec:	4420      	add	r0, r4
 801d7ee:	b29b      	uxth	r3, r3
 801d7f0:	b289      	uxth	r1, r1
 801d7f2:	fb03 f901 	mul.w	r9, r3, r1
 801d7f6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801d7fa:	011b      	lsls	r3, r3, #4
 801d7fc:	b289      	uxth	r1, r1
 801d7fe:	78b7      	ldrb	r7, [r6, #2]
 801d800:	f89c a002 	ldrb.w	sl, [ip, #2]
 801d804:	f89c c001 	ldrb.w	ip, [ip, #1]
 801d808:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801d80c:	eba3 0309 	sub.w	r3, r3, r9
 801d810:	b29b      	uxth	r3, r3
 801d812:	ebae 0e01 	sub.w	lr, lr, r1
 801d816:	fa1f fe8e 	uxth.w	lr, lr
 801d81a:	435f      	muls	r7, r3
 801d81c:	fb0e 770a 	mla	r7, lr, sl, r7
 801d820:	f892 a002 	ldrb.w	sl, [r2, #2]
 801d824:	fb01 770a 	mla	r7, r1, sl, r7
 801d828:	f890 a002 	ldrb.w	sl, [r0, #2]
 801d82c:	fb09 7a0a 	mla	sl, r9, sl, r7
 801d830:	f814 7008 	ldrb.w	r7, [r4, r8]
 801d834:	f896 8000 	ldrb.w	r8, [r6]
 801d838:	7876      	ldrb	r6, [r6, #1]
 801d83a:	fb03 f808 	mul.w	r8, r3, r8
 801d83e:	fb0e 8807 	mla	r8, lr, r7, r8
 801d842:	7817      	ldrb	r7, [r2, #0]
 801d844:	fb01 8807 	mla	r8, r1, r7, r8
 801d848:	7807      	ldrb	r7, [r0, #0]
 801d84a:	fb09 8707 	mla	r7, r9, r7, r8
 801d84e:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801d852:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d856:	ea47 070a 	orr.w	r7, r7, sl
 801d85a:	4373      	muls	r3, r6
 801d85c:	f892 a001 	ldrb.w	sl, [r2, #1]
 801d860:	fb0e 330c 	mla	r3, lr, ip, r3
 801d864:	fb01 310a 	mla	r1, r1, sl, r3
 801d868:	f890 a001 	ldrb.w	sl, [r0, #1]
 801d86c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d86e:	fb09 1a0a 	mla	sl, r9, sl, r1
 801d872:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d876:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801d87a:	ea47 070a 	orr.w	r7, r7, sl
 801d87e:	801f      	strh	r7, [r3, #0]
 801d880:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d882:	3302      	adds	r3, #2
 801d884:	9309      	str	r3, [sp, #36]	@ 0x24
 801d886:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801d888:	449b      	add	fp, r3
 801d88a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d88c:	441d      	add	r5, r3
 801d88e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d890:	3b01      	subs	r3, #1
 801d892:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d894:	e76f      	b.n	801d776 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d896:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801d898:	449b      	add	fp, r3
 801d89a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d89c:	441d      	add	r5, r3
 801d89e:	9b06      	ldr	r3, [sp, #24]
 801d8a0:	3b01      	subs	r3, #1
 801d8a2:	9306      	str	r3, [sp, #24]
 801d8a4:	9b07      	ldr	r3, [sp, #28]
 801d8a6:	3302      	adds	r3, #2
 801d8a8:	9307      	str	r3, [sp, #28]
 801d8aa:	e744      	b.n	801d736 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801d8ac:	d023      	beq.n	801d8f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801d8ae:	9b06      	ldr	r3, [sp, #24]
 801d8b0:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801d8b2:	3b01      	subs	r3, #1
 801d8b4:	fb00 b003 	mla	r0, r0, r3, fp
 801d8b8:	1400      	asrs	r0, r0, #16
 801d8ba:	f53f af58 	bmi.w	801d76e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801d8be:	3901      	subs	r1, #1
 801d8c0:	4288      	cmp	r0, r1
 801d8c2:	f6bf af54 	bge.w	801d76e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801d8c6:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801d8c8:	fb01 5303 	mla	r3, r1, r3, r5
 801d8cc:	141b      	asrs	r3, r3, #16
 801d8ce:	f53f af4e 	bmi.w	801d76e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801d8d2:	3a01      	subs	r2, #1
 801d8d4:	4293      	cmp	r3, r2
 801d8d6:	f6bf af4a 	bge.w	801d76e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801d8da:	9b06      	ldr	r3, [sp, #24]
 801d8dc:	9309      	str	r3, [sp, #36]	@ 0x24
 801d8de:	9b07      	ldr	r3, [sp, #28]
 801d8e0:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d8e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d8e4:	2b00      	cmp	r3, #0
 801d8e6:	dc70      	bgt.n	801d9ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801d8e8:	9b06      	ldr	r3, [sp, #24]
 801d8ea:	9a07      	ldr	r2, [sp, #28]
 801d8ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d8f0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d8f4:	9307      	str	r3, [sp, #28]
 801d8f6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d8f8:	2b00      	cmp	r3, #0
 801d8fa:	f340 80eb 	ble.w	801dad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801d8fe:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d902:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d906:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d90a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801d90c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d910:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d914:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d918:	eef0 6a62 	vmov.f32	s13, s5
 801d91c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d920:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d924:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d928:	ee16 ba90 	vmov	fp, s13
 801d92c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d930:	eef0 6a43 	vmov.f32	s13, s6
 801d934:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d938:	ee12 2a90 	vmov	r2, s5
 801d93c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d940:	fb92 f3f3 	sdiv	r3, r2, r3
 801d944:	ee13 2a10 	vmov	r2, s6
 801d948:	931b      	str	r3, [sp, #108]	@ 0x6c
 801d94a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801d94c:	fb92 f3f3 	sdiv	r3, r2, r3
 801d950:	931c      	str	r3, [sp, #112]	@ 0x70
 801d952:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d954:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801d956:	3b01      	subs	r3, #1
 801d958:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d95c:	930a      	str	r3, [sp, #40]	@ 0x28
 801d95e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801d960:	bf08      	it	eq
 801d962:	4613      	moveq	r3, r2
 801d964:	ee16 5a90 	vmov	r5, s13
 801d968:	9306      	str	r3, [sp, #24]
 801d96a:	eeb0 3a67 	vmov.f32	s6, s15
 801d96e:	eef0 2a47 	vmov.f32	s5, s14
 801d972:	e6d2      	b.n	801d71a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801d974:	b149      	cbz	r1, 801d98a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801d976:	5cba      	ldrb	r2, [r7, r2]
 801d978:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d97c:	4422      	add	r2, r4
 801d97e:	4660      	mov	r0, ip
 801d980:	4666      	mov	r6, ip
 801d982:	e734      	b.n	801d7ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801d984:	4660      	mov	r0, ip
 801d986:	4662      	mov	r2, ip
 801d988:	e731      	b.n	801d7ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801d98a:	4660      	mov	r0, ip
 801d98c:	4662      	mov	r2, ip
 801d98e:	e7f7      	b.n	801d980 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801d990:	f110 0c01 	adds.w	ip, r0, #1
 801d994:	f53f af74 	bmi.w	801d880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d998:	4562      	cmp	r2, ip
 801d99a:	f6ff af71 	blt.w	801d880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d99e:	f116 0c01 	adds.w	ip, r6, #1
 801d9a2:	f53f af6d 	bmi.w	801d880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d9a6:	4567      	cmp	r7, ip
 801d9a8:	f6ff af6a 	blt.w	801d880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d9ac:	b23f      	sxth	r7, r7
 801d9ae:	b212      	sxth	r2, r2
 801d9b0:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801d9b4:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801d9b8:	9200      	str	r2, [sp, #0]
 801d9ba:	9701      	str	r7, [sp, #4]
 801d9bc:	4623      	mov	r3, r4
 801d9be:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801d9c2:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801d9c4:	f7ff fde6 	bl	801d594 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801d9c8:	e75a      	b.n	801d880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d9ca:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801d9cc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801d9d0:	ea4f 462b 	mov.w	r6, fp, asr #16
 801d9d4:	1428      	asrs	r0, r5, #16
 801d9d6:	fb02 6000 	mla	r0, r2, r0, r6
 801d9da:	9e08      	ldr	r6, [sp, #32]
 801d9dc:	f816 8000 	ldrb.w	r8, [r6, r0]
 801d9e0:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801d9e4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801d9e8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801d9ec:	1837      	adds	r7, r6, r0
 801d9ee:	eb04 0c08 	add.w	ip, r4, r8
 801d9f2:	2b00      	cmp	r3, #0
 801d9f4:	d060      	beq.n	801dab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801d9f6:	787e      	ldrb	r6, [r7, #1]
 801d9f8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801d9fc:	4426      	add	r6, r4
 801d9fe:	2900      	cmp	r1, #0
 801da00:	d062      	beq.n	801dac8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801da02:	18b8      	adds	r0, r7, r2
 801da04:	5cba      	ldrb	r2, [r7, r2]
 801da06:	7840      	ldrb	r0, [r0, #1]
 801da08:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801da0c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801da10:	4422      	add	r2, r4
 801da12:	4420      	add	r0, r4
 801da14:	b29b      	uxth	r3, r3
 801da16:	b289      	uxth	r1, r1
 801da18:	fb03 f901 	mul.w	r9, r3, r1
 801da1c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801da20:	011b      	lsls	r3, r3, #4
 801da22:	b289      	uxth	r1, r1
 801da24:	78b7      	ldrb	r7, [r6, #2]
 801da26:	f89c a002 	ldrb.w	sl, [ip, #2]
 801da2a:	f89c c001 	ldrb.w	ip, [ip, #1]
 801da2e:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801da32:	eba3 0309 	sub.w	r3, r3, r9
 801da36:	b29b      	uxth	r3, r3
 801da38:	ebae 0e01 	sub.w	lr, lr, r1
 801da3c:	fa1f fe8e 	uxth.w	lr, lr
 801da40:	435f      	muls	r7, r3
 801da42:	fb0e 770a 	mla	r7, lr, sl, r7
 801da46:	f892 a002 	ldrb.w	sl, [r2, #2]
 801da4a:	fb01 770a 	mla	r7, r1, sl, r7
 801da4e:	f890 a002 	ldrb.w	sl, [r0, #2]
 801da52:	fb09 7a0a 	mla	sl, r9, sl, r7
 801da56:	f814 7008 	ldrb.w	r7, [r4, r8]
 801da5a:	f896 8000 	ldrb.w	r8, [r6]
 801da5e:	7876      	ldrb	r6, [r6, #1]
 801da60:	fb03 f808 	mul.w	r8, r3, r8
 801da64:	fb0e 8807 	mla	r8, lr, r7, r8
 801da68:	7817      	ldrb	r7, [r2, #0]
 801da6a:	fb01 8807 	mla	r8, r1, r7, r8
 801da6e:	7807      	ldrb	r7, [r0, #0]
 801da70:	fb09 8707 	mla	r7, r9, r7, r8
 801da74:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801da78:	4373      	muls	r3, r6
 801da7a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801da7e:	7856      	ldrb	r6, [r2, #1]
 801da80:	ea47 070a 	orr.w	r7, r7, sl
 801da84:	fb0e 330c 	mla	r3, lr, ip, r3
 801da88:	f890 a001 	ldrb.w	sl, [r0, #1]
 801da8c:	fb01 3306 	mla	r3, r1, r6, r3
 801da90:	fb09 3a0a 	mla	sl, r9, sl, r3
 801da94:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801da98:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801da9a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801da9e:	ea47 070a 	orr.w	r7, r7, sl
 801daa2:	f823 7b02 	strh.w	r7, [r3], #2
 801daa6:	930b      	str	r3, [sp, #44]	@ 0x2c
 801daa8:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801daaa:	449b      	add	fp, r3
 801daac:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801daae:	441d      	add	r5, r3
 801dab0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dab2:	3b01      	subs	r3, #1
 801dab4:	9309      	str	r3, [sp, #36]	@ 0x24
 801dab6:	e714      	b.n	801d8e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801dab8:	b149      	cbz	r1, 801dace <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801daba:	5cba      	ldrb	r2, [r7, r2]
 801dabc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801dac0:	4422      	add	r2, r4
 801dac2:	4660      	mov	r0, ip
 801dac4:	4666      	mov	r6, ip
 801dac6:	e7a5      	b.n	801da14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801dac8:	4660      	mov	r0, ip
 801daca:	4662      	mov	r2, ip
 801dacc:	e7a2      	b.n	801da14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801dace:	4660      	mov	r0, ip
 801dad0:	4662      	mov	r2, ip
 801dad2:	e7f7      	b.n	801dac4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801dad4:	b00f      	add	sp, #60	@ 0x3c
 801dad6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dada <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801dada:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dade:	b085      	sub	sp, #20
 801dae0:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801dae4:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801dae8:	9102      	str	r1, [sp, #8]
 801daea:	2c00      	cmp	r4, #0
 801daec:	fb04 710c 	mla	r1, r4, ip, r7
 801daf0:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801daf4:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801daf8:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801dafc:	eb02 0e01 	add.w	lr, r2, r1
 801db00:	f2c0 8122 	blt.w	801dd48 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801db04:	45a0      	cmp	r8, r4
 801db06:	f340 811f 	ble.w	801dd48 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801db0a:	2f00      	cmp	r7, #0
 801db0c:	f2c0 811a 	blt.w	801dd44 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801db10:	45bc      	cmp	ip, r7
 801db12:	f340 8117 	ble.w	801dd44 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801db16:	5c52      	ldrb	r2, [r2, r1]
 801db18:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801db1c:	1c7a      	adds	r2, r7, #1
 801db1e:	f100 8116 	bmi.w	801dd4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801db22:	4594      	cmp	ip, r2
 801db24:	f340 8113 	ble.w	801dd4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801db28:	2e00      	cmp	r6, #0
 801db2a:	f000 8112 	beq.w	801dd52 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801db2e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801db32:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801db36:	3401      	adds	r4, #1
 801db38:	f100 810f 	bmi.w	801dd5a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801db3c:	45a0      	cmp	r8, r4
 801db3e:	f340 810c 	ble.w	801dd5a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801db42:	2800      	cmp	r0, #0
 801db44:	f000 810c 	beq.w	801dd60 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801db48:	2f00      	cmp	r7, #0
 801db4a:	f2c0 8104 	blt.w	801dd56 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801db4e:	45bc      	cmp	ip, r7
 801db50:	f340 8101 	ble.w	801dd56 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801db54:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801db58:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801db5c:	3701      	adds	r7, #1
 801db5e:	f100 8102 	bmi.w	801dd66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801db62:	45bc      	cmp	ip, r7
 801db64:	f340 80ff 	ble.w	801dd66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801db68:	2e00      	cmp	r6, #0
 801db6a:	f000 80fe 	beq.w	801dd6a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801db6e:	44f4      	add	ip, lr
 801db70:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801db74:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801db78:	b2b6      	uxth	r6, r6
 801db7a:	b280      	uxth	r0, r0
 801db7c:	fb00 fe06 	mul.w	lr, r0, r6
 801db80:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801db84:	0136      	lsls	r6, r6, #4
 801db86:	eba6 070e 	sub.w	r7, r6, lr
 801db8a:	b280      	uxth	r0, r0
 801db8c:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801db90:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801db94:	b2bf      	uxth	r7, r7
 801db96:	1a1b      	subs	r3, r3, r0
 801db98:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801db9c:	b29b      	uxth	r3, r3
 801db9e:	fb0a f607 	mul.w	r6, sl, r7
 801dba2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801dba6:	fb0b 6603 	mla	r6, fp, r3, r6
 801dbaa:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801dbae:	fb00 6609 	mla	r6, r0, r9, r6
 801dbb2:	fb0e 6608 	mla	r6, lr, r8, r6
 801dbb6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801dbba:	9600      	str	r6, [sp, #0]
 801dbbc:	2e00      	cmp	r6, #0
 801dbbe:	f000 80be 	beq.w	801dd3e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801dbc2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801dbc6:	fb0b fc0c 	mul.w	ip, fp, ip
 801dbca:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801dbce:	fb0b f505 	mul.w	r5, fp, r5
 801dbd2:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801dbd6:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801dbda:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801dbde:	44dc      	add	ip, fp
 801dbe0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dbe4:	9501      	str	r5, [sp, #4]
 801dbe6:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801dbea:	9503      	str	r5, [sp, #12]
 801dbec:	9d01      	ldr	r5, [sp, #4]
 801dbee:	9e02      	ldr	r6, [sp, #8]
 801dbf0:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801dbf4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801dbf8:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801dbfc:	fb0a fc0c 	mul.w	ip, sl, ip
 801dc00:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801dc04:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801dc08:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801dc0c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801dc10:	4465      	add	r5, ip
 801dc12:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801dc16:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801dc1a:	fb09 fc0c 	mul.w	ip, r9, ip
 801dc1e:	fb09 f904 	mul.w	r9, r9, r4
 801dc22:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801dc26:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801dc2a:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801dc2e:	fb08 f404 	mul.w	r4, r8, r4
 801dc32:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801dc36:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801dc3a:	fb08 f802 	mul.w	r8, r8, r2
 801dc3e:	fb0a fa01 	mul.w	sl, sl, r1
 801dc42:	0a22      	lsrs	r2, r4, #8
 801dc44:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801dc48:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801dc4c:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801dc50:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801dc54:	4414      	add	r4, r2
 801dc56:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801dc5a:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801dc5e:	0a2d      	lsrs	r5, r5, #8
 801dc60:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801dc64:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801dc68:	9a03      	ldr	r2, [sp, #12]
 801dc6a:	8836      	ldrh	r6, [r6, #0]
 801dc6c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801dc70:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801dc74:	437d      	muls	r5, r7
 801dc76:	4461      	add	r1, ip
 801dc78:	0a24      	lsrs	r4, r4, #8
 801dc7a:	fb02 5503 	mla	r5, r2, r3, r5
 801dc7e:	0a09      	lsrs	r1, r1, #8
 801dc80:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801dc84:	fb04 540e 	mla	r4, r4, lr, r5
 801dc88:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801dc8c:	fb01 4100 	mla	r1, r1, r0, r4
 801dc90:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dc94:	0a09      	lsrs	r1, r1, #8
 801dc96:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801dc9a:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801dc9e:	fb07 f70a 	mul.w	r7, r7, sl
 801dca2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801dca6:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801dcaa:	fb03 7101 	mla	r1, r3, r1, r7
 801dcae:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801dcb2:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801dcb6:	fb0e 1e08 	mla	lr, lr, r8, r1
 801dcba:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801dcbe:	fb00 e101 	mla	r1, r0, r1, lr
 801dcc2:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801dcc6:	9a00      	ldr	r2, [sp, #0]
 801dcc8:	b287      	uxth	r7, r0
 801dcca:	437a      	muls	r2, r7
 801dccc:	0a09      	lsrs	r1, r1, #8
 801dcce:	1c53      	adds	r3, r2, #1
 801dcd0:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801dcd4:	4321      	orrs	r1, r4
 801dcd6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801dcda:	1235      	asrs	r5, r6, #8
 801dcdc:	0c0a      	lsrs	r2, r1, #16
 801dcde:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801dce2:	b2db      	uxtb	r3, r3
 801dce4:	fb12 f207 	smulbb	r2, r2, r7
 801dce8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801dcec:	fb05 2503 	mla	r5, r5, r3, r2
 801dcf0:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801dcf4:	10f2      	asrs	r2, r6, #3
 801dcf6:	b2c8      	uxtb	r0, r1
 801dcf8:	00f6      	lsls	r6, r6, #3
 801dcfa:	fb14 f407 	smulbb	r4, r4, r7
 801dcfe:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801dd02:	b2f6      	uxtb	r6, r6
 801dd04:	fb10 f007 	smulbb	r0, r0, r7
 801dd08:	fb02 4203 	mla	r2, r2, r3, r4
 801dd0c:	b2ad      	uxth	r5, r5
 801dd0e:	fb06 0303 	mla	r3, r6, r3, r0
 801dd12:	b299      	uxth	r1, r3
 801dd14:	b294      	uxth	r4, r2
 801dd16:	1c6b      	adds	r3, r5, #1
 801dd18:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801dd1c:	1c62      	adds	r2, r4, #1
 801dd1e:	1c4b      	adds	r3, r1, #1
 801dd20:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801dd24:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801dd28:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801dd2c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801dd30:	0952      	lsrs	r2, r2, #5
 801dd32:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dd36:	432b      	orrs	r3, r5
 801dd38:	4313      	orrs	r3, r2
 801dd3a:	9a02      	ldr	r2, [sp, #8]
 801dd3c:	8013      	strh	r3, [r2, #0]
 801dd3e:	b005      	add	sp, #20
 801dd40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dd44:	2500      	movs	r5, #0
 801dd46:	e6e9      	b.n	801db1c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801dd48:	2100      	movs	r1, #0
 801dd4a:	460d      	mov	r5, r1
 801dd4c:	e6f3      	b.n	801db36 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801dd4e:	2100      	movs	r1, #0
 801dd50:	e6f1      	b.n	801db36 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801dd52:	4631      	mov	r1, r6
 801dd54:	e6ef      	b.n	801db36 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801dd56:	2400      	movs	r4, #0
 801dd58:	e700      	b.n	801db5c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801dd5a:	2200      	movs	r2, #0
 801dd5c:	4614      	mov	r4, r2
 801dd5e:	e70b      	b.n	801db78 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801dd60:	4602      	mov	r2, r0
 801dd62:	4604      	mov	r4, r0
 801dd64:	e708      	b.n	801db78 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801dd66:	2200      	movs	r2, #0
 801dd68:	e706      	b.n	801db78 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801dd6a:	4632      	mov	r2, r6
 801dd6c:	e704      	b.n	801db78 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801dd6e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dd6e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd72:	b09f      	sub	sp, #124	@ 0x7c
 801dd74:	921b      	str	r2, [sp, #108]	@ 0x6c
 801dd76:	9309      	str	r3, [sp, #36]	@ 0x24
 801dd78:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801dd7a:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801dd7e:	931c      	str	r3, [sp, #112]	@ 0x70
 801dd80:	9119      	str	r1, [sp, #100]	@ 0x64
 801dd82:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801dd86:	901d      	str	r0, [sp, #116]	@ 0x74
 801dd88:	6850      	ldr	r0, [r2, #4]
 801dd8a:	6812      	ldr	r2, [r2, #0]
 801dd8c:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801dd8e:	fb00 1303 	mla	r3, r0, r3, r1
 801dd92:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801dd96:	930c      	str	r3, [sp, #48]	@ 0x30
 801dd98:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801dd9a:	681b      	ldr	r3, [r3, #0]
 801dd9c:	9312      	str	r3, [sp, #72]	@ 0x48
 801dd9e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801dda0:	685e      	ldr	r6, [r3, #4]
 801dda2:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801dda6:	930d      	str	r3, [sp, #52]	@ 0x34
 801dda8:	3604      	adds	r6, #4
 801ddaa:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801ddac:	2b00      	cmp	r3, #0
 801ddae:	dc03      	bgt.n	801ddb8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ddb0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801ddb2:	2b00      	cmp	r3, #0
 801ddb4:	f340 8388 	ble.w	801e4c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801ddb8:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801ddba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ddbe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ddc2:	1e48      	subs	r0, r1, #1
 801ddc4:	1e57      	subs	r7, r2, #1
 801ddc6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ddc8:	2b00      	cmp	r3, #0
 801ddca:	f340 8195 	ble.w	801e0f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ddce:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801ddd0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ddd4:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ddd8:	d406      	bmi.n	801dde8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ddda:	4584      	cmp	ip, r0
 801dddc:	da04      	bge.n	801dde8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ddde:	2b00      	cmp	r3, #0
 801dde0:	db02      	blt.n	801dde8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801dde2:	42bb      	cmp	r3, r7
 801dde4:	f2c0 8189 	blt.w	801e0fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801dde8:	f11c 0c01 	adds.w	ip, ip, #1
 801ddec:	f100 8177 	bmi.w	801e0de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ddf0:	4561      	cmp	r1, ip
 801ddf2:	f2c0 8174 	blt.w	801e0de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ddf6:	3301      	adds	r3, #1
 801ddf8:	f100 8171 	bmi.w	801e0de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ddfc:	429a      	cmp	r2, r3
 801ddfe:	f2c0 816e 	blt.w	801e0de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801de02:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801de04:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801de06:	931a      	str	r3, [sp, #104]	@ 0x68
 801de08:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801de0a:	2b00      	cmp	r3, #0
 801de0c:	f340 8193 	ble.w	801e136 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801de10:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801de12:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801de16:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801de18:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801de1c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801de1e:	141b      	asrs	r3, r3, #16
 801de20:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801de24:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801de28:	f100 81d6 	bmi.w	801e1d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801de2c:	f100 38ff 	add.w	r8, r0, #4294967295
 801de30:	4543      	cmp	r3, r8
 801de32:	f280 81d1 	bge.w	801e1d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801de36:	f1bc 0f00 	cmp.w	ip, #0
 801de3a:	f2c0 81cd 	blt.w	801e1d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801de3e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801de42:	45c4      	cmp	ip, r8
 801de44:	f280 81c8 	bge.w	801e1d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801de48:	b200      	sxth	r0, r0
 801de4a:	fb0c 3300 	mla	r3, ip, r0, r3
 801de4e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801de50:	eb04 0803 	add.w	r8, r4, r3
 801de54:	5ce3      	ldrb	r3, [r4, r3]
 801de56:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801de5a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801de5e:	2a00      	cmp	r2, #0
 801de60:	f000 81af 	beq.w	801e1c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801de64:	f898 c001 	ldrb.w	ip, [r8, #1]
 801de68:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801de6c:	940e      	str	r4, [sp, #56]	@ 0x38
 801de6e:	0e24      	lsrs	r4, r4, #24
 801de70:	9415      	str	r4, [sp, #84]	@ 0x54
 801de72:	b179      	cbz	r1, 801de94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801de74:	eb08 0c00 	add.w	ip, r8, r0
 801de78:	f818 0000 	ldrb.w	r0, [r8, r0]
 801de7c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801de80:	900a      	str	r0, [sp, #40]	@ 0x28
 801de82:	0e00      	lsrs	r0, r0, #24
 801de84:	9013      	str	r0, [sp, #76]	@ 0x4c
 801de86:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801de8a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801de8e:	900f      	str	r0, [sp, #60]	@ 0x3c
 801de90:	0e00      	lsrs	r0, r0, #24
 801de92:	9016      	str	r0, [sp, #88]	@ 0x58
 801de94:	b292      	uxth	r2, r2
 801de96:	b289      	uxth	r1, r1
 801de98:	fb02 f901 	mul.w	r9, r2, r1
 801de9c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801dea0:	0112      	lsls	r2, r2, #4
 801dea2:	eba2 0809 	sub.w	r8, r2, r9
 801dea6:	b289      	uxth	r1, r1
 801dea8:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801deac:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801deae:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801deb0:	fa1f f888 	uxth.w	r8, r8
 801deb4:	1a52      	subs	r2, r2, r1
 801deb6:	b292      	uxth	r2, r2
 801deb8:	fb08 f000 	mul.w	r0, r8, r0
 801debc:	fb02 000e 	mla	r0, r2, lr, r0
 801dec0:	fb01 0004 	mla	r0, r1, r4, r0
 801dec4:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801dec6:	fb09 0004 	mla	r0, r9, r4, r0
 801deca:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801dece:	2800      	cmp	r0, #0
 801ded0:	f000 80fa 	beq.w	801e0c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ded4:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801ded8:	d01b      	beq.n	801df12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801deda:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801dede:	fb0e fa0a 	mul.w	sl, lr, sl
 801dee2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801dee6:	fb0e fe03 	mul.w	lr, lr, r3
 801deea:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801deee:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801def2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801def6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801defa:	4453      	add	r3, sl
 801defc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801df00:	0a1b      	lsrs	r3, r3, #8
 801df02:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801df06:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801df0a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801df0e:	ea43 030c 	orr.w	r3, r3, ip
 801df12:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801df14:	2cff      	cmp	r4, #255	@ 0xff
 801df16:	d021      	beq.n	801df5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801df18:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801df1a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801df1e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801df20:	fb04 fb0b 	mul.w	fp, r4, fp
 801df24:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801df26:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801df2a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801df2c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801df30:	fb04 fa0a 	mul.w	sl, r4, sl
 801df34:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801df38:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801df3c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801df40:	44de      	add	lr, fp
 801df42:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801df46:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801df4a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801df4e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801df52:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801df56:	ea4e 040a 	orr.w	r4, lr, sl
 801df5a:	940e      	str	r4, [sp, #56]	@ 0x38
 801df5c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801df5e:	2cff      	cmp	r4, #255	@ 0xff
 801df60:	d021      	beq.n	801dfa6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801df62:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801df64:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801df68:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801df6a:	fb04 fb0b 	mul.w	fp, r4, fp
 801df6e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801df70:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801df74:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801df76:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801df7a:	fb04 fa0a 	mul.w	sl, r4, sl
 801df7e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801df82:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801df86:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801df8a:	44de      	add	lr, fp
 801df8c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801df90:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801df94:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801df98:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801df9c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801dfa0:	ea4e 040a 	orr.w	r4, lr, sl
 801dfa4:	940a      	str	r4, [sp, #40]	@ 0x28
 801dfa6:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801dfa8:	2cff      	cmp	r4, #255	@ 0xff
 801dfaa:	d021      	beq.n	801dff0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801dfac:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801dfae:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801dfb2:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801dfb4:	fb04 fb0b 	mul.w	fp, r4, fp
 801dfb8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801dfba:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801dfbe:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801dfc0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801dfc4:	fb04 fa0a 	mul.w	sl, r4, sl
 801dfc8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801dfcc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801dfd0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801dfd4:	44de      	add	lr, fp
 801dfd6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801dfda:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801dfde:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dfe2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801dfe6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801dfea:	ea4e 040a 	orr.w	r4, lr, sl
 801dfee:	940f      	str	r4, [sp, #60]	@ 0x3c
 801dff0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801dff2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801dff6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801dff8:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801dffc:	fb08 fc0c 	mul.w	ip, r8, ip
 801e000:	fb02 cc0e 	mla	ip, r2, lr, ip
 801e004:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801e008:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801e00a:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e00e:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801e012:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801e014:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e018:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801e01c:	fb08 f80e 	mul.w	r8, r8, lr
 801e020:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e024:	fb02 8303 	mla	r3, r2, r3, r8
 801e028:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801e02a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801e02c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801e030:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801e032:	fb01 330a 	mla	r3, r1, sl, r3
 801e036:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801e03a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801e03c:	fb09 3901 	mla	r9, r9, r1, r3
 801e040:	4342      	muls	r2, r0
 801e042:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e046:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e04a:	883b      	ldrh	r3, [r7, #0]
 801e04c:	1c50      	adds	r0, r2, #1
 801e04e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e052:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801e056:	ea4c 0c09 	orr.w	ip, ip, r9
 801e05a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e05e:	1219      	asrs	r1, r3, #8
 801e060:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e064:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e068:	b2c0      	uxtb	r0, r0
 801e06a:	fb12 f204 	smulbb	r2, r2, r4
 801e06e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e072:	fb01 2100 	mla	r1, r1, r0, r2
 801e076:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e07a:	10da      	asrs	r2, r3, #3
 801e07c:	fa5f fc8c 	uxtb.w	ip, ip
 801e080:	00db      	lsls	r3, r3, #3
 801e082:	fb1c fc04 	smulbb	ip, ip, r4
 801e086:	b2db      	uxtb	r3, r3
 801e088:	b289      	uxth	r1, r1
 801e08a:	fb03 c300 	mla	r3, r3, r0, ip
 801e08e:	fa1f fc83 	uxth.w	ip, r3
 801e092:	1c4b      	adds	r3, r1, #1
 801e094:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e098:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e09c:	fb1e fe04 	smulbb	lr, lr, r4
 801e0a0:	f10c 0301 	add.w	r3, ip, #1
 801e0a4:	fb02 e200 	mla	r2, r2, r0, lr
 801e0a8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e0ac:	b292      	uxth	r2, r2
 801e0ae:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801e0b2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e0b6:	430b      	orrs	r3, r1
 801e0b8:	1c51      	adds	r1, r2, #1
 801e0ba:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e0be:	0952      	lsrs	r2, r2, #5
 801e0c0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e0c4:	4313      	orrs	r3, r2
 801e0c6:	803b      	strh	r3, [r7, #0]
 801e0c8:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801e0ca:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801e0cc:	441a      	add	r2, r3
 801e0ce:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e0d0:	9229      	str	r2, [sp, #164]	@ 0xa4
 801e0d2:	441d      	add	r5, r3
 801e0d4:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801e0d6:	3b01      	subs	r3, #1
 801e0d8:	3702      	adds	r7, #2
 801e0da:	931a      	str	r3, [sp, #104]	@ 0x68
 801e0dc:	e694      	b.n	801de08 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801e0de:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801e0e0:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801e0e2:	441c      	add	r4, r3
 801e0e4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e0e6:	9429      	str	r4, [sp, #164]	@ 0xa4
 801e0e8:	441d      	add	r5, r3
 801e0ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e0ec:	3b01      	subs	r3, #1
 801e0ee:	9309      	str	r3, [sp, #36]	@ 0x24
 801e0f0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e0f2:	3302      	adds	r3, #2
 801e0f4:	930c      	str	r3, [sp, #48]	@ 0x30
 801e0f6:	e666      	b.n	801ddc6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801e0f8:	d024      	beq.n	801e144 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801e0fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e0fc:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801e0fe:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801e100:	3b01      	subs	r3, #1
 801e102:	fb00 4003 	mla	r0, r0, r3, r4
 801e106:	1400      	asrs	r0, r0, #16
 801e108:	f53f ae7b 	bmi.w	801de02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e10c:	3901      	subs	r1, #1
 801e10e:	4288      	cmp	r0, r1
 801e110:	f6bf ae77 	bge.w	801de02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e114:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801e116:	fb01 5303 	mla	r3, r1, r3, r5
 801e11a:	141b      	asrs	r3, r3, #16
 801e11c:	f53f ae71 	bmi.w	801de02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e120:	3a01      	subs	r2, #1
 801e122:	4293      	cmp	r3, r2
 801e124:	f6bf ae6d 	bge.w	801de02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e128:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801e12c:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801e130:	f1bb 0f00 	cmp.w	fp, #0
 801e134:	dc70      	bgt.n	801e218 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801e136:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e138:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e13c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e13e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801e142:	930c      	str	r3, [sp, #48]	@ 0x30
 801e144:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801e146:	2b00      	cmp	r3, #0
 801e148:	f340 81be 	ble.w	801e4c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801e14c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e150:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e154:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e158:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e15a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e15e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e162:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e166:	eef0 6a62 	vmov.f32	s13, s5
 801e16a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e16e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e172:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e176:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801e17a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e17e:	eef0 6a43 	vmov.f32	s13, s6
 801e182:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e186:	ee12 2a90 	vmov	r2, s5
 801e18a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e18e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e192:	ee13 2a10 	vmov	r2, s6
 801e196:	932b      	str	r3, [sp, #172]	@ 0xac
 801e198:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e19a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e19e:	932c      	str	r3, [sp, #176]	@ 0xb0
 801e1a0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801e1a2:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801e1a4:	3b01      	subs	r3, #1
 801e1a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e1aa:	9319      	str	r3, [sp, #100]	@ 0x64
 801e1ac:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e1ae:	bf08      	it	eq
 801e1b0:	4613      	moveq	r3, r2
 801e1b2:	ee16 5a90 	vmov	r5, s13
 801e1b6:	9309      	str	r3, [sp, #36]	@ 0x24
 801e1b8:	eeb0 3a67 	vmov.f32	s6, s15
 801e1bc:	eef0 2a47 	vmov.f32	s5, s14
 801e1c0:	e5f3      	b.n	801ddaa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801e1c2:	2900      	cmp	r1, #0
 801e1c4:	f43f ae66 	beq.w	801de94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801e1c8:	f818 0000 	ldrb.w	r0, [r8, r0]
 801e1cc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801e1d0:	900a      	str	r0, [sp, #40]	@ 0x28
 801e1d2:	0e00      	lsrs	r0, r0, #24
 801e1d4:	9013      	str	r0, [sp, #76]	@ 0x4c
 801e1d6:	e65d      	b.n	801de94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801e1d8:	f113 0801 	adds.w	r8, r3, #1
 801e1dc:	f53f af74 	bmi.w	801e0c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e1e0:	4540      	cmp	r0, r8
 801e1e2:	f6ff af71 	blt.w	801e0c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e1e6:	f11c 0801 	adds.w	r8, ip, #1
 801e1ea:	f53f af6d 	bmi.w	801e0c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e1ee:	45c6      	cmp	lr, r8
 801e1f0:	f6ff af6a 	blt.w	801e0c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e1f4:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801e1f6:	9302      	str	r3, [sp, #8]
 801e1f8:	b200      	sxth	r0, r0
 801e1fa:	fa0f f38e 	sxth.w	r3, lr
 801e1fe:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801e202:	e9cd c203 	strd	ip, r2, [sp, #12]
 801e206:	9301      	str	r3, [sp, #4]
 801e208:	9000      	str	r0, [sp, #0]
 801e20a:	4633      	mov	r3, r6
 801e20c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801e20e:	981d      	ldr	r0, [sp, #116]	@ 0x74
 801e210:	4639      	mov	r1, r7
 801e212:	f7ff fc62 	bl	801dada <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801e216:	e757      	b.n	801e0c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e218:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801e21a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801e21c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e220:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801e222:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e226:	1427      	asrs	r7, r4, #16
 801e228:	142b      	asrs	r3, r5, #16
 801e22a:	fb01 7303 	mla	r3, r1, r3, r7
 801e22e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801e230:	18e7      	adds	r7, r4, r3
 801e232:	5ce3      	ldrb	r3, [r4, r3]
 801e234:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801e238:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801e23c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e240:	2a00      	cmp	r2, #0
 801e242:	f000 8137 	beq.w	801e4b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801e246:	f897 e001 	ldrb.w	lr, [r7, #1]
 801e24a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801e24e:	9410      	str	r4, [sp, #64]	@ 0x40
 801e250:	0e24      	lsrs	r4, r4, #24
 801e252:	9417      	str	r4, [sp, #92]	@ 0x5c
 801e254:	b170      	cbz	r0, 801e274 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801e256:	eb07 0e01 	add.w	lr, r7, r1
 801e25a:	5c79      	ldrb	r1, [r7, r1]
 801e25c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e260:	910b      	str	r1, [sp, #44]	@ 0x2c
 801e262:	0e09      	lsrs	r1, r1, #24
 801e264:	9114      	str	r1, [sp, #80]	@ 0x50
 801e266:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801e26a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e26e:	9111      	str	r1, [sp, #68]	@ 0x44
 801e270:	0e09      	lsrs	r1, r1, #24
 801e272:	9118      	str	r1, [sp, #96]	@ 0x60
 801e274:	b292      	uxth	r2, r2
 801e276:	b280      	uxth	r0, r0
 801e278:	fb02 f800 	mul.w	r8, r2, r0
 801e27c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e280:	0112      	lsls	r2, r2, #4
 801e282:	eba2 0e08 	sub.w	lr, r2, r8
 801e286:	b280      	uxth	r0, r0
 801e288:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801e28c:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801e28e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801e290:	fa1f fe8e 	uxth.w	lr, lr
 801e294:	1a12      	subs	r2, r2, r0
 801e296:	b292      	uxth	r2, r2
 801e298:	fb0e f101 	mul.w	r1, lr, r1
 801e29c:	fb02 110c 	mla	r1, r2, ip, r1
 801e2a0:	fb00 1104 	mla	r1, r0, r4, r1
 801e2a4:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801e2a6:	fb08 1104 	mla	r1, r8, r4, r1
 801e2aa:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e2ae:	2900      	cmp	r1, #0
 801e2b0:	f000 80f5 	beq.w	801e49e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e2b4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801e2b8:	d019      	beq.n	801e2ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801e2ba:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801e2be:	fb0c fa0a 	mul.w	sl, ip, sl
 801e2c2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e2c6:	fb0c fc03 	mul.w	ip, ip, r3
 801e2ca:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e2ce:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e2d2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801e2d6:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801e2da:	4453      	add	r3, sl
 801e2dc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e2e0:	0a1b      	lsrs	r3, r3, #8
 801e2e2:	0a3f      	lsrs	r7, r7, #8
 801e2e4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e2e8:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801e2ec:	433b      	orrs	r3, r7
 801e2ee:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801e2f0:	2cff      	cmp	r4, #255	@ 0xff
 801e2f2:	d020      	beq.n	801e336 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801e2f4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801e2f6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801e2fa:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801e2fc:	4367      	muls	r7, r4
 801e2fe:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801e300:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e304:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801e306:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e30a:	fb04 fa0a 	mul.w	sl, r4, sl
 801e30e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e312:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e316:	44bc      	add	ip, r7
 801e318:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e31c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e320:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e324:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e328:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e32c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e330:	ea4c 040a 	orr.w	r4, ip, sl
 801e334:	9410      	str	r4, [sp, #64]	@ 0x40
 801e336:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801e338:	2cff      	cmp	r4, #255	@ 0xff
 801e33a:	d020      	beq.n	801e37e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801e33c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e33e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801e342:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801e344:	4367      	muls	r7, r4
 801e346:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e348:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e34c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801e34e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e352:	fb04 fa0a 	mul.w	sl, r4, sl
 801e356:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e35a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e35e:	44bc      	add	ip, r7
 801e360:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e364:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e368:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e36c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e370:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e374:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e378:	ea4c 040a 	orr.w	r4, ip, sl
 801e37c:	940b      	str	r4, [sp, #44]	@ 0x2c
 801e37e:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801e380:	2cff      	cmp	r4, #255	@ 0xff
 801e382:	d020      	beq.n	801e3c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801e384:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801e386:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801e38a:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801e38c:	4367      	muls	r7, r4
 801e38e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801e390:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e394:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801e396:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e39a:	fb04 fa0a 	mul.w	sl, r4, sl
 801e39e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e3a2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e3a6:	44bc      	add	ip, r7
 801e3a8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e3ac:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e3b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e3b4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e3b8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e3bc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e3c0:	ea4c 040a 	orr.w	r4, ip, sl
 801e3c4:	9411      	str	r4, [sp, #68]	@ 0x44
 801e3c6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801e3c8:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801e3cc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e3ce:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801e3d2:	fb0e f707 	mul.w	r7, lr, r7
 801e3d6:	fb02 770c 	mla	r7, r2, ip, r7
 801e3da:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e3de:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801e3e0:	fb00 770c 	mla	r7, r0, ip, r7
 801e3e4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e3e8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801e3ea:	fb08 770c 	mla	r7, r8, ip, r7
 801e3ee:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801e3f2:	fb0e fe0c 	mul.w	lr, lr, ip
 801e3f6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e3fa:	fb02 e303 	mla	r3, r2, r3, lr
 801e3fe:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e400:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801e402:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801e406:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801e408:	fb00 330a 	mla	r3, r0, sl, r3
 801e40c:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801e410:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e414:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e416:	f8b9 0000 	ldrh.w	r0, [r9]
 801e41a:	434b      	muls	r3, r1
 801e41c:	0a3f      	lsrs	r7, r7, #8
 801e41e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e422:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e426:	1c59      	adds	r1, r3, #1
 801e428:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801e42c:	ea47 070c 	orr.w	r7, r7, ip
 801e430:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801e434:	1202      	asrs	r2, r0, #8
 801e436:	0c3b      	lsrs	r3, r7, #16
 801e438:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801e43c:	b2c9      	uxtb	r1, r1
 801e43e:	fb13 f304 	smulbb	r3, r3, r4
 801e442:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801e446:	fb02 3201 	mla	r2, r2, r1, r3
 801e44a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801e44e:	10c3      	asrs	r3, r0, #3
 801e450:	b2ff      	uxtb	r7, r7
 801e452:	00c0      	lsls	r0, r0, #3
 801e454:	b292      	uxth	r2, r2
 801e456:	fb1c fc04 	smulbb	ip, ip, r4
 801e45a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801e45e:	b2c0      	uxtb	r0, r0
 801e460:	fb17 f704 	smulbb	r7, r7, r4
 801e464:	fb03 c301 	mla	r3, r3, r1, ip
 801e468:	fb00 7001 	mla	r0, r0, r1, r7
 801e46c:	f102 0c01 	add.w	ip, r2, #1
 801e470:	b280      	uxth	r0, r0
 801e472:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801e476:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801e47a:	1c42      	adds	r2, r0, #1
 801e47c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801e480:	b29b      	uxth	r3, r3
 801e482:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e486:	ea42 020c 	orr.w	r2, r2, ip
 801e48a:	f103 0c01 	add.w	ip, r3, #1
 801e48e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801e492:	095b      	lsrs	r3, r3, #5
 801e494:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e498:	431a      	orrs	r2, r3
 801e49a:	f8a9 2000 	strh.w	r2, [r9]
 801e49e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801e4a0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801e4a2:	441a      	add	r2, r3
 801e4a4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e4a6:	9229      	str	r2, [sp, #164]	@ 0xa4
 801e4a8:	f109 0902 	add.w	r9, r9, #2
 801e4ac:	441d      	add	r5, r3
 801e4ae:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e4b2:	e63d      	b.n	801e130 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801e4b4:	2800      	cmp	r0, #0
 801e4b6:	f43f aedd 	beq.w	801e274 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801e4ba:	5c79      	ldrb	r1, [r7, r1]
 801e4bc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e4c0:	910b      	str	r1, [sp, #44]	@ 0x2c
 801e4c2:	0e09      	lsrs	r1, r1, #24
 801e4c4:	9114      	str	r1, [sp, #80]	@ 0x50
 801e4c6:	e6d5      	b.n	801e274 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801e4c8:	b01f      	add	sp, #124	@ 0x7c
 801e4ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e4ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801e4ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e4d2:	b089      	sub	sp, #36	@ 0x24
 801e4d4:	9101      	str	r1, [sp, #4]
 801e4d6:	9801      	ldr	r0, [sp, #4]
 801e4d8:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801e4dc:	8800      	ldrh	r0, [r0, #0]
 801e4de:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801e4e2:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801e4e6:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801e4ea:	1206      	asrs	r6, r0, #8
 801e4ec:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 801e4f0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801e4f4:	9602      	str	r6, [sp, #8]
 801e4f6:	10c6      	asrs	r6, r0, #3
 801e4f8:	00c0      	lsls	r0, r0, #3
 801e4fa:	b2c0      	uxtb	r0, r0
 801e4fc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801e500:	9004      	str	r0, [sp, #16]
 801e502:	2f00      	cmp	r7, #0
 801e504:	fb07 100c 	mla	r0, r7, ip, r1
 801e508:	9603      	str	r6, [sp, #12]
 801e50a:	eb02 0e00 	add.w	lr, r2, r0
 801e50e:	f2c0 810a 	blt.w	801e726 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801e512:	45b8      	cmp	r8, r7
 801e514:	f340 8107 	ble.w	801e726 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801e518:	2900      	cmp	r1, #0
 801e51a:	f2c0 8102 	blt.w	801e722 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801e51e:	458c      	cmp	ip, r1
 801e520:	f340 80ff 	ble.w	801e722 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801e524:	5c12      	ldrb	r2, [r2, r0]
 801e526:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801e52a:	1c4a      	adds	r2, r1, #1
 801e52c:	f100 80fe 	bmi.w	801e72c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801e530:	4594      	cmp	ip, r2
 801e532:	f340 80fb 	ble.w	801e72c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801e536:	2d00      	cmp	r5, #0
 801e538:	f000 80fa 	beq.w	801e730 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801e53c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e540:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801e544:	3701      	adds	r7, #1
 801e546:	f100 80f7 	bmi.w	801e738 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801e54a:	45b8      	cmp	r8, r7
 801e54c:	f340 80f4 	ble.w	801e738 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801e550:	2c00      	cmp	r4, #0
 801e552:	f000 80f4 	beq.w	801e73e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801e556:	2900      	cmp	r1, #0
 801e558:	eb0e 020c 	add.w	r2, lr, ip
 801e55c:	f2c0 80ea 	blt.w	801e734 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801e560:	458c      	cmp	ip, r1
 801e562:	f340 80e7 	ble.w	801e734 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801e566:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801e56a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801e56e:	3101      	adds	r1, #1
 801e570:	f100 80e8 	bmi.w	801e744 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801e574:	458c      	cmp	ip, r1
 801e576:	f340 80e5 	ble.w	801e744 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801e57a:	2d00      	cmp	r5, #0
 801e57c:	f000 80e4 	beq.w	801e748 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801e580:	7852      	ldrb	r2, [r2, #1]
 801e582:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801e586:	0e0b      	lsrs	r3, r1, #24
 801e588:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801e58c:	9300      	str	r3, [sp, #0]
 801e58e:	b2a4      	uxth	r4, r4
 801e590:	b2ab      	uxth	r3, r5
 801e592:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801e596:	fb03 f904 	mul.w	r9, r3, r4
 801e59a:	fb0a f505 	mul.w	r5, sl, r5
 801e59e:	011b      	lsls	r3, r3, #4
 801e5a0:	eba3 0e09 	sub.w	lr, r3, r9
 801e5a4:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801e5a8:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 801e5ac:	0a28      	lsrs	r0, r5, #8
 801e5ae:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801e5b2:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801e5b6:	4405      	add	r5, r0
 801e5b8:	0a2d      	lsrs	r5, r5, #8
 801e5ba:	fb0a f303 	mul.w	r3, sl, r3
 801e5be:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801e5c2:	9005      	str	r0, [sp, #20]
 801e5c4:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801e5c8:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801e5cc:	0a1b      	lsrs	r3, r3, #8
 801e5ce:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801e5d2:	9306      	str	r3, [sp, #24]
 801e5d4:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801e5d8:	fb0b f303 	mul.w	r3, fp, r3
 801e5dc:	0a1d      	lsrs	r5, r3, #8
 801e5de:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801e5e2:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801e5e6:	fb0b f606 	mul.w	r6, fp, r6
 801e5ea:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801e5ee:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801e5f2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e5f6:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801e5fa:	fb08 f707 	mul.w	r7, r8, r7
 801e5fe:	441d      	add	r5, r3
 801e600:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801e604:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801e608:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801e60c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801e610:	fb08 fc0c 	mul.w	ip, r8, ip
 801e614:	0a1b      	lsrs	r3, r3, #8
 801e616:	9307      	str	r3, [sp, #28]
 801e618:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801e61c:	0e0b      	lsrs	r3, r1, #24
 801e61e:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801e622:	435f      	muls	r7, r3
 801e624:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e628:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801e62c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801e630:	4460      	add	r0, ip
 801e632:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e636:	b2a4      	uxth	r4, r4
 801e638:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e63c:	0a2d      	lsrs	r5, r5, #8
 801e63e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e642:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e646:	fa1f fe8e 	uxth.w	lr, lr
 801e64a:	4359      	muls	r1, r3
 801e64c:	1b12      	subs	r2, r2, r4
 801e64e:	9b05      	ldr	r3, [sp, #20]
 801e650:	44bc      	add	ip, r7
 801e652:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e656:	b292      	uxth	r2, r2
 801e658:	fb05 f50e 	mul.w	r5, r5, lr
 801e65c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e660:	fb03 5502 	mla	r5, r3, r2, r5
 801e664:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e668:	9b06      	ldr	r3, [sp, #24]
 801e66a:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801e66e:	0a36      	lsrs	r6, r6, #8
 801e670:	0a00      	lsrs	r0, r0, #8
 801e672:	fb0c 5509 	mla	r5, ip, r9, r5
 801e676:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801e67a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801e67e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801e682:	fb00 5504 	mla	r5, r0, r4, r5
 801e686:	fb0e f606 	mul.w	r6, lr, r6
 801e68a:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 801e68e:	0a09      	lsrs	r1, r1, #8
 801e690:	9b07      	ldr	r3, [sp, #28]
 801e692:	fb02 6000 	mla	r0, r2, r0, r6
 801e696:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e69a:	fb09 0001 	mla	r0, r9, r1, r0
 801e69e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e6a2:	fb0e fe0b 	mul.w	lr, lr, fp
 801e6a6:	fb04 0003 	mla	r0, r4, r3, r0
 801e6aa:	fb02 e20a 	mla	r2, r2, sl, lr
 801e6ae:	9b00      	ldr	r3, [sp, #0]
 801e6b0:	fb04 2408 	mla	r4, r4, r8, r2
 801e6b4:	fb09 4903 	mla	r9, r9, r3, r4
 801e6b8:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801e6bc:	9b02      	ldr	r3, [sp, #8]
 801e6be:	9a04      	ldr	r2, [sp, #16]
 801e6c0:	fa5f f989 	uxtb.w	r9, r9
 801e6c4:	fb03 f109 	mul.w	r1, r3, r9
 801e6c8:	9b03      	ldr	r3, [sp, #12]
 801e6ca:	0a2d      	lsrs	r5, r5, #8
 801e6cc:	0a00      	lsrs	r0, r0, #8
 801e6ce:	fb03 f309 	mul.w	r3, r3, r9
 801e6d2:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801e6d6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e6da:	4305      	orrs	r5, r0
 801e6dc:	fb02 f909 	mul.w	r9, r2, r9
 801e6e0:	1c58      	adds	r0, r3, #1
 801e6e2:	1c4a      	adds	r2, r1, #1
 801e6e4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801e6e8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e6ec:	0a2b      	lsrs	r3, r5, #8
 801e6ee:	0c2a      	lsrs	r2, r5, #16
 801e6f0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e6f4:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801e6f8:	00db      	lsls	r3, r3, #3
 801e6fa:	0212      	lsls	r2, r2, #8
 801e6fc:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801e700:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e704:	4313      	orrs	r3, r2
 801e706:	f109 0201 	add.w	r2, r9, #1
 801e70a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801e70e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801e712:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e716:	431d      	orrs	r5, r3
 801e718:	9b01      	ldr	r3, [sp, #4]
 801e71a:	801d      	strh	r5, [r3, #0]
 801e71c:	b009      	add	sp, #36	@ 0x24
 801e71e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e722:	2000      	movs	r0, #0
 801e724:	e701      	b.n	801e52a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801e726:	2600      	movs	r6, #0
 801e728:	4630      	mov	r0, r6
 801e72a:	e70b      	b.n	801e544 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801e72c:	2600      	movs	r6, #0
 801e72e:	e709      	b.n	801e544 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801e730:	462e      	mov	r6, r5
 801e732:	e707      	b.n	801e544 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801e734:	2700      	movs	r7, #0
 801e736:	e71a      	b.n	801e56e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801e738:	2100      	movs	r1, #0
 801e73a:	460f      	mov	r7, r1
 801e73c:	e723      	b.n	801e586 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801e73e:	4621      	mov	r1, r4
 801e740:	4627      	mov	r7, r4
 801e742:	e720      	b.n	801e586 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801e744:	2100      	movs	r1, #0
 801e746:	e71e      	b.n	801e586 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801e748:	4629      	mov	r1, r5
 801e74a:	e71c      	b.n	801e586 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801e74c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e74c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e750:	b09b      	sub	sp, #108	@ 0x6c
 801e752:	9218      	str	r2, [sp, #96]	@ 0x60
 801e754:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801e756:	9116      	str	r1, [sp, #88]	@ 0x58
 801e758:	9307      	str	r3, [sp, #28]
 801e75a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801e75e:	9019      	str	r0, [sp, #100]	@ 0x64
 801e760:	6850      	ldr	r0, [r2, #4]
 801e762:	6812      	ldr	r2, [r2, #0]
 801e764:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801e766:	fb00 1303 	mla	r3, r0, r3, r1
 801e76a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e76e:	930a      	str	r3, [sp, #40]	@ 0x28
 801e770:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e772:	681b      	ldr	r3, [r3, #0]
 801e774:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e776:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e778:	685e      	ldr	r6, [r3, #4]
 801e77a:	3604      	adds	r6, #4
 801e77c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801e77e:	2b00      	cmp	r3, #0
 801e780:	dc03      	bgt.n	801e78a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801e782:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e784:	2b00      	cmp	r3, #0
 801e786:	f340 8373 	ble.w	801ee70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801e78a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e78c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e790:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e794:	1e48      	subs	r0, r1, #1
 801e796:	1e57      	subs	r7, r2, #1
 801e798:	9b07      	ldr	r3, [sp, #28]
 801e79a:	2b00      	cmp	r3, #0
 801e79c:	f340 8190 	ble.w	801eac0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801e7a0:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801e7a2:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e7a6:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e7aa:	d406      	bmi.n	801e7ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e7ac:	4584      	cmp	ip, r0
 801e7ae:	da04      	bge.n	801e7ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e7b0:	2b00      	cmp	r3, #0
 801e7b2:	db02      	blt.n	801e7ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e7b4:	42bb      	cmp	r3, r7
 801e7b6:	f2c0 8184 	blt.w	801eac2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801e7ba:	f11c 0c01 	adds.w	ip, ip, #1
 801e7be:	f100 8172 	bmi.w	801eaa6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e7c2:	4561      	cmp	r1, ip
 801e7c4:	f2c0 816f 	blt.w	801eaa6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e7c8:	3301      	adds	r3, #1
 801e7ca:	f100 816c 	bmi.w	801eaa6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e7ce:	429a      	cmp	r2, r3
 801e7d0:	f2c0 8169 	blt.w	801eaa6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e7d4:	9b07      	ldr	r3, [sp, #28]
 801e7d6:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801e7d8:	9317      	str	r3, [sp, #92]	@ 0x5c
 801e7da:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801e7dc:	2b00      	cmp	r3, #0
 801e7de:	f340 818e 	ble.w	801eafe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801e7e2:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801e7e4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e7e8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e7ea:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801e7ee:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801e7f0:	141b      	asrs	r3, r3, #16
 801e7f2:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801e7f6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801e7fa:	f100 81d1 	bmi.w	801eba0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801e7fe:	f101 38ff 	add.w	r8, r1, #4294967295
 801e802:	4543      	cmp	r3, r8
 801e804:	f280 81cc 	bge.w	801eba0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801e808:	f1bc 0f00 	cmp.w	ip, #0
 801e80c:	f2c0 81c8 	blt.w	801eba0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801e810:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e814:	45c4      	cmp	ip, r8
 801e816:	f280 81c3 	bge.w	801eba0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801e81a:	b209      	sxth	r1, r1
 801e81c:	fb0c 3301 	mla	r3, ip, r1, r3
 801e820:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801e822:	eb04 0803 	add.w	r8, r4, r3
 801e826:	5ce3      	ldrb	r3, [r4, r3]
 801e828:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801e82c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801e830:	2a00      	cmp	r2, #0
 801e832:	f000 81aa 	beq.w	801eb8a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801e836:	f898 c001 	ldrb.w	ip, [r8, #1]
 801e83a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801e83e:	940b      	str	r4, [sp, #44]	@ 0x2c
 801e840:	0e24      	lsrs	r4, r4, #24
 801e842:	9412      	str	r4, [sp, #72]	@ 0x48
 801e844:	b178      	cbz	r0, 801e866 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801e846:	eb08 0c01 	add.w	ip, r8, r1
 801e84a:	f818 1001 	ldrb.w	r1, [r8, r1]
 801e84e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e852:	9108      	str	r1, [sp, #32]
 801e854:	0e09      	lsrs	r1, r1, #24
 801e856:	9110      	str	r1, [sp, #64]	@ 0x40
 801e858:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801e85c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e860:	910c      	str	r1, [sp, #48]	@ 0x30
 801e862:	0e09      	lsrs	r1, r1, #24
 801e864:	9113      	str	r1, [sp, #76]	@ 0x4c
 801e866:	b292      	uxth	r2, r2
 801e868:	b280      	uxth	r0, r0
 801e86a:	fb02 f900 	mul.w	r9, r2, r0
 801e86e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801e872:	0112      	lsls	r2, r2, #4
 801e874:	eba2 0809 	sub.w	r8, r2, r9
 801e878:	b280      	uxth	r0, r0
 801e87a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801e87e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801e880:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801e882:	fa1f f888 	uxth.w	r8, r8
 801e886:	1a12      	subs	r2, r2, r0
 801e888:	b292      	uxth	r2, r2
 801e88a:	fb08 f101 	mul.w	r1, r8, r1
 801e88e:	fb02 110e 	mla	r1, r2, lr, r1
 801e892:	fb00 1104 	mla	r1, r0, r4, r1
 801e896:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801e898:	fb09 1104 	mla	r1, r9, r4, r1
 801e89c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e8a0:	2900      	cmp	r1, #0
 801e8a2:	f000 80f5 	beq.w	801ea90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801e8a6:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801e8aa:	d01b      	beq.n	801e8e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e8ac:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801e8b0:	fb0e fa0a 	mul.w	sl, lr, sl
 801e8b4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e8b8:	fb0e fe03 	mul.w	lr, lr, r3
 801e8bc:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e8c0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e8c4:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801e8c8:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801e8cc:	4453      	add	r3, sl
 801e8ce:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e8d2:	0a1b      	lsrs	r3, r3, #8
 801e8d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e8d8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e8dc:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e8e0:	ea43 030c 	orr.w	r3, r3, ip
 801e8e4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801e8e6:	2cff      	cmp	r4, #255	@ 0xff
 801e8e8:	d021      	beq.n	801e92e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801e8ea:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e8ec:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801e8f0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801e8f2:	fb04 fb0b 	mul.w	fp, r4, fp
 801e8f6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e8f8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e8fc:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801e8fe:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e902:	fb04 fa0a 	mul.w	sl, r4, sl
 801e906:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e90a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e90e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e912:	44de      	add	lr, fp
 801e914:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e918:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e91c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e920:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e924:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e928:	ea4e 040a 	orr.w	r4, lr, sl
 801e92c:	940b      	str	r4, [sp, #44]	@ 0x2c
 801e92e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801e930:	2cff      	cmp	r4, #255	@ 0xff
 801e932:	d021      	beq.n	801e978 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801e934:	9c08      	ldr	r4, [sp, #32]
 801e936:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801e93a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801e93c:	fb04 fb0b 	mul.w	fp, r4, fp
 801e940:	9c08      	ldr	r4, [sp, #32]
 801e942:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e946:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801e948:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e94c:	fb04 fa0a 	mul.w	sl, r4, sl
 801e950:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e954:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e958:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e95c:	44de      	add	lr, fp
 801e95e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e962:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e966:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e96a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e96e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e972:	ea4e 040a 	orr.w	r4, lr, sl
 801e976:	9408      	str	r4, [sp, #32]
 801e978:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801e97a:	2cff      	cmp	r4, #255	@ 0xff
 801e97c:	d021      	beq.n	801e9c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801e97e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801e980:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801e984:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801e986:	fb04 fb0b 	mul.w	fp, r4, fp
 801e98a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801e98c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e990:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801e992:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e996:	fb04 fa0a 	mul.w	sl, r4, sl
 801e99a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e99e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e9a2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e9a6:	44de      	add	lr, fp
 801e9a8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e9ac:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e9b0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e9b4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e9b8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e9bc:	ea4e 040a 	orr.w	r4, lr, sl
 801e9c0:	940c      	str	r4, [sp, #48]	@ 0x30
 801e9c2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e9c4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e9c8:	9c08      	ldr	r4, [sp, #32]
 801e9ca:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801e9ce:	fb08 fc0c 	mul.w	ip, r8, ip
 801e9d2:	fb02 cc0e 	mla	ip, r2, lr, ip
 801e9d6:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801e9da:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801e9dc:	fb00 cc0e 	mla	ip, r0, lr, ip
 801e9e0:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801e9e4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e9e6:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e9ea:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801e9ee:	fb08 f80e 	mul.w	r8, r8, lr
 801e9f2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e9f6:	fb02 8303 	mla	r3, r2, r3, r8
 801e9fa:	9a08      	ldr	r2, [sp, #32]
 801e9fc:	f8b7 8000 	ldrh.w	r8, [r7]
 801ea00:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801ea04:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801ea06:	fb00 330a 	mla	r3, r0, sl, r3
 801ea0a:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801ea0e:	fb09 3900 	mla	r9, r9, r0, r3
 801ea12:	43c9      	mvns	r1, r1
 801ea14:	ea4f 2228 	mov.w	r2, r8, asr #8
 801ea18:	fa5f fe81 	uxtb.w	lr, r1
 801ea1c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ea20:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ea24:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801ea28:	fb02 f20e 	mul.w	r2, r2, lr
 801ea2c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ea30:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801ea34:	ea4c 0c09 	orr.w	ip, ip, r9
 801ea38:	1c53      	adds	r3, r2, #1
 801ea3a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801ea3e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801ea42:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801ea46:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ea4a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801ea4e:	4a63      	ldr	r2, [pc, #396]	@ (801ebdc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801ea50:	fb00 f00e 	mul.w	r0, r0, lr
 801ea54:	b2db      	uxtb	r3, r3
 801ea56:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801ea5a:	1c43      	adds	r3, r0, #1
 801ea5c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ea60:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801ea64:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801ea68:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ea6c:	b2c9      	uxtb	r1, r1
 801ea6e:	00db      	lsls	r3, r3, #3
 801ea70:	fb01 f10e 	mul.w	r1, r1, lr
 801ea74:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ea78:	4313      	orrs	r3, r2
 801ea7a:	1c4a      	adds	r2, r1, #1
 801ea7c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ea80:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801ea84:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801ea88:	ea4c 0c03 	orr.w	ip, ip, r3
 801ea8c:	f8a7 c000 	strh.w	ip, [r7]
 801ea90:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ea92:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801ea94:	441a      	add	r2, r3
 801ea96:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ea98:	9225      	str	r2, [sp, #148]	@ 0x94
 801ea9a:	441d      	add	r5, r3
 801ea9c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801ea9e:	3b01      	subs	r3, #1
 801eaa0:	3702      	adds	r7, #2
 801eaa2:	9317      	str	r3, [sp, #92]	@ 0x5c
 801eaa4:	e699      	b.n	801e7da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801eaa6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801eaa8:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801eaaa:	441c      	add	r4, r3
 801eaac:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801eaae:	9425      	str	r4, [sp, #148]	@ 0x94
 801eab0:	441d      	add	r5, r3
 801eab2:	9b07      	ldr	r3, [sp, #28]
 801eab4:	3b01      	subs	r3, #1
 801eab6:	9307      	str	r3, [sp, #28]
 801eab8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801eaba:	3302      	adds	r3, #2
 801eabc:	930a      	str	r3, [sp, #40]	@ 0x28
 801eabe:	e66b      	b.n	801e798 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801eac0:	d024      	beq.n	801eb0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801eac2:	9b07      	ldr	r3, [sp, #28]
 801eac4:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801eac6:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801eac8:	3b01      	subs	r3, #1
 801eaca:	fb00 4003 	mla	r0, r0, r3, r4
 801eace:	1400      	asrs	r0, r0, #16
 801ead0:	f53f ae80 	bmi.w	801e7d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ead4:	3901      	subs	r1, #1
 801ead6:	4288      	cmp	r0, r1
 801ead8:	f6bf ae7c 	bge.w	801e7d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801eadc:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801eade:	fb01 5303 	mla	r3, r1, r3, r5
 801eae2:	141b      	asrs	r3, r3, #16
 801eae4:	f53f ae76 	bmi.w	801e7d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801eae8:	3a01      	subs	r2, #1
 801eaea:	4293      	cmp	r3, r2
 801eaec:	f6bf ae72 	bge.w	801e7d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801eaf0:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801eaf4:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801eaf8:	f1bb 0f00 	cmp.w	fp, #0
 801eafc:	dc70      	bgt.n	801ebe0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801eafe:	9b07      	ldr	r3, [sp, #28]
 801eb00:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801eb04:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801eb06:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801eb0a:	930a      	str	r3, [sp, #40]	@ 0x28
 801eb0c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801eb0e:	2b00      	cmp	r3, #0
 801eb10:	f340 81ae 	ble.w	801ee70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801eb14:	ee30 0a04 	vadd.f32	s0, s0, s8
 801eb18:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801eb1c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801eb20:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801eb22:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801eb26:	ee31 1a05 	vadd.f32	s2, s2, s10
 801eb2a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801eb2e:	eef0 6a62 	vmov.f32	s13, s5
 801eb32:	ee61 7a27 	vmul.f32	s15, s2, s15
 801eb36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eb3a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801eb3e:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801eb42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801eb46:	eef0 6a43 	vmov.f32	s13, s6
 801eb4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801eb4e:	ee12 2a90 	vmov	r2, s5
 801eb52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eb56:	fb92 f3f3 	sdiv	r3, r2, r3
 801eb5a:	ee13 2a10 	vmov	r2, s6
 801eb5e:	9327      	str	r3, [sp, #156]	@ 0x9c
 801eb60:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801eb62:	fb92 f3f3 	sdiv	r3, r2, r3
 801eb66:	9328      	str	r3, [sp, #160]	@ 0xa0
 801eb68:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801eb6a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801eb6c:	3b01      	subs	r3, #1
 801eb6e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eb72:	9316      	str	r3, [sp, #88]	@ 0x58
 801eb74:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801eb76:	bf08      	it	eq
 801eb78:	4613      	moveq	r3, r2
 801eb7a:	ee16 5a90 	vmov	r5, s13
 801eb7e:	9307      	str	r3, [sp, #28]
 801eb80:	eeb0 3a67 	vmov.f32	s6, s15
 801eb84:	eef0 2a47 	vmov.f32	s5, s14
 801eb88:	e5f8      	b.n	801e77c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801eb8a:	2800      	cmp	r0, #0
 801eb8c:	f43f ae6b 	beq.w	801e866 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801eb90:	f818 1001 	ldrb.w	r1, [r8, r1]
 801eb94:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801eb98:	9108      	str	r1, [sp, #32]
 801eb9a:	0e09      	lsrs	r1, r1, #24
 801eb9c:	9110      	str	r1, [sp, #64]	@ 0x40
 801eb9e:	e662      	b.n	801e866 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801eba0:	f113 0801 	adds.w	r8, r3, #1
 801eba4:	f53f af74 	bmi.w	801ea90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801eba8:	4541      	cmp	r1, r8
 801ebaa:	f6ff af71 	blt.w	801ea90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801ebae:	f11c 0801 	adds.w	r8, ip, #1
 801ebb2:	f53f af6d 	bmi.w	801ea90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801ebb6:	45c6      	cmp	lr, r8
 801ebb8:	f6ff af6a 	blt.w	801ea90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801ebbc:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801ebc0:	b209      	sxth	r1, r1
 801ebc2:	fa0f f38e 	sxth.w	r3, lr
 801ebc6:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801ebca:	9301      	str	r3, [sp, #4]
 801ebcc:	9100      	str	r1, [sp, #0]
 801ebce:	4633      	mov	r3, r6
 801ebd0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ebd2:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801ebd4:	4639      	mov	r1, r7
 801ebd6:	f7ff fc7a 	bl	801e4ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801ebda:	e759      	b.n	801ea90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801ebdc:	fffff800 	.word	0xfffff800
 801ebe0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801ebe2:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801ebe4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ebe8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ebea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ebee:	1427      	asrs	r7, r4, #16
 801ebf0:	142b      	asrs	r3, r5, #16
 801ebf2:	fb01 7303 	mla	r3, r1, r3, r7
 801ebf6:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801ebf8:	18e7      	adds	r7, r4, r3
 801ebfa:	5ce3      	ldrb	r3, [r4, r3]
 801ebfc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ec00:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ec04:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ec08:	2a00      	cmp	r2, #0
 801ec0a:	f000 8127 	beq.w	801ee5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801ec0e:	f897 e001 	ldrb.w	lr, [r7, #1]
 801ec12:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801ec16:	940d      	str	r4, [sp, #52]	@ 0x34
 801ec18:	0e24      	lsrs	r4, r4, #24
 801ec1a:	9414      	str	r4, [sp, #80]	@ 0x50
 801ec1c:	b170      	cbz	r0, 801ec3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801ec1e:	eb07 0e01 	add.w	lr, r7, r1
 801ec22:	5c79      	ldrb	r1, [r7, r1]
 801ec24:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ec28:	9109      	str	r1, [sp, #36]	@ 0x24
 801ec2a:	0e09      	lsrs	r1, r1, #24
 801ec2c:	9111      	str	r1, [sp, #68]	@ 0x44
 801ec2e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801ec32:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ec36:	910e      	str	r1, [sp, #56]	@ 0x38
 801ec38:	0e09      	lsrs	r1, r1, #24
 801ec3a:	9115      	str	r1, [sp, #84]	@ 0x54
 801ec3c:	b292      	uxth	r2, r2
 801ec3e:	b280      	uxth	r0, r0
 801ec40:	fb02 f800 	mul.w	r8, r2, r0
 801ec44:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801ec48:	0112      	lsls	r2, r2, #4
 801ec4a:	eba2 0e08 	sub.w	lr, r2, r8
 801ec4e:	b280      	uxth	r0, r0
 801ec50:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801ec54:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801ec56:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801ec58:	fa1f fe8e 	uxth.w	lr, lr
 801ec5c:	1a09      	subs	r1, r1, r0
 801ec5e:	b289      	uxth	r1, r1
 801ec60:	fb0e f202 	mul.w	r2, lr, r2
 801ec64:	fb01 220c 	mla	r2, r1, ip, r2
 801ec68:	fb00 2204 	mla	r2, r0, r4, r2
 801ec6c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801ec6e:	fb08 2204 	mla	r2, r8, r4, r2
 801ec72:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801ec76:	2a00      	cmp	r2, #0
 801ec78:	f000 80e5 	beq.w	801ee46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801ec7c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801ec80:	d019      	beq.n	801ecb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801ec82:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801ec86:	fb0c fa0a 	mul.w	sl, ip, sl
 801ec8a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ec8e:	fb0c fc03 	mul.w	ip, ip, r3
 801ec92:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ec96:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ec9a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ec9e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801eca2:	4453      	add	r3, sl
 801eca4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801eca8:	0a1b      	lsrs	r3, r3, #8
 801ecaa:	0a3f      	lsrs	r7, r7, #8
 801ecac:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ecb0:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801ecb4:	433b      	orrs	r3, r7
 801ecb6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801ecb8:	2cff      	cmp	r4, #255	@ 0xff
 801ecba:	d020      	beq.n	801ecfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801ecbc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801ecbe:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801ecc2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801ecc4:	4367      	muls	r7, r4
 801ecc6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801ecc8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801eccc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801ecce:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ecd2:	fb04 fa0a 	mul.w	sl, r4, sl
 801ecd6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ecda:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ecde:	44bc      	add	ip, r7
 801ece0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ece4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ece8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ecec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ecf0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ecf4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ecf8:	ea4c 040a 	orr.w	r4, ip, sl
 801ecfc:	940d      	str	r4, [sp, #52]	@ 0x34
 801ecfe:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801ed00:	2cff      	cmp	r4, #255	@ 0xff
 801ed02:	d020      	beq.n	801ed46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801ed04:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801ed06:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801ed0a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801ed0c:	4367      	muls	r7, r4
 801ed0e:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801ed10:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801ed14:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801ed16:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ed1a:	fb04 fa0a 	mul.w	sl, r4, sl
 801ed1e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ed22:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ed26:	44bc      	add	ip, r7
 801ed28:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ed2c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ed30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ed34:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ed38:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ed3c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ed40:	ea4c 040a 	orr.w	r4, ip, sl
 801ed44:	9409      	str	r4, [sp, #36]	@ 0x24
 801ed46:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801ed48:	2cff      	cmp	r4, #255	@ 0xff
 801ed4a:	d020      	beq.n	801ed8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801ed4c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801ed4e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801ed52:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801ed54:	4367      	muls	r7, r4
 801ed56:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801ed58:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801ed5c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801ed5e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ed62:	fb04 fa0a 	mul.w	sl, r4, sl
 801ed66:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ed6a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ed6e:	44bc      	add	ip, r7
 801ed70:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ed74:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ed78:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ed7c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ed80:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ed84:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ed88:	ea4c 040a 	orr.w	r4, ip, sl
 801ed8c:	940e      	str	r4, [sp, #56]	@ 0x38
 801ed8e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801ed90:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801ed94:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801ed96:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801ed9a:	fb0e f707 	mul.w	r7, lr, r7
 801ed9e:	fb01 770c 	mla	r7, r1, ip, r7
 801eda2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801eda6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801eda8:	fb00 770c 	mla	r7, r0, ip, r7
 801edac:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801edb0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801edb2:	fb08 770c 	mla	r7, r8, ip, r7
 801edb6:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801edba:	fb0e fe0c 	mul.w	lr, lr, ip
 801edbe:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801edc2:	fb01 e303 	mla	r3, r1, r3, lr
 801edc6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801edc8:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801edcc:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801edce:	fb00 330a 	mla	r3, r0, sl, r3
 801edd2:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801edd6:	fb08 3c0c 	mla	ip, r8, ip, r3
 801edda:	f8b9 3000 	ldrh.w	r3, [r9]
 801edde:	43d2      	mvns	r2, r2
 801ede0:	1218      	asrs	r0, r3, #8
 801ede2:	b2d2      	uxtb	r2, r2
 801ede4:	10d9      	asrs	r1, r3, #3
 801ede6:	0a3f      	lsrs	r7, r7, #8
 801ede8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801edec:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801edf0:	00db      	lsls	r3, r3, #3
 801edf2:	4350      	muls	r0, r2
 801edf4:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801edf8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801edfc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801ee00:	b2db      	uxtb	r3, r3
 801ee02:	ea47 070c 	orr.w	r7, r7, ip
 801ee06:	4351      	muls	r1, r2
 801ee08:	4353      	muls	r3, r2
 801ee0a:	1c42      	adds	r2, r0, #1
 801ee0c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ee10:	0c3a      	lsrs	r2, r7, #16
 801ee12:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ee16:	4a18      	ldr	r2, [pc, #96]	@ (801ee78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801ee18:	b2c0      	uxtb	r0, r0
 801ee1a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801ee1e:	1c4a      	adds	r2, r1, #1
 801ee20:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ee24:	0a3a      	lsrs	r2, r7, #8
 801ee26:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ee2a:	00c9      	lsls	r1, r1, #3
 801ee2c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ee30:	4301      	orrs	r1, r0
 801ee32:	1c58      	adds	r0, r3, #1
 801ee34:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801ee38:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801ee3c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801ee40:	4308      	orrs	r0, r1
 801ee42:	f8a9 0000 	strh.w	r0, [r9]
 801ee46:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ee48:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801ee4a:	441a      	add	r2, r3
 801ee4c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ee4e:	9225      	str	r2, [sp, #148]	@ 0x94
 801ee50:	f109 0902 	add.w	r9, r9, #2
 801ee54:	441d      	add	r5, r3
 801ee56:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ee5a:	e64d      	b.n	801eaf8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801ee5c:	2800      	cmp	r0, #0
 801ee5e:	f43f aeed 	beq.w	801ec3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801ee62:	5c79      	ldrb	r1, [r7, r1]
 801ee64:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ee68:	9109      	str	r1, [sp, #36]	@ 0x24
 801ee6a:	0e09      	lsrs	r1, r1, #24
 801ee6c:	9111      	str	r1, [sp, #68]	@ 0x44
 801ee6e:	e6e5      	b.n	801ec3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801ee70:	b01b      	add	sp, #108	@ 0x6c
 801ee72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ee76:	bf00      	nop
 801ee78:	fffff800 	.word	0xfffff800

0801ee7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801ee7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee80:	b085      	sub	sp, #20
 801ee82:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801ee86:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801ee8a:	9103      	str	r1, [sp, #12]
 801ee8c:	fb00 7406 	mla	r4, r0, r6, r7
 801ee90:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801ee94:	2800      	cmp	r0, #0
 801ee96:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801ee9a:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801ee9e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801eea2:	9501      	str	r5, [sp, #4]
 801eea4:	eb03 0904 	add.w	r9, r3, r4
 801eea8:	f2c0 8150 	blt.w	801f14c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801eeac:	4583      	cmp	fp, r0
 801eeae:	f340 814d 	ble.w	801f14c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801eeb2:	2f00      	cmp	r7, #0
 801eeb4:	f2c0 8146 	blt.w	801f144 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801eeb8:	42be      	cmp	r6, r7
 801eeba:	f340 8143 	ble.w	801f144 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801eebe:	f813 c004 	ldrb.w	ip, [r3, r4]
 801eec2:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801eec6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801eeca:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801eece:	4355      	muls	r5, r2
 801eed0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801eed4:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801eed8:	fb0c f203 	mul.w	r2, ip, r3
 801eedc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801eee0:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801eee4:	441d      	add	r5, r3
 801eee6:	f102 0320 	add.w	r3, r2, #32
 801eeea:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801eeee:	0a1b      	lsrs	r3, r3, #8
 801eef0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801eef4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801eef8:	431c      	orrs	r4, r3
 801eefa:	1c7b      	adds	r3, r7, #1
 801eefc:	f100 812b 	bmi.w	801f156 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801ef00:	429e      	cmp	r6, r3
 801ef02:	f340 8128 	ble.w	801f156 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801ef06:	2900      	cmp	r1, #0
 801ef08:	f000 8128 	beq.w	801f15c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801ef0c:	9a01      	ldr	r2, [sp, #4]
 801ef0e:	f899 3001 	ldrb.w	r3, [r9, #1]
 801ef12:	8855      	ldrh	r5, [r2, #2]
 801ef14:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801ef18:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801ef1c:	fb08 f802 	mul.w	r8, r8, r2
 801ef20:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ef24:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801ef28:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801ef2c:	435d      	muls	r5, r3
 801ef2e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ef32:	44d0      	add	r8, sl
 801ef34:	f105 0a20 	add.w	sl, r5, #32
 801ef38:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801ef3c:	0a2d      	lsrs	r5, r5, #8
 801ef3e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801ef42:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ef46:	432a      	orrs	r2, r5
 801ef48:	3001      	adds	r0, #1
 801ef4a:	f100 810d 	bmi.w	801f168 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801ef4e:	4583      	cmp	fp, r0
 801ef50:	f340 810a 	ble.w	801f168 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801ef54:	f1be 0f00 	cmp.w	lr, #0
 801ef58:	f000 810b 	beq.w	801f172 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801ef5c:	2f00      	cmp	r7, #0
 801ef5e:	f2c0 8100 	blt.w	801f162 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801ef62:	42be      	cmp	r6, r7
 801ef64:	f340 80fd 	ble.w	801f162 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801ef68:	9801      	ldr	r0, [sp, #4]
 801ef6a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801ef6e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801ef72:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ef76:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801ef7a:	fb0a fa00 	mul.w	sl, sl, r0
 801ef7e:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801ef82:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801ef86:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801ef8a:	fb05 f808 	mul.w	r8, r5, r8
 801ef8e:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801ef92:	4482      	add	sl, r0
 801ef94:	f108 0020 	add.w	r0, r8, #32
 801ef98:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801ef9c:	0a00      	lsrs	r0, r0, #8
 801ef9e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801efa2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801efa6:	ea4b 0b00 	orr.w	fp, fp, r0
 801efaa:	3701      	adds	r7, #1
 801efac:	f100 80e6 	bmi.w	801f17c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801efb0:	42be      	cmp	r6, r7
 801efb2:	f340 80e3 	ble.w	801f17c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801efb6:	2900      	cmp	r1, #0
 801efb8:	f000 80e3 	beq.w	801f182 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801efbc:	3601      	adds	r6, #1
 801efbe:	9801      	ldr	r0, [sp, #4]
 801efc0:	f819 7006 	ldrb.w	r7, [r9, r6]
 801efc4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801efc8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801efcc:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801efd0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801efd4:	fb09 f906 	mul.w	r9, r9, r6
 801efd8:	fb07 f800 	mul.w	r8, r7, r0
 801efdc:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801efe0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801efe4:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801efe8:	44d1      	add	r9, sl
 801efea:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801efee:	f108 0020 	add.w	r0, r8, #32
 801eff2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801eff6:	0a00      	lsrs	r0, r0, #8
 801eff8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801effc:	4330      	orrs	r0, r6
 801effe:	b28e      	uxth	r6, r1
 801f000:	fa1f f98e 	uxth.w	r9, lr
 801f004:	fb06 f809 	mul.w	r8, r6, r9
 801f008:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801f00c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801f010:	0136      	lsls	r6, r6, #4
 801f012:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f016:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801f01a:	9601      	str	r6, [sp, #4]
 801f01c:	ea4a 0404 	orr.w	r4, sl, r4
 801f020:	fa1f f689 	uxth.w	r6, r9
 801f024:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801f028:	fb11 f90e 	smulbb	r9, r1, lr
 801f02c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801f030:	9602      	str	r6, [sp, #8]
 801f032:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f036:	4626      	mov	r6, r4
 801f038:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f03c:	f1ce 0410 	rsb	r4, lr, #16
 801f040:	1a64      	subs	r4, r4, r1
 801f042:	ea4a 0202 	orr.w	r2, sl, r2
 801f046:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801f04a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801f04e:	434a      	muls	r2, r1
 801f050:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801f054:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f058:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f05c:	fb04 2406 	mla	r4, r4, r6, r2
 801f060:	ea4a 0000 	orr.w	r0, sl, r0
 801f064:	fb09 4200 	mla	r2, r9, r0, r4
 801f068:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801f06c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801f070:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801f074:	ea44 0b0b 	orr.w	fp, r4, fp
 801f078:	9c01      	ldr	r4, [sp, #4]
 801f07a:	9e02      	ldr	r6, [sp, #8]
 801f07c:	9903      	ldr	r1, [sp, #12]
 801f07e:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801f082:	1ba4      	subs	r4, r4, r6
 801f084:	9e01      	ldr	r6, [sp, #4]
 801f086:	8808      	ldrh	r0, [r1, #0]
 801f088:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801f08c:	eba6 0608 	sub.w	r6, r6, r8
 801f090:	b2b6      	uxth	r6, r6
 801f092:	b2a4      	uxth	r4, r4
 801f094:	4373      	muls	r3, r6
 801f096:	fb0c 3304 	mla	r3, ip, r4, r3
 801f09a:	9c02      	ldr	r4, [sp, #8]
 801f09c:	fb04 3505 	mla	r5, r4, r5, r3
 801f0a0:	fb08 5707 	mla	r7, r8, r7, r5
 801f0a4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801f0a8:	b289      	uxth	r1, r1
 801f0aa:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801f0ae:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f0b2:	434f      	muls	r7, r1
 801f0b4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801f0b8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801f0bc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f0c0:	1c7b      	adds	r3, r7, #1
 801f0c2:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801f0c6:	ea42 0e0e 	orr.w	lr, r2, lr
 801f0ca:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f0ce:	fa1f f28e 	uxth.w	r2, lr
 801f0d2:	1203      	asrs	r3, r0, #8
 801f0d4:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801f0d8:	b2ff      	uxtb	r7, r7
 801f0da:	1215      	asrs	r5, r2, #8
 801f0dc:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801f0e0:	fb13 f307 	smulbb	r3, r3, r7
 801f0e4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801f0e8:	fb05 3501 	mla	r5, r5, r1, r3
 801f0ec:	10c3      	asrs	r3, r0, #3
 801f0ee:	10d4      	asrs	r4, r2, #3
 801f0f0:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801f0f4:	fb13 f307 	smulbb	r3, r3, r7
 801f0f8:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801f0fc:	fb04 3401 	mla	r4, r4, r1, r3
 801f100:	00c3      	lsls	r3, r0, #3
 801f102:	00d2      	lsls	r2, r2, #3
 801f104:	b2db      	uxtb	r3, r3
 801f106:	fb13 f307 	smulbb	r3, r3, r7
 801f10a:	b2d2      	uxtb	r2, r2
 801f10c:	fb02 3101 	mla	r1, r2, r1, r3
 801f110:	b2ad      	uxth	r5, r5
 801f112:	b289      	uxth	r1, r1
 801f114:	b2a4      	uxth	r4, r4
 801f116:	1c6b      	adds	r3, r5, #1
 801f118:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f11c:	1c62      	adds	r2, r4, #1
 801f11e:	1c4b      	adds	r3, r1, #1
 801f120:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801f124:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801f128:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801f12c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f130:	0964      	lsrs	r4, r4, #5
 801f132:	432b      	orrs	r3, r5
 801f134:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801f138:	9a03      	ldr	r2, [sp, #12]
 801f13a:	4323      	orrs	r3, r4
 801f13c:	8013      	strh	r3, [r2, #0]
 801f13e:	b005      	add	sp, #20
 801f140:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f144:	f04f 0c00 	mov.w	ip, #0
 801f148:	4664      	mov	r4, ip
 801f14a:	e6d6      	b.n	801eefa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801f14c:	2300      	movs	r3, #0
 801f14e:	469c      	mov	ip, r3
 801f150:	461a      	mov	r2, r3
 801f152:	461c      	mov	r4, r3
 801f154:	e6f8      	b.n	801ef48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801f156:	2300      	movs	r3, #0
 801f158:	461a      	mov	r2, r3
 801f15a:	e6f5      	b.n	801ef48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801f15c:	460b      	mov	r3, r1
 801f15e:	460a      	mov	r2, r1
 801f160:	e6f2      	b.n	801ef48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801f162:	2500      	movs	r5, #0
 801f164:	46ab      	mov	fp, r5
 801f166:	e720      	b.n	801efaa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801f168:	2700      	movs	r7, #0
 801f16a:	463d      	mov	r5, r7
 801f16c:	4638      	mov	r0, r7
 801f16e:	46bb      	mov	fp, r7
 801f170:	e745      	b.n	801effe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801f172:	4677      	mov	r7, lr
 801f174:	4675      	mov	r5, lr
 801f176:	4670      	mov	r0, lr
 801f178:	46f3      	mov	fp, lr
 801f17a:	e740      	b.n	801effe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801f17c:	2700      	movs	r7, #0
 801f17e:	4638      	mov	r0, r7
 801f180:	e73d      	b.n	801effe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801f182:	460f      	mov	r7, r1
 801f184:	4608      	mov	r0, r1
 801f186:	e73a      	b.n	801effe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801f188 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f18c:	b097      	sub	sp, #92	@ 0x5c
 801f18e:	9214      	str	r2, [sp, #80]	@ 0x50
 801f190:	9308      	str	r3, [sp, #32]
 801f192:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801f194:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801f198:	9312      	str	r3, [sp, #72]	@ 0x48
 801f19a:	9111      	str	r1, [sp, #68]	@ 0x44
 801f19c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801f1a0:	9015      	str	r0, [sp, #84]	@ 0x54
 801f1a2:	6850      	ldr	r0, [r2, #4]
 801f1a4:	6812      	ldr	r2, [r2, #0]
 801f1a6:	fb00 1303 	mla	r3, r0, r3, r1
 801f1aa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f1ae:	9309      	str	r3, [sp, #36]	@ 0x24
 801f1b0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f1b2:	681b      	ldr	r3, [r3, #0]
 801f1b4:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f1b6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f1b8:	685b      	ldr	r3, [r3, #4]
 801f1ba:	930c      	str	r3, [sp, #48]	@ 0x30
 801f1bc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801f1c0:	930a      	str	r3, [sp, #40]	@ 0x28
 801f1c2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f1c4:	2b00      	cmp	r3, #0
 801f1c6:	dc03      	bgt.n	801f1d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f1c8:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801f1ca:	2b00      	cmp	r3, #0
 801f1cc:	f340 83cb 	ble.w	801f966 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801f1d0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f1d2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f1d6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f1da:	1e48      	subs	r0, r1, #1
 801f1dc:	1e55      	subs	r5, r2, #1
 801f1de:	9b08      	ldr	r3, [sp, #32]
 801f1e0:	2b00      	cmp	r3, #0
 801f1e2:	f340 81a3 	ble.w	801f52c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801f1e6:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801f1e8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801f1ea:	1436      	asrs	r6, r6, #16
 801f1ec:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f1f0:	d406      	bmi.n	801f200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f1f2:	4286      	cmp	r6, r0
 801f1f4:	da04      	bge.n	801f200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f1f6:	2b00      	cmp	r3, #0
 801f1f8:	db02      	blt.n	801f200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f1fa:	42ab      	cmp	r3, r5
 801f1fc:	f2c0 8197 	blt.w	801f52e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f200:	3601      	adds	r6, #1
 801f202:	f100 8184 	bmi.w	801f50e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801f206:	42b1      	cmp	r1, r6
 801f208:	f2c0 8181 	blt.w	801f50e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801f20c:	3301      	adds	r3, #1
 801f20e:	f100 817e 	bmi.w	801f50e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801f212:	429a      	cmp	r2, r3
 801f214:	f2c0 817b 	blt.w	801f50e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801f218:	9b08      	ldr	r3, [sp, #32]
 801f21a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801f21c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f21e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801f222:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801f224:	2b00      	cmp	r3, #0
 801f226:	f340 81a4 	ble.w	801f572 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801f22a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801f22c:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801f22e:	1418      	asrs	r0, r3, #16
 801f230:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801f232:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801f236:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801f238:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801f23c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f23e:	142d      	asrs	r5, r5, #16
 801f240:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801f244:	f100 81f8 	bmi.w	801f638 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f248:	f102 3eff 	add.w	lr, r2, #4294967295
 801f24c:	4575      	cmp	r5, lr
 801f24e:	f280 81f3 	bge.w	801f638 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f252:	2800      	cmp	r0, #0
 801f254:	f2c0 81f0 	blt.w	801f638 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f258:	f103 3eff 	add.w	lr, r3, #4294967295
 801f25c:	4570      	cmp	r0, lr
 801f25e:	f280 81eb 	bge.w	801f638 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f262:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f264:	b212      	sxth	r2, r2
 801f266:	fb00 5002 	mla	r0, r0, r2, r5
 801f26a:	fa1f fe81 	uxth.w	lr, r1
 801f26e:	eb03 0a00 	add.w	sl, r3, r0
 801f272:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801f276:	f813 9000 	ldrb.w	r9, [r3, r0]
 801f27a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f27e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801f282:	b29b      	uxth	r3, r3
 801f284:	f1bc 0f00 	cmp.w	ip, #0
 801f288:	f000 81b9 	beq.w	801f5fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801f28c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801f290:	940d      	str	r4, [sp, #52]	@ 0x34
 801f292:	eb0a 0b02 	add.w	fp, sl, r2
 801f296:	fa1f fa8c 	uxth.w	sl, ip
 801f29a:	fb0a fe0e 	mul.w	lr, sl, lr
 801f29e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801f2a2:	fa1f fa8a 	uxth.w	sl, sl
 801f2a6:	eba5 050e 	sub.w	r5, r5, lr
 801f2aa:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801f2ae:	940e      	str	r4, [sp, #56]	@ 0x38
 801f2b0:	eba3 030a 	sub.w	r3, r3, sl
 801f2b4:	b2ad      	uxth	r5, r5
 801f2b6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801f2b8:	b29b      	uxth	r3, r3
 801f2ba:	fb08 f505 	mul.w	r5, r8, r5
 801f2be:	fb09 5303 	mla	r3, r9, r3, r5
 801f2c2:	fb0a 3304 	mla	r3, sl, r4, r3
 801f2c6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801f2c8:	fb0e 3304 	mla	r3, lr, r4, r3
 801f2cc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f2d0:	2b00      	cmp	r3, #0
 801f2d2:	f000 810f 	beq.w	801f4f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801f2d6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801f2d8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801f2dc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801f2e0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801f2e4:	f000 8190 	beq.w	801f608 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801f2e8:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801f2ec:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801f2f0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f2f4:	fb09 f000 	mul.w	r0, r9, r0
 801f2f8:	fb0a fe0e 	mul.w	lr, sl, lr
 801f2fc:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801f300:	f100 0b20 	add.w	fp, r0, #32
 801f304:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801f308:	44ce      	add	lr, r9
 801f30a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801f30e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f312:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801f316:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801f31a:	ea4e 0909 	orr.w	r9, lr, r9
 801f31e:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801f322:	8868      	ldrh	r0, [r5, #2]
 801f324:	d019      	beq.n	801f35a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801f326:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801f32a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801f32e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f332:	fb08 f800 	mul.w	r8, r8, r0
 801f336:	fb0a fe0e 	mul.w	lr, sl, lr
 801f33a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801f33e:	f108 0b20 	add.w	fp, r8, #32
 801f342:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801f346:	4486      	add	lr, r0
 801f348:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801f34c:	0a00      	lsrs	r0, r0, #8
 801f34e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801f352:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f356:	ea4e 0000 	orr.w	r0, lr, r0
 801f35a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801f35e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801f362:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801f366:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801f36a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f36e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f372:	ea4e 0909 	orr.w	r9, lr, r9
 801f376:	ea4a 0000 	orr.w	r0, sl, r0
 801f37a:	f1bc 0f00 	cmp.w	ip, #0
 801f37e:	f000 8145 	beq.w	801f60c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801f382:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801f386:	3a01      	subs	r2, #1
 801f388:	0052      	lsls	r2, r2, #1
 801f38a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801f38c:	3202      	adds	r2, #2
 801f38e:	2cff      	cmp	r4, #255	@ 0xff
 801f390:	eb05 0e02 	add.w	lr, r5, r2
 801f394:	5aaa      	ldrh	r2, [r5, r2]
 801f396:	d018      	beq.n	801f3ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801f398:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801f39c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f3a0:	fb04 fa02 	mul.w	sl, r4, r2
 801f3a4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f3a8:	fb08 f805 	mul.w	r8, r8, r5
 801f3ac:	f10a 0520 	add.w	r5, sl, #32
 801f3b0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801f3b4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801f3b8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801f3bc:	4442      	add	r2, r8
 801f3be:	0a2d      	lsrs	r5, r5, #8
 801f3c0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801f3c4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f3c8:	432a      	orrs	r2, r5
 801f3ca:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801f3cc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801f3d0:	2cff      	cmp	r4, #255	@ 0xff
 801f3d2:	d01a      	beq.n	801f40a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801f3d4:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801f3d8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f3dc:	fb04 fa05 	mul.w	sl, r4, r5
 801f3e0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f3e4:	fb08 f80e 	mul.w	r8, r8, lr
 801f3e8:	f10a 0e20 	add.w	lr, sl, #32
 801f3ec:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801f3f0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801f3f4:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801f3f8:	4445      	add	r5, r8
 801f3fa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f3fe:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801f402:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801f406:	ea45 050e 	orr.w	r5, r5, lr
 801f40a:	fb1c fe01 	smulbb	lr, ip, r1
 801f40e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801f412:	f1cc 0810 	rsb	r8, ip, #16
 801f416:	eba8 0801 	sub.w	r8, r8, r1
 801f41a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801f41e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801f422:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801f426:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801f42a:	4341      	muls	r1, r0
 801f42c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f430:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f434:	ea4a 0202 	orr.w	r2, sl, r2
 801f438:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801f43c:	fb09 1108 	mla	r1, r9, r8, r1
 801f440:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801f444:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801f448:	fb0c 1102 	mla	r1, ip, r2, r1
 801f44c:	ea4b 0505 	orr.w	r5, fp, r5
 801f450:	fb0e 1e05 	mla	lr, lr, r5, r1
 801f454:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801f458:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801f45c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f460:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801f464:	ea42 0e0e 	orr.w	lr, r2, lr
 801f468:	fa1f f28e 	uxth.w	r2, lr
 801f46c:	2bff      	cmp	r3, #255	@ 0xff
 801f46e:	d103      	bne.n	801f478 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801f470:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801f472:	29ff      	cmp	r1, #255	@ 0xff
 801f474:	f000 80de 	beq.w	801f634 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801f478:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801f47a:	8838      	ldrh	r0, [r7, #0]
 801f47c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801f47e:	434b      	muls	r3, r1
 801f480:	f103 0c01 	add.w	ip, r3, #1
 801f484:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801f488:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801f48c:	fa5f fc83 	uxtb.w	ip, r3
 801f490:	1203      	asrs	r3, r0, #8
 801f492:	1215      	asrs	r5, r2, #8
 801f494:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801f498:	fb13 f30c 	smulbb	r3, r3, ip
 801f49c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801f4a0:	fb05 3501 	mla	r5, r5, r1, r3
 801f4a4:	10c3      	asrs	r3, r0, #3
 801f4a6:	10d1      	asrs	r1, r2, #3
 801f4a8:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801f4ac:	fb13 f30c 	smulbb	r3, r3, ip
 801f4b0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801f4b4:	fb01 3104 	mla	r1, r1, r4, r3
 801f4b8:	00c3      	lsls	r3, r0, #3
 801f4ba:	00d2      	lsls	r2, r2, #3
 801f4bc:	b2db      	uxtb	r3, r3
 801f4be:	b2d2      	uxtb	r2, r2
 801f4c0:	fb13 f30c 	smulbb	r3, r3, ip
 801f4c4:	b2ad      	uxth	r5, r5
 801f4c6:	fb02 3304 	mla	r3, r2, r4, r3
 801f4ca:	b29a      	uxth	r2, r3
 801f4cc:	1c6b      	adds	r3, r5, #1
 801f4ce:	b289      	uxth	r1, r1
 801f4d0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f4d4:	1c53      	adds	r3, r2, #1
 801f4d6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f4da:	1c4a      	adds	r2, r1, #1
 801f4dc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f4e0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801f4e4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f4e8:	0949      	lsrs	r1, r1, #5
 801f4ea:	432b      	orrs	r3, r5
 801f4ec:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f4f0:	430b      	orrs	r3, r1
 801f4f2:	803b      	strh	r3, [r7, #0]
 801f4f4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801f4f6:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801f4f8:	4413      	add	r3, r2
 801f4fa:	9321      	str	r3, [sp, #132]	@ 0x84
 801f4fc:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801f4fe:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f500:	441a      	add	r2, r3
 801f502:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801f504:	9222      	str	r2, [sp, #136]	@ 0x88
 801f506:	3b01      	subs	r3, #1
 801f508:	3702      	adds	r7, #2
 801f50a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f50c:	e689      	b.n	801f222 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f50e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801f510:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801f512:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801f514:	4433      	add	r3, r6
 801f516:	9321      	str	r3, [sp, #132]	@ 0x84
 801f518:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f51a:	441c      	add	r4, r3
 801f51c:	9b08      	ldr	r3, [sp, #32]
 801f51e:	9422      	str	r4, [sp, #136]	@ 0x88
 801f520:	3b01      	subs	r3, #1
 801f522:	9308      	str	r3, [sp, #32]
 801f524:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f526:	3302      	adds	r3, #2
 801f528:	9309      	str	r3, [sp, #36]	@ 0x24
 801f52a:	e658      	b.n	801f1de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801f52c:	d028      	beq.n	801f580 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801f52e:	9b08      	ldr	r3, [sp, #32]
 801f530:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801f532:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801f534:	3b01      	subs	r3, #1
 801f536:	fb00 5003 	mla	r0, r0, r3, r5
 801f53a:	1400      	asrs	r0, r0, #16
 801f53c:	f53f ae6c 	bmi.w	801f218 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f540:	3901      	subs	r1, #1
 801f542:	4288      	cmp	r0, r1
 801f544:	f6bf ae68 	bge.w	801f218 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f548:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801f54a:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801f54c:	fb01 0303 	mla	r3, r1, r3, r0
 801f550:	141b      	asrs	r3, r3, #16
 801f552:	f53f ae61 	bmi.w	801f218 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f556:	3a01      	subs	r2, #1
 801f558:	4293      	cmp	r3, r2
 801f55a:	f6bf ae5d 	bge.w	801f218 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f55e:	9b08      	ldr	r3, [sp, #32]
 801f560:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801f564:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f566:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801f56a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801f56c:	2b00      	cmp	r3, #0
 801f56e:	f300 8082 	bgt.w	801f676 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801f572:	9b08      	ldr	r3, [sp, #32]
 801f574:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801f578:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f57a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801f57e:	9309      	str	r3, [sp, #36]	@ 0x24
 801f580:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f582:	2b00      	cmp	r3, #0
 801f584:	f340 81ef 	ble.w	801f966 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801f588:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f58c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f590:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f594:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f596:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f59a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f59e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f5a2:	eef0 6a62 	vmov.f32	s13, s5
 801f5a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f5aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f5ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f5b2:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801f5b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f5ba:	eef0 6a43 	vmov.f32	s13, s6
 801f5be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f5c2:	ee12 2a90 	vmov	r2, s5
 801f5c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f5ca:	fb92 f3f3 	sdiv	r3, r2, r3
 801f5ce:	ee13 2a10 	vmov	r2, s6
 801f5d2:	9323      	str	r3, [sp, #140]	@ 0x8c
 801f5d4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f5d6:	fb92 f3f3 	sdiv	r3, r2, r3
 801f5da:	9324      	str	r3, [sp, #144]	@ 0x90
 801f5dc:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f5de:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f5e0:	3b01      	subs	r3, #1
 801f5e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f5e6:	9311      	str	r3, [sp, #68]	@ 0x44
 801f5e8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f5ea:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801f5ee:	bf08      	it	eq
 801f5f0:	4613      	moveq	r3, r2
 801f5f2:	9308      	str	r3, [sp, #32]
 801f5f4:	eeb0 3a67 	vmov.f32	s6, s15
 801f5f8:	eef0 2a47 	vmov.f32	s5, s14
 801f5fc:	e5e1      	b.n	801f1c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f5fe:	fb08 f505 	mul.w	r5, r8, r5
 801f602:	fb09 5303 	mla	r3, r9, r3, r5
 801f606:	e661      	b.n	801f2cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801f608:	4681      	mov	r9, r0
 801f60a:	e688      	b.n	801f31e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801f60c:	f1c1 0210 	rsb	r2, r1, #16
 801f610:	4341      	muls	r1, r0
 801f612:	fb09 1902 	mla	r9, r9, r2, r1
 801f616:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f61a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801f61e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f622:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f626:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801f62a:	ea42 0909 	orr.w	r9, r2, r9
 801f62e:	fa1f f289 	uxth.w	r2, r9
 801f632:	e71b      	b.n	801f46c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801f634:	803a      	strh	r2, [r7, #0]
 801f636:	e75d      	b.n	801f4f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801f638:	f115 0e01 	adds.w	lr, r5, #1
 801f63c:	f53f af5a 	bmi.w	801f4f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801f640:	4572      	cmp	r2, lr
 801f642:	f6ff af57 	blt.w	801f4f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801f646:	f110 0e01 	adds.w	lr, r0, #1
 801f64a:	f53f af53 	bmi.w	801f4f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801f64e:	4573      	cmp	r3, lr
 801f650:	f6ff af50 	blt.w	801f4f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801f654:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801f656:	9502      	str	r5, [sp, #8]
 801f658:	b21b      	sxth	r3, r3
 801f65a:	b212      	sxth	r2, r2
 801f65c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801f660:	9301      	str	r3, [sp, #4]
 801f662:	9200      	str	r2, [sp, #0]
 801f664:	e9cd c405 	strd	ip, r4, [sp, #20]
 801f668:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801f66c:	4639      	mov	r1, r7
 801f66e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801f670:	f7ff fc04 	bl	801ee7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801f674:	e73e      	b.n	801f4f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801f676:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801f678:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801f67c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801f67e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801f682:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f684:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f688:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801f68a:	141f      	asrs	r7, r3, #16
 801f68c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801f68e:	141b      	asrs	r3, r3, #16
 801f690:	fb01 3707 	mla	r7, r1, r7, r3
 801f694:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f696:	fa1f fc82 	uxth.w	ip, r2
 801f69a:	eb03 0a07 	add.w	sl, r3, r7
 801f69e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801f6a2:	f813 9007 	ldrb.w	r9, [r3, r7]
 801f6a6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f6aa:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801f6ae:	b29b      	uxth	r3, r3
 801f6b0:	2d00      	cmp	r5, #0
 801f6b2:	f000 813d 	beq.w	801f930 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801f6b6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801f6ba:	940f      	str	r4, [sp, #60]	@ 0x3c
 801f6bc:	eb0a 0b01 	add.w	fp, sl, r1
 801f6c0:	fa1f fa85 	uxth.w	sl, r5
 801f6c4:	fb0a fc0c 	mul.w	ip, sl, ip
 801f6c8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801f6cc:	fa1f fa8a 	uxth.w	sl, sl
 801f6d0:	eba0 000c 	sub.w	r0, r0, ip
 801f6d4:	eba3 030a 	sub.w	r3, r3, sl
 801f6d8:	b280      	uxth	r0, r0
 801f6da:	fb08 f000 	mul.w	r0, r8, r0
 801f6de:	b29b      	uxth	r3, r3
 801f6e0:	fb09 0303 	mla	r3, r9, r3, r0
 801f6e4:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801f6e6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801f6ea:	9410      	str	r4, [sp, #64]	@ 0x40
 801f6ec:	fb0a 3300 	mla	r3, sl, r0, r3
 801f6f0:	fb0c 3304 	mla	r3, ip, r4, r3
 801f6f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f6f8:	2b00      	cmp	r3, #0
 801f6fa:	f000 810b 	beq.w	801f914 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801f6fe:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801f700:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801f702:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801f706:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801f70a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801f70e:	f000 8114 	beq.w	801f93a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801f712:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801f716:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801f71a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801f71e:	fb09 f707 	mul.w	r7, r9, r7
 801f722:	fb0a fc0c 	mul.w	ip, sl, ip
 801f726:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801f72a:	f107 0b20 	add.w	fp, r7, #32
 801f72e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801f732:	44cc      	add	ip, r9
 801f734:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801f738:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f73c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801f740:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801f744:	ea4c 0909 	orr.w	r9, ip, r9
 801f748:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801f74c:	8847      	ldrh	r7, [r0, #2]
 801f74e:	d019      	beq.n	801f784 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801f750:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801f754:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801f758:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801f75c:	fb08 f807 	mul.w	r8, r8, r7
 801f760:	fb0a fc0c 	mul.w	ip, sl, ip
 801f764:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801f768:	f108 0b20 	add.w	fp, r8, #32
 801f76c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801f770:	44bc      	add	ip, r7
 801f772:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801f776:	0a3f      	lsrs	r7, r7, #8
 801f778:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801f77c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801f780:	ea4c 0707 	orr.w	r7, ip, r7
 801f784:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801f788:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801f78c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801f790:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801f794:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f798:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801f79c:	ea4c 0909 	orr.w	r9, ip, r9
 801f7a0:	ea4a 0707 	orr.w	r7, sl, r7
 801f7a4:	2d00      	cmp	r5, #0
 801f7a6:	f000 80ca 	beq.w	801f93e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801f7aa:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801f7ae:	3901      	subs	r1, #1
 801f7b0:	0049      	lsls	r1, r1, #1
 801f7b2:	3102      	adds	r1, #2
 801f7b4:	eb00 0c01 	add.w	ip, r0, r1
 801f7b8:	5a41      	ldrh	r1, [r0, r1]
 801f7ba:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801f7bc:	28ff      	cmp	r0, #255	@ 0xff
 801f7be:	d019      	beq.n	801f7f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801f7c0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801f7c2:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801f7c6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f7ca:	fb04 fa01 	mul.w	sl, r4, r1
 801f7ce:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f7d2:	fb08 f800 	mul.w	r8, r8, r0
 801f7d6:	f10a 0020 	add.w	r0, sl, #32
 801f7da:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801f7de:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801f7e2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801f7e6:	4441      	add	r1, r8
 801f7e8:	0a00      	lsrs	r0, r0, #8
 801f7ea:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801f7ee:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f7f2:	4301      	orrs	r1, r0
 801f7f4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801f7f6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801f7fa:	2cff      	cmp	r4, #255	@ 0xff
 801f7fc:	d01a      	beq.n	801f834 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801f7fe:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801f802:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f806:	fb04 fa00 	mul.w	sl, r4, r0
 801f80a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f80e:	fb08 f80c 	mul.w	r8, r8, ip
 801f812:	f10a 0c20 	add.w	ip, sl, #32
 801f816:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801f81a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801f81e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801f822:	4440      	add	r0, r8
 801f824:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f828:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801f82c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801f830:	ea40 000c 	orr.w	r0, r0, ip
 801f834:	fb15 fc02 	smulbb	ip, r5, r2
 801f838:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801f83c:	f1c5 0810 	rsb	r8, r5, #16
 801f840:	eba8 0802 	sub.w	r8, r8, r2
 801f844:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801f848:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801f84c:	437a      	muls	r2, r7
 801f84e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801f852:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801f856:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f85a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801f85e:	fb09 2208 	mla	r2, r9, r8, r2
 801f862:	ea4a 0101 	orr.w	r1, sl, r1
 801f866:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801f86a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801f86e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f872:	fb05 2201 	mla	r2, r5, r1, r2
 801f876:	ea4b 0000 	orr.w	r0, fp, r0
 801f87a:	fb0c 2200 	mla	r2, ip, r0, r2
 801f87e:	0d57      	lsrs	r7, r2, #21
 801f880:	0952      	lsrs	r2, r2, #5
 801f882:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801f886:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f88a:	433a      	orrs	r2, r7
 801f88c:	2bff      	cmp	r3, #255	@ 0xff
 801f88e:	b292      	uxth	r2, r2
 801f890:	d102      	bne.n	801f898 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801f892:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801f894:	29ff      	cmp	r1, #255	@ 0xff
 801f896:	d063      	beq.n	801f960 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801f898:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801f89a:	f8be 1000 	ldrh.w	r1, [lr]
 801f89e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801f8a0:	4343      	muls	r3, r0
 801f8a2:	1c58      	adds	r0, r3, #1
 801f8a4:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801f8a8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801f8ac:	1208      	asrs	r0, r1, #8
 801f8ae:	b2db      	uxtb	r3, r3
 801f8b0:	1215      	asrs	r5, r2, #8
 801f8b2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801f8b6:	fb10 f003 	smulbb	r0, r0, r3
 801f8ba:	10cf      	asrs	r7, r1, #3
 801f8bc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801f8c0:	00c9      	lsls	r1, r1, #3
 801f8c2:	fb05 0504 	mla	r5, r5, r4, r0
 801f8c6:	b2c9      	uxtb	r1, r1
 801f8c8:	10d0      	asrs	r0, r2, #3
 801f8ca:	00d2      	lsls	r2, r2, #3
 801f8cc:	fb11 f103 	smulbb	r1, r1, r3
 801f8d0:	b2d2      	uxtb	r2, r2
 801f8d2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801f8d6:	fb02 1204 	mla	r2, r2, r4, r1
 801f8da:	fb17 f703 	smulbb	r7, r7, r3
 801f8de:	b2ad      	uxth	r5, r5
 801f8e0:	b292      	uxth	r2, r2
 801f8e2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f8e6:	fb00 7004 	mla	r0, r0, r4, r7
 801f8ea:	1c6b      	adds	r3, r5, #1
 801f8ec:	1c57      	adds	r7, r2, #1
 801f8ee:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f8f2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f8f6:	b280      	uxth	r0, r0
 801f8f8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f8fc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801f900:	433d      	orrs	r5, r7
 801f902:	1c47      	adds	r7, r0, #1
 801f904:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801f908:	097f      	lsrs	r7, r7, #5
 801f90a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801f90e:	433d      	orrs	r5, r7
 801f910:	f8ae 5000 	strh.w	r5, [lr]
 801f914:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801f916:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801f918:	4413      	add	r3, r2
 801f91a:	9321      	str	r3, [sp, #132]	@ 0x84
 801f91c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801f91e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f920:	441a      	add	r2, r3
 801f922:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801f924:	9222      	str	r2, [sp, #136]	@ 0x88
 801f926:	3b01      	subs	r3, #1
 801f928:	f10e 0e02 	add.w	lr, lr, #2
 801f92c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f92e:	e61c      	b.n	801f56a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801f930:	fb08 f000 	mul.w	r0, r8, r0
 801f934:	fb09 0303 	mla	r3, r9, r3, r0
 801f938:	e6dc      	b.n	801f6f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801f93a:	46b9      	mov	r9, r7
 801f93c:	e704      	b.n	801f748 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801f93e:	f1c2 0110 	rsb	r1, r2, #16
 801f942:	437a      	muls	r2, r7
 801f944:	fb09 2901 	mla	r9, r9, r1, r2
 801f948:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f94c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801f950:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801f954:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f958:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f95c:	4302      	orrs	r2, r0
 801f95e:	e795      	b.n	801f88c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801f960:	f8ae 2000 	strh.w	r2, [lr]
 801f964:	e7d6      	b.n	801f914 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801f966:	b017      	add	sp, #92	@ 0x5c
 801f968:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f96c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801f96c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f970:	b085      	sub	sp, #20
 801f972:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801f976:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801f97a:	9103      	str	r1, [sp, #12]
 801f97c:	fb00 7406 	mla	r4, r0, r6, r7
 801f980:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801f984:	2800      	cmp	r0, #0
 801f986:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801f98a:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801f98e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801f992:	9501      	str	r5, [sp, #4]
 801f994:	eb02 0904 	add.w	r9, r2, r4
 801f998:	f2c0 8141 	blt.w	801fc1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801f99c:	4583      	cmp	fp, r0
 801f99e:	f340 813e 	ble.w	801fc1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801f9a2:	2f00      	cmp	r7, #0
 801f9a4:	f2c0 8137 	blt.w	801fc16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801f9a8:	42be      	cmp	r6, r7
 801f9aa:	f340 8134 	ble.w	801fc16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801f9ae:	f812 c004 	ldrb.w	ip, [r2, r4]
 801f9b2:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801f9b6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801f9ba:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801f9be:	4355      	muls	r5, r2
 801f9c0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f9c4:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801f9c8:	fb0c f203 	mul.w	r2, ip, r3
 801f9cc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801f9d0:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801f9d4:	441d      	add	r5, r3
 801f9d6:	f102 0320 	add.w	r3, r2, #32
 801f9da:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f9de:	0a1b      	lsrs	r3, r3, #8
 801f9e0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801f9e4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f9e8:	431c      	orrs	r4, r3
 801f9ea:	1c7b      	adds	r3, r7, #1
 801f9ec:	f100 811c 	bmi.w	801fc28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801f9f0:	429e      	cmp	r6, r3
 801f9f2:	f340 8119 	ble.w	801fc28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801f9f6:	2900      	cmp	r1, #0
 801f9f8:	f000 8119 	beq.w	801fc2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801f9fc:	9a01      	ldr	r2, [sp, #4]
 801f9fe:	f899 3001 	ldrb.w	r3, [r9, #1]
 801fa02:	8855      	ldrh	r5, [r2, #2]
 801fa04:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801fa08:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801fa0c:	fb08 f802 	mul.w	r8, r8, r2
 801fa10:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801fa14:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801fa18:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801fa1c:	435d      	muls	r5, r3
 801fa1e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801fa22:	44d0      	add	r8, sl
 801fa24:	f105 0a20 	add.w	sl, r5, #32
 801fa28:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801fa2c:	0a2d      	lsrs	r5, r5, #8
 801fa2e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801fa32:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801fa36:	432a      	orrs	r2, r5
 801fa38:	3001      	adds	r0, #1
 801fa3a:	f100 80fe 	bmi.w	801fc3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801fa3e:	4583      	cmp	fp, r0
 801fa40:	f340 80fb 	ble.w	801fc3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801fa44:	f1be 0f00 	cmp.w	lr, #0
 801fa48:	f000 80fc 	beq.w	801fc44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801fa4c:	2f00      	cmp	r7, #0
 801fa4e:	f2c0 80f1 	blt.w	801fc34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801fa52:	42be      	cmp	r6, r7
 801fa54:	f340 80ee 	ble.w	801fc34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801fa58:	9801      	ldr	r0, [sp, #4]
 801fa5a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801fa5e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801fa62:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801fa66:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801fa6a:	fb0a fa00 	mul.w	sl, sl, r0
 801fa6e:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801fa72:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801fa76:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801fa7a:	fb05 f808 	mul.w	r8, r5, r8
 801fa7e:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801fa82:	4482      	add	sl, r0
 801fa84:	f108 0020 	add.w	r0, r8, #32
 801fa88:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801fa8c:	0a00      	lsrs	r0, r0, #8
 801fa8e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801fa92:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fa96:	ea4b 0b00 	orr.w	fp, fp, r0
 801fa9a:	3701      	adds	r7, #1
 801fa9c:	f100 80d7 	bmi.w	801fc4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801faa0:	42be      	cmp	r6, r7
 801faa2:	f340 80d4 	ble.w	801fc4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801faa6:	2900      	cmp	r1, #0
 801faa8:	f000 80d4 	beq.w	801fc54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801faac:	3601      	adds	r6, #1
 801faae:	9801      	ldr	r0, [sp, #4]
 801fab0:	f819 7006 	ldrb.w	r7, [r9, r6]
 801fab4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801fab8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801fabc:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801fac0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fac4:	fb09 f906 	mul.w	r9, r9, r6
 801fac8:	fb07 f800 	mul.w	r8, r7, r0
 801facc:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801fad0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801fad4:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801fad8:	44d1      	add	r9, sl
 801fada:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801fade:	f108 0020 	add.w	r0, r8, #32
 801fae2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801fae6:	0a00      	lsrs	r0, r0, #8
 801fae8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801faec:	4330      	orrs	r0, r6
 801faee:	b28e      	uxth	r6, r1
 801faf0:	fa1f f98e 	uxth.w	r9, lr
 801faf4:	fb06 f809 	mul.w	r8, r6, r9
 801faf8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801fafc:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801fb00:	0136      	lsls	r6, r6, #4
 801fb02:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801fb06:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801fb0a:	9601      	str	r6, [sp, #4]
 801fb0c:	ea4a 0404 	orr.w	r4, sl, r4
 801fb10:	fa1f f689 	uxth.w	r6, r9
 801fb14:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801fb18:	fb11 f90e 	smulbb	r9, r1, lr
 801fb1c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801fb20:	9602      	str	r6, [sp, #8]
 801fb22:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801fb26:	4626      	mov	r6, r4
 801fb28:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801fb2c:	f1ce 0410 	rsb	r4, lr, #16
 801fb30:	1a64      	subs	r4, r4, r1
 801fb32:	ea4a 0202 	orr.w	r2, sl, r2
 801fb36:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801fb3a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801fb3e:	434a      	muls	r2, r1
 801fb40:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801fb44:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801fb48:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801fb4c:	fb04 2406 	mla	r4, r4, r6, r2
 801fb50:	ea4a 0000 	orr.w	r0, sl, r0
 801fb54:	fb09 4200 	mla	r2, r9, r0, r4
 801fb58:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801fb5c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801fb60:	9801      	ldr	r0, [sp, #4]
 801fb62:	9903      	ldr	r1, [sp, #12]
 801fb64:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801fb68:	ea44 0b0b 	orr.w	fp, r4, fp
 801fb6c:	9c02      	ldr	r4, [sp, #8]
 801fb6e:	8809      	ldrh	r1, [r1, #0]
 801fb70:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801fb74:	1b00      	subs	r0, r0, r4
 801fb76:	9c01      	ldr	r4, [sp, #4]
 801fb78:	eba4 0608 	sub.w	r6, r4, r8
 801fb7c:	b2b6      	uxth	r6, r6
 801fb7e:	b280      	uxth	r0, r0
 801fb80:	4373      	muls	r3, r6
 801fb82:	fb0c 3300 	mla	r3, ip, r0, r3
 801fb86:	9802      	ldr	r0, [sp, #8]
 801fb88:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801fb8c:	fb00 3505 	mla	r5, r0, r5, r3
 801fb90:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801fb94:	fb08 5707 	mla	r7, r8, r7, r5
 801fb98:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801fb9c:	120b      	asrs	r3, r1, #8
 801fb9e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801fba2:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801fba6:	b2ff      	uxtb	r7, r7
 801fba8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fbac:	10c8      	asrs	r0, r1, #3
 801fbae:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801fbb2:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801fbb6:	00c9      	lsls	r1, r1, #3
 801fbb8:	437b      	muls	r3, r7
 801fbba:	ea42 0e0e 	orr.w	lr, r2, lr
 801fbbe:	b2c9      	uxtb	r1, r1
 801fbc0:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801fbc4:	fa1f f28e 	uxth.w	r2, lr
 801fbc8:	4378      	muls	r0, r7
 801fbca:	434f      	muls	r7, r1
 801fbcc:	1c59      	adds	r1, r3, #1
 801fbce:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801fbd2:	1213      	asrs	r3, r2, #8
 801fbd4:	f023 0307 	bic.w	r3, r3, #7
 801fbd8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801fbdc:	1c41      	adds	r1, r0, #1
 801fbde:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801fbe2:	10d1      	asrs	r1, r2, #3
 801fbe4:	f021 0103 	bic.w	r1, r1, #3
 801fbe8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801fbec:	021b      	lsls	r3, r3, #8
 801fbee:	00c9      	lsls	r1, r1, #3
 801fbf0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801fbf4:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801fbf8:	430b      	orrs	r3, r1
 801fbfa:	1c79      	adds	r1, r7, #1
 801fbfc:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801fc00:	00d2      	lsls	r2, r2, #3
 801fc02:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801fc06:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fc0a:	431a      	orrs	r2, r3
 801fc0c:	9b03      	ldr	r3, [sp, #12]
 801fc0e:	801a      	strh	r2, [r3, #0]
 801fc10:	b005      	add	sp, #20
 801fc12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fc16:	f04f 0c00 	mov.w	ip, #0
 801fc1a:	4664      	mov	r4, ip
 801fc1c:	e6e5      	b.n	801f9ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801fc1e:	2300      	movs	r3, #0
 801fc20:	469c      	mov	ip, r3
 801fc22:	461a      	mov	r2, r3
 801fc24:	461c      	mov	r4, r3
 801fc26:	e707      	b.n	801fa38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801fc28:	2300      	movs	r3, #0
 801fc2a:	461a      	mov	r2, r3
 801fc2c:	e704      	b.n	801fa38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801fc2e:	460b      	mov	r3, r1
 801fc30:	460a      	mov	r2, r1
 801fc32:	e701      	b.n	801fa38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801fc34:	2500      	movs	r5, #0
 801fc36:	46ab      	mov	fp, r5
 801fc38:	e72f      	b.n	801fa9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801fc3a:	2700      	movs	r7, #0
 801fc3c:	463d      	mov	r5, r7
 801fc3e:	4638      	mov	r0, r7
 801fc40:	46bb      	mov	fp, r7
 801fc42:	e754      	b.n	801faee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801fc44:	4677      	mov	r7, lr
 801fc46:	4675      	mov	r5, lr
 801fc48:	4670      	mov	r0, lr
 801fc4a:	46f3      	mov	fp, lr
 801fc4c:	e74f      	b.n	801faee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801fc4e:	2700      	movs	r7, #0
 801fc50:	4638      	mov	r0, r7
 801fc52:	e74c      	b.n	801faee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801fc54:	460f      	mov	r7, r1
 801fc56:	4608      	mov	r0, r1
 801fc58:	e749      	b.n	801faee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801fc5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fc5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fc60:	b093      	sub	sp, #76	@ 0x4c
 801fc62:	9210      	str	r2, [sp, #64]	@ 0x40
 801fc64:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801fc66:	910e      	str	r1, [sp, #56]	@ 0x38
 801fc68:	9306      	str	r3, [sp, #24]
 801fc6a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801fc6e:	9011      	str	r0, [sp, #68]	@ 0x44
 801fc70:	6850      	ldr	r0, [r2, #4]
 801fc72:	6812      	ldr	r2, [r2, #0]
 801fc74:	fb00 1303 	mla	r3, r0, r3, r1
 801fc78:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fc7c:	9307      	str	r3, [sp, #28]
 801fc7e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fc80:	681b      	ldr	r3, [r3, #0]
 801fc82:	9308      	str	r3, [sp, #32]
 801fc84:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fc86:	685b      	ldr	r3, [r3, #4]
 801fc88:	9309      	str	r3, [sp, #36]	@ 0x24
 801fc8a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fc8c:	2b00      	cmp	r3, #0
 801fc8e:	dc03      	bgt.n	801fc98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801fc90:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801fc92:	2b00      	cmp	r3, #0
 801fc94:	f340 83b4 	ble.w	8020400 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801fc98:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fc9a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fc9e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fca2:	1e48      	subs	r0, r1, #1
 801fca4:	1e55      	subs	r5, r2, #1
 801fca6:	9b06      	ldr	r3, [sp, #24]
 801fca8:	2b00      	cmp	r3, #0
 801fcaa:	f340 8163 	ble.w	801ff74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801fcae:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801fcb0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801fcb2:	1436      	asrs	r6, r6, #16
 801fcb4:	ea4f 4323 	mov.w	r3, r3, asr #16
 801fcb8:	d406      	bmi.n	801fcc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801fcba:	4286      	cmp	r6, r0
 801fcbc:	da04      	bge.n	801fcc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801fcbe:	2b00      	cmp	r3, #0
 801fcc0:	db02      	blt.n	801fcc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801fcc2:	42ab      	cmp	r3, r5
 801fcc4:	f2c0 8157 	blt.w	801ff76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801fcc8:	3601      	adds	r6, #1
 801fcca:	f100 8144 	bmi.w	801ff56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801fcce:	42b1      	cmp	r1, r6
 801fcd0:	f2c0 8141 	blt.w	801ff56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801fcd4:	3301      	adds	r3, #1
 801fcd6:	f100 813e 	bmi.w	801ff56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801fcda:	429a      	cmp	r2, r3
 801fcdc:	f2c0 813b 	blt.w	801ff56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801fce0:	9b06      	ldr	r3, [sp, #24]
 801fce2:	9f07      	ldr	r7, [sp, #28]
 801fce4:	930f      	str	r3, [sp, #60]	@ 0x3c
 801fce6:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801fcea:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801fcec:	2b00      	cmp	r3, #0
 801fcee:	f340 8164 	ble.w	801ffba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801fcf2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801fcf4:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801fcf6:	1418      	asrs	r0, r3, #16
 801fcf8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801fcfa:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801fcfe:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801fd00:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801fd04:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fd06:	142d      	asrs	r5, r5, #16
 801fd08:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801fd0c:	f100 81ee 	bmi.w	80200ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801fd10:	f102 3eff 	add.w	lr, r2, #4294967295
 801fd14:	4575      	cmp	r5, lr
 801fd16:	f280 81e9 	bge.w	80200ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801fd1a:	2800      	cmp	r0, #0
 801fd1c:	f2c0 81e6 	blt.w	80200ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801fd20:	f103 3eff 	add.w	lr, r3, #4294967295
 801fd24:	4570      	cmp	r0, lr
 801fd26:	f280 81e1 	bge.w	80200ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801fd2a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fd2c:	b212      	sxth	r2, r2
 801fd2e:	fb00 5002 	mla	r0, r0, r2, r5
 801fd32:	fa1f fe81 	uxth.w	lr, r1
 801fd36:	eb03 0a00 	add.w	sl, r3, r0
 801fd3a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801fd3e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801fd42:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801fd46:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801fd4a:	b29b      	uxth	r3, r3
 801fd4c:	f1bc 0f00 	cmp.w	ip, #0
 801fd50:	f000 8179 	beq.w	8020046 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801fd54:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801fd58:	940a      	str	r4, [sp, #40]	@ 0x28
 801fd5a:	eb0a 0b02 	add.w	fp, sl, r2
 801fd5e:	fa1f fa8c 	uxth.w	sl, ip
 801fd62:	fb0a fe0e 	mul.w	lr, sl, lr
 801fd66:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801fd6a:	fa1f fa8a 	uxth.w	sl, sl
 801fd6e:	eba5 050e 	sub.w	r5, r5, lr
 801fd72:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801fd76:	940b      	str	r4, [sp, #44]	@ 0x2c
 801fd78:	eba3 030a 	sub.w	r3, r3, sl
 801fd7c:	b2ad      	uxth	r5, r5
 801fd7e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801fd80:	b29b      	uxth	r3, r3
 801fd82:	fb08 f505 	mul.w	r5, r8, r5
 801fd86:	fb09 5303 	mla	r3, r9, r3, r5
 801fd8a:	fb0a 3304 	mla	r3, sl, r4, r3
 801fd8e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801fd90:	fb0e 3304 	mla	r3, lr, r4, r3
 801fd94:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fd98:	2b00      	cmp	r3, #0
 801fd9a:	f000 80cf 	beq.w	801ff3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801fd9e:	9c08      	ldr	r4, [sp, #32]
 801fda0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801fda4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801fda8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801fdac:	f000 8150 	beq.w	8020050 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801fdb0:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801fdb4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801fdb8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fdbc:	fb09 f000 	mul.w	r0, r9, r0
 801fdc0:	fb0a fe0e 	mul.w	lr, sl, lr
 801fdc4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801fdc8:	f100 0b20 	add.w	fp, r0, #32
 801fdcc:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801fdd0:	44ce      	add	lr, r9
 801fdd2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801fdd6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fdda:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801fdde:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801fde2:	ea4e 0909 	orr.w	r9, lr, r9
 801fde6:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801fdea:	8868      	ldrh	r0, [r5, #2]
 801fdec:	d019      	beq.n	801fe22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801fdee:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801fdf2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801fdf6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fdfa:	fb08 f800 	mul.w	r8, r8, r0
 801fdfe:	fb0a fe0e 	mul.w	lr, sl, lr
 801fe02:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801fe06:	f108 0b20 	add.w	fp, r8, #32
 801fe0a:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801fe0e:	4486      	add	lr, r0
 801fe10:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801fe14:	0a00      	lsrs	r0, r0, #8
 801fe16:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801fe1a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fe1e:	ea4e 0000 	orr.w	r0, lr, r0
 801fe22:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801fe26:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801fe2a:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801fe2e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801fe32:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801fe36:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801fe3a:	ea4e 0909 	orr.w	r9, lr, r9
 801fe3e:	ea4a 0000 	orr.w	r0, sl, r0
 801fe42:	f1bc 0f00 	cmp.w	ip, #0
 801fe46:	f000 8105 	beq.w	8020054 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801fe4a:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801fe4e:	3a01      	subs	r2, #1
 801fe50:	0052      	lsls	r2, r2, #1
 801fe52:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801fe54:	3202      	adds	r2, #2
 801fe56:	2cff      	cmp	r4, #255	@ 0xff
 801fe58:	eb05 0e02 	add.w	lr, r5, r2
 801fe5c:	5aaa      	ldrh	r2, [r5, r2]
 801fe5e:	d018      	beq.n	801fe92 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801fe60:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801fe64:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fe68:	fb04 fa02 	mul.w	sl, r4, r2
 801fe6c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801fe70:	fb08 f805 	mul.w	r8, r8, r5
 801fe74:	f10a 0520 	add.w	r5, sl, #32
 801fe78:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801fe7c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801fe80:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801fe84:	4442      	add	r2, r8
 801fe86:	0a2d      	lsrs	r5, r5, #8
 801fe88:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801fe8c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801fe90:	432a      	orrs	r2, r5
 801fe92:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801fe94:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801fe98:	2cff      	cmp	r4, #255	@ 0xff
 801fe9a:	d01a      	beq.n	801fed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801fe9c:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801fea0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801fea4:	fb04 fa05 	mul.w	sl, r4, r5
 801fea8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801feac:	fb08 f80e 	mul.w	r8, r8, lr
 801feb0:	f10a 0e20 	add.w	lr, sl, #32
 801feb4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801feb8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801febc:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801fec0:	4445      	add	r5, r8
 801fec2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fec6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801feca:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801fece:	ea45 050e 	orr.w	r5, r5, lr
 801fed2:	fb1c fe01 	smulbb	lr, ip, r1
 801fed6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801feda:	f1cc 0810 	rsb	r8, ip, #16
 801fede:	eba8 0801 	sub.w	r8, r8, r1
 801fee2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801fee6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801feea:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801feee:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801fef2:	4341      	muls	r1, r0
 801fef4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801fef8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801fefc:	ea4a 0202 	orr.w	r2, sl, r2
 801ff00:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801ff04:	fb09 1108 	mla	r1, r9, r8, r1
 801ff08:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ff0c:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801ff10:	fb0c 1102 	mla	r1, ip, r2, r1
 801ff14:	ea4b 0505 	orr.w	r5, fp, r5
 801ff18:	fb0e 1e05 	mla	lr, lr, r5, r1
 801ff1c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801ff20:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801ff24:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ff28:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801ff2c:	ea42 0e0e 	orr.w	lr, r2, lr
 801ff30:	fa1f f28e 	uxth.w	r2, lr
 801ff34:	2bff      	cmp	r3, #255	@ 0xff
 801ff36:	f040 80a1 	bne.w	802007c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801ff3a:	803a      	strh	r2, [r7, #0]
 801ff3c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801ff3e:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801ff40:	4413      	add	r3, r2
 801ff42:	931d      	str	r3, [sp, #116]	@ 0x74
 801ff44:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801ff46:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ff48:	441a      	add	r2, r3
 801ff4a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801ff4c:	921e      	str	r2, [sp, #120]	@ 0x78
 801ff4e:	3b01      	subs	r3, #1
 801ff50:	3702      	adds	r7, #2
 801ff52:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ff54:	e6c9      	b.n	801fcea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ff56:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801ff58:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801ff5a:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 801ff5c:	4433      	add	r3, r6
 801ff5e:	931d      	str	r3, [sp, #116]	@ 0x74
 801ff60:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ff62:	441c      	add	r4, r3
 801ff64:	9b06      	ldr	r3, [sp, #24]
 801ff66:	941e      	str	r4, [sp, #120]	@ 0x78
 801ff68:	3b01      	subs	r3, #1
 801ff6a:	9306      	str	r3, [sp, #24]
 801ff6c:	9b07      	ldr	r3, [sp, #28]
 801ff6e:	3302      	adds	r3, #2
 801ff70:	9307      	str	r3, [sp, #28]
 801ff72:	e698      	b.n	801fca6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ff74:	d028      	beq.n	801ffc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801ff76:	9b06      	ldr	r3, [sp, #24]
 801ff78:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801ff7a:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801ff7c:	3b01      	subs	r3, #1
 801ff7e:	fb00 5003 	mla	r0, r0, r3, r5
 801ff82:	1400      	asrs	r0, r0, #16
 801ff84:	f53f aeac 	bmi.w	801fce0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ff88:	3901      	subs	r1, #1
 801ff8a:	4288      	cmp	r0, r1
 801ff8c:	f6bf aea8 	bge.w	801fce0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ff90:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801ff92:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801ff94:	fb01 0303 	mla	r3, r1, r3, r0
 801ff98:	141b      	asrs	r3, r3, #16
 801ff9a:	f53f aea1 	bmi.w	801fce0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ff9e:	3a01      	subs	r2, #1
 801ffa0:	4293      	cmp	r3, r2
 801ffa2:	f6bf ae9d 	bge.w	801fce0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ffa6:	9b06      	ldr	r3, [sp, #24]
 801ffa8:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801ffac:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ffae:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801ffb2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801ffb4:	2b00      	cmp	r3, #0
 801ffb6:	f300 80b6 	bgt.w	8020126 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801ffba:	9b06      	ldr	r3, [sp, #24]
 801ffbc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ffc0:	9b07      	ldr	r3, [sp, #28]
 801ffc2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ffc6:	9307      	str	r3, [sp, #28]
 801ffc8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ffca:	2b00      	cmp	r3, #0
 801ffcc:	f340 8218 	ble.w	8020400 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801ffd0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ffd4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ffd8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ffdc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ffde:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ffe2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ffe6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ffea:	eef0 6a62 	vmov.f32	s13, s5
 801ffee:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fff2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fff6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fffa:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801fffe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020002:	eef0 6a43 	vmov.f32	s13, s6
 8020006:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802000a:	ee12 2a90 	vmov	r2, s5
 802000e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020012:	fb92 f3f3 	sdiv	r3, r2, r3
 8020016:	ee13 2a10 	vmov	r2, s6
 802001a:	931f      	str	r3, [sp, #124]	@ 0x7c
 802001c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802001e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020022:	9320      	str	r3, [sp, #128]	@ 0x80
 8020024:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8020026:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8020028:	3b01      	subs	r3, #1
 802002a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802002e:	930e      	str	r3, [sp, #56]	@ 0x38
 8020030:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020032:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 8020036:	bf08      	it	eq
 8020038:	4613      	moveq	r3, r2
 802003a:	9306      	str	r3, [sp, #24]
 802003c:	eeb0 3a67 	vmov.f32	s6, s15
 8020040:	eef0 2a47 	vmov.f32	s5, s14
 8020044:	e621      	b.n	801fc8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8020046:	fb08 f505 	mul.w	r5, r8, r5
 802004a:	fb09 5303 	mla	r3, r9, r3, r5
 802004e:	e6a1      	b.n	801fd94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8020050:	4681      	mov	r9, r0
 8020052:	e6c8      	b.n	801fde6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8020054:	f1c1 0210 	rsb	r2, r1, #16
 8020058:	4341      	muls	r1, r0
 802005a:	fb09 1902 	mla	r9, r9, r2, r1
 802005e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8020062:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8020066:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802006a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802006e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8020072:	ea42 0909 	orr.w	r9, r2, r9
 8020076:	fa1f f289 	uxth.w	r2, r9
 802007a:	e75b      	b.n	801ff34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802007c:	f8b7 c000 	ldrh.w	ip, [r7]
 8020080:	43db      	mvns	r3, r3
 8020082:	ea4f 202c 	mov.w	r0, ip, asr #8
 8020086:	fa5f fe83 	uxtb.w	lr, r3
 802008a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802008e:	fb00 f00e 	mul.w	r0, r0, lr
 8020092:	1c41      	adds	r1, r0, #1
 8020094:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8020098:	1211      	asrs	r1, r2, #8
 802009a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802009e:	f021 0107 	bic.w	r1, r1, #7
 80200a2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80200a6:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80200aa:	48d7      	ldr	r0, [pc, #860]	@ (8020408 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80200ac:	fb05 f50e 	mul.w	r5, r5, lr
 80200b0:	b2c9      	uxtb	r1, r1
 80200b2:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 80200b6:	1c69      	adds	r1, r5, #1
 80200b8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80200bc:	10d1      	asrs	r1, r2, #3
 80200be:	f021 0103 	bic.w	r1, r1, #3
 80200c2:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80200c6:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80200ca:	b2db      	uxtb	r3, r3
 80200cc:	00c9      	lsls	r1, r1, #3
 80200ce:	fb03 f30e 	mul.w	r3, r3, lr
 80200d2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80200d6:	4301      	orrs	r1, r0
 80200d8:	1c58      	adds	r0, r3, #1
 80200da:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80200de:	00d2      	lsls	r2, r2, #3
 80200e0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80200e4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80200e8:	430a      	orrs	r2, r1
 80200ea:	e726      	b.n	801ff3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 80200ec:	f115 0e01 	adds.w	lr, r5, #1
 80200f0:	f53f af24 	bmi.w	801ff3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80200f4:	4572      	cmp	r2, lr
 80200f6:	f6ff af21 	blt.w	801ff3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80200fa:	f110 0e01 	adds.w	lr, r0, #1
 80200fe:	f53f af1d 	bmi.w	801ff3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8020102:	4573      	cmp	r3, lr
 8020104:	f6ff af1a 	blt.w	801ff3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8020108:	b21b      	sxth	r3, r3
 802010a:	b212      	sxth	r2, r2
 802010c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8020110:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8020114:	9301      	str	r3, [sp, #4]
 8020116:	9200      	str	r2, [sp, #0]
 8020118:	4639      	mov	r1, r7
 802011a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802011e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8020120:	f7ff fc24 	bl	801f96c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8020124:	e70a      	b.n	801ff3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8020126:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8020128:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802012c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802012e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8020132:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020134:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020138:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802013a:	141f      	asrs	r7, r3, #16
 802013c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 802013e:	141b      	asrs	r3, r3, #16
 8020140:	fb01 3707 	mla	r7, r1, r7, r3
 8020144:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020146:	fa1f fc82 	uxth.w	ip, r2
 802014a:	eb03 0a07 	add.w	sl, r3, r7
 802014e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8020152:	f813 9007 	ldrb.w	r9, [r3, r7]
 8020156:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802015a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 802015e:	b29b      	uxth	r3, r3
 8020160:	2d00      	cmp	r5, #0
 8020162:	f000 80fe 	beq.w	8020362 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8020166:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802016a:	940c      	str	r4, [sp, #48]	@ 0x30
 802016c:	eb0a 0b01 	add.w	fp, sl, r1
 8020170:	fa1f fa85 	uxth.w	sl, r5
 8020174:	fb0a fc0c 	mul.w	ip, sl, ip
 8020178:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802017c:	fa1f fa8a 	uxth.w	sl, sl
 8020180:	eba0 000c 	sub.w	r0, r0, ip
 8020184:	eba3 030a 	sub.w	r3, r3, sl
 8020188:	b280      	uxth	r0, r0
 802018a:	fb08 f000 	mul.w	r0, r8, r0
 802018e:	b29b      	uxth	r3, r3
 8020190:	fb09 0303 	mla	r3, r9, r3, r0
 8020194:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8020196:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802019a:	940d      	str	r4, [sp, #52]	@ 0x34
 802019c:	fb0a 3300 	mla	r3, sl, r0, r3
 80201a0:	fb0c 3304 	mla	r3, ip, r4, r3
 80201a4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80201a8:	2b00      	cmp	r3, #0
 80201aa:	f000 80cc 	beq.w	8020346 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80201ae:	9808      	ldr	r0, [sp, #32]
 80201b0:	9c08      	ldr	r4, [sp, #32]
 80201b2:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80201b6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80201ba:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80201be:	f000 80d5 	beq.w	802036c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80201c2:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 80201c6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80201ca:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80201ce:	fb09 f707 	mul.w	r7, r9, r7
 80201d2:	fb0a fc0c 	mul.w	ip, sl, ip
 80201d6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80201da:	f107 0b20 	add.w	fp, r7, #32
 80201de:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 80201e2:	44cc      	add	ip, r9
 80201e4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80201e8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80201ec:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80201f0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80201f4:	ea4c 0909 	orr.w	r9, ip, r9
 80201f8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 80201fc:	8847      	ldrh	r7, [r0, #2]
 80201fe:	d019      	beq.n	8020234 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8020200:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8020204:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8020208:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802020c:	fb08 f807 	mul.w	r8, r8, r7
 8020210:	fb0a fc0c 	mul.w	ip, sl, ip
 8020214:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8020218:	f108 0b20 	add.w	fp, r8, #32
 802021c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8020220:	44bc      	add	ip, r7
 8020222:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8020226:	0a3f      	lsrs	r7, r7, #8
 8020228:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802022c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8020230:	ea4c 0707 	orr.w	r7, ip, r7
 8020234:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8020238:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802023c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8020240:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8020244:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8020248:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 802024c:	ea4c 0909 	orr.w	r9, ip, r9
 8020250:	ea4a 0707 	orr.w	r7, sl, r7
 8020254:	2d00      	cmp	r5, #0
 8020256:	f000 808b 	beq.w	8020370 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802025a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 802025e:	3901      	subs	r1, #1
 8020260:	0049      	lsls	r1, r1, #1
 8020262:	3102      	adds	r1, #2
 8020264:	eb00 0c01 	add.w	ip, r0, r1
 8020268:	5a41      	ldrh	r1, [r0, r1]
 802026a:	980c      	ldr	r0, [sp, #48]	@ 0x30
 802026c:	28ff      	cmp	r0, #255	@ 0xff
 802026e:	d019      	beq.n	80202a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8020270:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8020272:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8020276:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802027a:	fb04 fa01 	mul.w	sl, r4, r1
 802027e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020282:	fb08 f800 	mul.w	r8, r8, r0
 8020286:	f10a 0020 	add.w	r0, sl, #32
 802028a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802028e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8020292:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8020296:	4441      	add	r1, r8
 8020298:	0a00      	lsrs	r0, r0, #8
 802029a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802029e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80202a2:	4301      	orrs	r1, r0
 80202a4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80202a6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80202aa:	2cff      	cmp	r4, #255	@ 0xff
 80202ac:	d01a      	beq.n	80202e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 80202ae:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 80202b2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80202b6:	fb04 fa00 	mul.w	sl, r4, r0
 80202ba:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80202be:	fb08 f80c 	mul.w	r8, r8, ip
 80202c2:	f10a 0c20 	add.w	ip, sl, #32
 80202c6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80202ca:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80202ce:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80202d2:	4440      	add	r0, r8
 80202d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80202d8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80202dc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80202e0:	ea40 000c 	orr.w	r0, r0, ip
 80202e4:	fb15 fc02 	smulbb	ip, r5, r2
 80202e8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80202ec:	f1c5 0810 	rsb	r8, r5, #16
 80202f0:	eba8 0802 	sub.w	r8, r8, r2
 80202f4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80202f8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80202fc:	437a      	muls	r2, r7
 80202fe:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8020302:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8020306:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 802030a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 802030e:	fb09 2208 	mla	r2, r9, r8, r2
 8020312:	ea4a 0101 	orr.w	r1, sl, r1
 8020316:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802031a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802031e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8020322:	fb05 2201 	mla	r2, r5, r1, r2
 8020326:	ea4b 0000 	orr.w	r0, fp, r0
 802032a:	fb0c 2200 	mla	r2, ip, r0, r2
 802032e:	0d57      	lsrs	r7, r2, #21
 8020330:	0952      	lsrs	r2, r2, #5
 8020332:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8020336:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802033a:	433a      	orrs	r2, r7
 802033c:	2bff      	cmp	r3, #255	@ 0xff
 802033e:	b292      	uxth	r2, r2
 8020340:	d127      	bne.n	8020392 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8020342:	f8ae 2000 	strh.w	r2, [lr]
 8020346:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8020348:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 802034a:	4413      	add	r3, r2
 802034c:	931d      	str	r3, [sp, #116]	@ 0x74
 802034e:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8020350:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020352:	441a      	add	r2, r3
 8020354:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8020356:	921e      	str	r2, [sp, #120]	@ 0x78
 8020358:	3b01      	subs	r3, #1
 802035a:	f10e 0e02 	add.w	lr, lr, #2
 802035e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8020360:	e627      	b.n	801ffb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8020362:	fb08 f000 	mul.w	r0, r8, r0
 8020366:	fb09 0303 	mla	r3, r9, r3, r0
 802036a:	e71b      	b.n	80201a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 802036c:	46b9      	mov	r9, r7
 802036e:	e743      	b.n	80201f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8020370:	f1c2 0110 	rsb	r1, r2, #16
 8020374:	437a      	muls	r2, r7
 8020376:	fb09 2901 	mla	r9, r9, r1, r2
 802037a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802037e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8020382:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8020386:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802038a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802038e:	4302      	orrs	r2, r0
 8020390:	e7d4      	b.n	802033c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8020392:	f8be 7000 	ldrh.w	r7, [lr]
 8020396:	4c1c      	ldr	r4, [pc, #112]	@ (8020408 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8020398:	43db      	mvns	r3, r3
 802039a:	1238      	asrs	r0, r7, #8
 802039c:	fa5f fc83 	uxtb.w	ip, r3
 80203a0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80203a4:	10fd      	asrs	r5, r7, #3
 80203a6:	fb00 f00c 	mul.w	r0, r0, ip
 80203aa:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80203ae:	fb05 f10c 	mul.w	r1, r5, ip
 80203b2:	1c45      	adds	r5, r0, #1
 80203b4:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80203b8:	1215      	asrs	r5, r2, #8
 80203ba:	f025 0507 	bic.w	r5, r5, #7
 80203be:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80203c2:	1c4d      	adds	r5, r1, #1
 80203c4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80203c8:	10d1      	asrs	r1, r2, #3
 80203ca:	f021 0103 	bic.w	r1, r1, #3
 80203ce:	00fb      	lsls	r3, r7, #3
 80203d0:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80203d4:	b2db      	uxtb	r3, r3
 80203d6:	b2c0      	uxtb	r0, r0
 80203d8:	00c9      	lsls	r1, r1, #3
 80203da:	fb03 f30c 	mul.w	r3, r3, ip
 80203de:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80203e2:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80203e6:	4308      	orrs	r0, r1
 80203e8:	1c59      	adds	r1, r3, #1
 80203ea:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80203ee:	00d2      	lsls	r2, r2, #3
 80203f0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80203f4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80203f8:	4318      	orrs	r0, r3
 80203fa:	f8ae 0000 	strh.w	r0, [lr]
 80203fe:	e7a2      	b.n	8020346 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8020400:	b013      	add	sp, #76	@ 0x4c
 8020402:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020406:	bf00      	nop
 8020408:	fffff800 	.word	0xfffff800

0802040c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 802040c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020410:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 8020414:	fb05 4c03 	mla	ip, r5, r3, r4
 8020418:	2d00      	cmp	r5, #0
 802041a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802041e:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 8020422:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8020426:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 802042a:	8808      	ldrh	r0, [r1, #0]
 802042c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8020430:	f2c0 80a7 	blt.w	8020582 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8020434:	45aa      	cmp	sl, r5
 8020436:	f340 80a4 	ble.w	8020582 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802043a:	2c00      	cmp	r4, #0
 802043c:	f2c0 809f 	blt.w	802057e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8020440:	42a3      	cmp	r3, r4
 8020442:	f340 809c 	ble.w	802057e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8020446:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 802044a:	1c62      	adds	r2, r4, #1
 802044c:	f100 809c 	bmi.w	8020588 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8020450:	4293      	cmp	r3, r2
 8020452:	f340 8099 	ble.w	8020588 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8020456:	f1b9 0f00 	cmp.w	r9, #0
 802045a:	f000 8095 	beq.w	8020588 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802045e:	f8be c002 	ldrh.w	ip, [lr, #2]
 8020462:	3501      	adds	r5, #1
 8020464:	f100 8094 	bmi.w	8020590 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8020468:	45aa      	cmp	sl, r5
 802046a:	f340 8091 	ble.w	8020590 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802046e:	2f00      	cmp	r7, #0
 8020470:	f000 808e 	beq.w	8020590 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8020474:	2c00      	cmp	r4, #0
 8020476:	f2c0 8089 	blt.w	802058c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802047a:	42a3      	cmp	r3, r4
 802047c:	f340 8086 	ble.w	802058c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8020480:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8020484:	3401      	adds	r4, #1
 8020486:	f100 8086 	bmi.w	8020596 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802048a:	42a3      	cmp	r3, r4
 802048c:	f340 8083 	ble.w	8020596 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8020490:	f1b9 0f00 	cmp.w	r9, #0
 8020494:	d07f      	beq.n	8020596 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8020496:	3301      	adds	r3, #1
 8020498:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 802049c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80204a0:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80204a4:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 80204a8:	fb19 fe07 	smulbb	lr, r9, r7
 80204ac:	ea44 0808 	orr.w	r8, r4, r8
 80204b0:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80204b4:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80204b8:	f1c7 0210 	rsb	r2, r7, #16
 80204bc:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80204c0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80204c4:	ea44 0c0c 	orr.w	ip, r4, ip
 80204c8:	eba2 0209 	sub.w	r2, r2, r9
 80204cc:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80204d0:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80204d4:	fb04 f40c 	mul.w	r4, r4, ip
 80204d8:	fb02 4808 	mla	r8, r2, r8, r4
 80204dc:	041a      	lsls	r2, r3, #16
 80204de:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80204e2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80204e6:	4313      	orrs	r3, r2
 80204e8:	042a      	lsls	r2, r5, #16
 80204ea:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80204ee:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80204f2:	fb0e 8303 	mla	r3, lr, r3, r8
 80204f6:	432a      	orrs	r2, r5
 80204f8:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80204fc:	fb07 3202 	mla	r2, r7, r2, r3
 8020500:	0d53      	lsrs	r3, r2, #21
 8020502:	0952      	lsrs	r2, r2, #5
 8020504:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020508:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802050c:	431a      	orrs	r2, r3
 802050e:	b293      	uxth	r3, r2
 8020510:	b2b4      	uxth	r4, r6
 8020512:	1202      	asrs	r2, r0, #8
 8020514:	43f6      	mvns	r6, r6
 8020516:	b2f6      	uxtb	r6, r6
 8020518:	121d      	asrs	r5, r3, #8
 802051a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802051e:	fb12 f206 	smulbb	r2, r2, r6
 8020522:	10c7      	asrs	r7, r0, #3
 8020524:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8020528:	00c0      	lsls	r0, r0, #3
 802052a:	fb05 2504 	mla	r5, r5, r4, r2
 802052e:	b2c0      	uxtb	r0, r0
 8020530:	10da      	asrs	r2, r3, #3
 8020532:	00db      	lsls	r3, r3, #3
 8020534:	b2db      	uxtb	r3, r3
 8020536:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 802053a:	fb10 f006 	smulbb	r0, r0, r6
 802053e:	b2ad      	uxth	r5, r5
 8020540:	fb03 0004 	mla	r0, r3, r4, r0
 8020544:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8020548:	fb17 f706 	smulbb	r7, r7, r6
 802054c:	b280      	uxth	r0, r0
 802054e:	1c6b      	adds	r3, r5, #1
 8020550:	fb02 7204 	mla	r2, r2, r4, r7
 8020554:	b292      	uxth	r2, r2
 8020556:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802055a:	1c43      	adds	r3, r0, #1
 802055c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020560:	1c50      	adds	r0, r2, #1
 8020562:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8020566:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802056a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802056e:	0952      	lsrs	r2, r2, #5
 8020570:	432b      	orrs	r3, r5
 8020572:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020576:	4313      	orrs	r3, r2
 8020578:	800b      	strh	r3, [r1, #0]
 802057a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802057e:	4680      	mov	r8, r0
 8020580:	e763      	b.n	802044a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8020582:	4684      	mov	ip, r0
 8020584:	4680      	mov	r8, r0
 8020586:	e76c      	b.n	8020462 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8020588:	4684      	mov	ip, r0
 802058a:	e76a      	b.n	8020462 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 802058c:	4605      	mov	r5, r0
 802058e:	e779      	b.n	8020484 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8020590:	4603      	mov	r3, r0
 8020592:	4605      	mov	r5, r0
 8020594:	e782      	b.n	802049c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8020596:	4603      	mov	r3, r0
 8020598:	e780      	b.n	802049c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0802059a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802059a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802059e:	b093      	sub	sp, #76	@ 0x4c
 80205a0:	461d      	mov	r5, r3
 80205a2:	9210      	str	r2, [sp, #64]	@ 0x40
 80205a4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80205a6:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 80205aa:	920b      	str	r2, [sp, #44]	@ 0x2c
 80205ac:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 80205b0:	910a      	str	r1, [sp, #40]	@ 0x28
 80205b2:	6859      	ldr	r1, [r3, #4]
 80205b4:	681b      	ldr	r3, [r3, #0]
 80205b6:	9011      	str	r0, [sp, #68]	@ 0x44
 80205b8:	fb01 2707 	mla	r7, r1, r7, r2
 80205bc:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80205c0:	9307      	str	r3, [sp, #28]
 80205c2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80205c4:	681b      	ldr	r3, [r3, #0]
 80205c6:	9309      	str	r3, [sp, #36]	@ 0x24
 80205c8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80205ca:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 80205ce:	43db      	mvns	r3, r3
 80205d0:	b2db      	uxtb	r3, r3
 80205d2:	9308      	str	r3, [sp, #32]
 80205d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80205d6:	2b00      	cmp	r3, #0
 80205d8:	dc03      	bgt.n	80205e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80205da:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80205dc:	2b00      	cmp	r3, #0
 80205de:	f340 8203 	ble.w	80209e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80205e2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80205e4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80205e8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80205ec:	1e48      	subs	r0, r1, #1
 80205ee:	f102 3cff 	add.w	ip, r2, #4294967295
 80205f2:	2d00      	cmp	r5, #0
 80205f4:	f340 80da 	ble.w	80207ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80205f8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80205fc:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020600:	d406      	bmi.n	8020610 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8020602:	4586      	cmp	lr, r0
 8020604:	da04      	bge.n	8020610 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8020606:	2b00      	cmp	r3, #0
 8020608:	db02      	blt.n	8020610 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802060a:	4563      	cmp	r3, ip
 802060c:	f2c0 80cf 	blt.w	80207ae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020610:	f11e 0e01 	adds.w	lr, lr, #1
 8020614:	f100 80c1 	bmi.w	802079a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020618:	4571      	cmp	r1, lr
 802061a:	f2c0 80be 	blt.w	802079a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802061e:	3301      	adds	r3, #1
 8020620:	f100 80bb 	bmi.w	802079a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020624:	429a      	cmp	r2, r3
 8020626:	f2c0 80b8 	blt.w	802079a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802062a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802062e:	46a9      	mov	r9, r5
 8020630:	f1b9 0f00 	cmp.w	r9, #0
 8020634:	f340 80d8 	ble.w	80207e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8020638:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802063a:	1421      	asrs	r1, r4, #16
 802063c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8020640:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020644:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8020648:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802064c:	f100 8111 	bmi.w	8020872 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8020650:	f10e 3aff 	add.w	sl, lr, #4294967295
 8020654:	4551      	cmp	r1, sl
 8020656:	f280 810c 	bge.w	8020872 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802065a:	2800      	cmp	r0, #0
 802065c:	f2c0 8109 	blt.w	8020872 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8020660:	f103 3aff 	add.w	sl, r3, #4294967295
 8020664:	4550      	cmp	r0, sl
 8020666:	f280 8104 	bge.w	8020872 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802066a:	fa0f f38e 	sxth.w	r3, lr
 802066e:	fb00 1103 	mla	r1, r0, r3, r1
 8020672:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8020674:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8020678:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 802067c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8020680:	f1bc 0f00 	cmp.w	ip, #0
 8020684:	d007      	beq.n	8020696 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8020686:	005b      	lsls	r3, r3, #1
 8020688:	eb0a 0003 	add.w	r0, sl, r3
 802068c:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8020690:	930c      	str	r3, [sp, #48]	@ 0x30
 8020692:	8843      	ldrh	r3, [r0, #2]
 8020694:	930d      	str	r3, [sp, #52]	@ 0x34
 8020696:	ea4f 400e 	mov.w	r0, lr, lsl #16
 802069a:	fb12 f30c 	smulbb	r3, r2, ip
 802069e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80206a2:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80206a6:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80206aa:	10db      	asrs	r3, r3, #3
 80206ac:	ea40 000e 	orr.w	r0, r0, lr
 80206b0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80206b4:	f1cc 0e10 	rsb	lr, ip, #16
 80206b8:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80206bc:	ebae 0e02 	sub.w	lr, lr, r2
 80206c0:	ea4a 0101 	orr.w	r1, sl, r1
 80206c4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80206c8:	4351      	muls	r1, r2
 80206ca:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80206cc:	9f08      	ldr	r7, [sp, #32]
 80206ce:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80206d2:	fb0e 1e00 	mla	lr, lr, r0, r1
 80206d6:	0410      	lsls	r0, r2, #16
 80206d8:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80206dc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80206e0:	4310      	orrs	r0, r2
 80206e2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80206e4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80206e6:	0412      	lsls	r2, r2, #16
 80206e8:	fb03 e000 	mla	r0, r3, r0, lr
 80206ec:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80206f0:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 80206f4:	ea42 020e 	orr.w	r2, r2, lr
 80206f8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80206fc:	fb03 0302 	mla	r3, r3, r2, r0
 8020700:	0d5a      	lsrs	r2, r3, #21
 8020702:	095b      	lsrs	r3, r3, #5
 8020704:	f8b8 0000 	ldrh.w	r0, [r8]
 8020708:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802070c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8020710:	4313      	orrs	r3, r2
 8020712:	b29b      	uxth	r3, r3
 8020714:	1201      	asrs	r1, r0, #8
 8020716:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 802071a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802071e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020722:	fb11 f107 	smulbb	r1, r1, r7
 8020726:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 802072a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 802072e:	00c0      	lsls	r0, r0, #3
 8020730:	fb0c 1c02 	mla	ip, ip, r2, r1
 8020734:	b2c0      	uxtb	r0, r0
 8020736:	10d9      	asrs	r1, r3, #3
 8020738:	00db      	lsls	r3, r3, #3
 802073a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 802073e:	b2db      	uxtb	r3, r3
 8020740:	fb10 f007 	smulbb	r0, r0, r7
 8020744:	fa1f fc8c 	uxth.w	ip, ip
 8020748:	fb03 0302 	mla	r3, r3, r2, r0
 802074c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8020750:	fb1e fe07 	smulbb	lr, lr, r7
 8020754:	fb01 e102 	mla	r1, r1, r2, lr
 8020758:	b29a      	uxth	r2, r3
 802075a:	f10c 0301 	add.w	r3, ip, #1
 802075e:	b289      	uxth	r1, r1
 8020760:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020764:	1c53      	adds	r3, r2, #1
 8020766:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802076a:	1c4a      	adds	r2, r1, #1
 802076c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020770:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8020774:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020778:	0949      	lsrs	r1, r1, #5
 802077a:	ea43 030c 	orr.w	r3, r3, ip
 802077e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8020782:	430b      	orrs	r3, r1
 8020784:	f8a8 3000 	strh.w	r3, [r8]
 8020788:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802078a:	441c      	add	r4, r3
 802078c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802078e:	f108 0802 	add.w	r8, r8, #2
 8020792:	441e      	add	r6, r3
 8020794:	f109 39ff 	add.w	r9, r9, #4294967295
 8020798:	e74a      	b.n	8020630 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802079a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802079c:	441c      	add	r4, r3
 802079e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80207a0:	441e      	add	r6, r3
 80207a2:	9b07      	ldr	r3, [sp, #28]
 80207a4:	3302      	adds	r3, #2
 80207a6:	3d01      	subs	r5, #1
 80207a8:	9307      	str	r3, [sp, #28]
 80207aa:	e722      	b.n	80205f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80207ac:	d022      	beq.n	80207f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 80207ae:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80207b0:	1e6b      	subs	r3, r5, #1
 80207b2:	fb00 4003 	mla	r0, r0, r3, r4
 80207b6:	1400      	asrs	r0, r0, #16
 80207b8:	f53f af37 	bmi.w	802062a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80207bc:	3901      	subs	r1, #1
 80207be:	4288      	cmp	r0, r1
 80207c0:	f6bf af33 	bge.w	802062a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80207c4:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80207c6:	fb01 6303 	mla	r3, r1, r3, r6
 80207ca:	141b      	asrs	r3, r3, #16
 80207cc:	f53f af2d 	bmi.w	802062a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80207d0:	3a01      	subs	r2, #1
 80207d2:	4293      	cmp	r3, r2
 80207d4:	f6bf af29 	bge.w	802062a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80207d8:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80207dc:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 80207e0:	46a8      	mov	r8, r5
 80207e2:	f1b8 0f00 	cmp.w	r8, #0
 80207e6:	dc5e      	bgt.n	80208a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80207e8:	9b07      	ldr	r3, [sp, #28]
 80207ea:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80207ee:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80207f2:	9307      	str	r3, [sp, #28]
 80207f4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80207f6:	2b00      	cmp	r3, #0
 80207f8:	f340 80f6 	ble.w	80209e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80207fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020800:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020804:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020808:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802080a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802080e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020812:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020816:	eef0 6a62 	vmov.f32	s13, s5
 802081a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802081e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020822:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020826:	ee16 4a90 	vmov	r4, s13
 802082a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802082e:	eef0 6a43 	vmov.f32	s13, s6
 8020832:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020836:	ee12 2a90 	vmov	r2, s5
 802083a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802083e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020842:	ee13 2a10 	vmov	r2, s6
 8020846:	931f      	str	r3, [sp, #124]	@ 0x7c
 8020848:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802084a:	fb92 f3f3 	sdiv	r3, r2, r3
 802084e:	9320      	str	r3, [sp, #128]	@ 0x80
 8020850:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020852:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8020854:	3b01      	subs	r3, #1
 8020856:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802085a:	930a      	str	r3, [sp, #40]	@ 0x28
 802085c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802085e:	ee16 6a90 	vmov	r6, s13
 8020862:	bf14      	ite	ne
 8020864:	461d      	movne	r5, r3
 8020866:	4615      	moveq	r5, r2
 8020868:	eeb0 3a67 	vmov.f32	s6, s15
 802086c:	eef0 2a47 	vmov.f32	s5, s14
 8020870:	e6b0      	b.n	80205d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8020872:	f111 0a01 	adds.w	sl, r1, #1
 8020876:	d487      	bmi.n	8020788 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020878:	45d6      	cmp	lr, sl
 802087a:	db85      	blt.n	8020788 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802087c:	f110 0a01 	adds.w	sl, r0, #1
 8020880:	d482      	bmi.n	8020788 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020882:	4553      	cmp	r3, sl
 8020884:	db80      	blt.n	8020788 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020886:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8020888:	9101      	str	r1, [sp, #4]
 802088a:	b21b      	sxth	r3, r3
 802088c:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8020890:	9300      	str	r3, [sp, #0]
 8020892:	e9cd c704 	strd	ip, r7, [sp, #16]
 8020896:	fa0f f38e 	sxth.w	r3, lr
 802089a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802089c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802089e:	4641      	mov	r1, r8
 80208a0:	f7ff fdb4 	bl	802040c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 80208a4:	e770      	b.n	8020788 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80208a6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80208a8:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 80208aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80208ae:	1430      	asrs	r0, r6, #16
 80208b0:	1423      	asrs	r3, r4, #16
 80208b2:	fb01 3000 	mla	r0, r1, r0, r3
 80208b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80208b8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 80208bc:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80208c0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80208c4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80208c8:	8858      	ldrh	r0, [r3, #2]
 80208ca:	f1be 0f00 	cmp.w	lr, #0
 80208ce:	d00b      	beq.n	80208e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 80208d0:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 80208d4:	3901      	subs	r1, #1
 80208d6:	0049      	lsls	r1, r1, #1
 80208d8:	3102      	adds	r1, #2
 80208da:	eb03 0b01 	add.w	fp, r3, r1
 80208de:	5a5b      	ldrh	r3, [r3, r1]
 80208e0:	930e      	str	r3, [sp, #56]	@ 0x38
 80208e2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80208e6:	930f      	str	r3, [sp, #60]	@ 0x3c
 80208e8:	ea4f 410c 	mov.w	r1, ip, lsl #16
 80208ec:	fb12 f30e 	smulbb	r3, r2, lr
 80208f0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80208f4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80208f8:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 80208fc:	10db      	asrs	r3, r3, #3
 80208fe:	ea41 010c 	orr.w	r1, r1, ip
 8020902:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8020906:	f1ce 0c10 	rsb	ip, lr, #16
 802090a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802090e:	ebac 0c02 	sub.w	ip, ip, r2
 8020912:	ea4b 0000 	orr.w	r0, fp, r0
 8020916:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802091a:	4350      	muls	r0, r2
 802091c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802091e:	9f08      	ldr	r7, [sp, #32]
 8020920:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8020924:	fb0c 0c01 	mla	ip, ip, r1, r0
 8020928:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802092c:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 8020930:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8020932:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8020934:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8020938:	0412      	lsls	r2, r2, #16
 802093a:	ea4b 0101 	orr.w	r1, fp, r1
 802093e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8020942:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8020946:	fb03 c101 	mla	r1, r3, r1, ip
 802094a:	4302      	orrs	r2, r0
 802094c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8020950:	fb03 1202 	mla	r2, r3, r2, r1
 8020954:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8020958:	0952      	lsrs	r2, r2, #5
 802095a:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 802095e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8020962:	f8b9 2000 	ldrh.w	r2, [r9]
 8020966:	ea4b 0303 	orr.w	r3, fp, r3
 802096a:	b29b      	uxth	r3, r3
 802096c:	1211      	asrs	r1, r2, #8
 802096e:	1218      	asrs	r0, r3, #8
 8020970:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020974:	fb11 f107 	smulbb	r1, r1, r7
 8020978:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 802097c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020980:	00d2      	lsls	r2, r2, #3
 8020982:	fb00 100a 	mla	r0, r0, sl, r1
 8020986:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 802098a:	10d9      	asrs	r1, r3, #3
 802098c:	b2d2      	uxtb	r2, r2
 802098e:	00db      	lsls	r3, r3, #3
 8020990:	fb1c fc07 	smulbb	ip, ip, r7
 8020994:	fb12 f207 	smulbb	r2, r2, r7
 8020998:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802099c:	b2db      	uxtb	r3, r3
 802099e:	b280      	uxth	r0, r0
 80209a0:	fb01 c10a 	mla	r1, r1, sl, ip
 80209a4:	fb03 230a 	mla	r3, r3, sl, r2
 80209a8:	b29b      	uxth	r3, r3
 80209aa:	b289      	uxth	r1, r1
 80209ac:	1c42      	adds	r2, r0, #1
 80209ae:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80209b2:	f101 0c01 	add.w	ip, r1, #1
 80209b6:	1c5a      	adds	r2, r3, #1
 80209b8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80209bc:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80209c0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80209c2:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80209c6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80209ca:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80209ce:	4310      	orrs	r0, r2
 80209d0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80209d4:	441c      	add	r4, r3
 80209d6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80209d8:	ea40 000c 	orr.w	r0, r0, ip
 80209dc:	f829 0b02 	strh.w	r0, [r9], #2
 80209e0:	441e      	add	r6, r3
 80209e2:	f108 38ff 	add.w	r8, r8, #4294967295
 80209e6:	e6fc      	b.n	80207e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 80209e8:	b013      	add	sp, #76	@ 0x4c
 80209ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080209ee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 80209ee:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80209f2:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 80209f6:	fb0e 4703 	mla	r7, lr, r3, r4
 80209fa:	f1be 0f00 	cmp.w	lr, #0
 80209fe:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8020a02:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 8020a06:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 8020a0a:	8808      	ldrh	r0, [r1, #0]
 8020a0c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8020a10:	db60      	blt.n	8020ad4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8020a12:	45f1      	cmp	r9, lr
 8020a14:	dd5e      	ble.n	8020ad4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8020a16:	2c00      	cmp	r4, #0
 8020a18:	db5a      	blt.n	8020ad0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8020a1a:	42a3      	cmp	r3, r4
 8020a1c:	dd58      	ble.n	8020ad0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8020a1e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8020a22:	1c62      	adds	r2, r4, #1
 8020a24:	d459      	bmi.n	8020ada <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8020a26:	4293      	cmp	r3, r2
 8020a28:	dd57      	ble.n	8020ada <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8020a2a:	2d00      	cmp	r5, #0
 8020a2c:	d055      	beq.n	8020ada <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8020a2e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8020a32:	f11e 0e01 	adds.w	lr, lr, #1
 8020a36:	d454      	bmi.n	8020ae2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8020a38:	45f1      	cmp	r9, lr
 8020a3a:	dd52      	ble.n	8020ae2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8020a3c:	2e00      	cmp	r6, #0
 8020a3e:	d050      	beq.n	8020ae2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8020a40:	2c00      	cmp	r4, #0
 8020a42:	db4c      	blt.n	8020ade <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8020a44:	42a3      	cmp	r3, r4
 8020a46:	dd4a      	ble.n	8020ade <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8020a48:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8020a4c:	3401      	adds	r4, #1
 8020a4e:	d405      	bmi.n	8020a5c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8020a50:	42a3      	cmp	r3, r4
 8020a52:	dd03      	ble.n	8020a5c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8020a54:	b115      	cbz	r5, 8020a5c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8020a56:	3301      	adds	r3, #1
 8020a58:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8020a5c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8020a60:	fb15 f406 	smulbb	r4, r5, r6
 8020a64:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8020a68:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8020a6c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8020a70:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8020a74:	ea43 0c0c 	orr.w	ip, r3, ip
 8020a78:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8020a7c:	f1c6 0310 	rsb	r3, r6, #16
 8020a80:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8020a84:	1b5b      	subs	r3, r3, r5
 8020a86:	ea4e 0707 	orr.w	r7, lr, r7
 8020a8a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8020a8e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020a92:	437d      	muls	r5, r7
 8020a94:	fb03 5c0c 	mla	ip, r3, ip, r5
 8020a98:	0403      	lsls	r3, r0, #16
 8020a9a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8020a9e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8020aa2:	4318      	orrs	r0, r3
 8020aa4:	0413      	lsls	r3, r2, #16
 8020aa6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8020aaa:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8020aae:	4313      	orrs	r3, r2
 8020ab0:	fb04 c000 	mla	r0, r4, r0, ip
 8020ab4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8020ab8:	fb06 0003 	mla	r0, r6, r3, r0
 8020abc:	0d43      	lsrs	r3, r0, #21
 8020abe:	0940      	lsrs	r0, r0, #5
 8020ac0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020ac4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8020ac8:	4318      	orrs	r0, r3
 8020aca:	8008      	strh	r0, [r1, #0]
 8020acc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8020ad0:	4684      	mov	ip, r0
 8020ad2:	e7a6      	b.n	8020a22 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8020ad4:	4607      	mov	r7, r0
 8020ad6:	4684      	mov	ip, r0
 8020ad8:	e7ab      	b.n	8020a32 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8020ada:	4607      	mov	r7, r0
 8020adc:	e7a9      	b.n	8020a32 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8020ade:	4602      	mov	r2, r0
 8020ae0:	e7b4      	b.n	8020a4c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8020ae2:	4602      	mov	r2, r0
 8020ae4:	e7ba      	b.n	8020a5c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08020ae6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020ae6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020aea:	b08f      	sub	sp, #60	@ 0x3c
 8020aec:	461d      	mov	r5, r3
 8020aee:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8020af0:	920c      	str	r2, [sp, #48]	@ 0x30
 8020af2:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 8020af6:	9107      	str	r1, [sp, #28]
 8020af8:	6859      	ldr	r1, [r3, #4]
 8020afa:	681b      	ldr	r3, [r3, #0]
 8020afc:	900d      	str	r0, [sp, #52]	@ 0x34
 8020afe:	fb01 2707 	mla	r7, r1, r7, r2
 8020b02:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8020b06:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020b08:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 8020b0c:	f8d3 8000 	ldr.w	r8, [r3]
 8020b10:	9b07      	ldr	r3, [sp, #28]
 8020b12:	2b00      	cmp	r3, #0
 8020b14:	dc03      	bgt.n	8020b1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8020b16:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020b18:	2b00      	cmp	r3, #0
 8020b1a:	f340 8181 	ble.w	8020e20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8020b1e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020b20:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020b24:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020b28:	1e48      	subs	r0, r1, #1
 8020b2a:	f102 3cff 	add.w	ip, r2, #4294967295
 8020b2e:	2d00      	cmp	r5, #0
 8020b30:	f340 809b 	ble.w	8020c6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8020b34:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020b38:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020b3c:	d406      	bmi.n	8020b4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8020b3e:	4586      	cmp	lr, r0
 8020b40:	da04      	bge.n	8020b4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8020b42:	2b00      	cmp	r3, #0
 8020b44:	db02      	blt.n	8020b4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8020b46:	4563      	cmp	r3, ip
 8020b48:	f2c0 8090 	blt.w	8020c6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020b4c:	f11e 0e01 	adds.w	lr, lr, #1
 8020b50:	f100 8084 	bmi.w	8020c5c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8020b54:	4571      	cmp	r1, lr
 8020b56:	f2c0 8081 	blt.w	8020c5c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8020b5a:	3301      	adds	r3, #1
 8020b5c:	d47e      	bmi.n	8020c5c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8020b5e:	429a      	cmp	r2, r3
 8020b60:	db7c      	blt.n	8020c5c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8020b62:	46aa      	mov	sl, r5
 8020b64:	46b9      	mov	r9, r7
 8020b66:	f1ba 0f00 	cmp.w	sl, #0
 8020b6a:	f340 8099 	ble.w	8020ca0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8020b6e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020b70:	1421      	asrs	r1, r4, #16
 8020b72:	ea4f 4026 	mov.w	r0, r6, asr #16
 8020b76:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020b7a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8020b7e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8020b82:	f100 80d0 	bmi.w	8020d26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8020b86:	f10e 3bff 	add.w	fp, lr, #4294967295
 8020b8a:	4559      	cmp	r1, fp
 8020b8c:	f280 80cb 	bge.w	8020d26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8020b90:	2800      	cmp	r0, #0
 8020b92:	f2c0 80c8 	blt.w	8020d26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8020b96:	f103 3bff 	add.w	fp, r3, #4294967295
 8020b9a:	4558      	cmp	r0, fp
 8020b9c:	f280 80c3 	bge.w	8020d26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8020ba0:	fa0f fe8e 	sxth.w	lr, lr
 8020ba4:	fb00 110e 	mla	r1, r0, lr, r1
 8020ba8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8020bac:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8020bb0:	8841      	ldrh	r1, [r0, #2]
 8020bb2:	f1bc 0f00 	cmp.w	ip, #0
 8020bb6:	d00b      	beq.n	8020bd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8020bb8:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 8020bbc:	3b01      	subs	r3, #1
 8020bbe:	005b      	lsls	r3, r3, #1
 8020bc0:	3302      	adds	r3, #2
 8020bc2:	eb00 0e03 	add.w	lr, r0, r3
 8020bc6:	5ac3      	ldrh	r3, [r0, r3]
 8020bc8:	9308      	str	r3, [sp, #32]
 8020bca:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8020bce:	9309      	str	r3, [sp, #36]	@ 0x24
 8020bd0:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8020bd4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8020bd8:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8020bdc:	ea40 000b 	orr.w	r0, r0, fp
 8020be0:	fb12 f30c 	smulbb	r3, r2, ip
 8020be4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020be8:	10db      	asrs	r3, r3, #3
 8020bea:	f1cc 0e10 	rsb	lr, ip, #16
 8020bee:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8020bf2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8020bf6:	ebae 0e02 	sub.w	lr, lr, r2
 8020bfa:	ea4b 0101 	orr.w	r1, fp, r1
 8020bfe:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8020c02:	4351      	muls	r1, r2
 8020c04:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8020c06:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8020c0a:	fb0e 1e00 	mla	lr, lr, r0, r1
 8020c0e:	0410      	lsls	r0, r2, #16
 8020c10:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8020c14:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8020c18:	4310      	orrs	r0, r2
 8020c1a:	9a08      	ldr	r2, [sp, #32]
 8020c1c:	9908      	ldr	r1, [sp, #32]
 8020c1e:	0412      	lsls	r2, r2, #16
 8020c20:	fb03 e000 	mla	r0, r3, r0, lr
 8020c24:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8020c28:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8020c2c:	ea42 020e 	orr.w	r2, r2, lr
 8020c30:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8020c34:	fb03 0302 	mla	r3, r3, r2, r0
 8020c38:	0d5a      	lsrs	r2, r3, #21
 8020c3a:	095b      	lsrs	r3, r3, #5
 8020c3c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020c40:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8020c44:	4313      	orrs	r3, r2
 8020c46:	f8a9 3000 	strh.w	r3, [r9]
 8020c4a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8020c4c:	441c      	add	r4, r3
 8020c4e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020c50:	f109 0902 	add.w	r9, r9, #2
 8020c54:	441e      	add	r6, r3
 8020c56:	f10a 3aff 	add.w	sl, sl, #4294967295
 8020c5a:	e784      	b.n	8020b66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8020c5c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8020c5e:	441c      	add	r4, r3
 8020c60:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020c62:	3d01      	subs	r5, #1
 8020c64:	441e      	add	r6, r3
 8020c66:	3702      	adds	r7, #2
 8020c68:	e761      	b.n	8020b2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8020c6a:	d01d      	beq.n	8020ca8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8020c6c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8020c6e:	1e6b      	subs	r3, r5, #1
 8020c70:	fb00 4003 	mla	r0, r0, r3, r4
 8020c74:	1400      	asrs	r0, r0, #16
 8020c76:	f53f af74 	bmi.w	8020b62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020c7a:	3901      	subs	r1, #1
 8020c7c:	4288      	cmp	r0, r1
 8020c7e:	f6bf af70 	bge.w	8020b62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020c82:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8020c84:	fb01 6303 	mla	r3, r1, r3, r6
 8020c88:	141b      	asrs	r3, r3, #16
 8020c8a:	f53f af6a 	bmi.w	8020b62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020c8e:	3a01      	subs	r2, #1
 8020c90:	4293      	cmp	r3, r2
 8020c92:	f6bf af66 	bge.w	8020b62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020c96:	46a9      	mov	r9, r5
 8020c98:	46ba      	mov	sl, r7
 8020c9a:	f1b9 0f00 	cmp.w	r9, #0
 8020c9e:	dc5a      	bgt.n	8020d56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8020ca0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8020ca4:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8020ca8:	9b07      	ldr	r3, [sp, #28]
 8020caa:	2b00      	cmp	r3, #0
 8020cac:	f340 80b8 	ble.w	8020e20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8020cb0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020cb4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020cb8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020cbc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020cbe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020cc2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020cc6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020cca:	eef0 6a62 	vmov.f32	s13, s5
 8020cce:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020cd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020cd6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020cda:	ee16 4a90 	vmov	r4, s13
 8020cde:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020ce2:	eef0 6a43 	vmov.f32	s13, s6
 8020ce6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020cea:	ee12 2a90 	vmov	r2, s5
 8020cee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020cf2:	fb92 f3f3 	sdiv	r3, r2, r3
 8020cf6:	ee13 2a10 	vmov	r2, s6
 8020cfa:	931b      	str	r3, [sp, #108]	@ 0x6c
 8020cfc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020cfe:	fb92 f3f3 	sdiv	r3, r2, r3
 8020d02:	931c      	str	r3, [sp, #112]	@ 0x70
 8020d04:	9b07      	ldr	r3, [sp, #28]
 8020d06:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8020d08:	3b01      	subs	r3, #1
 8020d0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020d0e:	9307      	str	r3, [sp, #28]
 8020d10:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020d12:	ee16 6a90 	vmov	r6, s13
 8020d16:	bf14      	ite	ne
 8020d18:	461d      	movne	r5, r3
 8020d1a:	4615      	moveq	r5, r2
 8020d1c:	eeb0 3a67 	vmov.f32	s6, s15
 8020d20:	eef0 2a47 	vmov.f32	s5, s14
 8020d24:	e6f4      	b.n	8020b10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8020d26:	f111 0b01 	adds.w	fp, r1, #1
 8020d2a:	d48e      	bmi.n	8020c4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020d2c:	45de      	cmp	lr, fp
 8020d2e:	db8c      	blt.n	8020c4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020d30:	f110 0b01 	adds.w	fp, r0, #1
 8020d34:	d489      	bmi.n	8020c4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020d36:	455b      	cmp	r3, fp
 8020d38:	db87      	blt.n	8020c4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020d3a:	b21b      	sxth	r3, r3
 8020d3c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8020d40:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8020d44:	9300      	str	r3, [sp, #0]
 8020d46:	4642      	mov	r2, r8
 8020d48:	fa0f f38e 	sxth.w	r3, lr
 8020d4c:	4649      	mov	r1, r9
 8020d4e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8020d50:	f7ff fe4d 	bl	80209ee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8020d54:	e779      	b.n	8020c4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020d56:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020d58:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8020d5c:	1420      	asrs	r0, r4, #16
 8020d5e:	1431      	asrs	r1, r6, #16
 8020d60:	fb03 0101 	mla	r1, r3, r1, r0
 8020d64:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8020d68:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8020d6c:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8020d70:	8841      	ldrh	r1, [r0, #2]
 8020d72:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020d76:	f1be 0f00 	cmp.w	lr, #0
 8020d7a:	d00b      	beq.n	8020d94 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8020d7c:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8020d80:	3b01      	subs	r3, #1
 8020d82:	005b      	lsls	r3, r3, #1
 8020d84:	3302      	adds	r3, #2
 8020d86:	eb00 0b03 	add.w	fp, r0, r3
 8020d8a:	5ac3      	ldrh	r3, [r0, r3]
 8020d8c:	930a      	str	r3, [sp, #40]	@ 0x28
 8020d8e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8020d92:	930b      	str	r3, [sp, #44]	@ 0x2c
 8020d94:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8020d98:	fb12 f30e 	smulbb	r3, r2, lr
 8020d9c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8020da0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020da4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8020da8:	10db      	asrs	r3, r3, #3
 8020daa:	ea40 000c 	orr.w	r0, r0, ip
 8020dae:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8020db2:	f1ce 0c10 	rsb	ip, lr, #16
 8020db6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8020dba:	ebac 0c02 	sub.w	ip, ip, r2
 8020dbe:	ea4b 0101 	orr.w	r1, fp, r1
 8020dc2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8020dc6:	4351      	muls	r1, r2
 8020dc8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8020dca:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8020dce:	fb0c 1c00 	mla	ip, ip, r0, r1
 8020dd2:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8020dd6:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 8020dda:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8020ddc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8020dde:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8020de2:	0412      	lsls	r2, r2, #16
 8020de4:	ea4b 0000 	orr.w	r0, fp, r0
 8020de8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8020dec:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 8020df0:	fb03 c000 	mla	r0, r3, r0, ip
 8020df4:	ea42 0b0b 	orr.w	fp, r2, fp
 8020df8:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8020dfc:	fb03 000b 	mla	r0, r3, fp, r0
 8020e00:	0d43      	lsrs	r3, r0, #21
 8020e02:	0940      	lsrs	r0, r0, #5
 8020e04:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020e08:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8020e0c:	4318      	orrs	r0, r3
 8020e0e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8020e10:	f82a 0b02 	strh.w	r0, [sl], #2
 8020e14:	441c      	add	r4, r3
 8020e16:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020e18:	f109 39ff 	add.w	r9, r9, #4294967295
 8020e1c:	441e      	add	r6, r3
 8020e1e:	e73c      	b.n	8020c9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8020e20:	b00f      	add	sp, #60	@ 0x3c
 8020e22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020e26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8020e26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020e2a:	b085      	sub	sp, #20
 8020e2c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8020e30:	9102      	str	r1, [sp, #8]
 8020e32:	2c00      	cmp	r4, #0
 8020e34:	fb04 7103 	mla	r1, r4, r3, r7
 8020e38:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8020e3c:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8020e40:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8020e44:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8020e48:	f2c0 811b 	blt.w	8021082 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8020e4c:	45a6      	cmp	lr, r4
 8020e4e:	f340 8118 	ble.w	8021082 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8020e52:	2f00      	cmp	r7, #0
 8020e54:	f2c0 8113 	blt.w	802107e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8020e58:	42bb      	cmp	r3, r7
 8020e5a:	f340 8110 	ble.w	802107e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8020e5e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8020e62:	1c7a      	adds	r2, r7, #1
 8020e64:	f100 8110 	bmi.w	8021088 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8020e68:	4293      	cmp	r3, r2
 8020e6a:	f340 810d 	ble.w	8021088 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8020e6e:	2e00      	cmp	r6, #0
 8020e70:	f000 810c 	beq.w	802108c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8020e74:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8020e78:	3401      	adds	r4, #1
 8020e7a:	f100 810b 	bmi.w	8021094 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8020e7e:	45a6      	cmp	lr, r4
 8020e80:	f340 8108 	ble.w	8021094 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8020e84:	2800      	cmp	r0, #0
 8020e86:	f000 8108 	beq.w	802109a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8020e8a:	2f00      	cmp	r7, #0
 8020e8c:	f2c0 8100 	blt.w	8021090 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8020e90:	42bb      	cmp	r3, r7
 8020e92:	f340 80fd 	ble.w	8021090 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8020e96:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8020e9a:	3701      	adds	r7, #1
 8020e9c:	f100 8100 	bmi.w	80210a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8020ea0:	42bb      	cmp	r3, r7
 8020ea2:	f340 80fd 	ble.w	80210a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8020ea6:	2e00      	cmp	r6, #0
 8020ea8:	f000 80fc 	beq.w	80210a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8020eac:	3301      	adds	r3, #1
 8020eae:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8020eb2:	b2b6      	uxth	r6, r6
 8020eb4:	b280      	uxth	r0, r0
 8020eb6:	fb00 fe06 	mul.w	lr, r0, r6
 8020eba:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8020ebe:	0136      	lsls	r6, r6, #4
 8020ec0:	eba6 070e 	sub.w	r7, r6, lr
 8020ec4:	b280      	uxth	r0, r0
 8020ec6:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8020eca:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8020ece:	b2bf      	uxth	r7, r7
 8020ed0:	1a1b      	subs	r3, r3, r0
 8020ed2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8020ed6:	b29b      	uxth	r3, r3
 8020ed8:	fb0a f607 	mul.w	r6, sl, r7
 8020edc:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8020ee0:	fb0b 6603 	mla	r6, fp, r3, r6
 8020ee4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8020ee8:	fb00 6609 	mla	r6, r0, r9, r6
 8020eec:	fb0e 6608 	mla	r6, lr, r8, r6
 8020ef0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020ef4:	9600      	str	r6, [sp, #0]
 8020ef6:	2e00      	cmp	r6, #0
 8020ef8:	f000 80be 	beq.w	8021078 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8020efc:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8020f00:	fb0b fc0c 	mul.w	ip, fp, ip
 8020f04:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8020f08:	fb0b f505 	mul.w	r5, fp, r5
 8020f0c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8020f10:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8020f14:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8020f18:	44dc      	add	ip, fp
 8020f1a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020f1e:	9501      	str	r5, [sp, #4]
 8020f20:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8020f24:	9503      	str	r5, [sp, #12]
 8020f26:	9d01      	ldr	r5, [sp, #4]
 8020f28:	9e02      	ldr	r6, [sp, #8]
 8020f2a:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8020f2e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020f32:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8020f36:	fb0a fc0c 	mul.w	ip, sl, ip
 8020f3a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8020f3e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8020f42:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8020f46:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8020f4a:	4465      	add	r5, ip
 8020f4c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020f50:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8020f54:	fb09 fc0c 	mul.w	ip, r9, ip
 8020f58:	fb09 f904 	mul.w	r9, r9, r4
 8020f5c:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8020f60:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8020f64:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8020f68:	fb08 f404 	mul.w	r4, r8, r4
 8020f6c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8020f70:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8020f74:	fb08 f802 	mul.w	r8, r8, r2
 8020f78:	fb0a fa01 	mul.w	sl, sl, r1
 8020f7c:	0a22      	lsrs	r2, r4, #8
 8020f7e:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8020f82:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8020f86:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8020f8a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8020f8e:	4414      	add	r4, r2
 8020f90:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8020f94:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8020f98:	0a2d      	lsrs	r5, r5, #8
 8020f9a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8020f9e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8020fa2:	9a03      	ldr	r2, [sp, #12]
 8020fa4:	8836      	ldrh	r6, [r6, #0]
 8020fa6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8020faa:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8020fae:	437d      	muls	r5, r7
 8020fb0:	4461      	add	r1, ip
 8020fb2:	0a24      	lsrs	r4, r4, #8
 8020fb4:	fb02 5503 	mla	r5, r2, r3, r5
 8020fb8:	0a09      	lsrs	r1, r1, #8
 8020fba:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8020fbe:	fb04 540e 	mla	r4, r4, lr, r5
 8020fc2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8020fc6:	fb01 4100 	mla	r1, r1, r0, r4
 8020fca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020fce:	0a09      	lsrs	r1, r1, #8
 8020fd0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020fd4:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8020fd8:	fb07 f70a 	mul.w	r7, r7, sl
 8020fdc:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8020fe0:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8020fe4:	fb03 7101 	mla	r1, r3, r1, r7
 8020fe8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020fec:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8020ff0:	fb0e 1e08 	mla	lr, lr, r8, r1
 8020ff4:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8020ff8:	fb00 e101 	mla	r1, r0, r1, lr
 8020ffc:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8021000:	9a00      	ldr	r2, [sp, #0]
 8021002:	b287      	uxth	r7, r0
 8021004:	437a      	muls	r2, r7
 8021006:	0a09      	lsrs	r1, r1, #8
 8021008:	1c53      	adds	r3, r2, #1
 802100a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802100e:	4321      	orrs	r1, r4
 8021010:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021014:	1235      	asrs	r5, r6, #8
 8021016:	0c0a      	lsrs	r2, r1, #16
 8021018:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802101c:	b2db      	uxtb	r3, r3
 802101e:	fb12 f207 	smulbb	r2, r2, r7
 8021022:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8021026:	fb05 2503 	mla	r5, r5, r3, r2
 802102a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802102e:	10f2      	asrs	r2, r6, #3
 8021030:	b2c8      	uxtb	r0, r1
 8021032:	00f6      	lsls	r6, r6, #3
 8021034:	fb14 f407 	smulbb	r4, r4, r7
 8021038:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802103c:	b2f6      	uxtb	r6, r6
 802103e:	fb10 f007 	smulbb	r0, r0, r7
 8021042:	fb02 4203 	mla	r2, r2, r3, r4
 8021046:	b2ad      	uxth	r5, r5
 8021048:	fb06 0303 	mla	r3, r6, r3, r0
 802104c:	b299      	uxth	r1, r3
 802104e:	b294      	uxth	r4, r2
 8021050:	1c6b      	adds	r3, r5, #1
 8021052:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021056:	1c62      	adds	r2, r4, #1
 8021058:	1c4b      	adds	r3, r1, #1
 802105a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802105e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8021062:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8021066:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802106a:	0952      	lsrs	r2, r2, #5
 802106c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021070:	432b      	orrs	r3, r5
 8021072:	4313      	orrs	r3, r2
 8021074:	9a02      	ldr	r2, [sp, #8]
 8021076:	8013      	strh	r3, [r2, #0]
 8021078:	b005      	add	sp, #20
 802107a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802107e:	2500      	movs	r5, #0
 8021080:	e6ef      	b.n	8020e62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8021082:	2100      	movs	r1, #0
 8021084:	460d      	mov	r5, r1
 8021086:	e6f7      	b.n	8020e78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8021088:	2100      	movs	r1, #0
 802108a:	e6f5      	b.n	8020e78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802108c:	4631      	mov	r1, r6
 802108e:	e6f3      	b.n	8020e78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8021090:	2400      	movs	r4, #0
 8021092:	e702      	b.n	8020e9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8021094:	2200      	movs	r2, #0
 8021096:	4614      	mov	r4, r2
 8021098:	e70b      	b.n	8020eb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802109a:	4602      	mov	r2, r0
 802109c:	4604      	mov	r4, r0
 802109e:	e708      	b.n	8020eb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80210a0:	2200      	movs	r2, #0
 80210a2:	e706      	b.n	8020eb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80210a4:	4632      	mov	r2, r6
 80210a6:	e704      	b.n	8020eb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

080210a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80210a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80210ac:	b09d      	sub	sp, #116	@ 0x74
 80210ae:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 80210b2:	9219      	str	r2, [sp, #100]	@ 0x64
 80210b4:	9307      	str	r3, [sp, #28]
 80210b6:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 80210b8:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 80210bc:	931a      	str	r3, [sp, #104]	@ 0x68
 80210be:	9117      	str	r1, [sp, #92]	@ 0x5c
 80210c0:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 80210c4:	901b      	str	r0, [sp, #108]	@ 0x6c
 80210c6:	6850      	ldr	r0, [r2, #4]
 80210c8:	6812      	ldr	r2, [r2, #0]
 80210ca:	fb00 1303 	mla	r3, r0, r3, r1
 80210ce:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80210d2:	930a      	str	r3, [sp, #40]	@ 0x28
 80210d4:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 80210d6:	681b      	ldr	r3, [r3, #0]
 80210d8:	9310      	str	r3, [sp, #64]	@ 0x40
 80210da:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 80210de:	930b      	str	r3, [sp, #44]	@ 0x2c
 80210e0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80210e2:	2b00      	cmp	r3, #0
 80210e4:	dc03      	bgt.n	80210ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80210e6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80210e8:	2b00      	cmp	r3, #0
 80210ea:	f340 8375 	ble.w	80217d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80210ee:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 80210f0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80210f4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80210f8:	1e48      	subs	r0, r1, #1
 80210fa:	1e57      	subs	r7, r2, #1
 80210fc:	9b07      	ldr	r3, [sp, #28]
 80210fe:	2b00      	cmp	r3, #0
 8021100:	f340 818e 	ble.w	8021420 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8021104:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021108:	ea4f 4326 	mov.w	r3, r6, asr #16
 802110c:	d406      	bmi.n	802111c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802110e:	4584      	cmp	ip, r0
 8021110:	da04      	bge.n	802111c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8021112:	2b00      	cmp	r3, #0
 8021114:	db02      	blt.n	802111c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8021116:	42bb      	cmp	r3, r7
 8021118:	f2c0 8183 	blt.w	8021422 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802111c:	f11c 0c01 	adds.w	ip, ip, #1
 8021120:	f100 8173 	bmi.w	802140a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8021124:	4561      	cmp	r1, ip
 8021126:	f2c0 8170 	blt.w	802140a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802112a:	3301      	adds	r3, #1
 802112c:	f100 816d 	bmi.w	802140a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8021130:	429a      	cmp	r2, r3
 8021132:	f2c0 816a 	blt.w	802140a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8021136:	9b07      	ldr	r3, [sp, #28]
 8021138:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 802113a:	9318      	str	r3, [sp, #96]	@ 0x60
 802113c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802113e:	2b00      	cmp	r3, #0
 8021140:	f340 818c 	ble.w	802145c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8021144:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 8021146:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8021148:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802114c:	689b      	ldr	r3, [r3, #8]
 802114e:	1422      	asrs	r2, r4, #16
 8021150:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8021154:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8021158:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802115c:	f100 81cd 	bmi.w	80214fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8021160:	f103 38ff 	add.w	r8, r3, #4294967295
 8021164:	4542      	cmp	r2, r8
 8021166:	f280 81c8 	bge.w	80214fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802116a:	f1bc 0f00 	cmp.w	ip, #0
 802116e:	f2c0 81c4 	blt.w	80214fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8021172:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021176:	45c4      	cmp	ip, r8
 8021178:	f280 81bf 	bge.w	80214fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802117c:	b21b      	sxth	r3, r3
 802117e:	fb0c 2203 	mla	r2, ip, r3, r2
 8021182:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8021184:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8021188:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802118c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8021190:	2800      	cmp	r0, #0
 8021192:	f000 81a9 	beq.w	80214e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8021196:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802119a:	950c      	str	r5, [sp, #48]	@ 0x30
 802119c:	0e2d      	lsrs	r5, r5, #24
 802119e:	9513      	str	r5, [sp, #76]	@ 0x4c
 80211a0:	b181      	cbz	r1, 80211c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80211a2:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 80211a6:	3b01      	subs	r3, #1
 80211a8:	009b      	lsls	r3, r3, #2
 80211aa:	3304      	adds	r3, #4
 80211ac:	eb08 0c03 	add.w	ip, r8, r3
 80211b0:	f858 3003 	ldr.w	r3, [r8, r3]
 80211b4:	9308      	str	r3, [sp, #32]
 80211b6:	0e1b      	lsrs	r3, r3, #24
 80211b8:	9311      	str	r3, [sp, #68]	@ 0x44
 80211ba:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80211be:	930d      	str	r3, [sp, #52]	@ 0x34
 80211c0:	0e1b      	lsrs	r3, r3, #24
 80211c2:	9314      	str	r3, [sp, #80]	@ 0x50
 80211c4:	b280      	uxth	r0, r0
 80211c6:	b289      	uxth	r1, r1
 80211c8:	fb00 f901 	mul.w	r9, r0, r1
 80211cc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80211d0:	0100      	lsls	r0, r0, #4
 80211d2:	eba0 0809 	sub.w	r8, r0, r9
 80211d6:	b289      	uxth	r1, r1
 80211d8:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 80211dc:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80211de:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80211e0:	fa1f f888 	uxth.w	r8, r8
 80211e4:	1a5b      	subs	r3, r3, r1
 80211e6:	b29b      	uxth	r3, r3
 80211e8:	fb08 f000 	mul.w	r0, r8, r0
 80211ec:	fb03 000e 	mla	r0, r3, lr, r0
 80211f0:	fb01 0005 	mla	r0, r1, r5, r0
 80211f4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80211f6:	fb09 0005 	mla	r0, r9, r5, r0
 80211fa:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80211fe:	2800      	cmp	r0, #0
 8021200:	f000 80fa 	beq.w	80213f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8021204:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8021208:	d01b      	beq.n	8021242 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802120a:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 802120e:	fb0e fa0a 	mul.w	sl, lr, sl
 8021212:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8021216:	fb0e fe02 	mul.w	lr, lr, r2
 802121a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802121e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8021222:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8021226:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802122a:	4452      	add	r2, sl
 802122c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021230:	0a12      	lsrs	r2, r2, #8
 8021232:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021236:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802123a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802123e:	ea42 020c 	orr.w	r2, r2, ip
 8021242:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8021244:	2dff      	cmp	r5, #255	@ 0xff
 8021246:	d021      	beq.n	802128c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8021248:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802124a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802124e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8021250:	fb05 fb0b 	mul.w	fp, r5, fp
 8021254:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8021256:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802125a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802125c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021260:	fb05 fa0a 	mul.w	sl, r5, sl
 8021264:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021268:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802126c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8021270:	44de      	add	lr, fp
 8021272:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021276:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802127a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802127e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021282:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021286:	ea4e 050a 	orr.w	r5, lr, sl
 802128a:	950c      	str	r5, [sp, #48]	@ 0x30
 802128c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802128e:	2dff      	cmp	r5, #255	@ 0xff
 8021290:	d021      	beq.n	80212d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8021292:	9d08      	ldr	r5, [sp, #32]
 8021294:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8021298:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802129a:	fb05 fb0b 	mul.w	fp, r5, fp
 802129e:	9d08      	ldr	r5, [sp, #32]
 80212a0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80212a4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80212a6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80212aa:	fb05 fa0a 	mul.w	sl, r5, sl
 80212ae:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80212b2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80212b6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80212ba:	44de      	add	lr, fp
 80212bc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80212c0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80212c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80212c8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80212cc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80212d0:	ea4e 050a 	orr.w	r5, lr, sl
 80212d4:	9508      	str	r5, [sp, #32]
 80212d6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80212d8:	2dff      	cmp	r5, #255	@ 0xff
 80212da:	d021      	beq.n	8021320 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80212dc:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80212de:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 80212e2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80212e4:	fb05 fb0b 	mul.w	fp, r5, fp
 80212e8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80212ea:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80212ee:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80212f0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80212f4:	fb05 fa0a 	mul.w	sl, r5, sl
 80212f8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80212fc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8021300:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8021304:	44de      	add	lr, fp
 8021306:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802130a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802130e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021312:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021316:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802131a:	ea4e 050a 	orr.w	r5, lr, sl
 802131e:	950d      	str	r5, [sp, #52]	@ 0x34
 8021320:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8021322:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8021326:	9d08      	ldr	r5, [sp, #32]
 8021328:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 802132c:	fb08 fc0c 	mul.w	ip, r8, ip
 8021330:	fb03 cc0e 	mla	ip, r3, lr, ip
 8021334:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8021338:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802133a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802133e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8021342:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8021344:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021348:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 802134c:	fb08 f80e 	mul.w	r8, r8, lr
 8021350:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8021354:	fb03 8202 	mla	r2, r3, r2, r8
 8021358:	9b08      	ldr	r3, [sp, #32]
 802135a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802135c:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 8021360:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8021362:	fb01 220a 	mla	r2, r1, sl, r2
 8021366:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 802136a:	fb09 2901 	mla	r9, r9, r1, r2
 802136e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8021370:	883b      	ldrh	r3, [r7, #0]
 8021372:	4342      	muls	r2, r0
 8021374:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021378:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802137c:	1c50      	adds	r0, r2, #1
 802137e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021382:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8021386:	ea4c 0c09 	orr.w	ip, ip, r9
 802138a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802138e:	1219      	asrs	r1, r3, #8
 8021390:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8021394:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8021398:	b2c0      	uxtb	r0, r0
 802139a:	fb12 f205 	smulbb	r2, r2, r5
 802139e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80213a2:	fb01 2100 	mla	r1, r1, r0, r2
 80213a6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80213aa:	10da      	asrs	r2, r3, #3
 80213ac:	fa5f fc8c 	uxtb.w	ip, ip
 80213b0:	00db      	lsls	r3, r3, #3
 80213b2:	fb1c fc05 	smulbb	ip, ip, r5
 80213b6:	b2db      	uxtb	r3, r3
 80213b8:	b289      	uxth	r1, r1
 80213ba:	fb03 c300 	mla	r3, r3, r0, ip
 80213be:	fa1f fc83 	uxth.w	ip, r3
 80213c2:	1c4b      	adds	r3, r1, #1
 80213c4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80213c8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80213cc:	fb1e fe05 	smulbb	lr, lr, r5
 80213d0:	f10c 0301 	add.w	r3, ip, #1
 80213d4:	fb02 e200 	mla	r2, r2, r0, lr
 80213d8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80213dc:	b292      	uxth	r2, r2
 80213de:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80213e2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80213e6:	430b      	orrs	r3, r1
 80213e8:	1c51      	adds	r1, r2, #1
 80213ea:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80213ee:	0952      	lsrs	r2, r2, #5
 80213f0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80213f4:	4313      	orrs	r3, r2
 80213f6:	803b      	strh	r3, [r7, #0]
 80213f8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80213fa:	441c      	add	r4, r3
 80213fc:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80213fe:	441e      	add	r6, r3
 8021400:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8021402:	3b01      	subs	r3, #1
 8021404:	3702      	adds	r7, #2
 8021406:	9318      	str	r3, [sp, #96]	@ 0x60
 8021408:	e698      	b.n	802113c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802140a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802140c:	441c      	add	r4, r3
 802140e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8021410:	441e      	add	r6, r3
 8021412:	9b07      	ldr	r3, [sp, #28]
 8021414:	3b01      	subs	r3, #1
 8021416:	9307      	str	r3, [sp, #28]
 8021418:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802141a:	3302      	adds	r3, #2
 802141c:	930a      	str	r3, [sp, #40]	@ 0x28
 802141e:	e66d      	b.n	80210fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8021420:	d023      	beq.n	802146a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8021422:	9b07      	ldr	r3, [sp, #28]
 8021424:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8021426:	3b01      	subs	r3, #1
 8021428:	fb00 4003 	mla	r0, r0, r3, r4
 802142c:	1400      	asrs	r0, r0, #16
 802142e:	f53f ae82 	bmi.w	8021136 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021432:	3901      	subs	r1, #1
 8021434:	4288      	cmp	r0, r1
 8021436:	f6bf ae7e 	bge.w	8021136 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802143a:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 802143c:	fb01 6303 	mla	r3, r1, r3, r6
 8021440:	141b      	asrs	r3, r3, #16
 8021442:	f53f ae78 	bmi.w	8021136 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021446:	3a01      	subs	r2, #1
 8021448:	4293      	cmp	r3, r2
 802144a:	f6bf ae74 	bge.w	8021136 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802144e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8021452:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8021456:	f1bb 0f00 	cmp.w	fp, #0
 802145a:	dc6c      	bgt.n	8021536 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802145c:	9b07      	ldr	r3, [sp, #28]
 802145e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8021462:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8021464:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8021468:	930a      	str	r3, [sp, #40]	@ 0x28
 802146a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802146c:	2b00      	cmp	r3, #0
 802146e:	f340 81b3 	ble.w	80217d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8021472:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021476:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802147a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802147e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8021480:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021484:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021488:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802148c:	eef0 6a62 	vmov.f32	s13, s5
 8021490:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021494:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021498:	ee77 2a62 	vsub.f32	s5, s14, s5
 802149c:	ee16 4a90 	vmov	r4, s13
 80214a0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80214a4:	eef0 6a43 	vmov.f32	s13, s6
 80214a8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80214ac:	ee12 2a90 	vmov	r2, s5
 80214b0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80214b4:	fb92 f3f3 	sdiv	r3, r2, r3
 80214b8:	ee13 2a10 	vmov	r2, s6
 80214bc:	9329      	str	r3, [sp, #164]	@ 0xa4
 80214be:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80214c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80214c4:	932a      	str	r3, [sp, #168]	@ 0xa8
 80214c6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80214c8:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80214ca:	3b01      	subs	r3, #1
 80214cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80214d0:	9317      	str	r3, [sp, #92]	@ 0x5c
 80214d2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80214d4:	bf08      	it	eq
 80214d6:	4613      	moveq	r3, r2
 80214d8:	ee16 6a90 	vmov	r6, s13
 80214dc:	9307      	str	r3, [sp, #28]
 80214de:	eeb0 3a67 	vmov.f32	s6, s15
 80214e2:	eef0 2a47 	vmov.f32	s5, s14
 80214e6:	e5fb      	b.n	80210e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80214e8:	2900      	cmp	r1, #0
 80214ea:	f43f ae6b 	beq.w	80211c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80214ee:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80214f2:	9308      	str	r3, [sp, #32]
 80214f4:	0e1b      	lsrs	r3, r3, #24
 80214f6:	9311      	str	r3, [sp, #68]	@ 0x44
 80214f8:	e664      	b.n	80211c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80214fa:	f112 0801 	adds.w	r8, r2, #1
 80214fe:	f53f af7b 	bmi.w	80213f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8021502:	4543      	cmp	r3, r8
 8021504:	f6ff af78 	blt.w	80213f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8021508:	f11c 0801 	adds.w	r8, ip, #1
 802150c:	f53f af74 	bmi.w	80213f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8021510:	45c6      	cmp	lr, r8
 8021512:	f6ff af71 	blt.w	80213f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8021516:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8021518:	9201      	str	r2, [sp, #4]
 802151a:	fa0f f28e 	sxth.w	r2, lr
 802151e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8021522:	e9cd c002 	strd	ip, r0, [sp, #8]
 8021526:	9200      	str	r2, [sp, #0]
 8021528:	b21b      	sxth	r3, r3
 802152a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802152c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 802152e:	4639      	mov	r1, r7
 8021530:	f7ff fc79 	bl	8020e26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8021534:	e760      	b.n	80213f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8021536:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8021538:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802153a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802153e:	1427      	asrs	r7, r4, #16
 8021540:	1433      	asrs	r3, r6, #16
 8021542:	fb01 7303 	mla	r3, r1, r3, r7
 8021546:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802154a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802154e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021552:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8021556:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802155a:	2a00      	cmp	r2, #0
 802155c:	f000 8133 	beq.w	80217c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8021560:	687d      	ldr	r5, [r7, #4]
 8021562:	950e      	str	r5, [sp, #56]	@ 0x38
 8021564:	0e2d      	lsrs	r5, r5, #24
 8021566:	9515      	str	r5, [sp, #84]	@ 0x54
 8021568:	b178      	cbz	r0, 802158a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802156a:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 802156e:	3901      	subs	r1, #1
 8021570:	0089      	lsls	r1, r1, #2
 8021572:	3104      	adds	r1, #4
 8021574:	eb07 0e01 	add.w	lr, r7, r1
 8021578:	5879      	ldr	r1, [r7, r1]
 802157a:	9109      	str	r1, [sp, #36]	@ 0x24
 802157c:	0e09      	lsrs	r1, r1, #24
 802157e:	9112      	str	r1, [sp, #72]	@ 0x48
 8021580:	f8de 1004 	ldr.w	r1, [lr, #4]
 8021584:	910f      	str	r1, [sp, #60]	@ 0x3c
 8021586:	0e09      	lsrs	r1, r1, #24
 8021588:	9116      	str	r1, [sp, #88]	@ 0x58
 802158a:	b292      	uxth	r2, r2
 802158c:	b280      	uxth	r0, r0
 802158e:	fb02 f800 	mul.w	r8, r2, r0
 8021592:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8021596:	0112      	lsls	r2, r2, #4
 8021598:	eba2 0e08 	sub.w	lr, r2, r8
 802159c:	b280      	uxth	r0, r0
 802159e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 80215a2:	9915      	ldr	r1, [sp, #84]	@ 0x54
 80215a4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80215a6:	fa1f fe8e 	uxth.w	lr, lr
 80215aa:	1a12      	subs	r2, r2, r0
 80215ac:	b292      	uxth	r2, r2
 80215ae:	fb0e f101 	mul.w	r1, lr, r1
 80215b2:	fb02 110c 	mla	r1, r2, ip, r1
 80215b6:	fb00 1105 	mla	r1, r0, r5, r1
 80215ba:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80215bc:	fb08 1105 	mla	r1, r8, r5, r1
 80215c0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80215c4:	2900      	cmp	r1, #0
 80215c6:	f000 80f5 	beq.w	80217b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 80215ca:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 80215ce:	d019      	beq.n	8021604 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 80215d0:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80215d4:	fb0c fa0a 	mul.w	sl, ip, sl
 80215d8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80215dc:	fb0c fc03 	mul.w	ip, ip, r3
 80215e0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80215e4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80215e8:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80215ec:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 80215f0:	4453      	add	r3, sl
 80215f2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80215f6:	0a1b      	lsrs	r3, r3, #8
 80215f8:	0a3f      	lsrs	r7, r7, #8
 80215fa:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80215fe:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8021602:	433b      	orrs	r3, r7
 8021604:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8021606:	2dff      	cmp	r5, #255	@ 0xff
 8021608:	d020      	beq.n	802164c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802160a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802160c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8021610:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8021612:	436f      	muls	r7, r5
 8021614:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8021616:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802161a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802161c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021620:	fb05 fa0a 	mul.w	sl, r5, sl
 8021624:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8021628:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802162c:	44bc      	add	ip, r7
 802162e:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8021632:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021636:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802163a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802163e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021642:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021646:	ea4c 050a 	orr.w	r5, ip, sl
 802164a:	950e      	str	r5, [sp, #56]	@ 0x38
 802164c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802164e:	2dff      	cmp	r5, #255	@ 0xff
 8021650:	d020      	beq.n	8021694 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8021652:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8021654:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8021658:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802165a:	436f      	muls	r7, r5
 802165c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802165e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8021662:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8021664:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021668:	fb05 fa0a 	mul.w	sl, r5, sl
 802166c:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8021670:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021674:	44bc      	add	ip, r7
 8021676:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802167a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802167e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021682:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021686:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802168a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802168e:	ea4c 050a 	orr.w	r5, ip, sl
 8021692:	9509      	str	r5, [sp, #36]	@ 0x24
 8021694:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8021696:	2dff      	cmp	r5, #255	@ 0xff
 8021698:	d020      	beq.n	80216dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 802169a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802169c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80216a0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80216a2:	436f      	muls	r7, r5
 80216a4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80216a6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80216aa:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80216ac:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80216b0:	fb05 fa0a 	mul.w	sl, r5, sl
 80216b4:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80216b8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80216bc:	44bc      	add	ip, r7
 80216be:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80216c2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80216c6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80216ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80216ce:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80216d2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80216d6:	ea4c 050a 	orr.w	r5, ip, sl
 80216da:	950f      	str	r5, [sp, #60]	@ 0x3c
 80216dc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80216de:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80216e2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80216e4:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 80216e8:	fb0e f707 	mul.w	r7, lr, r7
 80216ec:	fb02 770c 	mla	r7, r2, ip, r7
 80216f0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80216f4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80216f6:	fb00 770c 	mla	r7, r0, ip, r7
 80216fa:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80216fe:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8021700:	fb08 770c 	mla	r7, r8, ip, r7
 8021704:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8021708:	fb0e fe0c 	mul.w	lr, lr, ip
 802170c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8021710:	fb02 e303 	mla	r3, r2, r3, lr
 8021714:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8021716:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8021718:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 802171c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802171e:	fb00 330a 	mla	r3, r0, sl, r3
 8021722:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8021726:	fb08 3c0c 	mla	ip, r8, ip, r3
 802172a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802172c:	f8b9 0000 	ldrh.w	r0, [r9]
 8021730:	4359      	muls	r1, r3
 8021732:	0a3f      	lsrs	r7, r7, #8
 8021734:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021738:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802173c:	1c4b      	adds	r3, r1, #1
 802173e:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8021742:	ea47 070c 	orr.w	r7, r7, ip
 8021746:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802174a:	1202      	asrs	r2, r0, #8
 802174c:	0c3b      	lsrs	r3, r7, #16
 802174e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8021752:	b2c9      	uxtb	r1, r1
 8021754:	fb13 f305 	smulbb	r3, r3, r5
 8021758:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802175c:	fb02 3201 	mla	r2, r2, r1, r3
 8021760:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8021764:	10c3      	asrs	r3, r0, #3
 8021766:	b2ff      	uxtb	r7, r7
 8021768:	00c0      	lsls	r0, r0, #3
 802176a:	b2c0      	uxtb	r0, r0
 802176c:	fb17 f705 	smulbb	r7, r7, r5
 8021770:	fb00 7001 	mla	r0, r0, r1, r7
 8021774:	b292      	uxth	r2, r2
 8021776:	fb1c fc05 	smulbb	ip, ip, r5
 802177a:	b280      	uxth	r0, r0
 802177c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8021780:	fb03 c301 	mla	r3, r3, r1, ip
 8021784:	1c51      	adds	r1, r2, #1
 8021786:	f100 0c01 	add.w	ip, r0, #1
 802178a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802178e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8021792:	b29b      	uxth	r3, r3
 8021794:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8021798:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 802179c:	ea4c 0202 	orr.w	r2, ip, r2
 80217a0:	f103 0c01 	add.w	ip, r3, #1
 80217a4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80217a8:	095b      	lsrs	r3, r3, #5
 80217aa:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80217ae:	431a      	orrs	r2, r3
 80217b0:	f8a9 2000 	strh.w	r2, [r9]
 80217b4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80217b6:	441c      	add	r4, r3
 80217b8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80217ba:	f109 0902 	add.w	r9, r9, #2
 80217be:	441e      	add	r6, r3
 80217c0:	f10b 3bff 	add.w	fp, fp, #4294967295
 80217c4:	e647      	b.n	8021456 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80217c6:	2800      	cmp	r0, #0
 80217c8:	f43f aedf 	beq.w	802158a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80217cc:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 80217d0:	9109      	str	r1, [sp, #36]	@ 0x24
 80217d2:	0e09      	lsrs	r1, r1, #24
 80217d4:	9112      	str	r1, [sp, #72]	@ 0x48
 80217d6:	e6d8      	b.n	802158a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80217d8:	b01d      	add	sp, #116	@ 0x74
 80217da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080217de <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 80217de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80217e2:	b085      	sub	sp, #20
 80217e4:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 80217e8:	9102      	str	r1, [sp, #8]
 80217ea:	2c00      	cmp	r4, #0
 80217ec:	fb04 7103 	mla	r1, r4, r3, r7
 80217f0:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 80217f4:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 80217f8:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 80217fc:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8021800:	f2c0 810c 	blt.w	8021a1c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8021804:	45a6      	cmp	lr, r4
 8021806:	f340 8109 	ble.w	8021a1c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802180a:	2f00      	cmp	r7, #0
 802180c:	f2c0 8104 	blt.w	8021a18 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8021810:	42bb      	cmp	r3, r7
 8021812:	f340 8101 	ble.w	8021a18 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8021816:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802181a:	1c7a      	adds	r2, r7, #1
 802181c:	f100 8101 	bmi.w	8021a22 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8021820:	4293      	cmp	r3, r2
 8021822:	f340 80fe 	ble.w	8021a22 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8021826:	2e00      	cmp	r6, #0
 8021828:	f000 80fd 	beq.w	8021a26 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 802182c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8021830:	3401      	adds	r4, #1
 8021832:	f100 80fc 	bmi.w	8021a2e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8021836:	45a6      	cmp	lr, r4
 8021838:	f340 80f9 	ble.w	8021a2e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802183c:	2800      	cmp	r0, #0
 802183e:	f000 80f9 	beq.w	8021a34 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8021842:	2f00      	cmp	r7, #0
 8021844:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8021848:	f2c0 80ef 	blt.w	8021a2a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802184c:	42bb      	cmp	r3, r7
 802184e:	f340 80ec 	ble.w	8021a2a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8021852:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8021856:	3701      	adds	r7, #1
 8021858:	f100 80ef 	bmi.w	8021a3a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802185c:	42bb      	cmp	r3, r7
 802185e:	f340 80ec 	ble.w	8021a3a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8021862:	2e00      	cmp	r6, #0
 8021864:	f000 80eb 	beq.w	8021a3e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8021868:	6852      	ldr	r2, [r2, #4]
 802186a:	b2b6      	uxth	r6, r6
 802186c:	b280      	uxth	r0, r0
 802186e:	fb00 fe06 	mul.w	lr, r0, r6
 8021872:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8021876:	0136      	lsls	r6, r6, #4
 8021878:	eba6 070e 	sub.w	r7, r6, lr
 802187c:	b280      	uxth	r0, r0
 802187e:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8021882:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8021886:	b2bf      	uxth	r7, r7
 8021888:	1a1b      	subs	r3, r3, r0
 802188a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802188e:	b29b      	uxth	r3, r3
 8021890:	fb07 f60a 	mul.w	r6, r7, sl
 8021894:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8021898:	fb0b 6603 	mla	r6, fp, r3, r6
 802189c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80218a0:	fb00 6609 	mla	r6, r0, r9, r6
 80218a4:	fb0e 6608 	mla	r6, lr, r8, r6
 80218a8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80218ac:	9600      	str	r6, [sp, #0]
 80218ae:	2e00      	cmp	r6, #0
 80218b0:	f000 80af 	beq.w	8021a12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 80218b4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80218b8:	fb0b fc0c 	mul.w	ip, fp, ip
 80218bc:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 80218c0:	fb0b f505 	mul.w	r5, fp, r5
 80218c4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80218c8:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 80218cc:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80218d0:	44dc      	add	ip, fp
 80218d2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80218d6:	9501      	str	r5, [sp, #4]
 80218d8:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 80218dc:	9503      	str	r5, [sp, #12]
 80218de:	9d01      	ldr	r5, [sp, #4]
 80218e0:	9e02      	ldr	r6, [sp, #8]
 80218e2:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 80218e6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80218ea:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 80218ee:	fb0a fc0c 	mul.w	ip, sl, ip
 80218f2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80218f6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80218fa:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80218fe:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8021902:	4465      	add	r5, ip
 8021904:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8021908:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802190c:	fb09 fc0c 	mul.w	ip, r9, ip
 8021910:	fb09 f904 	mul.w	r9, r9, r4
 8021914:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8021918:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802191c:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8021920:	fb08 f404 	mul.w	r4, r8, r4
 8021924:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8021928:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802192c:	fb08 f802 	mul.w	r8, r8, r2
 8021930:	fb0a fa01 	mul.w	sl, sl, r1
 8021934:	0a22      	lsrs	r2, r4, #8
 8021936:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 802193a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802193e:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8021942:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8021946:	4414      	add	r4, r2
 8021948:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802194c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8021950:	0a2d      	lsrs	r5, r5, #8
 8021952:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8021956:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802195a:	9a03      	ldr	r2, [sp, #12]
 802195c:	8836      	ldrh	r6, [r6, #0]
 802195e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8021962:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8021966:	437d      	muls	r5, r7
 8021968:	4461      	add	r1, ip
 802196a:	0a24      	lsrs	r4, r4, #8
 802196c:	fb02 5503 	mla	r5, r2, r3, r5
 8021970:	0a09      	lsrs	r1, r1, #8
 8021972:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8021976:	fb04 540e 	mla	r4, r4, lr, r5
 802197a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802197e:	fb01 4100 	mla	r1, r1, r0, r4
 8021982:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021986:	0a09      	lsrs	r1, r1, #8
 8021988:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802198c:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8021990:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8021994:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8021998:	fb07 f70a 	mul.w	r7, r7, sl
 802199c:	fb03 7101 	mla	r1, r3, r1, r7
 80219a0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80219a4:	9b00      	ldr	r3, [sp, #0]
 80219a6:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 80219aa:	fb0e 1e08 	mla	lr, lr, r8, r1
 80219ae:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 80219b2:	fb00 e101 	mla	r1, r0, r1, lr
 80219b6:	43da      	mvns	r2, r3
 80219b8:	1233      	asrs	r3, r6, #8
 80219ba:	b2d2      	uxtb	r2, r2
 80219bc:	10f0      	asrs	r0, r6, #3
 80219be:	0a09      	lsrs	r1, r1, #8
 80219c0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80219c4:	00f6      	lsls	r6, r6, #3
 80219c6:	4353      	muls	r3, r2
 80219c8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80219cc:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80219d0:	b2f6      	uxtb	r6, r6
 80219d2:	4321      	orrs	r1, r4
 80219d4:	4350      	muls	r0, r2
 80219d6:	4356      	muls	r6, r2
 80219d8:	1c5a      	adds	r2, r3, #1
 80219da:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80219de:	0c0b      	lsrs	r3, r1, #16
 80219e0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80219e4:	1c42      	adds	r2, r0, #1
 80219e6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80219ea:	0a0a      	lsrs	r2, r1, #8
 80219ec:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80219f0:	021b      	lsls	r3, r3, #8
 80219f2:	00d2      	lsls	r2, r2, #3
 80219f4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80219f8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80219fc:	4313      	orrs	r3, r2
 80219fe:	1c72      	adds	r2, r6, #1
 8021a00:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8021a04:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8021a08:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8021a0c:	4319      	orrs	r1, r3
 8021a0e:	9b02      	ldr	r3, [sp, #8]
 8021a10:	8019      	strh	r1, [r3, #0]
 8021a12:	b005      	add	sp, #20
 8021a14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021a18:	2500      	movs	r5, #0
 8021a1a:	e6fe      	b.n	802181a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8021a1c:	2100      	movs	r1, #0
 8021a1e:	460d      	mov	r5, r1
 8021a20:	e706      	b.n	8021830 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8021a22:	2100      	movs	r1, #0
 8021a24:	e704      	b.n	8021830 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8021a26:	4631      	mov	r1, r6
 8021a28:	e702      	b.n	8021830 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8021a2a:	2400      	movs	r4, #0
 8021a2c:	e713      	b.n	8021856 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8021a2e:	2200      	movs	r2, #0
 8021a30:	4614      	mov	r4, r2
 8021a32:	e71a      	b.n	802186a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8021a34:	4602      	mov	r2, r0
 8021a36:	4604      	mov	r4, r0
 8021a38:	e717      	b.n	802186a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8021a3a:	2200      	movs	r2, #0
 8021a3c:	e715      	b.n	802186a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8021a3e:	4632      	mov	r2, r6
 8021a40:	e713      	b.n	802186a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08021a44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021a44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021a48:	b09b      	sub	sp, #108	@ 0x6c
 8021a4a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 8021a4e:	9218      	str	r2, [sp, #96]	@ 0x60
 8021a50:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8021a52:	9116      	str	r1, [sp, #88]	@ 0x58
 8021a54:	9307      	str	r3, [sp, #28]
 8021a56:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 8021a5a:	9019      	str	r0, [sp, #100]	@ 0x64
 8021a5c:	6850      	ldr	r0, [r2, #4]
 8021a5e:	6812      	ldr	r2, [r2, #0]
 8021a60:	fb00 1303 	mla	r3, r0, r3, r1
 8021a64:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021a68:	930a      	str	r3, [sp, #40]	@ 0x28
 8021a6a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021a6c:	681b      	ldr	r3, [r3, #0]
 8021a6e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8021a70:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8021a72:	2b00      	cmp	r3, #0
 8021a74:	dc03      	bgt.n	8021a7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8021a76:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8021a78:	2b00      	cmp	r3, #0
 8021a7a:	f340 8386 	ble.w	802218a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8021a7e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021a80:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021a84:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021a88:	1e48      	subs	r0, r1, #1
 8021a8a:	1e57      	subs	r7, r2, #1
 8021a8c:	9b07      	ldr	r3, [sp, #28]
 8021a8e:	2b00      	cmp	r3, #0
 8021a90:	f340 8166 	ble.w	8021d60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8021a94:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021a98:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021a9c:	d406      	bmi.n	8021aac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8021a9e:	4584      	cmp	ip, r0
 8021aa0:	da04      	bge.n	8021aac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8021aa2:	2b00      	cmp	r3, #0
 8021aa4:	db02      	blt.n	8021aac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8021aa6:	42bb      	cmp	r3, r7
 8021aa8:	f2c0 815b 	blt.w	8021d62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8021aac:	f11c 0c01 	adds.w	ip, ip, #1
 8021ab0:	f100 814b 	bmi.w	8021d4a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8021ab4:	4561      	cmp	r1, ip
 8021ab6:	f2c0 8148 	blt.w	8021d4a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8021aba:	3301      	adds	r3, #1
 8021abc:	f100 8145 	bmi.w	8021d4a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8021ac0:	429a      	cmp	r2, r3
 8021ac2:	f2c0 8142 	blt.w	8021d4a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8021ac6:	9b07      	ldr	r3, [sp, #28]
 8021ac8:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8021aca:	9317      	str	r3, [sp, #92]	@ 0x5c
 8021acc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8021ace:	2b00      	cmp	r3, #0
 8021ad0:	f340 8165 	ble.w	8021d9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021ad4:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 8021ad6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021ad8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8021adc:	689b      	ldr	r3, [r3, #8]
 8021ade:	1422      	asrs	r2, r4, #16
 8021ae0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8021ae4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8021ae8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8021aec:	f100 81d5 	bmi.w	8021e9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8021af0:	f103 38ff 	add.w	r8, r3, #4294967295
 8021af4:	4542      	cmp	r2, r8
 8021af6:	f280 81d0 	bge.w	8021e9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8021afa:	f1bc 0f00 	cmp.w	ip, #0
 8021afe:	f2c0 81cc 	blt.w	8021e9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8021b02:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021b06:	45c4      	cmp	ip, r8
 8021b08:	f280 81c7 	bge.w	8021e9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8021b0c:	b21b      	sxth	r3, r3
 8021b0e:	fb0c 2203 	mla	r2, ip, r3, r2
 8021b12:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8021b14:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8021b18:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8021b1c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8021b20:	2900      	cmp	r1, #0
 8021b22:	f000 8182 	beq.w	8021e2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8021b26:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8021b2a:	950b      	str	r5, [sp, #44]	@ 0x2c
 8021b2c:	0e2d      	lsrs	r5, r5, #24
 8021b2e:	9512      	str	r5, [sp, #72]	@ 0x48
 8021b30:	b180      	cbz	r0, 8021b54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8021b32:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8021b36:	3b01      	subs	r3, #1
 8021b38:	009b      	lsls	r3, r3, #2
 8021b3a:	3304      	adds	r3, #4
 8021b3c:	eb08 0c03 	add.w	ip, r8, r3
 8021b40:	f858 3003 	ldr.w	r3, [r8, r3]
 8021b44:	9308      	str	r3, [sp, #32]
 8021b46:	0e1b      	lsrs	r3, r3, #24
 8021b48:	9310      	str	r3, [sp, #64]	@ 0x40
 8021b4a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8021b4e:	930c      	str	r3, [sp, #48]	@ 0x30
 8021b50:	0e1b      	lsrs	r3, r3, #24
 8021b52:	9313      	str	r3, [sp, #76]	@ 0x4c
 8021b54:	b289      	uxth	r1, r1
 8021b56:	b280      	uxth	r0, r0
 8021b58:	fb01 f900 	mul.w	r9, r1, r0
 8021b5c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8021b60:	0109      	lsls	r1, r1, #4
 8021b62:	eba1 0809 	sub.w	r8, r1, r9
 8021b66:	b280      	uxth	r0, r0
 8021b68:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8021b6c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8021b6e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8021b70:	fa1f f888 	uxth.w	r8, r8
 8021b74:	1a09      	subs	r1, r1, r0
 8021b76:	b289      	uxth	r1, r1
 8021b78:	fb08 f303 	mul.w	r3, r8, r3
 8021b7c:	fb01 330e 	mla	r3, r1, lr, r3
 8021b80:	fb00 3305 	mla	r3, r0, r5, r3
 8021b84:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8021b86:	fb09 3305 	mla	r3, r9, r5, r3
 8021b8a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021b8e:	2b00      	cmp	r3, #0
 8021b90:	f000 80d2 	beq.w	8021d38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8021b94:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8021b98:	d01b      	beq.n	8021bd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8021b9a:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 8021b9e:	fb0e fa0a 	mul.w	sl, lr, sl
 8021ba2:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8021ba6:	fb0e fe02 	mul.w	lr, lr, r2
 8021baa:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8021bae:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8021bb2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8021bb6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8021bba:	4452      	add	r2, sl
 8021bbc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021bc0:	0a12      	lsrs	r2, r2, #8
 8021bc2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021bc6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8021bca:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8021bce:	ea42 020c 	orr.w	r2, r2, ip
 8021bd2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8021bd4:	2dff      	cmp	r5, #255	@ 0xff
 8021bd6:	d021      	beq.n	8021c1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8021bd8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8021bda:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8021bde:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8021be0:	fb05 fb0b 	mul.w	fp, r5, fp
 8021be4:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8021be6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8021bea:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8021bec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021bf0:	fb05 fa0a 	mul.w	sl, r5, sl
 8021bf4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021bf8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8021bfc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8021c00:	44de      	add	lr, fp
 8021c02:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021c06:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021c0a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021c0e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021c12:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021c16:	ea4e 050a 	orr.w	r5, lr, sl
 8021c1a:	950b      	str	r5, [sp, #44]	@ 0x2c
 8021c1c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8021c1e:	2dff      	cmp	r5, #255	@ 0xff
 8021c20:	d021      	beq.n	8021c66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8021c22:	9d08      	ldr	r5, [sp, #32]
 8021c24:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8021c28:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8021c2a:	fb05 fb0b 	mul.w	fp, r5, fp
 8021c2e:	9d08      	ldr	r5, [sp, #32]
 8021c30:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8021c34:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8021c36:	fb05 fa0e 	mul.w	sl, r5, lr
 8021c3a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021c3e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021c42:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8021c46:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8021c4a:	44de      	add	lr, fp
 8021c4c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021c50:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021c54:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021c58:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021c5c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021c60:	ea4e 050a 	orr.w	r5, lr, sl
 8021c64:	9508      	str	r5, [sp, #32]
 8021c66:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8021c68:	2dff      	cmp	r5, #255	@ 0xff
 8021c6a:	d021      	beq.n	8021cb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8021c6c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8021c6e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8021c72:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8021c74:	fb05 fb0b 	mul.w	fp, r5, fp
 8021c78:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8021c7a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8021c7e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8021c80:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021c84:	fb05 fa0a 	mul.w	sl, r5, sl
 8021c88:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021c8c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8021c90:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8021c94:	44de      	add	lr, fp
 8021c96:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021c9a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021c9e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021ca2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021ca6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021caa:	ea4e 050a 	orr.w	r5, lr, sl
 8021cae:	950c      	str	r5, [sp, #48]	@ 0x30
 8021cb0:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8021cb2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8021cb6:	9d08      	ldr	r5, [sp, #32]
 8021cb8:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 8021cbc:	fb08 fc0c 	mul.w	ip, r8, ip
 8021cc0:	fb01 cc0e 	mla	ip, r1, lr, ip
 8021cc4:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8021cc8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8021cca:	fb00 cc0e 	mla	ip, r0, lr, ip
 8021cce:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8021cd2:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8021cd4:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021cd8:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8021cdc:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8021ce0:	fb08 f80e 	mul.w	r8, r8, lr
 8021ce4:	fb01 8202 	mla	r2, r1, r2, r8
 8021ce8:	9908      	ldr	r1, [sp, #32]
 8021cea:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8021cee:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8021cf0:	fb00 220a 	mla	r2, r0, sl, r2
 8021cf4:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 8021cf8:	fb09 2900 	mla	r9, r9, r0, r2
 8021cfc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021d00:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021d04:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021d08:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8021d0c:	ea4c 0c09 	orr.w	ip, ip, r9
 8021d10:	2bff      	cmp	r3, #255	@ 0xff
 8021d12:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8021d16:	f040 8091 	bne.w	8021e3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8021d1a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8021d1e:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 8021d22:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021d26:	f022 0207 	bic.w	r2, r2, #7
 8021d2a:	431a      	orrs	r2, r3
 8021d2c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8021d30:	ea4c 0c02 	orr.w	ip, ip, r2
 8021d34:	f8a7 c000 	strh.w	ip, [r7]
 8021d38:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8021d3a:	441c      	add	r4, r3
 8021d3c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021d3e:	441e      	add	r6, r3
 8021d40:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8021d42:	3b01      	subs	r3, #1
 8021d44:	3702      	adds	r7, #2
 8021d46:	9317      	str	r3, [sp, #92]	@ 0x5c
 8021d48:	e6c0      	b.n	8021acc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021d4a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8021d4c:	441c      	add	r4, r3
 8021d4e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021d50:	441e      	add	r6, r3
 8021d52:	9b07      	ldr	r3, [sp, #28]
 8021d54:	3b01      	subs	r3, #1
 8021d56:	9307      	str	r3, [sp, #28]
 8021d58:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8021d5a:	3302      	adds	r3, #2
 8021d5c:	930a      	str	r3, [sp, #40]	@ 0x28
 8021d5e:	e695      	b.n	8021a8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021d60:	d024      	beq.n	8021dac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8021d62:	9b07      	ldr	r3, [sp, #28]
 8021d64:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8021d66:	3b01      	subs	r3, #1
 8021d68:	fb00 4003 	mla	r0, r0, r3, r4
 8021d6c:	1400      	asrs	r0, r0, #16
 8021d6e:	f53f aeaa 	bmi.w	8021ac6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8021d72:	3901      	subs	r1, #1
 8021d74:	4288      	cmp	r0, r1
 8021d76:	f6bf aea6 	bge.w	8021ac6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8021d7a:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8021d7c:	fb01 6303 	mla	r3, r1, r3, r6
 8021d80:	141b      	asrs	r3, r3, #16
 8021d82:	f53f aea0 	bmi.w	8021ac6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8021d86:	3a01      	subs	r2, #1
 8021d88:	4293      	cmp	r3, r2
 8021d8a:	f6bf ae9c 	bge.w	8021ac6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8021d8e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8021d92:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8021d96:	f1bb 0f00 	cmp.w	fp, #0
 8021d9a:	f300 809a 	bgt.w	8021ed2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8021d9e:	9b07      	ldr	r3, [sp, #28]
 8021da0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8021da4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8021da6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8021daa:	930a      	str	r3, [sp, #40]	@ 0x28
 8021dac:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8021dae:	2b00      	cmp	r3, #0
 8021db0:	f340 81eb 	ble.w	802218a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8021db4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021db8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8021dbc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021dc0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021dc2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021dc6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021dca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021dce:	eef0 6a62 	vmov.f32	s13, s5
 8021dd2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021dd6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021dda:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021dde:	ee16 4a90 	vmov	r4, s13
 8021de2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021de6:	eef0 6a43 	vmov.f32	s13, s6
 8021dea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021dee:	ee12 2a90 	vmov	r2, s5
 8021df2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021df6:	fb92 f3f3 	sdiv	r3, r2, r3
 8021dfa:	ee13 2a10 	vmov	r2, s6
 8021dfe:	9327      	str	r3, [sp, #156]	@ 0x9c
 8021e00:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021e02:	fb92 f3f3 	sdiv	r3, r2, r3
 8021e06:	9328      	str	r3, [sp, #160]	@ 0xa0
 8021e08:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8021e0a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8021e0c:	3b01      	subs	r3, #1
 8021e0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021e12:	9316      	str	r3, [sp, #88]	@ 0x58
 8021e14:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021e16:	bf08      	it	eq
 8021e18:	4613      	moveq	r3, r2
 8021e1a:	ee16 6a90 	vmov	r6, s13
 8021e1e:	9307      	str	r3, [sp, #28]
 8021e20:	eeb0 3a67 	vmov.f32	s6, s15
 8021e24:	eef0 2a47 	vmov.f32	s5, s14
 8021e28:	e622      	b.n	8021a70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8021e2a:	2800      	cmp	r0, #0
 8021e2c:	f43f ae92 	beq.w	8021b54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8021e30:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8021e34:	9308      	str	r3, [sp, #32]
 8021e36:	0e1b      	lsrs	r3, r3, #24
 8021e38:	9310      	str	r3, [sp, #64]	@ 0x40
 8021e3a:	e68b      	b.n	8021b54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8021e3c:	8839      	ldrh	r1, [r7, #0]
 8021e3e:	4dd4      	ldr	r5, [pc, #848]	@ (8022190 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8021e40:	43db      	mvns	r3, r3
 8021e42:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8021e46:	fa5f f883 	uxtb.w	r8, r3
 8021e4a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8021e4e:	fb0e fe08 	mul.w	lr, lr, r8
 8021e52:	10c8      	asrs	r0, r1, #3
 8021e54:	00cb      	lsls	r3, r1, #3
 8021e56:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8021e5a:	f10e 0101 	add.w	r1, lr, #1
 8021e5e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8021e62:	fb00 f008 	mul.w	r0, r0, r8
 8021e66:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8021e6a:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8021e6e:	f100 0e01 	add.w	lr, r0, #1
 8021e72:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8021e76:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8021e7a:	b2db      	uxtb	r3, r3
 8021e7c:	b2c9      	uxtb	r1, r1
 8021e7e:	00d2      	lsls	r2, r2, #3
 8021e80:	fb03 f308 	mul.w	r3, r3, r8
 8021e84:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8021e88:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021e8c:	430a      	orrs	r2, r1
 8021e8e:	1c59      	adds	r1, r3, #1
 8021e90:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8021e94:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8021e98:	e748      	b.n	8021d2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8021e9a:	f112 0801 	adds.w	r8, r2, #1
 8021e9e:	f53f af4b 	bmi.w	8021d38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8021ea2:	4543      	cmp	r3, r8
 8021ea4:	f6ff af48 	blt.w	8021d38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8021ea8:	f11c 0801 	adds.w	r8, ip, #1
 8021eac:	f53f af44 	bmi.w	8021d38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8021eb0:	45c6      	cmp	lr, r8
 8021eb2:	f6ff af41 	blt.w	8021d38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8021eb6:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8021eba:	fa0f f28e 	sxth.w	r2, lr
 8021ebe:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8021ec2:	9200      	str	r2, [sp, #0]
 8021ec4:	b21b      	sxth	r3, r3
 8021ec6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8021ec8:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8021eca:	4639      	mov	r1, r7
 8021ecc:	f7ff fc87 	bl	80217de <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8021ed0:	e732      	b.n	8021d38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8021ed2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021ed4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8021ed6:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8021eda:	1421      	asrs	r1, r4, #16
 8021edc:	1433      	asrs	r3, r6, #16
 8021ede:	fb07 1303 	mla	r3, r7, r3, r1
 8021ee2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8021ee4:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8021ee8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8021eec:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021ef0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8021ef4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021ef8:	2a00      	cmp	r2, #0
 8021efa:	f000 8107 	beq.w	802210c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8021efe:	684d      	ldr	r5, [r1, #4]
 8021f00:	950d      	str	r5, [sp, #52]	@ 0x34
 8021f02:	0e2d      	lsrs	r5, r5, #24
 8021f04:	9514      	str	r5, [sp, #80]	@ 0x50
 8021f06:	b178      	cbz	r0, 8021f28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8021f08:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8021f0c:	3f01      	subs	r7, #1
 8021f0e:	00bf      	lsls	r7, r7, #2
 8021f10:	3704      	adds	r7, #4
 8021f12:	eb01 0e07 	add.w	lr, r1, r7
 8021f16:	59c9      	ldr	r1, [r1, r7]
 8021f18:	9109      	str	r1, [sp, #36]	@ 0x24
 8021f1a:	0e09      	lsrs	r1, r1, #24
 8021f1c:	9111      	str	r1, [sp, #68]	@ 0x44
 8021f1e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8021f22:	910e      	str	r1, [sp, #56]	@ 0x38
 8021f24:	0e09      	lsrs	r1, r1, #24
 8021f26:	9115      	str	r1, [sp, #84]	@ 0x54
 8021f28:	b292      	uxth	r2, r2
 8021f2a:	b280      	uxth	r0, r0
 8021f2c:	fb02 f900 	mul.w	r9, r2, r0
 8021f30:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8021f34:	0112      	lsls	r2, r2, #4
 8021f36:	eba2 0e09 	sub.w	lr, r2, r9
 8021f3a:	b280      	uxth	r0, r0
 8021f3c:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8021f40:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8021f42:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8021f44:	fa1f fe8e 	uxth.w	lr, lr
 8021f48:	1a09      	subs	r1, r1, r0
 8021f4a:	b289      	uxth	r1, r1
 8021f4c:	fb0e f202 	mul.w	r2, lr, r2
 8021f50:	fb01 220c 	mla	r2, r1, ip, r2
 8021f54:	fb00 2205 	mla	r2, r0, r5, r2
 8021f58:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8021f5a:	fb09 2205 	mla	r2, r9, r5, r2
 8021f5e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8021f62:	2a00      	cmp	r2, #0
 8021f64:	f000 80c9 	beq.w	80220fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8021f68:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8021f6c:	d019      	beq.n	8021fa2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8021f6e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8021f72:	fb0c fa0a 	mul.w	sl, ip, sl
 8021f76:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8021f7a:	fb0c fc03 	mul.w	ip, ip, r3
 8021f7e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021f82:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8021f86:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8021f8a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8021f8e:	4453      	add	r3, sl
 8021f90:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021f94:	0a1b      	lsrs	r3, r3, #8
 8021f96:	0a3f      	lsrs	r7, r7, #8
 8021f98:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8021f9c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8021fa0:	433b      	orrs	r3, r7
 8021fa2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8021fa4:	2dff      	cmp	r5, #255	@ 0xff
 8021fa6:	d020      	beq.n	8021fea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8021fa8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8021faa:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8021fae:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8021fb0:	436f      	muls	r7, r5
 8021fb2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8021fb4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8021fb8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8021fba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021fbe:	fb05 fa0a 	mul.w	sl, r5, sl
 8021fc2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8021fc6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021fca:	44bc      	add	ip, r7
 8021fcc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8021fd0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021fd4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021fd8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021fdc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021fe0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021fe4:	ea4c 050a 	orr.w	r5, ip, sl
 8021fe8:	950d      	str	r5, [sp, #52]	@ 0x34
 8021fea:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8021fec:	2dff      	cmp	r5, #255	@ 0xff
 8021fee:	d020      	beq.n	8022032 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8021ff0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8021ff2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8021ff6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8021ff8:	436f      	muls	r7, r5
 8021ffa:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8021ffc:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8022000:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8022002:	fb05 fa0c 	mul.w	sl, r5, ip
 8022006:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802200a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802200e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8022012:	44bc      	add	ip, r7
 8022014:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8022018:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802201c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022020:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022024:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022028:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802202c:	ea4c 050a 	orr.w	r5, ip, sl
 8022030:	9509      	str	r5, [sp, #36]	@ 0x24
 8022032:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8022034:	2dff      	cmp	r5, #255	@ 0xff
 8022036:	d020      	beq.n	802207a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8022038:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802203a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802203e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8022040:	436f      	muls	r7, r5
 8022042:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8022044:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8022048:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802204a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802204e:	fb05 fa0a 	mul.w	sl, r5, sl
 8022052:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8022056:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802205a:	44bc      	add	ip, r7
 802205c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8022060:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022064:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022068:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802206c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022070:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8022074:	ea4c 050a 	orr.w	r5, ip, sl
 8022078:	950e      	str	r5, [sp, #56]	@ 0x38
 802207a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802207c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8022080:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8022082:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8022086:	fb0e f707 	mul.w	r7, lr, r7
 802208a:	fb01 770c 	mla	r7, r1, ip, r7
 802208e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8022092:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8022094:	fb00 770c 	mla	r7, r0, ip, r7
 8022098:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802209c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802209e:	fb09 770c 	mla	r7, r9, ip, r7
 80220a2:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 80220a6:	fb0e fe0c 	mul.w	lr, lr, ip
 80220aa:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80220ae:	fb01 e303 	mla	r3, r1, r3, lr
 80220b2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80220b4:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 80220b8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80220ba:	fb00 330a 	mla	r3, r0, sl, r3
 80220be:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 80220c2:	fb09 3c0c 	mla	ip, r9, ip, r3
 80220c6:	0a3f      	lsrs	r7, r7, #8
 80220c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80220cc:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80220d0:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80220d4:	ea47 070c 	orr.w	r7, r7, ip
 80220d8:	2aff      	cmp	r2, #255	@ 0xff
 80220da:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80220de:	d11e      	bne.n	802211e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 80220e0:	097a      	lsrs	r2, r7, #5
 80220e2:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 80220e6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80220ea:	f023 0307 	bic.w	r3, r3, #7
 80220ee:	4313      	orrs	r3, r2
 80220f0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80220f4:	431f      	orrs	r7, r3
 80220f6:	f8a8 7000 	strh.w	r7, [r8]
 80220fa:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80220fc:	441c      	add	r4, r3
 80220fe:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8022100:	f108 0802 	add.w	r8, r8, #2
 8022104:	441e      	add	r6, r3
 8022106:	f10b 3bff 	add.w	fp, fp, #4294967295
 802210a:	e644      	b.n	8021d96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802210c:	2800      	cmp	r0, #0
 802210e:	f43f af0b 	beq.w	8021f28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8022112:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8022116:	9109      	str	r1, [sp, #36]	@ 0x24
 8022118:	0e09      	lsrs	r1, r1, #24
 802211a:	9111      	str	r1, [sp, #68]	@ 0x44
 802211c:	e704      	b.n	8021f28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802211e:	f8b8 1000 	ldrh.w	r1, [r8]
 8022122:	43d2      	mvns	r2, r2
 8022124:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8022128:	fa5f fe82 	uxtb.w	lr, r2
 802212c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8022130:	fb0c fc0e 	mul.w	ip, ip, lr
 8022134:	10c8      	asrs	r0, r1, #3
 8022136:	00ca      	lsls	r2, r1, #3
 8022138:	f10c 0101 	add.w	r1, ip, #1
 802213c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8022140:	0c39      	lsrs	r1, r7, #16
 8022142:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8022146:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802214a:	4911      	ldr	r1, [pc, #68]	@ (8022190 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802214c:	fb00 f00e 	mul.w	r0, r0, lr
 8022150:	fa5f fc8c 	uxtb.w	ip, ip
 8022154:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8022158:	b2d2      	uxtb	r2, r2
 802215a:	1c41      	adds	r1, r0, #1
 802215c:	fb02 f20e 	mul.w	r2, r2, lr
 8022160:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022164:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8022168:	1c51      	adds	r1, r2, #1
 802216a:	00c0      	lsls	r0, r0, #3
 802216c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8022170:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022174:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8022178:	ea4c 0c00 	orr.w	ip, ip, r0
 802217c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8022180:	ea47 0c0c 	orr.w	ip, r7, ip
 8022184:	f8a8 c000 	strh.w	ip, [r8]
 8022188:	e7b7      	b.n	80220fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802218a:	b01b      	add	sp, #108	@ 0x6c
 802218c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022190:	fffff800 	.word	0xfffff800

08022194 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8022194:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022198:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 802219c:	2d00      	cmp	r5, #0
 802219e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80221a2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 80221a6:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 80221aa:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 80221ae:	fb05 0e03 	mla	lr, r5, r3, r0
 80221b2:	f2c0 808c 	blt.w	80222ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80221b6:	45a9      	cmp	r9, r5
 80221b8:	f340 8089 	ble.w	80222ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80221bc:	2800      	cmp	r0, #0
 80221be:	f2c0 8084 	blt.w	80222ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80221c2:	4580      	cmp	r8, r0
 80221c4:	f340 8081 	ble.w	80222ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80221c8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80221cc:	f01e 0f01 	tst.w	lr, #1
 80221d0:	5d16      	ldrb	r6, [r2, r4]
 80221d2:	bf0c      	ite	eq
 80221d4:	f006 060f 	andeq.w	r6, r6, #15
 80221d8:	1136      	asrne	r6, r6, #4
 80221da:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80221de:	b2f6      	uxtb	r6, r6
 80221e0:	1c44      	adds	r4, r0, #1
 80221e2:	d477      	bmi.n	80222d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80221e4:	45a0      	cmp	r8, r4
 80221e6:	dd75      	ble.n	80222d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80221e8:	2f00      	cmp	r7, #0
 80221ea:	d075      	beq.n	80222d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80221ec:	f10e 0a01 	add.w	sl, lr, #1
 80221f0:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80221f4:	f01a 0f01 	tst.w	sl, #1
 80221f8:	5d14      	ldrb	r4, [r2, r4]
 80221fa:	bf0c      	ite	eq
 80221fc:	f004 040f 	andeq.w	r4, r4, #15
 8022200:	1124      	asrne	r4, r4, #4
 8022202:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8022206:	b2e4      	uxtb	r4, r4
 8022208:	3501      	adds	r5, #1
 802220a:	d469      	bmi.n	80222e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802220c:	45a9      	cmp	r9, r5
 802220e:	dd67      	ble.n	80222e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8022210:	f1bc 0f00 	cmp.w	ip, #0
 8022214:	d067      	beq.n	80222e6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8022216:	2800      	cmp	r0, #0
 8022218:	db60      	blt.n	80222dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802221a:	4580      	cmp	r8, r0
 802221c:	dd5e      	ble.n	80222dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802221e:	eb03 090e 	add.w	r9, r3, lr
 8022222:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8022226:	f019 0f01 	tst.w	r9, #1
 802222a:	5d55      	ldrb	r5, [r2, r5]
 802222c:	bf0c      	ite	eq
 802222e:	f005 050f 	andeq.w	r5, r5, #15
 8022232:	112d      	asrne	r5, r5, #4
 8022234:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8022238:	b2ed      	uxtb	r5, r5
 802223a:	3001      	adds	r0, #1
 802223c:	d456      	bmi.n	80222ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802223e:	4580      	cmp	r8, r0
 8022240:	dd54      	ble.n	80222ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8022242:	2f00      	cmp	r7, #0
 8022244:	d054      	beq.n	80222f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8022246:	3301      	adds	r3, #1
 8022248:	449e      	add	lr, r3
 802224a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802224e:	f01e 0f01 	tst.w	lr, #1
 8022252:	5cd0      	ldrb	r0, [r2, r3]
 8022254:	bf0c      	ite	eq
 8022256:	f000 000f 	andeq.w	r0, r0, #15
 802225a:	1100      	asrne	r0, r0, #4
 802225c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8022260:	b2c3      	uxtb	r3, r0
 8022262:	b2ba      	uxth	r2, r7
 8022264:	fa1f fc8c 	uxth.w	ip, ip
 8022268:	fb02 f00c 	mul.w	r0, r2, ip
 802226c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8022270:	0112      	lsls	r2, r2, #4
 8022272:	fa1f fc8c 	uxth.w	ip, ip
 8022276:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 802227a:	1a12      	subs	r2, r2, r0
 802227c:	eba7 070c 	sub.w	r7, r7, ip
 8022280:	b292      	uxth	r2, r2
 8022282:	b2bf      	uxth	r7, r7
 8022284:	4362      	muls	r2, r4
 8022286:	fb06 2207 	mla	r2, r6, r7, r2
 802228a:	fb0c 2505 	mla	r5, ip, r5, r2
 802228e:	fb00 5303 	mla	r3, r0, r3, r5
 8022292:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022296:	b1b3      	cbz	r3, 80222c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8022298:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 802229c:	435a      	muls	r2, r3
 802229e:	1c53      	adds	r3, r2, #1
 80222a0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80222a4:	4a2d      	ldr	r2, [pc, #180]	@ (802235c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80222a6:	121b      	asrs	r3, r3, #8
 80222a8:	6812      	ldr	r2, [r2, #0]
 80222aa:	2bff      	cmp	r3, #255	@ 0xff
 80222ac:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80222b0:	d120      	bne.n	80222f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 80222b2:	4b2b      	ldr	r3, [pc, #172]	@ (8022360 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80222b4:	0950      	lsrs	r0, r2, #5
 80222b6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80222ba:	4033      	ands	r3, r6
 80222bc:	4318      	orrs	r0, r3
 80222be:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80222c2:	4302      	orrs	r2, r0
 80222c4:	800a      	strh	r2, [r1, #0]
 80222c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80222ca:	2600      	movs	r6, #0
 80222cc:	e788      	b.n	80221e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80222ce:	2400      	movs	r4, #0
 80222d0:	4626      	mov	r6, r4
 80222d2:	e799      	b.n	8022208 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80222d4:	2400      	movs	r4, #0
 80222d6:	e797      	b.n	8022208 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80222d8:	463c      	mov	r4, r7
 80222da:	e795      	b.n	8022208 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80222dc:	2500      	movs	r5, #0
 80222de:	e7ac      	b.n	802223a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80222e0:	2300      	movs	r3, #0
 80222e2:	461d      	mov	r5, r3
 80222e4:	e7bd      	b.n	8022262 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80222e6:	4663      	mov	r3, ip
 80222e8:	4665      	mov	r5, ip
 80222ea:	e7ba      	b.n	8022262 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80222ec:	2300      	movs	r3, #0
 80222ee:	e7b8      	b.n	8022262 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80222f0:	463b      	mov	r3, r7
 80222f2:	e7b6      	b.n	8022262 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80222f4:	880d      	ldrh	r5, [r1, #0]
 80222f6:	b29f      	uxth	r7, r3
 80222f8:	122c      	asrs	r4, r5, #8
 80222fa:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80222fe:	43db      	mvns	r3, r3
 8022300:	b2db      	uxtb	r3, r3
 8022302:	fb10 f007 	smulbb	r0, r0, r7
 8022306:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802230a:	fb04 0403 	mla	r4, r4, r3, r0
 802230e:	b2f6      	uxtb	r6, r6
 8022310:	10e8      	asrs	r0, r5, #3
 8022312:	b2d2      	uxtb	r2, r2
 8022314:	00ed      	lsls	r5, r5, #3
 8022316:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802231a:	fb12 f207 	smulbb	r2, r2, r7
 802231e:	fb16 f607 	smulbb	r6, r6, r7
 8022322:	b2ed      	uxtb	r5, r5
 8022324:	b2a4      	uxth	r4, r4
 8022326:	fb00 6603 	mla	r6, r0, r3, r6
 802232a:	fb05 2303 	mla	r3, r5, r3, r2
 802232e:	b29a      	uxth	r2, r3
 8022330:	1c63      	adds	r3, r4, #1
 8022332:	b2b0      	uxth	r0, r6
 8022334:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8022338:	1c53      	adds	r3, r2, #1
 802233a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802233e:	1c42      	adds	r2, r0, #1
 8022340:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022344:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8022348:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802234c:	0940      	lsrs	r0, r0, #5
 802234e:	4323      	orrs	r3, r4
 8022350:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022354:	4303      	orrs	r3, r0
 8022356:	800b      	strh	r3, [r1, #0]
 8022358:	e7b5      	b.n	80222c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802235a:	bf00      	nop
 802235c:	20015248 	.word	0x20015248
 8022360:	00fff800 	.word	0x00fff800

08022364 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022364:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022368:	b097      	sub	sp, #92	@ 0x5c
 802236a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 802236e:	9214      	str	r2, [sp, #80]	@ 0x50
 8022370:	9309      	str	r3, [sp, #36]	@ 0x24
 8022372:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8022374:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8022378:	910d      	str	r1, [sp, #52]	@ 0x34
 802237a:	930f      	str	r3, [sp, #60]	@ 0x3c
 802237c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8022380:	9015      	str	r0, [sp, #84]	@ 0x54
 8022382:	6850      	ldr	r0, [r2, #4]
 8022384:	6812      	ldr	r2, [r2, #0]
 8022386:	fb00 1303 	mla	r3, r0, r3, r1
 802238a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802238e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8022390:	689b      	ldr	r3, [r3, #8]
 8022392:	3301      	adds	r3, #1
 8022394:	f023 0301 	bic.w	r3, r3, #1
 8022398:	930a      	str	r3, [sp, #40]	@ 0x28
 802239a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802239c:	681f      	ldr	r7, [r3, #0]
 802239e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80223a0:	2b00      	cmp	r3, #0
 80223a2:	dc03      	bgt.n	80223ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80223a4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80223a6:	2b00      	cmp	r3, #0
 80223a8:	f340 8287 	ble.w	80228ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80223ac:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80223ae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80223b2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80223b6:	1e48      	subs	r0, r1, #1
 80223b8:	f102 3cff 	add.w	ip, r2, #4294967295
 80223bc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80223be:	2b00      	cmp	r3, #0
 80223c0:	f340 80c4 	ble.w	802254c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80223c4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80223c8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80223cc:	d406      	bmi.n	80223dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80223ce:	4586      	cmp	lr, r0
 80223d0:	da04      	bge.n	80223dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80223d2:	2b00      	cmp	r3, #0
 80223d4:	db02      	blt.n	80223dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80223d6:	4563      	cmp	r3, ip
 80223d8:	f2c0 80b9 	blt.w	802254e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80223dc:	f11e 0e01 	adds.w	lr, lr, #1
 80223e0:	f100 80aa 	bmi.w	8022538 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80223e4:	4571      	cmp	r1, lr
 80223e6:	f2c0 80a7 	blt.w	8022538 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80223ea:	3301      	adds	r3, #1
 80223ec:	f100 80a4 	bmi.w	8022538 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80223f0:	429a      	cmp	r2, r3
 80223f2:	f2c0 80a1 	blt.w	8022538 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80223f6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80223f8:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 80223fc:	930e      	str	r3, [sp, #56]	@ 0x38
 80223fe:	46c8      	mov	r8, r9
 8022400:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8022402:	2b00      	cmp	r3, #0
 8022404:	f340 80c3 	ble.w	802258e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8022408:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802240a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802240e:	1423      	asrs	r3, r4, #16
 8022410:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022414:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022418:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802241c:	f100 814d 	bmi.w	80226ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8022420:	f10c 3bff 	add.w	fp, ip, #4294967295
 8022424:	455b      	cmp	r3, fp
 8022426:	f280 8148 	bge.w	80226ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802242a:	2800      	cmp	r0, #0
 802242c:	f2c0 8145 	blt.w	80226ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8022430:	f10e 3bff 	add.w	fp, lr, #4294967295
 8022434:	4558      	cmp	r0, fp
 8022436:	f280 8140 	bge.w	80226ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802243a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802243c:	fb00 3305 	mla	r3, r0, r5, r3
 8022440:	0858      	lsrs	r0, r3, #1
 8022442:	07dd      	lsls	r5, r3, #31
 8022444:	f817 c000 	ldrb.w	ip, [r7, r0]
 8022448:	bf54      	ite	pl
 802244a:	f00c 0c0f 	andpl.w	ip, ip, #15
 802244e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8022452:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8022456:	fa5f fc8c 	uxtb.w	ip, ip
 802245a:	2a00      	cmp	r2, #0
 802245c:	f000 80db 	beq.w	8022616 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8022460:	1c58      	adds	r0, r3, #1
 8022462:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8022466:	07c0      	lsls	r0, r0, #31
 8022468:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802246c:	bf54      	ite	pl
 802246e:	f00e 0e0f 	andpl.w	lr, lr, #15
 8022472:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8022476:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802247a:	fa5f f08e 	uxtb.w	r0, lr
 802247e:	9010      	str	r0, [sp, #64]	@ 0x40
 8022480:	b1c9      	cbz	r1, 80224b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8022482:	4453      	add	r3, sl
 8022484:	0858      	lsrs	r0, r3, #1
 8022486:	07dd      	lsls	r5, r3, #31
 8022488:	5c38      	ldrb	r0, [r7, r0]
 802248a:	bf54      	ite	pl
 802248c:	f000 000f 	andpl.w	r0, r0, #15
 8022490:	1100      	asrmi	r0, r0, #4
 8022492:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8022496:	3301      	adds	r3, #1
 8022498:	b2c0      	uxtb	r0, r0
 802249a:	900b      	str	r0, [sp, #44]	@ 0x2c
 802249c:	0858      	lsrs	r0, r3, #1
 802249e:	07dd      	lsls	r5, r3, #31
 80224a0:	f817 e000 	ldrb.w	lr, [r7, r0]
 80224a4:	bf54      	ite	pl
 80224a6:	f00e 030f 	andpl.w	r3, lr, #15
 80224aa:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80224ae:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80224b2:	b2db      	uxtb	r3, r3
 80224b4:	9311      	str	r3, [sp, #68]	@ 0x44
 80224b6:	b292      	uxth	r2, r2
 80224b8:	b289      	uxth	r1, r1
 80224ba:	fb02 f301 	mul.w	r3, r2, r1
 80224be:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80224c2:	0112      	lsls	r2, r2, #4
 80224c4:	b289      	uxth	r1, r1
 80224c6:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 80224ca:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80224cc:	1ad2      	subs	r2, r2, r3
 80224ce:	1a40      	subs	r0, r0, r1
 80224d0:	b292      	uxth	r2, r2
 80224d2:	436a      	muls	r2, r5
 80224d4:	b280      	uxth	r0, r0
 80224d6:	fb0c 2c00 	mla	ip, ip, r0, r2
 80224da:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80224dc:	fb01 c102 	mla	r1, r1, r2, ip
 80224e0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80224e2:	fb03 1302 	mla	r3, r3, r2, r1
 80224e6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80224ea:	b1db      	cbz	r3, 8022524 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80224ec:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80224ee:	4353      	muls	r3, r2
 80224f0:	1c5a      	adds	r2, r3, #1
 80224f2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80224f6:	4ac6      	ldr	r2, [pc, #792]	@ (8022810 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80224f8:	121b      	asrs	r3, r3, #8
 80224fa:	6812      	ldr	r2, [r2, #0]
 80224fc:	2bff      	cmp	r3, #255	@ 0xff
 80224fe:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8022502:	f040 8099 	bne.w	8022638 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8022506:	0953      	lsrs	r3, r2, #5
 8022508:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 802250c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022510:	f02c 0c07 	bic.w	ip, ip, #7
 8022514:	ea43 0c0c 	orr.w	ip, r3, ip
 8022518:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802251c:	ea4c 0202 	orr.w	r2, ip, r2
 8022520:	f8a8 2000 	strh.w	r2, [r8]
 8022524:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8022526:	441c      	add	r4, r3
 8022528:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802252a:	441e      	add	r6, r3
 802252c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802252e:	3b01      	subs	r3, #1
 8022530:	f108 0802 	add.w	r8, r8, #2
 8022534:	930e      	str	r3, [sp, #56]	@ 0x38
 8022536:	e763      	b.n	8022400 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8022538:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802253a:	441c      	add	r4, r3
 802253c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802253e:	441e      	add	r6, r3
 8022540:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022542:	3b01      	subs	r3, #1
 8022544:	9309      	str	r3, [sp, #36]	@ 0x24
 8022546:	f109 0902 	add.w	r9, r9, #2
 802254a:	e737      	b.n	80223bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802254c:	d024      	beq.n	8022598 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802254e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022550:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8022552:	3b01      	subs	r3, #1
 8022554:	fb00 4003 	mla	r0, r0, r3, r4
 8022558:	1400      	asrs	r0, r0, #16
 802255a:	f53f af4c 	bmi.w	80223f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802255e:	3901      	subs	r1, #1
 8022560:	4288      	cmp	r0, r1
 8022562:	f6bf af48 	bge.w	80223f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022566:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8022568:	fb01 6303 	mla	r3, r1, r3, r6
 802256c:	141b      	asrs	r3, r3, #16
 802256e:	f53f af42 	bmi.w	80223f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022572:	3a01      	subs	r2, #1
 8022574:	4293      	cmp	r3, r2
 8022576:	f6bf af3e 	bge.w	80223f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802257a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 802257e:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8022582:	930e      	str	r3, [sp, #56]	@ 0x38
 8022584:	46c8      	mov	r8, r9
 8022586:	f1bb 0f00 	cmp.w	fp, #0
 802258a:	f300 80b7 	bgt.w	80226fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802258e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022590:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022594:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8022598:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802259a:	2b00      	cmp	r3, #0
 802259c:	f340 818d 	ble.w	80228ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80225a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80225a4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80225a8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80225ac:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80225ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80225b2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80225b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80225ba:	eef0 6a62 	vmov.f32	s13, s5
 80225be:	ee61 7a27 	vmul.f32	s15, s2, s15
 80225c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80225c6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80225ca:	ee16 4a90 	vmov	r4, s13
 80225ce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80225d2:	eef0 6a43 	vmov.f32	s13, s6
 80225d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80225da:	ee12 2a90 	vmov	r2, s5
 80225de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80225e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80225e6:	ee13 2a10 	vmov	r2, s6
 80225ea:	9323      	str	r3, [sp, #140]	@ 0x8c
 80225ec:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80225ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80225f2:	9324      	str	r3, [sp, #144]	@ 0x90
 80225f4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80225f6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80225f8:	3b01      	subs	r3, #1
 80225fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80225fe:	930d      	str	r3, [sp, #52]	@ 0x34
 8022600:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022602:	bf08      	it	eq
 8022604:	4613      	moveq	r3, r2
 8022606:	ee16 6a90 	vmov	r6, s13
 802260a:	9309      	str	r3, [sp, #36]	@ 0x24
 802260c:	eeb0 3a67 	vmov.f32	s6, s15
 8022610:	eef0 2a47 	vmov.f32	s5, s14
 8022614:	e6c3      	b.n	802239e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022616:	2900      	cmp	r1, #0
 8022618:	f43f af4d 	beq.w	80224b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802261c:	eb0a 0003 	add.w	r0, sl, r3
 8022620:	0843      	lsrs	r3, r0, #1
 8022622:	07c0      	lsls	r0, r0, #31
 8022624:	5cfb      	ldrb	r3, [r7, r3]
 8022626:	bf54      	ite	pl
 8022628:	f003 030f 	andpl.w	r3, r3, #15
 802262c:	111b      	asrmi	r3, r3, #4
 802262e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8022632:	b2db      	uxtb	r3, r3
 8022634:	930b      	str	r3, [sp, #44]	@ 0x2c
 8022636:	e73e      	b.n	80224b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8022638:	f8b8 e000 	ldrh.w	lr, [r8]
 802263c:	fa1f fb83 	uxth.w	fp, r3
 8022640:	ea4f 202e 	mov.w	r0, lr, asr #8
 8022644:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8022648:	43db      	mvns	r3, r3
 802264a:	b2db      	uxtb	r3, r3
 802264c:	fb11 f10b 	smulbb	r1, r1, fp
 8022650:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8022654:	fb00 1003 	mla	r0, r0, r3, r1
 8022658:	fa5f fc8c 	uxtb.w	ip, ip
 802265c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8022660:	b2d2      	uxtb	r2, r2
 8022662:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8022666:	b280      	uxth	r0, r0
 8022668:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802266c:	fb1c fc0b 	smulbb	ip, ip, fp
 8022670:	fa5f fe8e 	uxtb.w	lr, lr
 8022674:	fb12 fb0b 	smulbb	fp, r2, fp
 8022678:	fb01 cc03 	mla	ip, r1, r3, ip
 802267c:	fb0e bb03 	mla	fp, lr, r3, fp
 8022680:	1c43      	adds	r3, r0, #1
 8022682:	fa1f fc8c 	uxth.w	ip, ip
 8022686:	fa1f fb8b 	uxth.w	fp, fp
 802268a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802268e:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 8022692:	f10c 0101 	add.w	r1, ip, #1
 8022696:	f10b 0001 	add.w	r0, fp, #1
 802269a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802269e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80226a2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80226a6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80226aa:	4318      	orrs	r0, r3
 80226ac:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80226b0:	ea40 000c 	orr.w	r0, r0, ip
 80226b4:	f8a8 0000 	strh.w	r0, [r8]
 80226b8:	e734      	b.n	8022524 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80226ba:	f113 0b01 	adds.w	fp, r3, #1
 80226be:	f53f af31 	bmi.w	8022524 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80226c2:	45dc      	cmp	ip, fp
 80226c4:	f6ff af2e 	blt.w	8022524 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80226c8:	f110 0b01 	adds.w	fp, r0, #1
 80226cc:	f53f af2a 	bmi.w	8022524 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80226d0:	45de      	cmp	lr, fp
 80226d2:	f6ff af27 	blt.w	8022524 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80226d6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80226d8:	9302      	str	r3, [sp, #8]
 80226da:	fa0f f38e 	sxth.w	r3, lr
 80226de:	9301      	str	r3, [sp, #4]
 80226e0:	fa0f f38c 	sxth.w	r3, ip
 80226e4:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80226e8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80226ec:	9300      	str	r3, [sp, #0]
 80226ee:	463a      	mov	r2, r7
 80226f0:	4653      	mov	r3, sl
 80226f2:	4641      	mov	r1, r8
 80226f4:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80226f6:	f7ff fd4d 	bl	8022194 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80226fa:	e713      	b.n	8022524 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80226fc:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80226fe:	1422      	asrs	r2, r4, #16
 8022700:	1433      	asrs	r3, r6, #16
 8022702:	fb05 2303 	mla	r3, r5, r3, r2
 8022706:	085a      	lsrs	r2, r3, #1
 8022708:	07dd      	lsls	r5, r3, #31
 802270a:	5cba      	ldrb	r2, [r7, r2]
 802270c:	bf54      	ite	pl
 802270e:	f002 020f 	andpl.w	r2, r2, #15
 8022712:	1112      	asrmi	r2, r2, #4
 8022714:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8022718:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802271c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022720:	b2d2      	uxtb	r2, r2
 8022722:	2900      	cmp	r1, #0
 8022724:	d076      	beq.n	8022814 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022726:	f103 0e01 	add.w	lr, r3, #1
 802272a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802272e:	f01e 0f01 	tst.w	lr, #1
 8022732:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8022736:	bf0c      	ite	eq
 8022738:	f00c 0c0f 	andeq.w	ip, ip, #15
 802273c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8022740:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8022744:	fa5f f58c 	uxtb.w	r5, ip
 8022748:	9512      	str	r5, [sp, #72]	@ 0x48
 802274a:	b300      	cbz	r0, 802278e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802274c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802274e:	442b      	add	r3, r5
 8022750:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8022754:	07dd      	lsls	r5, r3, #31
 8022756:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802275a:	bf54      	ite	pl
 802275c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8022760:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8022764:	3301      	adds	r3, #1
 8022766:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802276a:	fa5f f58c 	uxtb.w	r5, ip
 802276e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8022772:	950c      	str	r5, [sp, #48]	@ 0x30
 8022774:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8022778:	07dd      	lsls	r5, r3, #31
 802277a:	bf54      	ite	pl
 802277c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8022780:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8022784:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8022788:	fa5f f38c 	uxtb.w	r3, ip
 802278c:	9313      	str	r3, [sp, #76]	@ 0x4c
 802278e:	b289      	uxth	r1, r1
 8022790:	b280      	uxth	r0, r0
 8022792:	fb01 f300 	mul.w	r3, r1, r0
 8022796:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 802279a:	0109      	lsls	r1, r1, #4
 802279c:	b280      	uxth	r0, r0
 802279e:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 80227a2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80227a4:	1ac9      	subs	r1, r1, r3
 80227a6:	ebac 0c00 	sub.w	ip, ip, r0
 80227aa:	b289      	uxth	r1, r1
 80227ac:	4369      	muls	r1, r5
 80227ae:	fa1f fc8c 	uxth.w	ip, ip
 80227b2:	fb02 120c 	mla	r2, r2, ip, r1
 80227b6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80227b8:	fb00 2001 	mla	r0, r0, r1, r2
 80227bc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80227be:	fb03 0302 	mla	r3, r3, r2, r0
 80227c2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80227c6:	b1d3      	cbz	r3, 80227fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80227c8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80227ca:	4353      	muls	r3, r2
 80227cc:	1c5a      	adds	r2, r3, #1
 80227ce:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80227d2:	4a0f      	ldr	r2, [pc, #60]	@ (8022810 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80227d4:	121b      	asrs	r3, r3, #8
 80227d6:	6812      	ldr	r2, [r2, #0]
 80227d8:	2bff      	cmp	r3, #255	@ 0xff
 80227da:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80227de:	d12d      	bne.n	802283c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80227e0:	0953      	lsrs	r3, r2, #5
 80227e2:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 80227e6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80227ea:	f02c 0c07 	bic.w	ip, ip, #7
 80227ee:	ea43 0c0c 	orr.w	ip, r3, ip
 80227f2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80227f6:	ea4c 0202 	orr.w	r2, ip, r2
 80227fa:	f8a8 2000 	strh.w	r2, [r8]
 80227fe:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8022800:	441c      	add	r4, r3
 8022802:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022804:	f108 0802 	add.w	r8, r8, #2
 8022808:	441e      	add	r6, r3
 802280a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802280e:	e6ba      	b.n	8022586 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8022810:	20015248 	.word	0x20015248
 8022814:	2800      	cmp	r0, #0
 8022816:	d0ba      	beq.n	802278e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8022818:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802281a:	442b      	add	r3, r5
 802281c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8022820:	07db      	lsls	r3, r3, #31
 8022822:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8022826:	bf54      	ite	pl
 8022828:	f00c 0c0f 	andpl.w	ip, ip, #15
 802282c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8022830:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8022834:	fa5f f38c 	uxtb.w	r3, ip
 8022838:	930c      	str	r3, [sp, #48]	@ 0x30
 802283a:	e7a8      	b.n	802278e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802283c:	f8b8 e000 	ldrh.w	lr, [r8]
 8022840:	fa1f fa83 	uxth.w	sl, r3
 8022844:	ea4f 202e 	mov.w	r0, lr, asr #8
 8022848:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802284c:	43db      	mvns	r3, r3
 802284e:	b2db      	uxtb	r3, r3
 8022850:	fb11 f10a 	smulbb	r1, r1, sl
 8022854:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8022858:	fb00 1003 	mla	r0, r0, r3, r1
 802285c:	b2d2      	uxtb	r2, r2
 802285e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8022862:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8022866:	fa5f fe8e 	uxtb.w	lr, lr
 802286a:	fb12 f20a 	smulbb	r2, r2, sl
 802286e:	fb0e 2203 	mla	r2, lr, r3, r2
 8022872:	fa5f fc8c 	uxtb.w	ip, ip
 8022876:	b280      	uxth	r0, r0
 8022878:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802287c:	b292      	uxth	r2, r2
 802287e:	fb1c fc0a 	smulbb	ip, ip, sl
 8022882:	fb01 cc03 	mla	ip, r1, r3, ip
 8022886:	1c43      	adds	r3, r0, #1
 8022888:	1c51      	adds	r1, r2, #1
 802288a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802288e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8022892:	fa1f fc8c 	uxth.w	ip, ip
 8022896:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802289a:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 802289e:	4308      	orrs	r0, r1
 80228a0:	f10c 0101 	add.w	r1, ip, #1
 80228a4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80228a8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80228ac:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80228b0:	ea40 000c 	orr.w	r0, r0, ip
 80228b4:	f8a8 0000 	strh.w	r0, [r8]
 80228b8:	e7a1      	b.n	80227fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80228ba:	b017      	add	sp, #92	@ 0x5c
 80228bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080228c0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80228c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80228c4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 80228c8:	2d00      	cmp	r5, #0
 80228ca:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80228ce:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 80228d2:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 80228d6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 80228da:	fb05 0e03 	mla	lr, r5, r3, r0
 80228de:	f2c0 80b0 	blt.w	8022a42 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80228e2:	45a9      	cmp	r9, r5
 80228e4:	f340 80ad 	ble.w	8022a42 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80228e8:	2800      	cmp	r0, #0
 80228ea:	f2c0 80a8 	blt.w	8022a3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80228ee:	4580      	cmp	r8, r0
 80228f0:	f340 80a5 	ble.w	8022a3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80228f4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80228f8:	f01e 0f01 	tst.w	lr, #1
 80228fc:	5d16      	ldrb	r6, [r2, r4]
 80228fe:	bf0c      	ite	eq
 8022900:	f006 060f 	andeq.w	r6, r6, #15
 8022904:	1136      	asrne	r6, r6, #4
 8022906:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802290a:	b2f6      	uxtb	r6, r6
 802290c:	1c44      	adds	r4, r0, #1
 802290e:	f100 809b 	bmi.w	8022a48 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8022912:	45a0      	cmp	r8, r4
 8022914:	f340 8098 	ble.w	8022a48 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8022918:	2f00      	cmp	r7, #0
 802291a:	f000 8097 	beq.w	8022a4c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802291e:	f10e 0a01 	add.w	sl, lr, #1
 8022922:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8022926:	f01a 0f01 	tst.w	sl, #1
 802292a:	5d14      	ldrb	r4, [r2, r4]
 802292c:	bf0c      	ite	eq
 802292e:	f004 040f 	andeq.w	r4, r4, #15
 8022932:	1124      	asrne	r4, r4, #4
 8022934:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8022938:	b2e4      	uxtb	r4, r4
 802293a:	3501      	adds	r5, #1
 802293c:	f100 808a 	bmi.w	8022a54 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8022940:	45a9      	cmp	r9, r5
 8022942:	f340 8087 	ble.w	8022a54 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8022946:	f1bc 0f00 	cmp.w	ip, #0
 802294a:	f000 8086 	beq.w	8022a5a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802294e:	2800      	cmp	r0, #0
 8022950:	db7e      	blt.n	8022a50 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8022952:	4580      	cmp	r8, r0
 8022954:	dd7c      	ble.n	8022a50 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8022956:	eb03 090e 	add.w	r9, r3, lr
 802295a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802295e:	f019 0f01 	tst.w	r9, #1
 8022962:	5d55      	ldrb	r5, [r2, r5]
 8022964:	bf0c      	ite	eq
 8022966:	f005 050f 	andeq.w	r5, r5, #15
 802296a:	112d      	asrne	r5, r5, #4
 802296c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8022970:	b2ed      	uxtb	r5, r5
 8022972:	3001      	adds	r0, #1
 8022974:	d474      	bmi.n	8022a60 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8022976:	4580      	cmp	r8, r0
 8022978:	dd72      	ble.n	8022a60 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802297a:	2f00      	cmp	r7, #0
 802297c:	d072      	beq.n	8022a64 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802297e:	3301      	adds	r3, #1
 8022980:	449e      	add	lr, r3
 8022982:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8022986:	f01e 0f01 	tst.w	lr, #1
 802298a:	5cd0      	ldrb	r0, [r2, r3]
 802298c:	bf0c      	ite	eq
 802298e:	f000 000f 	andeq.w	r0, r0, #15
 8022992:	1100      	asrne	r0, r0, #4
 8022994:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8022998:	b2c3      	uxtb	r3, r0
 802299a:	b2ba      	uxth	r2, r7
 802299c:	fa1f fc8c 	uxth.w	ip, ip
 80229a0:	fb02 f00c 	mul.w	r0, r2, ip
 80229a4:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80229a8:	0112      	lsls	r2, r2, #4
 80229aa:	fa1f fc8c 	uxth.w	ip, ip
 80229ae:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 80229b2:	1a12      	subs	r2, r2, r0
 80229b4:	eba7 070c 	sub.w	r7, r7, ip
 80229b8:	b292      	uxth	r2, r2
 80229ba:	b2bf      	uxth	r7, r7
 80229bc:	4362      	muls	r2, r4
 80229be:	fb06 2207 	mla	r2, r6, r7, r2
 80229c2:	fb0c 2505 	mla	r5, ip, r5, r2
 80229c6:	fb00 5303 	mla	r3, r0, r3, r5
 80229ca:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80229ce:	b3a3      	cbz	r3, 8022a3a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 80229d0:	4a25      	ldr	r2, [pc, #148]	@ (8022a68 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 80229d2:	880e      	ldrh	r6, [r1, #0]
 80229d4:	6815      	ldr	r5, [r2, #0]
 80229d6:	1234      	asrs	r4, r6, #8
 80229d8:	b29a      	uxth	r2, r3
 80229da:	f3c5 4007 	ubfx	r0, r5, #16, #8
 80229de:	43db      	mvns	r3, r3
 80229e0:	b2db      	uxtb	r3, r3
 80229e2:	fb10 f002 	smulbb	r0, r0, r2
 80229e6:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80229ea:	fb04 0403 	mla	r4, r4, r3, r0
 80229ee:	f3c5 2707 	ubfx	r7, r5, #8, #8
 80229f2:	10f0      	asrs	r0, r6, #3
 80229f4:	b2ed      	uxtb	r5, r5
 80229f6:	00f6      	lsls	r6, r6, #3
 80229f8:	fb17 f702 	smulbb	r7, r7, r2
 80229fc:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8022a00:	fb15 f202 	smulbb	r2, r5, r2
 8022a04:	b2f6      	uxtb	r6, r6
 8022a06:	b2a4      	uxth	r4, r4
 8022a08:	fb00 7003 	mla	r0, r0, r3, r7
 8022a0c:	fb06 2303 	mla	r3, r6, r3, r2
 8022a10:	b29a      	uxth	r2, r3
 8022a12:	1c63      	adds	r3, r4, #1
 8022a14:	b280      	uxth	r0, r0
 8022a16:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8022a1a:	1c53      	adds	r3, r2, #1
 8022a1c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022a20:	1c42      	adds	r2, r0, #1
 8022a22:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022a26:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8022a2a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022a2e:	0940      	lsrs	r0, r0, #5
 8022a30:	4323      	orrs	r3, r4
 8022a32:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022a36:	4303      	orrs	r3, r0
 8022a38:	800b      	strh	r3, [r1, #0]
 8022a3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022a3e:	2600      	movs	r6, #0
 8022a40:	e764      	b.n	802290c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8022a42:	2400      	movs	r4, #0
 8022a44:	4626      	mov	r6, r4
 8022a46:	e778      	b.n	802293a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8022a48:	2400      	movs	r4, #0
 8022a4a:	e776      	b.n	802293a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8022a4c:	463c      	mov	r4, r7
 8022a4e:	e774      	b.n	802293a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8022a50:	2500      	movs	r5, #0
 8022a52:	e78e      	b.n	8022972 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8022a54:	2300      	movs	r3, #0
 8022a56:	461d      	mov	r5, r3
 8022a58:	e79f      	b.n	802299a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8022a5a:	4663      	mov	r3, ip
 8022a5c:	4665      	mov	r5, ip
 8022a5e:	e79c      	b.n	802299a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8022a60:	2300      	movs	r3, #0
 8022a62:	e79a      	b.n	802299a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8022a64:	463b      	mov	r3, r7
 8022a66:	e798      	b.n	802299a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8022a68:	20015248 	.word	0x20015248

08022a6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022a6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022a70:	b093      	sub	sp, #76	@ 0x4c
 8022a72:	461d      	mov	r5, r3
 8022a74:	920c      	str	r2, [sp, #48]	@ 0x30
 8022a76:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8022a78:	9107      	str	r1, [sp, #28]
 8022a7a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8022a7e:	9011      	str	r0, [sp, #68]	@ 0x44
 8022a80:	6850      	ldr	r0, [r2, #4]
 8022a82:	6812      	ldr	r2, [r2, #0]
 8022a84:	fb00 1303 	mla	r3, r0, r3, r1
 8022a88:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8022a8c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022a8e:	689b      	ldr	r3, [r3, #8]
 8022a90:	3301      	adds	r3, #1
 8022a92:	f023 0301 	bic.w	r3, r3, #1
 8022a96:	9306      	str	r3, [sp, #24]
 8022a98:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022a9a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8022a9e:	681f      	ldr	r7, [r3, #0]
 8022aa0:	9b07      	ldr	r3, [sp, #28]
 8022aa2:	2b00      	cmp	r3, #0
 8022aa4:	dc03      	bgt.n	8022aae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8022aa6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8022aa8:	2b00      	cmp	r3, #0
 8022aaa:	f340 8267 	ble.w	8022f7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8022aae:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022ab0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022ab4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022ab8:	1e48      	subs	r0, r1, #1
 8022aba:	f102 3cff 	add.w	ip, r2, #4294967295
 8022abe:	2d00      	cmp	r5, #0
 8022ac0:	f340 80b8 	ble.w	8022c34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8022ac4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022ac8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022acc:	d406      	bmi.n	8022adc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8022ace:	4586      	cmp	lr, r0
 8022ad0:	da04      	bge.n	8022adc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8022ad2:	2b00      	cmp	r3, #0
 8022ad4:	db02      	blt.n	8022adc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8022ad6:	4563      	cmp	r3, ip
 8022ad8:	f2c0 80ad 	blt.w	8022c36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8022adc:	f11e 0e01 	adds.w	lr, lr, #1
 8022ae0:	f100 80a0 	bmi.w	8022c24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8022ae4:	4571      	cmp	r1, lr
 8022ae6:	f2c0 809d 	blt.w	8022c24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8022aea:	3301      	adds	r3, #1
 8022aec:	f100 809a 	bmi.w	8022c24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8022af0:	429a      	cmp	r2, r3
 8022af2:	f2c0 8097 	blt.w	8022c24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8022af6:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8022afa:	9509      	str	r5, [sp, #36]	@ 0x24
 8022afc:	46c8      	mov	r8, r9
 8022afe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022b00:	2b00      	cmp	r3, #0
 8022b02:	f340 80b6 	ble.w	8022c72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8022b06:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8022b0a:	9308      	str	r3, [sp, #32]
 8022b0c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022b0e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8022b12:	1423      	asrs	r3, r4, #16
 8022b14:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022b18:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8022b1c:	f100 813e 	bmi.w	8022d9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8022b20:	f10c 3bff 	add.w	fp, ip, #4294967295
 8022b24:	455b      	cmp	r3, fp
 8022b26:	f280 8139 	bge.w	8022d9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8022b2a:	2800      	cmp	r0, #0
 8022b2c:	f2c0 8136 	blt.w	8022d9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8022b30:	f10e 3bff 	add.w	fp, lr, #4294967295
 8022b34:	4558      	cmp	r0, fp
 8022b36:	f280 8131 	bge.w	8022d9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8022b3a:	9a06      	ldr	r2, [sp, #24]
 8022b3c:	fb00 3302 	mla	r3, r0, r2, r3
 8022b40:	0858      	lsrs	r0, r3, #1
 8022b42:	07da      	lsls	r2, r3, #31
 8022b44:	f817 c000 	ldrb.w	ip, [r7, r0]
 8022b48:	9a08      	ldr	r2, [sp, #32]
 8022b4a:	bf54      	ite	pl
 8022b4c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8022b50:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8022b54:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8022b58:	fa5f fc8c 	uxtb.w	ip, ip
 8022b5c:	2a00      	cmp	r2, #0
 8022b5e:	f000 80cb 	beq.w	8022cf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8022b62:	1c58      	adds	r0, r3, #1
 8022b64:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8022b68:	07c0      	lsls	r0, r0, #31
 8022b6a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8022b6e:	bf54      	ite	pl
 8022b70:	f00e 0e0f 	andpl.w	lr, lr, #15
 8022b74:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8022b78:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8022b7c:	fa5f fe8e 	uxtb.w	lr, lr
 8022b80:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 8022b84:	b1b9      	cbz	r1, 8022bb6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8022b86:	4453      	add	r3, sl
 8022b88:	0858      	lsrs	r0, r3, #1
 8022b8a:	07da      	lsls	r2, r3, #31
 8022b8c:	5c38      	ldrb	r0, [r7, r0]
 8022b8e:	bf54      	ite	pl
 8022b90:	f000 000f 	andpl.w	r0, r0, #15
 8022b94:	1100      	asrmi	r0, r0, #4
 8022b96:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8022b9a:	b2c0      	uxtb	r0, r0
 8022b9c:	900a      	str	r0, [sp, #40]	@ 0x28
 8022b9e:	1c58      	adds	r0, r3, #1
 8022ba0:	0843      	lsrs	r3, r0, #1
 8022ba2:	07c2      	lsls	r2, r0, #31
 8022ba4:	5cfb      	ldrb	r3, [r7, r3]
 8022ba6:	bf54      	ite	pl
 8022ba8:	f003 030f 	andpl.w	r3, r3, #15
 8022bac:	111b      	asrmi	r3, r3, #4
 8022bae:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8022bb2:	b2db      	uxtb	r3, r3
 8022bb4:	930e      	str	r3, [sp, #56]	@ 0x38
 8022bb6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8022bba:	b289      	uxth	r1, r1
 8022bbc:	fb02 f301 	mul.w	r3, r2, r1
 8022bc0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8022bc4:	0112      	lsls	r2, r2, #4
 8022bc6:	b289      	uxth	r1, r1
 8022bc8:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8022bcc:	1a40      	subs	r0, r0, r1
 8022bce:	fa1f fe80 	uxth.w	lr, r0
 8022bd2:	1ad2      	subs	r2, r2, r3
 8022bd4:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8022bd6:	b292      	uxth	r2, r2
 8022bd8:	4342      	muls	r2, r0
 8022bda:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8022bde:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8022be0:	fb01 c102 	mla	r1, r1, r2, ip
 8022be4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8022be6:	fb03 1302 	mla	r3, r3, r2, r1
 8022bea:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022bee:	2bff      	cmp	r3, #255	@ 0xff
 8022bf0:	f040 8093 	bne.w	8022d1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8022bf4:	4bbe      	ldr	r3, [pc, #760]	@ (8022ef0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8022bf6:	681a      	ldr	r2, [r3, #0]
 8022bf8:	4bbe      	ldr	r3, [pc, #760]	@ (8022ef4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8022bfa:	0951      	lsrs	r1, r2, #5
 8022bfc:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8022c00:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022c04:	430b      	orrs	r3, r1
 8022c06:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022c0a:	4313      	orrs	r3, r2
 8022c0c:	f8a8 3000 	strh.w	r3, [r8]
 8022c10:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8022c12:	441c      	add	r4, r3
 8022c14:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022c16:	441e      	add	r6, r3
 8022c18:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022c1a:	3b01      	subs	r3, #1
 8022c1c:	f108 0802 	add.w	r8, r8, #2
 8022c20:	9309      	str	r3, [sp, #36]	@ 0x24
 8022c22:	e76c      	b.n	8022afe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022c24:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8022c26:	441c      	add	r4, r3
 8022c28:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022c2a:	3d01      	subs	r5, #1
 8022c2c:	441e      	add	r6, r3
 8022c2e:	f109 0902 	add.w	r9, r9, #2
 8022c32:	e744      	b.n	8022abe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8022c34:	d021      	beq.n	8022c7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8022c36:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8022c38:	1e6b      	subs	r3, r5, #1
 8022c3a:	fb00 4003 	mla	r0, r0, r3, r4
 8022c3e:	1400      	asrs	r0, r0, #16
 8022c40:	f53f af59 	bmi.w	8022af6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8022c44:	3901      	subs	r1, #1
 8022c46:	4288      	cmp	r0, r1
 8022c48:	f6bf af55 	bge.w	8022af6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8022c4c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8022c4e:	fb01 6303 	mla	r3, r1, r3, r6
 8022c52:	141b      	asrs	r3, r3, #16
 8022c54:	f53f af4f 	bmi.w	8022af6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8022c58:	3a01      	subs	r2, #1
 8022c5a:	4293      	cmp	r3, r2
 8022c5c:	f6bf af4b 	bge.w	8022af6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8022c60:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8022c64:	9308      	str	r3, [sp, #32]
 8022c66:	46a8      	mov	r8, r5
 8022c68:	46ce      	mov	lr, r9
 8022c6a:	f1b8 0f00 	cmp.w	r8, #0
 8022c6e:	f300 80b5 	bgt.w	8022ddc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8022c72:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022c76:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8022c7a:	9b07      	ldr	r3, [sp, #28]
 8022c7c:	2b00      	cmp	r3, #0
 8022c7e:	f340 817d 	ble.w	8022f7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8022c82:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022c86:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022c8a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022c8e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022c90:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022c94:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022c98:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022c9c:	eef0 6a62 	vmov.f32	s13, s5
 8022ca0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022ca4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022ca8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022cac:	ee16 4a90 	vmov	r4, s13
 8022cb0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022cb4:	eef0 6a43 	vmov.f32	s13, s6
 8022cb8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022cbc:	ee12 2a90 	vmov	r2, s5
 8022cc0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022cc4:	fb92 f3f3 	sdiv	r3, r2, r3
 8022cc8:	ee13 2a10 	vmov	r2, s6
 8022ccc:	931f      	str	r3, [sp, #124]	@ 0x7c
 8022cce:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022cd0:	fb92 f3f3 	sdiv	r3, r2, r3
 8022cd4:	9320      	str	r3, [sp, #128]	@ 0x80
 8022cd6:	9b07      	ldr	r3, [sp, #28]
 8022cd8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8022cda:	3b01      	subs	r3, #1
 8022cdc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022ce0:	9307      	str	r3, [sp, #28]
 8022ce2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022ce4:	ee16 6a90 	vmov	r6, s13
 8022ce8:	bf14      	ite	ne
 8022cea:	461d      	movne	r5, r3
 8022cec:	4615      	moveq	r5, r2
 8022cee:	eeb0 3a67 	vmov.f32	s6, s15
 8022cf2:	eef0 2a47 	vmov.f32	s5, s14
 8022cf6:	e6d3      	b.n	8022aa0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8022cf8:	2900      	cmp	r1, #0
 8022cfa:	f43f af5c 	beq.w	8022bb6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8022cfe:	eb0a 0003 	add.w	r0, sl, r3
 8022d02:	0843      	lsrs	r3, r0, #1
 8022d04:	07c0      	lsls	r0, r0, #31
 8022d06:	5cfb      	ldrb	r3, [r7, r3]
 8022d08:	bf54      	ite	pl
 8022d0a:	f003 030f 	andpl.w	r3, r3, #15
 8022d0e:	111b      	asrmi	r3, r3, #4
 8022d10:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8022d14:	b2db      	uxtb	r3, r3
 8022d16:	930a      	str	r3, [sp, #40]	@ 0x28
 8022d18:	e74d      	b.n	8022bb6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8022d1a:	2b00      	cmp	r3, #0
 8022d1c:	f43f af78 	beq.w	8022c10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8022d20:	4a73      	ldr	r2, [pc, #460]	@ (8022ef0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8022d22:	f8b8 c000 	ldrh.w	ip, [r8]
 8022d26:	6810      	ldr	r0, [r2, #0]
 8022d28:	fa1f fe83 	uxth.w	lr, r3
 8022d2c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8022d30:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8022d34:	43db      	mvns	r3, r3
 8022d36:	b2db      	uxtb	r3, r3
 8022d38:	fb12 f20e 	smulbb	r2, r2, lr
 8022d3c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8022d40:	fb01 2103 	mla	r1, r1, r3, r2
 8022d44:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8022d48:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022d4c:	b2c0      	uxtb	r0, r0
 8022d4e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8022d52:	fb1b fb0e 	smulbb	fp, fp, lr
 8022d56:	b289      	uxth	r1, r1
 8022d58:	fb10 fe0e 	smulbb	lr, r0, lr
 8022d5c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8022d60:	fa5f fc8c 	uxtb.w	ip, ip
 8022d64:	fb02 b203 	mla	r2, r2, r3, fp
 8022d68:	1c48      	adds	r0, r1, #1
 8022d6a:	fb0c e303 	mla	r3, ip, r3, lr
 8022d6e:	b292      	uxth	r2, r2
 8022d70:	b29b      	uxth	r3, r3
 8022d72:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8022d76:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 8022d7a:	f102 0b01 	add.w	fp, r2, #1
 8022d7e:	1c59      	adds	r1, r3, #1
 8022d80:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8022d84:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8022d88:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8022d8c:	0952      	lsrs	r2, r2, #5
 8022d8e:	4301      	orrs	r1, r0
 8022d90:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022d94:	4311      	orrs	r1, r2
 8022d96:	f8a8 1000 	strh.w	r1, [r8]
 8022d9a:	e739      	b.n	8022c10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8022d9c:	f113 0b01 	adds.w	fp, r3, #1
 8022da0:	f53f af36 	bmi.w	8022c10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8022da4:	45dc      	cmp	ip, fp
 8022da6:	f6ff af33 	blt.w	8022c10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8022daa:	f110 0b01 	adds.w	fp, r0, #1
 8022dae:	f53f af2f 	bmi.w	8022c10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8022db2:	45de      	cmp	lr, fp
 8022db4:	f6ff af2c 	blt.w	8022c10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8022db8:	9a08      	ldr	r2, [sp, #32]
 8022dba:	9302      	str	r3, [sp, #8]
 8022dbc:	fa0f f38e 	sxth.w	r3, lr
 8022dc0:	9301      	str	r3, [sp, #4]
 8022dc2:	fa0f f38c 	sxth.w	r3, ip
 8022dc6:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8022dca:	9105      	str	r1, [sp, #20]
 8022dcc:	9300      	str	r3, [sp, #0]
 8022dce:	463a      	mov	r2, r7
 8022dd0:	4653      	mov	r3, sl
 8022dd2:	4641      	mov	r1, r8
 8022dd4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8022dd6:	f7ff fd73 	bl	80228c0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8022dda:	e719      	b.n	8022c10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8022ddc:	9906      	ldr	r1, [sp, #24]
 8022dde:	1422      	asrs	r2, r4, #16
 8022de0:	1433      	asrs	r3, r6, #16
 8022de2:	fb01 2303 	mla	r3, r1, r3, r2
 8022de6:	085a      	lsrs	r2, r3, #1
 8022de8:	07d9      	lsls	r1, r3, #31
 8022dea:	5cba      	ldrb	r2, [r7, r2]
 8022dec:	bf54      	ite	pl
 8022dee:	f002 020f 	andpl.w	r2, r2, #15
 8022df2:	1112      	asrmi	r2, r2, #4
 8022df4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8022df8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8022dfc:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022e00:	b2d2      	uxtb	r2, r2
 8022e02:	2800      	cmp	r0, #0
 8022e04:	d062      	beq.n	8022ecc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8022e06:	f103 0a01 	add.w	sl, r3, #1
 8022e0a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8022e0e:	f01a 0f01 	tst.w	sl, #1
 8022e12:	5c79      	ldrb	r1, [r7, r1]
 8022e14:	bf0c      	ite	eq
 8022e16:	f001 010f 	andeq.w	r1, r1, #15
 8022e1a:	1109      	asrne	r1, r1, #4
 8022e1c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8022e20:	b2c9      	uxtb	r1, r1
 8022e22:	910f      	str	r1, [sp, #60]	@ 0x3c
 8022e24:	f1bc 0f00 	cmp.w	ip, #0
 8022e28:	d019      	beq.n	8022e5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8022e2a:	9908      	ldr	r1, [sp, #32]
 8022e2c:	440b      	add	r3, r1
 8022e2e:	0859      	lsrs	r1, r3, #1
 8022e30:	f013 0f01 	tst.w	r3, #1
 8022e34:	5c79      	ldrb	r1, [r7, r1]
 8022e36:	bf0c      	ite	eq
 8022e38:	f001 010f 	andeq.w	r1, r1, #15
 8022e3c:	1109      	asrne	r1, r1, #4
 8022e3e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8022e42:	b2c9      	uxtb	r1, r1
 8022e44:	3301      	adds	r3, #1
 8022e46:	910b      	str	r1, [sp, #44]	@ 0x2c
 8022e48:	0859      	lsrs	r1, r3, #1
 8022e4a:	07db      	lsls	r3, r3, #31
 8022e4c:	5c79      	ldrb	r1, [r7, r1]
 8022e4e:	bf54      	ite	pl
 8022e50:	f001 010f 	andpl.w	r1, r1, #15
 8022e54:	1109      	asrmi	r1, r1, #4
 8022e56:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8022e5a:	b2c9      	uxtb	r1, r1
 8022e5c:	9110      	str	r1, [sp, #64]	@ 0x40
 8022e5e:	b280      	uxth	r0, r0
 8022e60:	fa1f fc8c 	uxth.w	ip, ip
 8022e64:	fb00 f30c 	mul.w	r3, r0, ip
 8022e68:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8022e6c:	0100      	lsls	r0, r0, #4
 8022e6e:	fa1f fc8c 	uxth.w	ip, ip
 8022e72:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 8022e76:	eba1 010c 	sub.w	r1, r1, ip
 8022e7a:	fa1f fa81 	uxth.w	sl, r1
 8022e7e:	1ac0      	subs	r0, r0, r3
 8022e80:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8022e82:	b280      	uxth	r0, r0
 8022e84:	4348      	muls	r0, r1
 8022e86:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8022e88:	fb02 020a 	mla	r2, r2, sl, r0
 8022e8c:	fb0c 2c01 	mla	ip, ip, r1, r2
 8022e90:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8022e92:	fb03 c302 	mla	r3, r3, r2, ip
 8022e96:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022e9a:	2bff      	cmp	r3, #255	@ 0xff
 8022e9c:	d12c      	bne.n	8022ef8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8022e9e:	4b14      	ldr	r3, [pc, #80]	@ (8022ef0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8022ea0:	681a      	ldr	r2, [r3, #0]
 8022ea2:	4b14      	ldr	r3, [pc, #80]	@ (8022ef4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8022ea4:	0951      	lsrs	r1, r2, #5
 8022ea6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8022eaa:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022eae:	430b      	orrs	r3, r1
 8022eb0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022eb4:	4313      	orrs	r3, r2
 8022eb6:	f8ae 3000 	strh.w	r3, [lr]
 8022eba:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8022ebc:	441c      	add	r4, r3
 8022ebe:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022ec0:	f10e 0e02 	add.w	lr, lr, #2
 8022ec4:	441e      	add	r6, r3
 8022ec6:	f108 38ff 	add.w	r8, r8, #4294967295
 8022eca:	e6ce      	b.n	8022c6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8022ecc:	f1bc 0f00 	cmp.w	ip, #0
 8022ed0:	d0c5      	beq.n	8022e5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8022ed2:	9908      	ldr	r1, [sp, #32]
 8022ed4:	440b      	add	r3, r1
 8022ed6:	0859      	lsrs	r1, r3, #1
 8022ed8:	07db      	lsls	r3, r3, #31
 8022eda:	5c79      	ldrb	r1, [r7, r1]
 8022edc:	bf54      	ite	pl
 8022ede:	f001 010f 	andpl.w	r1, r1, #15
 8022ee2:	1109      	asrmi	r1, r1, #4
 8022ee4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8022ee8:	b2c9      	uxtb	r1, r1
 8022eea:	910b      	str	r1, [sp, #44]	@ 0x2c
 8022eec:	e7b7      	b.n	8022e5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8022eee:	bf00      	nop
 8022ef0:	20015248 	.word	0x20015248
 8022ef4:	fffff800 	.word	0xfffff800
 8022ef8:	2b00      	cmp	r3, #0
 8022efa:	d0de      	beq.n	8022eba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022efc:	4a21      	ldr	r2, [pc, #132]	@ (8022f84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8022efe:	f8be c000 	ldrh.w	ip, [lr]
 8022f02:	6810      	ldr	r0, [r2, #0]
 8022f04:	fa1f fa83 	uxth.w	sl, r3
 8022f08:	ea4f 212c 	mov.w	r1, ip, asr #8
 8022f0c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8022f10:	43db      	mvns	r3, r3
 8022f12:	b2db      	uxtb	r3, r3
 8022f14:	fb12 f20a 	smulbb	r2, r2, sl
 8022f18:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8022f1c:	fb01 2103 	mla	r1, r1, r3, r2
 8022f20:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8022f24:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022f28:	b2c0      	uxtb	r0, r0
 8022f2a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8022f2e:	fa5f fc8c 	uxtb.w	ip, ip
 8022f32:	fb10 f00a 	smulbb	r0, r0, sl
 8022f36:	fb0c 0003 	mla	r0, ip, r3, r0
 8022f3a:	b289      	uxth	r1, r1
 8022f3c:	fb1b fb0a 	smulbb	fp, fp, sl
 8022f40:	b280      	uxth	r0, r0
 8022f42:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8022f46:	fb02 b203 	mla	r2, r2, r3, fp
 8022f4a:	1c4b      	adds	r3, r1, #1
 8022f4c:	f100 0b01 	add.w	fp, r0, #1
 8022f50:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8022f54:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8022f58:	b292      	uxth	r2, r2
 8022f5a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8022f5e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8022f62:	ea4b 0101 	orr.w	r1, fp, r1
 8022f66:	f102 0b01 	add.w	fp, r2, #1
 8022f6a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8022f6e:	0952      	lsrs	r2, r2, #5
 8022f70:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022f74:	4311      	orrs	r1, r2
 8022f76:	f8ae 1000 	strh.w	r1, [lr]
 8022f7a:	e79e      	b.n	8022eba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022f7c:	b013      	add	sp, #76	@ 0x4c
 8022f7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022f82:	bf00      	nop
 8022f84:	20015248 	.word	0x20015248

08022f88 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8022f88:	b570      	push	{r4, r5, r6, lr}
 8022f8a:	1208      	asrs	r0, r1, #8
 8022f8c:	b29e      	uxth	r6, r3
 8022f8e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8022f92:	1213      	asrs	r3, r2, #8
 8022f94:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8022f98:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8022f9c:	fb13 f305 	smulbb	r3, r3, r5
 8022fa0:	fb10 f006 	smulbb	r0, r0, r6
 8022fa4:	4418      	add	r0, r3
 8022fa6:	10cc      	asrs	r4, r1, #3
 8022fa8:	10d3      	asrs	r3, r2, #3
 8022faa:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8022fae:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8022fb2:	fb13 f305 	smulbb	r3, r3, r5
 8022fb6:	fb14 f406 	smulbb	r4, r4, r6
 8022fba:	00c9      	lsls	r1, r1, #3
 8022fbc:	00d2      	lsls	r2, r2, #3
 8022fbe:	441c      	add	r4, r3
 8022fc0:	b2d2      	uxtb	r2, r2
 8022fc2:	b2cb      	uxtb	r3, r1
 8022fc4:	fb12 f205 	smulbb	r2, r2, r5
 8022fc8:	b280      	uxth	r0, r0
 8022fca:	fb13 f306 	smulbb	r3, r3, r6
 8022fce:	4413      	add	r3, r2
 8022fd0:	1c42      	adds	r2, r0, #1
 8022fd2:	b29b      	uxth	r3, r3
 8022fd4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022fd8:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 8022fdc:	1c58      	adds	r0, r3, #1
 8022fde:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022fe2:	b2a4      	uxth	r4, r4
 8022fe4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8022fe8:	4310      	orrs	r0, r2
 8022fea:	1c62      	adds	r2, r4, #1
 8022fec:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8022ff0:	0964      	lsrs	r4, r4, #5
 8022ff2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8022ff6:	4320      	orrs	r0, r4
 8022ff8:	bd70      	pop	{r4, r5, r6, pc}
	...

08022ffc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8022ffc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023000:	b08f      	sub	sp, #60	@ 0x3c
 8023002:	461c      	mov	r4, r3
 8023004:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8023008:	9004      	str	r0, [sp, #16]
 802300a:	460d      	mov	r5, r1
 802300c:	4616      	mov	r6, r2
 802300e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8023010:	2f00      	cmp	r7, #0
 8023012:	f000 80f6 	beq.w	8023202 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8023016:	6820      	ldr	r0, [r4, #0]
 8023018:	6861      	ldr	r1, [r4, #4]
 802301a:	aa0a      	add	r2, sp, #40	@ 0x28
 802301c:	c203      	stmia	r2!, {r0, r1}
 802301e:	6818      	ldr	r0, [r3, #0]
 8023020:	6859      	ldr	r1, [r3, #4]
 8023022:	aa0c      	add	r2, sp, #48	@ 0x30
 8023024:	c203      	stmia	r2!, {r0, r1}
 8023026:	a80a      	add	r0, sp, #40	@ 0x28
 8023028:	f7ee fa9e 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802302c:	4621      	mov	r1, r4
 802302e:	a80c      	add	r0, sp, #48	@ 0x30
 8023030:	f7ee fac2 	bl	80115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023034:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8023038:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 802303c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8023040:	f002 0301 	and.w	r3, r2, #1
 8023044:	9306      	str	r3, [sp, #24]
 8023046:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802304a:	f003 0101 	and.w	r1, r3, #1
 802304e:	9105      	str	r1, [sp, #20]
 8023050:	9805      	ldr	r0, [sp, #20]
 8023052:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8023056:	4403      	add	r3, r0
 8023058:	fb01 2303 	mla	r3, r1, r3, r2
 802305c:	f04f 0802 	mov.w	r8, #2
 8023060:	fb93 f3f8 	sdiv	r3, r3, r8
 8023064:	441d      	add	r5, r3
 8023066:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 802306a:	441a      	add	r2, r3
 802306c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8023070:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8023074:	4419      	add	r1, r3
 8023076:	4b64      	ldr	r3, [pc, #400]	@ (8023208 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8023078:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 802307c:	6818      	ldr	r0, [r3, #0]
 802307e:	6803      	ldr	r3, [r0, #0]
 8023080:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023082:	4798      	blx	r3
 8023084:	4a61      	ldr	r2, [pc, #388]	@ (802320c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8023086:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 802308a:	8813      	ldrh	r3, [r2, #0]
 802308c:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 8023090:	2fff      	cmp	r7, #255	@ 0xff
 8023092:	fb03 a404 	mla	r4, r3, r4, sl
 8023096:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802309a:	f106 0604 	add.w	r6, r6, #4
 802309e:	4611      	mov	r1, r2
 80230a0:	fb03 fb0b 	mul.w	fp, r3, fp
 80230a4:	d06b      	beq.n	802317e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80230a6:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 80230aa:	9303      	str	r3, [sp, #12]
 80230ac:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80230b0:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80230b4:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 80230b8:	9b07      	ldr	r3, [sp, #28]
 80230ba:	42a3      	cmp	r3, r4
 80230bc:	f240 809c 	bls.w	80231f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80230c0:	9b06      	ldr	r3, [sp, #24]
 80230c2:	2b00      	cmp	r3, #0
 80230c4:	d039      	beq.n	802313a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80230c6:	782b      	ldrb	r3, [r5, #0]
 80230c8:	8822      	ldrh	r2, [r4, #0]
 80230ca:	9804      	ldr	r0, [sp, #16]
 80230cc:	f003 030f 	and.w	r3, r3, #15
 80230d0:	f105 0801 	add.w	r8, r5, #1
 80230d4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80230d8:	9b03      	ldr	r3, [sp, #12]
 80230da:	9300      	str	r3, [sp, #0]
 80230dc:	463b      	mov	r3, r7
 80230de:	f7ff ff53 	bl	8022f88 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80230e2:	f824 0b02 	strh.w	r0, [r4], #2
 80230e6:	f109 3bff 	add.w	fp, r9, #4294967295
 80230ea:	f1bb 0f01 	cmp.w	fp, #1
 80230ee:	46a2      	mov	sl, r4
 80230f0:	f104 0404 	add.w	r4, r4, #4
 80230f4:	dd24      	ble.n	8023140 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80230f6:	f898 3000 	ldrb.w	r3, [r8]
 80230fa:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80230fe:	9804      	ldr	r0, [sp, #16]
 8023100:	091b      	lsrs	r3, r3, #4
 8023102:	f1ab 0b02 	sub.w	fp, fp, #2
 8023106:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802310a:	9b03      	ldr	r3, [sp, #12]
 802310c:	9300      	str	r3, [sp, #0]
 802310e:	463b      	mov	r3, r7
 8023110:	f7ff ff3a 	bl	8022f88 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8023114:	f824 0c04 	strh.w	r0, [r4, #-4]
 8023118:	f818 3b01 	ldrb.w	r3, [r8], #1
 802311c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8023120:	9804      	ldr	r0, [sp, #16]
 8023122:	f003 030f 	and.w	r3, r3, #15
 8023126:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802312a:	9b03      	ldr	r3, [sp, #12]
 802312c:	9300      	str	r3, [sp, #0]
 802312e:	463b      	mov	r3, r7
 8023130:	f7ff ff2a 	bl	8022f88 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8023134:	f824 0c02 	strh.w	r0, [r4, #-2]
 8023138:	e7d7      	b.n	80230ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802313a:	46a8      	mov	r8, r5
 802313c:	46cb      	mov	fp, r9
 802313e:	e7d4      	b.n	80230ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8023140:	d10e      	bne.n	8023160 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8023142:	f898 3000 	ldrb.w	r3, [r8]
 8023146:	f8ba 2000 	ldrh.w	r2, [sl]
 802314a:	9804      	ldr	r0, [sp, #16]
 802314c:	091b      	lsrs	r3, r3, #4
 802314e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8023152:	9b03      	ldr	r3, [sp, #12]
 8023154:	9300      	str	r3, [sp, #0]
 8023156:	463b      	mov	r3, r7
 8023158:	f7ff ff16 	bl	8022f88 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802315c:	f82a 0b02 	strh.w	r0, [sl], #2
 8023160:	9b08      	ldr	r3, [sp, #32]
 8023162:	9a05      	ldr	r2, [sp, #20]
 8023164:	881c      	ldrh	r4, [r3, #0]
 8023166:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802316a:	eba4 0409 	sub.w	r4, r4, r9
 802316e:	4413      	add	r3, r2
 8023170:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8023174:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8023176:	fb93 f3f2 	sdiv	r3, r3, r2
 802317a:	441d      	add	r5, r3
 802317c:	e79c      	b.n	80230b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802317e:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8023182:	45a3      	cmp	fp, r4
 8023184:	d938      	bls.n	80231f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8023186:	9b06      	ldr	r3, [sp, #24]
 8023188:	b1f3      	cbz	r3, 80231c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802318a:	782b      	ldrb	r3, [r5, #0]
 802318c:	f003 030f 	and.w	r3, r3, #15
 8023190:	1c6a      	adds	r2, r5, #1
 8023192:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8023196:	8023      	strh	r3, [r4, #0]
 8023198:	f109 30ff 	add.w	r0, r9, #4294967295
 802319c:	3402      	adds	r4, #2
 802319e:	2801      	cmp	r0, #1
 80231a0:	4623      	mov	r3, r4
 80231a2:	f104 0404 	add.w	r4, r4, #4
 80231a6:	dd12      	ble.n	80231ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80231a8:	7813      	ldrb	r3, [r2, #0]
 80231aa:	091b      	lsrs	r3, r3, #4
 80231ac:	3802      	subs	r0, #2
 80231ae:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80231b2:	f824 3c04 	strh.w	r3, [r4, #-4]
 80231b6:	f812 3b01 	ldrb.w	r3, [r2], #1
 80231ba:	f003 030f 	and.w	r3, r3, #15
 80231be:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80231c2:	f824 3c02 	strh.w	r3, [r4, #-2]
 80231c6:	e7ea      	b.n	802319e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80231c8:	462a      	mov	r2, r5
 80231ca:	4648      	mov	r0, r9
 80231cc:	e7e7      	b.n	802319e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80231ce:	d106      	bne.n	80231de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80231d0:	7812      	ldrb	r2, [r2, #0]
 80231d2:	0912      	lsrs	r2, r2, #4
 80231d4:	3302      	adds	r3, #2
 80231d6:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80231da:	f823 2c02 	strh.w	r2, [r3, #-2]
 80231de:	880c      	ldrh	r4, [r1, #0]
 80231e0:	9a05      	ldr	r2, [sp, #20]
 80231e2:	eba4 0409 	sub.w	r4, r4, r9
 80231e6:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80231ea:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80231ee:	4413      	add	r3, r2
 80231f0:	fb93 f3f8 	sdiv	r3, r3, r8
 80231f4:	441d      	add	r5, r3
 80231f6:	e7c4      	b.n	8023182 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80231f8:	4b03      	ldr	r3, [pc, #12]	@ (8023208 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80231fa:	6818      	ldr	r0, [r3, #0]
 80231fc:	6803      	ldr	r3, [r0, #0]
 80231fe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8023200:	4798      	blx	r3
 8023202:	b00f      	add	sp, #60	@ 0x3c
 8023204:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023208:	20015238 	.word	0x20015238
 802320c:	20015232 	.word	0x20015232

08023210 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8023210:	b5f0      	push	{r4, r5, r6, r7, lr}
 8023212:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8023216:	2dff      	cmp	r5, #255	@ 0xff
 8023218:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802321c:	d10c      	bne.n	8023238 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802321e:	2bff      	cmp	r3, #255	@ 0xff
 8023220:	d10a      	bne.n	8023238 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8023222:	4b25      	ldr	r3, [pc, #148]	@ (80232b8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8023224:	0948      	lsrs	r0, r1, #5
 8023226:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802322a:	403b      	ands	r3, r7
 802322c:	4318      	orrs	r0, r3
 802322e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8023232:	4308      	orrs	r0, r1
 8023234:	b280      	uxth	r0, r0
 8023236:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023238:	fb15 f503 	smulbb	r5, r5, r3
 802323c:	b2ab      	uxth	r3, r5
 802323e:	1c5d      	adds	r5, r3, #1
 8023240:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8023244:	1214      	asrs	r4, r2, #8
 8023246:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802324a:	fa1f fc85 	uxth.w	ip, r5
 802324e:	10d6      	asrs	r6, r2, #3
 8023250:	00d0      	lsls	r0, r2, #3
 8023252:	43ed      	mvns	r5, r5
 8023254:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8023258:	f3c1 4207 	ubfx	r2, r1, #16, #8
 802325c:	b2eb      	uxtb	r3, r5
 802325e:	b2c0      	uxtb	r0, r0
 8023260:	fb12 f20c 	smulbb	r2, r2, ip
 8023264:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8023268:	fb04 2403 	mla	r4, r4, r3, r2
 802326c:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8023270:	b2c8      	uxtb	r0, r1
 8023272:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8023276:	b2fd      	uxtb	r5, r7
 8023278:	fb10 f00c 	smulbb	r0, r0, ip
 802327c:	b2a4      	uxth	r4, r4
 802327e:	fb02 0003 	mla	r0, r2, r3, r0
 8023282:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8023286:	fb15 f50c 	smulbb	r5, r5, ip
 802328a:	fb06 5503 	mla	r5, r6, r3, r5
 802328e:	b283      	uxth	r3, r0
 8023290:	1c60      	adds	r0, r4, #1
 8023292:	b2ad      	uxth	r5, r5
 8023294:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8023298:	1c58      	adds	r0, r3, #1
 802329a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802329e:	1c6b      	adds	r3, r5, #1
 80232a0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80232a4:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80232a8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80232ac:	096d      	lsrs	r5, r5, #5
 80232ae:	4320      	orrs	r0, r4
 80232b0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80232b4:	4328      	orrs	r0, r5
 80232b6:	e7be      	b.n	8023236 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80232b8:	00fff800 	.word	0x00fff800

080232bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80232bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80232c0:	461c      	mov	r4, r3
 80232c2:	b08d      	sub	sp, #52	@ 0x34
 80232c4:	460d      	mov	r5, r1
 80232c6:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80232c8:	6861      	ldr	r1, [r4, #4]
 80232ca:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 80232ce:	4680      	mov	r8, r0
 80232d0:	6820      	ldr	r0, [r4, #0]
 80232d2:	4616      	mov	r6, r2
 80232d4:	aa08      	add	r2, sp, #32
 80232d6:	c203      	stmia	r2!, {r0, r1}
 80232d8:	6818      	ldr	r0, [r3, #0]
 80232da:	6859      	ldr	r1, [r3, #4]
 80232dc:	aa0a      	add	r2, sp, #40	@ 0x28
 80232de:	c203      	stmia	r2!, {r0, r1}
 80232e0:	a808      	add	r0, sp, #32
 80232e2:	f7ee f941 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80232e6:	4621      	mov	r1, r4
 80232e8:	a80a      	add	r0, sp, #40	@ 0x28
 80232ea:	f7ee f965 	bl	80115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80232ee:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 80232f2:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 80232f6:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 80232fa:	f002 0301 	and.w	r3, r2, #1
 80232fe:	9303      	str	r3, [sp, #12]
 8023300:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8023304:	f003 0101 	and.w	r1, r3, #1
 8023308:	9102      	str	r1, [sp, #8]
 802330a:	9802      	ldr	r0, [sp, #8]
 802330c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8023310:	4403      	add	r3, r0
 8023312:	fb01 2303 	mla	r3, r1, r3, r2
 8023316:	f04f 0a02 	mov.w	sl, #2
 802331a:	fb93 f3fa 	sdiv	r3, r3, sl
 802331e:	441d      	add	r5, r3
 8023320:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8023324:	441a      	add	r2, r3
 8023326:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 802332a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 802332e:	4a3f      	ldr	r2, [pc, #252]	@ (802342c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8023330:	9205      	str	r2, [sp, #20]
 8023332:	4419      	add	r1, r3
 8023334:	6810      	ldr	r0, [r2, #0]
 8023336:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 802333a:	6803      	ldr	r3, [r0, #0]
 802333c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802333e:	4798      	blx	r3
 8023340:	4b3b      	ldr	r3, [pc, #236]	@ (8023430 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8023342:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 8023346:	8819      	ldrh	r1, [r3, #0]
 8023348:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 802334c:	fb01 c404 	mla	r4, r1, r4, ip
 8023350:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8023354:	434f      	muls	r7, r1
 8023356:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802335a:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802335e:	3604      	adds	r6, #4
 8023360:	9204      	str	r2, [sp, #16]
 8023362:	9b04      	ldr	r3, [sp, #16]
 8023364:	429c      	cmp	r4, r3
 8023366:	d258      	bcs.n	802341a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8023368:	9b03      	ldr	r3, [sp, #12]
 802336a:	2b00      	cmp	r3, #0
 802336c:	d034      	beq.n	80233d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802336e:	782b      	ldrb	r3, [r5, #0]
 8023370:	f003 030f 	and.w	r3, r3, #15
 8023374:	1c6f      	adds	r7, r5, #1
 8023376:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802337a:	0e0b      	lsrs	r3, r1, #24
 802337c:	d006      	beq.n	802338c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802337e:	8822      	ldrh	r2, [r4, #0]
 8023380:	9300      	str	r3, [sp, #0]
 8023382:	4640      	mov	r0, r8
 8023384:	464b      	mov	r3, r9
 8023386:	f7ff ff43 	bl	8023210 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802338a:	8020      	strh	r0, [r4, #0]
 802338c:	3402      	adds	r4, #2
 802338e:	f10b 3aff 	add.w	sl, fp, #4294967295
 8023392:	f1ba 0f01 	cmp.w	sl, #1
 8023396:	dd22      	ble.n	80233de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8023398:	783b      	ldrb	r3, [r7, #0]
 802339a:	091b      	lsrs	r3, r3, #4
 802339c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80233a0:	0e0b      	lsrs	r3, r1, #24
 80233a2:	d006      	beq.n	80233b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80233a4:	8822      	ldrh	r2, [r4, #0]
 80233a6:	9300      	str	r3, [sp, #0]
 80233a8:	4640      	mov	r0, r8
 80233aa:	464b      	mov	r3, r9
 80233ac:	f7ff ff30 	bl	8023210 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80233b0:	8020      	strh	r0, [r4, #0]
 80233b2:	f817 3b01 	ldrb.w	r3, [r7], #1
 80233b6:	f003 030f 	and.w	r3, r3, #15
 80233ba:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80233be:	0e0b      	lsrs	r3, r1, #24
 80233c0:	d006      	beq.n	80233d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80233c2:	8862      	ldrh	r2, [r4, #2]
 80233c4:	9300      	str	r3, [sp, #0]
 80233c6:	4640      	mov	r0, r8
 80233c8:	464b      	mov	r3, r9
 80233ca:	f7ff ff21 	bl	8023210 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80233ce:	8060      	strh	r0, [r4, #2]
 80233d0:	3404      	adds	r4, #4
 80233d2:	f1aa 0a02 	sub.w	sl, sl, #2
 80233d6:	e7dc      	b.n	8023392 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80233d8:	462f      	mov	r7, r5
 80233da:	46da      	mov	sl, fp
 80233dc:	e7d9      	b.n	8023392 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80233de:	d10d      	bne.n	80233fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80233e0:	783b      	ldrb	r3, [r7, #0]
 80233e2:	091b      	lsrs	r3, r3, #4
 80233e4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80233e8:	0e0b      	lsrs	r3, r1, #24
 80233ea:	d006      	beq.n	80233fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80233ec:	8822      	ldrh	r2, [r4, #0]
 80233ee:	9300      	str	r3, [sp, #0]
 80233f0:	4640      	mov	r0, r8
 80233f2:	464b      	mov	r3, r9
 80233f4:	f7ff ff0c 	bl	8023210 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80233f8:	8020      	strh	r0, [r4, #0]
 80233fa:	3402      	adds	r4, #2
 80233fc:	9b06      	ldr	r3, [sp, #24]
 80233fe:	9a02      	ldr	r2, [sp, #8]
 8023400:	881b      	ldrh	r3, [r3, #0]
 8023402:	eba3 030b 	sub.w	r3, r3, fp
 8023406:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802340a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802340e:	4413      	add	r3, r2
 8023410:	9a07      	ldr	r2, [sp, #28]
 8023412:	fb93 f3f2 	sdiv	r3, r3, r2
 8023416:	441d      	add	r5, r3
 8023418:	e7a3      	b.n	8023362 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802341a:	9b05      	ldr	r3, [sp, #20]
 802341c:	6818      	ldr	r0, [r3, #0]
 802341e:	6803      	ldr	r3, [r0, #0]
 8023420:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8023422:	4798      	blx	r3
 8023424:	b00d      	add	sp, #52	@ 0x34
 8023426:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802342a:	bf00      	nop
 802342c:	20015238 	.word	0x20015238
 8023430:	20015232 	.word	0x20015232

08023434 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8023434:	b570      	push	{r4, r5, r6, lr}
 8023436:	1214      	asrs	r4, r2, #8
 8023438:	788d      	ldrb	r5, [r1, #2]
 802343a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802343e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8023442:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8023446:	fb15 f503 	smulbb	r5, r5, r3
 802344a:	fb04 5506 	mla	r5, r4, r6, r5
 802344e:	10d0      	asrs	r0, r2, #3
 8023450:	784c      	ldrb	r4, [r1, #1]
 8023452:	7809      	ldrb	r1, [r1, #0]
 8023454:	00d2      	lsls	r2, r2, #3
 8023456:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802345a:	b2d2      	uxtb	r2, r2
 802345c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8023460:	fb14 f403 	smulbb	r4, r4, r3
 8023464:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8023468:	fb11 f303 	smulbb	r3, r1, r3
 802346c:	fb00 4406 	mla	r4, r0, r6, r4
 8023470:	fb02 3306 	mla	r3, r2, r6, r3
 8023474:	b2ad      	uxth	r5, r5
 8023476:	b29b      	uxth	r3, r3
 8023478:	b2a4      	uxth	r4, r4
 802347a:	1c68      	adds	r0, r5, #1
 802347c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8023480:	1c62      	adds	r2, r4, #1
 8023482:	1c58      	adds	r0, r3, #1
 8023484:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8023488:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802348c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8023490:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8023494:	0964      	lsrs	r4, r4, #5
 8023496:	4328      	orrs	r0, r5
 8023498:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802349c:	4320      	orrs	r0, r4
 802349e:	bd70      	pop	{r4, r5, r6, pc}

080234a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80234a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80234a4:	b08f      	sub	sp, #60	@ 0x3c
 80234a6:	461c      	mov	r4, r3
 80234a8:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 80234ac:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80234ae:	4682      	mov	sl, r0
 80234b0:	460e      	mov	r6, r1
 80234b2:	4615      	mov	r5, r2
 80234b4:	2f00      	cmp	r7, #0
 80234b6:	f000 8142 	beq.w	802373e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 80234ba:	6820      	ldr	r0, [r4, #0]
 80234bc:	6861      	ldr	r1, [r4, #4]
 80234be:	aa0a      	add	r2, sp, #40	@ 0x28
 80234c0:	c203      	stmia	r2!, {r0, r1}
 80234c2:	6818      	ldr	r0, [r3, #0]
 80234c4:	6859      	ldr	r1, [r3, #4]
 80234c6:	aa0c      	add	r2, sp, #48	@ 0x30
 80234c8:	c203      	stmia	r2!, {r0, r1}
 80234ca:	a80a      	add	r0, sp, #40	@ 0x28
 80234cc:	f7ee f84c 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80234d0:	4621      	mov	r1, r4
 80234d2:	a80c      	add	r0, sp, #48	@ 0x30
 80234d4:	f7ee f870 	bl	80115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80234d8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80234dc:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 80234e0:	f002 0301 	and.w	r3, r2, #1
 80234e4:	9306      	str	r3, [sp, #24]
 80234e6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80234ea:	f003 0101 	and.w	r1, r3, #1
 80234ee:	9105      	str	r1, [sp, #20]
 80234f0:	9805      	ldr	r0, [sp, #20]
 80234f2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80234f6:	4403      	add	r3, r0
 80234f8:	fb01 2303 	mla	r3, r1, r3, r2
 80234fc:	f04f 0802 	mov.w	r8, #2
 8023500:	fb93 f3f8 	sdiv	r3, r3, r8
 8023504:	441e      	add	r6, r3
 8023506:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 802350a:	441a      	add	r2, r3
 802350c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8023510:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8023514:	4419      	add	r1, r3
 8023516:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 802351a:	9303      	str	r3, [sp, #12]
 802351c:	4b89      	ldr	r3, [pc, #548]	@ (8023744 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802351e:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8023522:	6818      	ldr	r0, [r3, #0]
 8023524:	6803      	ldr	r3, [r0, #0]
 8023526:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023528:	4798      	blx	r3
 802352a:	4a87      	ldr	r2, [pc, #540]	@ (8023748 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802352c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8023530:	8813      	ldrh	r3, [r2, #0]
 8023532:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8023536:	2fff      	cmp	r7, #255	@ 0xff
 8023538:	fb03 9404 	mla	r4, r3, r4, r9
 802353c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8023540:	f105 0504 	add.w	r5, r5, #4
 8023544:	4694      	mov	ip, r2
 8023546:	fb03 f30b 	mul.w	r3, r3, fp
 802354a:	d071      	beq.n	8023630 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 802354c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8023550:	43f9      	mvns	r1, r7
 8023552:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8023556:	b2c9      	uxtb	r1, r1
 8023558:	9104      	str	r1, [sp, #16]
 802355a:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 802355e:	9b07      	ldr	r3, [sp, #28]
 8023560:	42a3      	cmp	r3, r4
 8023562:	f240 80e7 	bls.w	8023734 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8023566:	9b06      	ldr	r3, [sp, #24]
 8023568:	2b00      	cmp	r3, #0
 802356a:	d03d      	beq.n	80235e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 802356c:	7831      	ldrb	r1, [r6, #0]
 802356e:	9b04      	ldr	r3, [sp, #16]
 8023570:	8822      	ldrh	r2, [r4, #0]
 8023572:	9300      	str	r3, [sp, #0]
 8023574:	f001 010f 	and.w	r1, r1, #15
 8023578:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802357c:	463b      	mov	r3, r7
 802357e:	4429      	add	r1, r5
 8023580:	4650      	mov	r0, sl
 8023582:	f7ff ff57 	bl	8023434 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8023586:	9b03      	ldr	r3, [sp, #12]
 8023588:	f824 0b02 	strh.w	r0, [r4], #2
 802358c:	f106 0801 	add.w	r8, r6, #1
 8023590:	f103 3bff 	add.w	fp, r3, #4294967295
 8023594:	f1bb 0f01 	cmp.w	fp, #1
 8023598:	46a1      	mov	r9, r4
 802359a:	f104 0404 	add.w	r4, r4, #4
 802359e:	dd27      	ble.n	80235f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80235a0:	f898 1000 	ldrb.w	r1, [r8]
 80235a4:	9b04      	ldr	r3, [sp, #16]
 80235a6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80235aa:	9300      	str	r3, [sp, #0]
 80235ac:	0909      	lsrs	r1, r1, #4
 80235ae:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80235b2:	463b      	mov	r3, r7
 80235b4:	4429      	add	r1, r5
 80235b6:	4650      	mov	r0, sl
 80235b8:	f7ff ff3c 	bl	8023434 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80235bc:	f824 0c04 	strh.w	r0, [r4, #-4]
 80235c0:	f818 1b01 	ldrb.w	r1, [r8], #1
 80235c4:	9b04      	ldr	r3, [sp, #16]
 80235c6:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80235ca:	9300      	str	r3, [sp, #0]
 80235cc:	f001 010f 	and.w	r1, r1, #15
 80235d0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80235d4:	463b      	mov	r3, r7
 80235d6:	4429      	add	r1, r5
 80235d8:	4650      	mov	r0, sl
 80235da:	f7ff ff2b 	bl	8023434 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80235de:	f1ab 0b02 	sub.w	fp, fp, #2
 80235e2:	f824 0c02 	strh.w	r0, [r4, #-2]
 80235e6:	e7d5      	b.n	8023594 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80235e8:	46b0      	mov	r8, r6
 80235ea:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80235ee:	e7d1      	b.n	8023594 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80235f0:	d10f      	bne.n	8023612 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 80235f2:	f898 1000 	ldrb.w	r1, [r8]
 80235f6:	9b04      	ldr	r3, [sp, #16]
 80235f8:	f8b9 2000 	ldrh.w	r2, [r9]
 80235fc:	9300      	str	r3, [sp, #0]
 80235fe:	0909      	lsrs	r1, r1, #4
 8023600:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023604:	463b      	mov	r3, r7
 8023606:	4429      	add	r1, r5
 8023608:	4650      	mov	r0, sl
 802360a:	f7ff ff13 	bl	8023434 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802360e:	f829 0b02 	strh.w	r0, [r9], #2
 8023612:	9b08      	ldr	r3, [sp, #32]
 8023614:	9a05      	ldr	r2, [sp, #20]
 8023616:	881c      	ldrh	r4, [r3, #0]
 8023618:	9b03      	ldr	r3, [sp, #12]
 802361a:	1ae4      	subs	r4, r4, r3
 802361c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8023620:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8023624:	4413      	add	r3, r2
 8023626:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8023628:	fb93 f3f2 	sdiv	r3, r3, r2
 802362c:	441e      	add	r6, r3
 802362e:	e796      	b.n	802355e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8023630:	4f46      	ldr	r7, [pc, #280]	@ (802374c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8023632:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8023636:	42a3      	cmp	r3, r4
 8023638:	d97c      	bls.n	8023734 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802363a:	9a06      	ldr	r2, [sp, #24]
 802363c:	2a00      	cmp	r2, #0
 802363e:	d054      	beq.n	80236ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8023640:	7830      	ldrb	r0, [r6, #0]
 8023642:	f000 000f 	and.w	r0, r0, #15
 8023646:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802364a:	eb05 0e00 	add.w	lr, r5, r0
 802364e:	5c28      	ldrb	r0, [r5, r0]
 8023650:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8023654:	f89e e001 	ldrb.w	lr, [lr, #1]
 8023658:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802365c:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8023660:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8023664:	ea42 020e 	orr.w	r2, r2, lr
 8023668:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 802366c:	f824 2b02 	strh.w	r2, [r4], #2
 8023670:	9a03      	ldr	r2, [sp, #12]
 8023672:	1c71      	adds	r1, r6, #1
 8023674:	f102 3eff 	add.w	lr, r2, #4294967295
 8023678:	f1be 0f01 	cmp.w	lr, #1
 802367c:	4620      	mov	r0, r4
 802367e:	f104 0404 	add.w	r4, r4, #4
 8023682:	dd36      	ble.n	80236f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8023684:	7808      	ldrb	r0, [r1, #0]
 8023686:	0900      	lsrs	r0, r0, #4
 8023688:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802368c:	eb05 0a00 	add.w	sl, r5, r0
 8023690:	f1ae 0e02 	sub.w	lr, lr, #2
 8023694:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8023698:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802369c:	00d2      	lsls	r2, r2, #3
 802369e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80236a2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80236a6:	ea49 0202 	orr.w	r2, r9, r2
 80236aa:	f815 9000 	ldrb.w	r9, [r5, r0]
 80236ae:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80236b2:	f824 2c04 	strh.w	r2, [r4, #-4]
 80236b6:	f811 0b01 	ldrb.w	r0, [r1], #1
 80236ba:	f000 000f 	and.w	r0, r0, #15
 80236be:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80236c2:	eb05 0a00 	add.w	sl, r5, r0
 80236c6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80236ca:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80236ce:	00d2      	lsls	r2, r2, #3
 80236d0:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80236d4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80236d8:	ea49 0202 	orr.w	r2, r9, r2
 80236dc:	f815 9000 	ldrb.w	r9, [r5, r0]
 80236e0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80236e4:	f824 2c02 	strh.w	r2, [r4, #-2]
 80236e8:	e7c6      	b.n	8023678 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80236ea:	4631      	mov	r1, r6
 80236ec:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80236f0:	e7c2      	b.n	8023678 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80236f2:	d111      	bne.n	8023718 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 80236f4:	7809      	ldrb	r1, [r1, #0]
 80236f6:	0909      	lsrs	r1, r1, #4
 80236f8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80236fc:	186c      	adds	r4, r5, r1
 80236fe:	5c69      	ldrb	r1, [r5, r1]
 8023700:	78a2      	ldrb	r2, [r4, #2]
 8023702:	7864      	ldrb	r4, [r4, #1]
 8023704:	00e4      	lsls	r4, r4, #3
 8023706:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802370a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802370e:	4322      	orrs	r2, r4
 8023710:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8023714:	f820 2b02 	strh.w	r2, [r0], #2
 8023718:	9a03      	ldr	r2, [sp, #12]
 802371a:	f8bc 4000 	ldrh.w	r4, [ip]
 802371e:	9905      	ldr	r1, [sp, #20]
 8023720:	1aa4      	subs	r4, r4, r2
 8023722:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8023726:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802372a:	440a      	add	r2, r1
 802372c:	fb92 f2f8 	sdiv	r2, r2, r8
 8023730:	4416      	add	r6, r2
 8023732:	e780      	b.n	8023636 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8023734:	4b03      	ldr	r3, [pc, #12]	@ (8023744 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8023736:	6818      	ldr	r0, [r3, #0]
 8023738:	6803      	ldr	r3, [r0, #0]
 802373a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802373c:	4798      	blx	r3
 802373e:	b00f      	add	sp, #60	@ 0x3c
 8023740:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023744:	20015238 	.word	0x20015238
 8023748:	20015232 	.word	0x20015232
 802374c:	fffff800 	.word	0xfffff800

08023750 <CRC_Lock>:
 8023750:	b530      	push	{r4, r5, lr}
 8023752:	4a2d      	ldr	r2, [pc, #180]	@ (8023808 <CRC_Lock+0xb8>)
 8023754:	6813      	ldr	r3, [r2, #0]
 8023756:	f023 0301 	bic.w	r3, r3, #1
 802375a:	6013      	str	r3, [r2, #0]
 802375c:	4b2b      	ldr	r3, [pc, #172]	@ (802380c <CRC_Lock+0xbc>)
 802375e:	681c      	ldr	r4, [r3, #0]
 8023760:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8023764:	4014      	ands	r4, r2
 8023766:	f24c 2540 	movw	r5, #49728	@ 0xc240
 802376a:	42ac      	cmp	r4, r5
 802376c:	d005      	beq.n	802377a <CRC_Lock+0x2a>
 802376e:	681c      	ldr	r4, [r3, #0]
 8023770:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8023774:	4014      	ands	r4, r2
 8023776:	42ac      	cmp	r4, r5
 8023778:	d125      	bne.n	80237c6 <CRC_Lock+0x76>
 802377a:	4b25      	ldr	r3, [pc, #148]	@ (8023810 <CRC_Lock+0xc0>)
 802377c:	681b      	ldr	r3, [r3, #0]
 802377e:	2b00      	cmp	r3, #0
 8023780:	d139      	bne.n	80237f6 <CRC_Lock+0xa6>
 8023782:	4b24      	ldr	r3, [pc, #144]	@ (8023814 <CRC_Lock+0xc4>)
 8023784:	681a      	ldr	r2, [r3, #0]
 8023786:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802378a:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 802378e:	d00d      	beq.n	80237ac <CRC_Lock+0x5c>
 8023790:	681a      	ldr	r2, [r3, #0]
 8023792:	f240 4483 	movw	r4, #1155	@ 0x483
 8023796:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802379a:	42a2      	cmp	r2, r4
 802379c:	d006      	beq.n	80237ac <CRC_Lock+0x5c>
 802379e:	681b      	ldr	r3, [r3, #0]
 80237a0:	f240 4285 	movw	r2, #1157	@ 0x485
 80237a4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80237a8:	4293      	cmp	r3, r2
 80237aa:	d124      	bne.n	80237f6 <CRC_Lock+0xa6>
 80237ac:	4b1a      	ldr	r3, [pc, #104]	@ (8023818 <CRC_Lock+0xc8>)
 80237ae:	2201      	movs	r2, #1
 80237b0:	601a      	str	r2, [r3, #0]
 80237b2:	681a      	ldr	r2, [r3, #0]
 80237b4:	2a00      	cmp	r2, #0
 80237b6:	d1fc      	bne.n	80237b2 <CRC_Lock+0x62>
 80237b8:	4b18      	ldr	r3, [pc, #96]	@ (802381c <CRC_Lock+0xcc>)
 80237ba:	6018      	str	r0, [r3, #0]
 80237bc:	6818      	ldr	r0, [r3, #0]
 80237be:	1a43      	subs	r3, r0, r1
 80237c0:	4258      	negs	r0, r3
 80237c2:	4158      	adcs	r0, r3
 80237c4:	e00e      	b.n	80237e4 <CRC_Lock+0x94>
 80237c6:	681b      	ldr	r3, [r3, #0]
 80237c8:	4013      	ands	r3, r2
 80237ca:	f24d 2220 	movw	r2, #53792	@ 0xd220
 80237ce:	4293      	cmp	r3, r2
 80237d0:	d111      	bne.n	80237f6 <CRC_Lock+0xa6>
 80237d2:	4b13      	ldr	r3, [pc, #76]	@ (8023820 <CRC_Lock+0xd0>)
 80237d4:	681b      	ldr	r3, [r3, #0]
 80237d6:	f240 4286 	movw	r2, #1158	@ 0x486
 80237da:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80237de:	4293      	cmp	r3, r2
 80237e0:	d001      	beq.n	80237e6 <CRC_Lock+0x96>
 80237e2:	2000      	movs	r0, #0
 80237e4:	bd30      	pop	{r4, r5, pc}
 80237e6:	4b0f      	ldr	r3, [pc, #60]	@ (8023824 <CRC_Lock+0xd4>)
 80237e8:	2201      	movs	r2, #1
 80237ea:	601a      	str	r2, [r3, #0]
 80237ec:	681a      	ldr	r2, [r3, #0]
 80237ee:	2a00      	cmp	r2, #0
 80237f0:	d1fc      	bne.n	80237ec <CRC_Lock+0x9c>
 80237f2:	4b0d      	ldr	r3, [pc, #52]	@ (8023828 <CRC_Lock+0xd8>)
 80237f4:	e7e1      	b.n	80237ba <CRC_Lock+0x6a>
 80237f6:	4b0d      	ldr	r3, [pc, #52]	@ (802382c <CRC_Lock+0xdc>)
 80237f8:	2201      	movs	r2, #1
 80237fa:	601a      	str	r2, [r3, #0]
 80237fc:	681a      	ldr	r2, [r3, #0]
 80237fe:	2a00      	cmp	r2, #0
 8023800:	d1fc      	bne.n	80237fc <CRC_Lock+0xac>
 8023802:	4b0b      	ldr	r3, [pc, #44]	@ (8023830 <CRC_Lock+0xe0>)
 8023804:	e7d9      	b.n	80237ba <CRC_Lock+0x6a>
 8023806:	bf00      	nop
 8023808:	e0002000 	.word	0xe0002000
 802380c:	e000ed00 	.word	0xe000ed00
 8023810:	e0042000 	.word	0xe0042000
 8023814:	5c001000 	.word	0x5c001000
 8023818:	58024c08 	.word	0x58024c08
 802381c:	58024c00 	.word	0x58024c00
 8023820:	46008ff0 	.word	0x46008ff0
 8023824:	46024c08 	.word	0x46024c08
 8023828:	46024c00 	.word	0x46024c00
 802382c:	40023008 	.word	0x40023008
 8023830:	40023000 	.word	0x40023000

08023834 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8023834:	6101      	str	r1, [r0, #16]
 8023836:	4770      	bx	lr

08023838 <_ZN8touchgfx8Gestures4tickEv>:
 8023838:	7b83      	ldrb	r3, [r0, #14]
 802383a:	b14b      	cbz	r3, 8023850 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802383c:	8903      	ldrh	r3, [r0, #8]
 802383e:	3301      	adds	r3, #1
 8023840:	b29b      	uxth	r3, r3
 8023842:	2b07      	cmp	r3, #7
 8023844:	8103      	strh	r3, [r0, #8]
 8023846:	bf81      	itttt	hi
 8023848:	2300      	movhi	r3, #0
 802384a:	8143      	strhhi	r3, [r0, #10]
 802384c:	8183      	strhhi	r3, [r0, #12]
 802384e:	7383      	strbhi	r3, [r0, #14]
 8023850:	4770      	bx	lr
	...

08023854 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8023854:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8023858:	4698      	mov	r8, r3
 802385a:	8883      	ldrh	r3, [r0, #4]
 802385c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8023860:	eba8 0303 	sub.w	r3, r8, r3
 8023864:	b21b      	sxth	r3, r3
 8023866:	4604      	mov	r4, r0
 8023868:	2b00      	cmp	r3, #0
 802386a:	4617      	mov	r7, r2
 802386c:	4a18      	ldr	r2, [pc, #96]	@ (80238d0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802386e:	9200      	str	r2, [sp, #0]
 8023870:	bfb8      	it	lt
 8023872:	425b      	neglt	r3, r3
 8023874:	8aa2      	ldrh	r2, [r4, #20]
 8023876:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 802387a:	f8ad 800a 	strh.w	r8, [sp, #10]
 802387e:	b21b      	sxth	r3, r3
 8023880:	460e      	mov	r6, r1
 8023882:	4293      	cmp	r3, r2
 8023884:	88c1      	ldrh	r1, [r0, #6]
 8023886:	f8ad 1008 	strh.w	r1, [sp, #8]
 802388a:	f04f 0000 	mov.w	r0, #0
 802388e:	f88d 0004 	strb.w	r0, [sp, #4]
 8023892:	f8ad 500c 	strh.w	r5, [sp, #12]
 8023896:	dc07      	bgt.n	80238a8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8023898:	1a69      	subs	r1, r5, r1
 802389a:	b209      	sxth	r1, r1
 802389c:	2900      	cmp	r1, #0
 802389e:	bfb8      	it	lt
 80238a0:	4249      	neglt	r1, r1
 80238a2:	b209      	sxth	r1, r1
 80238a4:	428a      	cmp	r2, r1
 80238a6:	da10      	bge.n	80238ca <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 80238a8:	6920      	ldr	r0, [r4, #16]
 80238aa:	6803      	ldr	r3, [r0, #0]
 80238ac:	4669      	mov	r1, sp
 80238ae:	685b      	ldr	r3, [r3, #4]
 80238b0:	4798      	blx	r3
 80238b2:	eba8 0606 	sub.w	r6, r8, r6
 80238b6:	2300      	movs	r3, #0
 80238b8:	1bef      	subs	r7, r5, r7
 80238ba:	2001      	movs	r0, #1
 80238bc:	8123      	strh	r3, [r4, #8]
 80238be:	8166      	strh	r6, [r4, #10]
 80238c0:	81a7      	strh	r7, [r4, #12]
 80238c2:	f8a4 8004 	strh.w	r8, [r4, #4]
 80238c6:	80e5      	strh	r5, [r4, #6]
 80238c8:	73a0      	strb	r0, [r4, #14]
 80238ca:	b004      	add	sp, #16
 80238cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80238d0:	080285e8 	.word	0x080285e8

080238d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80238d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80238d6:	461e      	mov	r6, r3
 80238d8:	1e4b      	subs	r3, r1, #1
 80238da:	2b01      	cmp	r3, #1
 80238dc:	b085      	sub	sp, #20
 80238de:	4604      	mov	r4, r0
 80238e0:	460d      	mov	r5, r1
 80238e2:	4617      	mov	r7, r2
 80238e4:	d84b      	bhi.n	802397e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80238e6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80238ea:	1cd3      	adds	r3, r2, #3
 80238ec:	b29b      	uxth	r3, r3
 80238ee:	2b06      	cmp	r3, #6
 80238f0:	d916      	bls.n	8023920 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 80238f2:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8023994 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80238f6:	f8cd c004 	str.w	ip, [sp, #4]
 80238fa:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80238fe:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8023902:	6900      	ldr	r0, [r0, #16]
 8023904:	f8ad 100c 	strh.w	r1, [sp, #12]
 8023908:	f04f 0c00 	mov.w	ip, #0
 802390c:	f88d c008 	strb.w	ip, [sp, #8]
 8023910:	f8ad 200a 	strh.w	r2, [sp, #10]
 8023914:	f8ad 300e 	strh.w	r3, [sp, #14]
 8023918:	6803      	ldr	r3, [r0, #0]
 802391a:	a901      	add	r1, sp, #4
 802391c:	689b      	ldr	r3, [r3, #8]
 802391e:	4798      	blx	r3
 8023920:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8023924:	1cd3      	adds	r3, r2, #3
 8023926:	b29b      	uxth	r3, r3
 8023928:	2b06      	cmp	r3, #6
 802392a:	d916      	bls.n	802395a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802392c:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8023994 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8023930:	f8cd c004 	str.w	ip, [sp, #4]
 8023934:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8023938:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802393c:	6920      	ldr	r0, [r4, #16]
 802393e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8023942:	f04f 0c01 	mov.w	ip, #1
 8023946:	f88d c008 	strb.w	ip, [sp, #8]
 802394a:	f8ad 200a 	strh.w	r2, [sp, #10]
 802394e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8023952:	6803      	ldr	r3, [r0, #0]
 8023954:	a901      	add	r1, sp, #4
 8023956:	689b      	ldr	r3, [r3, #8]
 8023958:	4798      	blx	r3
 802395a:	4b0d      	ldr	r3, [pc, #52]	@ (8023990 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802395c:	9301      	str	r3, [sp, #4]
 802395e:	6920      	ldr	r0, [r4, #16]
 8023960:	f88d 5008 	strb.w	r5, [sp, #8]
 8023964:	2300      	movs	r3, #0
 8023966:	f8ad 700a 	strh.w	r7, [sp, #10]
 802396a:	f8ad 600c 	strh.w	r6, [sp, #12]
 802396e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8023972:	6803      	ldr	r3, [r0, #0]
 8023974:	a901      	add	r1, sp, #4
 8023976:	681b      	ldr	r3, [r3, #0]
 8023978:	4798      	blx	r3
 802397a:	b005      	add	sp, #20
 802397c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802397e:	2900      	cmp	r1, #0
 8023980:	d1eb      	bne.n	802395a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8023982:	80a2      	strh	r2, [r4, #4]
 8023984:	80c6      	strh	r6, [r0, #6]
 8023986:	60a1      	str	r1, [r4, #8]
 8023988:	81a1      	strh	r1, [r4, #12]
 802398a:	73a1      	strb	r1, [r4, #14]
 802398c:	e7e5      	b.n	802395a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802398e:	bf00      	nop
 8023990:	080285d4 	.word	0x080285d4
 8023994:	080285fc 	.word	0x080285fc

08023998 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 8023998:	10c9      	asrs	r1, r1, #3
 802399a:	2900      	cmp	r1, #0
 802399c:	bfb8      	it	lt
 802399e:	4249      	neglt	r1, r1
 80239a0:	2801      	cmp	r0, #1
 80239a2:	d108      	bne.n	80239b6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 80239a4:	f3c1 0008 	ubfx	r0, r1, #0, #9
 80239a8:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 80239ac:	4601      	mov	r1, r0
 80239ae:	dd02      	ble.n	80239b6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 80239b0:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 80239b4:	4770      	bx	lr
 80239b6:	29ff      	cmp	r1, #255	@ 0xff
 80239b8:	bfa8      	it	ge
 80239ba:	21ff      	movge	r1, #255	@ 0xff
 80239bc:	4608      	mov	r0, r1
 80239be:	4770      	bx	lr

080239c0 <_ZN8touchgfx10Rasterizer6lineToEii>:
 80239c0:	b410      	push	{r4}
 80239c2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80239c6:	429c      	cmp	r4, r3
 80239c8:	d803      	bhi.n	80239d2 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 80239ca:	f85d 4b04 	ldr.w	r4, [sp], #4
 80239ce:	f7ec b8d1 	b.w	800fb74 <_ZN8touchgfx7Outline6lineToEii>
 80239d2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80239d6:	4770      	bx	lr

080239d8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 80239d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80239dc:	b08b      	sub	sp, #44	@ 0x2c
 80239de:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80239e2:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 80239e6:	9308      	str	r3, [sp, #32]
 80239e8:	4606      	mov	r6, r0
 80239ea:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 80239ee:	9309      	str	r3, [sp, #36]	@ 0x24
 80239f0:	468a      	mov	sl, r1
 80239f2:	f7ec fa2c 	bl	800fe4e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 80239f6:	68b5      	ldr	r5, [r6, #8]
 80239f8:	4604      	mov	r4, r0
 80239fa:	2d00      	cmp	r5, #0
 80239fc:	d044      	beq.n	8023a88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80239fe:	6873      	ldr	r3, [r6, #4]
 8023a00:	42ab      	cmp	r3, r5
 8023a02:	d33d      	bcc.n	8023a80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8023a04:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8023a08:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 8023a0c:	eb02 0b03 	add.w	fp, r2, r3
 8023a10:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8023a14:	fb02 1203 	mla	r2, r2, r3, r1
 8023a18:	9205      	str	r2, [sp, #20]
 8023a1a:	1e6a      	subs	r2, r5, #1
 8023a1c:	9204      	str	r2, [sp, #16]
 8023a1e:	f04f 0800 	mov.w	r8, #0
 8023a22:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8023a26:	f9b4 7000 	ldrsh.w	r7, [r4]
 8023a2a:	454b      	cmp	r3, r9
 8023a2c:	463a      	mov	r2, r7
 8023a2e:	d008      	beq.n	8023a42 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8023a30:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 8023a34:	eb03 0b09 	add.w	fp, r3, r9
 8023a38:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8023a3c:	fb03 1309 	mla	r3, r3, r9, r1
 8023a40:	9305      	str	r3, [sp, #20]
 8023a42:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8023a46:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8023a4a:	4498      	add	r8, r3
 8023a4c:	9b04      	ldr	r3, [sp, #16]
 8023a4e:	3b01      	subs	r3, #1
 8023a50:	9304      	str	r3, [sp, #16]
 8023a52:	9b04      	ldr	r3, [sp, #16]
 8023a54:	3301      	adds	r3, #1
 8023a56:	d015      	beq.n	8023a84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8023a58:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8023a5c:	42bb      	cmp	r3, r7
 8023a5e:	d117      	bne.n	8023a90 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8023a60:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8023a64:	9b04      	ldr	r3, [sp, #16]
 8023a66:	4548      	cmp	r0, r9
 8023a68:	f103 33ff 	add.w	r3, r3, #4294967295
 8023a6c:	d17f      	bne.n	8023b6e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8023a6e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8023a72:	4401      	add	r1, r0
 8023a74:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8023a78:	4480      	add	r8, r0
 8023a7a:	e7e9      	b.n	8023a50 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8023a7c:	461f      	mov	r7, r3
 8023a7e:	e044      	b.n	8023b0a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8023a80:	2000      	movs	r0, #0
 8023a82:	e002      	b.n	8023a8a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8023a84:	2900      	cmp	r1, #0
 8023a86:	d16f      	bne.n	8023b68 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8023a88:	2001      	movs	r0, #1
 8023a8a:	b00b      	add	sp, #44	@ 0x2c
 8023a8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023a90:	2900      	cmp	r1, #0
 8023a92:	d030      	beq.n	8023af6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8023a94:	2f00      	cmp	r7, #0
 8023a96:	db29      	blt.n	8023aec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8023a98:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 8023a9c:	42bb      	cmp	r3, r7
 8023a9e:	dd25      	ble.n	8023aec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8023aa0:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8023aa4:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8023aa8:	f7ff ff76 	bl	8023998 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8023aac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023aae:	fb10 f003 	smulbb	r0, r0, r3
 8023ab2:	b280      	uxth	r0, r0
 8023ab4:	1c41      	adds	r1, r0, #1
 8023ab6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8023aba:	1209      	asrs	r1, r1, #8
 8023abc:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8023ac0:	d014      	beq.n	8023aec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8023ac2:	9808      	ldr	r0, [sp, #32]
 8023ac4:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8023ac6:	b2c9      	uxtb	r1, r1
 8023ac8:	b2ba      	uxth	r2, r7
 8023aca:	9102      	str	r1, [sp, #8]
 8023acc:	2101      	movs	r1, #1
 8023ace:	4413      	add	r3, r2
 8023ad0:	9101      	str	r1, [sp, #4]
 8023ad2:	4402      	add	r2, r0
 8023ad4:	fa0f f18b 	sxth.w	r1, fp
 8023ad8:	f8da 0000 	ldr.w	r0, [sl]
 8023adc:	9100      	str	r1, [sp, #0]
 8023ade:	6941      	ldr	r1, [r0, #20]
 8023ae0:	b21b      	sxth	r3, r3
 8023ae2:	460d      	mov	r5, r1
 8023ae4:	b212      	sxth	r2, r2
 8023ae6:	9905      	ldr	r1, [sp, #20]
 8023ae8:	4650      	mov	r0, sl
 8023aea:	47a8      	blx	r5
 8023aec:	9b04      	ldr	r3, [sp, #16]
 8023aee:	3301      	adds	r3, #1
 8023af0:	f107 0201 	add.w	r2, r7, #1
 8023af4:	d0c8      	beq.n	8023a88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8023af6:	f9b4 7000 	ldrsh.w	r7, [r4]
 8023afa:	1abb      	subs	r3, r7, r2
 8023afc:	2b00      	cmp	r3, #0
 8023afe:	dd31      	ble.n	8023b64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8023b00:	2a00      	cmp	r2, #0
 8023b02:	dabb      	bge.n	8023a7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8023b04:	2f00      	cmp	r7, #0
 8023b06:	dd2d      	ble.n	8023b64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8023b08:	2200      	movs	r2, #0
 8023b0a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 8023b0e:	19d1      	adds	r1, r2, r7
 8023b10:	4299      	cmp	r1, r3
 8023b12:	db02      	blt.n	8023b1a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8023b14:	1a9f      	subs	r7, r3, r2
 8023b16:	2f00      	cmp	r7, #0
 8023b18:	dd24      	ble.n	8023b64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8023b1a:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8023b1e:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8023b22:	f7ff ff39 	bl	8023998 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8023b26:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023b28:	fb10 f003 	smulbb	r0, r0, r3
 8023b2c:	b280      	uxth	r0, r0
 8023b2e:	1c41      	adds	r1, r0, #1
 8023b30:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8023b34:	1209      	asrs	r1, r1, #8
 8023b36:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8023b3a:	d013      	beq.n	8023b64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8023b3c:	9808      	ldr	r0, [sp, #32]
 8023b3e:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8023b40:	b292      	uxth	r2, r2
 8023b42:	b2c9      	uxtb	r1, r1
 8023b44:	4413      	add	r3, r2
 8023b46:	9102      	str	r1, [sp, #8]
 8023b48:	4402      	add	r2, r0
 8023b4a:	b23f      	sxth	r7, r7
 8023b4c:	f8da 0000 	ldr.w	r0, [sl]
 8023b50:	9701      	str	r7, [sp, #4]
 8023b52:	fa0f f18b 	sxth.w	r1, fp
 8023b56:	9100      	str	r1, [sp, #0]
 8023b58:	6947      	ldr	r7, [r0, #20]
 8023b5a:	9905      	ldr	r1, [sp, #20]
 8023b5c:	b21b      	sxth	r3, r3
 8023b5e:	b212      	sxth	r2, r2
 8023b60:	4650      	mov	r0, sl
 8023b62:	47b8      	blx	r7
 8023b64:	464b      	mov	r3, r9
 8023b66:	e75c      	b.n	8023a22 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8023b68:	2f00      	cmp	r7, #0
 8023b6a:	da95      	bge.n	8023a98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8023b6c:	e78c      	b.n	8023a88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8023b6e:	2900      	cmp	r1, #0
 8023b70:	d0f8      	beq.n	8023b64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8023b72:	e78f      	b.n	8023a94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08023b74 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 8023b74:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8023b78:	461e      	mov	r6, r3
 8023b7a:	4b36      	ldr	r3, [pc, #216]	@ (8023c54 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 8023b7c:	e9c0 3100 	strd	r3, r1, [r0]
 8023b80:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8023b84:	8103      	strh	r3, [r0, #8]
 8023b86:	2500      	movs	r5, #0
 8023b88:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8023b8c:	7283      	strb	r3, [r0, #10]
 8023b8e:	f100 0814 	add.w	r8, r0, #20
 8023b92:	4604      	mov	r4, r0
 8023b94:	8185      	strh	r5, [r0, #12]
 8023b96:	81c5      	strh	r5, [r0, #14]
 8023b98:	8205      	strh	r5, [r0, #16]
 8023b9a:	8245      	strh	r5, [r0, #18]
 8023b9c:	4640      	mov	r0, r8
 8023b9e:	4617      	mov	r7, r2
 8023ba0:	f7eb fb20 	bl	800f1e4 <_ZN8touchgfx7OutlineC1Ev>
 8023ba4:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 8023ba8:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 8023bac:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 8023bb0:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 8023bb4:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 8023bb8:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 8023bbc:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 8023bc0:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 8023bc4:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 8023bc8:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 8023bcc:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 8023bd0:	6830      	ldr	r0, [r6, #0]
 8023bd2:	6871      	ldr	r1, [r6, #4]
 8023bd4:	8872      	ldrh	r2, [r6, #2]
 8023bd6:	8835      	ldrh	r5, [r6, #0]
 8023bd8:	466b      	mov	r3, sp
 8023bda:	c303      	stmia	r3!, {r0, r1}
 8023bdc:	887b      	ldrh	r3, [r7, #2]
 8023bde:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 8023be2:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 8023be6:	4413      	add	r3, r2
 8023be8:	883a      	ldrh	r2, [r7, #0]
 8023bea:	81e3      	strh	r3, [r4, #14]
 8023bec:	442a      	add	r2, r5
 8023bee:	81a2      	strh	r2, [r4, #12]
 8023bf0:	8220      	strh	r0, [r4, #16]
 8023bf2:	8261      	strh	r1, [r4, #18]
 8023bf4:	4668      	mov	r0, sp
 8023bf6:	4639      	mov	r1, r7
 8023bf8:	f7ed fcde 	bl	80115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023bfc:	f104 000c 	add.w	r0, r4, #12
 8023c00:	f7ed fcb2 	bl	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023c04:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8023c08:	f8bd 2000 	ldrh.w	r2, [sp]
 8023c0c:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 8023c10:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 8023c14:	4640      	mov	r0, r8
 8023c16:	f7eb fac9 	bl	800f1ac <_ZN8touchgfx7Outline5resetEv>
 8023c1a:	f9bd 3000 	ldrsh.w	r3, [sp]
 8023c1e:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 8023c22:	015b      	lsls	r3, r3, #5
 8023c24:	64e3      	str	r3, [r4, #76]	@ 0x4c
 8023c26:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8023c2a:	015b      	lsls	r3, r3, #5
 8023c2c:	6523      	str	r3, [r4, #80]	@ 0x50
 8023c2e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8023c32:	015b      	lsls	r3, r3, #5
 8023c34:	6563      	str	r3, [r4, #84]	@ 0x54
 8023c36:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8023c3a:	015b      	lsls	r3, r3, #5
 8023c3c:	65a3      	str	r3, [r4, #88]	@ 0x58
 8023c3e:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 8023c42:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 8023c46:	4620      	mov	r0, r4
 8023c48:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 8023c4c:	b002      	add	sp, #8
 8023c4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023c52:	bf00      	nop
 8023c54:	08028938 	.word	0x08028938

08023c58 <_ZN8touchgfx6Canvas5closeEv>:
 8023c58:	b538      	push	{r3, r4, r5, lr}
 8023c5a:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 8023c5e:	4604      	mov	r4, r0
 8023c60:	b193      	cbz	r3, 8023c88 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8023c62:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 8023c66:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 8023c6a:	4213      	tst	r3, r2
 8023c6c:	d10c      	bne.n	8023c88 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8023c6e:	f100 0514 	add.w	r5, r0, #20
 8023c72:	b123      	cbz	r3, 8023c7e <_ZN8touchgfx6Canvas5closeEv+0x26>
 8023c74:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 8023c78:	4628      	mov	r0, r5
 8023c7a:	f7ff fea1 	bl	80239c0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8023c7e:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 8023c82:	4628      	mov	r0, r5
 8023c84:	f7ff fe9c 	bl	80239c0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8023c88:	2300      	movs	r3, #0
 8023c8a:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8023c8e:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 8023c92:	4298      	cmp	r0, r3
 8023c94:	bf34      	ite	cc
 8023c96:	2000      	movcc	r0, #0
 8023c98:	2001      	movcs	r0, #1
 8023c9a:	bd38      	pop	{r3, r4, r5, pc}

08023c9c <_ZN8touchgfx6Canvas6renderEh>:
 8023c9c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8023ca0:	7a85      	ldrb	r5, [r0, #10]
 8023ca2:	4369      	muls	r1, r5
 8023ca4:	1c4d      	adds	r5, r1, #1
 8023ca6:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8023caa:	122d      	asrs	r5, r5, #8
 8023cac:	4604      	mov	r4, r0
 8023cae:	f000 8099 	beq.w	8023de4 <_ZN8touchgfx6Canvas6renderEh+0x148>
 8023cb2:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 8023cb6:	2b00      	cmp	r3, #0
 8023cb8:	f000 8094 	beq.w	8023de4 <_ZN8touchgfx6Canvas6renderEh+0x148>
 8023cbc:	f7ff ffcc 	bl	8023c58 <_ZN8touchgfx6Canvas5closeEv>
 8023cc0:	4607      	mov	r7, r0
 8023cc2:	2800      	cmp	r0, #0
 8023cc4:	d045      	beq.n	8023d52 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8023cc6:	6860      	ldr	r0, [r4, #4]
 8023cc8:	4e47      	ldr	r6, [pc, #284]	@ (8023de8 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 8023cca:	6803      	ldr	r3, [r0, #0]
 8023ccc:	6837      	ldr	r7, [r6, #0]
 8023cce:	689b      	ldr	r3, [r3, #8]
 8023cd0:	4798      	blx	r3
 8023cd2:	4601      	mov	r1, r0
 8023cd4:	4638      	mov	r0, r7
 8023cd6:	f7e9 f99b 	bl	800d010 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8023cda:	4607      	mov	r7, r0
 8023cdc:	f7de fe02 	bl	80028e4 <_ZN8touchgfx3HAL3lcdEv>
 8023ce0:	6803      	ldr	r3, [r0, #0]
 8023ce2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8023ce4:	4798      	blx	r3
 8023ce6:	4680      	mov	r8, r0
 8023ce8:	f7de fdfc 	bl	80028e4 <_ZN8touchgfx3HAL3lcdEv>
 8023cec:	6803      	ldr	r3, [r0, #0]
 8023cee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023cf0:	4798      	blx	r3
 8023cf2:	280b      	cmp	r0, #11
 8023cf4:	d85b      	bhi.n	8023dae <_ZN8touchgfx6Canvas6renderEh+0x112>
 8023cf6:	e8df f000 	tbb	[pc, r0]
 8023cfa:	5c51      	.short	0x5c51
 8023cfc:	305a066c 	.word	0x305a066c
 8023d00:	65656540 	.word	0x65656540
 8023d04:	6565      	.short	0x6565
 8023d06:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8023d0a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8023d0e:	2208      	movs	r2, #8
 8023d10:	fb91 f2f2 	sdiv	r2, r1, r2
 8023d14:	fb08 2303 	mla	r3, r8, r3, r2
 8023d18:	441f      	add	r7, r3
 8023d1a:	424b      	negs	r3, r1
 8023d1c:	f003 0307 	and.w	r3, r3, #7
 8023d20:	f001 0107 	and.w	r1, r1, #7
 8023d24:	bf58      	it	pl
 8023d26:	4259      	negpl	r1, r3
 8023d28:	b2c9      	uxtb	r1, r1
 8023d2a:	b2ed      	uxtb	r5, r5
 8023d2c:	463a      	mov	r2, r7
 8023d2e:	e9cd 1500 	strd	r1, r5, [sp]
 8023d32:	fa0f f388 	sxth.w	r3, r8
 8023d36:	6861      	ldr	r1, [r4, #4]
 8023d38:	f104 0014 	add.w	r0, r4, #20
 8023d3c:	f7ff fe4c 	bl	80239d8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8023d40:	4607      	mov	r7, r0
 8023d42:	6860      	ldr	r0, [r4, #4]
 8023d44:	6803      	ldr	r3, [r0, #0]
 8023d46:	691b      	ldr	r3, [r3, #16]
 8023d48:	4798      	blx	r3
 8023d4a:	6830      	ldr	r0, [r6, #0]
 8023d4c:	6803      	ldr	r3, [r0, #0]
 8023d4e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8023d50:	4798      	blx	r3
 8023d52:	4638      	mov	r0, r7
 8023d54:	b002      	add	sp, #8
 8023d56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023d5a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8023d5e:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8023d62:	2204      	movs	r2, #4
 8023d64:	fb91 f2f2 	sdiv	r2, r1, r2
 8023d68:	fb08 2303 	mla	r3, r8, r3, r2
 8023d6c:	441f      	add	r7, r3
 8023d6e:	424b      	negs	r3, r1
 8023d70:	f003 0303 	and.w	r3, r3, #3
 8023d74:	f001 0103 	and.w	r1, r1, #3
 8023d78:	e7d4      	b.n	8023d24 <_ZN8touchgfx6Canvas6renderEh+0x88>
 8023d7a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8023d7e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8023d82:	2900      	cmp	r1, #0
 8023d84:	f04f 0202 	mov.w	r2, #2
 8023d88:	fb91 f2f2 	sdiv	r2, r1, r2
 8023d8c:	f001 0101 	and.w	r1, r1, #1
 8023d90:	fb08 2303 	mla	r3, r8, r3, r2
 8023d94:	441f      	add	r7, r3
 8023d96:	bfb8      	it	lt
 8023d98:	4249      	neglt	r1, r1
 8023d9a:	e7c5      	b.n	8023d28 <_ZN8touchgfx6Canvas6renderEh+0x8c>
 8023d9c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8023da0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8023da4:	fb08 f303 	mul.w	r3, r8, r3
 8023da8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8023dac:	441f      	add	r7, r3
 8023dae:	2100      	movs	r1, #0
 8023db0:	e7bb      	b.n	8023d2a <_ZN8touchgfx6Canvas6renderEh+0x8e>
 8023db2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8023db6:	fb08 f203 	mul.w	r2, r8, r3
 8023dba:	89a3      	ldrh	r3, [r4, #12]
 8023dbc:	2103      	movs	r1, #3
 8023dbe:	fb13 2301 	smlabb	r3, r3, r1, r2
 8023dc2:	e7f3      	b.n	8023dac <_ZN8touchgfx6Canvas6renderEh+0x110>
 8023dc4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8023dc8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8023dcc:	fb08 2303 	mla	r3, r8, r3, r2
 8023dd0:	e7ec      	b.n	8023dac <_ZN8touchgfx6Canvas6renderEh+0x110>
 8023dd2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8023dd6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8023dda:	fb08 f303 	mul.w	r3, r8, r3
 8023dde:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8023de2:	e7e3      	b.n	8023dac <_ZN8touchgfx6Canvas6renderEh+0x110>
 8023de4:	2701      	movs	r7, #1
 8023de6:	e7b4      	b.n	8023d52 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8023de8:	20015238 	.word	0x20015238

08023dec <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8023dec:	b510      	push	{r4, lr}
 8023dee:	4b06      	ldr	r3, [pc, #24]	@ (8023e08 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 8023df0:	781b      	ldrb	r3, [r3, #0]
 8023df2:	2b01      	cmp	r3, #1
 8023df4:	d107      	bne.n	8023e06 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 8023df6:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 8023dfa:	680b      	ldr	r3, [r1, #0]
 8023dfc:	6814      	ldr	r4, [r2, #0]
 8023dfe:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8023e02:	6013      	str	r3, [r2, #0]
 8023e04:	600c      	str	r4, [r1, #0]
 8023e06:	bd10      	pop	{r4, pc}
 8023e08:	20015230 	.word	0x20015230

08023e0c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8023e0c:	b513      	push	{r0, r1, r4, lr}
 8023e0e:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 8023e12:	4604      	mov	r4, r0
 8023e14:	e9cd 2100 	strd	r2, r1, [sp]
 8023e18:	b9a3      	cbnz	r3, 8023e44 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8023e1a:	466a      	mov	r2, sp
 8023e1c:	a901      	add	r1, sp, #4
 8023e1e:	4620      	mov	r0, r4
 8023e20:	f7ff ffe4 	bl	8023dec <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8023e24:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8023e26:	9901      	ldr	r1, [sp, #4]
 8023e28:	9a00      	ldr	r2, [sp, #0]
 8023e2a:	1ac9      	subs	r1, r1, r3
 8023e2c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8023e2e:	9101      	str	r1, [sp, #4]
 8023e30:	1ad2      	subs	r2, r2, r3
 8023e32:	2a00      	cmp	r2, #0
 8023e34:	9200      	str	r2, [sp, #0]
 8023e36:	da0b      	bge.n	8023e50 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8023e38:	2301      	movs	r3, #1
 8023e3a:	2900      	cmp	r1, #0
 8023e3c:	da0e      	bge.n	8023e5c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8023e3e:	f043 0304 	orr.w	r3, r3, #4
 8023e42:	e013      	b.n	8023e6c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8023e44:	f7ff ff08 	bl	8023c58 <_ZN8touchgfx6Canvas5closeEv>
 8023e48:	2800      	cmp	r0, #0
 8023e4a:	d1e6      	bne.n	8023e1a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8023e4c:	b002      	add	sp, #8
 8023e4e:	bd10      	pop	{r4, pc}
 8023e50:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8023e52:	429a      	cmp	r2, r3
 8023e54:	bfac      	ite	ge
 8023e56:	2302      	movge	r3, #2
 8023e58:	2300      	movlt	r3, #0
 8023e5a:	e7ee      	b.n	8023e3a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8023e5c:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 8023e5e:	4281      	cmp	r1, r0
 8023e60:	bfac      	ite	ge
 8023e62:	2008      	movge	r0, #8
 8023e64:	2000      	movlt	r0, #0
 8023e66:	4318      	orrs	r0, r3
 8023e68:	b2c3      	uxtb	r3, r0
 8023e6a:	b158      	cbz	r0, 8023e84 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8023e6c:	2200      	movs	r2, #0
 8023e6e:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 8023e72:	9901      	ldr	r1, [sp, #4]
 8023e74:	9a00      	ldr	r2, [sp, #0]
 8023e76:	66e1      	str	r1, [r4, #108]	@ 0x6c
 8023e78:	6722      	str	r2, [r4, #112]	@ 0x70
 8023e7a:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 8023e7e:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 8023e82:	e7e3      	b.n	8023e4c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8023e84:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8023e88:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 8023e8c:	4298      	cmp	r0, r3
 8023e8e:	d803      	bhi.n	8023e98 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8023e90:	f104 0014 	add.w	r0, r4, #20
 8023e94:	f7eb fe88 	bl	800fba8 <_ZN8touchgfx7Outline6moveToEii>
 8023e98:	2301      	movs	r3, #1
 8023e9a:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8023e9e:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8023ea2:	2300      	movs	r3, #0
 8023ea4:	e7e5      	b.n	8023e72 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08023ea6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8023ea6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8023ea8:	ab02      	add	r3, sp, #8
 8023eaa:	4604      	mov	r4, r0
 8023eac:	f843 2d08 	str.w	r2, [r3, #-8]!
 8023eb0:	9101      	str	r1, [sp, #4]
 8023eb2:	461a      	mov	r2, r3
 8023eb4:	a901      	add	r1, sp, #4
 8023eb6:	f7ff ff99 	bl	8023dec <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8023eba:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8023ebc:	9901      	ldr	r1, [sp, #4]
 8023ebe:	9a00      	ldr	r2, [sp, #0]
 8023ec0:	1ac9      	subs	r1, r1, r3
 8023ec2:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8023ec4:	9101      	str	r1, [sp, #4]
 8023ec6:	1ad2      	subs	r2, r2, r3
 8023ec8:	2a00      	cmp	r2, #0
 8023eca:	9200      	str	r2, [sp, #0]
 8023ecc:	db1c      	blt.n	8023f08 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8023ece:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8023ed0:	429a      	cmp	r2, r3
 8023ed2:	bfac      	ite	ge
 8023ed4:	2002      	movge	r0, #2
 8023ed6:	2000      	movlt	r0, #0
 8023ed8:	2900      	cmp	r1, #0
 8023eda:	db17      	blt.n	8023f0c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8023edc:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8023ede:	4299      	cmp	r1, r3
 8023ee0:	bfac      	ite	ge
 8023ee2:	2308      	movge	r3, #8
 8023ee4:	2300      	movlt	r3, #0
 8023ee6:	4303      	orrs	r3, r0
 8023ee8:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 8023eec:	b2dd      	uxtb	r5, r3
 8023eee:	b978      	cbnz	r0, 8023f10 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8023ef0:	f104 0014 	add.w	r0, r4, #20
 8023ef4:	f7ff fd64 	bl	80239c0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8023ef8:	9b01      	ldr	r3, [sp, #4]
 8023efa:	6623      	str	r3, [r4, #96]	@ 0x60
 8023efc:	9b00      	ldr	r3, [sp, #0]
 8023efe:	6663      	str	r3, [r4, #100]	@ 0x64
 8023f00:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 8023f04:	b002      	add	sp, #8
 8023f06:	bd70      	pop	{r4, r5, r6, pc}
 8023f08:	2001      	movs	r0, #1
 8023f0a:	e7e5      	b.n	8023ed8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8023f0c:	2304      	movs	r3, #4
 8023f0e:	e7ea      	b.n	8023ee6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8023f10:	b113      	cbz	r3, 8023f18 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8023f12:	ea10 0305 	ands.w	r3, r0, r5
 8023f16:	d11c      	bne.n	8023f52 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8023f18:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 8023f1c:	f104 0614 	add.w	r6, r4, #20
 8023f20:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 8023f24:	b98b      	cbnz	r3, 8023f4a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8023f26:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8023f2a:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 8023f2e:	4298      	cmp	r0, r3
 8023f30:	d802      	bhi.n	8023f38 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8023f32:	4630      	mov	r0, r6
 8023f34:	f7eb fe38 	bl	800fba8 <_ZN8touchgfx7Outline6moveToEii>
 8023f38:	2301      	movs	r3, #1
 8023f3a:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8023f3e:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8023f42:	e9dd 2100 	ldrd	r2, r1, [sp]
 8023f46:	4630      	mov	r0, r6
 8023f48:	e7d4      	b.n	8023ef4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8023f4a:	4630      	mov	r0, r6
 8023f4c:	f7ff fd38 	bl	80239c0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8023f50:	e7f7      	b.n	8023f42 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8023f52:	461d      	mov	r5, r3
 8023f54:	e7d0      	b.n	8023ef8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08023f58 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
 8023f58:	b538      	push	{r3, r4, r5, lr}
 8023f5a:	ed2d 8b10 	vpush	{d8-d15}
 8023f5e:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
 8023f62:	ed9f ba5a 	vldr	s22, [pc, #360]	@ 80240cc <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
 8023f66:	4605      	mov	r5, r0
 8023f68:	eeb0 ca40 	vmov.f32	s24, s0
 8023f6c:	eef0 ca60 	vmov.f32	s25, s1
 8023f70:	eeb0 da41 	vmov.f32	s26, s2
 8023f74:	eef0 da61 	vmov.f32	s27, s3
 8023f78:	eeb0 ea42 	vmov.f32	s28, s4
 8023f7c:	eef0 ea62 	vmov.f32	s29, s5
 8023f80:	460c      	mov	r4, r1
 8023f82:	eef0 aa6b 	vmov.f32	s21, s23
 8023f86:	2c08      	cmp	r4, #8
 8023f88:	d86e      	bhi.n	8024068 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
 8023f8a:	ee7e 6a4c 	vsub.f32	s13, s28, s24
 8023f8e:	ee7d 7aee 	vsub.f32	s15, s27, s29
 8023f92:	ee3d 6a4e 	vsub.f32	s12, s26, s28
 8023f96:	ee3e 7aec 	vsub.f32	s14, s29, s25
 8023f9a:	ee66 7ae7 	vnmul.f32	s15, s13, s15
 8023f9e:	ee3c fa0d 	vadd.f32	s30, s24, s26
 8023fa2:	eee6 7a07 	vfma.f32	s15, s12, s14
 8023fa6:	ee7c faad 	vadd.f32	s31, s25, s27
 8023faa:	ee7d 9a0e 	vadd.f32	s19, s26, s28
 8023fae:	ee3d aaae 	vadd.f32	s20, s27, s29
 8023fb2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8023fb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023fba:	ee2f fa2b 	vmul.f32	s30, s30, s23
 8023fbe:	ee6f faab 	vmul.f32	s31, s31, s23
 8023fc2:	ee69 9aab 	vmul.f32	s19, s19, s23
 8023fc6:	ee2a aa2b 	vmul.f32	s20, s20, s23
 8023fca:	bf48      	it	mi
 8023fcc:	eef1 7a67 	vnegmi.f32	s15, s15
 8023fd0:	ee7f 8a29 	vadd.f32	s17, s30, s19
 8023fd4:	ee3f 9a8a 	vadd.f32	s18, s31, s20
 8023fd8:	eef4 7acb 	vcmpe.f32	s15, s22
 8023fdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023fe0:	ee68 8aab 	vmul.f32	s17, s17, s23
 8023fe4:	ee29 9a2b 	vmul.f32	s18, s18, s23
 8023fe8:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
 8023fec:	dd3f      	ble.n	802406e <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
 8023fee:	ee27 7a07 	vmul.f32	s14, s14, s14
 8023ff2:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8023ff6:	eea6 7aa6 	vfma.f32	s14, s13, s13
 8023ffa:	ee27 7a06 	vmul.f32	s14, s14, s12
 8023ffe:	eef4 7ac7 	vcmpe.f32	s15, s14
 8024002:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024006:	d847      	bhi.n	8024098 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 8024008:	ee7e 0a4d 	vsub.f32	s1, s28, s26
 802400c:	ee3e 0aed 	vsub.f32	s0, s29, s27
 8024010:	f000 fa3b 	bl	802448a <atan2f>
 8024014:	ee7d 0a4c 	vsub.f32	s1, s26, s24
 8024018:	eeb0 8a40 	vmov.f32	s16, s0
 802401c:	ee3d 0aec 	vsub.f32	s0, s27, s25
 8024020:	f000 fa33 	bl	802448a <atan2f>
 8024024:	ee38 0a40 	vsub.f32	s0, s16, s0
 8024028:	eddf 7a29 	vldr	s15, [pc, #164]	@ 80240d0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
 802402c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8024030:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024034:	bf48      	it	mi
 8024036:	eeb1 0a40 	vnegmi.f32	s0, s0
 802403a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802403e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024042:	bfa4      	itt	ge
 8024044:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 80240d4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
 8024048:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 802404c:	eddf 7a22 	vldr	s15, [pc, #136]	@ 80240d8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
 8024050:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8024054:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024058:	d51e      	bpl.n	8024098 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 802405a:	eef0 0a49 	vmov.f32	s1, s18
 802405e:	eeb0 0a68 	vmov.f32	s0, s17
 8024062:	4628      	mov	r0, r5
 8024064:	f7ea f9dc 	bl	800e420 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8024068:	ecbd 8b10 	vpop	{d8-d15}
 802406c:	bd38      	pop	{r3, r4, r5, pc}
 802406e:	ee7c 7a0e 	vadd.f32	s15, s24, s28
 8024072:	eeb0 7a68 	vmov.f32	s14, s17
 8024076:	eea7 7aea 	vfms.f32	s14, s15, s21
 802407a:	ee7c 7aae 	vadd.f32	s15, s25, s29
 802407e:	eef0 6a49 	vmov.f32	s13, s18
 8024082:	eee7 6aea 	vfms.f32	s13, s15, s21
 8024086:	ee66 7aa6 	vmul.f32	s15, s13, s13
 802408a:	eee7 7a07 	vfma.f32	s15, s14, s14
 802408e:	eef4 7ac6 	vcmpe.f32	s15, s12
 8024092:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024096:	d9e0      	bls.n	802405a <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
 8024098:	3401      	adds	r4, #1
 802409a:	eef0 0a6c 	vmov.f32	s1, s25
 802409e:	eeb0 0a4c 	vmov.f32	s0, s24
 80240a2:	4621      	mov	r1, r4
 80240a4:	eef0 2a49 	vmov.f32	s5, s18
 80240a8:	eeb0 2a68 	vmov.f32	s4, s17
 80240ac:	eef0 1a6f 	vmov.f32	s3, s31
 80240b0:	eeb0 1a4f 	vmov.f32	s2, s30
 80240b4:	4628      	mov	r0, r5
 80240b6:	f7ff ff4f 	bl	8023f58 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 80240ba:	eef0 da4a 	vmov.f32	s27, s20
 80240be:	eeb0 da69 	vmov.f32	s26, s19
 80240c2:	eef0 ca49 	vmov.f32	s25, s18
 80240c6:	eeb0 ca68 	vmov.f32	s24, s17
 80240ca:	e75c      	b.n	8023f86 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
 80240cc:	2edbe6ff 	.word	0x2edbe6ff
 80240d0:	40490fdb 	.word	0x40490fdb
 80240d4:	40c90fdb 	.word	0x40c90fdb
 80240d8:	3dcccccd 	.word	0x3dcccccd

080240dc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
 80240dc:	b530      	push	{r4, r5, lr}
 80240de:	ed2d 8b10 	vpush	{d8-d15}
 80240e2:	4604      	mov	r4, r0
 80240e4:	b085      	sub	sp, #20
 80240e6:	eef0 8a40 	vmov.f32	s17, s0
 80240ea:	eef0 9a60 	vmov.f32	s19, s1
 80240ee:	eef0 fa41 	vmov.f32	s31, s2
 80240f2:	eeb0 fa61 	vmov.f32	s30, s3
 80240f6:	eef0 ba42 	vmov.f32	s23, s4
 80240fa:	eeb0 ca62 	vmov.f32	s24, s5
 80240fe:	eef0 aa43 	vmov.f32	s21, s6
 8024102:	eeb0 ba63 	vmov.f32	s22, s7
 8024106:	460d      	mov	r5, r1
 8024108:	2d08      	cmp	r5, #8
 802410a:	f200 8115 	bhi.w	8024338 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x25c>
 802410e:	ee3b 6aaa 	vadd.f32	s12, s23, s21
 8024112:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8024116:	ee7f 6aab 	vadd.f32	s13, s31, s23
 802411a:	ee26 6a27 	vmul.f32	s12, s12, s15
 802411e:	ee38 daaf 	vadd.f32	s26, s17, s31
 8024122:	ed8d 6a01 	vstr	s12, [sp, #4]
 8024126:	eea6 6aa7 	vfma.f32	s12, s13, s15
 802412a:	ee2d da27 	vmul.f32	s26, s26, s15
 802412e:	ee7c ca0b 	vadd.f32	s25, s24, s22
 8024132:	eeb0 ea4d 	vmov.f32	s28, s26
 8024136:	eea6 eaa7 	vfma.f32	s28, s13, s15
 802413a:	ee6c caa7 	vmul.f32	s25, s25, s15
 802413e:	ee66 6a27 	vmul.f32	s13, s12, s15
 8024142:	ee3f 7a0c 	vadd.f32	s14, s30, s24
 8024146:	edcd 6a03 	vstr	s13, [sp, #12]
 802414a:	ee79 da8f 	vadd.f32	s27, s19, s30
 802414e:	eef0 6a6c 	vmov.f32	s13, s25
 8024152:	eee7 6a27 	vfma.f32	s13, s14, s15
 8024156:	ee6d daa7 	vmul.f32	s27, s27, s15
 802415a:	ee2e ea27 	vmul.f32	s28, s28, s15
 802415e:	eef0 ea6d 	vmov.f32	s29, s27
 8024162:	eee7 ea27 	vfma.f32	s29, s14, s15
 8024166:	ee26 7aa7 	vmul.f32	s14, s13, s15
 802416a:	ee6e eaa7 	vmul.f32	s29, s29, s15
 802416e:	ed8d 7a02 	vstr	s14, [sp, #8]
 8024172:	ed9d 7a03 	vldr	s14, [sp, #12]
 8024176:	ee3e 9a07 	vadd.f32	s18, s28, s14
 802417a:	ed9d 7a02 	vldr	s14, [sp, #8]
 802417e:	ee3e aa87 	vadd.f32	s20, s29, s14
 8024182:	ee29 9a27 	vmul.f32	s18, s18, s15
 8024186:	ee2a aa27 	vmul.f32	s20, s20, s15
 802418a:	eef0 6a67 	vmov.f32	s13, s15
 802418e:	2d00      	cmp	r5, #0
 8024190:	f000 810d 	beq.w	80243ae <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8024194:	ee7a 5ae8 	vsub.f32	s11, s21, s17
 8024198:	ee3f 7a4b 	vsub.f32	s14, s30, s22
 802419c:	ee7b 7a69 	vsub.f32	s15, s22, s19
 80241a0:	ee3f 6aea 	vsub.f32	s12, s31, s21
 80241a4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80241a8:	ee3b 5aea 	vsub.f32	s10, s23, s21
 80241ac:	eea6 7a27 	vfma.f32	s14, s12, s15
 80241b0:	ee3c 6a4b 	vsub.f32	s12, s24, s22
 80241b4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80241b8:	ee25 6ac6 	vnmul.f32	s12, s11, s12
 80241bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80241c0:	eea5 6a27 	vfma.f32	s12, s10, s15
 80241c4:	eddf 4a8b 	vldr	s9, [pc, #556]	@ 80243f4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 80241c8:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80241cc:	bf48      	it	mi
 80241ce:	eeb1 7a47 	vnegmi.f32	s14, s14
 80241d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80241d6:	eeb4 7ae4 	vcmpe.f32	s14, s9
 80241da:	bf48      	it	mi
 80241dc:	eeb1 6a46 	vnegmi.f32	s12, s12
 80241e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80241e4:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
 80241e8:	f340 80aa 	ble.w	8024340 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x264>
 80241ec:	eeb4 6ae4 	vcmpe.f32	s12, s9
 80241f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80241f4:	dd5c      	ble.n	80242b0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d4>
 80241f6:	ee65 5aa5 	vmul.f32	s11, s11, s11
 80241fa:	ee37 7a06 	vadd.f32	s14, s14, s12
 80241fe:	eee7 5aa7 	vfma.f32	s11, s15, s15
 8024202:	ee27 7a07 	vmul.f32	s14, s14, s14
 8024206:	ee65 7a85 	vmul.f32	s15, s11, s10
 802420a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802420e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024212:	f200 80cc 	bhi.w	80243ae <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8024216:	ee7b 0aef 	vsub.f32	s1, s23, s31
 802421a:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 802421e:	f000 f934 	bl	802448a <atan2f>
 8024222:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 8024226:	eeb0 8a40 	vmov.f32	s16, s0
 802422a:	ee3f 0a69 	vsub.f32	s0, s30, s19
 802422e:	f000 f92c 	bl	802448a <atan2f>
 8024232:	ee38 fa40 	vsub.f32	s30, s16, s0
 8024236:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 802423a:	eeb5 fac0 	vcmpe.f32	s30, #0.0
 802423e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024242:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 8024246:	bf48      	it	mi
 8024248:	eeb1 fa4f 	vnegmi.f32	s30, s30
 802424c:	f000 f91d 	bl	802448a <atan2f>
 8024250:	ee30 0a48 	vsub.f32	s0, s0, s16
 8024254:	eddf 7a68 	vldr	s15, [pc, #416]	@ 80243f8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8024258:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802425c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024260:	eeb4 fae7 	vcmpe.f32	s30, s15
 8024264:	bf48      	it	mi
 8024266:	eeb1 0a40 	vnegmi.f32	s0, s0
 802426a:	eddf 7a63 	vldr	s15, [pc, #396]	@ 80243f8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 802426e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024272:	bfa8      	it	ge
 8024274:	ed9f 7a61 	vldrge	s14, [pc, #388]	@ 80243fc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8024278:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802427c:	bfa8      	it	ge
 802427e:	ee37 fa4f 	vsubge.f32	s30, s14, s30
 8024282:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024286:	bfa8      	it	ge
 8024288:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 80243fc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 802428c:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8024400 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 8024290:	bfa8      	it	ge
 8024292:	ee37 0a40 	vsubge.f32	s0, s14, s0
 8024296:	ee3f 0a00 	vadd.f32	s0, s30, s0
 802429a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802429e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80242a2:	f140 8084 	bpl.w	80243ae <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80242a6:	eef0 0a4a 	vmov.f32	s1, s20
 80242aa:	eeb0 0a49 	vmov.f32	s0, s18
 80242ae:	e040      	b.n	8024332 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x256>
 80242b0:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80242b4:	ee27 7a07 	vmul.f32	s14, s14, s14
 80242b8:	eee5 7aa5 	vfma.f32	s15, s11, s11
 80242bc:	ee67 7a85 	vmul.f32	s15, s15, s10
 80242c0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80242c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80242c8:	d871      	bhi.n	80243ae <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80242ca:	ee7b 0aef 	vsub.f32	s1, s23, s31
 80242ce:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 80242d2:	f000 f8da 	bl	802448a <atan2f>
 80242d6:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 80242da:	eeb0 8a40 	vmov.f32	s16, s0
 80242de:	ee3f 0a69 	vsub.f32	s0, s30, s19
 80242e2:	f000 f8d2 	bl	802448a <atan2f>
 80242e6:	ee38 0a40 	vsub.f32	s0, s16, s0
 80242ea:	eddf 7a43 	vldr	s15, [pc, #268]	@ 80243f8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 80242ee:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80242f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80242f6:	bf48      	it	mi
 80242f8:	eeb1 0a40 	vnegmi.f32	s0, s0
 80242fc:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8024300:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024304:	bfa4      	itt	ge
 8024306:	eddf 7a3d 	vldrge	s15, [pc, #244]	@ 80243fc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 802430a:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 802430e:	eddf 7a3c 	vldr	s15, [pc, #240]	@ 8024400 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 8024312:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8024316:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802431a:	d548      	bpl.n	80243ae <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802431c:	eef0 0a4f 	vmov.f32	s1, s30
 8024320:	eeb0 0a6f 	vmov.f32	s0, s31
 8024324:	4620      	mov	r0, r4
 8024326:	f7ea f87b 	bl	800e420 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 802432a:	eef0 0a4c 	vmov.f32	s1, s24
 802432e:	eeb0 0a6b 	vmov.f32	s0, s23
 8024332:	4620      	mov	r0, r4
 8024334:	f7ea f874 	bl	800e420 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8024338:	b005      	add	sp, #20
 802433a:	ecbd 8b10 	vpop	{d8-d15}
 802433e:	bd30      	pop	{r4, r5, pc}
 8024340:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 80243f4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 8024344:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8024348:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802434c:	dd19      	ble.n	8024382 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a6>
 802434e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8024352:	ee26 7a06 	vmul.f32	s14, s12, s12
 8024356:	eee5 7aa5 	vfma.f32	s15, s11, s11
 802435a:	ee67 7a85 	vmul.f32	s15, s15, s10
 802435e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8024362:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024366:	d822      	bhi.n	80243ae <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8024368:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 802436c:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 8024370:	f000 f88b 	bl	802448a <atan2f>
 8024374:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8024378:	eeb0 8a40 	vmov.f32	s16, s0
 802437c:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8024380:	e7af      	b.n	80242e2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x206>
 8024382:	ee78 7aaa 	vadd.f32	s15, s17, s21
 8024386:	eeb0 7a49 	vmov.f32	s14, s18
 802438a:	eea7 7ae6 	vfms.f32	s14, s15, s13
 802438e:	ee79 7a8b 	vadd.f32	s15, s19, s22
 8024392:	eeb0 6a4a 	vmov.f32	s12, s20
 8024396:	eea7 6ae6 	vfms.f32	s12, s15, s13
 802439a:	ee66 7a06 	vmul.f32	s15, s12, s12
 802439e:	eee7 7a07 	vfma.f32	s15, s14, s14
 80243a2:	eef4 7ac5 	vcmpe.f32	s15, s10
 80243a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80243aa:	f67f af7c 	bls.w	80242a6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1ca>
 80243ae:	3501      	adds	r5, #1
 80243b0:	eef0 0a69 	vmov.f32	s1, s19
 80243b4:	eeb0 0a68 	vmov.f32	s0, s17
 80243b8:	4629      	mov	r1, r5
 80243ba:	eef0 3a4a 	vmov.f32	s7, s20
 80243be:	eeb0 3a49 	vmov.f32	s6, s18
 80243c2:	eef0 2a6e 	vmov.f32	s5, s29
 80243c6:	eeb0 2a4e 	vmov.f32	s4, s28
 80243ca:	eef0 1a6d 	vmov.f32	s3, s27
 80243ce:	eeb0 1a4d 	vmov.f32	s2, s26
 80243d2:	4620      	mov	r0, r4
 80243d4:	f7ff fe82 	bl	80240dc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 80243d8:	eeb0 ca6c 	vmov.f32	s24, s25
 80243dc:	eddd ba01 	vldr	s23, [sp, #4]
 80243e0:	ed9d fa02 	vldr	s30, [sp, #8]
 80243e4:	eddd fa03 	vldr	s31, [sp, #12]
 80243e8:	eef0 9a4a 	vmov.f32	s19, s20
 80243ec:	eef0 8a49 	vmov.f32	s17, s18
 80243f0:	e68a      	b.n	8024108 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
 80243f2:	bf00      	nop
 80243f4:	2edbe6ff 	.word	0x2edbe6ff
 80243f8:	40490fdb 	.word	0x40490fdb
 80243fc:	40c90fdb 	.word	0x40c90fdb
 8024400:	3dcccccd 	.word	0x3dcccccd

08024404 <_ZN8touchgfx6CanvasD1Ev>:
 8024404:	b510      	push	{r4, lr}
 8024406:	4b04      	ldr	r3, [pc, #16]	@ (8024418 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8024408:	4604      	mov	r4, r0
 802440a:	f840 3b14 	str.w	r3, [r0], #20
 802440e:	f7ea fec5 	bl	800f19c <_ZN8touchgfx7OutlineD1Ev>
 8024412:	4620      	mov	r0, r4
 8024414:	bd10      	pop	{r4, pc}
 8024416:	bf00      	nop
 8024418:	08028938 	.word	0x08028938

0802441c <_ZN8touchgfx6CanvasD0Ev>:
 802441c:	b510      	push	{r4, lr}
 802441e:	4604      	mov	r4, r0
 8024420:	f7ff fff0 	bl	8024404 <_ZN8touchgfx6CanvasD1Ev>
 8024424:	4620      	mov	r0, r4
 8024426:	2174      	movs	r1, #116	@ 0x74
 8024428:	f000 f807 	bl	802443a <_ZdlPvj>
 802442c:	4620      	mov	r0, r4
 802442e:	bd10      	pop	{r4, pc}

08024430 <__aeabi_atexit>:
 8024430:	460b      	mov	r3, r1
 8024432:	4601      	mov	r1, r0
 8024434:	4618      	mov	r0, r3
 8024436:	f001 b81f 	b.w	8025478 <__cxa_atexit>

0802443a <_ZdlPvj>:
 802443a:	f000 b812 	b.w	8024462 <_ZdlPv>

0802443e <__cxa_guard_acquire>:
 802443e:	6802      	ldr	r2, [r0, #0]
 8024440:	07d2      	lsls	r2, r2, #31
 8024442:	4603      	mov	r3, r0
 8024444:	d405      	bmi.n	8024452 <__cxa_guard_acquire+0x14>
 8024446:	7842      	ldrb	r2, [r0, #1]
 8024448:	b102      	cbz	r2, 802444c <__cxa_guard_acquire+0xe>
 802444a:	deff      	udf	#255	@ 0xff
 802444c:	2001      	movs	r0, #1
 802444e:	7058      	strb	r0, [r3, #1]
 8024450:	4770      	bx	lr
 8024452:	2000      	movs	r0, #0
 8024454:	4770      	bx	lr

08024456 <__cxa_guard_release>:
 8024456:	2301      	movs	r3, #1
 8024458:	6003      	str	r3, [r0, #0]
 802445a:	4770      	bx	lr

0802445c <__cxa_pure_virtual>:
 802445c:	b508      	push	{r3, lr}
 802445e:	f000 f80f 	bl	8024480 <_ZSt9terminatev>

08024462 <_ZdlPv>:
 8024462:	f000 bf53 	b.w	802530c <free>

08024466 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8024466:	b508      	push	{r3, lr}
 8024468:	4780      	blx	r0
 802446a:	f000 ff1b 	bl	80252a4 <abort>
	...

08024470 <_ZSt13get_terminatev>:
 8024470:	4b02      	ldr	r3, [pc, #8]	@ (802447c <_ZSt13get_terminatev+0xc>)
 8024472:	6818      	ldr	r0, [r3, #0]
 8024474:	f3bf 8f5b 	dmb	ish
 8024478:	4770      	bx	lr
 802447a:	bf00      	nop
 802447c:	20000100 	.word	0x20000100

08024480 <_ZSt9terminatev>:
 8024480:	b508      	push	{r3, lr}
 8024482:	f7ff fff5 	bl	8024470 <_ZSt13get_terminatev>
 8024486:	f7ff ffee 	bl	8024466 <_ZN10__cxxabiv111__terminateEPFvvE>

0802448a <atan2f>:
 802448a:	f000 b94d 	b.w	8024728 <__ieee754_atan2f>
	...

08024490 <sqrtf>:
 8024490:	b508      	push	{r3, lr}
 8024492:	ed2d 8b02 	vpush	{d8}
 8024496:	eeb0 8a40 	vmov.f32	s16, s0
 802449a:	f000 f8a1 	bl	80245e0 <__ieee754_sqrtf>
 802449e:	eeb4 8a48 	vcmp.f32	s16, s16
 80244a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80244a6:	d60c      	bvs.n	80244c2 <sqrtf+0x32>
 80244a8:	eddf 8a07 	vldr	s17, [pc, #28]	@ 80244c8 <sqrtf+0x38>
 80244ac:	eeb4 8ae8 	vcmpe.f32	s16, s17
 80244b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80244b4:	d505      	bpl.n	80244c2 <sqrtf+0x32>
 80244b6:	f001 f9a7 	bl	8025808 <__errno>
 80244ba:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 80244be:	2321      	movs	r3, #33	@ 0x21
 80244c0:	6003      	str	r3, [r0, #0]
 80244c2:	ecbd 8b02 	vpop	{d8}
 80244c6:	bd08      	pop	{r3, pc}
 80244c8:	00000000 	.word	0x00000000

080244cc <cosf>:
 80244cc:	ee10 3a10 	vmov	r3, s0
 80244d0:	b507      	push	{r0, r1, r2, lr}
 80244d2:	4a1e      	ldr	r2, [pc, #120]	@ (802454c <cosf+0x80>)
 80244d4:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80244d8:	4293      	cmp	r3, r2
 80244da:	d806      	bhi.n	80244ea <cosf+0x1e>
 80244dc:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 8024550 <cosf+0x84>
 80244e0:	b003      	add	sp, #12
 80244e2:	f85d eb04 	ldr.w	lr, [sp], #4
 80244e6:	f000 b87f 	b.w	80245e8 <__kernel_cosf>
 80244ea:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80244ee:	d304      	bcc.n	80244fa <cosf+0x2e>
 80244f0:	ee30 0a40 	vsub.f32	s0, s0, s0
 80244f4:	b003      	add	sp, #12
 80244f6:	f85d fb04 	ldr.w	pc, [sp], #4
 80244fa:	4668      	mov	r0, sp
 80244fc:	f000 f9b4 	bl	8024868 <__ieee754_rem_pio2f>
 8024500:	f000 0003 	and.w	r0, r0, #3
 8024504:	2801      	cmp	r0, #1
 8024506:	d009      	beq.n	802451c <cosf+0x50>
 8024508:	2802      	cmp	r0, #2
 802450a:	d010      	beq.n	802452e <cosf+0x62>
 802450c:	b9b0      	cbnz	r0, 802453c <cosf+0x70>
 802450e:	eddd 0a01 	vldr	s1, [sp, #4]
 8024512:	ed9d 0a00 	vldr	s0, [sp]
 8024516:	f000 f867 	bl	80245e8 <__kernel_cosf>
 802451a:	e7eb      	b.n	80244f4 <cosf+0x28>
 802451c:	eddd 0a01 	vldr	s1, [sp, #4]
 8024520:	ed9d 0a00 	vldr	s0, [sp]
 8024524:	f000 f8b8 	bl	8024698 <__kernel_sinf>
 8024528:	eeb1 0a40 	vneg.f32	s0, s0
 802452c:	e7e2      	b.n	80244f4 <cosf+0x28>
 802452e:	eddd 0a01 	vldr	s1, [sp, #4]
 8024532:	ed9d 0a00 	vldr	s0, [sp]
 8024536:	f000 f857 	bl	80245e8 <__kernel_cosf>
 802453a:	e7f5      	b.n	8024528 <cosf+0x5c>
 802453c:	eddd 0a01 	vldr	s1, [sp, #4]
 8024540:	ed9d 0a00 	vldr	s0, [sp]
 8024544:	2001      	movs	r0, #1
 8024546:	f000 f8a7 	bl	8024698 <__kernel_sinf>
 802454a:	e7d3      	b.n	80244f4 <cosf+0x28>
 802454c:	3f490fd8 	.word	0x3f490fd8
 8024550:	00000000 	.word	0x00000000

08024554 <sinf>:
 8024554:	ee10 3a10 	vmov	r3, s0
 8024558:	b507      	push	{r0, r1, r2, lr}
 802455a:	4a1f      	ldr	r2, [pc, #124]	@ (80245d8 <sinf+0x84>)
 802455c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8024560:	4293      	cmp	r3, r2
 8024562:	d807      	bhi.n	8024574 <sinf+0x20>
 8024564:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 80245dc <sinf+0x88>
 8024568:	2000      	movs	r0, #0
 802456a:	b003      	add	sp, #12
 802456c:	f85d eb04 	ldr.w	lr, [sp], #4
 8024570:	f000 b892 	b.w	8024698 <__kernel_sinf>
 8024574:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8024578:	d304      	bcc.n	8024584 <sinf+0x30>
 802457a:	ee30 0a40 	vsub.f32	s0, s0, s0
 802457e:	b003      	add	sp, #12
 8024580:	f85d fb04 	ldr.w	pc, [sp], #4
 8024584:	4668      	mov	r0, sp
 8024586:	f000 f96f 	bl	8024868 <__ieee754_rem_pio2f>
 802458a:	f000 0003 	and.w	r0, r0, #3
 802458e:	2801      	cmp	r0, #1
 8024590:	d00a      	beq.n	80245a8 <sinf+0x54>
 8024592:	2802      	cmp	r0, #2
 8024594:	d00f      	beq.n	80245b6 <sinf+0x62>
 8024596:	b9c0      	cbnz	r0, 80245ca <sinf+0x76>
 8024598:	eddd 0a01 	vldr	s1, [sp, #4]
 802459c:	ed9d 0a00 	vldr	s0, [sp]
 80245a0:	2001      	movs	r0, #1
 80245a2:	f000 f879 	bl	8024698 <__kernel_sinf>
 80245a6:	e7ea      	b.n	802457e <sinf+0x2a>
 80245a8:	eddd 0a01 	vldr	s1, [sp, #4]
 80245ac:	ed9d 0a00 	vldr	s0, [sp]
 80245b0:	f000 f81a 	bl	80245e8 <__kernel_cosf>
 80245b4:	e7e3      	b.n	802457e <sinf+0x2a>
 80245b6:	eddd 0a01 	vldr	s1, [sp, #4]
 80245ba:	ed9d 0a00 	vldr	s0, [sp]
 80245be:	2001      	movs	r0, #1
 80245c0:	f000 f86a 	bl	8024698 <__kernel_sinf>
 80245c4:	eeb1 0a40 	vneg.f32	s0, s0
 80245c8:	e7d9      	b.n	802457e <sinf+0x2a>
 80245ca:	eddd 0a01 	vldr	s1, [sp, #4]
 80245ce:	ed9d 0a00 	vldr	s0, [sp]
 80245d2:	f000 f809 	bl	80245e8 <__kernel_cosf>
 80245d6:	e7f5      	b.n	80245c4 <sinf+0x70>
 80245d8:	3f490fd8 	.word	0x3f490fd8
 80245dc:	00000000 	.word	0x00000000

080245e0 <__ieee754_sqrtf>:
 80245e0:	eeb1 0ac0 	vsqrt.f32	s0, s0
 80245e4:	4770      	bx	lr
	...

080245e8 <__kernel_cosf>:
 80245e8:	ee10 3a10 	vmov	r3, s0
 80245ec:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80245f0:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 80245f4:	eef0 6a40 	vmov.f32	s13, s0
 80245f8:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80245fc:	d204      	bcs.n	8024608 <__kernel_cosf+0x20>
 80245fe:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 8024602:	ee17 2a90 	vmov	r2, s15
 8024606:	b342      	cbz	r2, 802465a <__kernel_cosf+0x72>
 8024608:	ee26 7aa6 	vmul.f32	s14, s13, s13
 802460c:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8024678 <__kernel_cosf+0x90>
 8024610:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 802467c <__kernel_cosf+0x94>
 8024614:	4a1a      	ldr	r2, [pc, #104]	@ (8024680 <__kernel_cosf+0x98>)
 8024616:	eea7 6a27 	vfma.f32	s12, s14, s15
 802461a:	4293      	cmp	r3, r2
 802461c:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8024684 <__kernel_cosf+0x9c>
 8024620:	eee6 7a07 	vfma.f32	s15, s12, s14
 8024624:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 8024688 <__kernel_cosf+0xa0>
 8024628:	eea7 6a87 	vfma.f32	s12, s15, s14
 802462c:	eddf 7a17 	vldr	s15, [pc, #92]	@ 802468c <__kernel_cosf+0xa4>
 8024630:	eee6 7a07 	vfma.f32	s15, s12, s14
 8024634:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 8024690 <__kernel_cosf+0xa8>
 8024638:	eea7 6a87 	vfma.f32	s12, s15, s14
 802463c:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 8024640:	ee26 6a07 	vmul.f32	s12, s12, s14
 8024644:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8024648:	eee7 0a06 	vfma.f32	s1, s14, s12
 802464c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8024650:	d804      	bhi.n	802465c <__kernel_cosf+0x74>
 8024652:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8024656:	ee30 0a67 	vsub.f32	s0, s0, s15
 802465a:	4770      	bx	lr
 802465c:	4a0d      	ldr	r2, [pc, #52]	@ (8024694 <__kernel_cosf+0xac>)
 802465e:	4293      	cmp	r3, r2
 8024660:	bf9a      	itte	ls
 8024662:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 8024666:	ee07 3a10 	vmovls	s14, r3
 802466a:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 802466e:	ee30 0a47 	vsub.f32	s0, s0, s14
 8024672:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8024676:	e7ec      	b.n	8024652 <__kernel_cosf+0x6a>
 8024678:	ad47d74e 	.word	0xad47d74e
 802467c:	310f74f6 	.word	0x310f74f6
 8024680:	3e999999 	.word	0x3e999999
 8024684:	b493f27c 	.word	0xb493f27c
 8024688:	37d00d01 	.word	0x37d00d01
 802468c:	bab60b61 	.word	0xbab60b61
 8024690:	3d2aaaab 	.word	0x3d2aaaab
 8024694:	3f480000 	.word	0x3f480000

08024698 <__kernel_sinf>:
 8024698:	ee10 3a10 	vmov	r3, s0
 802469c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80246a0:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 80246a4:	d204      	bcs.n	80246b0 <__kernel_sinf+0x18>
 80246a6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80246aa:	ee17 3a90 	vmov	r3, s15
 80246ae:	b35b      	cbz	r3, 8024708 <__kernel_sinf+0x70>
 80246b0:	ee20 7a00 	vmul.f32	s14, s0, s0
 80246b4:	eddf 7a15 	vldr	s15, [pc, #84]	@ 802470c <__kernel_sinf+0x74>
 80246b8:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 8024710 <__kernel_sinf+0x78>
 80246bc:	eea7 6a27 	vfma.f32	s12, s14, s15
 80246c0:	eddf 7a14 	vldr	s15, [pc, #80]	@ 8024714 <__kernel_sinf+0x7c>
 80246c4:	eee6 7a07 	vfma.f32	s15, s12, s14
 80246c8:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 8024718 <__kernel_sinf+0x80>
 80246cc:	eea7 6a87 	vfma.f32	s12, s15, s14
 80246d0:	eddf 7a12 	vldr	s15, [pc, #72]	@ 802471c <__kernel_sinf+0x84>
 80246d4:	ee60 6a07 	vmul.f32	s13, s0, s14
 80246d8:	eee6 7a07 	vfma.f32	s15, s12, s14
 80246dc:	b930      	cbnz	r0, 80246ec <__kernel_sinf+0x54>
 80246de:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 8024720 <__kernel_sinf+0x88>
 80246e2:	eea7 6a27 	vfma.f32	s12, s14, s15
 80246e6:	eea6 0a26 	vfma.f32	s0, s12, s13
 80246ea:	4770      	bx	lr
 80246ec:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 80246f0:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 80246f4:	eee0 7a86 	vfma.f32	s15, s1, s12
 80246f8:	eed7 0a87 	vfnms.f32	s1, s15, s14
 80246fc:	eddf 7a09 	vldr	s15, [pc, #36]	@ 8024724 <__kernel_sinf+0x8c>
 8024700:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8024704:	ee30 0a60 	vsub.f32	s0, s0, s1
 8024708:	4770      	bx	lr
 802470a:	bf00      	nop
 802470c:	2f2ec9d3 	.word	0x2f2ec9d3
 8024710:	b2d72f34 	.word	0xb2d72f34
 8024714:	3638ef1b 	.word	0x3638ef1b
 8024718:	b9500d01 	.word	0xb9500d01
 802471c:	3c088889 	.word	0x3c088889
 8024720:	be2aaaab 	.word	0xbe2aaaab
 8024724:	3e2aaaab 	.word	0x3e2aaaab

08024728 <__ieee754_atan2f>:
 8024728:	ee10 2a90 	vmov	r2, s1
 802472c:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 8024730:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8024734:	b510      	push	{r4, lr}
 8024736:	eef0 7a40 	vmov.f32	s15, s0
 802473a:	d806      	bhi.n	802474a <__ieee754_atan2f+0x22>
 802473c:	ee10 0a10 	vmov	r0, s0
 8024740:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 8024744:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8024748:	d904      	bls.n	8024754 <__ieee754_atan2f+0x2c>
 802474a:	ee77 7aa0 	vadd.f32	s15, s15, s1
 802474e:	eeb0 0a67 	vmov.f32	s0, s15
 8024752:	bd10      	pop	{r4, pc}
 8024754:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8024758:	d103      	bne.n	8024762 <__ieee754_atan2f+0x3a>
 802475a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802475e:	f000 b9b3 	b.w	8024ac8 <atanf>
 8024762:	1794      	asrs	r4, r2, #30
 8024764:	f004 0402 	and.w	r4, r4, #2
 8024768:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 802476c:	b943      	cbnz	r3, 8024780 <__ieee754_atan2f+0x58>
 802476e:	2c02      	cmp	r4, #2
 8024770:	d05e      	beq.n	8024830 <__ieee754_atan2f+0x108>
 8024772:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8024844 <__ieee754_atan2f+0x11c>
 8024776:	2c03      	cmp	r4, #3
 8024778:	bf08      	it	eq
 802477a:	eef0 7a47 	vmoveq.f32	s15, s14
 802477e:	e7e6      	b.n	802474e <__ieee754_atan2f+0x26>
 8024780:	b941      	cbnz	r1, 8024794 <__ieee754_atan2f+0x6c>
 8024782:	eddf 7a31 	vldr	s15, [pc, #196]	@ 8024848 <__ieee754_atan2f+0x120>
 8024786:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 802484c <__ieee754_atan2f+0x124>
 802478a:	2800      	cmp	r0, #0
 802478c:	bfa8      	it	ge
 802478e:	eef0 7a47 	vmovge.f32	s15, s14
 8024792:	e7dc      	b.n	802474e <__ieee754_atan2f+0x26>
 8024794:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8024798:	d110      	bne.n	80247bc <__ieee754_atan2f+0x94>
 802479a:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802479e:	f104 34ff 	add.w	r4, r4, #4294967295
 80247a2:	d107      	bne.n	80247b4 <__ieee754_atan2f+0x8c>
 80247a4:	2c02      	cmp	r4, #2
 80247a6:	d846      	bhi.n	8024836 <__ieee754_atan2f+0x10e>
 80247a8:	4b29      	ldr	r3, [pc, #164]	@ (8024850 <__ieee754_atan2f+0x128>)
 80247aa:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 80247ae:	edd3 7a00 	vldr	s15, [r3]
 80247b2:	e7cc      	b.n	802474e <__ieee754_atan2f+0x26>
 80247b4:	2c02      	cmp	r4, #2
 80247b6:	d841      	bhi.n	802483c <__ieee754_atan2f+0x114>
 80247b8:	4b26      	ldr	r3, [pc, #152]	@ (8024854 <__ieee754_atan2f+0x12c>)
 80247ba:	e7f6      	b.n	80247aa <__ieee754_atan2f+0x82>
 80247bc:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80247c0:	d0df      	beq.n	8024782 <__ieee754_atan2f+0x5a>
 80247c2:	1a5b      	subs	r3, r3, r1
 80247c4:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 80247c8:	ea4f 51e3 	mov.w	r1, r3, asr #23
 80247cc:	da1a      	bge.n	8024804 <__ieee754_atan2f+0xdc>
 80247ce:	2a00      	cmp	r2, #0
 80247d0:	da01      	bge.n	80247d6 <__ieee754_atan2f+0xae>
 80247d2:	313c      	adds	r1, #60	@ 0x3c
 80247d4:	db19      	blt.n	802480a <__ieee754_atan2f+0xe2>
 80247d6:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 80247da:	f000 fa49 	bl	8024c70 <fabsf>
 80247de:	f000 f973 	bl	8024ac8 <atanf>
 80247e2:	eef0 7a40 	vmov.f32	s15, s0
 80247e6:	2c01      	cmp	r4, #1
 80247e8:	d012      	beq.n	8024810 <__ieee754_atan2f+0xe8>
 80247ea:	2c02      	cmp	r4, #2
 80247ec:	d017      	beq.n	802481e <__ieee754_atan2f+0xf6>
 80247ee:	2c00      	cmp	r4, #0
 80247f0:	d0ad      	beq.n	802474e <__ieee754_atan2f+0x26>
 80247f2:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8024858 <__ieee754_atan2f+0x130>
 80247f6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80247fa:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 802485c <__ieee754_atan2f+0x134>
 80247fe:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8024802:	e7a4      	b.n	802474e <__ieee754_atan2f+0x26>
 8024804:	eddf 7a11 	vldr	s15, [pc, #68]	@ 802484c <__ieee754_atan2f+0x124>
 8024808:	e7ed      	b.n	80247e6 <__ieee754_atan2f+0xbe>
 802480a:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8024860 <__ieee754_atan2f+0x138>
 802480e:	e7ea      	b.n	80247e6 <__ieee754_atan2f+0xbe>
 8024810:	ee17 3a90 	vmov	r3, s15
 8024814:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8024818:	ee07 3a90 	vmov	s15, r3
 802481c:	e797      	b.n	802474e <__ieee754_atan2f+0x26>
 802481e:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8024858 <__ieee754_atan2f+0x130>
 8024822:	ee77 7a87 	vadd.f32	s15, s15, s14
 8024826:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 802485c <__ieee754_atan2f+0x134>
 802482a:	ee77 7a67 	vsub.f32	s15, s14, s15
 802482e:	e78e      	b.n	802474e <__ieee754_atan2f+0x26>
 8024830:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 802485c <__ieee754_atan2f+0x134>
 8024834:	e78b      	b.n	802474e <__ieee754_atan2f+0x26>
 8024836:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 8024864 <__ieee754_atan2f+0x13c>
 802483a:	e788      	b.n	802474e <__ieee754_atan2f+0x26>
 802483c:	eddf 7a08 	vldr	s15, [pc, #32]	@ 8024860 <__ieee754_atan2f+0x138>
 8024840:	e785      	b.n	802474e <__ieee754_atan2f+0x26>
 8024842:	bf00      	nop
 8024844:	c0490fdb 	.word	0xc0490fdb
 8024848:	bfc90fdb 	.word	0xbfc90fdb
 802484c:	3fc90fdb 	.word	0x3fc90fdb
 8024850:	08028950 	.word	0x08028950
 8024854:	08028944 	.word	0x08028944
 8024858:	33bbbd2e 	.word	0x33bbbd2e
 802485c:	40490fdb 	.word	0x40490fdb
 8024860:	00000000 	.word	0x00000000
 8024864:	3f490fdb 	.word	0x3f490fdb

08024868 <__ieee754_rem_pio2f>:
 8024868:	b5f0      	push	{r4, r5, r6, r7, lr}
 802486a:	ee10 6a10 	vmov	r6, s0
 802486e:	4b88      	ldr	r3, [pc, #544]	@ (8024a90 <__ieee754_rem_pio2f+0x228>)
 8024870:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8024874:	429d      	cmp	r5, r3
 8024876:	b087      	sub	sp, #28
 8024878:	4604      	mov	r4, r0
 802487a:	d805      	bhi.n	8024888 <__ieee754_rem_pio2f+0x20>
 802487c:	2300      	movs	r3, #0
 802487e:	ed80 0a00 	vstr	s0, [r0]
 8024882:	6043      	str	r3, [r0, #4]
 8024884:	2000      	movs	r0, #0
 8024886:	e022      	b.n	80248ce <__ieee754_rem_pio2f+0x66>
 8024888:	4b82      	ldr	r3, [pc, #520]	@ (8024a94 <__ieee754_rem_pio2f+0x22c>)
 802488a:	429d      	cmp	r5, r3
 802488c:	d83a      	bhi.n	8024904 <__ieee754_rem_pio2f+0x9c>
 802488e:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8024892:	2e00      	cmp	r6, #0
 8024894:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 8024a98 <__ieee754_rem_pio2f+0x230>
 8024898:	4a80      	ldr	r2, [pc, #512]	@ (8024a9c <__ieee754_rem_pio2f+0x234>)
 802489a:	f023 030f 	bic.w	r3, r3, #15
 802489e:	dd18      	ble.n	80248d2 <__ieee754_rem_pio2f+0x6a>
 80248a0:	4293      	cmp	r3, r2
 80248a2:	ee70 7a47 	vsub.f32	s15, s0, s14
 80248a6:	bf09      	itett	eq
 80248a8:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 8024aa0 <__ieee754_rem_pio2f+0x238>
 80248ac:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 8024aa4 <__ieee754_rem_pio2f+0x23c>
 80248b0:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 8024aa8 <__ieee754_rem_pio2f+0x240>
 80248b4:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 80248b8:	ee37 7ae6 	vsub.f32	s14, s15, s13
 80248bc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80248c0:	ed80 7a00 	vstr	s14, [r0]
 80248c4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80248c8:	edc0 7a01 	vstr	s15, [r0, #4]
 80248cc:	2001      	movs	r0, #1
 80248ce:	b007      	add	sp, #28
 80248d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80248d2:	4293      	cmp	r3, r2
 80248d4:	ee70 7a07 	vadd.f32	s15, s0, s14
 80248d8:	bf09      	itett	eq
 80248da:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 8024aa0 <__ieee754_rem_pio2f+0x238>
 80248de:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 8024aa4 <__ieee754_rem_pio2f+0x23c>
 80248e2:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 8024aa8 <__ieee754_rem_pio2f+0x240>
 80248e6:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 80248ea:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80248ee:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80248f2:	ed80 7a00 	vstr	s14, [r0]
 80248f6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80248fa:	edc0 7a01 	vstr	s15, [r0, #4]
 80248fe:	f04f 30ff 	mov.w	r0, #4294967295
 8024902:	e7e4      	b.n	80248ce <__ieee754_rem_pio2f+0x66>
 8024904:	4b69      	ldr	r3, [pc, #420]	@ (8024aac <__ieee754_rem_pio2f+0x244>)
 8024906:	429d      	cmp	r5, r3
 8024908:	d873      	bhi.n	80249f2 <__ieee754_rem_pio2f+0x18a>
 802490a:	f000 f9b1 	bl	8024c70 <fabsf>
 802490e:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 8024ab0 <__ieee754_rem_pio2f+0x248>
 8024912:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8024916:	eee0 7a07 	vfma.f32	s15, s0, s14
 802491a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802491e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8024922:	ee17 0a90 	vmov	r0, s15
 8024926:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8024a98 <__ieee754_rem_pio2f+0x230>
 802492a:	eea7 0a67 	vfms.f32	s0, s14, s15
 802492e:	281f      	cmp	r0, #31
 8024930:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8024aa4 <__ieee754_rem_pio2f+0x23c>
 8024934:	ee67 7a27 	vmul.f32	s15, s14, s15
 8024938:	eeb1 6a47 	vneg.f32	s12, s14
 802493c:	ee70 6a67 	vsub.f32	s13, s0, s15
 8024940:	ee16 1a90 	vmov	r1, s13
 8024944:	dc09      	bgt.n	802495a <__ieee754_rem_pio2f+0xf2>
 8024946:	4a5b      	ldr	r2, [pc, #364]	@ (8024ab4 <__ieee754_rem_pio2f+0x24c>)
 8024948:	1e47      	subs	r7, r0, #1
 802494a:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 802494e:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8024952:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8024956:	4293      	cmp	r3, r2
 8024958:	d107      	bne.n	802496a <__ieee754_rem_pio2f+0x102>
 802495a:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 802495e:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8024962:	2a08      	cmp	r2, #8
 8024964:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8024968:	dc14      	bgt.n	8024994 <__ieee754_rem_pio2f+0x12c>
 802496a:	6021      	str	r1, [r4, #0]
 802496c:	ed94 7a00 	vldr	s14, [r4]
 8024970:	ee30 0a47 	vsub.f32	s0, s0, s14
 8024974:	2e00      	cmp	r6, #0
 8024976:	ee30 0a67 	vsub.f32	s0, s0, s15
 802497a:	ed84 0a01 	vstr	s0, [r4, #4]
 802497e:	daa6      	bge.n	80248ce <__ieee754_rem_pio2f+0x66>
 8024980:	eeb1 7a47 	vneg.f32	s14, s14
 8024984:	eeb1 0a40 	vneg.f32	s0, s0
 8024988:	ed84 7a00 	vstr	s14, [r4]
 802498c:	ed84 0a01 	vstr	s0, [r4, #4]
 8024990:	4240      	negs	r0, r0
 8024992:	e79c      	b.n	80248ce <__ieee754_rem_pio2f+0x66>
 8024994:	eddf 5a42 	vldr	s11, [pc, #264]	@ 8024aa0 <__ieee754_rem_pio2f+0x238>
 8024998:	eef0 6a40 	vmov.f32	s13, s0
 802499c:	eee6 6a25 	vfma.f32	s13, s12, s11
 80249a0:	ee70 7a66 	vsub.f32	s15, s0, s13
 80249a4:	eee6 7a25 	vfma.f32	s15, s12, s11
 80249a8:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8024aa8 <__ieee754_rem_pio2f+0x240>
 80249ac:	eed7 7a25 	vfnms.f32	s15, s14, s11
 80249b0:	ee76 5ae7 	vsub.f32	s11, s13, s15
 80249b4:	ee15 2a90 	vmov	r2, s11
 80249b8:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 80249bc:	1a5b      	subs	r3, r3, r1
 80249be:	2b19      	cmp	r3, #25
 80249c0:	dc04      	bgt.n	80249cc <__ieee754_rem_pio2f+0x164>
 80249c2:	edc4 5a00 	vstr	s11, [r4]
 80249c6:	eeb0 0a66 	vmov.f32	s0, s13
 80249ca:	e7cf      	b.n	802496c <__ieee754_rem_pio2f+0x104>
 80249cc:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 8024ab8 <__ieee754_rem_pio2f+0x250>
 80249d0:	eeb0 0a66 	vmov.f32	s0, s13
 80249d4:	eea6 0a25 	vfma.f32	s0, s12, s11
 80249d8:	ee76 7ac0 	vsub.f32	s15, s13, s0
 80249dc:	eddf 6a37 	vldr	s13, [pc, #220]	@ 8024abc <__ieee754_rem_pio2f+0x254>
 80249e0:	eee6 7a25 	vfma.f32	s15, s12, s11
 80249e4:	eed7 7a26 	vfnms.f32	s15, s14, s13
 80249e8:	ee30 7a67 	vsub.f32	s14, s0, s15
 80249ec:	ed84 7a00 	vstr	s14, [r4]
 80249f0:	e7bc      	b.n	802496c <__ieee754_rem_pio2f+0x104>
 80249f2:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 80249f6:	d306      	bcc.n	8024a06 <__ieee754_rem_pio2f+0x19e>
 80249f8:	ee70 7a40 	vsub.f32	s15, s0, s0
 80249fc:	edc0 7a01 	vstr	s15, [r0, #4]
 8024a00:	edc0 7a00 	vstr	s15, [r0]
 8024a04:	e73e      	b.n	8024884 <__ieee754_rem_pio2f+0x1c>
 8024a06:	15ea      	asrs	r2, r5, #23
 8024a08:	3a86      	subs	r2, #134	@ 0x86
 8024a0a:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8024a0e:	ee07 3a90 	vmov	s15, r3
 8024a12:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8024a16:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 8024ac0 <__ieee754_rem_pio2f+0x258>
 8024a1a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8024a1e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8024a22:	ed8d 7a03 	vstr	s14, [sp, #12]
 8024a26:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8024a2a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8024a2e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8024a32:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8024a36:	ed8d 7a04 	vstr	s14, [sp, #16]
 8024a3a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8024a3e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8024a42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024a46:	edcd 7a05 	vstr	s15, [sp, #20]
 8024a4a:	d11e      	bne.n	8024a8a <__ieee754_rem_pio2f+0x222>
 8024a4c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8024a50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024a54:	bf0c      	ite	eq
 8024a56:	2301      	moveq	r3, #1
 8024a58:	2302      	movne	r3, #2
 8024a5a:	491a      	ldr	r1, [pc, #104]	@ (8024ac4 <__ieee754_rem_pio2f+0x25c>)
 8024a5c:	9101      	str	r1, [sp, #4]
 8024a5e:	2102      	movs	r1, #2
 8024a60:	9100      	str	r1, [sp, #0]
 8024a62:	a803      	add	r0, sp, #12
 8024a64:	4621      	mov	r1, r4
 8024a66:	f000 f90b 	bl	8024c80 <__kernel_rem_pio2f>
 8024a6a:	2e00      	cmp	r6, #0
 8024a6c:	f6bf af2f 	bge.w	80248ce <__ieee754_rem_pio2f+0x66>
 8024a70:	edd4 7a00 	vldr	s15, [r4]
 8024a74:	eef1 7a67 	vneg.f32	s15, s15
 8024a78:	edc4 7a00 	vstr	s15, [r4]
 8024a7c:	edd4 7a01 	vldr	s15, [r4, #4]
 8024a80:	eef1 7a67 	vneg.f32	s15, s15
 8024a84:	edc4 7a01 	vstr	s15, [r4, #4]
 8024a88:	e782      	b.n	8024990 <__ieee754_rem_pio2f+0x128>
 8024a8a:	2303      	movs	r3, #3
 8024a8c:	e7e5      	b.n	8024a5a <__ieee754_rem_pio2f+0x1f2>
 8024a8e:	bf00      	nop
 8024a90:	3f490fd8 	.word	0x3f490fd8
 8024a94:	4016cbe3 	.word	0x4016cbe3
 8024a98:	3fc90f80 	.word	0x3fc90f80
 8024a9c:	3fc90fd0 	.word	0x3fc90fd0
 8024aa0:	37354400 	.word	0x37354400
 8024aa4:	37354443 	.word	0x37354443
 8024aa8:	2e85a308 	.word	0x2e85a308
 8024aac:	43490f80 	.word	0x43490f80
 8024ab0:	3f22f984 	.word	0x3f22f984
 8024ab4:	0802895c 	.word	0x0802895c
 8024ab8:	2e85a300 	.word	0x2e85a300
 8024abc:	248d3132 	.word	0x248d3132
 8024ac0:	43800000 	.word	0x43800000
 8024ac4:	080289dc 	.word	0x080289dc

08024ac8 <atanf>:
 8024ac8:	b538      	push	{r3, r4, r5, lr}
 8024aca:	ee10 5a10 	vmov	r5, s0
 8024ace:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 8024ad2:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 8024ad6:	eef0 7a40 	vmov.f32	s15, s0
 8024ada:	d310      	bcc.n	8024afe <atanf+0x36>
 8024adc:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 8024ae0:	d904      	bls.n	8024aec <atanf+0x24>
 8024ae2:	ee70 7a00 	vadd.f32	s15, s0, s0
 8024ae6:	eeb0 0a67 	vmov.f32	s0, s15
 8024aea:	bd38      	pop	{r3, r4, r5, pc}
 8024aec:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 8024c24 <atanf+0x15c>
 8024af0:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 8024c28 <atanf+0x160>
 8024af4:	2d00      	cmp	r5, #0
 8024af6:	bfc8      	it	gt
 8024af8:	eef0 7a47 	vmovgt.f32	s15, s14
 8024afc:	e7f3      	b.n	8024ae6 <atanf+0x1e>
 8024afe:	4b4b      	ldr	r3, [pc, #300]	@ (8024c2c <atanf+0x164>)
 8024b00:	429c      	cmp	r4, r3
 8024b02:	d810      	bhi.n	8024b26 <atanf+0x5e>
 8024b04:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 8024b08:	d20a      	bcs.n	8024b20 <atanf+0x58>
 8024b0a:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 8024c30 <atanf+0x168>
 8024b0e:	ee30 7a07 	vadd.f32	s14, s0, s14
 8024b12:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8024b16:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8024b1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024b1e:	dce2      	bgt.n	8024ae6 <atanf+0x1e>
 8024b20:	f04f 33ff 	mov.w	r3, #4294967295
 8024b24:	e013      	b.n	8024b4e <atanf+0x86>
 8024b26:	f000 f8a3 	bl	8024c70 <fabsf>
 8024b2a:	4b42      	ldr	r3, [pc, #264]	@ (8024c34 <atanf+0x16c>)
 8024b2c:	429c      	cmp	r4, r3
 8024b2e:	d84f      	bhi.n	8024bd0 <atanf+0x108>
 8024b30:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 8024b34:	429c      	cmp	r4, r3
 8024b36:	d841      	bhi.n	8024bbc <atanf+0xf4>
 8024b38:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 8024b3c:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8024b40:	eea0 7a27 	vfma.f32	s14, s0, s15
 8024b44:	2300      	movs	r3, #0
 8024b46:	ee30 0a27 	vadd.f32	s0, s0, s15
 8024b4a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024b4e:	1c5a      	adds	r2, r3, #1
 8024b50:	ee27 6aa7 	vmul.f32	s12, s15, s15
 8024b54:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 8024c38 <atanf+0x170>
 8024b58:	eddf 5a38 	vldr	s11, [pc, #224]	@ 8024c3c <atanf+0x174>
 8024b5c:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 8024c40 <atanf+0x178>
 8024b60:	ee66 6a06 	vmul.f32	s13, s12, s12
 8024b64:	eee6 5a87 	vfma.f32	s11, s13, s14
 8024b68:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 8024c44 <atanf+0x17c>
 8024b6c:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8024b70:	eddf 5a35 	vldr	s11, [pc, #212]	@ 8024c48 <atanf+0x180>
 8024b74:	eee7 5a26 	vfma.f32	s11, s14, s13
 8024b78:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8024c4c <atanf+0x184>
 8024b7c:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8024b80:	eddf 5a33 	vldr	s11, [pc, #204]	@ 8024c50 <atanf+0x188>
 8024b84:	eee7 5a26 	vfma.f32	s11, s14, s13
 8024b88:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 8024c54 <atanf+0x18c>
 8024b8c:	eea6 5a87 	vfma.f32	s10, s13, s14
 8024b90:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8024c58 <atanf+0x190>
 8024b94:	eea5 7a26 	vfma.f32	s14, s10, s13
 8024b98:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 8024c5c <atanf+0x194>
 8024b9c:	eea7 5a26 	vfma.f32	s10, s14, s13
 8024ba0:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 8024c60 <atanf+0x198>
 8024ba4:	eea5 7a26 	vfma.f32	s14, s10, s13
 8024ba8:	ee27 7a26 	vmul.f32	s14, s14, s13
 8024bac:	eea5 7a86 	vfma.f32	s14, s11, s12
 8024bb0:	ee27 7a87 	vmul.f32	s14, s15, s14
 8024bb4:	d121      	bne.n	8024bfa <atanf+0x132>
 8024bb6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8024bba:	e794      	b.n	8024ae6 <atanf+0x1e>
 8024bbc:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8024bc0:	ee30 7a67 	vsub.f32	s14, s0, s15
 8024bc4:	ee30 0a27 	vadd.f32	s0, s0, s15
 8024bc8:	2301      	movs	r3, #1
 8024bca:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024bce:	e7be      	b.n	8024b4e <atanf+0x86>
 8024bd0:	4b24      	ldr	r3, [pc, #144]	@ (8024c64 <atanf+0x19c>)
 8024bd2:	429c      	cmp	r4, r3
 8024bd4:	d80b      	bhi.n	8024bee <atanf+0x126>
 8024bd6:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 8024bda:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8024bde:	eea0 7a27 	vfma.f32	s14, s0, s15
 8024be2:	2302      	movs	r3, #2
 8024be4:	ee70 6a67 	vsub.f32	s13, s0, s15
 8024be8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8024bec:	e7af      	b.n	8024b4e <atanf+0x86>
 8024bee:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8024bf2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024bf6:	2303      	movs	r3, #3
 8024bf8:	e7a9      	b.n	8024b4e <atanf+0x86>
 8024bfa:	4a1b      	ldr	r2, [pc, #108]	@ (8024c68 <atanf+0x1a0>)
 8024bfc:	491b      	ldr	r1, [pc, #108]	@ (8024c6c <atanf+0x1a4>)
 8024bfe:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8024c02:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8024c06:	edd3 6a00 	vldr	s13, [r3]
 8024c0a:	ee37 7a66 	vsub.f32	s14, s14, s13
 8024c0e:	2d00      	cmp	r5, #0
 8024c10:	ee37 7a67 	vsub.f32	s14, s14, s15
 8024c14:	edd2 7a00 	vldr	s15, [r2]
 8024c18:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8024c1c:	bfb8      	it	lt
 8024c1e:	eef1 7a67 	vneglt.f32	s15, s15
 8024c22:	e760      	b.n	8024ae6 <atanf+0x1e>
 8024c24:	bfc90fdb 	.word	0xbfc90fdb
 8024c28:	3fc90fdb 	.word	0x3fc90fdb
 8024c2c:	3edfffff 	.word	0x3edfffff
 8024c30:	7149f2ca 	.word	0x7149f2ca
 8024c34:	3f97ffff 	.word	0x3f97ffff
 8024c38:	3c8569d7 	.word	0x3c8569d7
 8024c3c:	3d4bda59 	.word	0x3d4bda59
 8024c40:	bd6ef16b 	.word	0xbd6ef16b
 8024c44:	3d886b35 	.word	0x3d886b35
 8024c48:	3dba2e6e 	.word	0x3dba2e6e
 8024c4c:	3e124925 	.word	0x3e124925
 8024c50:	3eaaaaab 	.word	0x3eaaaaab
 8024c54:	bd15a221 	.word	0xbd15a221
 8024c58:	bd9d8795 	.word	0xbd9d8795
 8024c5c:	bde38e38 	.word	0xbde38e38
 8024c60:	be4ccccd 	.word	0xbe4ccccd
 8024c64:	401bffff 	.word	0x401bffff
 8024c68:	08028d04 	.word	0x08028d04
 8024c6c:	08028cf4 	.word	0x08028cf4

08024c70 <fabsf>:
 8024c70:	ee10 3a10 	vmov	r3, s0
 8024c74:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8024c78:	ee00 3a10 	vmov	s0, r3
 8024c7c:	4770      	bx	lr
	...

08024c80 <__kernel_rem_pio2f>:
 8024c80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024c84:	ed2d 8b04 	vpush	{d8-d9}
 8024c88:	b0d9      	sub	sp, #356	@ 0x164
 8024c8a:	4690      	mov	r8, r2
 8024c8c:	9001      	str	r0, [sp, #4]
 8024c8e:	4ab6      	ldr	r2, [pc, #728]	@ (8024f68 <__kernel_rem_pio2f+0x2e8>)
 8024c90:	9866      	ldr	r0, [sp, #408]	@ 0x198
 8024c92:	f118 0f04 	cmn.w	r8, #4
 8024c96:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 8024c9a:	460f      	mov	r7, r1
 8024c9c:	f103 3bff 	add.w	fp, r3, #4294967295
 8024ca0:	db26      	blt.n	8024cf0 <__kernel_rem_pio2f+0x70>
 8024ca2:	f1b8 0203 	subs.w	r2, r8, #3
 8024ca6:	bf48      	it	mi
 8024ca8:	f108 0204 	addmi.w	r2, r8, #4
 8024cac:	10d2      	asrs	r2, r2, #3
 8024cae:	1c55      	adds	r5, r2, #1
 8024cb0:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8024cb2:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 8024f78 <__kernel_rem_pio2f+0x2f8>
 8024cb6:	00e8      	lsls	r0, r5, #3
 8024cb8:	eba2 060b 	sub.w	r6, r2, fp
 8024cbc:	9002      	str	r0, [sp, #8]
 8024cbe:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 8024cc2:	eb0a 0c0b 	add.w	ip, sl, fp
 8024cc6:	ac1c      	add	r4, sp, #112	@ 0x70
 8024cc8:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 8024ccc:	2000      	movs	r0, #0
 8024cce:	4560      	cmp	r0, ip
 8024cd0:	dd10      	ble.n	8024cf4 <__kernel_rem_pio2f+0x74>
 8024cd2:	a91c      	add	r1, sp, #112	@ 0x70
 8024cd4:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 8024cd8:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 8024cdc:	2600      	movs	r6, #0
 8024cde:	4556      	cmp	r6, sl
 8024ce0:	dc24      	bgt.n	8024d2c <__kernel_rem_pio2f+0xac>
 8024ce2:	f8dd e004 	ldr.w	lr, [sp, #4]
 8024ce6:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 8024f78 <__kernel_rem_pio2f+0x2f8>
 8024cea:	4684      	mov	ip, r0
 8024cec:	2400      	movs	r4, #0
 8024cee:	e016      	b.n	8024d1e <__kernel_rem_pio2f+0x9e>
 8024cf0:	2200      	movs	r2, #0
 8024cf2:	e7dc      	b.n	8024cae <__kernel_rem_pio2f+0x2e>
 8024cf4:	42c6      	cmn	r6, r0
 8024cf6:	bf5d      	ittte	pl
 8024cf8:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 8024cfc:	ee07 1a90 	vmovpl	s15, r1
 8024d00:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8024d04:	eef0 7a47 	vmovmi.f32	s15, s14
 8024d08:	ece4 7a01 	vstmia	r4!, {s15}
 8024d0c:	3001      	adds	r0, #1
 8024d0e:	e7de      	b.n	8024cce <__kernel_rem_pio2f+0x4e>
 8024d10:	ecfe 6a01 	vldmia	lr!, {s13}
 8024d14:	ed3c 7a01 	vldmdb	ip!, {s14}
 8024d18:	eee6 7a87 	vfma.f32	s15, s13, s14
 8024d1c:	3401      	adds	r4, #1
 8024d1e:	455c      	cmp	r4, fp
 8024d20:	ddf6      	ble.n	8024d10 <__kernel_rem_pio2f+0x90>
 8024d22:	ece9 7a01 	vstmia	r9!, {s15}
 8024d26:	3601      	adds	r6, #1
 8024d28:	3004      	adds	r0, #4
 8024d2a:	e7d8      	b.n	8024cde <__kernel_rem_pio2f+0x5e>
 8024d2c:	a908      	add	r1, sp, #32
 8024d2e:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8024d32:	9104      	str	r1, [sp, #16]
 8024d34:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8024d36:	eddf 8a8f 	vldr	s17, [pc, #572]	@ 8024f74 <__kernel_rem_pio2f+0x2f4>
 8024d3a:	ed9f 9a8d 	vldr	s18, [pc, #564]	@ 8024f70 <__kernel_rem_pio2f+0x2f0>
 8024d3e:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8024d42:	9203      	str	r2, [sp, #12]
 8024d44:	4654      	mov	r4, sl
 8024d46:	00a2      	lsls	r2, r4, #2
 8024d48:	9205      	str	r2, [sp, #20]
 8024d4a:	aa58      	add	r2, sp, #352	@ 0x160
 8024d4c:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8024d50:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 8024d54:	a944      	add	r1, sp, #272	@ 0x110
 8024d56:	aa08      	add	r2, sp, #32
 8024d58:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 8024d5c:	4694      	mov	ip, r2
 8024d5e:	4626      	mov	r6, r4
 8024d60:	2e00      	cmp	r6, #0
 8024d62:	dc4c      	bgt.n	8024dfe <__kernel_rem_pio2f+0x17e>
 8024d64:	4628      	mov	r0, r5
 8024d66:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8024d6a:	f000 f9f1 	bl	8025150 <scalbnf>
 8024d6e:	eeb0 8a40 	vmov.f32	s16, s0
 8024d72:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 8024d76:	ee28 0a00 	vmul.f32	s0, s16, s0
 8024d7a:	f000 fa4f 	bl	802521c <floorf>
 8024d7e:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 8024d82:	eea0 8a67 	vfms.f32	s16, s0, s15
 8024d86:	2d00      	cmp	r5, #0
 8024d88:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8024d8c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8024d90:	ee17 9a90 	vmov	r9, s15
 8024d94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8024d98:	ee38 8a67 	vsub.f32	s16, s16, s15
 8024d9c:	dd41      	ble.n	8024e22 <__kernel_rem_pio2f+0x1a2>
 8024d9e:	f104 3cff 	add.w	ip, r4, #4294967295
 8024da2:	a908      	add	r1, sp, #32
 8024da4:	f1c5 0e08 	rsb	lr, r5, #8
 8024da8:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 8024dac:	fa46 f00e 	asr.w	r0, r6, lr
 8024db0:	4481      	add	r9, r0
 8024db2:	fa00 f00e 	lsl.w	r0, r0, lr
 8024db6:	1a36      	subs	r6, r6, r0
 8024db8:	f1c5 0007 	rsb	r0, r5, #7
 8024dbc:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 8024dc0:	4106      	asrs	r6, r0
 8024dc2:	2e00      	cmp	r6, #0
 8024dc4:	dd3c      	ble.n	8024e40 <__kernel_rem_pio2f+0x1c0>
 8024dc6:	f04f 0e00 	mov.w	lr, #0
 8024dca:	f109 0901 	add.w	r9, r9, #1
 8024dce:	4670      	mov	r0, lr
 8024dd0:	4574      	cmp	r4, lr
 8024dd2:	dc68      	bgt.n	8024ea6 <__kernel_rem_pio2f+0x226>
 8024dd4:	2d00      	cmp	r5, #0
 8024dd6:	dd03      	ble.n	8024de0 <__kernel_rem_pio2f+0x160>
 8024dd8:	2d01      	cmp	r5, #1
 8024dda:	d074      	beq.n	8024ec6 <__kernel_rem_pio2f+0x246>
 8024ddc:	2d02      	cmp	r5, #2
 8024dde:	d07d      	beq.n	8024edc <__kernel_rem_pio2f+0x25c>
 8024de0:	2e02      	cmp	r6, #2
 8024de2:	d12d      	bne.n	8024e40 <__kernel_rem_pio2f+0x1c0>
 8024de4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8024de8:	ee30 8a48 	vsub.f32	s16, s0, s16
 8024dec:	b340      	cbz	r0, 8024e40 <__kernel_rem_pio2f+0x1c0>
 8024dee:	4628      	mov	r0, r5
 8024df0:	9306      	str	r3, [sp, #24]
 8024df2:	f000 f9ad 	bl	8025150 <scalbnf>
 8024df6:	9b06      	ldr	r3, [sp, #24]
 8024df8:	ee38 8a40 	vsub.f32	s16, s16, s0
 8024dfc:	e020      	b.n	8024e40 <__kernel_rem_pio2f+0x1c0>
 8024dfe:	ee60 7a28 	vmul.f32	s15, s0, s17
 8024e02:	3e01      	subs	r6, #1
 8024e04:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8024e08:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8024e0c:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8024e10:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8024e14:	ecac 0a01 	vstmia	ip!, {s0}
 8024e18:	ed30 0a01 	vldmdb	r0!, {s0}
 8024e1c:	ee37 0a80 	vadd.f32	s0, s15, s0
 8024e20:	e79e      	b.n	8024d60 <__kernel_rem_pio2f+0xe0>
 8024e22:	d105      	bne.n	8024e30 <__kernel_rem_pio2f+0x1b0>
 8024e24:	1e60      	subs	r0, r4, #1
 8024e26:	a908      	add	r1, sp, #32
 8024e28:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 8024e2c:	11f6      	asrs	r6, r6, #7
 8024e2e:	e7c8      	b.n	8024dc2 <__kernel_rem_pio2f+0x142>
 8024e30:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8024e34:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8024e38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024e3c:	da31      	bge.n	8024ea2 <__kernel_rem_pio2f+0x222>
 8024e3e:	2600      	movs	r6, #0
 8024e40:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8024e44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024e48:	f040 8098 	bne.w	8024f7c <__kernel_rem_pio2f+0x2fc>
 8024e4c:	1e60      	subs	r0, r4, #1
 8024e4e:	2200      	movs	r2, #0
 8024e50:	4550      	cmp	r0, sl
 8024e52:	da4b      	bge.n	8024eec <__kernel_rem_pio2f+0x26c>
 8024e54:	2a00      	cmp	r2, #0
 8024e56:	d065      	beq.n	8024f24 <__kernel_rem_pio2f+0x2a4>
 8024e58:	3c01      	subs	r4, #1
 8024e5a:	ab08      	add	r3, sp, #32
 8024e5c:	3d08      	subs	r5, #8
 8024e5e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8024e62:	2b00      	cmp	r3, #0
 8024e64:	d0f8      	beq.n	8024e58 <__kernel_rem_pio2f+0x1d8>
 8024e66:	4628      	mov	r0, r5
 8024e68:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8024e6c:	f000 f970 	bl	8025150 <scalbnf>
 8024e70:	1c63      	adds	r3, r4, #1
 8024e72:	aa44      	add	r2, sp, #272	@ 0x110
 8024e74:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 8024f74 <__kernel_rem_pio2f+0x2f4>
 8024e78:	0099      	lsls	r1, r3, #2
 8024e7a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8024e7e:	4623      	mov	r3, r4
 8024e80:	2b00      	cmp	r3, #0
 8024e82:	f280 80a9 	bge.w	8024fd8 <__kernel_rem_pio2f+0x358>
 8024e86:	4623      	mov	r3, r4
 8024e88:	2b00      	cmp	r3, #0
 8024e8a:	f2c0 80c7 	blt.w	802501c <__kernel_rem_pio2f+0x39c>
 8024e8e:	aa44      	add	r2, sp, #272	@ 0x110
 8024e90:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8024e94:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 8024f6c <__kernel_rem_pio2f+0x2ec>
 8024e98:	eddf 7a37 	vldr	s15, [pc, #220]	@ 8024f78 <__kernel_rem_pio2f+0x2f8>
 8024e9c:	2000      	movs	r0, #0
 8024e9e:	1ae2      	subs	r2, r4, r3
 8024ea0:	e0b1      	b.n	8025006 <__kernel_rem_pio2f+0x386>
 8024ea2:	2602      	movs	r6, #2
 8024ea4:	e78f      	b.n	8024dc6 <__kernel_rem_pio2f+0x146>
 8024ea6:	f852 1b04 	ldr.w	r1, [r2], #4
 8024eaa:	b948      	cbnz	r0, 8024ec0 <__kernel_rem_pio2f+0x240>
 8024eac:	b121      	cbz	r1, 8024eb8 <__kernel_rem_pio2f+0x238>
 8024eae:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8024eb2:	f842 1c04 	str.w	r1, [r2, #-4]
 8024eb6:	2101      	movs	r1, #1
 8024eb8:	f10e 0e01 	add.w	lr, lr, #1
 8024ebc:	4608      	mov	r0, r1
 8024ebe:	e787      	b.n	8024dd0 <__kernel_rem_pio2f+0x150>
 8024ec0:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 8024ec4:	e7f5      	b.n	8024eb2 <__kernel_rem_pio2f+0x232>
 8024ec6:	f104 3cff 	add.w	ip, r4, #4294967295
 8024eca:	aa08      	add	r2, sp, #32
 8024ecc:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8024ed0:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8024ed4:	a908      	add	r1, sp, #32
 8024ed6:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 8024eda:	e781      	b.n	8024de0 <__kernel_rem_pio2f+0x160>
 8024edc:	f104 3cff 	add.w	ip, r4, #4294967295
 8024ee0:	aa08      	add	r2, sp, #32
 8024ee2:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8024ee6:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8024eea:	e7f3      	b.n	8024ed4 <__kernel_rem_pio2f+0x254>
 8024eec:	a908      	add	r1, sp, #32
 8024eee:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 8024ef2:	3801      	subs	r0, #1
 8024ef4:	430a      	orrs	r2, r1
 8024ef6:	e7ab      	b.n	8024e50 <__kernel_rem_pio2f+0x1d0>
 8024ef8:	3201      	adds	r2, #1
 8024efa:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 8024efe:	2e00      	cmp	r6, #0
 8024f00:	d0fa      	beq.n	8024ef8 <__kernel_rem_pio2f+0x278>
 8024f02:	9905      	ldr	r1, [sp, #20]
 8024f04:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 8024f08:	eb0d 0001 	add.w	r0, sp, r1
 8024f0c:	18e6      	adds	r6, r4, r3
 8024f0e:	a91c      	add	r1, sp, #112	@ 0x70
 8024f10:	f104 0c01 	add.w	ip, r4, #1
 8024f14:	384c      	subs	r0, #76	@ 0x4c
 8024f16:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 8024f1a:	4422      	add	r2, r4
 8024f1c:	4562      	cmp	r2, ip
 8024f1e:	da04      	bge.n	8024f2a <__kernel_rem_pio2f+0x2aa>
 8024f20:	4614      	mov	r4, r2
 8024f22:	e710      	b.n	8024d46 <__kernel_rem_pio2f+0xc6>
 8024f24:	9804      	ldr	r0, [sp, #16]
 8024f26:	2201      	movs	r2, #1
 8024f28:	e7e7      	b.n	8024efa <__kernel_rem_pio2f+0x27a>
 8024f2a:	9903      	ldr	r1, [sp, #12]
 8024f2c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8024f30:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 8024f34:	9105      	str	r1, [sp, #20]
 8024f36:	ee07 1a90 	vmov	s15, r1
 8024f3a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8024f3e:	2400      	movs	r4, #0
 8024f40:	ece6 7a01 	vstmia	r6!, {s15}
 8024f44:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 8024f78 <__kernel_rem_pio2f+0x2f8>
 8024f48:	46b1      	mov	r9, r6
 8024f4a:	455c      	cmp	r4, fp
 8024f4c:	dd04      	ble.n	8024f58 <__kernel_rem_pio2f+0x2d8>
 8024f4e:	ece0 7a01 	vstmia	r0!, {s15}
 8024f52:	f10c 0c01 	add.w	ip, ip, #1
 8024f56:	e7e1      	b.n	8024f1c <__kernel_rem_pio2f+0x29c>
 8024f58:	ecfe 6a01 	vldmia	lr!, {s13}
 8024f5c:	ed39 7a01 	vldmdb	r9!, {s14}
 8024f60:	3401      	adds	r4, #1
 8024f62:	eee6 7a87 	vfma.f32	s15, s13, s14
 8024f66:	e7f0      	b.n	8024f4a <__kernel_rem_pio2f+0x2ca>
 8024f68:	08028d40 	.word	0x08028d40
 8024f6c:	08028d14 	.word	0x08028d14
 8024f70:	43800000 	.word	0x43800000
 8024f74:	3b800000 	.word	0x3b800000
 8024f78:	00000000 	.word	0x00000000
 8024f7c:	9b02      	ldr	r3, [sp, #8]
 8024f7e:	eeb0 0a48 	vmov.f32	s0, s16
 8024f82:	eba3 0008 	sub.w	r0, r3, r8
 8024f86:	f000 f8e3 	bl	8025150 <scalbnf>
 8024f8a:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 8024f70 <__kernel_rem_pio2f+0x2f0>
 8024f8e:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8024f92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024f96:	db19      	blt.n	8024fcc <__kernel_rem_pio2f+0x34c>
 8024f98:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 8024f74 <__kernel_rem_pio2f+0x2f4>
 8024f9c:	ee60 7a27 	vmul.f32	s15, s0, s15
 8024fa0:	aa08      	add	r2, sp, #32
 8024fa2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8024fa6:	3508      	adds	r5, #8
 8024fa8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8024fac:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8024fb0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8024fb4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8024fb8:	ee10 3a10 	vmov	r3, s0
 8024fbc:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8024fc0:	ee17 3a90 	vmov	r3, s15
 8024fc4:	3401      	adds	r4, #1
 8024fc6:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8024fca:	e74c      	b.n	8024e66 <__kernel_rem_pio2f+0x1e6>
 8024fcc:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8024fd0:	aa08      	add	r2, sp, #32
 8024fd2:	ee10 3a10 	vmov	r3, s0
 8024fd6:	e7f6      	b.n	8024fc6 <__kernel_rem_pio2f+0x346>
 8024fd8:	a808      	add	r0, sp, #32
 8024fda:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8024fde:	9001      	str	r0, [sp, #4]
 8024fe0:	ee07 0a90 	vmov	s15, r0
 8024fe4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8024fe8:	3b01      	subs	r3, #1
 8024fea:	ee67 7a80 	vmul.f32	s15, s15, s0
 8024fee:	ee20 0a07 	vmul.f32	s0, s0, s14
 8024ff2:	ed62 7a01 	vstmdb	r2!, {s15}
 8024ff6:	e743      	b.n	8024e80 <__kernel_rem_pio2f+0x200>
 8024ff8:	ecfc 6a01 	vldmia	ip!, {s13}
 8024ffc:	ecb5 7a01 	vldmia	r5!, {s14}
 8025000:	eee6 7a87 	vfma.f32	s15, s13, s14
 8025004:	3001      	adds	r0, #1
 8025006:	4550      	cmp	r0, sl
 8025008:	dc01      	bgt.n	802500e <__kernel_rem_pio2f+0x38e>
 802500a:	4290      	cmp	r0, r2
 802500c:	ddf4      	ble.n	8024ff8 <__kernel_rem_pio2f+0x378>
 802500e:	a858      	add	r0, sp, #352	@ 0x160
 8025010:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8025014:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 8025018:	3b01      	subs	r3, #1
 802501a:	e735      	b.n	8024e88 <__kernel_rem_pio2f+0x208>
 802501c:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 802501e:	2b02      	cmp	r3, #2
 8025020:	dc09      	bgt.n	8025036 <__kernel_rem_pio2f+0x3b6>
 8025022:	2b00      	cmp	r3, #0
 8025024:	dc27      	bgt.n	8025076 <__kernel_rem_pio2f+0x3f6>
 8025026:	d040      	beq.n	80250aa <__kernel_rem_pio2f+0x42a>
 8025028:	f009 0007 	and.w	r0, r9, #7
 802502c:	b059      	add	sp, #356	@ 0x164
 802502e:	ecbd 8b04 	vpop	{d8-d9}
 8025032:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025036:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8025038:	2b03      	cmp	r3, #3
 802503a:	d1f5      	bne.n	8025028 <__kernel_rem_pio2f+0x3a8>
 802503c:	aa30      	add	r2, sp, #192	@ 0xc0
 802503e:	1f0b      	subs	r3, r1, #4
 8025040:	4413      	add	r3, r2
 8025042:	461a      	mov	r2, r3
 8025044:	4620      	mov	r0, r4
 8025046:	2800      	cmp	r0, #0
 8025048:	dc50      	bgt.n	80250ec <__kernel_rem_pio2f+0x46c>
 802504a:	4622      	mov	r2, r4
 802504c:	2a01      	cmp	r2, #1
 802504e:	dc5d      	bgt.n	802510c <__kernel_rem_pio2f+0x48c>
 8025050:	ab30      	add	r3, sp, #192	@ 0xc0
 8025052:	ed5f 7a37 	vldr	s15, [pc, #-220]	@ 8024f78 <__kernel_rem_pio2f+0x2f8>
 8025056:	440b      	add	r3, r1
 8025058:	2c01      	cmp	r4, #1
 802505a:	dc67      	bgt.n	802512c <__kernel_rem_pio2f+0x4ac>
 802505c:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 8025060:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 8025064:	2e00      	cmp	r6, #0
 8025066:	d167      	bne.n	8025138 <__kernel_rem_pio2f+0x4b8>
 8025068:	edc7 6a00 	vstr	s13, [r7]
 802506c:	ed87 7a01 	vstr	s14, [r7, #4]
 8025070:	edc7 7a02 	vstr	s15, [r7, #8]
 8025074:	e7d8      	b.n	8025028 <__kernel_rem_pio2f+0x3a8>
 8025076:	ab30      	add	r3, sp, #192	@ 0xc0
 8025078:	ed1f 7a41 	vldr	s14, [pc, #-260]	@ 8024f78 <__kernel_rem_pio2f+0x2f8>
 802507c:	440b      	add	r3, r1
 802507e:	4622      	mov	r2, r4
 8025080:	2a00      	cmp	r2, #0
 8025082:	da24      	bge.n	80250ce <__kernel_rem_pio2f+0x44e>
 8025084:	b34e      	cbz	r6, 80250da <__kernel_rem_pio2f+0x45a>
 8025086:	eef1 7a47 	vneg.f32	s15, s14
 802508a:	edc7 7a00 	vstr	s15, [r7]
 802508e:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 8025092:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8025096:	aa31      	add	r2, sp, #196	@ 0xc4
 8025098:	2301      	movs	r3, #1
 802509a:	429c      	cmp	r4, r3
 802509c:	da20      	bge.n	80250e0 <__kernel_rem_pio2f+0x460>
 802509e:	b10e      	cbz	r6, 80250a4 <__kernel_rem_pio2f+0x424>
 80250a0:	eef1 7a67 	vneg.f32	s15, s15
 80250a4:	edc7 7a01 	vstr	s15, [r7, #4]
 80250a8:	e7be      	b.n	8025028 <__kernel_rem_pio2f+0x3a8>
 80250aa:	ab30      	add	r3, sp, #192	@ 0xc0
 80250ac:	ed5f 7a4e 	vldr	s15, [pc, #-312]	@ 8024f78 <__kernel_rem_pio2f+0x2f8>
 80250b0:	440b      	add	r3, r1
 80250b2:	2c00      	cmp	r4, #0
 80250b4:	da05      	bge.n	80250c2 <__kernel_rem_pio2f+0x442>
 80250b6:	b10e      	cbz	r6, 80250bc <__kernel_rem_pio2f+0x43c>
 80250b8:	eef1 7a67 	vneg.f32	s15, s15
 80250bc:	edc7 7a00 	vstr	s15, [r7]
 80250c0:	e7b2      	b.n	8025028 <__kernel_rem_pio2f+0x3a8>
 80250c2:	ed33 7a01 	vldmdb	r3!, {s14}
 80250c6:	3c01      	subs	r4, #1
 80250c8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80250cc:	e7f1      	b.n	80250b2 <__kernel_rem_pio2f+0x432>
 80250ce:	ed73 7a01 	vldmdb	r3!, {s15}
 80250d2:	3a01      	subs	r2, #1
 80250d4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80250d8:	e7d2      	b.n	8025080 <__kernel_rem_pio2f+0x400>
 80250da:	eef0 7a47 	vmov.f32	s15, s14
 80250de:	e7d4      	b.n	802508a <__kernel_rem_pio2f+0x40a>
 80250e0:	ecb2 7a01 	vldmia	r2!, {s14}
 80250e4:	3301      	adds	r3, #1
 80250e6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80250ea:	e7d6      	b.n	802509a <__kernel_rem_pio2f+0x41a>
 80250ec:	ed72 7a01 	vldmdb	r2!, {s15}
 80250f0:	edd2 6a01 	vldr	s13, [r2, #4]
 80250f4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80250f8:	3801      	subs	r0, #1
 80250fa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80250fe:	ed82 7a00 	vstr	s14, [r2]
 8025102:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8025106:	edc2 7a01 	vstr	s15, [r2, #4]
 802510a:	e79c      	b.n	8025046 <__kernel_rem_pio2f+0x3c6>
 802510c:	ed73 7a01 	vldmdb	r3!, {s15}
 8025110:	edd3 6a01 	vldr	s13, [r3, #4]
 8025114:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8025118:	3a01      	subs	r2, #1
 802511a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802511e:	ed83 7a00 	vstr	s14, [r3]
 8025122:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8025126:	edc3 7a01 	vstr	s15, [r3, #4]
 802512a:	e78f      	b.n	802504c <__kernel_rem_pio2f+0x3cc>
 802512c:	ed33 7a01 	vldmdb	r3!, {s14}
 8025130:	3c01      	subs	r4, #1
 8025132:	ee77 7a87 	vadd.f32	s15, s15, s14
 8025136:	e78f      	b.n	8025058 <__kernel_rem_pio2f+0x3d8>
 8025138:	eef1 6a66 	vneg.f32	s13, s13
 802513c:	eeb1 7a47 	vneg.f32	s14, s14
 8025140:	edc7 6a00 	vstr	s13, [r7]
 8025144:	ed87 7a01 	vstr	s14, [r7, #4]
 8025148:	eef1 7a67 	vneg.f32	s15, s15
 802514c:	e790      	b.n	8025070 <__kernel_rem_pio2f+0x3f0>
 802514e:	bf00      	nop

08025150 <scalbnf>:
 8025150:	ee10 3a10 	vmov	r3, s0
 8025154:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8025158:	d02b      	beq.n	80251b2 <scalbnf+0x62>
 802515a:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 802515e:	d302      	bcc.n	8025166 <scalbnf+0x16>
 8025160:	ee30 0a00 	vadd.f32	s0, s0, s0
 8025164:	4770      	bx	lr
 8025166:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 802516a:	d123      	bne.n	80251b4 <scalbnf+0x64>
 802516c:	4b24      	ldr	r3, [pc, #144]	@ (8025200 <scalbnf+0xb0>)
 802516e:	eddf 7a25 	vldr	s15, [pc, #148]	@ 8025204 <scalbnf+0xb4>
 8025172:	4298      	cmp	r0, r3
 8025174:	ee20 0a27 	vmul.f32	s0, s0, s15
 8025178:	db17      	blt.n	80251aa <scalbnf+0x5a>
 802517a:	ee10 3a10 	vmov	r3, s0
 802517e:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8025182:	3a19      	subs	r2, #25
 8025184:	f24c 3150 	movw	r1, #50000	@ 0xc350
 8025188:	4288      	cmp	r0, r1
 802518a:	dd15      	ble.n	80251b8 <scalbnf+0x68>
 802518c:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 8025208 <scalbnf+0xb8>
 8025190:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 802520c <scalbnf+0xbc>
 8025194:	ee10 3a10 	vmov	r3, s0
 8025198:	eeb0 7a67 	vmov.f32	s14, s15
 802519c:	2b00      	cmp	r3, #0
 802519e:	bfb8      	it	lt
 80251a0:	eef0 7a66 	vmovlt.f32	s15, s13
 80251a4:	ee27 0a87 	vmul.f32	s0, s15, s14
 80251a8:	4770      	bx	lr
 80251aa:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8025210 <scalbnf+0xc0>
 80251ae:	ee27 0a80 	vmul.f32	s0, s15, s0
 80251b2:	4770      	bx	lr
 80251b4:	0dd2      	lsrs	r2, r2, #23
 80251b6:	e7e5      	b.n	8025184 <scalbnf+0x34>
 80251b8:	4410      	add	r0, r2
 80251ba:	28fe      	cmp	r0, #254	@ 0xfe
 80251bc:	dce6      	bgt.n	802518c <scalbnf+0x3c>
 80251be:	2800      	cmp	r0, #0
 80251c0:	dd06      	ble.n	80251d0 <scalbnf+0x80>
 80251c2:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 80251c6:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80251ca:	ee00 3a10 	vmov	s0, r3
 80251ce:	4770      	bx	lr
 80251d0:	f110 0f16 	cmn.w	r0, #22
 80251d4:	da09      	bge.n	80251ea <scalbnf+0x9a>
 80251d6:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8025210 <scalbnf+0xc0>
 80251da:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 8025214 <scalbnf+0xc4>
 80251de:	ee10 3a10 	vmov	r3, s0
 80251e2:	eeb0 7a67 	vmov.f32	s14, s15
 80251e6:	2b00      	cmp	r3, #0
 80251e8:	e7d9      	b.n	802519e <scalbnf+0x4e>
 80251ea:	3019      	adds	r0, #25
 80251ec:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 80251f0:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80251f4:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 8025218 <scalbnf+0xc8>
 80251f8:	ee07 3a90 	vmov	s15, r3
 80251fc:	e7d7      	b.n	80251ae <scalbnf+0x5e>
 80251fe:	bf00      	nop
 8025200:	ffff3cb0 	.word	0xffff3cb0
 8025204:	4c000000 	.word	0x4c000000
 8025208:	7149f2ca 	.word	0x7149f2ca
 802520c:	f149f2ca 	.word	0xf149f2ca
 8025210:	0da24260 	.word	0x0da24260
 8025214:	8da24260 	.word	0x8da24260
 8025218:	33000000 	.word	0x33000000

0802521c <floorf>:
 802521c:	ee10 3a10 	vmov	r3, s0
 8025220:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8025224:	3a7f      	subs	r2, #127	@ 0x7f
 8025226:	2a16      	cmp	r2, #22
 8025228:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 802522c:	dc2b      	bgt.n	8025286 <floorf+0x6a>
 802522e:	2a00      	cmp	r2, #0
 8025230:	da12      	bge.n	8025258 <floorf+0x3c>
 8025232:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8025298 <floorf+0x7c>
 8025236:	ee30 0a27 	vadd.f32	s0, s0, s15
 802523a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802523e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025242:	dd06      	ble.n	8025252 <floorf+0x36>
 8025244:	2b00      	cmp	r3, #0
 8025246:	da24      	bge.n	8025292 <floorf+0x76>
 8025248:	2900      	cmp	r1, #0
 802524a:	4b14      	ldr	r3, [pc, #80]	@ (802529c <floorf+0x80>)
 802524c:	bf08      	it	eq
 802524e:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 8025252:	ee00 3a10 	vmov	s0, r3
 8025256:	4770      	bx	lr
 8025258:	4911      	ldr	r1, [pc, #68]	@ (80252a0 <floorf+0x84>)
 802525a:	4111      	asrs	r1, r2
 802525c:	420b      	tst	r3, r1
 802525e:	d0fa      	beq.n	8025256 <floorf+0x3a>
 8025260:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 8025298 <floorf+0x7c>
 8025264:	ee30 0a27 	vadd.f32	s0, s0, s15
 8025268:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802526c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025270:	ddef      	ble.n	8025252 <floorf+0x36>
 8025272:	2b00      	cmp	r3, #0
 8025274:	bfbe      	ittt	lt
 8025276:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 802527a:	fa40 f202 	asrlt.w	r2, r0, r2
 802527e:	189b      	addlt	r3, r3, r2
 8025280:	ea23 0301 	bic.w	r3, r3, r1
 8025284:	e7e5      	b.n	8025252 <floorf+0x36>
 8025286:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 802528a:	d3e4      	bcc.n	8025256 <floorf+0x3a>
 802528c:	ee30 0a00 	vadd.f32	s0, s0, s0
 8025290:	4770      	bx	lr
 8025292:	2300      	movs	r3, #0
 8025294:	e7dd      	b.n	8025252 <floorf+0x36>
 8025296:	bf00      	nop
 8025298:	7149f2ca 	.word	0x7149f2ca
 802529c:	bf800000 	.word	0xbf800000
 80252a0:	007fffff 	.word	0x007fffff

080252a4 <abort>:
 80252a4:	b508      	push	{r3, lr}
 80252a6:	2006      	movs	r0, #6
 80252a8:	f000 fa3c 	bl	8025724 <raise>
 80252ac:	2001      	movs	r0, #1
 80252ae:	f7dc fa1f 	bl	80016f0 <_exit>
	...

080252b4 <__assert_func>:
 80252b4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80252b6:	4614      	mov	r4, r2
 80252b8:	461a      	mov	r2, r3
 80252ba:	4b09      	ldr	r3, [pc, #36]	@ (80252e0 <__assert_func+0x2c>)
 80252bc:	681b      	ldr	r3, [r3, #0]
 80252be:	4605      	mov	r5, r0
 80252c0:	68d8      	ldr	r0, [r3, #12]
 80252c2:	b14c      	cbz	r4, 80252d8 <__assert_func+0x24>
 80252c4:	4b07      	ldr	r3, [pc, #28]	@ (80252e4 <__assert_func+0x30>)
 80252c6:	9100      	str	r1, [sp, #0]
 80252c8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80252cc:	4906      	ldr	r1, [pc, #24]	@ (80252e8 <__assert_func+0x34>)
 80252ce:	462b      	mov	r3, r5
 80252d0:	f000 f984 	bl	80255dc <fiprintf>
 80252d4:	f7ff ffe6 	bl	80252a4 <abort>
 80252d8:	4b04      	ldr	r3, [pc, #16]	@ (80252ec <__assert_func+0x38>)
 80252da:	461c      	mov	r4, r3
 80252dc:	e7f3      	b.n	80252c6 <__assert_func+0x12>
 80252de:	bf00      	nop
 80252e0:	20000110 	.word	0x20000110
 80252e4:	08027252 	.word	0x08027252
 80252e8:	0802725f 	.word	0x0802725f
 80252ec:	0802728d 	.word	0x0802728d

080252f0 <atexit>:
 80252f0:	2300      	movs	r3, #0
 80252f2:	4601      	mov	r1, r0
 80252f4:	461a      	mov	r2, r3
 80252f6:	4618      	mov	r0, r3
 80252f8:	f000 bac2 	b.w	8025880 <__register_exitproc>

080252fc <malloc>:
 80252fc:	4b02      	ldr	r3, [pc, #8]	@ (8025308 <malloc+0xc>)
 80252fe:	4601      	mov	r1, r0
 8025300:	6818      	ldr	r0, [r3, #0]
 8025302:	f000 b82d 	b.w	8025360 <_malloc_r>
 8025306:	bf00      	nop
 8025308:	20000110 	.word	0x20000110

0802530c <free>:
 802530c:	4b02      	ldr	r3, [pc, #8]	@ (8025318 <free+0xc>)
 802530e:	4601      	mov	r1, r0
 8025310:	6818      	ldr	r0, [r3, #0]
 8025312:	f000 bb11 	b.w	8025938 <_free_r>
 8025316:	bf00      	nop
 8025318:	20000110 	.word	0x20000110

0802531c <sbrk_aligned>:
 802531c:	b570      	push	{r4, r5, r6, lr}
 802531e:	4e0f      	ldr	r6, [pc, #60]	@ (802535c <sbrk_aligned+0x40>)
 8025320:	460c      	mov	r4, r1
 8025322:	6831      	ldr	r1, [r6, #0]
 8025324:	4605      	mov	r5, r0
 8025326:	b911      	cbnz	r1, 802532e <sbrk_aligned+0x12>
 8025328:	f000 fa4c 	bl	80257c4 <_sbrk_r>
 802532c:	6030      	str	r0, [r6, #0]
 802532e:	4621      	mov	r1, r4
 8025330:	4628      	mov	r0, r5
 8025332:	f000 fa47 	bl	80257c4 <_sbrk_r>
 8025336:	1c43      	adds	r3, r0, #1
 8025338:	d103      	bne.n	8025342 <sbrk_aligned+0x26>
 802533a:	f04f 34ff 	mov.w	r4, #4294967295
 802533e:	4620      	mov	r0, r4
 8025340:	bd70      	pop	{r4, r5, r6, pc}
 8025342:	1cc4      	adds	r4, r0, #3
 8025344:	f024 0403 	bic.w	r4, r4, #3
 8025348:	42a0      	cmp	r0, r4
 802534a:	d0f8      	beq.n	802533e <sbrk_aligned+0x22>
 802534c:	1a21      	subs	r1, r4, r0
 802534e:	4628      	mov	r0, r5
 8025350:	f000 fa38 	bl	80257c4 <_sbrk_r>
 8025354:	3001      	adds	r0, #1
 8025356:	d1f2      	bne.n	802533e <sbrk_aligned+0x22>
 8025358:	e7ef      	b.n	802533a <sbrk_aligned+0x1e>
 802535a:	bf00      	nop
 802535c:	20015c94 	.word	0x20015c94

08025360 <_malloc_r>:
 8025360:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025364:	1ccd      	adds	r5, r1, #3
 8025366:	f025 0503 	bic.w	r5, r5, #3
 802536a:	3508      	adds	r5, #8
 802536c:	2d0c      	cmp	r5, #12
 802536e:	bf38      	it	cc
 8025370:	250c      	movcc	r5, #12
 8025372:	2d00      	cmp	r5, #0
 8025374:	4606      	mov	r6, r0
 8025376:	db01      	blt.n	802537c <_malloc_r+0x1c>
 8025378:	42a9      	cmp	r1, r5
 802537a:	d904      	bls.n	8025386 <_malloc_r+0x26>
 802537c:	230c      	movs	r3, #12
 802537e:	6033      	str	r3, [r6, #0]
 8025380:	2000      	movs	r0, #0
 8025382:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025386:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 802545c <_malloc_r+0xfc>
 802538a:	f000 f869 	bl	8025460 <__malloc_lock>
 802538e:	f8d8 3000 	ldr.w	r3, [r8]
 8025392:	461c      	mov	r4, r3
 8025394:	bb44      	cbnz	r4, 80253e8 <_malloc_r+0x88>
 8025396:	4629      	mov	r1, r5
 8025398:	4630      	mov	r0, r6
 802539a:	f7ff ffbf 	bl	802531c <sbrk_aligned>
 802539e:	1c43      	adds	r3, r0, #1
 80253a0:	4604      	mov	r4, r0
 80253a2:	d158      	bne.n	8025456 <_malloc_r+0xf6>
 80253a4:	f8d8 4000 	ldr.w	r4, [r8]
 80253a8:	4627      	mov	r7, r4
 80253aa:	2f00      	cmp	r7, #0
 80253ac:	d143      	bne.n	8025436 <_malloc_r+0xd6>
 80253ae:	2c00      	cmp	r4, #0
 80253b0:	d04b      	beq.n	802544a <_malloc_r+0xea>
 80253b2:	6823      	ldr	r3, [r4, #0]
 80253b4:	4639      	mov	r1, r7
 80253b6:	4630      	mov	r0, r6
 80253b8:	eb04 0903 	add.w	r9, r4, r3
 80253bc:	f000 fa02 	bl	80257c4 <_sbrk_r>
 80253c0:	4581      	cmp	r9, r0
 80253c2:	d142      	bne.n	802544a <_malloc_r+0xea>
 80253c4:	6821      	ldr	r1, [r4, #0]
 80253c6:	1a6d      	subs	r5, r5, r1
 80253c8:	4629      	mov	r1, r5
 80253ca:	4630      	mov	r0, r6
 80253cc:	f7ff ffa6 	bl	802531c <sbrk_aligned>
 80253d0:	3001      	adds	r0, #1
 80253d2:	d03a      	beq.n	802544a <_malloc_r+0xea>
 80253d4:	6823      	ldr	r3, [r4, #0]
 80253d6:	442b      	add	r3, r5
 80253d8:	6023      	str	r3, [r4, #0]
 80253da:	f8d8 3000 	ldr.w	r3, [r8]
 80253de:	685a      	ldr	r2, [r3, #4]
 80253e0:	bb62      	cbnz	r2, 802543c <_malloc_r+0xdc>
 80253e2:	f8c8 7000 	str.w	r7, [r8]
 80253e6:	e00f      	b.n	8025408 <_malloc_r+0xa8>
 80253e8:	6822      	ldr	r2, [r4, #0]
 80253ea:	1b52      	subs	r2, r2, r5
 80253ec:	d420      	bmi.n	8025430 <_malloc_r+0xd0>
 80253ee:	2a0b      	cmp	r2, #11
 80253f0:	d917      	bls.n	8025422 <_malloc_r+0xc2>
 80253f2:	1961      	adds	r1, r4, r5
 80253f4:	42a3      	cmp	r3, r4
 80253f6:	6025      	str	r5, [r4, #0]
 80253f8:	bf18      	it	ne
 80253fa:	6059      	strne	r1, [r3, #4]
 80253fc:	6863      	ldr	r3, [r4, #4]
 80253fe:	bf08      	it	eq
 8025400:	f8c8 1000 	streq.w	r1, [r8]
 8025404:	5162      	str	r2, [r4, r5]
 8025406:	604b      	str	r3, [r1, #4]
 8025408:	4630      	mov	r0, r6
 802540a:	f000 f82f 	bl	802546c <__malloc_unlock>
 802540e:	f104 000b 	add.w	r0, r4, #11
 8025412:	1d23      	adds	r3, r4, #4
 8025414:	f020 0007 	bic.w	r0, r0, #7
 8025418:	1ac2      	subs	r2, r0, r3
 802541a:	bf1c      	itt	ne
 802541c:	1a1b      	subne	r3, r3, r0
 802541e:	50a3      	strne	r3, [r4, r2]
 8025420:	e7af      	b.n	8025382 <_malloc_r+0x22>
 8025422:	6862      	ldr	r2, [r4, #4]
 8025424:	42a3      	cmp	r3, r4
 8025426:	bf0c      	ite	eq
 8025428:	f8c8 2000 	streq.w	r2, [r8]
 802542c:	605a      	strne	r2, [r3, #4]
 802542e:	e7eb      	b.n	8025408 <_malloc_r+0xa8>
 8025430:	4623      	mov	r3, r4
 8025432:	6864      	ldr	r4, [r4, #4]
 8025434:	e7ae      	b.n	8025394 <_malloc_r+0x34>
 8025436:	463c      	mov	r4, r7
 8025438:	687f      	ldr	r7, [r7, #4]
 802543a:	e7b6      	b.n	80253aa <_malloc_r+0x4a>
 802543c:	461a      	mov	r2, r3
 802543e:	685b      	ldr	r3, [r3, #4]
 8025440:	42a3      	cmp	r3, r4
 8025442:	d1fb      	bne.n	802543c <_malloc_r+0xdc>
 8025444:	2300      	movs	r3, #0
 8025446:	6053      	str	r3, [r2, #4]
 8025448:	e7de      	b.n	8025408 <_malloc_r+0xa8>
 802544a:	230c      	movs	r3, #12
 802544c:	6033      	str	r3, [r6, #0]
 802544e:	4630      	mov	r0, r6
 8025450:	f000 f80c 	bl	802546c <__malloc_unlock>
 8025454:	e794      	b.n	8025380 <_malloc_r+0x20>
 8025456:	6005      	str	r5, [r0, #0]
 8025458:	e7d6      	b.n	8025408 <_malloc_r+0xa8>
 802545a:	bf00      	nop
 802545c:	20015c98 	.word	0x20015c98

08025460 <__malloc_lock>:
 8025460:	4801      	ldr	r0, [pc, #4]	@ (8025468 <__malloc_lock+0x8>)
 8025462:	f000 b9fc 	b.w	802585e <__retarget_lock_acquire_recursive>
 8025466:	bf00      	nop
 8025468:	20015ddc 	.word	0x20015ddc

0802546c <__malloc_unlock>:
 802546c:	4801      	ldr	r0, [pc, #4]	@ (8025474 <__malloc_unlock+0x8>)
 802546e:	f000 b9f7 	b.w	8025860 <__retarget_lock_release_recursive>
 8025472:	bf00      	nop
 8025474:	20015ddc 	.word	0x20015ddc

08025478 <__cxa_atexit>:
 8025478:	b510      	push	{r4, lr}
 802547a:	4604      	mov	r4, r0
 802547c:	4804      	ldr	r0, [pc, #16]	@ (8025490 <__cxa_atexit+0x18>)
 802547e:	4613      	mov	r3, r2
 8025480:	b120      	cbz	r0, 802548c <__cxa_atexit+0x14>
 8025482:	460a      	mov	r2, r1
 8025484:	2002      	movs	r0, #2
 8025486:	4621      	mov	r1, r4
 8025488:	f000 f9fa 	bl	8025880 <__register_exitproc>
 802548c:	bd10      	pop	{r4, pc}
 802548e:	bf00      	nop
 8025490:	08025881 	.word	0x08025881

08025494 <std>:
 8025494:	2300      	movs	r3, #0
 8025496:	b510      	push	{r4, lr}
 8025498:	4604      	mov	r4, r0
 802549a:	e9c0 3300 	strd	r3, r3, [r0]
 802549e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80254a2:	6083      	str	r3, [r0, #8]
 80254a4:	8181      	strh	r1, [r0, #12]
 80254a6:	6643      	str	r3, [r0, #100]	@ 0x64
 80254a8:	81c2      	strh	r2, [r0, #14]
 80254aa:	6183      	str	r3, [r0, #24]
 80254ac:	4619      	mov	r1, r3
 80254ae:	2208      	movs	r2, #8
 80254b0:	305c      	adds	r0, #92	@ 0x5c
 80254b2:	f000 f906 	bl	80256c2 <memset>
 80254b6:	4b0d      	ldr	r3, [pc, #52]	@ (80254ec <std+0x58>)
 80254b8:	6263      	str	r3, [r4, #36]	@ 0x24
 80254ba:	4b0d      	ldr	r3, [pc, #52]	@ (80254f0 <std+0x5c>)
 80254bc:	62a3      	str	r3, [r4, #40]	@ 0x28
 80254be:	4b0d      	ldr	r3, [pc, #52]	@ (80254f4 <std+0x60>)
 80254c0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80254c2:	4b0d      	ldr	r3, [pc, #52]	@ (80254f8 <std+0x64>)
 80254c4:	6323      	str	r3, [r4, #48]	@ 0x30
 80254c6:	4b0d      	ldr	r3, [pc, #52]	@ (80254fc <std+0x68>)
 80254c8:	6224      	str	r4, [r4, #32]
 80254ca:	429c      	cmp	r4, r3
 80254cc:	d006      	beq.n	80254dc <std+0x48>
 80254ce:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80254d2:	4294      	cmp	r4, r2
 80254d4:	d002      	beq.n	80254dc <std+0x48>
 80254d6:	33d0      	adds	r3, #208	@ 0xd0
 80254d8:	429c      	cmp	r4, r3
 80254da:	d105      	bne.n	80254e8 <std+0x54>
 80254dc:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80254e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80254e4:	f000 b9ba 	b.w	802585c <__retarget_lock_init_recursive>
 80254e8:	bd10      	pop	{r4, pc}
 80254ea:	bf00      	nop
 80254ec:	0802563d 	.word	0x0802563d
 80254f0:	0802565f 	.word	0x0802565f
 80254f4:	08025697 	.word	0x08025697
 80254f8:	080256bb 	.word	0x080256bb
 80254fc:	20015c9c 	.word	0x20015c9c

08025500 <stdio_exit_handler>:
 8025500:	4a02      	ldr	r2, [pc, #8]	@ (802550c <stdio_exit_handler+0xc>)
 8025502:	4903      	ldr	r1, [pc, #12]	@ (8025510 <stdio_exit_handler+0x10>)
 8025504:	4803      	ldr	r0, [pc, #12]	@ (8025514 <stdio_exit_handler+0x14>)
 8025506:	f000 b87b 	b.w	8025600 <_fwalk_sglue>
 802550a:	bf00      	nop
 802550c:	20000104 	.word	0x20000104
 8025510:	08026071 	.word	0x08026071
 8025514:	20000114 	.word	0x20000114

08025518 <cleanup_stdio>:
 8025518:	6841      	ldr	r1, [r0, #4]
 802551a:	4b0c      	ldr	r3, [pc, #48]	@ (802554c <cleanup_stdio+0x34>)
 802551c:	4299      	cmp	r1, r3
 802551e:	b510      	push	{r4, lr}
 8025520:	4604      	mov	r4, r0
 8025522:	d001      	beq.n	8025528 <cleanup_stdio+0x10>
 8025524:	f000 fda4 	bl	8026070 <_fflush_r>
 8025528:	68a1      	ldr	r1, [r4, #8]
 802552a:	4b09      	ldr	r3, [pc, #36]	@ (8025550 <cleanup_stdio+0x38>)
 802552c:	4299      	cmp	r1, r3
 802552e:	d002      	beq.n	8025536 <cleanup_stdio+0x1e>
 8025530:	4620      	mov	r0, r4
 8025532:	f000 fd9d 	bl	8026070 <_fflush_r>
 8025536:	68e1      	ldr	r1, [r4, #12]
 8025538:	4b06      	ldr	r3, [pc, #24]	@ (8025554 <cleanup_stdio+0x3c>)
 802553a:	4299      	cmp	r1, r3
 802553c:	d004      	beq.n	8025548 <cleanup_stdio+0x30>
 802553e:	4620      	mov	r0, r4
 8025540:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025544:	f000 bd94 	b.w	8026070 <_fflush_r>
 8025548:	bd10      	pop	{r4, pc}
 802554a:	bf00      	nop
 802554c:	20015c9c 	.word	0x20015c9c
 8025550:	20015d04 	.word	0x20015d04
 8025554:	20015d6c 	.word	0x20015d6c

08025558 <global_stdio_init.part.0>:
 8025558:	b510      	push	{r4, lr}
 802555a:	4b0b      	ldr	r3, [pc, #44]	@ (8025588 <global_stdio_init.part.0+0x30>)
 802555c:	4c0b      	ldr	r4, [pc, #44]	@ (802558c <global_stdio_init.part.0+0x34>)
 802555e:	4a0c      	ldr	r2, [pc, #48]	@ (8025590 <global_stdio_init.part.0+0x38>)
 8025560:	601a      	str	r2, [r3, #0]
 8025562:	4620      	mov	r0, r4
 8025564:	2200      	movs	r2, #0
 8025566:	2104      	movs	r1, #4
 8025568:	f7ff ff94 	bl	8025494 <std>
 802556c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8025570:	2201      	movs	r2, #1
 8025572:	2109      	movs	r1, #9
 8025574:	f7ff ff8e 	bl	8025494 <std>
 8025578:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 802557c:	2202      	movs	r2, #2
 802557e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025582:	2112      	movs	r1, #18
 8025584:	f7ff bf86 	b.w	8025494 <std>
 8025588:	20015dd4 	.word	0x20015dd4
 802558c:	20015c9c 	.word	0x20015c9c
 8025590:	08025501 	.word	0x08025501

08025594 <__sfp_lock_acquire>:
 8025594:	4801      	ldr	r0, [pc, #4]	@ (802559c <__sfp_lock_acquire+0x8>)
 8025596:	f000 b962 	b.w	802585e <__retarget_lock_acquire_recursive>
 802559a:	bf00      	nop
 802559c:	20015dde 	.word	0x20015dde

080255a0 <__sfp_lock_release>:
 80255a0:	4801      	ldr	r0, [pc, #4]	@ (80255a8 <__sfp_lock_release+0x8>)
 80255a2:	f000 b95d 	b.w	8025860 <__retarget_lock_release_recursive>
 80255a6:	bf00      	nop
 80255a8:	20015dde 	.word	0x20015dde

080255ac <__sinit>:
 80255ac:	b510      	push	{r4, lr}
 80255ae:	4604      	mov	r4, r0
 80255b0:	f7ff fff0 	bl	8025594 <__sfp_lock_acquire>
 80255b4:	6a23      	ldr	r3, [r4, #32]
 80255b6:	b11b      	cbz	r3, 80255c0 <__sinit+0x14>
 80255b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80255bc:	f7ff bff0 	b.w	80255a0 <__sfp_lock_release>
 80255c0:	4b04      	ldr	r3, [pc, #16]	@ (80255d4 <__sinit+0x28>)
 80255c2:	6223      	str	r3, [r4, #32]
 80255c4:	4b04      	ldr	r3, [pc, #16]	@ (80255d8 <__sinit+0x2c>)
 80255c6:	681b      	ldr	r3, [r3, #0]
 80255c8:	2b00      	cmp	r3, #0
 80255ca:	d1f5      	bne.n	80255b8 <__sinit+0xc>
 80255cc:	f7ff ffc4 	bl	8025558 <global_stdio_init.part.0>
 80255d0:	e7f2      	b.n	80255b8 <__sinit+0xc>
 80255d2:	bf00      	nop
 80255d4:	08025519 	.word	0x08025519
 80255d8:	20015dd4 	.word	0x20015dd4

080255dc <fiprintf>:
 80255dc:	b40e      	push	{r1, r2, r3}
 80255de:	b503      	push	{r0, r1, lr}
 80255e0:	4601      	mov	r1, r0
 80255e2:	ab03      	add	r3, sp, #12
 80255e4:	4805      	ldr	r0, [pc, #20]	@ (80255fc <fiprintf+0x20>)
 80255e6:	f853 2b04 	ldr.w	r2, [r3], #4
 80255ea:	6800      	ldr	r0, [r0, #0]
 80255ec:	9301      	str	r3, [sp, #4]
 80255ee:	f000 fa17 	bl	8025a20 <_vfiprintf_r>
 80255f2:	b002      	add	sp, #8
 80255f4:	f85d eb04 	ldr.w	lr, [sp], #4
 80255f8:	b003      	add	sp, #12
 80255fa:	4770      	bx	lr
 80255fc:	20000110 	.word	0x20000110

08025600 <_fwalk_sglue>:
 8025600:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025604:	4607      	mov	r7, r0
 8025606:	4688      	mov	r8, r1
 8025608:	4614      	mov	r4, r2
 802560a:	2600      	movs	r6, #0
 802560c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8025610:	f1b9 0901 	subs.w	r9, r9, #1
 8025614:	d505      	bpl.n	8025622 <_fwalk_sglue+0x22>
 8025616:	6824      	ldr	r4, [r4, #0]
 8025618:	2c00      	cmp	r4, #0
 802561a:	d1f7      	bne.n	802560c <_fwalk_sglue+0xc>
 802561c:	4630      	mov	r0, r6
 802561e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025622:	89ab      	ldrh	r3, [r5, #12]
 8025624:	2b01      	cmp	r3, #1
 8025626:	d907      	bls.n	8025638 <_fwalk_sglue+0x38>
 8025628:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802562c:	3301      	adds	r3, #1
 802562e:	d003      	beq.n	8025638 <_fwalk_sglue+0x38>
 8025630:	4629      	mov	r1, r5
 8025632:	4638      	mov	r0, r7
 8025634:	47c0      	blx	r8
 8025636:	4306      	orrs	r6, r0
 8025638:	3568      	adds	r5, #104	@ 0x68
 802563a:	e7e9      	b.n	8025610 <_fwalk_sglue+0x10>

0802563c <__sread>:
 802563c:	b510      	push	{r4, lr}
 802563e:	460c      	mov	r4, r1
 8025640:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025644:	f000 f898 	bl	8025778 <_read_r>
 8025648:	2800      	cmp	r0, #0
 802564a:	bfab      	itete	ge
 802564c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 802564e:	89a3      	ldrhlt	r3, [r4, #12]
 8025650:	181b      	addge	r3, r3, r0
 8025652:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8025656:	bfac      	ite	ge
 8025658:	6563      	strge	r3, [r4, #84]	@ 0x54
 802565a:	81a3      	strhlt	r3, [r4, #12]
 802565c:	bd10      	pop	{r4, pc}

0802565e <__swrite>:
 802565e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025662:	461f      	mov	r7, r3
 8025664:	898b      	ldrh	r3, [r1, #12]
 8025666:	05db      	lsls	r3, r3, #23
 8025668:	4605      	mov	r5, r0
 802566a:	460c      	mov	r4, r1
 802566c:	4616      	mov	r6, r2
 802566e:	d505      	bpl.n	802567c <__swrite+0x1e>
 8025670:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025674:	2302      	movs	r3, #2
 8025676:	2200      	movs	r2, #0
 8025678:	f000 f86c 	bl	8025754 <_lseek_r>
 802567c:	89a3      	ldrh	r3, [r4, #12]
 802567e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8025682:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8025686:	81a3      	strh	r3, [r4, #12]
 8025688:	4632      	mov	r2, r6
 802568a:	463b      	mov	r3, r7
 802568c:	4628      	mov	r0, r5
 802568e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8025692:	f000 b8a7 	b.w	80257e4 <_write_r>

08025696 <__sseek>:
 8025696:	b510      	push	{r4, lr}
 8025698:	460c      	mov	r4, r1
 802569a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802569e:	f000 f859 	bl	8025754 <_lseek_r>
 80256a2:	1c43      	adds	r3, r0, #1
 80256a4:	89a3      	ldrh	r3, [r4, #12]
 80256a6:	bf15      	itete	ne
 80256a8:	6560      	strne	r0, [r4, #84]	@ 0x54
 80256aa:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80256ae:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80256b2:	81a3      	strheq	r3, [r4, #12]
 80256b4:	bf18      	it	ne
 80256b6:	81a3      	strhne	r3, [r4, #12]
 80256b8:	bd10      	pop	{r4, pc}

080256ba <__sclose>:
 80256ba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80256be:	f000 b839 	b.w	8025734 <_close_r>

080256c2 <memset>:
 80256c2:	4402      	add	r2, r0
 80256c4:	4603      	mov	r3, r0
 80256c6:	4293      	cmp	r3, r2
 80256c8:	d100      	bne.n	80256cc <memset+0xa>
 80256ca:	4770      	bx	lr
 80256cc:	f803 1b01 	strb.w	r1, [r3], #1
 80256d0:	e7f9      	b.n	80256c6 <memset+0x4>

080256d2 <_raise_r>:
 80256d2:	291f      	cmp	r1, #31
 80256d4:	b538      	push	{r3, r4, r5, lr}
 80256d6:	4605      	mov	r5, r0
 80256d8:	460c      	mov	r4, r1
 80256da:	d904      	bls.n	80256e6 <_raise_r+0x14>
 80256dc:	2316      	movs	r3, #22
 80256de:	6003      	str	r3, [r0, #0]
 80256e0:	f04f 30ff 	mov.w	r0, #4294967295
 80256e4:	bd38      	pop	{r3, r4, r5, pc}
 80256e6:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80256e8:	b112      	cbz	r2, 80256f0 <_raise_r+0x1e>
 80256ea:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80256ee:	b94b      	cbnz	r3, 8025704 <_raise_r+0x32>
 80256f0:	4628      	mov	r0, r5
 80256f2:	f000 f865 	bl	80257c0 <_getpid_r>
 80256f6:	4622      	mov	r2, r4
 80256f8:	4601      	mov	r1, r0
 80256fa:	4628      	mov	r0, r5
 80256fc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8025700:	f000 b84c 	b.w	802579c <_kill_r>
 8025704:	2b01      	cmp	r3, #1
 8025706:	d00a      	beq.n	802571e <_raise_r+0x4c>
 8025708:	1c59      	adds	r1, r3, #1
 802570a:	d103      	bne.n	8025714 <_raise_r+0x42>
 802570c:	2316      	movs	r3, #22
 802570e:	6003      	str	r3, [r0, #0]
 8025710:	2001      	movs	r0, #1
 8025712:	e7e7      	b.n	80256e4 <_raise_r+0x12>
 8025714:	2100      	movs	r1, #0
 8025716:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 802571a:	4620      	mov	r0, r4
 802571c:	4798      	blx	r3
 802571e:	2000      	movs	r0, #0
 8025720:	e7e0      	b.n	80256e4 <_raise_r+0x12>
	...

08025724 <raise>:
 8025724:	4b02      	ldr	r3, [pc, #8]	@ (8025730 <raise+0xc>)
 8025726:	4601      	mov	r1, r0
 8025728:	6818      	ldr	r0, [r3, #0]
 802572a:	f7ff bfd2 	b.w	80256d2 <_raise_r>
 802572e:	bf00      	nop
 8025730:	20000110 	.word	0x20000110

08025734 <_close_r>:
 8025734:	b538      	push	{r3, r4, r5, lr}
 8025736:	4d06      	ldr	r5, [pc, #24]	@ (8025750 <_close_r+0x1c>)
 8025738:	2300      	movs	r3, #0
 802573a:	4604      	mov	r4, r0
 802573c:	4608      	mov	r0, r1
 802573e:	602b      	str	r3, [r5, #0]
 8025740:	f7db fff8 	bl	8001734 <_close>
 8025744:	1c43      	adds	r3, r0, #1
 8025746:	d102      	bne.n	802574e <_close_r+0x1a>
 8025748:	682b      	ldr	r3, [r5, #0]
 802574a:	b103      	cbz	r3, 802574e <_close_r+0x1a>
 802574c:	6023      	str	r3, [r4, #0]
 802574e:	bd38      	pop	{r3, r4, r5, pc}
 8025750:	20015dd8 	.word	0x20015dd8

08025754 <_lseek_r>:
 8025754:	b538      	push	{r3, r4, r5, lr}
 8025756:	4d07      	ldr	r5, [pc, #28]	@ (8025774 <_lseek_r+0x20>)
 8025758:	4604      	mov	r4, r0
 802575a:	4608      	mov	r0, r1
 802575c:	4611      	mov	r1, r2
 802575e:	2200      	movs	r2, #0
 8025760:	602a      	str	r2, [r5, #0]
 8025762:	461a      	mov	r2, r3
 8025764:	f7db fff0 	bl	8001748 <_lseek>
 8025768:	1c43      	adds	r3, r0, #1
 802576a:	d102      	bne.n	8025772 <_lseek_r+0x1e>
 802576c:	682b      	ldr	r3, [r5, #0]
 802576e:	b103      	cbz	r3, 8025772 <_lseek_r+0x1e>
 8025770:	6023      	str	r3, [r4, #0]
 8025772:	bd38      	pop	{r3, r4, r5, pc}
 8025774:	20015dd8 	.word	0x20015dd8

08025778 <_read_r>:
 8025778:	b538      	push	{r3, r4, r5, lr}
 802577a:	4d07      	ldr	r5, [pc, #28]	@ (8025798 <_read_r+0x20>)
 802577c:	4604      	mov	r4, r0
 802577e:	4608      	mov	r0, r1
 8025780:	4611      	mov	r1, r2
 8025782:	2200      	movs	r2, #0
 8025784:	602a      	str	r2, [r5, #0]
 8025786:	461a      	mov	r2, r3
 8025788:	f7db ffb8 	bl	80016fc <_read>
 802578c:	1c43      	adds	r3, r0, #1
 802578e:	d102      	bne.n	8025796 <_read_r+0x1e>
 8025790:	682b      	ldr	r3, [r5, #0]
 8025792:	b103      	cbz	r3, 8025796 <_read_r+0x1e>
 8025794:	6023      	str	r3, [r4, #0]
 8025796:	bd38      	pop	{r3, r4, r5, pc}
 8025798:	20015dd8 	.word	0x20015dd8

0802579c <_kill_r>:
 802579c:	b538      	push	{r3, r4, r5, lr}
 802579e:	4d07      	ldr	r5, [pc, #28]	@ (80257bc <_kill_r+0x20>)
 80257a0:	2300      	movs	r3, #0
 80257a2:	4604      	mov	r4, r0
 80257a4:	4608      	mov	r0, r1
 80257a6:	4611      	mov	r1, r2
 80257a8:	602b      	str	r3, [r5, #0]
 80257aa:	f7db ff99 	bl	80016e0 <_kill>
 80257ae:	1c43      	adds	r3, r0, #1
 80257b0:	d102      	bne.n	80257b8 <_kill_r+0x1c>
 80257b2:	682b      	ldr	r3, [r5, #0]
 80257b4:	b103      	cbz	r3, 80257b8 <_kill_r+0x1c>
 80257b6:	6023      	str	r3, [r4, #0]
 80257b8:	bd38      	pop	{r3, r4, r5, pc}
 80257ba:	bf00      	nop
 80257bc:	20015dd8 	.word	0x20015dd8

080257c0 <_getpid_r>:
 80257c0:	f7db bf8c 	b.w	80016dc <_getpid>

080257c4 <_sbrk_r>:
 80257c4:	b538      	push	{r3, r4, r5, lr}
 80257c6:	4d06      	ldr	r5, [pc, #24]	@ (80257e0 <_sbrk_r+0x1c>)
 80257c8:	2300      	movs	r3, #0
 80257ca:	4604      	mov	r4, r0
 80257cc:	4608      	mov	r0, r1
 80257ce:	602b      	str	r3, [r5, #0]
 80257d0:	f7db ffbc 	bl	800174c <_sbrk>
 80257d4:	1c43      	adds	r3, r0, #1
 80257d6:	d102      	bne.n	80257de <_sbrk_r+0x1a>
 80257d8:	682b      	ldr	r3, [r5, #0]
 80257da:	b103      	cbz	r3, 80257de <_sbrk_r+0x1a>
 80257dc:	6023      	str	r3, [r4, #0]
 80257de:	bd38      	pop	{r3, r4, r5, pc}
 80257e0:	20015dd8 	.word	0x20015dd8

080257e4 <_write_r>:
 80257e4:	b538      	push	{r3, r4, r5, lr}
 80257e6:	4d07      	ldr	r5, [pc, #28]	@ (8025804 <_write_r+0x20>)
 80257e8:	4604      	mov	r4, r0
 80257ea:	4608      	mov	r0, r1
 80257ec:	4611      	mov	r1, r2
 80257ee:	2200      	movs	r2, #0
 80257f0:	602a      	str	r2, [r5, #0]
 80257f2:	461a      	mov	r2, r3
 80257f4:	f7db ff90 	bl	8001718 <_write>
 80257f8:	1c43      	adds	r3, r0, #1
 80257fa:	d102      	bne.n	8025802 <_write_r+0x1e>
 80257fc:	682b      	ldr	r3, [r5, #0]
 80257fe:	b103      	cbz	r3, 8025802 <_write_r+0x1e>
 8025800:	6023      	str	r3, [r4, #0]
 8025802:	bd38      	pop	{r3, r4, r5, pc}
 8025804:	20015dd8 	.word	0x20015dd8

08025808 <__errno>:
 8025808:	4b01      	ldr	r3, [pc, #4]	@ (8025810 <__errno+0x8>)
 802580a:	6818      	ldr	r0, [r3, #0]
 802580c:	4770      	bx	lr
 802580e:	bf00      	nop
 8025810:	20000110 	.word	0x20000110

08025814 <__libc_init_array>:
 8025814:	b570      	push	{r4, r5, r6, lr}
 8025816:	4d0d      	ldr	r5, [pc, #52]	@ (802584c <__libc_init_array+0x38>)
 8025818:	4c0d      	ldr	r4, [pc, #52]	@ (8025850 <__libc_init_array+0x3c>)
 802581a:	1b64      	subs	r4, r4, r5
 802581c:	10a4      	asrs	r4, r4, #2
 802581e:	2600      	movs	r6, #0
 8025820:	42a6      	cmp	r6, r4
 8025822:	d109      	bne.n	8025838 <__libc_init_array+0x24>
 8025824:	4d0b      	ldr	r5, [pc, #44]	@ (8025854 <__libc_init_array+0x40>)
 8025826:	4c0c      	ldr	r4, [pc, #48]	@ (8025858 <__libc_init_array+0x44>)
 8025828:	f000 fd62 	bl	80262f0 <_init>
 802582c:	1b64      	subs	r4, r4, r5
 802582e:	10a4      	asrs	r4, r4, #2
 8025830:	2600      	movs	r6, #0
 8025832:	42a6      	cmp	r6, r4
 8025834:	d105      	bne.n	8025842 <__libc_init_array+0x2e>
 8025836:	bd70      	pop	{r4, r5, r6, pc}
 8025838:	f855 3b04 	ldr.w	r3, [r5], #4
 802583c:	4798      	blx	r3
 802583e:	3601      	adds	r6, #1
 8025840:	e7ee      	b.n	8025820 <__libc_init_array+0xc>
 8025842:	f855 3b04 	ldr.w	r3, [r5], #4
 8025846:	4798      	blx	r3
 8025848:	3601      	adds	r6, #1
 802584a:	e7f2      	b.n	8025832 <__libc_init_array+0x1e>
 802584c:	081c7f10 	.word	0x081c7f10
 8025850:	081c7f10 	.word	0x081c7f10
 8025854:	081c7f10 	.word	0x081c7f10
 8025858:	081c7f24 	.word	0x081c7f24

0802585c <__retarget_lock_init_recursive>:
 802585c:	4770      	bx	lr

0802585e <__retarget_lock_acquire_recursive>:
 802585e:	4770      	bx	lr

08025860 <__retarget_lock_release_recursive>:
 8025860:	4770      	bx	lr

08025862 <memcpy>:
 8025862:	440a      	add	r2, r1
 8025864:	4291      	cmp	r1, r2
 8025866:	f100 33ff 	add.w	r3, r0, #4294967295
 802586a:	d100      	bne.n	802586e <memcpy+0xc>
 802586c:	4770      	bx	lr
 802586e:	b510      	push	{r4, lr}
 8025870:	f811 4b01 	ldrb.w	r4, [r1], #1
 8025874:	f803 4f01 	strb.w	r4, [r3, #1]!
 8025878:	4291      	cmp	r1, r2
 802587a:	d1f9      	bne.n	8025870 <memcpy+0xe>
 802587c:	bd10      	pop	{r4, pc}
	...

08025880 <__register_exitproc>:
 8025880:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025884:	4d27      	ldr	r5, [pc, #156]	@ (8025924 <__register_exitproc+0xa4>)
 8025886:	4607      	mov	r7, r0
 8025888:	6828      	ldr	r0, [r5, #0]
 802588a:	4691      	mov	r9, r2
 802588c:	460e      	mov	r6, r1
 802588e:	4698      	mov	r8, r3
 8025890:	f7ff ffe5 	bl	802585e <__retarget_lock_acquire_recursive>
 8025894:	4a24      	ldr	r2, [pc, #144]	@ (8025928 <__register_exitproc+0xa8>)
 8025896:	6814      	ldr	r4, [r2, #0]
 8025898:	b93c      	cbnz	r4, 80258aa <__register_exitproc+0x2a>
 802589a:	4b24      	ldr	r3, [pc, #144]	@ (802592c <__register_exitproc+0xac>)
 802589c:	6013      	str	r3, [r2, #0]
 802589e:	4a24      	ldr	r2, [pc, #144]	@ (8025930 <__register_exitproc+0xb0>)
 80258a0:	b112      	cbz	r2, 80258a8 <__register_exitproc+0x28>
 80258a2:	6812      	ldr	r2, [r2, #0]
 80258a4:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80258a8:	4c20      	ldr	r4, [pc, #128]	@ (802592c <__register_exitproc+0xac>)
 80258aa:	6863      	ldr	r3, [r4, #4]
 80258ac:	2b1f      	cmp	r3, #31
 80258ae:	dd06      	ble.n	80258be <__register_exitproc+0x3e>
 80258b0:	6828      	ldr	r0, [r5, #0]
 80258b2:	f7ff ffd5 	bl	8025860 <__retarget_lock_release_recursive>
 80258b6:	f04f 30ff 	mov.w	r0, #4294967295
 80258ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80258be:	b32f      	cbz	r7, 802590c <__register_exitproc+0x8c>
 80258c0:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 80258c4:	b968      	cbnz	r0, 80258e2 <__register_exitproc+0x62>
 80258c6:	4b1b      	ldr	r3, [pc, #108]	@ (8025934 <__register_exitproc+0xb4>)
 80258c8:	2b00      	cmp	r3, #0
 80258ca:	d0f1      	beq.n	80258b0 <__register_exitproc+0x30>
 80258cc:	f44f 7084 	mov.w	r0, #264	@ 0x108
 80258d0:	f7ff fd14 	bl	80252fc <malloc>
 80258d4:	2800      	cmp	r0, #0
 80258d6:	d0eb      	beq.n	80258b0 <__register_exitproc+0x30>
 80258d8:	2300      	movs	r3, #0
 80258da:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 80258de:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 80258e2:	6863      	ldr	r3, [r4, #4]
 80258e4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 80258e8:	2201      	movs	r2, #1
 80258ea:	409a      	lsls	r2, r3
 80258ec:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 80258f0:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 80258f4:	4313      	orrs	r3, r2
 80258f6:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 80258fa:	2f02      	cmp	r7, #2
 80258fc:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8025900:	bf02      	ittt	eq
 8025902:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 8025906:	4313      	orreq	r3, r2
 8025908:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 802590c:	6863      	ldr	r3, [r4, #4]
 802590e:	6828      	ldr	r0, [r5, #0]
 8025910:	1c5a      	adds	r2, r3, #1
 8025912:	3302      	adds	r3, #2
 8025914:	6062      	str	r2, [r4, #4]
 8025916:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 802591a:	f7ff ffa1 	bl	8025860 <__retarget_lock_release_recursive>
 802591e:	2000      	movs	r0, #0
 8025920:	e7cb      	b.n	80258ba <__register_exitproc+0x3a>
 8025922:	bf00      	nop
 8025924:	20000160 	.word	0x20000160
 8025928:	20015e6c 	.word	0x20015e6c
 802592c:	20015de0 	.word	0x20015de0
 8025930:	08028d4c 	.word	0x08028d4c
 8025934:	080252fd 	.word	0x080252fd

08025938 <_free_r>:
 8025938:	b538      	push	{r3, r4, r5, lr}
 802593a:	4605      	mov	r5, r0
 802593c:	2900      	cmp	r1, #0
 802593e:	d041      	beq.n	80259c4 <_free_r+0x8c>
 8025940:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8025944:	1f0c      	subs	r4, r1, #4
 8025946:	2b00      	cmp	r3, #0
 8025948:	bfb8      	it	lt
 802594a:	18e4      	addlt	r4, r4, r3
 802594c:	f7ff fd88 	bl	8025460 <__malloc_lock>
 8025950:	4a1d      	ldr	r2, [pc, #116]	@ (80259c8 <_free_r+0x90>)
 8025952:	6813      	ldr	r3, [r2, #0]
 8025954:	b933      	cbnz	r3, 8025964 <_free_r+0x2c>
 8025956:	6063      	str	r3, [r4, #4]
 8025958:	6014      	str	r4, [r2, #0]
 802595a:	4628      	mov	r0, r5
 802595c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8025960:	f7ff bd84 	b.w	802546c <__malloc_unlock>
 8025964:	42a3      	cmp	r3, r4
 8025966:	d908      	bls.n	802597a <_free_r+0x42>
 8025968:	6820      	ldr	r0, [r4, #0]
 802596a:	1821      	adds	r1, r4, r0
 802596c:	428b      	cmp	r3, r1
 802596e:	bf01      	itttt	eq
 8025970:	6819      	ldreq	r1, [r3, #0]
 8025972:	685b      	ldreq	r3, [r3, #4]
 8025974:	1809      	addeq	r1, r1, r0
 8025976:	6021      	streq	r1, [r4, #0]
 8025978:	e7ed      	b.n	8025956 <_free_r+0x1e>
 802597a:	461a      	mov	r2, r3
 802597c:	685b      	ldr	r3, [r3, #4]
 802597e:	b10b      	cbz	r3, 8025984 <_free_r+0x4c>
 8025980:	42a3      	cmp	r3, r4
 8025982:	d9fa      	bls.n	802597a <_free_r+0x42>
 8025984:	6811      	ldr	r1, [r2, #0]
 8025986:	1850      	adds	r0, r2, r1
 8025988:	42a0      	cmp	r0, r4
 802598a:	d10b      	bne.n	80259a4 <_free_r+0x6c>
 802598c:	6820      	ldr	r0, [r4, #0]
 802598e:	4401      	add	r1, r0
 8025990:	1850      	adds	r0, r2, r1
 8025992:	4283      	cmp	r3, r0
 8025994:	6011      	str	r1, [r2, #0]
 8025996:	d1e0      	bne.n	802595a <_free_r+0x22>
 8025998:	6818      	ldr	r0, [r3, #0]
 802599a:	685b      	ldr	r3, [r3, #4]
 802599c:	6053      	str	r3, [r2, #4]
 802599e:	4408      	add	r0, r1
 80259a0:	6010      	str	r0, [r2, #0]
 80259a2:	e7da      	b.n	802595a <_free_r+0x22>
 80259a4:	d902      	bls.n	80259ac <_free_r+0x74>
 80259a6:	230c      	movs	r3, #12
 80259a8:	602b      	str	r3, [r5, #0]
 80259aa:	e7d6      	b.n	802595a <_free_r+0x22>
 80259ac:	6820      	ldr	r0, [r4, #0]
 80259ae:	1821      	adds	r1, r4, r0
 80259b0:	428b      	cmp	r3, r1
 80259b2:	bf04      	itt	eq
 80259b4:	6819      	ldreq	r1, [r3, #0]
 80259b6:	685b      	ldreq	r3, [r3, #4]
 80259b8:	6063      	str	r3, [r4, #4]
 80259ba:	bf04      	itt	eq
 80259bc:	1809      	addeq	r1, r1, r0
 80259be:	6021      	streq	r1, [r4, #0]
 80259c0:	6054      	str	r4, [r2, #4]
 80259c2:	e7ca      	b.n	802595a <_free_r+0x22>
 80259c4:	bd38      	pop	{r3, r4, r5, pc}
 80259c6:	bf00      	nop
 80259c8:	20015c98 	.word	0x20015c98

080259cc <__sfputc_r>:
 80259cc:	6893      	ldr	r3, [r2, #8]
 80259ce:	3b01      	subs	r3, #1
 80259d0:	2b00      	cmp	r3, #0
 80259d2:	b410      	push	{r4}
 80259d4:	6093      	str	r3, [r2, #8]
 80259d6:	da08      	bge.n	80259ea <__sfputc_r+0x1e>
 80259d8:	6994      	ldr	r4, [r2, #24]
 80259da:	42a3      	cmp	r3, r4
 80259dc:	db01      	blt.n	80259e2 <__sfputc_r+0x16>
 80259de:	290a      	cmp	r1, #10
 80259e0:	d103      	bne.n	80259ea <__sfputc_r+0x1e>
 80259e2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80259e6:	f000 bb6b 	b.w	80260c0 <__swbuf_r>
 80259ea:	6813      	ldr	r3, [r2, #0]
 80259ec:	1c58      	adds	r0, r3, #1
 80259ee:	6010      	str	r0, [r2, #0]
 80259f0:	7019      	strb	r1, [r3, #0]
 80259f2:	4608      	mov	r0, r1
 80259f4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80259f8:	4770      	bx	lr

080259fa <__sfputs_r>:
 80259fa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80259fc:	4606      	mov	r6, r0
 80259fe:	460f      	mov	r7, r1
 8025a00:	4614      	mov	r4, r2
 8025a02:	18d5      	adds	r5, r2, r3
 8025a04:	42ac      	cmp	r4, r5
 8025a06:	d101      	bne.n	8025a0c <__sfputs_r+0x12>
 8025a08:	2000      	movs	r0, #0
 8025a0a:	e007      	b.n	8025a1c <__sfputs_r+0x22>
 8025a0c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8025a10:	463a      	mov	r2, r7
 8025a12:	4630      	mov	r0, r6
 8025a14:	f7ff ffda 	bl	80259cc <__sfputc_r>
 8025a18:	1c43      	adds	r3, r0, #1
 8025a1a:	d1f3      	bne.n	8025a04 <__sfputs_r+0xa>
 8025a1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08025a20 <_vfiprintf_r>:
 8025a20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025a24:	460d      	mov	r5, r1
 8025a26:	b09d      	sub	sp, #116	@ 0x74
 8025a28:	4614      	mov	r4, r2
 8025a2a:	4698      	mov	r8, r3
 8025a2c:	4606      	mov	r6, r0
 8025a2e:	b118      	cbz	r0, 8025a38 <_vfiprintf_r+0x18>
 8025a30:	6a03      	ldr	r3, [r0, #32]
 8025a32:	b90b      	cbnz	r3, 8025a38 <_vfiprintf_r+0x18>
 8025a34:	f7ff fdba 	bl	80255ac <__sinit>
 8025a38:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8025a3a:	07d9      	lsls	r1, r3, #31
 8025a3c:	d405      	bmi.n	8025a4a <_vfiprintf_r+0x2a>
 8025a3e:	89ab      	ldrh	r3, [r5, #12]
 8025a40:	059a      	lsls	r2, r3, #22
 8025a42:	d402      	bmi.n	8025a4a <_vfiprintf_r+0x2a>
 8025a44:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8025a46:	f7ff ff0a 	bl	802585e <__retarget_lock_acquire_recursive>
 8025a4a:	89ab      	ldrh	r3, [r5, #12]
 8025a4c:	071b      	lsls	r3, r3, #28
 8025a4e:	d501      	bpl.n	8025a54 <_vfiprintf_r+0x34>
 8025a50:	692b      	ldr	r3, [r5, #16]
 8025a52:	b99b      	cbnz	r3, 8025a7c <_vfiprintf_r+0x5c>
 8025a54:	4629      	mov	r1, r5
 8025a56:	4630      	mov	r0, r6
 8025a58:	f000 fb70 	bl	802613c <__swsetup_r>
 8025a5c:	b170      	cbz	r0, 8025a7c <_vfiprintf_r+0x5c>
 8025a5e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8025a60:	07dc      	lsls	r4, r3, #31
 8025a62:	d504      	bpl.n	8025a6e <_vfiprintf_r+0x4e>
 8025a64:	f04f 30ff 	mov.w	r0, #4294967295
 8025a68:	b01d      	add	sp, #116	@ 0x74
 8025a6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025a6e:	89ab      	ldrh	r3, [r5, #12]
 8025a70:	0598      	lsls	r0, r3, #22
 8025a72:	d4f7      	bmi.n	8025a64 <_vfiprintf_r+0x44>
 8025a74:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8025a76:	f7ff fef3 	bl	8025860 <__retarget_lock_release_recursive>
 8025a7a:	e7f3      	b.n	8025a64 <_vfiprintf_r+0x44>
 8025a7c:	2300      	movs	r3, #0
 8025a7e:	9309      	str	r3, [sp, #36]	@ 0x24
 8025a80:	2320      	movs	r3, #32
 8025a82:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8025a86:	f8cd 800c 	str.w	r8, [sp, #12]
 8025a8a:	2330      	movs	r3, #48	@ 0x30
 8025a8c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8025c3c <_vfiprintf_r+0x21c>
 8025a90:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8025a94:	f04f 0901 	mov.w	r9, #1
 8025a98:	4623      	mov	r3, r4
 8025a9a:	469a      	mov	sl, r3
 8025a9c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8025aa0:	b10a      	cbz	r2, 8025aa6 <_vfiprintf_r+0x86>
 8025aa2:	2a25      	cmp	r2, #37	@ 0x25
 8025aa4:	d1f9      	bne.n	8025a9a <_vfiprintf_r+0x7a>
 8025aa6:	ebba 0b04 	subs.w	fp, sl, r4
 8025aaa:	d00b      	beq.n	8025ac4 <_vfiprintf_r+0xa4>
 8025aac:	465b      	mov	r3, fp
 8025aae:	4622      	mov	r2, r4
 8025ab0:	4629      	mov	r1, r5
 8025ab2:	4630      	mov	r0, r6
 8025ab4:	f7ff ffa1 	bl	80259fa <__sfputs_r>
 8025ab8:	3001      	adds	r0, #1
 8025aba:	f000 80a7 	beq.w	8025c0c <_vfiprintf_r+0x1ec>
 8025abe:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8025ac0:	445a      	add	r2, fp
 8025ac2:	9209      	str	r2, [sp, #36]	@ 0x24
 8025ac4:	f89a 3000 	ldrb.w	r3, [sl]
 8025ac8:	2b00      	cmp	r3, #0
 8025aca:	f000 809f 	beq.w	8025c0c <_vfiprintf_r+0x1ec>
 8025ace:	2300      	movs	r3, #0
 8025ad0:	f04f 32ff 	mov.w	r2, #4294967295
 8025ad4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8025ad8:	f10a 0a01 	add.w	sl, sl, #1
 8025adc:	9304      	str	r3, [sp, #16]
 8025ade:	9307      	str	r3, [sp, #28]
 8025ae0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8025ae4:	931a      	str	r3, [sp, #104]	@ 0x68
 8025ae6:	4654      	mov	r4, sl
 8025ae8:	2205      	movs	r2, #5
 8025aea:	f814 1b01 	ldrb.w	r1, [r4], #1
 8025aee:	4853      	ldr	r0, [pc, #332]	@ (8025c3c <_vfiprintf_r+0x21c>)
 8025af0:	f7da fb7e 	bl	80001f0 <memchr>
 8025af4:	9a04      	ldr	r2, [sp, #16]
 8025af6:	b9d8      	cbnz	r0, 8025b30 <_vfiprintf_r+0x110>
 8025af8:	06d1      	lsls	r1, r2, #27
 8025afa:	bf44      	itt	mi
 8025afc:	2320      	movmi	r3, #32
 8025afe:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8025b02:	0713      	lsls	r3, r2, #28
 8025b04:	bf44      	itt	mi
 8025b06:	232b      	movmi	r3, #43	@ 0x2b
 8025b08:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8025b0c:	f89a 3000 	ldrb.w	r3, [sl]
 8025b10:	2b2a      	cmp	r3, #42	@ 0x2a
 8025b12:	d015      	beq.n	8025b40 <_vfiprintf_r+0x120>
 8025b14:	9a07      	ldr	r2, [sp, #28]
 8025b16:	4654      	mov	r4, sl
 8025b18:	2000      	movs	r0, #0
 8025b1a:	f04f 0c0a 	mov.w	ip, #10
 8025b1e:	4621      	mov	r1, r4
 8025b20:	f811 3b01 	ldrb.w	r3, [r1], #1
 8025b24:	3b30      	subs	r3, #48	@ 0x30
 8025b26:	2b09      	cmp	r3, #9
 8025b28:	d94b      	bls.n	8025bc2 <_vfiprintf_r+0x1a2>
 8025b2a:	b1b0      	cbz	r0, 8025b5a <_vfiprintf_r+0x13a>
 8025b2c:	9207      	str	r2, [sp, #28]
 8025b2e:	e014      	b.n	8025b5a <_vfiprintf_r+0x13a>
 8025b30:	eba0 0308 	sub.w	r3, r0, r8
 8025b34:	fa09 f303 	lsl.w	r3, r9, r3
 8025b38:	4313      	orrs	r3, r2
 8025b3a:	9304      	str	r3, [sp, #16]
 8025b3c:	46a2      	mov	sl, r4
 8025b3e:	e7d2      	b.n	8025ae6 <_vfiprintf_r+0xc6>
 8025b40:	9b03      	ldr	r3, [sp, #12]
 8025b42:	1d19      	adds	r1, r3, #4
 8025b44:	681b      	ldr	r3, [r3, #0]
 8025b46:	9103      	str	r1, [sp, #12]
 8025b48:	2b00      	cmp	r3, #0
 8025b4a:	bfbb      	ittet	lt
 8025b4c:	425b      	neglt	r3, r3
 8025b4e:	f042 0202 	orrlt.w	r2, r2, #2
 8025b52:	9307      	strge	r3, [sp, #28]
 8025b54:	9307      	strlt	r3, [sp, #28]
 8025b56:	bfb8      	it	lt
 8025b58:	9204      	strlt	r2, [sp, #16]
 8025b5a:	7823      	ldrb	r3, [r4, #0]
 8025b5c:	2b2e      	cmp	r3, #46	@ 0x2e
 8025b5e:	d10a      	bne.n	8025b76 <_vfiprintf_r+0x156>
 8025b60:	7863      	ldrb	r3, [r4, #1]
 8025b62:	2b2a      	cmp	r3, #42	@ 0x2a
 8025b64:	d132      	bne.n	8025bcc <_vfiprintf_r+0x1ac>
 8025b66:	9b03      	ldr	r3, [sp, #12]
 8025b68:	1d1a      	adds	r2, r3, #4
 8025b6a:	681b      	ldr	r3, [r3, #0]
 8025b6c:	9203      	str	r2, [sp, #12]
 8025b6e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8025b72:	3402      	adds	r4, #2
 8025b74:	9305      	str	r3, [sp, #20]
 8025b76:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8025c4c <_vfiprintf_r+0x22c>
 8025b7a:	7821      	ldrb	r1, [r4, #0]
 8025b7c:	2203      	movs	r2, #3
 8025b7e:	4650      	mov	r0, sl
 8025b80:	f7da fb36 	bl	80001f0 <memchr>
 8025b84:	b138      	cbz	r0, 8025b96 <_vfiprintf_r+0x176>
 8025b86:	9b04      	ldr	r3, [sp, #16]
 8025b88:	eba0 000a 	sub.w	r0, r0, sl
 8025b8c:	2240      	movs	r2, #64	@ 0x40
 8025b8e:	4082      	lsls	r2, r0
 8025b90:	4313      	orrs	r3, r2
 8025b92:	3401      	adds	r4, #1
 8025b94:	9304      	str	r3, [sp, #16]
 8025b96:	f814 1b01 	ldrb.w	r1, [r4], #1
 8025b9a:	4829      	ldr	r0, [pc, #164]	@ (8025c40 <_vfiprintf_r+0x220>)
 8025b9c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8025ba0:	2206      	movs	r2, #6
 8025ba2:	f7da fb25 	bl	80001f0 <memchr>
 8025ba6:	2800      	cmp	r0, #0
 8025ba8:	d03f      	beq.n	8025c2a <_vfiprintf_r+0x20a>
 8025baa:	4b26      	ldr	r3, [pc, #152]	@ (8025c44 <_vfiprintf_r+0x224>)
 8025bac:	bb1b      	cbnz	r3, 8025bf6 <_vfiprintf_r+0x1d6>
 8025bae:	9b03      	ldr	r3, [sp, #12]
 8025bb0:	3307      	adds	r3, #7
 8025bb2:	f023 0307 	bic.w	r3, r3, #7
 8025bb6:	3308      	adds	r3, #8
 8025bb8:	9303      	str	r3, [sp, #12]
 8025bba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025bbc:	443b      	add	r3, r7
 8025bbe:	9309      	str	r3, [sp, #36]	@ 0x24
 8025bc0:	e76a      	b.n	8025a98 <_vfiprintf_r+0x78>
 8025bc2:	fb0c 3202 	mla	r2, ip, r2, r3
 8025bc6:	460c      	mov	r4, r1
 8025bc8:	2001      	movs	r0, #1
 8025bca:	e7a8      	b.n	8025b1e <_vfiprintf_r+0xfe>
 8025bcc:	2300      	movs	r3, #0
 8025bce:	3401      	adds	r4, #1
 8025bd0:	9305      	str	r3, [sp, #20]
 8025bd2:	4619      	mov	r1, r3
 8025bd4:	f04f 0c0a 	mov.w	ip, #10
 8025bd8:	4620      	mov	r0, r4
 8025bda:	f810 2b01 	ldrb.w	r2, [r0], #1
 8025bde:	3a30      	subs	r2, #48	@ 0x30
 8025be0:	2a09      	cmp	r2, #9
 8025be2:	d903      	bls.n	8025bec <_vfiprintf_r+0x1cc>
 8025be4:	2b00      	cmp	r3, #0
 8025be6:	d0c6      	beq.n	8025b76 <_vfiprintf_r+0x156>
 8025be8:	9105      	str	r1, [sp, #20]
 8025bea:	e7c4      	b.n	8025b76 <_vfiprintf_r+0x156>
 8025bec:	fb0c 2101 	mla	r1, ip, r1, r2
 8025bf0:	4604      	mov	r4, r0
 8025bf2:	2301      	movs	r3, #1
 8025bf4:	e7f0      	b.n	8025bd8 <_vfiprintf_r+0x1b8>
 8025bf6:	ab03      	add	r3, sp, #12
 8025bf8:	9300      	str	r3, [sp, #0]
 8025bfa:	462a      	mov	r2, r5
 8025bfc:	4b12      	ldr	r3, [pc, #72]	@ (8025c48 <_vfiprintf_r+0x228>)
 8025bfe:	a904      	add	r1, sp, #16
 8025c00:	4630      	mov	r0, r6
 8025c02:	f3af 8000 	nop.w
 8025c06:	4607      	mov	r7, r0
 8025c08:	1c78      	adds	r0, r7, #1
 8025c0a:	d1d6      	bne.n	8025bba <_vfiprintf_r+0x19a>
 8025c0c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8025c0e:	07d9      	lsls	r1, r3, #31
 8025c10:	d405      	bmi.n	8025c1e <_vfiprintf_r+0x1fe>
 8025c12:	89ab      	ldrh	r3, [r5, #12]
 8025c14:	059a      	lsls	r2, r3, #22
 8025c16:	d402      	bmi.n	8025c1e <_vfiprintf_r+0x1fe>
 8025c18:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8025c1a:	f7ff fe21 	bl	8025860 <__retarget_lock_release_recursive>
 8025c1e:	89ab      	ldrh	r3, [r5, #12]
 8025c20:	065b      	lsls	r3, r3, #25
 8025c22:	f53f af1f 	bmi.w	8025a64 <_vfiprintf_r+0x44>
 8025c26:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8025c28:	e71e      	b.n	8025a68 <_vfiprintf_r+0x48>
 8025c2a:	ab03      	add	r3, sp, #12
 8025c2c:	9300      	str	r3, [sp, #0]
 8025c2e:	462a      	mov	r2, r5
 8025c30:	4b05      	ldr	r3, [pc, #20]	@ (8025c48 <_vfiprintf_r+0x228>)
 8025c32:	a904      	add	r1, sp, #16
 8025c34:	4630      	mov	r0, r6
 8025c36:	f000 f879 	bl	8025d2c <_printf_i>
 8025c3a:	e7e4      	b.n	8025c06 <_vfiprintf_r+0x1e6>
 8025c3c:	0802728e 	.word	0x0802728e
 8025c40:	08027298 	.word	0x08027298
 8025c44:	00000000 	.word	0x00000000
 8025c48:	080259fb 	.word	0x080259fb
 8025c4c:	08027294 	.word	0x08027294

08025c50 <_printf_common>:
 8025c50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025c54:	4616      	mov	r6, r2
 8025c56:	4698      	mov	r8, r3
 8025c58:	688a      	ldr	r2, [r1, #8]
 8025c5a:	690b      	ldr	r3, [r1, #16]
 8025c5c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8025c60:	4293      	cmp	r3, r2
 8025c62:	bfb8      	it	lt
 8025c64:	4613      	movlt	r3, r2
 8025c66:	6033      	str	r3, [r6, #0]
 8025c68:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8025c6c:	4607      	mov	r7, r0
 8025c6e:	460c      	mov	r4, r1
 8025c70:	b10a      	cbz	r2, 8025c76 <_printf_common+0x26>
 8025c72:	3301      	adds	r3, #1
 8025c74:	6033      	str	r3, [r6, #0]
 8025c76:	6823      	ldr	r3, [r4, #0]
 8025c78:	0699      	lsls	r1, r3, #26
 8025c7a:	bf42      	ittt	mi
 8025c7c:	6833      	ldrmi	r3, [r6, #0]
 8025c7e:	3302      	addmi	r3, #2
 8025c80:	6033      	strmi	r3, [r6, #0]
 8025c82:	6825      	ldr	r5, [r4, #0]
 8025c84:	f015 0506 	ands.w	r5, r5, #6
 8025c88:	d106      	bne.n	8025c98 <_printf_common+0x48>
 8025c8a:	f104 0a19 	add.w	sl, r4, #25
 8025c8e:	68e3      	ldr	r3, [r4, #12]
 8025c90:	6832      	ldr	r2, [r6, #0]
 8025c92:	1a9b      	subs	r3, r3, r2
 8025c94:	42ab      	cmp	r3, r5
 8025c96:	dc26      	bgt.n	8025ce6 <_printf_common+0x96>
 8025c98:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8025c9c:	6822      	ldr	r2, [r4, #0]
 8025c9e:	3b00      	subs	r3, #0
 8025ca0:	bf18      	it	ne
 8025ca2:	2301      	movne	r3, #1
 8025ca4:	0692      	lsls	r2, r2, #26
 8025ca6:	d42b      	bmi.n	8025d00 <_printf_common+0xb0>
 8025ca8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8025cac:	4641      	mov	r1, r8
 8025cae:	4638      	mov	r0, r7
 8025cb0:	47c8      	blx	r9
 8025cb2:	3001      	adds	r0, #1
 8025cb4:	d01e      	beq.n	8025cf4 <_printf_common+0xa4>
 8025cb6:	6823      	ldr	r3, [r4, #0]
 8025cb8:	6922      	ldr	r2, [r4, #16]
 8025cba:	f003 0306 	and.w	r3, r3, #6
 8025cbe:	2b04      	cmp	r3, #4
 8025cc0:	bf02      	ittt	eq
 8025cc2:	68e5      	ldreq	r5, [r4, #12]
 8025cc4:	6833      	ldreq	r3, [r6, #0]
 8025cc6:	1aed      	subeq	r5, r5, r3
 8025cc8:	68a3      	ldr	r3, [r4, #8]
 8025cca:	bf0c      	ite	eq
 8025ccc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8025cd0:	2500      	movne	r5, #0
 8025cd2:	4293      	cmp	r3, r2
 8025cd4:	bfc4      	itt	gt
 8025cd6:	1a9b      	subgt	r3, r3, r2
 8025cd8:	18ed      	addgt	r5, r5, r3
 8025cda:	2600      	movs	r6, #0
 8025cdc:	341a      	adds	r4, #26
 8025cde:	42b5      	cmp	r5, r6
 8025ce0:	d11a      	bne.n	8025d18 <_printf_common+0xc8>
 8025ce2:	2000      	movs	r0, #0
 8025ce4:	e008      	b.n	8025cf8 <_printf_common+0xa8>
 8025ce6:	2301      	movs	r3, #1
 8025ce8:	4652      	mov	r2, sl
 8025cea:	4641      	mov	r1, r8
 8025cec:	4638      	mov	r0, r7
 8025cee:	47c8      	blx	r9
 8025cf0:	3001      	adds	r0, #1
 8025cf2:	d103      	bne.n	8025cfc <_printf_common+0xac>
 8025cf4:	f04f 30ff 	mov.w	r0, #4294967295
 8025cf8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025cfc:	3501      	adds	r5, #1
 8025cfe:	e7c6      	b.n	8025c8e <_printf_common+0x3e>
 8025d00:	18e1      	adds	r1, r4, r3
 8025d02:	1c5a      	adds	r2, r3, #1
 8025d04:	2030      	movs	r0, #48	@ 0x30
 8025d06:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8025d0a:	4422      	add	r2, r4
 8025d0c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8025d10:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8025d14:	3302      	adds	r3, #2
 8025d16:	e7c7      	b.n	8025ca8 <_printf_common+0x58>
 8025d18:	2301      	movs	r3, #1
 8025d1a:	4622      	mov	r2, r4
 8025d1c:	4641      	mov	r1, r8
 8025d1e:	4638      	mov	r0, r7
 8025d20:	47c8      	blx	r9
 8025d22:	3001      	adds	r0, #1
 8025d24:	d0e6      	beq.n	8025cf4 <_printf_common+0xa4>
 8025d26:	3601      	adds	r6, #1
 8025d28:	e7d9      	b.n	8025cde <_printf_common+0x8e>
	...

08025d2c <_printf_i>:
 8025d2c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8025d30:	7e0f      	ldrb	r7, [r1, #24]
 8025d32:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8025d34:	2f78      	cmp	r7, #120	@ 0x78
 8025d36:	4691      	mov	r9, r2
 8025d38:	4680      	mov	r8, r0
 8025d3a:	460c      	mov	r4, r1
 8025d3c:	469a      	mov	sl, r3
 8025d3e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8025d42:	d807      	bhi.n	8025d54 <_printf_i+0x28>
 8025d44:	2f62      	cmp	r7, #98	@ 0x62
 8025d46:	d80a      	bhi.n	8025d5e <_printf_i+0x32>
 8025d48:	2f00      	cmp	r7, #0
 8025d4a:	f000 80d1 	beq.w	8025ef0 <_printf_i+0x1c4>
 8025d4e:	2f58      	cmp	r7, #88	@ 0x58
 8025d50:	f000 80b8 	beq.w	8025ec4 <_printf_i+0x198>
 8025d54:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8025d58:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8025d5c:	e03a      	b.n	8025dd4 <_printf_i+0xa8>
 8025d5e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8025d62:	2b15      	cmp	r3, #21
 8025d64:	d8f6      	bhi.n	8025d54 <_printf_i+0x28>
 8025d66:	a101      	add	r1, pc, #4	@ (adr r1, 8025d6c <_printf_i+0x40>)
 8025d68:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8025d6c:	08025dc5 	.word	0x08025dc5
 8025d70:	08025dd9 	.word	0x08025dd9
 8025d74:	08025d55 	.word	0x08025d55
 8025d78:	08025d55 	.word	0x08025d55
 8025d7c:	08025d55 	.word	0x08025d55
 8025d80:	08025d55 	.word	0x08025d55
 8025d84:	08025dd9 	.word	0x08025dd9
 8025d88:	08025d55 	.word	0x08025d55
 8025d8c:	08025d55 	.word	0x08025d55
 8025d90:	08025d55 	.word	0x08025d55
 8025d94:	08025d55 	.word	0x08025d55
 8025d98:	08025ed7 	.word	0x08025ed7
 8025d9c:	08025e03 	.word	0x08025e03
 8025da0:	08025e91 	.word	0x08025e91
 8025da4:	08025d55 	.word	0x08025d55
 8025da8:	08025d55 	.word	0x08025d55
 8025dac:	08025ef9 	.word	0x08025ef9
 8025db0:	08025d55 	.word	0x08025d55
 8025db4:	08025e03 	.word	0x08025e03
 8025db8:	08025d55 	.word	0x08025d55
 8025dbc:	08025d55 	.word	0x08025d55
 8025dc0:	08025e99 	.word	0x08025e99
 8025dc4:	6833      	ldr	r3, [r6, #0]
 8025dc6:	1d1a      	adds	r2, r3, #4
 8025dc8:	681b      	ldr	r3, [r3, #0]
 8025dca:	6032      	str	r2, [r6, #0]
 8025dcc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8025dd0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8025dd4:	2301      	movs	r3, #1
 8025dd6:	e09c      	b.n	8025f12 <_printf_i+0x1e6>
 8025dd8:	6833      	ldr	r3, [r6, #0]
 8025dda:	6820      	ldr	r0, [r4, #0]
 8025ddc:	1d19      	adds	r1, r3, #4
 8025dde:	6031      	str	r1, [r6, #0]
 8025de0:	0606      	lsls	r6, r0, #24
 8025de2:	d501      	bpl.n	8025de8 <_printf_i+0xbc>
 8025de4:	681d      	ldr	r5, [r3, #0]
 8025de6:	e003      	b.n	8025df0 <_printf_i+0xc4>
 8025de8:	0645      	lsls	r5, r0, #25
 8025dea:	d5fb      	bpl.n	8025de4 <_printf_i+0xb8>
 8025dec:	f9b3 5000 	ldrsh.w	r5, [r3]
 8025df0:	2d00      	cmp	r5, #0
 8025df2:	da03      	bge.n	8025dfc <_printf_i+0xd0>
 8025df4:	232d      	movs	r3, #45	@ 0x2d
 8025df6:	426d      	negs	r5, r5
 8025df8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8025dfc:	4858      	ldr	r0, [pc, #352]	@ (8025f60 <_printf_i+0x234>)
 8025dfe:	230a      	movs	r3, #10
 8025e00:	e011      	b.n	8025e26 <_printf_i+0xfa>
 8025e02:	6821      	ldr	r1, [r4, #0]
 8025e04:	6833      	ldr	r3, [r6, #0]
 8025e06:	0608      	lsls	r0, r1, #24
 8025e08:	f853 5b04 	ldr.w	r5, [r3], #4
 8025e0c:	d402      	bmi.n	8025e14 <_printf_i+0xe8>
 8025e0e:	0649      	lsls	r1, r1, #25
 8025e10:	bf48      	it	mi
 8025e12:	b2ad      	uxthmi	r5, r5
 8025e14:	2f6f      	cmp	r7, #111	@ 0x6f
 8025e16:	4852      	ldr	r0, [pc, #328]	@ (8025f60 <_printf_i+0x234>)
 8025e18:	6033      	str	r3, [r6, #0]
 8025e1a:	bf14      	ite	ne
 8025e1c:	230a      	movne	r3, #10
 8025e1e:	2308      	moveq	r3, #8
 8025e20:	2100      	movs	r1, #0
 8025e22:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8025e26:	6866      	ldr	r6, [r4, #4]
 8025e28:	60a6      	str	r6, [r4, #8]
 8025e2a:	2e00      	cmp	r6, #0
 8025e2c:	db05      	blt.n	8025e3a <_printf_i+0x10e>
 8025e2e:	6821      	ldr	r1, [r4, #0]
 8025e30:	432e      	orrs	r6, r5
 8025e32:	f021 0104 	bic.w	r1, r1, #4
 8025e36:	6021      	str	r1, [r4, #0]
 8025e38:	d04b      	beq.n	8025ed2 <_printf_i+0x1a6>
 8025e3a:	4616      	mov	r6, r2
 8025e3c:	fbb5 f1f3 	udiv	r1, r5, r3
 8025e40:	fb03 5711 	mls	r7, r3, r1, r5
 8025e44:	5dc7      	ldrb	r7, [r0, r7]
 8025e46:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8025e4a:	462f      	mov	r7, r5
 8025e4c:	42bb      	cmp	r3, r7
 8025e4e:	460d      	mov	r5, r1
 8025e50:	d9f4      	bls.n	8025e3c <_printf_i+0x110>
 8025e52:	2b08      	cmp	r3, #8
 8025e54:	d10b      	bne.n	8025e6e <_printf_i+0x142>
 8025e56:	6823      	ldr	r3, [r4, #0]
 8025e58:	07df      	lsls	r7, r3, #31
 8025e5a:	d508      	bpl.n	8025e6e <_printf_i+0x142>
 8025e5c:	6923      	ldr	r3, [r4, #16]
 8025e5e:	6861      	ldr	r1, [r4, #4]
 8025e60:	4299      	cmp	r1, r3
 8025e62:	bfde      	ittt	le
 8025e64:	2330      	movle	r3, #48	@ 0x30
 8025e66:	f806 3c01 	strble.w	r3, [r6, #-1]
 8025e6a:	f106 36ff 	addle.w	r6, r6, #4294967295
 8025e6e:	1b92      	subs	r2, r2, r6
 8025e70:	6122      	str	r2, [r4, #16]
 8025e72:	f8cd a000 	str.w	sl, [sp]
 8025e76:	464b      	mov	r3, r9
 8025e78:	aa03      	add	r2, sp, #12
 8025e7a:	4621      	mov	r1, r4
 8025e7c:	4640      	mov	r0, r8
 8025e7e:	f7ff fee7 	bl	8025c50 <_printf_common>
 8025e82:	3001      	adds	r0, #1
 8025e84:	d14a      	bne.n	8025f1c <_printf_i+0x1f0>
 8025e86:	f04f 30ff 	mov.w	r0, #4294967295
 8025e8a:	b004      	add	sp, #16
 8025e8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025e90:	6823      	ldr	r3, [r4, #0]
 8025e92:	f043 0320 	orr.w	r3, r3, #32
 8025e96:	6023      	str	r3, [r4, #0]
 8025e98:	4832      	ldr	r0, [pc, #200]	@ (8025f64 <_printf_i+0x238>)
 8025e9a:	2778      	movs	r7, #120	@ 0x78
 8025e9c:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8025ea0:	6823      	ldr	r3, [r4, #0]
 8025ea2:	6831      	ldr	r1, [r6, #0]
 8025ea4:	061f      	lsls	r7, r3, #24
 8025ea6:	f851 5b04 	ldr.w	r5, [r1], #4
 8025eaa:	d402      	bmi.n	8025eb2 <_printf_i+0x186>
 8025eac:	065f      	lsls	r7, r3, #25
 8025eae:	bf48      	it	mi
 8025eb0:	b2ad      	uxthmi	r5, r5
 8025eb2:	6031      	str	r1, [r6, #0]
 8025eb4:	07d9      	lsls	r1, r3, #31
 8025eb6:	bf44      	itt	mi
 8025eb8:	f043 0320 	orrmi.w	r3, r3, #32
 8025ebc:	6023      	strmi	r3, [r4, #0]
 8025ebe:	b11d      	cbz	r5, 8025ec8 <_printf_i+0x19c>
 8025ec0:	2310      	movs	r3, #16
 8025ec2:	e7ad      	b.n	8025e20 <_printf_i+0xf4>
 8025ec4:	4826      	ldr	r0, [pc, #152]	@ (8025f60 <_printf_i+0x234>)
 8025ec6:	e7e9      	b.n	8025e9c <_printf_i+0x170>
 8025ec8:	6823      	ldr	r3, [r4, #0]
 8025eca:	f023 0320 	bic.w	r3, r3, #32
 8025ece:	6023      	str	r3, [r4, #0]
 8025ed0:	e7f6      	b.n	8025ec0 <_printf_i+0x194>
 8025ed2:	4616      	mov	r6, r2
 8025ed4:	e7bd      	b.n	8025e52 <_printf_i+0x126>
 8025ed6:	6833      	ldr	r3, [r6, #0]
 8025ed8:	6825      	ldr	r5, [r4, #0]
 8025eda:	6961      	ldr	r1, [r4, #20]
 8025edc:	1d18      	adds	r0, r3, #4
 8025ede:	6030      	str	r0, [r6, #0]
 8025ee0:	062e      	lsls	r6, r5, #24
 8025ee2:	681b      	ldr	r3, [r3, #0]
 8025ee4:	d501      	bpl.n	8025eea <_printf_i+0x1be>
 8025ee6:	6019      	str	r1, [r3, #0]
 8025ee8:	e002      	b.n	8025ef0 <_printf_i+0x1c4>
 8025eea:	0668      	lsls	r0, r5, #25
 8025eec:	d5fb      	bpl.n	8025ee6 <_printf_i+0x1ba>
 8025eee:	8019      	strh	r1, [r3, #0]
 8025ef0:	2300      	movs	r3, #0
 8025ef2:	6123      	str	r3, [r4, #16]
 8025ef4:	4616      	mov	r6, r2
 8025ef6:	e7bc      	b.n	8025e72 <_printf_i+0x146>
 8025ef8:	6833      	ldr	r3, [r6, #0]
 8025efa:	1d1a      	adds	r2, r3, #4
 8025efc:	6032      	str	r2, [r6, #0]
 8025efe:	681e      	ldr	r6, [r3, #0]
 8025f00:	6862      	ldr	r2, [r4, #4]
 8025f02:	2100      	movs	r1, #0
 8025f04:	4630      	mov	r0, r6
 8025f06:	f7da f973 	bl	80001f0 <memchr>
 8025f0a:	b108      	cbz	r0, 8025f10 <_printf_i+0x1e4>
 8025f0c:	1b80      	subs	r0, r0, r6
 8025f0e:	6060      	str	r0, [r4, #4]
 8025f10:	6863      	ldr	r3, [r4, #4]
 8025f12:	6123      	str	r3, [r4, #16]
 8025f14:	2300      	movs	r3, #0
 8025f16:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8025f1a:	e7aa      	b.n	8025e72 <_printf_i+0x146>
 8025f1c:	6923      	ldr	r3, [r4, #16]
 8025f1e:	4632      	mov	r2, r6
 8025f20:	4649      	mov	r1, r9
 8025f22:	4640      	mov	r0, r8
 8025f24:	47d0      	blx	sl
 8025f26:	3001      	adds	r0, #1
 8025f28:	d0ad      	beq.n	8025e86 <_printf_i+0x15a>
 8025f2a:	6823      	ldr	r3, [r4, #0]
 8025f2c:	079b      	lsls	r3, r3, #30
 8025f2e:	d413      	bmi.n	8025f58 <_printf_i+0x22c>
 8025f30:	68e0      	ldr	r0, [r4, #12]
 8025f32:	9b03      	ldr	r3, [sp, #12]
 8025f34:	4298      	cmp	r0, r3
 8025f36:	bfb8      	it	lt
 8025f38:	4618      	movlt	r0, r3
 8025f3a:	e7a6      	b.n	8025e8a <_printf_i+0x15e>
 8025f3c:	2301      	movs	r3, #1
 8025f3e:	4632      	mov	r2, r6
 8025f40:	4649      	mov	r1, r9
 8025f42:	4640      	mov	r0, r8
 8025f44:	47d0      	blx	sl
 8025f46:	3001      	adds	r0, #1
 8025f48:	d09d      	beq.n	8025e86 <_printf_i+0x15a>
 8025f4a:	3501      	adds	r5, #1
 8025f4c:	68e3      	ldr	r3, [r4, #12]
 8025f4e:	9903      	ldr	r1, [sp, #12]
 8025f50:	1a5b      	subs	r3, r3, r1
 8025f52:	42ab      	cmp	r3, r5
 8025f54:	dcf2      	bgt.n	8025f3c <_printf_i+0x210>
 8025f56:	e7eb      	b.n	8025f30 <_printf_i+0x204>
 8025f58:	2500      	movs	r5, #0
 8025f5a:	f104 0619 	add.w	r6, r4, #25
 8025f5e:	e7f5      	b.n	8025f4c <_printf_i+0x220>
 8025f60:	0802729f 	.word	0x0802729f
 8025f64:	080272b0 	.word	0x080272b0

08025f68 <__sflush_r>:
 8025f68:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8025f6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025f70:	0716      	lsls	r6, r2, #28
 8025f72:	4605      	mov	r5, r0
 8025f74:	460c      	mov	r4, r1
 8025f76:	d454      	bmi.n	8026022 <__sflush_r+0xba>
 8025f78:	684b      	ldr	r3, [r1, #4]
 8025f7a:	2b00      	cmp	r3, #0
 8025f7c:	dc02      	bgt.n	8025f84 <__sflush_r+0x1c>
 8025f7e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8025f80:	2b00      	cmp	r3, #0
 8025f82:	dd48      	ble.n	8026016 <__sflush_r+0xae>
 8025f84:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8025f86:	2e00      	cmp	r6, #0
 8025f88:	d045      	beq.n	8026016 <__sflush_r+0xae>
 8025f8a:	2300      	movs	r3, #0
 8025f8c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8025f90:	682f      	ldr	r7, [r5, #0]
 8025f92:	6a21      	ldr	r1, [r4, #32]
 8025f94:	602b      	str	r3, [r5, #0]
 8025f96:	d030      	beq.n	8025ffa <__sflush_r+0x92>
 8025f98:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8025f9a:	89a3      	ldrh	r3, [r4, #12]
 8025f9c:	0759      	lsls	r1, r3, #29
 8025f9e:	d505      	bpl.n	8025fac <__sflush_r+0x44>
 8025fa0:	6863      	ldr	r3, [r4, #4]
 8025fa2:	1ad2      	subs	r2, r2, r3
 8025fa4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8025fa6:	b10b      	cbz	r3, 8025fac <__sflush_r+0x44>
 8025fa8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8025faa:	1ad2      	subs	r2, r2, r3
 8025fac:	2300      	movs	r3, #0
 8025fae:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8025fb0:	6a21      	ldr	r1, [r4, #32]
 8025fb2:	4628      	mov	r0, r5
 8025fb4:	47b0      	blx	r6
 8025fb6:	1c43      	adds	r3, r0, #1
 8025fb8:	89a3      	ldrh	r3, [r4, #12]
 8025fba:	d106      	bne.n	8025fca <__sflush_r+0x62>
 8025fbc:	6829      	ldr	r1, [r5, #0]
 8025fbe:	291d      	cmp	r1, #29
 8025fc0:	d82b      	bhi.n	802601a <__sflush_r+0xb2>
 8025fc2:	4a2a      	ldr	r2, [pc, #168]	@ (802606c <__sflush_r+0x104>)
 8025fc4:	40ca      	lsrs	r2, r1
 8025fc6:	07d6      	lsls	r6, r2, #31
 8025fc8:	d527      	bpl.n	802601a <__sflush_r+0xb2>
 8025fca:	2200      	movs	r2, #0
 8025fcc:	6062      	str	r2, [r4, #4]
 8025fce:	04d9      	lsls	r1, r3, #19
 8025fd0:	6922      	ldr	r2, [r4, #16]
 8025fd2:	6022      	str	r2, [r4, #0]
 8025fd4:	d504      	bpl.n	8025fe0 <__sflush_r+0x78>
 8025fd6:	1c42      	adds	r2, r0, #1
 8025fd8:	d101      	bne.n	8025fde <__sflush_r+0x76>
 8025fda:	682b      	ldr	r3, [r5, #0]
 8025fdc:	b903      	cbnz	r3, 8025fe0 <__sflush_r+0x78>
 8025fde:	6560      	str	r0, [r4, #84]	@ 0x54
 8025fe0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8025fe2:	602f      	str	r7, [r5, #0]
 8025fe4:	b1b9      	cbz	r1, 8026016 <__sflush_r+0xae>
 8025fe6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8025fea:	4299      	cmp	r1, r3
 8025fec:	d002      	beq.n	8025ff4 <__sflush_r+0x8c>
 8025fee:	4628      	mov	r0, r5
 8025ff0:	f7ff fca2 	bl	8025938 <_free_r>
 8025ff4:	2300      	movs	r3, #0
 8025ff6:	6363      	str	r3, [r4, #52]	@ 0x34
 8025ff8:	e00d      	b.n	8026016 <__sflush_r+0xae>
 8025ffa:	2301      	movs	r3, #1
 8025ffc:	4628      	mov	r0, r5
 8025ffe:	47b0      	blx	r6
 8026000:	4602      	mov	r2, r0
 8026002:	1c50      	adds	r0, r2, #1
 8026004:	d1c9      	bne.n	8025f9a <__sflush_r+0x32>
 8026006:	682b      	ldr	r3, [r5, #0]
 8026008:	2b00      	cmp	r3, #0
 802600a:	d0c6      	beq.n	8025f9a <__sflush_r+0x32>
 802600c:	2b1d      	cmp	r3, #29
 802600e:	d001      	beq.n	8026014 <__sflush_r+0xac>
 8026010:	2b16      	cmp	r3, #22
 8026012:	d11e      	bne.n	8026052 <__sflush_r+0xea>
 8026014:	602f      	str	r7, [r5, #0]
 8026016:	2000      	movs	r0, #0
 8026018:	e022      	b.n	8026060 <__sflush_r+0xf8>
 802601a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802601e:	b21b      	sxth	r3, r3
 8026020:	e01b      	b.n	802605a <__sflush_r+0xf2>
 8026022:	690f      	ldr	r7, [r1, #16]
 8026024:	2f00      	cmp	r7, #0
 8026026:	d0f6      	beq.n	8026016 <__sflush_r+0xae>
 8026028:	0793      	lsls	r3, r2, #30
 802602a:	680e      	ldr	r6, [r1, #0]
 802602c:	bf08      	it	eq
 802602e:	694b      	ldreq	r3, [r1, #20]
 8026030:	600f      	str	r7, [r1, #0]
 8026032:	bf18      	it	ne
 8026034:	2300      	movne	r3, #0
 8026036:	eba6 0807 	sub.w	r8, r6, r7
 802603a:	608b      	str	r3, [r1, #8]
 802603c:	f1b8 0f00 	cmp.w	r8, #0
 8026040:	dde9      	ble.n	8026016 <__sflush_r+0xae>
 8026042:	6a21      	ldr	r1, [r4, #32]
 8026044:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8026046:	4643      	mov	r3, r8
 8026048:	463a      	mov	r2, r7
 802604a:	4628      	mov	r0, r5
 802604c:	47b0      	blx	r6
 802604e:	2800      	cmp	r0, #0
 8026050:	dc08      	bgt.n	8026064 <__sflush_r+0xfc>
 8026052:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026056:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802605a:	81a3      	strh	r3, [r4, #12]
 802605c:	f04f 30ff 	mov.w	r0, #4294967295
 8026060:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026064:	4407      	add	r7, r0
 8026066:	eba8 0800 	sub.w	r8, r8, r0
 802606a:	e7e7      	b.n	802603c <__sflush_r+0xd4>
 802606c:	20400001 	.word	0x20400001

08026070 <_fflush_r>:
 8026070:	b538      	push	{r3, r4, r5, lr}
 8026072:	690b      	ldr	r3, [r1, #16]
 8026074:	4605      	mov	r5, r0
 8026076:	460c      	mov	r4, r1
 8026078:	b913      	cbnz	r3, 8026080 <_fflush_r+0x10>
 802607a:	2500      	movs	r5, #0
 802607c:	4628      	mov	r0, r5
 802607e:	bd38      	pop	{r3, r4, r5, pc}
 8026080:	b118      	cbz	r0, 802608a <_fflush_r+0x1a>
 8026082:	6a03      	ldr	r3, [r0, #32]
 8026084:	b90b      	cbnz	r3, 802608a <_fflush_r+0x1a>
 8026086:	f7ff fa91 	bl	80255ac <__sinit>
 802608a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802608e:	2b00      	cmp	r3, #0
 8026090:	d0f3      	beq.n	802607a <_fflush_r+0xa>
 8026092:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8026094:	07d0      	lsls	r0, r2, #31
 8026096:	d404      	bmi.n	80260a2 <_fflush_r+0x32>
 8026098:	0599      	lsls	r1, r3, #22
 802609a:	d402      	bmi.n	80260a2 <_fflush_r+0x32>
 802609c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802609e:	f7ff fbde 	bl	802585e <__retarget_lock_acquire_recursive>
 80260a2:	4628      	mov	r0, r5
 80260a4:	4621      	mov	r1, r4
 80260a6:	f7ff ff5f 	bl	8025f68 <__sflush_r>
 80260aa:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80260ac:	07da      	lsls	r2, r3, #31
 80260ae:	4605      	mov	r5, r0
 80260b0:	d4e4      	bmi.n	802607c <_fflush_r+0xc>
 80260b2:	89a3      	ldrh	r3, [r4, #12]
 80260b4:	059b      	lsls	r3, r3, #22
 80260b6:	d4e1      	bmi.n	802607c <_fflush_r+0xc>
 80260b8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80260ba:	f7ff fbd1 	bl	8025860 <__retarget_lock_release_recursive>
 80260be:	e7dd      	b.n	802607c <_fflush_r+0xc>

080260c0 <__swbuf_r>:
 80260c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80260c2:	460e      	mov	r6, r1
 80260c4:	4614      	mov	r4, r2
 80260c6:	4605      	mov	r5, r0
 80260c8:	b118      	cbz	r0, 80260d2 <__swbuf_r+0x12>
 80260ca:	6a03      	ldr	r3, [r0, #32]
 80260cc:	b90b      	cbnz	r3, 80260d2 <__swbuf_r+0x12>
 80260ce:	f7ff fa6d 	bl	80255ac <__sinit>
 80260d2:	69a3      	ldr	r3, [r4, #24]
 80260d4:	60a3      	str	r3, [r4, #8]
 80260d6:	89a3      	ldrh	r3, [r4, #12]
 80260d8:	071a      	lsls	r2, r3, #28
 80260da:	d501      	bpl.n	80260e0 <__swbuf_r+0x20>
 80260dc:	6923      	ldr	r3, [r4, #16]
 80260de:	b943      	cbnz	r3, 80260f2 <__swbuf_r+0x32>
 80260e0:	4621      	mov	r1, r4
 80260e2:	4628      	mov	r0, r5
 80260e4:	f000 f82a 	bl	802613c <__swsetup_r>
 80260e8:	b118      	cbz	r0, 80260f2 <__swbuf_r+0x32>
 80260ea:	f04f 37ff 	mov.w	r7, #4294967295
 80260ee:	4638      	mov	r0, r7
 80260f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80260f2:	6823      	ldr	r3, [r4, #0]
 80260f4:	6922      	ldr	r2, [r4, #16]
 80260f6:	1a98      	subs	r0, r3, r2
 80260f8:	6963      	ldr	r3, [r4, #20]
 80260fa:	b2f6      	uxtb	r6, r6
 80260fc:	4283      	cmp	r3, r0
 80260fe:	4637      	mov	r7, r6
 8026100:	dc05      	bgt.n	802610e <__swbuf_r+0x4e>
 8026102:	4621      	mov	r1, r4
 8026104:	4628      	mov	r0, r5
 8026106:	f7ff ffb3 	bl	8026070 <_fflush_r>
 802610a:	2800      	cmp	r0, #0
 802610c:	d1ed      	bne.n	80260ea <__swbuf_r+0x2a>
 802610e:	68a3      	ldr	r3, [r4, #8]
 8026110:	3b01      	subs	r3, #1
 8026112:	60a3      	str	r3, [r4, #8]
 8026114:	6823      	ldr	r3, [r4, #0]
 8026116:	1c5a      	adds	r2, r3, #1
 8026118:	6022      	str	r2, [r4, #0]
 802611a:	701e      	strb	r6, [r3, #0]
 802611c:	6962      	ldr	r2, [r4, #20]
 802611e:	1c43      	adds	r3, r0, #1
 8026120:	429a      	cmp	r2, r3
 8026122:	d004      	beq.n	802612e <__swbuf_r+0x6e>
 8026124:	89a3      	ldrh	r3, [r4, #12]
 8026126:	07db      	lsls	r3, r3, #31
 8026128:	d5e1      	bpl.n	80260ee <__swbuf_r+0x2e>
 802612a:	2e0a      	cmp	r6, #10
 802612c:	d1df      	bne.n	80260ee <__swbuf_r+0x2e>
 802612e:	4621      	mov	r1, r4
 8026130:	4628      	mov	r0, r5
 8026132:	f7ff ff9d 	bl	8026070 <_fflush_r>
 8026136:	2800      	cmp	r0, #0
 8026138:	d0d9      	beq.n	80260ee <__swbuf_r+0x2e>
 802613a:	e7d6      	b.n	80260ea <__swbuf_r+0x2a>

0802613c <__swsetup_r>:
 802613c:	b538      	push	{r3, r4, r5, lr}
 802613e:	4b29      	ldr	r3, [pc, #164]	@ (80261e4 <__swsetup_r+0xa8>)
 8026140:	4605      	mov	r5, r0
 8026142:	6818      	ldr	r0, [r3, #0]
 8026144:	460c      	mov	r4, r1
 8026146:	b118      	cbz	r0, 8026150 <__swsetup_r+0x14>
 8026148:	6a03      	ldr	r3, [r0, #32]
 802614a:	b90b      	cbnz	r3, 8026150 <__swsetup_r+0x14>
 802614c:	f7ff fa2e 	bl	80255ac <__sinit>
 8026150:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026154:	0719      	lsls	r1, r3, #28
 8026156:	d422      	bmi.n	802619e <__swsetup_r+0x62>
 8026158:	06da      	lsls	r2, r3, #27
 802615a:	d407      	bmi.n	802616c <__swsetup_r+0x30>
 802615c:	2209      	movs	r2, #9
 802615e:	602a      	str	r2, [r5, #0]
 8026160:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8026164:	81a3      	strh	r3, [r4, #12]
 8026166:	f04f 30ff 	mov.w	r0, #4294967295
 802616a:	e033      	b.n	80261d4 <__swsetup_r+0x98>
 802616c:	0758      	lsls	r0, r3, #29
 802616e:	d512      	bpl.n	8026196 <__swsetup_r+0x5a>
 8026170:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8026172:	b141      	cbz	r1, 8026186 <__swsetup_r+0x4a>
 8026174:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8026178:	4299      	cmp	r1, r3
 802617a:	d002      	beq.n	8026182 <__swsetup_r+0x46>
 802617c:	4628      	mov	r0, r5
 802617e:	f7ff fbdb 	bl	8025938 <_free_r>
 8026182:	2300      	movs	r3, #0
 8026184:	6363      	str	r3, [r4, #52]	@ 0x34
 8026186:	89a3      	ldrh	r3, [r4, #12]
 8026188:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 802618c:	81a3      	strh	r3, [r4, #12]
 802618e:	2300      	movs	r3, #0
 8026190:	6063      	str	r3, [r4, #4]
 8026192:	6923      	ldr	r3, [r4, #16]
 8026194:	6023      	str	r3, [r4, #0]
 8026196:	89a3      	ldrh	r3, [r4, #12]
 8026198:	f043 0308 	orr.w	r3, r3, #8
 802619c:	81a3      	strh	r3, [r4, #12]
 802619e:	6923      	ldr	r3, [r4, #16]
 80261a0:	b94b      	cbnz	r3, 80261b6 <__swsetup_r+0x7a>
 80261a2:	89a3      	ldrh	r3, [r4, #12]
 80261a4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80261a8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80261ac:	d003      	beq.n	80261b6 <__swsetup_r+0x7a>
 80261ae:	4621      	mov	r1, r4
 80261b0:	4628      	mov	r0, r5
 80261b2:	f000 f83f 	bl	8026234 <__smakebuf_r>
 80261b6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80261ba:	f013 0201 	ands.w	r2, r3, #1
 80261be:	d00a      	beq.n	80261d6 <__swsetup_r+0x9a>
 80261c0:	2200      	movs	r2, #0
 80261c2:	60a2      	str	r2, [r4, #8]
 80261c4:	6962      	ldr	r2, [r4, #20]
 80261c6:	4252      	negs	r2, r2
 80261c8:	61a2      	str	r2, [r4, #24]
 80261ca:	6922      	ldr	r2, [r4, #16]
 80261cc:	b942      	cbnz	r2, 80261e0 <__swsetup_r+0xa4>
 80261ce:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80261d2:	d1c5      	bne.n	8026160 <__swsetup_r+0x24>
 80261d4:	bd38      	pop	{r3, r4, r5, pc}
 80261d6:	0799      	lsls	r1, r3, #30
 80261d8:	bf58      	it	pl
 80261da:	6962      	ldrpl	r2, [r4, #20]
 80261dc:	60a2      	str	r2, [r4, #8]
 80261de:	e7f4      	b.n	80261ca <__swsetup_r+0x8e>
 80261e0:	2000      	movs	r0, #0
 80261e2:	e7f7      	b.n	80261d4 <__swsetup_r+0x98>
 80261e4:	20000110 	.word	0x20000110

080261e8 <__swhatbuf_r>:
 80261e8:	b570      	push	{r4, r5, r6, lr}
 80261ea:	460c      	mov	r4, r1
 80261ec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80261f0:	2900      	cmp	r1, #0
 80261f2:	b096      	sub	sp, #88	@ 0x58
 80261f4:	4615      	mov	r5, r2
 80261f6:	461e      	mov	r6, r3
 80261f8:	da0d      	bge.n	8026216 <__swhatbuf_r+0x2e>
 80261fa:	89a3      	ldrh	r3, [r4, #12]
 80261fc:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8026200:	f04f 0100 	mov.w	r1, #0
 8026204:	bf14      	ite	ne
 8026206:	2340      	movne	r3, #64	@ 0x40
 8026208:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 802620c:	2000      	movs	r0, #0
 802620e:	6031      	str	r1, [r6, #0]
 8026210:	602b      	str	r3, [r5, #0]
 8026212:	b016      	add	sp, #88	@ 0x58
 8026214:	bd70      	pop	{r4, r5, r6, pc}
 8026216:	466a      	mov	r2, sp
 8026218:	f000 f848 	bl	80262ac <_fstat_r>
 802621c:	2800      	cmp	r0, #0
 802621e:	dbec      	blt.n	80261fa <__swhatbuf_r+0x12>
 8026220:	9901      	ldr	r1, [sp, #4]
 8026222:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8026226:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 802622a:	4259      	negs	r1, r3
 802622c:	4159      	adcs	r1, r3
 802622e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8026232:	e7eb      	b.n	802620c <__swhatbuf_r+0x24>

08026234 <__smakebuf_r>:
 8026234:	898b      	ldrh	r3, [r1, #12]
 8026236:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8026238:	079d      	lsls	r5, r3, #30
 802623a:	4606      	mov	r6, r0
 802623c:	460c      	mov	r4, r1
 802623e:	d507      	bpl.n	8026250 <__smakebuf_r+0x1c>
 8026240:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8026244:	6023      	str	r3, [r4, #0]
 8026246:	6123      	str	r3, [r4, #16]
 8026248:	2301      	movs	r3, #1
 802624a:	6163      	str	r3, [r4, #20]
 802624c:	b003      	add	sp, #12
 802624e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026250:	ab01      	add	r3, sp, #4
 8026252:	466a      	mov	r2, sp
 8026254:	f7ff ffc8 	bl	80261e8 <__swhatbuf_r>
 8026258:	9f00      	ldr	r7, [sp, #0]
 802625a:	4605      	mov	r5, r0
 802625c:	4639      	mov	r1, r7
 802625e:	4630      	mov	r0, r6
 8026260:	f7ff f87e 	bl	8025360 <_malloc_r>
 8026264:	b948      	cbnz	r0, 802627a <__smakebuf_r+0x46>
 8026266:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802626a:	059a      	lsls	r2, r3, #22
 802626c:	d4ee      	bmi.n	802624c <__smakebuf_r+0x18>
 802626e:	f023 0303 	bic.w	r3, r3, #3
 8026272:	f043 0302 	orr.w	r3, r3, #2
 8026276:	81a3      	strh	r3, [r4, #12]
 8026278:	e7e2      	b.n	8026240 <__smakebuf_r+0xc>
 802627a:	89a3      	ldrh	r3, [r4, #12]
 802627c:	6020      	str	r0, [r4, #0]
 802627e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8026282:	81a3      	strh	r3, [r4, #12]
 8026284:	9b01      	ldr	r3, [sp, #4]
 8026286:	e9c4 0704 	strd	r0, r7, [r4, #16]
 802628a:	b15b      	cbz	r3, 80262a4 <__smakebuf_r+0x70>
 802628c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8026290:	4630      	mov	r0, r6
 8026292:	f000 f81d 	bl	80262d0 <_isatty_r>
 8026296:	b128      	cbz	r0, 80262a4 <__smakebuf_r+0x70>
 8026298:	89a3      	ldrh	r3, [r4, #12]
 802629a:	f023 0303 	bic.w	r3, r3, #3
 802629e:	f043 0301 	orr.w	r3, r3, #1
 80262a2:	81a3      	strh	r3, [r4, #12]
 80262a4:	89a3      	ldrh	r3, [r4, #12]
 80262a6:	431d      	orrs	r5, r3
 80262a8:	81a5      	strh	r5, [r4, #12]
 80262aa:	e7cf      	b.n	802624c <__smakebuf_r+0x18>

080262ac <_fstat_r>:
 80262ac:	b538      	push	{r3, r4, r5, lr}
 80262ae:	4d07      	ldr	r5, [pc, #28]	@ (80262cc <_fstat_r+0x20>)
 80262b0:	2300      	movs	r3, #0
 80262b2:	4604      	mov	r4, r0
 80262b4:	4608      	mov	r0, r1
 80262b6:	4611      	mov	r1, r2
 80262b8:	602b      	str	r3, [r5, #0]
 80262ba:	f7db fa3e 	bl	800173a <_fstat>
 80262be:	1c43      	adds	r3, r0, #1
 80262c0:	d102      	bne.n	80262c8 <_fstat_r+0x1c>
 80262c2:	682b      	ldr	r3, [r5, #0]
 80262c4:	b103      	cbz	r3, 80262c8 <_fstat_r+0x1c>
 80262c6:	6023      	str	r3, [r4, #0]
 80262c8:	bd38      	pop	{r3, r4, r5, pc}
 80262ca:	bf00      	nop
 80262cc:	20015dd8 	.word	0x20015dd8

080262d0 <_isatty_r>:
 80262d0:	b538      	push	{r3, r4, r5, lr}
 80262d2:	4d06      	ldr	r5, [pc, #24]	@ (80262ec <_isatty_r+0x1c>)
 80262d4:	2300      	movs	r3, #0
 80262d6:	4604      	mov	r4, r0
 80262d8:	4608      	mov	r0, r1
 80262da:	602b      	str	r3, [r5, #0]
 80262dc:	f7db fa32 	bl	8001744 <_isatty>
 80262e0:	1c43      	adds	r3, r0, #1
 80262e2:	d102      	bne.n	80262ea <_isatty_r+0x1a>
 80262e4:	682b      	ldr	r3, [r5, #0]
 80262e6:	b103      	cbz	r3, 80262ea <_isatty_r+0x1a>
 80262e8:	6023      	str	r3, [r4, #0]
 80262ea:	bd38      	pop	{r3, r4, r5, pc}
 80262ec:	20015dd8 	.word	0x20015dd8

080262f0 <_init>:
 80262f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80262f2:	bf00      	nop
 80262f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80262f6:	bc08      	pop	{r3}
 80262f8:	469e      	mov	lr, r3
 80262fa:	4770      	bx	lr

080262fc <_fini>:
 80262fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80262fe:	bf00      	nop
 8026300:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8026302:	bc08      	pop	{r3}
 8026304:	469e      	mov	lr, r3
 8026306:	4770      	bx	lr
