
STM32F429I_DISCO_REV_D01.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00026648  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002ce0  080267f8  080267f8  000277f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000079a  080294d8  080294d8  0002a4d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000024  08029c74  08029c74  0002ac74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000096  08029c98  08029c98  0002ac98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 001a6898  08029d30  08029d30  0002ad30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  081d05c8  081d05c8  001d2380  2**0
                  CONTENTS
  8 .ARM          00000008  081d05c8  081d05c8  001d15c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  081d05d0  081d05d0  001d2380  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  081d05d0  081d05d0  001d15d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  081d05e4  081d05e4  001d15e4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000164  20000000  081d05ec  001d2000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  20000180  081d0750  001d2180  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  20000280  081d0850  001d2280  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          00015cac  20000380  081d0950  001d2380  2**2
                  ALLOC
 16 ._user_heap_stack 00001404  2001602c  081d0950  001d302c  2**0
                  ALLOC
 17 .ARM.attributes 00000030  00000000  00000000  001d2380  2**0
                  CONTENTS, READONLY
 18 TouchGFX_Framebuffer 00070800  d0000000  d0000000  001d3000  2**2
                  ALLOC
 19 .debug_line   00062931  00000000  00000000  001d23b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line_str 00000066  00000000  00000000  00234ce1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_info   00101b2d  00000000  00000000  00234d47  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_abbrev 0001b538  00000000  00000000  00336874  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_aranges 00003cb0  00000000  00000000  00351db0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_str    001158ea  00000000  00000000  00355a60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_rnglists 000052b6  00000000  00000000  0046b34a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_loclists 00023d96  00000000  00000000  00470600  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_macro  0003439b  00000000  00000000  00494396  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .comment      000000c2  00000000  00000000  004c8731  2**0
                  CONTENTS, READONLY
 29 .debug_frame  0000a7ac  00000000  00000000  004c87f4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000380 	.word	0x20000380
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080267e0 	.word	0x080267e0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000384 	.word	0x20000384
 80001ec:	080267e0 	.word	0x080267e0

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_ldivmod>:
 8000290:	b97b      	cbnz	r3, 80002b2 <__aeabi_ldivmod+0x22>
 8000292:	b972      	cbnz	r2, 80002b2 <__aeabi_ldivmod+0x22>
 8000294:	2900      	cmp	r1, #0
 8000296:	bfbe      	ittt	lt
 8000298:	2000      	movlt	r0, #0
 800029a:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 800029e:	e006      	blt.n	80002ae <__aeabi_ldivmod+0x1e>
 80002a0:	bf08      	it	eq
 80002a2:	2800      	cmpeq	r0, #0
 80002a4:	bf1c      	itt	ne
 80002a6:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 80002aa:	f04f 30ff 	movne.w	r0, #4294967295
 80002ae:	f000 b9d3 	b.w	8000658 <__aeabi_idiv0>
 80002b2:	f1ad 0c08 	sub.w	ip, sp, #8
 80002b6:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002ba:	2900      	cmp	r1, #0
 80002bc:	db09      	blt.n	80002d2 <__aeabi_ldivmod+0x42>
 80002be:	2b00      	cmp	r3, #0
 80002c0:	db1a      	blt.n	80002f8 <__aeabi_ldivmod+0x68>
 80002c2:	f000 f84d 	bl	8000360 <__udivmoddi4>
 80002c6:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002ca:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ce:	b004      	add	sp, #16
 80002d0:	4770      	bx	lr
 80002d2:	4240      	negs	r0, r0
 80002d4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002d8:	2b00      	cmp	r3, #0
 80002da:	db1b      	blt.n	8000314 <__aeabi_ldivmod+0x84>
 80002dc:	f000 f840 	bl	8000360 <__udivmoddi4>
 80002e0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002e8:	b004      	add	sp, #16
 80002ea:	4240      	negs	r0, r0
 80002ec:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002f0:	4252      	negs	r2, r2
 80002f2:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002f6:	4770      	bx	lr
 80002f8:	4252      	negs	r2, r2
 80002fa:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002fe:	f000 f82f 	bl	8000360 <__udivmoddi4>
 8000302:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000306:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800030a:	b004      	add	sp, #16
 800030c:	4240      	negs	r0, r0
 800030e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000312:	4770      	bx	lr
 8000314:	4252      	negs	r2, r2
 8000316:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800031a:	f000 f821 	bl	8000360 <__udivmoddi4>
 800031e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000322:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000326:	b004      	add	sp, #16
 8000328:	4252      	negs	r2, r2
 800032a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800032e:	4770      	bx	lr

08000330 <__aeabi_uldivmod>:
 8000330:	b953      	cbnz	r3, 8000348 <__aeabi_uldivmod+0x18>
 8000332:	b94a      	cbnz	r2, 8000348 <__aeabi_uldivmod+0x18>
 8000334:	2900      	cmp	r1, #0
 8000336:	bf08      	it	eq
 8000338:	2800      	cmpeq	r0, #0
 800033a:	bf1c      	itt	ne
 800033c:	f04f 31ff 	movne.w	r1, #4294967295
 8000340:	f04f 30ff 	movne.w	r0, #4294967295
 8000344:	f000 b988 	b.w	8000658 <__aeabi_idiv0>
 8000348:	f1ad 0c08 	sub.w	ip, sp, #8
 800034c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000350:	f000 f806 	bl	8000360 <__udivmoddi4>
 8000354:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000358:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800035c:	b004      	add	sp, #16
 800035e:	4770      	bx	lr

08000360 <__udivmoddi4>:
 8000360:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000364:	9d08      	ldr	r5, [sp, #32]
 8000366:	468e      	mov	lr, r1
 8000368:	4604      	mov	r4, r0
 800036a:	4688      	mov	r8, r1
 800036c:	2b00      	cmp	r3, #0
 800036e:	d14a      	bne.n	8000406 <__udivmoddi4+0xa6>
 8000370:	428a      	cmp	r2, r1
 8000372:	4617      	mov	r7, r2
 8000374:	d962      	bls.n	800043c <__udivmoddi4+0xdc>
 8000376:	fab2 f682 	clz	r6, r2
 800037a:	b14e      	cbz	r6, 8000390 <__udivmoddi4+0x30>
 800037c:	f1c6 0320 	rsb	r3, r6, #32
 8000380:	fa01 f806 	lsl.w	r8, r1, r6
 8000384:	fa20 f303 	lsr.w	r3, r0, r3
 8000388:	40b7      	lsls	r7, r6
 800038a:	ea43 0808 	orr.w	r8, r3, r8
 800038e:	40b4      	lsls	r4, r6
 8000390:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000394:	fa1f fc87 	uxth.w	ip, r7
 8000398:	fbb8 f1fe 	udiv	r1, r8, lr
 800039c:	0c23      	lsrs	r3, r4, #16
 800039e:	fb0e 8811 	mls	r8, lr, r1, r8
 80003a2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80003a6:	fb01 f20c 	mul.w	r2, r1, ip
 80003aa:	429a      	cmp	r2, r3
 80003ac:	d909      	bls.n	80003c2 <__udivmoddi4+0x62>
 80003ae:	18fb      	adds	r3, r7, r3
 80003b0:	f101 30ff 	add.w	r0, r1, #4294967295
 80003b4:	f080 80ea 	bcs.w	800058c <__udivmoddi4+0x22c>
 80003b8:	429a      	cmp	r2, r3
 80003ba:	f240 80e7 	bls.w	800058c <__udivmoddi4+0x22c>
 80003be:	3902      	subs	r1, #2
 80003c0:	443b      	add	r3, r7
 80003c2:	1a9a      	subs	r2, r3, r2
 80003c4:	b2a3      	uxth	r3, r4
 80003c6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ca:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ce:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003d2:	fb00 fc0c 	mul.w	ip, r0, ip
 80003d6:	459c      	cmp	ip, r3
 80003d8:	d909      	bls.n	80003ee <__udivmoddi4+0x8e>
 80003da:	18fb      	adds	r3, r7, r3
 80003dc:	f100 32ff 	add.w	r2, r0, #4294967295
 80003e0:	f080 80d6 	bcs.w	8000590 <__udivmoddi4+0x230>
 80003e4:	459c      	cmp	ip, r3
 80003e6:	f240 80d3 	bls.w	8000590 <__udivmoddi4+0x230>
 80003ea:	443b      	add	r3, r7
 80003ec:	3802      	subs	r0, #2
 80003ee:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80003f2:	eba3 030c 	sub.w	r3, r3, ip
 80003f6:	2100      	movs	r1, #0
 80003f8:	b11d      	cbz	r5, 8000402 <__udivmoddi4+0xa2>
 80003fa:	40f3      	lsrs	r3, r6
 80003fc:	2200      	movs	r2, #0
 80003fe:	e9c5 3200 	strd	r3, r2, [r5]
 8000402:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000406:	428b      	cmp	r3, r1
 8000408:	d905      	bls.n	8000416 <__udivmoddi4+0xb6>
 800040a:	b10d      	cbz	r5, 8000410 <__udivmoddi4+0xb0>
 800040c:	e9c5 0100 	strd	r0, r1, [r5]
 8000410:	2100      	movs	r1, #0
 8000412:	4608      	mov	r0, r1
 8000414:	e7f5      	b.n	8000402 <__udivmoddi4+0xa2>
 8000416:	fab3 f183 	clz	r1, r3
 800041a:	2900      	cmp	r1, #0
 800041c:	d146      	bne.n	80004ac <__udivmoddi4+0x14c>
 800041e:	4573      	cmp	r3, lr
 8000420:	d302      	bcc.n	8000428 <__udivmoddi4+0xc8>
 8000422:	4282      	cmp	r2, r0
 8000424:	f200 8105 	bhi.w	8000632 <__udivmoddi4+0x2d2>
 8000428:	1a84      	subs	r4, r0, r2
 800042a:	eb6e 0203 	sbc.w	r2, lr, r3
 800042e:	2001      	movs	r0, #1
 8000430:	4690      	mov	r8, r2
 8000432:	2d00      	cmp	r5, #0
 8000434:	d0e5      	beq.n	8000402 <__udivmoddi4+0xa2>
 8000436:	e9c5 4800 	strd	r4, r8, [r5]
 800043a:	e7e2      	b.n	8000402 <__udivmoddi4+0xa2>
 800043c:	2a00      	cmp	r2, #0
 800043e:	f000 8090 	beq.w	8000562 <__udivmoddi4+0x202>
 8000442:	fab2 f682 	clz	r6, r2
 8000446:	2e00      	cmp	r6, #0
 8000448:	f040 80a4 	bne.w	8000594 <__udivmoddi4+0x234>
 800044c:	1a8a      	subs	r2, r1, r2
 800044e:	0c03      	lsrs	r3, r0, #16
 8000450:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000454:	b280      	uxth	r0, r0
 8000456:	b2bc      	uxth	r4, r7
 8000458:	2101      	movs	r1, #1
 800045a:	fbb2 fcfe 	udiv	ip, r2, lr
 800045e:	fb0e 221c 	mls	r2, lr, ip, r2
 8000462:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000466:	fb04 f20c 	mul.w	r2, r4, ip
 800046a:	429a      	cmp	r2, r3
 800046c:	d907      	bls.n	800047e <__udivmoddi4+0x11e>
 800046e:	18fb      	adds	r3, r7, r3
 8000470:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000474:	d202      	bcs.n	800047c <__udivmoddi4+0x11c>
 8000476:	429a      	cmp	r2, r3
 8000478:	f200 80e0 	bhi.w	800063c <__udivmoddi4+0x2dc>
 800047c:	46c4      	mov	ip, r8
 800047e:	1a9b      	subs	r3, r3, r2
 8000480:	fbb3 f2fe 	udiv	r2, r3, lr
 8000484:	fb0e 3312 	mls	r3, lr, r2, r3
 8000488:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 800048c:	fb02 f404 	mul.w	r4, r2, r4
 8000490:	429c      	cmp	r4, r3
 8000492:	d907      	bls.n	80004a4 <__udivmoddi4+0x144>
 8000494:	18fb      	adds	r3, r7, r3
 8000496:	f102 30ff 	add.w	r0, r2, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x142>
 800049c:	429c      	cmp	r4, r3
 800049e:	f200 80ca 	bhi.w	8000636 <__udivmoddi4+0x2d6>
 80004a2:	4602      	mov	r2, r0
 80004a4:	1b1b      	subs	r3, r3, r4
 80004a6:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 80004aa:	e7a5      	b.n	80003f8 <__udivmoddi4+0x98>
 80004ac:	f1c1 0620 	rsb	r6, r1, #32
 80004b0:	408b      	lsls	r3, r1
 80004b2:	fa22 f706 	lsr.w	r7, r2, r6
 80004b6:	431f      	orrs	r7, r3
 80004b8:	fa0e f401 	lsl.w	r4, lr, r1
 80004bc:	fa20 f306 	lsr.w	r3, r0, r6
 80004c0:	fa2e fe06 	lsr.w	lr, lr, r6
 80004c4:	ea4f 4917 	mov.w	r9, r7, lsr #16
 80004c8:	4323      	orrs	r3, r4
 80004ca:	fa00 f801 	lsl.w	r8, r0, r1
 80004ce:	fa1f fc87 	uxth.w	ip, r7
 80004d2:	fbbe f0f9 	udiv	r0, lr, r9
 80004d6:	0c1c      	lsrs	r4, r3, #16
 80004d8:	fb09 ee10 	mls	lr, r9, r0, lr
 80004dc:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 80004e0:	fb00 fe0c 	mul.w	lr, r0, ip
 80004e4:	45a6      	cmp	lr, r4
 80004e6:	fa02 f201 	lsl.w	r2, r2, r1
 80004ea:	d909      	bls.n	8000500 <__udivmoddi4+0x1a0>
 80004ec:	193c      	adds	r4, r7, r4
 80004ee:	f100 3aff 	add.w	sl, r0, #4294967295
 80004f2:	f080 809c 	bcs.w	800062e <__udivmoddi4+0x2ce>
 80004f6:	45a6      	cmp	lr, r4
 80004f8:	f240 8099 	bls.w	800062e <__udivmoddi4+0x2ce>
 80004fc:	3802      	subs	r0, #2
 80004fe:	443c      	add	r4, r7
 8000500:	eba4 040e 	sub.w	r4, r4, lr
 8000504:	fa1f fe83 	uxth.w	lr, r3
 8000508:	fbb4 f3f9 	udiv	r3, r4, r9
 800050c:	fb09 4413 	mls	r4, r9, r3, r4
 8000510:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000514:	fb03 fc0c 	mul.w	ip, r3, ip
 8000518:	45a4      	cmp	ip, r4
 800051a:	d908      	bls.n	800052e <__udivmoddi4+0x1ce>
 800051c:	193c      	adds	r4, r7, r4
 800051e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000522:	f080 8082 	bcs.w	800062a <__udivmoddi4+0x2ca>
 8000526:	45a4      	cmp	ip, r4
 8000528:	d97f      	bls.n	800062a <__udivmoddi4+0x2ca>
 800052a:	3b02      	subs	r3, #2
 800052c:	443c      	add	r4, r7
 800052e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000532:	eba4 040c 	sub.w	r4, r4, ip
 8000536:	fba0 ec02 	umull	lr, ip, r0, r2
 800053a:	4564      	cmp	r4, ip
 800053c:	4673      	mov	r3, lr
 800053e:	46e1      	mov	r9, ip
 8000540:	d362      	bcc.n	8000608 <__udivmoddi4+0x2a8>
 8000542:	d05f      	beq.n	8000604 <__udivmoddi4+0x2a4>
 8000544:	b15d      	cbz	r5, 800055e <__udivmoddi4+0x1fe>
 8000546:	ebb8 0203 	subs.w	r2, r8, r3
 800054a:	eb64 0409 	sbc.w	r4, r4, r9
 800054e:	fa04 f606 	lsl.w	r6, r4, r6
 8000552:	fa22 f301 	lsr.w	r3, r2, r1
 8000556:	431e      	orrs	r6, r3
 8000558:	40cc      	lsrs	r4, r1
 800055a:	e9c5 6400 	strd	r6, r4, [r5]
 800055e:	2100      	movs	r1, #0
 8000560:	e74f      	b.n	8000402 <__udivmoddi4+0xa2>
 8000562:	fbb1 fcf2 	udiv	ip, r1, r2
 8000566:	0c01      	lsrs	r1, r0, #16
 8000568:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 800056c:	b280      	uxth	r0, r0
 800056e:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000572:	463b      	mov	r3, r7
 8000574:	4638      	mov	r0, r7
 8000576:	463c      	mov	r4, r7
 8000578:	46b8      	mov	r8, r7
 800057a:	46be      	mov	lr, r7
 800057c:	2620      	movs	r6, #32
 800057e:	fbb1 f1f7 	udiv	r1, r1, r7
 8000582:	eba2 0208 	sub.w	r2, r2, r8
 8000586:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800058a:	e766      	b.n	800045a <__udivmoddi4+0xfa>
 800058c:	4601      	mov	r1, r0
 800058e:	e718      	b.n	80003c2 <__udivmoddi4+0x62>
 8000590:	4610      	mov	r0, r2
 8000592:	e72c      	b.n	80003ee <__udivmoddi4+0x8e>
 8000594:	f1c6 0220 	rsb	r2, r6, #32
 8000598:	fa2e f302 	lsr.w	r3, lr, r2
 800059c:	40b7      	lsls	r7, r6
 800059e:	40b1      	lsls	r1, r6
 80005a0:	fa20 f202 	lsr.w	r2, r0, r2
 80005a4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80005a8:	430a      	orrs	r2, r1
 80005aa:	fbb3 f8fe 	udiv	r8, r3, lr
 80005ae:	b2bc      	uxth	r4, r7
 80005b0:	fb0e 3318 	mls	r3, lr, r8, r3
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80005ba:	fb08 f904 	mul.w	r9, r8, r4
 80005be:	40b0      	lsls	r0, r6
 80005c0:	4589      	cmp	r9, r1
 80005c2:	ea4f 4310 	mov.w	r3, r0, lsr #16
 80005c6:	b280      	uxth	r0, r0
 80005c8:	d93e      	bls.n	8000648 <__udivmoddi4+0x2e8>
 80005ca:	1879      	adds	r1, r7, r1
 80005cc:	f108 3cff 	add.w	ip, r8, #4294967295
 80005d0:	d201      	bcs.n	80005d6 <__udivmoddi4+0x276>
 80005d2:	4589      	cmp	r9, r1
 80005d4:	d81f      	bhi.n	8000616 <__udivmoddi4+0x2b6>
 80005d6:	eba1 0109 	sub.w	r1, r1, r9
 80005da:	fbb1 f9fe 	udiv	r9, r1, lr
 80005de:	fb09 f804 	mul.w	r8, r9, r4
 80005e2:	fb0e 1119 	mls	r1, lr, r9, r1
 80005e6:	b292      	uxth	r2, r2
 80005e8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005ec:	4542      	cmp	r2, r8
 80005ee:	d229      	bcs.n	8000644 <__udivmoddi4+0x2e4>
 80005f0:	18ba      	adds	r2, r7, r2
 80005f2:	f109 31ff 	add.w	r1, r9, #4294967295
 80005f6:	d2c4      	bcs.n	8000582 <__udivmoddi4+0x222>
 80005f8:	4542      	cmp	r2, r8
 80005fa:	d2c2      	bcs.n	8000582 <__udivmoddi4+0x222>
 80005fc:	f1a9 0102 	sub.w	r1, r9, #2
 8000600:	443a      	add	r2, r7
 8000602:	e7be      	b.n	8000582 <__udivmoddi4+0x222>
 8000604:	45f0      	cmp	r8, lr
 8000606:	d29d      	bcs.n	8000544 <__udivmoddi4+0x1e4>
 8000608:	ebbe 0302 	subs.w	r3, lr, r2
 800060c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000610:	3801      	subs	r0, #1
 8000612:	46e1      	mov	r9, ip
 8000614:	e796      	b.n	8000544 <__udivmoddi4+0x1e4>
 8000616:	eba7 0909 	sub.w	r9, r7, r9
 800061a:	4449      	add	r1, r9
 800061c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000620:	fbb1 f9fe 	udiv	r9, r1, lr
 8000624:	fb09 f804 	mul.w	r8, r9, r4
 8000628:	e7db      	b.n	80005e2 <__udivmoddi4+0x282>
 800062a:	4673      	mov	r3, lr
 800062c:	e77f      	b.n	800052e <__udivmoddi4+0x1ce>
 800062e:	4650      	mov	r0, sl
 8000630:	e766      	b.n	8000500 <__udivmoddi4+0x1a0>
 8000632:	4608      	mov	r0, r1
 8000634:	e6fd      	b.n	8000432 <__udivmoddi4+0xd2>
 8000636:	443b      	add	r3, r7
 8000638:	3a02      	subs	r2, #2
 800063a:	e733      	b.n	80004a4 <__udivmoddi4+0x144>
 800063c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000640:	443b      	add	r3, r7
 8000642:	e71c      	b.n	800047e <__udivmoddi4+0x11e>
 8000644:	4649      	mov	r1, r9
 8000646:	e79c      	b.n	8000582 <__udivmoddi4+0x222>
 8000648:	eba1 0109 	sub.w	r1, r1, r9
 800064c:	46c4      	mov	ip, r8
 800064e:	fbb1 f9fe 	udiv	r9, r1, lr
 8000652:	fb09 f804 	mul.w	r8, r9, r4
 8000656:	e7c4      	b.n	80005e2 <__udivmoddi4+0x282>

08000658 <__aeabi_idiv0>:
 8000658:	4770      	bx	lr
 800065a:	bf00      	nop

0800065c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800065c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8000694 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000660:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000662:	e003      	b.n	800066c <LoopCopyDataInit>

08000664 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000664:	4b0c      	ldr	r3, [pc, #48]	@ (8000698 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000666:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000668:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800066a:	3104      	adds	r1, #4

0800066c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800066c:	480b      	ldr	r0, [pc, #44]	@ (800069c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800066e:	4b0c      	ldr	r3, [pc, #48]	@ (80006a0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000670:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000674:	d3f6      	bcc.n	8000664 <CopyDataInit>
  ldr  r2, =_sbss
 8000676:	4a0b      	ldr	r2, [pc, #44]	@ (80006a4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000678:	e002      	b.n	8000680 <LoopFillZerobss>

0800067a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800067a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800067c:	f842 3b04 	str.w	r3, [r2], #4

08000680 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000680:	4b09      	ldr	r3, [pc, #36]	@ (80006a8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000682:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000684:	d3f9      	bcc.n	800067a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000686:	f007 f9bb 	bl	8007a00 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800068a:	f025 fb3b 	bl	8025d04 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800068e:	f000 f9e7 	bl	8000a60 <main>
  bx  lr    
 8000692:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000694:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000698:	081d05ec 	.word	0x081d05ec
  ldr  r0, =_sdata
 800069c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80006a0:	20000164 	.word	0x20000164
  ldr  r2, =_sbss
 80006a4:	20000380 	.word	0x20000380
  ldr  r3, = _ebss
 80006a8:	2001602c 	.word	0x2001602c

080006ac <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80006ac:	e7fe      	b.n	80006ac <ADC_IRQHandler>
	...

080006b0 <PAJ7620_WriteRegister>:
  * @brief Ghi một byte dữ liệu vào thanh ghi của PAJ7620U2 qua I2C.
  * @param reg_addr: Địa chỉ thanh ghi cần ghi.
  * @param data: Dữ liệu cần ghi.
  * @retval HAL_StatusTypeDef: Trạng thái HAL_OK nếu thành công.
  */
static HAL_StatusTypeDef PAJ7620_WriteRegister(uint8_t reg_addr, uint8_t data) {
 80006b0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    return HAL_I2C_Mem_Write(&hi2c3, PAJ7620_I2C_BUS_ADDR, reg_addr, I2C_MEMADD_SIZE_8BIT, &data, 1, 100);
 80006b2:	2301      	movs	r3, #1
static HAL_StatusTypeDef PAJ7620_WriteRegister(uint8_t reg_addr, uint8_t data) {
 80006b4:	f88d 1017 	strb.w	r1, [sp, #23]
    return HAL_I2C_Mem_Write(&hi2c3, PAJ7620_I2C_BUS_ADDR, reg_addr, I2C_MEMADD_SIZE_8BIT, &data, 1, 100);
 80006b8:	2164      	movs	r1, #100	@ 0x64
 80006ba:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80006be:	f10d 0117 	add.w	r1, sp, #23
static HAL_StatusTypeDef PAJ7620_WriteRegister(uint8_t reg_addr, uint8_t data) {
 80006c2:	4602      	mov	r2, r0
    return HAL_I2C_Mem_Write(&hi2c3, PAJ7620_I2C_BUS_ADDR, reg_addr, I2C_MEMADD_SIZE_8BIT, &data, 1, 100);
 80006c4:	9100      	str	r1, [sp, #0]
 80006c6:	4803      	ldr	r0, [pc, #12]	@ (80006d4 <PAJ7620_WriteRegister+0x24>)
 80006c8:	21e6      	movs	r1, #230	@ 0xe6
 80006ca:	f007 fee3 	bl	8008494 <HAL_I2C_Mem_Write>
}
 80006ce:	b007      	add	sp, #28
 80006d0:	f85d fb04 	ldr.w	pc, [sp], #4
 80006d4:	200004f4 	.word	0x200004f4

080006d8 <PAJ7620_SelectRegisterBank.isra.0>:
/**
  * @brief Chọn bank thanh ghi (Bank 0 hoặc Bank 1) của PAJ7620U2.
  * @param bank: 0 cho Bank 0, 1 cho Bank 1.
  * @retval HAL_StatusTypeDef: Trạng thái HAL_OK nếu thành công.
  */
static HAL_StatusTypeDef PAJ7620_SelectRegisterBank(uint8_t bank) {
 80006d8:	4601      	mov	r1, r0
    return PAJ7620_WriteRegister(PAJ7620_REGISTER_BANK_SEL, bank);
 80006da:	20ef      	movs	r0, #239	@ 0xef
 80006dc:	f7ff bfe8 	b.w	80006b0 <PAJ7620_WriteRegister>

080006e0 <PAJ7620_WriteRegisterArray>:
  * @brief Ghi một mảng các cặp địa chỉ/giá trị vào các thanh ghi.
  * @param settings: Mảng các cấu hình thanh ghi.
  * @param size: Kích thước của mảng.
  * @retval HAL_StatusTypeDef: Trạng thái HAL_OK nếu thành công.
  */
static HAL_StatusTypeDef PAJ7620_WriteRegisterArray(const PAJ7620_RegSetting_t settings[], uint16_t size) {
 80006e0:	b570      	push	{r4, r5, r6, lr}
 80006e2:	4604      	mov	r4, r0
 80006e4:	eb00 0641 	add.w	r6, r0, r1, lsl #1
    HAL_StatusTypeDef status;
    for (uint16_t i = 0; i < size; i++) {
        status = PAJ7620_WriteRegister(settings[i].address, settings[i].value);
 80006e8:	7861      	ldrb	r1, [r4, #1]
 80006ea:	7820      	ldrb	r0, [r4, #0]
 80006ec:	f7ff ffe0 	bl	80006b0 <PAJ7620_WriteRegister>
        if (status != HAL_OK) {
 80006f0:	4605      	mov	r5, r0
 80006f2:	b920      	cbnz	r0, 80006fe <PAJ7620_WriteRegisterArray+0x1e>
    for (uint16_t i = 0; i < size; i++) {
 80006f4:	3402      	adds	r4, #2
 80006f6:	42b4      	cmp	r4, r6
 80006f8:	d1f6      	bne.n	80006e8 <PAJ7620_WriteRegisterArray+0x8>
            return status;
        }
    }
    PAJ7620_SelectRegisterBank(0); // Luôn về Bank 0 sau khi cấu hình
 80006fa:	f7ff ffed 	bl	80006d8 <PAJ7620_SelectRegisterBank.isra.0>
    return HAL_OK;
}
 80006fe:	4628      	mov	r0, r5
 8000700:	bd70      	pop	{r4, r5, r6, pc}
	...

08000704 <PAJ7620_ReadRegister.isra.0>:
static HAL_StatusTypeDef PAJ7620_ReadRegister(uint8_t reg_addr, uint8_t *data) {
 8000704:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000706:	4602      	mov	r2, r0
    return HAL_I2C_Mem_Read(&hi2c3, PAJ7620_I2C_BUS_ADDR, reg_addr, I2C_MEMADD_SIZE_8BIT, data, 1, 100);
 8000708:	2301      	movs	r3, #1
 800070a:	2064      	movs	r0, #100	@ 0x64
 800070c:	e9cd 3001 	strd	r3, r0, [sp, #4]
 8000710:	9100      	str	r1, [sp, #0]
 8000712:	4803      	ldr	r0, [pc, #12]	@ (8000720 <PAJ7620_ReadRegister.isra.0+0x1c>)
 8000714:	21e6      	movs	r1, #230	@ 0xe6
 8000716:	f007 ff4d 	bl	80085b4 <HAL_I2C_Mem_Read>
}
 800071a:	b005      	add	sp, #20
 800071c:	f85d fb04 	ldr.w	pc, [sp], #4
 8000720:	200004f4 	.word	0x200004f4

08000724 <PAJ7620_ForwardBackwardGestureCheck>:
/**
  * @brief Kiểm tra các cử chỉ Tiến/Lùi.
  * @param initialGesture: Cử chỉ ban đầu được phát hiện.
  * @retval PAJ7620_Gesture_t: Cử chỉ cuối cùng (có thể là Tiến/Lùi).
  */
static PAJ7620_Gesture_t PAJ7620_ForwardBackwardGestureCheck(PAJ7620_Gesture_t initialGesture) {
 8000724:	b513      	push	{r0, r1, r4, lr}
    uint8_t data = 0;
 8000726:	2300      	movs	r3, #0
static PAJ7620_Gesture_t PAJ7620_ForwardBackwardGestureCheck(PAJ7620_Gesture_t initialGesture) {
 8000728:	4604      	mov	r4, r0
    // Delay ngắn để cho cử chỉ Z-axis (tiến/lùi) có thời gian hoàn thành
    HAL_Delay(10); // Có thể điều chỉnh delay này nếu cần
 800072a:	200a      	movs	r0, #10
    uint8_t data = 0;
 800072c:	f88d 3007 	strb.w	r3, [sp, #7]
    HAL_Delay(10); // Có thể điều chỉnh delay này nếu cần
 8000730:	f007 f9a0 	bl	8007a74 <HAL_Delay>

    PAJ7620_ReadRegister(PAJ7620_ADDR_GES_PS_DET_FLAG_0, &data); // Đọc lại thanh ghi cử chỉ
 8000734:	f10d 0107 	add.w	r1, sp, #7
 8000738:	2043      	movs	r0, #67	@ 0x43
 800073a:	f7ff ffe3 	bl	8000704 <PAJ7620_ReadRegister.isra.0>

    if (data == GES_FORWARD_FLAG) {
 800073e:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8000742:	2b10      	cmp	r3, #16
 8000744:	d106      	bne.n	8000754 <PAJ7620_ForwardBackwardGestureCheck+0x30>
        HAL_Delay(200); // Delay sau khi phát hiện để người dùng rút tay ra
 8000746:	20c8      	movs	r0, #200	@ 0xc8
 8000748:	f007 f994 	bl	8007a74 <HAL_Delay>
        return GES_FORWARD;
 800074c:	2405      	movs	r4, #5
    } else if (data == GES_BACKWARD_FLAG) {
        HAL_Delay(200); // Delay sau khi phát hiện để người dùng rút tay ra
        return GES_BACKWARD;
    }
    return initialGesture;
}
 800074e:	4620      	mov	r0, r4
 8000750:	b002      	add	sp, #8
 8000752:	bd10      	pop	{r4, pc}
    } else if (data == GES_BACKWARD_FLAG) {
 8000754:	2b20      	cmp	r3, #32
 8000756:	d1fa      	bne.n	800074e <PAJ7620_ForwardBackwardGestureCheck+0x2a>
        HAL_Delay(200); // Delay sau khi phát hiện để người dùng rút tay ra
 8000758:	20c8      	movs	r0, #200	@ 0xc8
 800075a:	f007 f98b 	bl	8007a74 <HAL_Delay>
        return GES_BACKWARD;
 800075e:	2406      	movs	r4, #6
 8000760:	e7f5      	b.n	800074e <PAJ7620_ForwardBackwardGestureCheck+0x2a>
	...

08000764 <PAJ7620_SetGestureMode>:
  * @brief Đặt cảm biến vào chế độ cử chỉ.
  * @param None
  * @retval None
  */
void PAJ7620_SetGestureMode(void) {
    PAJ7620_WriteRegisterArray(setGestureModeRegisterArray, SET_GES_MODE_REG_ARRAY_SIZE);
 8000764:	4801      	ldr	r0, [pc, #4]	@ (800076c <PAJ7620_SetGestureMode+0x8>)
 8000766:	211d      	movs	r1, #29
 8000768:	f7ff bfba 	b.w	80006e0 <PAJ7620_WriteRegisterArray>
 800076c:	08026838 	.word	0x08026838

08000770 <PAJ7620_Init>:
HAL_StatusTypeDef PAJ7620_Init(void) {
 8000770:	b513      	push	{r0, r1, r4, lr}
    HAL_Delay(1); // Chờ 700us trong thư viện gốc, HAL_Delay(1) là đủ cho 1ms. Cảm biến cần thời gian ổn định.
 8000772:	2001      	movs	r0, #1
 8000774:	f007 f97e 	bl	8007a74 <HAL_Delay>
    PAJ7620_SelectRegisterBank(0);
 8000778:	2000      	movs	r0, #0
 800077a:	f7ff ffad 	bl	80006d8 <PAJ7620_SelectRegisterBank.isra.0>
    uint8_t data0 = 0, data1 = 0;
 800077e:	2400      	movs	r4, #0
    PAJ7620_SelectRegisterBank(0);
 8000780:	2000      	movs	r0, #0
 8000782:	f7ff ffa9 	bl	80006d8 <PAJ7620_SelectRegisterBank.isra.0>
    PAJ7620_SelectRegisterBank(0); // ID ở Bank 0
 8000786:	4620      	mov	r0, r4
    uint8_t data0 = 0, data1 = 0;
 8000788:	f88d 4006 	strb.w	r4, [sp, #6]
 800078c:	f88d 4007 	strb.w	r4, [sp, #7]
    PAJ7620_SelectRegisterBank(0); // ID ở Bank 0
 8000790:	f7ff ffa2 	bl	80006d8 <PAJ7620_SelectRegisterBank.isra.0>
    PAJ7620_ReadRegister(PAJ7620_ADDR_PART_ID_0, &data0);
 8000794:	f10d 0106 	add.w	r1, sp, #6
 8000798:	4620      	mov	r0, r4
 800079a:	f7ff ffb3 	bl	8000704 <PAJ7620_ReadRegister.isra.0>
    PAJ7620_ReadRegister(PAJ7620_ADDR_PART_ID_1, &data1);
 800079e:	f10d 0107 	add.w	r1, sp, #7
 80007a2:	2001      	movs	r0, #1
 80007a4:	f7ff ffae 	bl	8000704 <PAJ7620_ReadRegister.isra.0>
    if ((data0 != PAJ7620_PART_ID_LSB) || (data1 != PAJ7620_PART_ID_MSB)) {
 80007a8:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80007ac:	2b20      	cmp	r3, #32
 80007ae:	d10c      	bne.n	80007ca <PAJ7620_Init+0x5a>
 80007b0:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80007b4:	2b76      	cmp	r3, #118	@ 0x76
 80007b6:	d108      	bne.n	80007ca <PAJ7620_Init+0x5a>
    status = PAJ7620_WriteRegisterArray(initRegisterArray, INIT_REG_ARRAY_SIZE);
 80007b8:	4806      	ldr	r0, [pc, #24]	@ (80007d4 <PAJ7620_Init+0x64>)
 80007ba:	2137      	movs	r1, #55	@ 0x37
 80007bc:	f7ff ff90 	bl	80006e0 <PAJ7620_WriteRegisterArray>
    if (status != HAL_OK) return status;
 80007c0:	4604      	mov	r4, r0
 80007c2:	b918      	cbnz	r0, 80007cc <PAJ7620_Init+0x5c>
    PAJ7620_SetGestureMode();
 80007c4:	f7ff ffce 	bl	8000764 <PAJ7620_SetGestureMode>
    return HAL_OK;
 80007c8:	e000      	b.n	80007cc <PAJ7620_Init+0x5c>
        return HAL_ERROR; // Thiết bị không khớp
 80007ca:	2401      	movs	r4, #1
}
 80007cc:	4620      	mov	r0, r4
 80007ce:	b002      	add	sp, #8
 80007d0:	bd10      	pop	{r4, pc}
 80007d2:	bf00      	nop
 80007d4:	08026872 	.word	0x08026872

080007d8 <PAJ7620_ReadGesture>:
/**
  * @brief Đọc cử chỉ hiện tại từ cảm biến.
  * @param None
  * @retval PAJ7620_Gesture_t: Cử chỉ được phát hiện (ví dụ: GES_UP), hoặc GES_NONE nếu không có.
  */
PAJ7620_Gesture_t PAJ7620_ReadGesture(void) {
 80007d8:	b507      	push	{r0, r1, r2, lr}
    uint8_t data0 = 0, data1 = 0;
 80007da:	2300      	movs	r3, #0
    PAJ7620_Gesture_t result = GES_NONE;

    PAJ7620_ReadRegister(PAJ7620_ADDR_GES_PS_DET_FLAG_0, &data0); // Đọc thanh ghi cử chỉ chính
 80007dc:	f10d 0106 	add.w	r1, sp, #6
 80007e0:	2043      	movs	r0, #67	@ 0x43
    uint8_t data0 = 0, data1 = 0;
 80007e2:	f88d 3006 	strb.w	r3, [sp, #6]
 80007e6:	f88d 3007 	strb.w	r3, [sp, #7]
    PAJ7620_ReadRegister(PAJ7620_ADDR_GES_PS_DET_FLAG_0, &data0); // Đọc thanh ghi cử chỉ chính
 80007ea:	f7ff ff8b 	bl	8000704 <PAJ7620_ReadRegister.isra.0>

    switch (data0) {
 80007ee:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80007f2:	2b10      	cmp	r3, #16
 80007f4:	d02a      	beq.n	800084c <PAJ7620_ReadGesture+0x74>
 80007f6:	d80b      	bhi.n	8000810 <PAJ7620_ReadGesture+0x38>
 80007f8:	3b01      	subs	r3, #1
 80007fa:	b2da      	uxtb	r2, r3
 80007fc:	2a07      	cmp	r2, #7
 80007fe:	d80d      	bhi.n	800081c <PAJ7620_ReadGesture+0x44>
 8000800:	2b07      	cmp	r3, #7
 8000802:	d80b      	bhi.n	800081c <PAJ7620_ReadGesture+0x44>
 8000804:	e8df f003 	tbb	[pc, r3]
 8000808:	1c0a201e 	.word	0x1c0a201e
 800080c:	160a0a0a 	.word	0x160a0a0a
 8000810:	2b40      	cmp	r3, #64	@ 0x40
 8000812:	d025      	beq.n	8000860 <PAJ7620_ReadGesture+0x88>
 8000814:	2b80      	cmp	r3, #128	@ 0x80
 8000816:	d025      	beq.n	8000864 <PAJ7620_ReadGesture+0x8c>
 8000818:	2b20      	cmp	r3, #32
 800081a:	d01c      	beq.n	8000856 <PAJ7620_ReadGesture+0x7e>
        case GES_ANTI_CLOCKWISE_FLAG:
            result = GES_ANTICLOCKWISE;
            break;
        default:
            // Kiểm tra cử chỉ WAVE (nằm ở thanh ghi khác)
            PAJ7620_ReadRegister(PAJ7620_ADDR_GES_PS_DET_FLAG_1, &data1);
 800081c:	2044      	movs	r0, #68	@ 0x44
 800081e:	f10d 0107 	add.w	r1, sp, #7
 8000822:	f7ff ff6f 	bl	8000704 <PAJ7620_ReadRegister.isra.0>
            if (data1 == GES_WAVE_FLAG) {
 8000826:	f89d 3007 	ldrb.w	r3, [sp, #7]
    PAJ7620_Gesture_t result = GES_NONE;
 800082a:	2b01      	cmp	r3, #1
 800082c:	bf0c      	ite	eq
 800082e:	2009      	moveq	r0, #9
 8000830:	2000      	movne	r0, #0
 8000832:	e002      	b.n	800083a <PAJ7620_ReadGesture+0x62>
            result = PAJ7620_ForwardBackwardGestureCheck(GES_RIGHT);
 8000834:	2004      	movs	r0, #4
            result = PAJ7620_ForwardBackwardGestureCheck(GES_LEFT);
 8000836:	f7ff ff75 	bl	8000724 <PAJ7620_ForwardBackwardGestureCheck>
                result = GES_WAVE;
            }
            break;
    }
    return result;
}
 800083a:	b003      	add	sp, #12
 800083c:	f85d fb04 	ldr.w	pc, [sp], #4
            result = PAJ7620_ForwardBackwardGestureCheck(GES_LEFT);
 8000840:	2003      	movs	r0, #3
 8000842:	e7f8      	b.n	8000836 <PAJ7620_ReadGesture+0x5e>
            result = PAJ7620_ForwardBackwardGestureCheck(GES_UP);
 8000844:	2001      	movs	r0, #1
 8000846:	e7f6      	b.n	8000836 <PAJ7620_ReadGesture+0x5e>
            result = PAJ7620_ForwardBackwardGestureCheck(GES_DOWN);
 8000848:	2002      	movs	r0, #2
 800084a:	e7f4      	b.n	8000836 <PAJ7620_ReadGesture+0x5e>
            HAL_Delay(200); // Delay sau khi phát hiện
 800084c:	20c8      	movs	r0, #200	@ 0xc8
 800084e:	f007 f911 	bl	8007a74 <HAL_Delay>
            result = GES_FORWARD;
 8000852:	2005      	movs	r0, #5
            break;
 8000854:	e7f1      	b.n	800083a <PAJ7620_ReadGesture+0x62>
            HAL_Delay(200); // Delay sau khi phát hiện
 8000856:	20c8      	movs	r0, #200	@ 0xc8
 8000858:	f007 f90c 	bl	8007a74 <HAL_Delay>
            result = GES_BACKWARD;
 800085c:	2006      	movs	r0, #6
            break;
 800085e:	e7ec      	b.n	800083a <PAJ7620_ReadGesture+0x62>
            result = GES_CLOCKWISE;
 8000860:	2007      	movs	r0, #7
 8000862:	e7ea      	b.n	800083a <PAJ7620_ReadGesture+0x62>
    switch (data0) {
 8000864:	2008      	movs	r0, #8
 8000866:	e7e8      	b.n	800083a <PAJ7620_ReadGesture+0x62>

08000868 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8000868:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800086a:	4b06      	ldr	r3, [pc, #24]	@ (8000884 <SPI5_Write+0x1c>)
{
 800086c:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8000870:	681b      	ldr	r3, [r3, #0]
 8000872:	4805      	ldr	r0, [pc, #20]	@ (8000888 <SPI5_Write+0x20>)
 8000874:	2201      	movs	r2, #1
 8000876:	f10d 0106 	add.w	r1, sp, #6
 800087a:	f008 fefd 	bl	8009678 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800087e:	b003      	add	sp, #12
 8000880:	f85d fb04 	ldr.w	pc, [sp], #4
 8000884:	20000004 	.word	0x20000004
 8000888:	200003f4 	.word	0x200003f4

0800088c <StartTask03>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask03 */
void StartTask03(void *argument)
{
 800088c:	b573      	push	{r0, r1, r4, r5, r6, lr}
  /* USER CODE BEGIN StartTask03 */
  /* Infinite loop */
  for(;;)
  {
    uint8_t msg = 'O';
    if(HAL_GPIO_ReadPin(GPIOG, GPIO_PIN_2) == GPIO_PIN_SET) {
 800088e:	4d28      	ldr	r5, [pc, #160]	@ (8000930 <StartTask03+0xa4>)
    if(HAL_GPIO_ReadPin(GPIOG, GPIO_PIN_3) == GPIO_PIN_SET) {
      msg = 'R';
    }
    
    // Check PB12 - Down
    if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET) {
 8000890:	4e28      	ldr	r6, [pc, #160]	@ (8000934 <StartTask03+0xa8>)
    // Check PB13 - Rotate
    if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_13) == GPIO_PIN_SET) {
      msg = 'C';
    }

    uint32_t count = osMessageQueueGetCount(Queue1Handle);
 8000892:	4c29      	ldr	r4, [pc, #164]	@ (8000938 <StartTask03+0xac>)
    uint8_t msg = 'O';
 8000894:	234f      	movs	r3, #79	@ 0x4f
    if(HAL_GPIO_ReadPin(GPIOG, GPIO_PIN_2) == GPIO_PIN_SET) {
 8000896:	2104      	movs	r1, #4
 8000898:	4628      	mov	r0, r5
    uint8_t msg = 'O';
 800089a:	f88d 3007 	strb.w	r3, [sp, #7]
    if(HAL_GPIO_ReadPin(GPIOG, GPIO_PIN_2) == GPIO_PIN_SET) {
 800089e:	f007 fb3d 	bl	8007f1c <HAL_GPIO_ReadPin>
 80008a2:	2801      	cmp	r0, #1
      msg = 'L';
 80008a4:	bf08      	it	eq
 80008a6:	234c      	moveq	r3, #76	@ 0x4c
    if(HAL_GPIO_ReadPin(GPIOG, GPIO_PIN_3) == GPIO_PIN_SET) {
 80008a8:	f04f 0108 	mov.w	r1, #8
 80008ac:	4628      	mov	r0, r5
      msg = 'L';
 80008ae:	bf08      	it	eq
 80008b0:	f88d 3007 	strbeq.w	r3, [sp, #7]
    if(HAL_GPIO_ReadPin(GPIOG, GPIO_PIN_3) == GPIO_PIN_SET) {
 80008b4:	f007 fb32 	bl	8007f1c <HAL_GPIO_ReadPin>
 80008b8:	2801      	cmp	r0, #1
      msg = 'R';
 80008ba:	bf08      	it	eq
 80008bc:	2352      	moveq	r3, #82	@ 0x52
    if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET) {
 80008be:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80008c2:	4630      	mov	r0, r6
      msg = 'R';
 80008c4:	bf08      	it	eq
 80008c6:	f88d 3007 	strbeq.w	r3, [sp, #7]
    if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET) {
 80008ca:	f007 fb27 	bl	8007f1c <HAL_GPIO_ReadPin>
 80008ce:	2801      	cmp	r0, #1
      msg = 'D';
 80008d0:	bf08      	it	eq
 80008d2:	2344      	moveq	r3, #68	@ 0x44
    if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_13) == GPIO_PIN_SET) {
 80008d4:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80008d8:	4630      	mov	r0, r6
      msg = 'D';
 80008da:	bf08      	it	eq
 80008dc:	f88d 3007 	strbeq.w	r3, [sp, #7]
    if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_13) == GPIO_PIN_SET) {
 80008e0:	f007 fb1c 	bl	8007f1c <HAL_GPIO_ReadPin>
 80008e4:	2801      	cmp	r0, #1
      msg = 'C';
 80008e6:	bf08      	it	eq
 80008e8:	2343      	moveq	r3, #67	@ 0x43
    uint32_t count = osMessageQueueGetCount(Queue1Handle);
 80008ea:	6820      	ldr	r0, [r4, #0]
      msg = 'C';
 80008ec:	bf08      	it	eq
 80008ee:	f88d 3007 	strbeq.w	r3, [sp, #7]
    uint32_t count = osMessageQueueGetCount(Queue1Handle);
 80008f2:	f009 fd01 	bl	800a2f8 <osMessageQueueGetCount>
    if (count < 1)
 80008f6:	4602      	mov	r2, r0
 80008f8:	b9a8      	cbnz	r0, 8000926 <StartTask03+0x9a>
    {
      if(msg == 'L' || msg == 'R' || msg == 'D' || msg == 'C') {
 80008fa:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80008fe:	3b43      	subs	r3, #67	@ 0x43
 8000900:	b2db      	uxtb	r3, r3
 8000902:	2b0f      	cmp	r3, #15
 8000904:	d80f      	bhi.n	8000926 <StartTask03+0x9a>
 8000906:	f248 2103 	movw	r1, #33283	@ 0x8203
 800090a:	fa21 f303 	lsr.w	r3, r1, r3
 800090e:	07db      	lsls	r3, r3, #31
 8000910:	d509      	bpl.n	8000926 <StartTask03+0x9a>
        osMessageQueuePut(Queue1Handle, &msg, 0, 10);
 8000912:	6820      	ldr	r0, [r4, #0]
 8000914:	230a      	movs	r3, #10
 8000916:	f10d 0107 	add.w	r1, sp, #7
 800091a:	f009 fc8c 	bl	800a236 <osMessageQueuePut>
        osDelay(400);
 800091e:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 8000922:	f009 fb99 	bl	800a058 <osDelay>
      }
    }
    osDelay(10);
 8000926:	200a      	movs	r0, #10
 8000928:	f009 fb96 	bl	800a058 <osDelay>
  {
 800092c:	e7b2      	b.n	8000894 <StartTask03+0x8>
 800092e:	bf00      	nop
 8000930:	40021800 	.word	0x40021800
 8000934:	40020400 	.word	0x40020400
 8000938:	200003a8 	.word	0x200003a8

0800093c <StartTask04>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask04 */
void StartTask04(void *argument)
{
 800093c:	b537      	push	{r0, r1, r2, r4, r5, lr}
        case GES_ANTICLOCKWISE:   	data = 'A'; break;
        default:                  	data = 'O'; break;
      }
    }
    if(data == 'R' || data == 'L' || data == 'D' || data == 'C') {
      uint32_t count = osMessageQueueGetCount(Queue1Handle);
 800093e:	4c20      	ldr	r4, [pc, #128]	@ (80009c0 <StartTask04+0x84>)
    uint8_t data = 'O';
 8000940:	254f      	movs	r5, #79	@ 0x4f
    currentGesture = PAJ7620_ReadGesture();
 8000942:	f7ff ff49 	bl	80007d8 <PAJ7620_ReadGesture>
    uint8_t data = 'O';
 8000946:	f88d 5007 	strb.w	r5, [sp, #7]
    if (currentGesture != GES_NONE) {
 800094a:	b158      	cbz	r0, 8000964 <StartTask04+0x28>
      switch (currentGesture) {
 800094c:	3801      	subs	r0, #1
 800094e:	2807      	cmp	r0, #7
 8000950:	d808      	bhi.n	8000964 <StartTask04+0x28>
 8000952:	e8df f000 	tbb	[pc, r0]
 8000956:	2a28      	.short	0x2a28
 8000958:	2e2c0426 	.word	0x2e2c0426
 800095c:	3230      	.short	0x3230
        case GES_RIGHT:        		data = 'R'; break;
 800095e:	2352      	movs	r3, #82	@ 0x52
        case GES_ANTICLOCKWISE:   	data = 'A'; break;
 8000960:	f88d 3007 	strb.w	r3, [sp, #7]
    if(data == 'R' || data == 'L' || data == 'D' || data == 'C') {
 8000964:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8000968:	3b43      	subs	r3, #67	@ 0x43
 800096a:	b2db      	uxtb	r3, r3
 800096c:	2b0f      	cmp	r3, #15
 800096e:	d814      	bhi.n	800099a <StartTask04+0x5e>
 8000970:	f248 2203 	movw	r2, #33283	@ 0x8203
 8000974:	fa22 f303 	lsr.w	r3, r2, r3
 8000978:	07db      	lsls	r3, r3, #31
 800097a:	d50e      	bpl.n	800099a <StartTask04+0x5e>
      uint32_t count = osMessageQueueGetCount(Queue1Handle);
 800097c:	6820      	ldr	r0, [r4, #0]
 800097e:	f009 fcbb 	bl	800a2f8 <osMessageQueueGetCount>
      if (count < 1)
 8000982:	4602      	mov	r2, r0
 8000984:	b948      	cbnz	r0, 800099a <StartTask04+0x5e>
      {
        osMessageQueuePut(Queue1Handle, &data, 0, 10);
 8000986:	6820      	ldr	r0, [r4, #0]
 8000988:	230a      	movs	r3, #10
 800098a:	f10d 0107 	add.w	r1, sp, #7
 800098e:	f009 fc52 	bl	800a236 <osMessageQueuePut>
        osDelay(400);
 8000992:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 8000996:	f009 fb5f 	bl	800a058 <osDelay>
      }
    }
    osDelay(10);
 800099a:	200a      	movs	r0, #10
 800099c:	f009 fb5c 	bl	800a058 <osDelay>
  {
 80009a0:	e7cf      	b.n	8000942 <StartTask04+0x6>
        case GES_LEFT:         		data = 'L'; break;
 80009a2:	234c      	movs	r3, #76	@ 0x4c
 80009a4:	e7dc      	b.n	8000960 <StartTask04+0x24>
        case GES_UP:           		data = 'U'; break;
 80009a6:	2355      	movs	r3, #85	@ 0x55
 80009a8:	e7da      	b.n	8000960 <StartTask04+0x24>
        case GES_DOWN:         		data = 'D'; break;
 80009aa:	2344      	movs	r3, #68	@ 0x44
 80009ac:	e7d8      	b.n	8000960 <StartTask04+0x24>
        case GES_FORWARD:      		data = 'F'; break;
 80009ae:	2346      	movs	r3, #70	@ 0x46
 80009b0:	e7d6      	b.n	8000960 <StartTask04+0x24>
        case GES_BACKWARD:     		data = 'B'; break;
 80009b2:	2342      	movs	r3, #66	@ 0x42
 80009b4:	e7d4      	b.n	8000960 <StartTask04+0x24>
        case GES_CLOCKWISE:       	data = 'C'; break;
 80009b6:	2343      	movs	r3, #67	@ 0x43
 80009b8:	e7d2      	b.n	8000960 <StartTask04+0x24>
        case GES_ANTICLOCKWISE:   	data = 'A'; break;
 80009ba:	2341      	movs	r3, #65	@ 0x41
 80009bc:	e7d0      	b.n	8000960 <StartTask04+0x24>
 80009be:	bf00      	nop
 80009c0:	200003a8 	.word	0x200003a8

080009c4 <SystemClock_Config>:
{
 80009c4:	b530      	push	{r4, r5, lr}
 80009c6:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80009c8:	2210      	movs	r2, #16
 80009ca:	2100      	movs	r1, #0
 80009cc:	a80a      	add	r0, sp, #40	@ 0x28
 80009ce:	f025 f8f0 	bl	8025bb2 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80009d2:	2214      	movs	r2, #20
 80009d4:	2100      	movs	r1, #0
 80009d6:	a803      	add	r0, sp, #12
 80009d8:	f025 f8eb 	bl	8025bb2 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 80009dc:	2400      	movs	r4, #0
 80009de:	4b1e      	ldr	r3, [pc, #120]	@ (8000a58 <SystemClock_Config+0x94>)
 80009e0:	9401      	str	r4, [sp, #4]
 80009e2:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80009e4:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80009e8:	641a      	str	r2, [r3, #64]	@ 0x40
 80009ea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80009ec:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80009f0:	9301      	str	r3, [sp, #4]
 80009f2:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80009f4:	4b19      	ldr	r3, [pc, #100]	@ (8000a5c <SystemClock_Config+0x98>)
 80009f6:	9402      	str	r4, [sp, #8]
 80009f8:	681a      	ldr	r2, [r3, #0]
 80009fa:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 80009fe:	601a      	str	r2, [r3, #0]
 8000a00:	681b      	ldr	r3, [r3, #0]
 8000a02:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000a06:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000a08:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000a0a:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000a0c:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000a10:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000a14:	2502      	movs	r5, #2
 8000a16:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 8000a1a:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000a1c:	e9cd 530e 	strd	r5, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 360;
 8000a20:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 8000a24:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000a28:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8000a2a:	2304      	movs	r3, #4
 8000a2c:	9313      	str	r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000a2e:	9512      	str	r5, [sp, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000a30:	f008 f8da 	bl	8008be8 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8000a34:	f008 f89e 	bl	8008b74 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000a38:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000a3a:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000a3e:	f44f 50a0 	mov.w	r0, #5120	@ 0x1400
 8000a42:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000a46:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000a4a:	2105      	movs	r1, #5
 8000a4c:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000a4e:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000a50:	f008 faa6 	bl	8008fa0 <HAL_RCC_ClockConfig>
}
 8000a54:	b015      	add	sp, #84	@ 0x54
 8000a56:	bd30      	pop	{r4, r5, pc}
 8000a58:	40023800 	.word	0x40023800
 8000a5c:	40007000 	.word	0x40007000

08000a60 <main>:
{
 8000a60:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8000a64:	b09b      	sub	sp, #108	@ 0x6c
  HAL_Init();
 8000a66:	f006 ffd9 	bl	8007a1c <HAL_Init>
  SystemClock_Config();
 8000a6a:	f7ff ffab 	bl	80009c4 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000a6e:	2214      	movs	r2, #20
 8000a70:	2100      	movs	r1, #0
 8000a72:	a80d      	add	r0, sp, #52	@ 0x34
 8000a74:	f025 f89d 	bl	8025bb2 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000a78:	2400      	movs	r4, #0
 8000a7a:	4bc8      	ldr	r3, [pc, #800]	@ (8000d9c <main+0x33c>)
 8000a7c:	9400      	str	r4, [sp, #0]
 8000a7e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8000a80:	48c7      	ldr	r0, [pc, #796]	@ (8000da0 <main+0x340>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000a82:	f8df 835c 	ldr.w	r8, [pc, #860]	@ 8000de0 <main+0x380>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000a86:	f042 0210 	orr.w	r2, r2, #16
 8000a8a:	631a      	str	r2, [r3, #48]	@ 0x30
 8000a8c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000a8e:	f002 0210 	and.w	r2, r2, #16
 8000a92:	9200      	str	r2, [sp, #0]
 8000a94:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a96:	9401      	str	r4, [sp, #4]
 8000a98:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000a9a:	f042 0220 	orr.w	r2, r2, #32
 8000a9e:	631a      	str	r2, [r3, #48]	@ 0x30
 8000aa0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000aa2:	f002 0220 	and.w	r2, r2, #32
 8000aa6:	9201      	str	r2, [sp, #4]
 8000aa8:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000aaa:	9402      	str	r4, [sp, #8]
 8000aac:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000aae:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8000ab2:	631a      	str	r2, [r3, #48]	@ 0x30
 8000ab4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000ab6:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 8000aba:	9202      	str	r2, [sp, #8]
 8000abc:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000abe:	9403      	str	r4, [sp, #12]
 8000ac0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000ac2:	f042 0204 	orr.w	r2, r2, #4
 8000ac6:	631a      	str	r2, [r3, #48]	@ 0x30
 8000ac8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000aca:	f002 0204 	and.w	r2, r2, #4
 8000ace:	9203      	str	r2, [sp, #12]
 8000ad0:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000ad2:	9404      	str	r4, [sp, #16]
 8000ad4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000ad6:	f042 0201 	orr.w	r2, r2, #1
 8000ada:	631a      	str	r2, [r3, #48]	@ 0x30
 8000adc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000ade:	f002 0201 	and.w	r2, r2, #1
 8000ae2:	9204      	str	r2, [sp, #16]
 8000ae4:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000ae6:	9405      	str	r4, [sp, #20]
 8000ae8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000aea:	f042 0202 	orr.w	r2, r2, #2
 8000aee:	631a      	str	r2, [r3, #48]	@ 0x30
 8000af0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000af2:	f002 0202 	and.w	r2, r2, #2
 8000af6:	9205      	str	r2, [sp, #20]
 8000af8:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000afa:	9406      	str	r4, [sp, #24]
 8000afc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000afe:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8000b02:	631a      	str	r2, [r3, #48]	@ 0x30
 8000b04:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000b06:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8000b0a:	9206      	str	r2, [sp, #24]
 8000b0c:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000b0e:	9407      	str	r4, [sp, #28]
 8000b10:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000b12:	f042 0208 	orr.w	r2, r2, #8
 8000b16:	631a      	str	r2, [r3, #48]	@ 0x30
 8000b18:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b1a:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8000b1e:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000b20:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8000b22:	213c      	movs	r1, #60	@ 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000b24:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8000b26:	f007 f9ff 	bl	8007f28 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8000b2a:	489e      	ldr	r0, [pc, #632]	@ (8000da4 <main+0x344>)
 8000b2c:	2201      	movs	r2, #1
 8000b2e:	2102      	movs	r1, #2
 8000b30:	f007 f9fa 	bl	8007f28 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8000b34:	4622      	mov	r2, r4
 8000b36:	489b      	ldr	r0, [pc, #620]	@ (8000da4 <main+0x344>)
 8000b38:	2104      	movs	r1, #4
 8000b3a:	f007 f9f5 	bl	8007f28 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8000b3e:	4622      	mov	r2, r4
 8000b40:	4899      	ldr	r0, [pc, #612]	@ (8000da8 <main+0x348>)
 8000b42:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 8000b46:	f007 f9ef 	bl	8007f28 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13|GPIO_PIN_14, GPIO_PIN_RESET);
 8000b4a:	4622      	mov	r2, r4
 8000b4c:	4897      	ldr	r0, [pc, #604]	@ (8000dac <main+0x34c>)
 8000b4e:	f44f 41c0 	mov.w	r1, #24576	@ 0x6000
 8000b52:	f007 f9e9 	bl	8007f28 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000b56:	2601      	movs	r6, #1
 8000b58:	233c      	movs	r3, #60	@ 0x3c
 8000b5a:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000b5e:	4890      	ldr	r0, [pc, #576]	@ (8000da0 <main+0x340>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b60:	940f      	str	r4, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000b62:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000b64:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = SPI5_NCS_Pin;
 8000b66:	2702      	movs	r7, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000b68:	9310      	str	r3, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000b6a:	f007 f8f3 	bl	8007d54 <HAL_GPIO_Init>
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 8000b6e:	488d      	ldr	r0, [pc, #564]	@ (8000da4 <main+0x344>)
 8000b70:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000b72:	e9cd 760d 	strd	r7, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000b76:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 8000b7a:	f007 f8eb 	bl	8007d54 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000b7e:	2304      	movs	r3, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000b80:	4888      	ldr	r0, [pc, #544]	@ (8000da4 <main+0x344>)
 8000b82:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000b84:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000b88:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000b8c:	f44f 5540 	mov.w	r5, #12288	@ 0x3000
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000b90:	f007 f8e0 	bl	8007d54 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000b94:	4886      	ldr	r0, [pc, #536]	@ (8000db0 <main+0x350>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b96:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000b98:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000b9a:	e9cd 540d 	strd	r5, r4, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000b9e:	f007 f8d9 	bl	8007d54 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000ba2:	4881      	ldr	r0, [pc, #516]	@ (8000da8 <main+0x348>)
 8000ba4:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ba6:	e9cd 560d 	strd	r5, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000baa:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000bae:	f007 f8d1 	bl	8007d54 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8000bb2:	230c      	movs	r3, #12
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000bb4:	487d      	ldr	r0, [pc, #500]	@ (8000dac <main+0x34c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000bb6:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000bb8:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000bba:	e9cd 340d 	strd	r3, r4, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000bbe:	f007 f8c9 	bl	8007d54 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14;
 8000bc2:	f44f 43c0 	mov.w	r3, #24576	@ 0x6000
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000bc6:	4879      	ldr	r0, [pc, #484]	@ (8000dac <main+0x34c>)
  hi2c3.Instance = I2C3;
 8000bc8:	4d7a      	ldr	r5, [pc, #488]	@ (8000db4 <main+0x354>)
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000bca:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000bcc:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000bd0:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000bd4:	f007 f8be 	bl	8007d54 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000bd8:	a90d      	add	r1, sp, #52	@ 0x34
 8000bda:	4877      	ldr	r0, [pc, #476]	@ (8000db8 <main+0x358>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000bdc:	940f      	str	r4, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000bde:	e9cd 640d 	strd	r6, r4, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000be2:	f007 f8b7 	bl	8007d54 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8000be6:	4875      	ldr	r0, [pc, #468]	@ (8000dbc <main+0x35c>)
 8000be8:	4b75      	ldr	r3, [pc, #468]	@ (8000dc0 <main+0x360>)
 8000bea:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000bec:	f006 ffa8 	bl	8007b40 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8000bf0:	f8df e1f0 	ldr.w	lr, [pc, #496]	@ 8000de4 <main+0x384>
 8000bf4:	4b73      	ldr	r3, [pc, #460]	@ (8000dc4 <main+0x364>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000bf6:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8000bf8:	e9c5 e300 	strd	lr, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000bfc:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000bfe:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000c02:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8000c06:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000c0a:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000c0e:	f007 fb99 	bl	8008344 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8000c12:	2110      	movs	r1, #16
 8000c14:	4628      	mov	r0, r5
 8000c16:	f007 fddd 	bl	80087d4 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000c1a:	4621      	mov	r1, r4
 8000c1c:	4628      	mov	r0, r5
  hspi5.Instance = SPI5;
 8000c1e:	4d6a      	ldr	r5, [pc, #424]	@ (8000dc8 <main+0x368>)
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000c20:	f007 fdf7 	bl	8008812 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000c24:	f44f 7382 	mov.w	r3, #260	@ 0x104
 8000c28:	e9c5 8300 	strd	r8, r3, [r5]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8000c2c:	f44f 7900 	mov.w	r9, #512	@ 0x200
 8000c30:	2318      	movs	r3, #24
 8000c32:	e9c5 9306 	strd	r9, r3, [r5, #24]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8000c36:	4628      	mov	r0, r5
  hspi5.Init.CRCPolynomial = 10;
 8000c38:	230a      	movs	r3, #10
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8000c3a:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000c3e:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8000c42:	e9c5 4408 	strd	r4, r4, [r5, #32]
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000c46:	62ac      	str	r4, [r5, #40]	@ 0x28
  hspi5.Init.CRCPolynomial = 10;
 8000c48:	62eb      	str	r3, [r5, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8000c4a:	f008 fcb9 	bl	80095c0 <HAL_SPI_Init>
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 8000c4e:	238f      	movs	r3, #143	@ 0x8f
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 8000c50:	4622      	mov	r2, r4
 8000c52:	4639      	mov	r1, r7
 8000c54:	4853      	ldr	r0, [pc, #332]	@ (8000da4 <main+0x344>)
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 8000c56:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
  uint8_t pdata = 0;
 8000c5a:	f88d 4034 	strb.w	r4, [sp, #52]	@ 0x34
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 8000c5e:	f007 f963 	bl	8007f28 <HAL_GPIO_WritePin>
  HAL_SPI_Transmit(&hspi5, &READ_ID_CMD, 1, 1000);
 8000c62:	4632      	mov	r2, r6
 8000c64:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000c68:	a909      	add	r1, sp, #36	@ 0x24
 8000c6a:	4628      	mov	r0, r5
 8000c6c:	f008 fd04 	bl	8009678 <HAL_SPI_Transmit>
  HAL_SPI_Receive(&hspi5, &pdata, 1, 1000);
 8000c70:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000c74:	4632      	mov	r2, r6
 8000c76:	a90d      	add	r1, sp, #52	@ 0x34
 8000c78:	4628      	mov	r0, r5
 8000c7a:	f008 fea9 	bl	80099d0 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8000c7e:	4632      	mov	r2, r6
 8000c80:	4639      	mov	r1, r7
 8000c82:	4848      	ldr	r0, [pc, #288]	@ (8000da4 <main+0x344>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000c84:	4d51      	ldr	r5, [pc, #324]	@ (8000dcc <main+0x36c>)
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8000c86:	f007 f94f 	bl	8007f28 <HAL_GPIO_WritePin>
  if (pdata == 0xD3) // 0b11010011
 8000c8a:	f89d 3034 	ldrb.w	r3, [sp, #52]	@ 0x34
 8000c8e:	2bd3      	cmp	r3, #211	@ 0xd3
    isRevD = 1;
 8000c90:	bf04      	itt	eq
 8000c92:	4b4f      	ldreq	r3, [pc, #316]	@ (8000dd0 <main+0x370>)
 8000c94:	701e      	strbeq	r6, [r3, #0]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8000c96:	4b4f      	ldr	r3, [pc, #316]	@ (8000dd4 <main+0x374>)
 8000c98:	2601      	movs	r6, #1
 8000c9a:	e9c5 3600 	strd	r3, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8000c9e:	2210      	movs	r2, #16
 8000ca0:	2340      	movs	r3, #64	@ 0x40
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8000ca2:	2400      	movs	r4, #0
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8000ca4:	e9c5 2304 	strd	r2, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000ca8:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000cac:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8000cb0:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000cb4:	f04f 0902 	mov.w	r9, #2
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8000cb8:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8000cbc:	f04f 0a04 	mov.w	sl, #4
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000cc0:	2307      	movs	r3, #7
  SdramTiming.WriteRecoveryTime = 3;
 8000cc2:	f04f 0b03 	mov.w	fp, #3
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000cc6:	a90d      	add	r1, sp, #52	@ 0x34
 8000cc8:	4628      	mov	r0, r5
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000cca:	f44f 5800 	mov.w	r8, #8192	@ 0x2000
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000cce:	e9cd 930d 	strd	r9, r3, [sp, #52]	@ 0x34
  SdramTiming.RowCycleDelay = 7;
 8000cd2:	e9cd a30f 	strd	sl, r3, [sp, #60]	@ 0x3c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000cd6:	2708      	movs	r7, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8000cd8:	e9c5 4a02 	strd	r4, sl, [r5, #8]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000cdc:	f8c5 8028 	str.w	r8, [r5, #40]	@ 0x28
  SdramTiming.RPDelay = 2;
 8000ce0:	e9cd b911 	strd	fp, r9, [sp, #68]	@ 0x44
  SdramTiming.RCDDelay = 2;
 8000ce4:	f8cd 904c 	str.w	r9, [sp, #76]	@ 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000ce8:	f008 fb4e 	bl	8009388 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000cec:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000cf0:	a909      	add	r1, sp, #36	@ 0x24
 8000cf2:	4628      	mov	r0, r5
 __IO uint32_t tmpmrd =0;
 8000cf4:	9408      	str	r4, [sp, #32]
  Command->ModeRegisterDefinition  = 0;
 8000cf6:	940c      	str	r4, [sp, #48]	@ 0x30
  Command->AutoRefreshNumber       = 1;
 8000cf8:	e9cd 760a 	strd	r7, r6, [sp, #40]	@ 0x28
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8000cfc:	9609      	str	r6, [sp, #36]	@ 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000cfe:	f008 fb63 	bl	80093c8 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8000d02:	4630      	mov	r0, r6
 8000d04:	f006 feb6 	bl	8007a74 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000d08:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000d0c:	a909      	add	r1, sp, #36	@ 0x24
 8000d0e:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 8000d10:	e9cd 640b 	strd	r6, r4, [sp, #44]	@ 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000d14:	e9cd 9709 	strd	r9, r7, [sp, #36]	@ 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000d18:	f008 fb56 	bl	80093c8 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000d1c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000d20:	a909      	add	r1, sp, #36	@ 0x24
 8000d22:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 8000d24:	e9cd a40b 	strd	sl, r4, [sp, #44]	@ 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000d28:	e9cd b709 	strd	fp, r7, [sp, #36]	@ 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000d2c:	f008 fb4c 	bl	80093c8 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8000d30:	f44f 730c 	mov.w	r3, #560	@ 0x230
 8000d34:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8000d36:	9b08      	ldr	r3, [sp, #32]
 8000d38:	930c      	str	r3, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000d3a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000d3e:	a909      	add	r1, sp, #36	@ 0x24
 8000d40:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000d42:	e9cd a709 	strd	sl, r7, [sp, #36]	@ 0x24
  Command->AutoRefreshNumber       = 1;
 8000d46:	960b      	str	r6, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000d48:	f008 fb3e 	bl	80093c8 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8000d4c:	f240 516a 	movw	r1, #1386	@ 0x56a
 8000d50:	4628      	mov	r0, r5
 8000d52:	f008 fb57 	bl	8009404 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000d56:	2234      	movs	r2, #52	@ 0x34
 8000d58:	4621      	mov	r1, r4
 8000d5a:	eb0d 0002 	add.w	r0, sp, r2
 8000d5e:	f024 ff28 	bl	8025bb2 <memset>
  hltdc.Instance = LTDC;
 8000d62:	4d1d      	ldr	r5, [pc, #116]	@ (8000dd8 <main+0x378>)
 8000d64:	4b1d      	ldr	r3, [pc, #116]	@ (8000ddc <main+0x37c>)
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000d66:	612c      	str	r4, [r5, #16]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8000d68:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 8000d6c:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8000d6e:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8000d72:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 8000d74:	e9c5 3b07 	strd	r3, fp, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8000d78:	f240 110d 	movw	r1, #269	@ 0x10d
 8000d7c:	f240 1343 	movw	r3, #323	@ 0x143
 8000d80:	e9c5 1309 	strd	r1, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 327;
 8000d84:	f240 1017 	movw	r0, #279	@ 0x117
 8000d88:	f240 1347 	movw	r3, #327	@ 0x147
 8000d8c:	e9c5 030b 	strd	r0, r3, [r5, #44]	@ 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000d90:	4628      	mov	r0, r5
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8000d92:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.Backcolor.Blue = 0;
 8000d96:	86ac      	strh	r4, [r5, #52]	@ 0x34
 8000d98:	e026      	b.n	8000de8 <main+0x388>
 8000d9a:	bf00      	nop
 8000d9c:	40023800 	.word	0x40023800
 8000da0:	40021000 	.word	0x40021000
 8000da4:	40020800 	.word	0x40020800
 8000da8:	40020c00 	.word	0x40020c00
 8000dac:	40021800 	.word	0x40021800
 8000db0:	40020400 	.word	0x40020400
 8000db4:	200004f4 	.word	0x200004f4
 8000db8:	40020000 	.word	0x40020000
 8000dbc:	20000588 	.word	0x20000588
 8000dc0:	40023000 	.word	0x40023000
 8000dc4:	000186a0 	.word	0x000186a0
 8000dc8:	200003f4 	.word	0x200003f4
 8000dcc:	200003c0 	.word	0x200003c0
 8000dd0:	200003ac 	.word	0x200003ac
 8000dd4:	a0000140 	.word	0xa0000140
 8000dd8:	2000044c 	.word	0x2000044c
 8000ddc:	40016800 	.word	0x40016800
 8000de0:	40015000 	.word	0x40015000
 8000de4:	40005c00 	.word	0x40005c00
  hltdc.Init.Backcolor.Red = 0;
 8000de8:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000dec:	f007 fdac 	bl	8008948 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8000df0:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000df2:	f44f 6c80 	mov.w	ip, #1024	@ 0x400
  pLayerCfg.Alpha0 = 0;
 8000df6:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.WindowX1 = 240;
 8000dfa:	22f0      	movs	r2, #240	@ 0xf0
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000dfc:	2105      	movs	r1, #5
 8000dfe:	e9cd c114 	strd	ip, r1, [sp, #80]	@ 0x50
  pLayerCfg.WindowY1 = 320;
 8000e02:	f44f 73a0 	mov.w	r3, #320	@ 0x140
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000e06:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.WindowY0 = 0;
 8000e08:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  pLayerCfg.ImageWidth = 240;
 8000e0c:	e9cd 4216 	strd	r4, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000e10:	4628      	mov	r0, r5
 8000e12:	4622      	mov	r2, r4
  LcdDrv = &ili9341_drv;
 8000e14:	4d32      	ldr	r5, [pc, #200]	@ (8000ee0 <main+0x480>)
  pLayerCfg.WindowX0 = 0;
 8000e16:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000e18:	e9cd 3910 	strd	r3, r9, [sp, #64]	@ 0x40
  pLayerCfg.ImageHeight = 320;
 8000e1c:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8000e1e:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 8000e22:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000e26:	f007 fe5a 	bl	8008ade <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8000e2a:	4b2e      	ldr	r3, [pc, #184]	@ (8000ee4 <main+0x484>)
 8000e2c:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8000e2e:	681b      	ldr	r3, [r3, #0]
 8000e30:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8000e32:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8000e34:	4d2c      	ldr	r5, [pc, #176]	@ (8000ee8 <main+0x488>)
  LcdDrv->DisplayOff();
 8000e36:	68db      	ldr	r3, [r3, #12]
 8000e38:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8000e3a:	4b2c      	ldr	r3, [pc, #176]	@ (8000eec <main+0x48c>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8000e3c:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8000e3e:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8000e42:	e9c5 9402 	strd	r9, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8000e46:	e9c5 490a 	strd	r4, r9, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8000e4a:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8000e4e:	f006 fe87 	bl	8007b60 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8000e52:	4631      	mov	r1, r6
 8000e54:	4628      	mov	r0, r5
 8000e56:	f006 ff39 	bl	8007ccc <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 8000e5a:	f000 fc92 	bl	8001782 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8000e5e:	f000 fc8f 	bl	8001780 <MX_TouchGFX_PreOSInit>
 if (PAJ7620_Init() != HAL_OK)
 8000e62:	f7ff fc85 	bl	8000770 <PAJ7620_Init>
 8000e66:	4604      	mov	r4, r0
 8000e68:	b118      	cbz	r0, 8000e72 <main+0x412>
		  HAL_Delay(100);
 8000e6a:	2064      	movs	r0, #100	@ 0x64
 8000e6c:	f006 fe02 	bl	8007a74 <HAL_Delay>
	  while(1) {
 8000e70:	e7fb      	b.n	8000e6a <main+0x40a>
  osKernelInitialize();
 8000e72:	f009 f851 	bl	8009f18 <osKernelInitialize>
  Queue1Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue1_Attributes);
 8000e76:	4a1e      	ldr	r2, [pc, #120]	@ (8000ef0 <main+0x490>)
 8000e78:	4631      	mov	r1, r6
 8000e7a:	4638      	mov	r0, r7
 8000e7c:	f009 f9a0 	bl	800a1c0 <osMessageQueueNew>
 8000e80:	4b1c      	ldr	r3, [pc, #112]	@ (8000ef4 <main+0x494>)
  Queue2Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue2_Attributes);
 8000e82:	4a1d      	ldr	r2, [pc, #116]	@ (8000ef8 <main+0x498>)
  Queue1Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue1_Attributes);
 8000e84:	6018      	str	r0, [r3, #0]
  Queue2Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue2_Attributes);
 8000e86:	4631      	mov	r1, r6
 8000e88:	4638      	mov	r0, r7
 8000e8a:	f009 f999 	bl	800a1c0 <osMessageQueueNew>
 8000e8e:	4b1b      	ldr	r3, [pc, #108]	@ (8000efc <main+0x49c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000e90:	4a1b      	ldr	r2, [pc, #108]	@ (8000f00 <main+0x4a0>)
  Queue2Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue2_Attributes);
 8000e92:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000e94:	4621      	mov	r1, r4
 8000e96:	481b      	ldr	r0, [pc, #108]	@ (8000f04 <main+0x4a4>)
 8000e98:	f009 f86a 	bl	8009f70 <osThreadNew>
 8000e9c:	4b1a      	ldr	r3, [pc, #104]	@ (8000f08 <main+0x4a8>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8000e9e:	4a1b      	ldr	r2, [pc, #108]	@ (8000f0c <main+0x4ac>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000ea0:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8000ea2:	4621      	mov	r1, r4
 8000ea4:	481a      	ldr	r0, [pc, #104]	@ (8000f10 <main+0x4b0>)
 8000ea6:	f009 f863 	bl	8009f70 <osThreadNew>
 8000eaa:	4b1a      	ldr	r3, [pc, #104]	@ (8000f14 <main+0x4b4>)
  myTask03Handle = osThreadNew(StartTask03, NULL, &myTask03_attributes);
 8000eac:	4a1a      	ldr	r2, [pc, #104]	@ (8000f18 <main+0x4b8>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8000eae:	6018      	str	r0, [r3, #0]
  myTask03Handle = osThreadNew(StartTask03, NULL, &myTask03_attributes);
 8000eb0:	4621      	mov	r1, r4
 8000eb2:	481a      	ldr	r0, [pc, #104]	@ (8000f1c <main+0x4bc>)
 8000eb4:	f009 f85c 	bl	8009f70 <osThreadNew>
 8000eb8:	4b19      	ldr	r3, [pc, #100]	@ (8000f20 <main+0x4c0>)
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_SET);
 8000eba:	4632      	mov	r2, r6
  myTask03Handle = osThreadNew(StartTask03, NULL, &myTask03_attributes);
 8000ebc:	6018      	str	r0, [r3, #0]
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_SET);
 8000ebe:	4641      	mov	r1, r8
 8000ec0:	4818      	ldr	r0, [pc, #96]	@ (8000f24 <main+0x4c4>)
 8000ec2:	f007 f831 	bl	8007f28 <HAL_GPIO_WritePin>
  myTask04Handle = osThreadNew(StartTask04, NULL, &myTask04_attributes);
 8000ec6:	4a18      	ldr	r2, [pc, #96]	@ (8000f28 <main+0x4c8>)
 8000ec8:	4818      	ldr	r0, [pc, #96]	@ (8000f2c <main+0x4cc>)
 8000eca:	4621      	mov	r1, r4
 8000ecc:	f009 f850 	bl	8009f70 <osThreadNew>
 8000ed0:	4b17      	ldr	r3, [pc, #92]	@ (8000f30 <main+0x4d0>)
 8000ed2:	6018      	str	r0, [r3, #0]
  osThreadSuspend(myTask04Handle);
 8000ed4:	f009 f8a2 	bl	800a01c <osThreadSuspend>
  osKernelStart();
 8000ed8:	f009 f830 	bl	8009f3c <osKernelStart>
  while (1)
 8000edc:	e7fe      	b.n	8000edc <main+0x47c>
 8000ede:	bf00      	nop
 8000ee0:	2000039c 	.word	0x2000039c
 8000ee4:	20000014 	.word	0x20000014
 8000ee8:	20000548 	.word	0x20000548
 8000eec:	4002b000 	.word	0x4002b000
 8000ef0:	080277cc 	.word	0x080277cc
 8000ef4:	200003a8 	.word	0x200003a8
 8000ef8:	080277b4 	.word	0x080277b4
 8000efc:	200003a4 	.word	0x200003a4
 8000f00:	08027850 	.word	0x08027850
 8000f04:	0800111d 	.word	0x0800111d
 8000f08:	200003bc 	.word	0x200003bc
 8000f0c:	0802782c 	.word	0x0802782c
 8000f10:	08001791 	.word	0x08001791
 8000f14:	200003b8 	.word	0x200003b8
 8000f18:	08027808 	.word	0x08027808
 8000f1c:	0800088d 	.word	0x0800088d
 8000f20:	200003b4 	.word	0x200003b4
 8000f24:	40021800 	.word	0x40021800
 8000f28:	080277e4 	.word	0x080277e4
 8000f2c:	0800093d 	.word	0x0800093d
 8000f30:	200003b0 	.word	0x200003b0

08000f34 <IOE_Init>:
void IOE_Init(void)
 8000f34:	4770      	bx	lr

08000f36 <IOE_ITConfig>:
void IOE_ITConfig(void)
 8000f36:	4770      	bx	lr

08000f38 <IOE_Write>:
{
 8000f38:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8000f3a:	4b09      	ldr	r3, [pc, #36]	@ (8000f60 <IOE_Write+0x28>)
 8000f3c:	f88d 2017 	strb.w	r2, [sp, #23]
 8000f40:	681b      	ldr	r3, [r3, #0]
 8000f42:	9302      	str	r3, [sp, #8]
 8000f44:	f10d 0217 	add.w	r2, sp, #23
 8000f48:	2301      	movs	r3, #1
 8000f4a:	9200      	str	r2, [sp, #0]
 8000f4c:	9301      	str	r3, [sp, #4]
 8000f4e:	460a      	mov	r2, r1
 8000f50:	4601      	mov	r1, r0
 8000f52:	4804      	ldr	r0, [pc, #16]	@ (8000f64 <IOE_Write+0x2c>)
 8000f54:	f007 fa9e 	bl	8008494 <HAL_I2C_Mem_Write>
}
 8000f58:	b007      	add	sp, #28
 8000f5a:	f85d fb04 	ldr.w	pc, [sp], #4
 8000f5e:	bf00      	nop
 8000f60:	20000008 	.word	0x20000008
 8000f64:	200004f4 	.word	0x200004f4

08000f68 <IOE_Read>:
{
 8000f68:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8000f6a:	2300      	movs	r3, #0
 8000f6c:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8000f70:	4b08      	ldr	r3, [pc, #32]	@ (8000f94 <IOE_Read+0x2c>)
 8000f72:	681b      	ldr	r3, [r3, #0]
 8000f74:	9302      	str	r3, [sp, #8]
{
 8000f76:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8000f78:	2301      	movs	r3, #1
 8000f7a:	f10d 0117 	add.w	r1, sp, #23
 8000f7e:	9100      	str	r1, [sp, #0]
 8000f80:	9301      	str	r3, [sp, #4]
 8000f82:	4601      	mov	r1, r0
 8000f84:	4804      	ldr	r0, [pc, #16]	@ (8000f98 <IOE_Read+0x30>)
 8000f86:	f007 fb15 	bl	80085b4 <HAL_I2C_Mem_Read>
}
 8000f8a:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8000f8e:	b007      	add	sp, #28
 8000f90:	f85d fb04 	ldr.w	pc, [sp], #4
 8000f94:	20000008 	.word	0x20000008
 8000f98:	200004f4 	.word	0x200004f4

08000f9c <IOE_ReadMultiple>:
{
 8000f9c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8000f9e:	4c08      	ldr	r4, [pc, #32]	@ (8000fc0 <IOE_ReadMultiple+0x24>)
 8000fa0:	6824      	ldr	r4, [r4, #0]
 8000fa2:	9200      	str	r2, [sp, #0]
 8000fa4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8000fa8:	460a      	mov	r2, r1
 8000faa:	2301      	movs	r3, #1
 8000fac:	4601      	mov	r1, r0
 8000fae:	4805      	ldr	r0, [pc, #20]	@ (8000fc4 <IOE_ReadMultiple+0x28>)
 8000fb0:	f007 fb00 	bl	80085b4 <HAL_I2C_Mem_Read>
}
 8000fb4:	3800      	subs	r0, #0
 8000fb6:	bf18      	it	ne
 8000fb8:	2001      	movne	r0, #1
 8000fba:	b004      	add	sp, #16
 8000fbc:	bd10      	pop	{r4, pc}
 8000fbe:	bf00      	nop
 8000fc0:	20000008 	.word	0x20000008
 8000fc4:	200004f4 	.word	0x200004f4

08000fc8 <IOE_Delay>:
void IOE_Delay(uint32_t Delay)
 8000fc8:	f006 bd54 	b.w	8007a74 <HAL_Delay>

08000fcc <LCD_IO_Init>:
{
 8000fcc:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8000fce:	4c06      	ldr	r4, [pc, #24]	@ (8000fe8 <LCD_IO_Init+0x1c>)
 8000fd0:	2200      	movs	r2, #0
 8000fd2:	4620      	mov	r0, r4
 8000fd4:	2104      	movs	r1, #4
 8000fd6:	f006 ffa7 	bl	8007f28 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8000fda:	4620      	mov	r0, r4
 8000fdc:	2201      	movs	r2, #1
}
 8000fde:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8000fe2:	2104      	movs	r1, #4
 8000fe4:	f006 bfa0 	b.w	8007f28 <HAL_GPIO_WritePin>
 8000fe8:	40020800 	.word	0x40020800

08000fec <LCD_IO_WriteData>:
{
 8000fec:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8000fee:	4d0b      	ldr	r5, [pc, #44]	@ (800101c <LCD_IO_WriteData+0x30>)
{
 8000ff0:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8000ff2:	2201      	movs	r2, #1
 8000ff4:	480a      	ldr	r0, [pc, #40]	@ (8001020 <LCD_IO_WriteData+0x34>)
 8000ff6:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000ffa:	f006 ff95 	bl	8007f28 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8000ffe:	2200      	movs	r2, #0
 8001000:	2104      	movs	r1, #4
 8001002:	4628      	mov	r0, r5
 8001004:	f006 ff90 	bl	8007f28 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001008:	4620      	mov	r0, r4
 800100a:	f7ff fc2d 	bl	8000868 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800100e:	4628      	mov	r0, r5
 8001010:	2201      	movs	r2, #1
}
 8001012:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001016:	2104      	movs	r1, #4
 8001018:	f006 bf86 	b.w	8007f28 <HAL_GPIO_WritePin>
 800101c:	40020800 	.word	0x40020800
 8001020:	40020c00 	.word	0x40020c00

08001024 <LCD_IO_WriteReg>:
{
 8001024:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001026:	4d0b      	ldr	r5, [pc, #44]	@ (8001054 <LCD_IO_WriteReg+0x30>)
{
 8001028:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800102a:	2200      	movs	r2, #0
 800102c:	480a      	ldr	r0, [pc, #40]	@ (8001058 <LCD_IO_WriteReg+0x34>)
 800102e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001032:	f006 ff79 	bl	8007f28 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001036:	2200      	movs	r2, #0
 8001038:	2104      	movs	r1, #4
 800103a:	4628      	mov	r0, r5
 800103c:	f006 ff74 	bl	8007f28 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001040:	4620      	mov	r0, r4
 8001042:	f7ff fc11 	bl	8000868 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001046:	4628      	mov	r0, r5
 8001048:	2201      	movs	r2, #1
}
 800104a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800104e:	2104      	movs	r1, #4
 8001050:	f006 bf6a 	b.w	8007f28 <HAL_GPIO_WritePin>
 8001054:	40020800 	.word	0x40020800
 8001058:	40020c00 	.word	0x40020c00

0800105c <LCD_IO_ReadData>:
{
 800105c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800105e:	4e14      	ldr	r6, [pc, #80]	@ (80010b0 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001060:	4f14      	ldr	r7, [pc, #80]	@ (80010b4 <LCD_IO_ReadData+0x58>)
{
 8001062:	4605      	mov	r5, r0
 8001064:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001066:	4630      	mov	r0, r6
 8001068:	2200      	movs	r2, #0
 800106a:	2104      	movs	r1, #4
 800106c:	f006 ff5c 	bl	8007f28 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001070:	2200      	movs	r2, #0
 8001072:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001076:	4638      	mov	r0, r7
 8001078:	f006 ff56 	bl	8007f28 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 800107c:	4628      	mov	r0, r5
 800107e:	f7ff fbf3 	bl	8000868 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001082:	4b0d      	ldr	r3, [pc, #52]	@ (80010b8 <LCD_IO_ReadData+0x5c>)
 8001084:	480d      	ldr	r0, [pc, #52]	@ (80010bc <LCD_IO_ReadData+0x60>)
 8001086:	681b      	ldr	r3, [r3, #0]
 8001088:	4622      	mov	r2, r4
 800108a:	a901      	add	r1, sp, #4
 800108c:	f008 fca0 	bl	80099d0 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001090:	4638      	mov	r0, r7
 8001092:	2201      	movs	r2, #1
 8001094:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  return readvalue;
 8001098:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800109a:	f006 ff45 	bl	8007f28 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800109e:	4630      	mov	r0, r6
 80010a0:	2201      	movs	r2, #1
 80010a2:	2104      	movs	r1, #4
 80010a4:	f006 ff40 	bl	8007f28 <HAL_GPIO_WritePin>
}
 80010a8:	4620      	mov	r0, r4
 80010aa:	b003      	add	sp, #12
 80010ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80010ae:	bf00      	nop
 80010b0:	40020800 	.word	0x40020800
 80010b4:	40020c00 	.word	0x40020c00
 80010b8:	20000004 	.word	0x20000004
 80010bc:	200003f4 	.word	0x200003f4

080010c0 <LCD_Delay>:
  HAL_Delay(Delay);
 80010c0:	f006 bcd8 	b.w	8007a74 <HAL_Delay>

080010c4 <updateTasksBasedOnMode>:
void updateTasksBasedOnMode(void) {
 80010c4:	b510      	push	{r4, lr}
  switch (currentMode) {
 80010c6:	4b12      	ldr	r3, [pc, #72]	@ (8001110 <updateTasksBasedOnMode+0x4c>)
 80010c8:	781b      	ldrb	r3, [r3, #0]
 80010ca:	b113      	cbz	r3, 80010d2 <updateTasksBasedOnMode+0xe>
 80010cc:	2b01      	cmp	r3, #1
 80010ce:	d014      	beq.n	80010fa <updateTasksBasedOnMode+0x36>
}
 80010d0:	bd10      	pop	{r4, pc}
      if (osThreadGetState(myTask03Handle) == osThreadBlocked) {
 80010d2:	4c10      	ldr	r4, [pc, #64]	@ (8001114 <updateTasksBasedOnMode+0x50>)
 80010d4:	6820      	ldr	r0, [r4, #0]
 80010d6:	f008 ff8f 	bl	8009ff8 <osThreadGetState>
 80010da:	2803      	cmp	r0, #3
 80010dc:	d102      	bne.n	80010e4 <updateTasksBasedOnMode+0x20>
          osThreadResume(myTask03Handle);    // Khôi phục Task3 nếu đang tạm dừng
 80010de:	6820      	ldr	r0, [r4, #0]
 80010e0:	f008 ffab 	bl	800a03a <osThreadResume>
      if (osThreadGetState(myTask04Handle) != osThreadBlocked) {
 80010e4:	4c0c      	ldr	r4, [pc, #48]	@ (8001118 <updateTasksBasedOnMode+0x54>)
      if (osThreadGetState(myTask03Handle) != osThreadBlocked) {
 80010e6:	6820      	ldr	r0, [r4, #0]
 80010e8:	f008 ff86 	bl	8009ff8 <osThreadGetState>
 80010ec:	2803      	cmp	r0, #3
 80010ee:	d0ef      	beq.n	80010d0 <updateTasksBasedOnMode+0xc>
          osThreadSuspend(myTask03Handle);   // Tạm dừng Task3 nếu đang chạy
 80010f0:	6820      	ldr	r0, [r4, #0]
}
 80010f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
          osThreadSuspend(myTask03Handle);   // Tạm dừng Task3 nếu đang chạy
 80010f6:	f008 bf91 	b.w	800a01c <osThreadSuspend>
      if (osThreadGetState(myTask04Handle) == osThreadBlocked) {
 80010fa:	4c07      	ldr	r4, [pc, #28]	@ (8001118 <updateTasksBasedOnMode+0x54>)
 80010fc:	6820      	ldr	r0, [r4, #0]
 80010fe:	f008 ff7b 	bl	8009ff8 <osThreadGetState>
 8001102:	2803      	cmp	r0, #3
 8001104:	d102      	bne.n	800110c <updateTasksBasedOnMode+0x48>
          osThreadResume(myTask04Handle);    // Khôi phục Task4 nếu đang tạm dừng
 8001106:	6820      	ldr	r0, [r4, #0]
 8001108:	f008 ff97 	bl	800a03a <osThreadResume>
      if (osThreadGetState(myTask03Handle) != osThreadBlocked) {
 800110c:	4c01      	ldr	r4, [pc, #4]	@ (8001114 <updateTasksBasedOnMode+0x50>)
 800110e:	e7ea      	b.n	80010e6 <updateTasksBasedOnMode+0x22>
 8001110:	200003a0 	.word	0x200003a0
 8001114:	200003b4 	.word	0x200003b4
 8001118:	200003b0 	.word	0x200003b0

0800111c <StartDefaultTask>:
{
 800111c:	b573      	push	{r0, r1, r4, r5, r6, lr}
      uint32_t count = osMessageQueueGetCount(Queue2Handle);
 800111e:	4c18      	ldr	r4, [pc, #96]	@ (8001180 <StartDefaultTask+0x64>)
        currentMode = mode == 0 ? MODE_TASK3 : MODE_TASK4; // Cập nhật chế độ hiện tại dựa trên giá trị nhận được từ Queue2
 8001120:	4e18      	ldr	r6, [pc, #96]	@ (8001184 <StartDefaultTask+0x68>)
      uint32_t count = osMessageQueueGetCount(Queue2Handle);
 8001122:	6820      	ldr	r0, [r4, #0]
 8001124:	f009 f8e8 	bl	800a2f8 <osMessageQueueGetCount>
      if (count > 0) {
 8001128:	b1e8      	cbz	r0, 8001166 <StartDefaultTask+0x4a>
        osMessageQueueGet(Queue2Handle, &mode, NULL, 0);
 800112a:	2300      	movs	r3, #0
 800112c:	461a      	mov	r2, r3
 800112e:	6820      	ldr	r0, [r4, #0]
 8001130:	f10d 0107 	add.w	r1, sp, #7
 8001134:	f009 f8b0 	bl	800a298 <osMessageQueueGet>
        currentMode = mode == 0 ? MODE_TASK3 : MODE_TASK4; // Cập nhật chế độ hiện tại dựa trên giá trị nhận được từ Queue2
 8001138:	f89d 5007 	ldrb.w	r5, [sp, #7]
 800113c:	2d00      	cmp	r5, #0
 800113e:	bf14      	ite	ne
 8001140:	2301      	movne	r3, #1
 8001142:	2300      	moveq	r3, #0
          HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_SET);
 8001144:	f04f 0201 	mov.w	r2, #1
        currentMode = mode == 0 ? MODE_TASK3 : MODE_TASK4; // Cập nhật chế độ hiện tại dựa trên giá trị nhận được từ Queue2
 8001148:	7033      	strb	r3, [r6, #0]
        if (currentMode == 0) {
 800114a:	d110      	bne.n	800116e <StartDefaultTask+0x52>
          HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_SET);
 800114c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001150:	480d      	ldr	r0, [pc, #52]	@ (8001188 <StartDefaultTask+0x6c>)
 8001152:	f006 fee9 	bl	8007f28 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(GPIOG, GPIO_PIN_14, GPIO_PIN_RESET);
 8001156:	462a      	mov	r2, r5
 8001158:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
          HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800115c:	480a      	ldr	r0, [pc, #40]	@ (8001188 <StartDefaultTask+0x6c>)
 800115e:	f006 fee3 	bl	8007f28 <HAL_GPIO_WritePin>
        updateTasksBasedOnMode(); // Cập nhật trạng thái của các task dựa trên chế độ hiện tại
 8001162:	f7ff ffaf 	bl	80010c4 <updateTasksBasedOnMode>
      osDelay(1);
 8001166:	2001      	movs	r0, #1
 8001168:	f008 ff76 	bl	800a058 <osDelay>
    {
 800116c:	e7d9      	b.n	8001122 <StartDefaultTask+0x6>
          HAL_GPIO_WritePin(GPIOG, GPIO_PIN_14, GPIO_PIN_SET);
 800116e:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001172:	4805      	ldr	r0, [pc, #20]	@ (8001188 <StartDefaultTask+0x6c>)
 8001174:	f006 fed8 	bl	8007f28 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 8001178:	2200      	movs	r2, #0
 800117a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800117e:	e7ed      	b.n	800115c <StartDefaultTask+0x40>
 8001180:	200003a4 	.word	0x200003a4
 8001184:	200003a0 	.word	0x200003a0
 8001188:	40021800 	.word	0x40021800

0800118c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
 800118c:	6802      	ldr	r2, [r0, #0]
 800118e:	4b03      	ldr	r3, [pc, #12]	@ (800119c <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001190:	429a      	cmp	r2, r3
 8001192:	d101      	bne.n	8001198 <HAL_TIM_PeriodElapsedCallback+0xc>
  {
    HAL_IncTick();
 8001194:	f006 bc5c 	b.w	8007a50 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001198:	4770      	bx	lr
 800119a:	bf00      	nop
 800119c:	40001000 	.word	0x40001000

080011a0 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80011a0:	4770      	bx	lr
	...

080011a4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80011a4:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80011a6:	4b0e      	ldr	r3, [pc, #56]	@ (80011e0 <HAL_MspInit+0x3c>)
 80011a8:	2200      	movs	r2, #0
 80011aa:	9200      	str	r2, [sp, #0]
 80011ac:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 80011ae:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 80011b2:	6459      	str	r1, [r3, #68]	@ 0x44
 80011b4:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 80011b6:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 80011ba:	9100      	str	r1, [sp, #0]
 80011bc:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80011be:	9201      	str	r2, [sp, #4]
 80011c0:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 80011c2:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 80011c6:	6419      	str	r1, [r3, #64]	@ 0x40
 80011c8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80011ca:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80011ce:	9301      	str	r3, [sp, #4]
 80011d0:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80011d2:	210f      	movs	r1, #15
 80011d4:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80011d8:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80011da:	f006 bc71 	b.w	8007ac0 <HAL_NVIC_SetPriority>
 80011de:	bf00      	nop
 80011e0:	40023800 	.word	0x40023800

080011e4 <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80011e4:	6802      	ldr	r2, [r0, #0]
 80011e6:	4b09      	ldr	r3, [pc, #36]	@ (800120c <HAL_CRC_MspInit+0x28>)
 80011e8:	429a      	cmp	r2, r3
{
 80011ea:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80011ec:	d10b      	bne.n	8001206 <HAL_CRC_MspInit+0x22>
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80011ee:	2300      	movs	r3, #0
 80011f0:	9301      	str	r3, [sp, #4]
 80011f2:	4b07      	ldr	r3, [pc, #28]	@ (8001210 <HAL_CRC_MspInit+0x2c>)
 80011f4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80011f6:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80011fa:	631a      	str	r2, [r3, #48]	@ 0x30
 80011fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011fe:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001202:	9301      	str	r3, [sp, #4]
 8001204:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
 8001206:	b002      	add	sp, #8
 8001208:	4770      	bx	lr
 800120a:	bf00      	nop
 800120c:	40023000 	.word	0x40023000
 8001210:	40023800 	.word	0x40023800

08001214 <HAL_DMA2D_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001214:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001216:	4b0f      	ldr	r3, [pc, #60]	@ (8001254 <HAL_DMA2D_MspInit+0x40>)
 8001218:	6802      	ldr	r2, [r0, #0]
 800121a:	429a      	cmp	r2, r3
 800121c:	d116      	bne.n	800124c <HAL_DMA2D_MspInit+0x38>
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800121e:	2200      	movs	r2, #0
 8001220:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 8001224:	9201      	str	r2, [sp, #4]
 8001226:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8001228:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 800122c:	6319      	str	r1, [r3, #48]	@ 0x30
 800122e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001230:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8001234:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001236:	2105      	movs	r1, #5
 8001238:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800123a:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800123c:	f006 fc40 	bl	8007ac0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001240:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
 8001242:	b003      	add	sp, #12
 8001244:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001248:	f006 bc6c 	b.w	8007b24 <HAL_NVIC_EnableIRQ>
}
 800124c:	b003      	add	sp, #12
 800124e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001252:	bf00      	nop
 8001254:	4002b000 	.word	0x4002b000

08001258 <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001258:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800125c:	4604      	mov	r4, r0
 800125e:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001260:	2214      	movs	r2, #20
 8001262:	2100      	movs	r1, #0
 8001264:	a803      	add	r0, sp, #12
 8001266:	f024 fca4 	bl	8025bb2 <memset>
  if(hi2c->Instance==I2C3)
 800126a:	6822      	ldr	r2, [r4, #0]
 800126c:	4b24      	ldr	r3, [pc, #144]	@ (8001300 <HAL_I2C_MspInit+0xa8>)
 800126e:	429a      	cmp	r2, r3
 8001270:	d143      	bne.n	80012fa <HAL_I2C_MspInit+0xa2>
  {
    /* USER CODE BEGIN I2C3_MspInit 0 */

    /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001272:	4c24      	ldr	r4, [pc, #144]	@ (8001304 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001274:	4824      	ldr	r0, [pc, #144]	@ (8001308 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001276:	2500      	movs	r5, #0
 8001278:	9500      	str	r5, [sp, #0]
 800127a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800127c:	f043 0304 	orr.w	r3, r3, #4
 8001280:	6323      	str	r3, [r4, #48]	@ 0x30
 8001282:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001284:	f003 0304 	and.w	r3, r3, #4
 8001288:	9300      	str	r3, [sp, #0]
 800128a:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800128c:	9501      	str	r5, [sp, #4]
 800128e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001290:	f043 0301 	orr.w	r3, r3, #1
 8001294:	6323      	str	r3, [r4, #48]	@ 0x30
 8001296:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001298:	f003 0301 	and.w	r3, r3, #1
 800129c:	9301      	str	r3, [sp, #4]
 800129e:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80012a0:	f04f 0912 	mov.w	r9, #18
 80012a4:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012a8:	f04f 0801 	mov.w	r8, #1
 80012ac:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80012ae:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80012b0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80012b2:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012b6:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80012ba:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80012bc:	f006 fd4a 	bl	8007d54 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80012c0:	f44f 7380 	mov.w	r3, #256	@ 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80012c4:	4811      	ldr	r0, [pc, #68]	@ (800130c <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80012c6:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80012c8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80012ca:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012ce:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80012d2:	f006 fd3f 	bl	8007d54 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 80012d6:	9502      	str	r5, [sp, #8]
 80012d8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80012da:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80012de:	6423      	str	r3, [r4, #64]	@ 0x40
 80012e0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80012e2:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80012e6:	9302      	str	r3, [sp, #8]
 80012e8:	9b02      	ldr	r3, [sp, #8]
    /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 80012ea:	6a23      	ldr	r3, [r4, #32]
 80012ec:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80012f0:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 80012f2:	6a23      	ldr	r3, [r4, #32]
 80012f4:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 80012f8:	6223      	str	r3, [r4, #32]
    /* USER CODE END I2C3_MspInit 1 */

  }

}
 80012fa:	b009      	add	sp, #36	@ 0x24
 80012fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001300:	40005c00 	.word	0x40005c00
 8001304:	40023800 	.word	0x40023800
 8001308:	40020800 	.word	0x40020800
 800130c:	40020000 	.word	0x40020000

08001310 <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001310:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001312:	b099      	sub	sp, #100	@ 0x64
 8001314:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001316:	2214      	movs	r2, #20
 8001318:	2100      	movs	r1, #0
 800131a:	a807      	add	r0, sp, #28
 800131c:	f024 fc49 	bl	8025bb2 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001320:	2230      	movs	r2, #48	@ 0x30
 8001322:	eb0d 0002 	add.w	r0, sp, r2
 8001326:	2100      	movs	r1, #0
 8001328:	f024 fc43 	bl	8025bb2 <memset>
  if(hltdc->Instance==LTDC)
 800132c:	6822      	ldr	r2, [r4, #0]
 800132e:	4b5e      	ldr	r3, [pc, #376]	@ (80014a8 <HAL_LTDC_MspInit+0x198>)
 8001330:	429a      	cmp	r2, r3
 8001332:	f040 80b7 	bne.w	80014a4 <HAL_LTDC_MspInit+0x194>

    /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001336:	2308      	movs	r3, #8
 8001338:	930c      	str	r3, [sp, #48]	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800133a:	23c0      	movs	r3, #192	@ 0xc0
 800133c:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800133e:	2304      	movs	r3, #4
 8001340:	9312      	str	r3, [sp, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001342:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001344:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8001348:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800134a:	f007 fef1 	bl	8009130 <HAL_RCCEx_PeriphCLKConfig>
 800134e:	b108      	cbz	r0, 8001354 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 8001350:	f7ff ff26 	bl	80011a0 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001354:	4b55      	ldr	r3, [pc, #340]	@ (80014ac <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001356:	4856      	ldr	r0, [pc, #344]	@ (80014b0 <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001358:	2400      	movs	r4, #0
 800135a:	9400      	str	r4, [sp, #0]
 800135c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800135e:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8001362:	645a      	str	r2, [r3, #68]	@ 0x44
 8001364:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001366:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 800136a:	9200      	str	r2, [sp, #0]
 800136c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800136e:	9401      	str	r4, [sp, #4]
 8001370:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001372:	f042 0220 	orr.w	r2, r2, #32
 8001376:	631a      	str	r2, [r3, #48]	@ 0x30
 8001378:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800137a:	f002 0220 	and.w	r2, r2, #32
 800137e:	9201      	str	r2, [sp, #4]
 8001380:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001382:	9402      	str	r4, [sp, #8]
 8001384:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001386:	f042 0201 	orr.w	r2, r2, #1
 800138a:	631a      	str	r2, [r3, #48]	@ 0x30
 800138c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800138e:	f002 0201 	and.w	r2, r2, #1
 8001392:	9202      	str	r2, [sp, #8]
 8001394:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001396:	9403      	str	r4, [sp, #12]
 8001398:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800139a:	f042 0202 	orr.w	r2, r2, #2
 800139e:	631a      	str	r2, [r3, #48]	@ 0x30
 80013a0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80013a2:	f002 0202 	and.w	r2, r2, #2
 80013a6:	9203      	str	r2, [sp, #12]
 80013a8:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80013aa:	9404      	str	r4, [sp, #16]
 80013ac:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80013ae:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80013b2:	631a      	str	r2, [r3, #48]	@ 0x30
 80013b4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80013b6:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 80013ba:	9204      	str	r2, [sp, #16]
 80013bc:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80013be:	9405      	str	r4, [sp, #20]
 80013c0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80013c2:	f042 0204 	orr.w	r2, r2, #4
 80013c6:	631a      	str	r2, [r3, #48]	@ 0x30
 80013c8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80013ca:	f002 0204 	and.w	r2, r2, #4
 80013ce:	9205      	str	r2, [sp, #20]
 80013d0:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80013d2:	9406      	str	r4, [sp, #24]
 80013d4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80013d6:	f042 0208 	orr.w	r2, r2, #8
 80013da:	631a      	str	r2, [r3, #48]	@ 0x30
 80013dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013de:	f003 0308 	and.w	r3, r3, #8
 80013e2:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013e4:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80013e6:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80013e8:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80013ea:	960b      	str	r6, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013ec:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80013f0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013f2:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80013f6:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80013fa:	f006 fcab 	bl	8007d54 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80013fe:	f641 0358 	movw	r3, #6232	@ 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001402:	482c      	ldr	r0, [pc, #176]	@ (80014b4 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001404:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001406:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001408:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800140c:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800140e:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001412:	f006 fc9f 	bl	8007d54 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001416:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001418:	4827      	ldr	r0, [pc, #156]	@ (80014b8 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800141a:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800141c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800141e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001422:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001426:	f006 fc95 	bl	8007d54 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 800142a:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800142e:	4822      	ldr	r0, [pc, #136]	@ (80014b8 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001430:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001432:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001434:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001438:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800143c:	f006 fc8a 	bl	8007d54 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001440:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001444:	481d      	ldr	r0, [pc, #116]	@ (80014bc <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001446:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001448:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800144a:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800144e:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001452:	f006 fc7f 	bl	8007d54 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001456:	23c0      	movs	r3, #192	@ 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001458:	4819      	ldr	r0, [pc, #100]	@ (80014c0 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800145a:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800145c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800145e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001462:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001466:	f006 fc75 	bl	8007d54 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800146a:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800146c:	4815      	ldr	r0, [pc, #84]	@ (80014c4 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800146e:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001470:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001472:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001476:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800147a:	f006 fc6b 	bl	8007d54 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800147e:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001482:	480e      	ldr	r0, [pc, #56]	@ (80014bc <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001484:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001486:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001488:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800148c:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001490:	f006 fc60 	bl	8007d54 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001494:	2058      	movs	r0, #88	@ 0x58
 8001496:	4622      	mov	r2, r4
 8001498:	2105      	movs	r1, #5
 800149a:	f006 fb11 	bl	8007ac0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800149e:	2058      	movs	r0, #88	@ 0x58
 80014a0:	f006 fb40 	bl	8007b24 <HAL_NVIC_EnableIRQ>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
 80014a4:	b019      	add	sp, #100	@ 0x64
 80014a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80014a8:	40016800 	.word	0x40016800
 80014ac:	40023800 	.word	0x40023800
 80014b0:	40021400 	.word	0x40021400
 80014b4:	40020000 	.word	0x40020000
 80014b8:	40020400 	.word	0x40020400
 80014bc:	40021800 	.word	0x40021800
 80014c0:	40020800 	.word	0x40020800
 80014c4:	40020c00 	.word	0x40020c00

080014c8 <HAL_SPI_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hspi: SPI handle pointer
  * @retval None
  */
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80014c8:	b510      	push	{r4, lr}
 80014ca:	4604      	mov	r4, r0
 80014cc:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014ce:	2214      	movs	r2, #20
 80014d0:	2100      	movs	r1, #0
 80014d2:	a803      	add	r0, sp, #12
 80014d4:	f024 fb6d 	bl	8025bb2 <memset>
  if(hspi->Instance==SPI5)
 80014d8:	6822      	ldr	r2, [r4, #0]
 80014da:	4b14      	ldr	r3, [pc, #80]	@ (800152c <HAL_SPI_MspInit+0x64>)
 80014dc:	429a      	cmp	r2, r3
 80014de:	d123      	bne.n	8001528 <HAL_SPI_MspInit+0x60>
  {
    /* USER CODE BEGIN SPI5_MspInit 0 */

    /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 80014e0:	f503 4368 	add.w	r3, r3, #59392	@ 0xe800
 80014e4:	2100      	movs	r1, #0
 80014e6:	9101      	str	r1, [sp, #4]
 80014e8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80014ea:	4811      	ldr	r0, [pc, #68]	@ (8001530 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 80014ec:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 80014f0:	645a      	str	r2, [r3, #68]	@ 0x44
 80014f2:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80014f4:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 80014f8:	9201      	str	r2, [sp, #4]
 80014fa:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80014fc:	9102      	str	r1, [sp, #8]
 80014fe:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001500:	f042 0220 	orr.w	r2, r2, #32
 8001504:	631a      	str	r2, [r3, #48]	@ 0x30
 8001506:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001508:	f003 0320 	and.w	r3, r3, #32
 800150c:	9302      	str	r3, [sp, #8]
 800150e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001510:	f44f 7260 	mov.w	r2, #896	@ 0x380
 8001514:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001516:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001518:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800151c:	2305      	movs	r3, #5
 800151e:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001522:	a903      	add	r1, sp, #12
 8001524:	f006 fc16 	bl	8007d54 <HAL_GPIO_Init>

    /* USER CODE END SPI5_MspInit 1 */

  }

}
 8001528:	b008      	add	sp, #32
 800152a:	bd10      	pop	{r4, pc}
 800152c:	40015000 	.word	0x40015000
 8001530:	40021400 	.word	0x40021400

08001534 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001534:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001538:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 800153a:	2300      	movs	r3, #0
 800153c:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 800153e:	4b2b      	ldr	r3, [pc, #172]	@ (80015ec <HAL_SDRAM_MspInit+0xb8>)
 8001540:	681c      	ldr	r4, [r3, #0]
 8001542:	2c00      	cmp	r4, #0
 8001544:	d14f      	bne.n	80015e6 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001546:	f04f 0801 	mov.w	r8, #1
 800154a:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 800154e:	4b28      	ldr	r3, [pc, #160]	@ (80015f0 <HAL_SDRAM_MspInit+0xbc>)
 8001550:	9400      	str	r4, [sp, #0]
 8001552:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001554:	4827      	ldr	r0, [pc, #156]	@ (80015f4 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001556:	ea42 0208 	orr.w	r2, r2, r8
 800155a:	639a      	str	r2, [r3, #56]	@ 0x38
 800155c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800155e:	ea03 0308 	and.w	r3, r3, r8
 8001562:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001564:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001566:	2603      	movs	r6, #3
 8001568:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 800156a:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800156c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800156e:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 8001572:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001576:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800157a:	f006 fbeb 	bl	8007d54 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800157e:	481e      	ldr	r0, [pc, #120]	@ (80015f8 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001580:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001582:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001584:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001588:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800158c:	f006 fbe2 	bl	8007d54 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001590:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001594:	4819      	ldr	r0, [pc, #100]	@ (80015fc <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001596:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001598:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800159a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800159e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80015a2:	f006 fbd7 	bl	8007d54 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80015a6:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80015aa:	4815      	ldr	r0, [pc, #84]	@ (8001600 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80015ac:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80015ae:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80015b0:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015b4:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80015b8:	f006 fbcc 	bl	8007d54 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80015bc:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015c0:	4810      	ldr	r0, [pc, #64]	@ (8001604 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80015c2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015c4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80015c6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015ca:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015ce:	f006 fbc1 	bl	8007d54 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80015d2:	2360      	movs	r3, #96	@ 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015d4:	480c      	ldr	r0, [pc, #48]	@ (8001608 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80015d6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015d8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80015da:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015de:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015e2:	f006 fbb7 	bl	8007d54 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80015e6:	b006      	add	sp, #24
 80015e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80015ec:	20000590 	.word	0x20000590
 80015f0:	40023800 	.word	0x40023800
 80015f4:	40021400 	.word	0x40021400
 80015f8:	40020800 	.word	0x40020800
 80015fc:	40021800 	.word	0x40021800
 8001600:	40021000 	.word	0x40021000
 8001604:	40020c00 	.word	0x40020c00
 8001608:	40020400 	.word	0x40020400

0800160c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800160c:	b570      	push	{r4, r5, r6, lr}
 800160e:	b088      	sub	sp, #32
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001610:	2300      	movs	r3, #0
 8001612:	9302      	str	r3, [sp, #8]
 8001614:	4b20      	ldr	r3, [pc, #128]	@ (8001698 <HAL_InitTick+0x8c>)
 8001616:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001618:	f042 0210 	orr.w	r2, r2, #16
 800161c:	641a      	str	r2, [r3, #64]	@ 0x40
 800161e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001620:	f003 0310 	and.w	r3, r3, #16
 8001624:	9302      	str	r3, [sp, #8]
{
 8001626:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001628:	a901      	add	r1, sp, #4
 800162a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 800162c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800162e:	f007 fd61 	bl	80090f4 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001632:	9b06      	ldr	r3, [sp, #24]
 8001634:	bb4b      	cbnz	r3, 800168a <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001636:	f007 fd4d 	bl	80090d4 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 800163a:	4e18      	ldr	r6, [pc, #96]	@ (800169c <HAL_InitTick+0x90>)
 800163c:	4b18      	ldr	r3, [pc, #96]	@ (80016a0 <HAL_InitTick+0x94>)
 800163e:	6033      	str	r3, [r6, #0]
   * Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
   * Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001640:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8001644:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001646:	4b17      	ldr	r3, [pc, #92]	@ (80016a4 <HAL_InitTick+0x98>)
 8001648:	fbb0 f3f3 	udiv	r3, r0, r3
 800164c:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 800164e:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8001650:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 8001652:	2300      	movs	r3, #0
 8001654:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001656:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001658:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 800165a:	f008 fb89 	bl	8009d70 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 800165e:	4604      	mov	r4, r0
 8001660:	b980      	cbnz	r0, 8001684 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8001662:	4630      	mov	r0, r6
 8001664:	f008 fa5a 	bl	8009b1c <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8001668:	4604      	mov	r4, r0
 800166a:	b958      	cbnz	r0, 8001684 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 800166c:	2036      	movs	r0, #54	@ 0x36
 800166e:	f006 fa59 	bl	8007b24 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001672:	2d0f      	cmp	r5, #15
 8001674:	d80d      	bhi.n	8001692 <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8001676:	4622      	mov	r2, r4
 8001678:	4629      	mov	r1, r5
 800167a:	2036      	movs	r0, #54	@ 0x36
 800167c:	f006 fa20 	bl	8007ac0 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001680:	4b09      	ldr	r3, [pc, #36]	@ (80016a8 <HAL_InitTick+0x9c>)
 8001682:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8001684:	4620      	mov	r0, r4
 8001686:	b008      	add	sp, #32
 8001688:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 800168a:	f007 fd23 	bl	80090d4 <HAL_RCC_GetPCLK1Freq>
 800168e:	0040      	lsls	r0, r0, #1
 8001690:	e7d3      	b.n	800163a <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 8001692:	2401      	movs	r4, #1
 8001694:	e7f6      	b.n	8001684 <HAL_InitTick+0x78>
 8001696:	bf00      	nop
 8001698:	40023800 	.word	0x40023800
 800169c:	20000594 	.word	0x20000594
 80016a0:	40001000 	.word	0x40001000
 80016a4:	000f4240 	.word	0x000f4240
 80016a8:	2000007c 	.word	0x2000007c

080016ac <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80016ac:	4770      	bx	lr

080016ae <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80016ae:	e7fe      	b.n	80016ae <HardFault_Handler>

080016b0 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80016b0:	e7fe      	b.n	80016b0 <MemManage_Handler>

080016b2 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80016b2:	e7fe      	b.n	80016b2 <BusFault_Handler>

080016b4 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80016b4:	e7fe      	b.n	80016b4 <UsageFault_Handler>

080016b6 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 80016b6:	4770      	bx	lr

080016b8 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80016b8:	4801      	ldr	r0, [pc, #4]	@ (80016c0 <TIM6_DAC_IRQHandler+0x8>)
 80016ba:	f008 ba6d 	b.w	8009b98 <HAL_TIM_IRQHandler>
 80016be:	bf00      	nop
 80016c0:	20000594 	.word	0x20000594

080016c4 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80016c4:	4801      	ldr	r0, [pc, #4]	@ (80016cc <LTDC_IRQHandler+0x8>)
 80016c6:	f007 b9ad 	b.w	8008a24 <HAL_LTDC_IRQHandler>
 80016ca:	bf00      	nop
 80016cc:	2000044c 	.word	0x2000044c

080016d0 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 80016d0:	4801      	ldr	r0, [pc, #4]	@ (80016d8 <DMA2D_IRQHandler+0x8>)
 80016d2:	f006 ba71 	b.w	8007bb8 <HAL_DMA2D_IRQHandler>
 80016d6:	bf00      	nop
 80016d8:	20000548 	.word	0x20000548

080016dc <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80016dc:	2001      	movs	r0, #1
 80016de:	4770      	bx	lr

080016e0 <_kill>:

int _kill(int pid, int sig)
{
 80016e0:	b508      	push	{r3, lr}
	errno = EINVAL;
 80016e2:	f024 fb09 	bl	8025cf8 <__errno>
 80016e6:	2316      	movs	r3, #22
 80016e8:	6003      	str	r3, [r0, #0]
	return -1;
}
 80016ea:	f04f 30ff 	mov.w	r0, #4294967295
 80016ee:	bd08      	pop	{r3, pc}

080016f0 <_exit>:

void _exit (int status)
{
 80016f0:	b508      	push	{r3, lr}
	errno = EINVAL;
 80016f2:	f024 fb01 	bl	8025cf8 <__errno>
 80016f6:	2316      	movs	r3, #22
 80016f8:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 80016fa:	e7fe      	b.n	80016fa <_exit+0xa>

080016fc <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80016fc:	b570      	push	{r4, r5, r6, lr}
 80016fe:	460d      	mov	r5, r1
 8001700:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001702:	460e      	mov	r6, r1
 8001704:	1b73      	subs	r3, r6, r5
 8001706:	429c      	cmp	r4, r3
 8001708:	dc01      	bgt.n	800170e <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 800170a:	4620      	mov	r0, r4
 800170c:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 800170e:	f3af 8000 	nop.w
 8001712:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001716:	e7f5      	b.n	8001704 <_read+0x8>

08001718 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001718:	b570      	push	{r4, r5, r6, lr}
 800171a:	460d      	mov	r5, r1
 800171c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800171e:	460e      	mov	r6, r1
 8001720:	1b73      	subs	r3, r6, r5
 8001722:	429c      	cmp	r4, r3
 8001724:	dc01      	bgt.n	800172a <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001726:	4620      	mov	r0, r4
 8001728:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 800172a:	f816 0b01 	ldrb.w	r0, [r6], #1
 800172e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001732:	e7f5      	b.n	8001720 <_write+0x8>

08001734 <_close>:

int _close(int file)
{
	return -1;
}
 8001734:	f04f 30ff 	mov.w	r0, #4294967295
 8001738:	4770      	bx	lr

0800173a <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 800173a:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800173e:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001740:	2000      	movs	r0, #0
 8001742:	4770      	bx	lr

08001744 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001744:	2001      	movs	r0, #1
 8001746:	4770      	bx	lr

08001748 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001748:	2000      	movs	r0, #0
 800174a:	4770      	bx	lr

0800174c <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 800174c:	4a0a      	ldr	r2, [pc, #40]	@ (8001778 <_sbrk+0x2c>)
 800174e:	6811      	ldr	r1, [r2, #0]
{
 8001750:	b508      	push	{r3, lr}
 8001752:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001754:	b909      	cbnz	r1, 800175a <_sbrk+0xe>
		heap_end = &end;
 8001756:	4909      	ldr	r1, [pc, #36]	@ (800177c <_sbrk+0x30>)
 8001758:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 800175a:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 800175c:	4669      	mov	r1, sp
 800175e:	4403      	add	r3, r0
 8001760:	428b      	cmp	r3, r1
 8001762:	d906      	bls.n	8001772 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001764:	f024 fac8 	bl	8025cf8 <__errno>
 8001768:	230c      	movs	r3, #12
 800176a:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 800176c:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001770:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001772:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8001774:	e7fc      	b.n	8001770 <_sbrk+0x24>
 8001776:	bf00      	nop
 8001778:	200005dc 	.word	0x200005dc
 800177c:	20016030 	.word	0x20016030

08001780 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8001780:	4770      	bx	lr

08001782 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001782:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 8001784:	f000 fdbc 	bl	8002300 <touchgfx_components_init>
    touchgfx_init();
}
 8001788:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 800178c:	f000 bd3e 	b.w	800220c <touchgfx_init>

08001790 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 8001790:	f000 bdb8 	b.w	8002304 <touchgfx_taskEntry>

08001794 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001794:	4770      	bx	lr

08001796 <_ZN20STM32TouchControllerD0Ev>:
 8001796:	b510      	push	{r4, lr}
 8001798:	2104      	movs	r1, #4
 800179a:	4604      	mov	r4, r0
 800179c:	f023 f8c5 	bl	802492a <_ZdlPvj>
 80017a0:	4620      	mov	r0, r4
 80017a2:	bd10      	pop	{r4, pc}

080017a4 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80017a4:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80017a6:	4b0c      	ldr	r3, [pc, #48]	@ (80017d8 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80017a8:	4c0c      	ldr	r4, [pc, #48]	@ (80017dc <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80017aa:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80017ac:	4b0c      	ldr	r3, [pc, #48]	@ (80017e0 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80017ae:	2082      	movs	r0, #130	@ 0x82
    TsYBoundary = YSize;
 80017b0:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80017b2:	6863      	ldr	r3, [r4, #4]
 80017b4:	4798      	blx	r3
 80017b6:	f640 0311 	movw	r3, #2065	@ 0x811
 80017ba:	4298      	cmp	r0, r3
 80017bc:	d10a      	bne.n	80017d4 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80017be:	4d09      	ldr	r5, [pc, #36]	@ (80017e4 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 80017c0:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 80017c2:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 80017c4:	2082      	movs	r0, #130	@ 0x82
 80017c6:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 80017c8:	682b      	ldr	r3, [r5, #0]
 80017ca:	2082      	movs	r0, #130	@ 0x82
 80017cc:	68db      	ldr	r3, [r3, #12]
 80017ce:	4798      	blx	r3
 80017d0:	2000      	movs	r0, #0
    }

    return ret;
}
 80017d2:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 80017d4:	2001      	movs	r0, #1
 80017d6:	e7fc      	b.n	80017d2 <_Z11BSP_TS_Inittt+0x2e>
 80017d8:	200005ea 	.word	0x200005ea
 80017dc:	2000004c 	.word	0x2000004c
 80017e0:	200005e8 	.word	0x200005e8
 80017e4:	200005ec 	.word	0x200005ec

080017e8 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 80017e8:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80017ec:	20f0      	movs	r0, #240	@ 0xf0
 80017ee:	f7ff bfd9 	b.w	80017a4 <_Z11BSP_TS_Inittt>
	...

080017f4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 80017f4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 80017f6:	4d39      	ldr	r5, [pc, #228]	@ (80018dc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe8>)
 80017f8:	682b      	ldr	r3, [r5, #0]
{
 80017fa:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 80017fc:	691b      	ldr	r3, [r3, #16]
 80017fe:	2082      	movs	r0, #130	@ 0x82
 8001800:	4798      	blx	r3
 8001802:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8001804:	2800      	cmp	r0, #0
 8001806:	d04e      	beq.n	80018a6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb2>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8001808:	682b      	ldr	r3, [r5, #0]
 800180a:	f10d 0206 	add.w	r2, sp, #6
 800180e:	695b      	ldr	r3, [r3, #20]
 8001810:	a901      	add	r1, sp, #4
 8001812:	2082      	movs	r0, #130	@ 0x82
 8001814:	4798      	blx	r3

        if (isRevD)
 8001816:	4b32      	ldr	r3, [pc, #200]	@ (80018e0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xec>)
 8001818:	781b      	ldrb	r3, [r3, #0]
 800181a:	2b00      	cmp	r3, #0
 800181c:	d04b      	beq.n	80018b6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc2>
        {
            //Ensures the coordinates are within the screen
            if (y > 3700)
 800181e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8001822:	f640 6374 	movw	r3, #3700	@ 0xe74
 8001826:	429a      	cmp	r2, r3
 8001828:	d93f      	bls.n	80018aa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb6>
            {
                y = 3700;
 800182a:	f8ad 3006 	strh.w	r3, [sp, #6]

            /* Y value first correction */
            y -= 180;

            /* Y value second correction */
            y = 3520 - y;
 800182e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8001832:	1a9b      	subs	r3, r3, r2
        }
        else
        {
            /* Y value first correction */
            y -= 360;
 8001834:	b29b      	uxth	r3, r3

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8001836:	2b0a      	cmp	r3, #10
 8001838:	d942      	bls.n	80018c0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xcc>
        yr = y / 11;
 800183a:	220b      	movs	r2, #11
 800183c:	fbb3 f3f2 	udiv	r3, r3, r2
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8001840:	4a28      	ldr	r2, [pc, #160]	@ (80018e4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf0>)
 8001842:	8812      	ldrh	r2, [r2, #0]
 8001844:	4293      	cmp	r3, r2
 8001846:	d901      	bls.n	800184c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
        {
            yr = TsYBoundary - 1;
 8001848:	3a01      	subs	r2, #1
 800184a:	b293      	uxth	r3, r2
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800184c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8001850:	4825      	ldr	r0, [pc, #148]	@ (80018e8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf4>)
 8001852:	f640 31b8 	movw	r1, #3000	@ 0xbb8
 8001856:	428a      	cmp	r2, r1
 8001858:	d834      	bhi.n	80018c4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>
        {
            x = 3870 - x;
 800185a:	f5c2 6271 	rsb	r2, r2, #3856	@ 0xf10
 800185e:	320e      	adds	r2, #14
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001860:	6801      	ldr	r1, [r0, #0]
            x = 3870 - x;
 8001862:	b292      	uxth	r2, r2
        xr = x / 15;
 8001864:	250f      	movs	r5, #15
 8001866:	fbb2 f2f5 	udiv	r2, r2, r5
        else if (xr > TsXBoundary)
 800186a:	4d20      	ldr	r5, [pc, #128]	@ (80018ec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf8>)
 800186c:	882d      	ldrh	r5, [r5, #0]
 800186e:	42aa      	cmp	r2, r5
            xr = TsXBoundary - 1;
 8001870:	bf84      	itt	hi
 8001872:	f105 35ff 	addhi.w	r5, r5, #4294967295
 8001876:	b2aa      	uxthhi	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001878:	428a      	cmp	r2, r1
 800187a:	4615      	mov	r5, r2
 800187c:	b28e      	uxth	r6, r1
 800187e:	d92a      	bls.n	80018d6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe2>
 8001880:	1b92      	subs	r2, r2, r6
 8001882:	b291      	uxth	r1, r2
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001884:	4e1a      	ldr	r6, [pc, #104]	@ (80018f0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xfc>)
 8001886:	6837      	ldr	r7, [r6, #0]
 8001888:	42bb      	cmp	r3, r7
 800188a:	b2ba      	uxth	r2, r7
 800188c:	bf8c      	ite	hi
 800188e:	1a9a      	subhi	r2, r3, r2
 8001890:	1ad2      	subls	r2, r2, r3
 8001892:	b292      	uxth	r2, r2

        if (xDiff + yDiff > 5)
 8001894:	4411      	add	r1, r2
 8001896:	2905      	cmp	r1, #5
        {
            _x = x;
 8001898:	bfc4      	itt	gt
 800189a:	6005      	strgt	r5, [r0, #0]
            _y = y;
 800189c:	6033      	strgt	r3, [r6, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 800189e:	6803      	ldr	r3, [r0, #0]
 80018a0:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80018a2:	6833      	ldr	r3, [r6, #0]
 80018a4:	80a3      	strh	r3, [r4, #4]
    }
}
 80018a6:	b003      	add	sp, #12
 80018a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
            else if (y < 180)
 80018aa:	2ab3      	cmp	r2, #179	@ 0xb3
                y = 180;
 80018ac:	bf9c      	itt	ls
 80018ae:	22b4      	movls	r2, #180	@ 0xb4
 80018b0:	f8ad 2006 	strhls.w	r2, [sp, #6]
 80018b4:	e7bb      	b.n	800182e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x3a>
            y -= 360;
 80018b6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80018ba:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 80018be:	e7b9      	b.n	8001834 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x40>
            yr = 0;
 80018c0:	2300      	movs	r3, #0
 80018c2:	e7c3      	b.n	800184c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            x = 3800 - x;
 80018c4:	f5c2 626d 	rsb	r2, r2, #3792	@ 0xed0
 80018c8:	3208      	adds	r2, #8
 80018ca:	b292      	uxth	r2, r2
        if (xr <= 0)
 80018cc:	2a0e      	cmp	r2, #14
        xDiff = x > _x ? (x - _x) : (_x - x);
 80018ce:	6801      	ldr	r1, [r0, #0]
        if (xr <= 0)
 80018d0:	d8c8      	bhi.n	8001864 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x70>
        xDiff = x > _x ? (x - _x) : (_x - x);
 80018d2:	2500      	movs	r5, #0
            xr = 0;
 80018d4:	462a      	mov	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 80018d6:	1a89      	subs	r1, r1, r2
 80018d8:	b289      	uxth	r1, r1
 80018da:	e7d3      	b.n	8001884 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x90>
 80018dc:	200005ec 	.word	0x200005ec
 80018e0:	200003ac 	.word	0x200003ac
 80018e4:	200005e8 	.word	0x200005e8
 80018e8:	200005e4 	.word	0x200005e4
 80018ec:	200005ea 	.word	0x200005ea
 80018f0:	200005e0 	.word	0x200005e0

080018f4 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 80018f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 80018f6:	4668      	mov	r0, sp
{
 80018f8:	460d      	mov	r5, r1
 80018fa:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 80018fc:	f7ff ff7a 	bl	80017f4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8001900:	f8bd 0000 	ldrh.w	r0, [sp]
 8001904:	b130      	cbz	r0, 8001914 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8001906:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800190a:	602b      	str	r3, [r5, #0]
        y = state.Y;
 800190c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001910:	6023      	str	r3, [r4, #0]
        return true;
 8001912:	2001      	movs	r0, #1
}
 8001914:	b003      	add	sp, #12
 8001916:	bd30      	pop	{r4, r5, pc}

08001918 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001918:	2803      	cmp	r0, #3
 800191a:	d821      	bhi.n	8001960 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 800191c:	e8df f000 	tbb	[pc, r0]
 8001920:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8001924:	4b0f      	ldr	r3, [pc, #60]	@ (8001964 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8001926:	681a      	ldr	r2, [r3, #0]
 8001928:	fab2 f282 	clz	r2, r2
 800192c:	0952      	lsrs	r2, r2, #5
 800192e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8001930:	480d      	ldr	r0, [pc, #52]	@ (8001968 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8001932:	f006 baf9 	b.w	8007f28 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8001936:	4b0b      	ldr	r3, [pc, #44]	@ (8001964 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8001938:	685a      	ldr	r2, [r3, #4]
 800193a:	fab2 f282 	clz	r2, r2
 800193e:	0952      	lsrs	r2, r2, #5
 8001940:	2108      	movs	r1, #8
 8001942:	e7f5      	b.n	8001930 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8001944:	4b07      	ldr	r3, [pc, #28]	@ (8001964 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8001946:	689a      	ldr	r2, [r3, #8]
 8001948:	fab2 f282 	clz	r2, r2
 800194c:	0952      	lsrs	r2, r2, #5
 800194e:	2110      	movs	r1, #16
 8001950:	e7ee      	b.n	8001930 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8001952:	4b04      	ldr	r3, [pc, #16]	@ (8001964 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8001954:	68da      	ldr	r2, [r3, #12]
 8001956:	fab2 f282 	clz	r2, r2
 800195a:	0952      	lsrs	r2, r2, #5
 800195c:	2120      	movs	r1, #32
 800195e:	e7e7      	b.n	8001930 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8001960:	4770      	bx	lr
 8001962:	bf00      	nop
 8001964:	200005f0 	.word	0x200005f0
 8001968:	40021000 	.word	0x40021000

0800196c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800196c:	2803      	cmp	r0, #3
 800196e:	d821      	bhi.n	80019b4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 8001970:	e8df f000 	tbb	[pc, r0]
 8001974:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001978:	4b0f      	ldr	r3, [pc, #60]	@ (80019b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 800197a:	681a      	ldr	r2, [r3, #0]
 800197c:	3a00      	subs	r2, #0
 800197e:	bf18      	it	ne
 8001980:	2201      	movne	r2, #1
 8001982:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8001984:	480d      	ldr	r0, [pc, #52]	@ (80019bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8001986:	f006 bacf 	b.w	8007f28 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 800198a:	4b0b      	ldr	r3, [pc, #44]	@ (80019b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 800198c:	685a      	ldr	r2, [r3, #4]
 800198e:	3a00      	subs	r2, #0
 8001990:	bf18      	it	ne
 8001992:	2201      	movne	r2, #1
 8001994:	2108      	movs	r1, #8
 8001996:	e7f5      	b.n	8001984 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001998:	4b07      	ldr	r3, [pc, #28]	@ (80019b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 800199a:	689a      	ldr	r2, [r3, #8]
 800199c:	3a00      	subs	r2, #0
 800199e:	bf18      	it	ne
 80019a0:	2201      	movne	r2, #1
 80019a2:	2110      	movs	r1, #16
 80019a4:	e7ee      	b.n	8001984 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80019a6:	4b04      	ldr	r3, [pc, #16]	@ (80019b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80019a8:	68da      	ldr	r2, [r3, #12]
 80019aa:	3a00      	subs	r2, #0
 80019ac:	bf18      	it	ne
 80019ae:	2201      	movne	r2, #1
 80019b0:	2120      	movs	r1, #32
 80019b2:	e7e7      	b.n	8001984 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80019b4:	4770      	bx	lr
 80019b6:	bf00      	nop
 80019b8:	200005f0 	.word	0x200005f0
 80019bc:	40021000 	.word	0x40021000

080019c0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80019c0:	2803      	cmp	r0, #3
 80019c2:	d80d      	bhi.n	80019e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 80019c4:	e8df f000 	tbb	[pc, r0]
 80019c8:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80019cc:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80019ce:	4805      	ldr	r0, [pc, #20]	@ (80019e4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 80019d0:	f006 baaf 	b.w	8007f32 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80019d4:	2108      	movs	r1, #8
 80019d6:	e7fa      	b.n	80019ce <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80019d8:	2110      	movs	r1, #16
 80019da:	e7f8      	b.n	80019ce <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80019dc:	2120      	movs	r1, #32
 80019de:	e7f6      	b.n	80019ce <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 80019e0:	4770      	bx	lr
 80019e2:	bf00      	nop
 80019e4:	40021000 	.word	0x40021000

080019e8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80019e8:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80019ea:	2803      	cmp	r0, #3
 80019ec:	d811      	bhi.n	8001a12 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 80019ee:	e8df f000 	tbb	[pc, r0]
 80019f2:	0a02      	.short	0x0a02
 80019f4:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80019f6:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80019f8:	4807      	ldr	r0, [pc, #28]	@ (8001a18 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 80019fa:	f006 fa8f 	bl	8007f1c <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80019fe:	1e43      	subs	r3, r0, #1
 8001a00:	4258      	negs	r0, r3
 8001a02:	4158      	adcs	r0, r3
 8001a04:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8001a06:	2108      	movs	r1, #8
 8001a08:	e7f6      	b.n	80019f8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001a0a:	2110      	movs	r1, #16
 8001a0c:	e7f4      	b.n	80019f8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001a0e:	2120      	movs	r1, #32
 8001a10:	e7f2      	b.n	80019f8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8001a12:	2000      	movs	r0, #0
 8001a14:	e7f3      	b.n	80019fe <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8001a16:	bf00      	nop
 8001a18:	40021000 	.word	0x40021000

08001a1c <_ZN8touchgfx4GPIO4initEv>:
{
 8001a1c:	b570      	push	{r4, r5, r6, lr}
 8001a1e:	4d08      	ldr	r5, [pc, #32]	@ (8001a40 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8001a20:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8001a22:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8001a24:	b2e0      	uxtb	r0, r4
 8001a26:	f7ff ffdf 	bl	80019e8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8001a2a:	b118      	cbz	r0, 8001a34 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8001a2c:	682b      	ldr	r3, [r5, #0]
 8001a2e:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8001a30:	bf18      	it	ne
 8001a32:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8001a34:	3401      	adds	r4, #1
 8001a36:	2c05      	cmp	r4, #5
 8001a38:	f105 0504 	add.w	r5, r5, #4
 8001a3c:	d1f2      	bne.n	8001a24 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8001a3e:	bd70      	pop	{r4, r5, r6, pc}
 8001a40:	200005f0 	.word	0x200005f0

08001a44 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8001a44:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8001a46:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 8001a4a:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 8001a4e:	4770      	bx	lr

08001a50 <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
 8001a50:	4770      	bx	lr

08001a52 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8001a52:	2000      	movs	r0, #0
 8001a54:	4770      	bx	lr
	...

08001a58 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001a58:	4b03      	ldr	r3, [pc, #12]	@ (8001a68 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001a5a:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001a5c:	3900      	subs	r1, #0
 8001a5e:	bf18      	it	ne
 8001a60:	2101      	movne	r1, #1
 8001a62:	7019      	strb	r1, [r3, #0]
    }
 8001a64:	4770      	bx	lr
 8001a66:	bf00      	nop
 8001a68:	200152eb 	.word	0x200152eb

08001a6c <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
 8001a6c:	4770      	bx	lr

08001a6e <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001a6e:	2000      	movs	r0, #0
 8001a70:	4770      	bx	lr

08001a72 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001a72:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8001a74:	b10b      	cbz	r3, 8001a7a <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001a76:	4608      	mov	r0, r1
 8001a78:	4718      	bx	r3
        }
    }
 8001a7a:	4770      	bx	lr

08001a7c <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001a7c:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8001a80:	4770      	bx	lr

08001a82 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001a82:	6840      	ldr	r0, [r0, #4]
 8001a84:	6803      	ldr	r3, [r0, #0]
 8001a86:	699b      	ldr	r3, [r3, #24]
 8001a88:	4718      	bx	r3

08001a8a <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
 8001a8a:	4770      	bx	lr

08001a8c <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001a8c:	4770      	bx	lr

08001a8e <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001a8e:	4770      	bx	lr

08001a90 <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
 8001a90:	4770      	bx	lr

08001a92 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001a92:	4770      	bx	lr

08001a94 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA_NOLOAD("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE_NOLOAD("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8001a94:	b510      	push	{r4, lr}
 8001a96:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001a98:	f000 fd4a 	bl	8002530 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8001a9c:	6823      	ldr	r3, [r4, #0]
 8001a9e:	4903      	ldr	r1, [pc, #12]	@ (8001aac <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8001aa0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8001aa4:	4620      	mov	r0, r4
}
 8001aa6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8001aaa:	4718      	bx	r3
 8001aac:	d0000000 	.word	0xd0000000

08001ab0 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8001ab0:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8001ab2:	6803      	ldr	r3, [r0, #0]
{
 8001ab4:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8001ab6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8001aba:	4798      	blx	r3
    enableInterrupts();
 8001abc:	6823      	ldr	r3, [r4, #0]
 8001abe:	4620      	mov	r0, r4
 8001ac0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8001ac2:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8001ac4:	f000 f8ec 	bl	8001ca0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001ac8:	6823      	ldr	r3, [r4, #0]
 8001aca:	4620      	mov	r0, r4
 8001acc:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8001ace:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8001ad0:	2029      	movs	r0, #41	@ 0x29
 8001ad2:	f7ff faa7 	bl	8001024 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8001ad6:	f000 f8e3 	bl	8001ca0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001ada:	6823      	ldr	r3, [r4, #0]
 8001adc:	4620      	mov	r0, r4
 8001ade:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8001ae0:	4798      	blx	r3
    for (;;)
 8001ae2:	e7f8      	b.n	8001ad6 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08001ae4 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001ae4:	b510      	push	{r4, lr}
 8001ae6:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001ae8:	f00b fcc2 	bl	800d470 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001aec:	6823      	ldr	r3, [r4, #0]
 8001aee:	4620      	mov	r0, r4
 8001af0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
    }
 8001af4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001af8:	4718      	bx	r3

08001afa <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001afa:	f000 bcfd 	b.w	80024f8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08001afe <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001afe:	f000 bd01 	b.w	8002504 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001b02 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001b02:	f000 bd33 	b.w	800256c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08001b06 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001b06:	f000 bcd3 	b.w	80024b0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001b0a <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001b0a:	f000 bd43 	b.w	8002594 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001b0e <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001b0e:	f000 bd4b 	b.w	80025a8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08001b12 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001b12:	f000 bcd7 	b.w	80024c4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001b16 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001b16:	f00a bed9 	b.w	800c8cc <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001b1a <_ZN11TouchGFXHALD0Ev>:
 8001b1a:	b510      	push	{r4, lr}
 8001b1c:	2184      	movs	r1, #132	@ 0x84
 8001b1e:	4604      	mov	r4, r0
 8001b20:	f022 ff03 	bl	802492a <_ZdlPvj>
 8001b24:	4620      	mov	r0, r4
 8001b26:	bd10      	pop	{r4, pc}

08001b28 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8001b28:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8001b2a:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 8001b2e:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 8001b32:	4b0c      	ldr	r3, [pc, #48]	@ (8001b64 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8001b34:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8001b36:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001b38:	d009      	beq.n	8001b4e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001b3a:	b93a      	cbnz	r2, 8001b4c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001b3c:	4a0a      	ldr	r2, [pc, #40]	@ (8001b68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001b3e:	490b      	ldr	r1, [pc, #44]	@ (8001b6c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001b40:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001b42:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8001b44:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001b46:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8001b48:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8001b4a:	701a      	strb	r2, [r3, #0]
    }
 8001b4c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8001b4e:	2a00      	cmp	r2, #0
 8001b50:	d0fc      	beq.n	8001b4c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001b52:	4a05      	ldr	r2, [pc, #20]	@ (8001b68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001b54:	4905      	ldr	r1, [pc, #20]	@ (8001b6c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001b56:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001b58:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001b5a:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001b5c:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8001b5e:	2200      	movs	r2, #0
 8001b60:	e7f3      	b.n	8001b4a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8001b62:	bf00      	nop
 8001b64:	200152e4 	.word	0x200152e4
 8001b68:	200152e0 	.word	0x200152e0
 8001b6c:	200152e2 	.word	0x200152e2

08001b70 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8001b70:	b570      	push	{r4, r5, r6, lr}
 8001b72:	460d      	mov	r5, r1
 8001b74:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001b76:	b935      	cbnz	r5, 8001b86 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001b78:	4b09      	ldr	r3, [pc, #36]	@ (8001ba0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8001b7a:	4a0a      	ldr	r2, [pc, #40]	@ (8001ba4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8001b7c:	480a      	ldr	r0, [pc, #40]	@ (8001ba8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8001b7e:	f240 21ff 	movw	r1, #767	@ 0x2ff
 8001b82:	f023 fe0f 	bl	80257a4 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001b86:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8001b8a:	4b08      	ldr	r3, [pc, #32]	@ (8001bac <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001b8c:	3a00      	subs	r2, #0
 8001b8e:	bf18      	it	ne
 8001b90:	2201      	movne	r2, #1
 8001b92:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001b94:	6803      	ldr	r3, [r0, #0]
    }
 8001b96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8001b9a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8001b9e:	4718      	bx	r3
 8001ba0:	08026915 	.word	0x08026915
 8001ba4:	0802694d 	.word	0x0802694d
 8001ba8:	0802699b 	.word	0x0802699b
 8001bac:	200152ea 	.word	0x200152ea

08001bb0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001bb0:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8001bb2:	4b09      	ldr	r3, [pc, #36]	@ (8001bd8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001bb4:	881b      	ldrh	r3, [r3, #0]
 8001bb6:	428b      	cmp	r3, r1
 8001bb8:	d803      	bhi.n	8001bc2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001bba:	4b08      	ldr	r3, [pc, #32]	@ (8001bdc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001bbc:	881b      	ldrh	r3, [r3, #0]
 8001bbe:	4293      	cmp	r3, r2
 8001bc0:	d905      	bls.n	8001bce <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8001bc2:	4b07      	ldr	r3, [pc, #28]	@ (8001be0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001bc4:	4a07      	ldr	r2, [pc, #28]	@ (8001be4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001bc6:	4808      	ldr	r0, [pc, #32]	@ (8001be8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001bc8:	21a3      	movs	r1, #163	@ 0xa3
 8001bca:	f023 fdeb 	bl	80257a4 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8001bce:	4b07      	ldr	r3, [pc, #28]	@ (8001bec <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8001bd0:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8001bd2:	4b07      	ldr	r3, [pc, #28]	@ (8001bf0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8001bd4:	801a      	strh	r2, [r3, #0]
    }
 8001bd6:	bd08      	pop	{r3, pc}
 8001bd8:	200152e0 	.word	0x200152e0
 8001bdc:	200152e2 	.word	0x200152e2
 8001be0:	080269e0 	.word	0x080269e0
 8001be4:	08026a43 	.word	0x08026a43
 8001be8:	0802699b 	.word	0x0802699b
 8001bec:	200152e6 	.word	0x200152e6
 8001bf0:	200152e8 	.word	0x200152e8

08001bf4 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8001bf4:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8001bf6:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8001bfa:	b118      	cbz	r0, 8001c04 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8001bfc:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 8001bfe:	6803      	ldr	r3, [r0, #0]
 8001c00:	681b      	ldr	r3, [r3, #0]
 8001c02:	4718      	bx	r3
    }
 8001c04:	4770      	bx	lr
	...

08001c08 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001c08:	2101      	movs	r1, #1
{
 8001c0a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001c0c:	2200      	movs	r2, #0
 8001c0e:	4608      	mov	r0, r1
 8001c10:	f008 fa2e 	bl	800a070 <osSemaphoreNew>
 8001c14:	4b0a      	ldr	r3, [pc, #40]	@ (8001c40 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001c16:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001c18:	b928      	cbnz	r0, 8001c26 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8001c1a:	4b0a      	ldr	r3, [pc, #40]	@ (8001c44 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001c1c:	4a0a      	ldr	r2, [pc, #40]	@ (8001c48 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001c1e:	2128      	movs	r1, #40	@ 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001c20:	480a      	ldr	r0, [pc, #40]	@ (8001c4c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001c22:	f023 fdbf 	bl	80257a4 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001c26:	2200      	movs	r2, #0
 8001c28:	2104      	movs	r1, #4
 8001c2a:	2001      	movs	r0, #1
 8001c2c:	f008 fac8 	bl	800a1c0 <osMessageQueueNew>
 8001c30:	4b07      	ldr	r3, [pc, #28]	@ (8001c50 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001c32:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001c34:	b918      	cbnz	r0, 8001c3e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001c36:	4b07      	ldr	r3, [pc, #28]	@ (8001c54 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001c38:	4a03      	ldr	r2, [pc, #12]	@ (8001c48 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001c3a:	212c      	movs	r1, #44	@ 0x2c
 8001c3c:	e7f0      	b.n	8001c20 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8001c3e:	bd08      	pop	{r3, pc}
 8001c40:	20000604 	.word	0x20000604
 8001c44:	08026a86 	.word	0x08026a86
 8001c48:	08026acf 	.word	0x08026acf
 8001c4c:	08026afe 	.word	0x08026afe
 8001c50:	20000600 	.word	0x20000600
 8001c54:	08026b42 	.word	0x08026b42

08001c58 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001c58:	4b02      	ldr	r3, [pc, #8]	@ (8001c64 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8001c5a:	f04f 31ff 	mov.w	r1, #4294967295
 8001c5e:	6818      	ldr	r0, [r3, #0]
 8001c60:	f008 ba50 	b.w	800a104 <osSemaphoreAcquire>
 8001c64:	20000604 	.word	0x20000604

08001c68 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001c68:	4b01      	ldr	r3, [pc, #4]	@ (8001c70 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8001c6a:	6818      	ldr	r0, [r3, #0]
 8001c6c:	f008 ba76 	b.w	800a15c <osSemaphoreRelease>
 8001c70:	20000604 	.word	0x20000604

08001c74 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8001c74:	4b02      	ldr	r3, [pc, #8]	@ (8001c80 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8001c76:	2100      	movs	r1, #0
 8001c78:	6818      	ldr	r0, [r3, #0]
 8001c7a:	f008 ba43 	b.w	800a104 <osSemaphoreAcquire>
 8001c7e:	bf00      	nop
 8001c80:	20000604 	.word	0x20000604

08001c84 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8001c84:	f7ff bff0 	b.w	8001c68 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08001c88 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001c88:	4803      	ldr	r0, [pc, #12]	@ (8001c98 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8001c8a:	4904      	ldr	r1, [pc, #16]	@ (8001c9c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001c8c:	6800      	ldr	r0, [r0, #0]
 8001c8e:	2300      	movs	r3, #0
 8001c90:	461a      	mov	r2, r3
 8001c92:	f008 bad0 	b.w	800a236 <osMessageQueuePut>
 8001c96:	bf00      	nop
 8001c98:	20000600 	.word	0x20000600
 8001c9c:	2000000c 	.word	0x2000000c

08001ca0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8001ca0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8001ca2:	4c08      	ldr	r4, [pc, #32]	@ (8001cc4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8001ca4:	2300      	movs	r3, #0
 8001ca6:	461a      	mov	r2, r3
 8001ca8:	a901      	add	r1, sp, #4
 8001caa:	6820      	ldr	r0, [r4, #0]
 8001cac:	f008 faf4 	bl	800a298 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8001cb0:	6820      	ldr	r0, [r4, #0]
 8001cb2:	f04f 33ff 	mov.w	r3, #4294967295
 8001cb6:	2200      	movs	r2, #0
 8001cb8:	a901      	add	r1, sp, #4
 8001cba:	f008 faed 	bl	800a298 <osMessageQueueGet>
}
 8001cbe:	b002      	add	sp, #8
 8001cc0:	bd10      	pop	{r4, pc}
 8001cc2:	bf00      	nop
 8001cc4:	20000600 	.word	0x20000600

08001cc8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001cc8:	6803      	ldr	r3, [r0, #0]
 8001cca:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001ccc:	4718      	bx	r3

08001cce <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8001cce:	2001      	movs	r0, #1
 8001cd0:	4770      	bx	lr

08001cd2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8001cd2:	6803      	ldr	r3, [r0, #0]
 8001cd4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001cd6:	4718      	bx	r3

08001cd8 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
 8001cd8:	e7fe      	b.n	8001cd8 <DMA2D_XferErrorCallback>

08001cda <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001cda:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8001cde:	4770      	bx	lr

08001ce0 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8001ce0:	4b05      	ldr	r3, [pc, #20]	@ (8001cf8 <_ZN8STM32DMAD1Ev+0x18>)
 8001ce2:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001ce4:	4b05      	ldr	r3, [pc, #20]	@ (8001cfc <_ZN8STM32DMAD1Ev+0x1c>)
 8001ce6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001cea:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001cee:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001cf2:	f3bf 8f6f 	isb	sy
}
 8001cf6:	4770      	bx	lr
 8001cf8:	08027980 	.word	0x08027980
 8001cfc:	e000e100 	.word	0xe000e100

08001d00 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001d00:	b510      	push	{r4, lr}
 8001d02:	4604      	mov	r4, r0
}
 8001d04:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8001d08:	f7ff ffea 	bl	8001ce0 <_ZN8STM32DMAD1Ev>
 8001d0c:	4620      	mov	r0, r4
 8001d0e:	f022 fe0c 	bl	802492a <_ZdlPvj>
 8001d12:	4620      	mov	r0, r4
 8001d14:	bd10      	pop	{r4, pc}
	...

08001d18 <_ZN8STM32DMA10initializeEv>:
{
 8001d18:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001d1a:	2300      	movs	r3, #0
 8001d1c:	9301      	str	r3, [sp, #4]
 8001d1e:	4b0e      	ldr	r3, [pc, #56]	@ (8001d58 <_ZN8STM32DMA10initializeEv+0x40>)
 8001d20:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001d22:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8001d26:	631a      	str	r2, [r3, #48]	@ 0x30
 8001d28:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001d2a:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 8001d2e:	9201      	str	r2, [sp, #4]
 8001d30:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8001d32:	691a      	ldr	r2, [r3, #16]
 8001d34:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8001d38:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8001d3a:	691a      	ldr	r2, [r3, #16]
 8001d3c:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8001d40:	611a      	str	r2, [r3, #16]
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8001d42:	4b06      	ldr	r3, [pc, #24]	@ (8001d5c <_ZN8STM32DMA10initializeEv+0x44>)
 8001d44:	4a06      	ldr	r2, [pc, #24]	@ (8001d60 <_ZN8STM32DMA10initializeEv+0x48>)
 8001d46:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8001d48:	4a06      	ldr	r2, [pc, #24]	@ (8001d64 <_ZN8STM32DMA10initializeEv+0x4c>)
 8001d4a:	615a      	str	r2, [r3, #20]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001d4c:	4b06      	ldr	r3, [pc, #24]	@ (8001d68 <_ZN8STM32DMA10initializeEv+0x50>)
 8001d4e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001d52:	609a      	str	r2, [r3, #8]
}
 8001d54:	b002      	add	sp, #8
 8001d56:	4770      	bx	lr
 8001d58:	40023800 	.word	0x40023800
 8001d5c:	20000548 	.word	0x20000548
 8001d60:	08001fb9 	.word	0x08001fb9
 8001d64:	08001cd9 	.word	0x08001cd9
 8001d68:	e000e100 	.word	0xe000e100

08001d6c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8001d6c:	b508      	push	{r3, lr}
    switch (format)
 8001d6e:	280a      	cmp	r0, #10
 8001d70:	d809      	bhi.n	8001d86 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8001d72:	e8df f000 	tbb	[pc, r0]
 8001d76:	1006      	.short	0x1006
 8001d78:	0808080e 	.word	0x0808080e
 8001d7c:	10101008 	.word	0x10101008
 8001d80:	10          	.byte	0x10
 8001d81:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8001d82:	2002      	movs	r0, #2
}
 8001d84:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8001d86:	4b05      	ldr	r3, [pc, #20]	@ (8001d9c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8001d88:	4a05      	ldr	r2, [pc, #20]	@ (8001da0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8001d8a:	4806      	ldr	r0, [pc, #24]	@ (8001da4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8001d8c:	2190      	movs	r1, #144	@ 0x90
 8001d8e:	f023 fd09 	bl	80257a4 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8001d92:	2000      	movs	r0, #0
 8001d94:	e7f6      	b.n	8001d84 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8001d96:	2001      	movs	r0, #1
    return dma2dColorMode;
 8001d98:	e7f4      	b.n	8001d84 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8001d9a:	bf00      	nop
 8001d9c:	08026b84 	.word	0x08026b84
 8001da0:	08026b9f 	.word	0x08026b9f
 8001da4:	08026bea 	.word	0x08026bea

08001da8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8001da8:	b538      	push	{r3, r4, r5, lr}
 8001daa:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001dac:	7f88      	ldrb	r0, [r1, #30]
 8001dae:	f7ff ffdd 	bl	8001d6c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001db2:	8aa5      	ldrh	r5, [r4, #20]
 8001db4:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001db6:	4b16      	ldr	r3, [pc, #88]	@ (8001e10 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001db8:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001dba:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001dbc:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8001dc0:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001dc2:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001dc4:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001dc6:	1b52      	subs	r2, r2, r5
 8001dc8:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8001dca:	6825      	ldr	r5, [r4, #0]
 8001dcc:	2d08      	cmp	r5, #8
 8001dce:	d10e      	bne.n	8001dee <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001dd0:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001dd2:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001dd4:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001dd6:	7f20      	ldrb	r0, [r4, #28]
 8001dd8:	4a0e      	ldr	r2, [pc, #56]	@ (8001e14 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8001dda:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001dde:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8001de0:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001de2:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 8001de4:	4a0c      	ldr	r2, [pc, #48]	@ (8001e18 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001de6:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001de8:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8001dea:	601a      	str	r2, [r3, #0]
    }
}
 8001dec:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8001dee:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001df0:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8001df2:	611a      	str	r2, [r3, #16]
 8001df4:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8001df6:	0a0a      	lsrs	r2, r1, #8
 8001df8:	0948      	lsrs	r0, r1, #5
 8001dfa:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8001dfe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8001e02:	4302      	orrs	r2, r0
 8001e04:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8001e08:	430a      	orrs	r2, r1
 8001e0a:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8001e0c:	4a03      	ldr	r2, [pc, #12]	@ (8001e1c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8001e0e:	e7ec      	b.n	8001dea <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8001e10:	4002b000 	.word	0x4002b000
 8001e14:	00010009 	.word	0x00010009
 8001e18:	00022301 	.word	0x00022301
 8001e1c:	00032301 	.word	0x00032301

08001e20 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8001e20:	b508      	push	{r3, lr}
    switch (format)
 8001e22:	280b      	cmp	r0, #11
 8001e24:	d80b      	bhi.n	8001e3e <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8001e26:	e8df f000 	tbb	[pc, r0]
 8001e2a:	1206      	.short	0x1206
 8001e2c:	0a0a0a10 	.word	0x0a0a0a10
 8001e30:	0808080a 	.word	0x0808080a
 8001e34:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8001e36:	2002      	movs	r0, #2
}
 8001e38:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8001e3a:	2005      	movs	r0, #5
        break;
 8001e3c:	e7fc      	b.n	8001e38 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8001e3e:	4b05      	ldr	r3, [pc, #20]	@ (8001e54 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8001e40:	4a05      	ldr	r2, [pc, #20]	@ (8001e58 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8001e42:	4806      	ldr	r0, [pc, #24]	@ (8001e5c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8001e44:	216f      	movs	r1, #111	@ 0x6f
 8001e46:	f023 fcad 	bl	80257a4 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8001e4a:	2000      	movs	r0, #0
 8001e4c:	e7f4      	b.n	8001e38 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8001e4e:	2001      	movs	r0, #1
    return dma2dColorMode;
 8001e50:	e7f2      	b.n	8001e38 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8001e52:	bf00      	nop
 8001e54:	08026b84 	.word	0x08026b84
 8001e58:	08026c2c 	.word	0x08026c2c
 8001e5c:	08026bea 	.word	0x08026bea

08001e60 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8001e60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001e64:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8001e68:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001e6a:	4640      	mov	r0, r8
 8001e6c:	f7ff ffd8 	bl	8001e20 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001e70:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001e72:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001e74:	4638      	mov	r0, r7
 8001e76:	f7ff ffd3 	bl	8001e20 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8001e7a:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001e7c:	4638      	mov	r0, r7
 8001e7e:	f7ff ff75 	bl	8001d6c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001e82:	8aa1      	ldrh	r1, [r4, #20]
 8001e84:	8b62      	ldrh	r2, [r4, #26]
 8001e86:	4b44      	ldr	r3, [pc, #272]	@ (8001f98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001e88:	1a52      	subs	r2, r2, r1
 8001e8a:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001e8c:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001e8e:	8b22      	ldrh	r2, [r4, #24]
 8001e90:	1a52      	subs	r2, r2, r1
 8001e92:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001e94:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001e96:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001e98:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8001e9c:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001e9e:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001ea0:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001ea2:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001ea4:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 8001ea6:	6820      	ldr	r0, [r4, #0]
 8001ea8:	2880      	cmp	r0, #128	@ 0x80
 8001eaa:	d028      	beq.n	8001efe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8001eac:	7f22      	ldrb	r2, [r4, #28]
 8001eae:	d80f      	bhi.n	8001ed0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8001eb0:	2820      	cmp	r0, #32
 8001eb2:	d067      	beq.n	8001f84 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8001eb4:	2840      	cmp	r0, #64	@ 0x40
 8001eb6:	d065      	beq.n	8001f84 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8001eb8:	2804      	cmp	r0, #4
 8001eba:	d01a      	beq.n	8001ef2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001ebc:	4b36      	ldr	r3, [pc, #216]	@ (8001f98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001ebe:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001ec2:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001ec6:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001ec8:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001eca:	d061      	beq.n	8001f90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001ecc:	4a33      	ldr	r2, [pc, #204]	@ (8001f9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8001ece:	e044      	b.n	8001f5a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8001ed0:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8001ed4:	d004      	beq.n	8001ee0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 8001ed6:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8001eda:	d1ef      	bne.n	8001ebc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001edc:	4830      	ldr	r0, [pc, #192]	@ (8001fa0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8001ede:	e000      	b.n	8001ee2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001ee0:	4830      	ldr	r0, [pc, #192]	@ (8001fa4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001ee2:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 8001ee6:	61da      	str	r2, [r3, #28]
 8001ee8:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001eea:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001eec:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001eee:	6159      	str	r1, [r3, #20]
 8001ef0:	e032      	b.n	8001f58 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001ef2:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001ef6:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001efa:	61da      	str	r2, [r3, #28]
 8001efc:	e7f6      	b.n	8001eec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8001efe:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8001f00:	1d02      	adds	r2, r0, #4
 8001f02:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001f04:	7f22      	ldrb	r2, [r4, #28]
 8001f06:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001f0a:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8001f0e:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001f10:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001f12:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8001f14:	7801      	ldrb	r1, [r0, #0]
 8001f16:	b141      	cbz	r1, 8001f2a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8001f18:	2901      	cmp	r1, #1
 8001f1a:	d021      	beq.n	8001f60 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8001f1c:	4b22      	ldr	r3, [pc, #136]	@ (8001fa8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8001f1e:	4a23      	ldr	r2, [pc, #140]	@ (8001fac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8001f20:	4823      	ldr	r0, [pc, #140]	@ (8001fb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8001f22:	f44f 718d 	mov.w	r1, #282	@ 0x11a
 8001f26:	f023 fc3d 	bl	80257a4 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001f2a:	69da      	ldr	r2, [r3, #28]
 8001f2c:	8841      	ldrh	r1, [r0, #2]
 8001f2e:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8001f32:	3901      	subs	r1, #1
 8001f34:	f022 0210 	bic.w	r2, r2, #16
 8001f38:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001f3c:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8001f3e:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8001f40:	4b15      	ldr	r3, [pc, #84]	@ (8001f98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001f42:	69da      	ldr	r2, [r3, #28]
 8001f44:	f042 0220 	orr.w	r2, r2, #32
 8001f48:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8001f4a:	69da      	ldr	r2, [r3, #28]
 8001f4c:	0692      	lsls	r2, r2, #26
 8001f4e:	d4fc      	bmi.n	8001f4a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8001f50:	2210      	movs	r2, #16
 8001f52:	609a      	str	r2, [r3, #8]
            if (blend)
 8001f54:	2900      	cmp	r1, #0
 8001f56:	d0b9      	beq.n	8001ecc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001f58:	4a16      	ldr	r2, [pc, #88]	@ (8001fb4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001f5a:	601a      	str	r2, [r3, #0]
}
 8001f5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 8001f60:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001f64:	69da      	ldr	r2, [r3, #28]
 8001f66:	8840      	ldrh	r0, [r0, #2]
 8001f68:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8001f6c:	f100 30ff 	add.w	r0, r0, #4294967295
 8001f70:	f022 0210 	bic.w	r2, r2, #16
 8001f74:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8001f78:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8001f7c:	bf18      	it	ne
 8001f7e:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001f80:	61da      	str	r2, [r3, #28]
                break;
 8001f82:	e7dd      	b.n	8001f40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001f84:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001f88:	4b03      	ldr	r3, [pc, #12]	@ (8001f98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001f8a:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8001f8e:	e7b4      	b.n	8001efa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001f90:	f242 3201 	movw	r2, #8961	@ 0x2301
 8001f94:	e7e1      	b.n	8001f5a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8001f96:	bf00      	nop
 8001f98:	4002b000 	.word	0x4002b000
 8001f9c:	00012301 	.word	0x00012301
 8001fa0:	00020009 	.word	0x00020009
 8001fa4:	0002000a 	.word	0x0002000a
 8001fa8:	08026c76 	.word	0x08026c76
 8001fac:	08026c90 	.word	0x08026c90
 8001fb0:	08026bea 	.word	0x08026bea
 8001fb4:	00022301 	.word	0x00022301

08001fb8 <DMA2D_XferCpltCallback>:
        return instance;
 8001fb8:	4b02      	ldr	r3, [pc, #8]	@ (8001fc4 <DMA2D_XferCpltCallback+0xc>)
 8001fba:	681b      	ldr	r3, [r3, #0]
 8001fbc:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8001fbe:	6803      	ldr	r3, [r0, #0]
 8001fc0:	695b      	ldr	r3, [r3, #20]
 8001fc2:	4718      	bx	r3
 8001fc4:	200152ec 	.word	0x200152ec

08001fc8 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001fc8:	b570      	push	{r4, r5, r6, lr}
 8001fca:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001fcc:	4625      	mov	r5, r4
 8001fce:	4b0a      	ldr	r3, [pc, #40]	@ (8001ff8 <_ZN8STM32DMAC1Ev+0x30>)
 8001fd0:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001fd2:	2600      	movs	r6, #0
 8001fd4:	6060      	str	r0, [r4, #4]
 8001fd6:	7226      	strb	r6, [r4, #8]
 8001fd8:	7266      	strb	r6, [r4, #9]
 8001fda:	f845 3b20 	str.w	r3, [r5], #32
 8001fde:	2260      	movs	r2, #96	@ 0x60
 8001fe0:	4629      	mov	r1, r5
 8001fe2:	f00b fb9b 	bl	800d71c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8001fe6:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8001fea:	60ee      	str	r6, [r5, #12]
 8001fec:	3524      	adds	r5, #36	@ 0x24
 8001fee:	429d      	cmp	r5, r3
 8001ff0:	d1fb      	bne.n	8001fea <_ZN8STM32DMAC1Ev+0x22>
}
 8001ff2:	4620      	mov	r0, r4
 8001ff4:	bd70      	pop	{r4, r5, r6, pc}
 8001ff6:	bf00      	nop
 8001ff8:	08027980 	.word	0x08027980

08001ffc <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001ffc:	4b03      	ldr	r3, [pc, #12]	@ (800200c <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8001ffe:	681a      	ldr	r2, [r3, #0]
 8002000:	07d2      	lsls	r2, r2, #31
 8002002:	d4fc      	bmi.n	8001ffe <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8002004:	2223      	movs	r2, #35	@ 0x23
 8002006:	609a      	str	r2, [r3, #8]
}
 8002008:	4770      	bx	lr
 800200a:	bf00      	nop
 800200c:	4002b000 	.word	0x4002b000

08002010 <_ZN8touchgfx5paint9flushLineEPmi>:
 *
 * @brief Flushes decoded RGB pixels when rendering compressed images
 */
void flushLine(uint32_t* addr, int sizebytes)
{
}
 8002010:	4770      	bx	lr
	...

08002014 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8002014:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8002016:	4c0f      	ldr	r4, [pc, #60]	@ (8002054 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8002018:	6825      	ldr	r5, [r4, #0]
 800201a:	07ed      	lsls	r5, r5, #31
 800201c:	d4fc      	bmi.n	8002018 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800201e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8002020:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8002022:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8002024:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8002028:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 800202a:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 800202c:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800202e:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8002030:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
 8002032:	d00a      	beq.n	800204a <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8002034:	4908      	ldr	r1, [pc, #32]	@ (8002058 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002036:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8002038:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 800203c:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 800203e:	4b07      	ldr	r3, [pc, #28]	@ (800205c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8002040:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8002042:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8002044:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8002046:	6023      	str	r3, [r4, #0]
    }
}
 8002048:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 800204a:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 800204c:	9b03      	ldr	r3, [sp, #12]
 800204e:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8002050:	4b03      	ldr	r3, [pc, #12]	@ (8002060 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8002052:	e7f8      	b.n	8002046 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8002054:	4002b000 	.word	0x4002b000
 8002058:	00010009 	.word	0x00010009
 800205c:	00020001 	.word	0x00020001
 8002060:	00030001 	.word	0x00030001

08002064 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 8002064:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8002066:	4c0e      	ldr	r4, [pc, #56]	@ (80020a0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x3c>)
 8002068:	6825      	ldr	r5, [r4, #0]
 800206a:	07ed      	lsls	r5, r5, #31
 800206c:	d4fc      	bmi.n	8002068 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800206e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8002070:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8002072:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8002074:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8002078:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
 800207a:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 800207c:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800207e:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8002080:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 8002082:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
 8002084:	d008      	beq.n	8002098 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x34>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8002086:	061b      	lsls	r3, r3, #24
 8002088:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 800208c:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 800208e:	4b05      	ldr	r3, [pc, #20]	@ (80020a4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x40>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002090:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8002092:	6160      	str	r0, [r4, #20]
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8002094:	6023      	str	r3, [r4, #0]
    }
}
 8002096:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8002098:	4b03      	ldr	r3, [pc, #12]	@ (80020a8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
 800209a:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 800209c:	2301      	movs	r3, #1
 800209e:	e7f9      	b.n	8002094 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x30>
 80020a0:	4002b000 	.word	0x4002b000
 80020a4:	00020001 	.word	0x00020001
 80020a8:	ff020002 	.word	0xff020002

080020ac <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 80020ac:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 80020ae:	4c0b      	ldr	r4, [pc, #44]	@ (80020dc <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x30>)
 80020b0:	6825      	ldr	r5, [r4, #0]
 80020b2:	07ed      	lsls	r5, r5, #31
 80020b4:	d4fc      	bmi.n	80020b0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80020b6:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80020b8:	0412      	lsls	r2, r2, #16

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80020ba:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80020bc:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80020be:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80020c2:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80020c4:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80020c8:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80020ca:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 80020cc:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 80020ce:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80020d0:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 80020d2:	4b03      	ldr	r3, [pc, #12]	@ (80020e0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80020d4:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 80020d6:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 80020d8:	6023      	str	r3, [r4, #0]
}
 80020da:	bd30      	pop	{r4, r5, pc}
 80020dc:	4002b000 	.word	0x4002b000
 80020e0:	00020001 	.word	0x00020001

080020e4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80020e4:	2001      	movs	r0, #1
 80020e6:	4770      	bx	lr

080020e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80020e8:	200c      	movs	r0, #12
 80020ea:	4770      	bx	lr

080020ec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80020ec:	230c      	movs	r3, #12
 80020ee:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80020f2:	3008      	adds	r0, #8
 80020f4:	4770      	bx	lr

080020f6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80020f6:	230c      	movs	r3, #12
 80020f8:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80020fc:	3008      	adds	r0, #8
 80020fe:	4770      	bx	lr

08002100 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002100:	2001      	movs	r0, #1
 8002102:	4770      	bx	lr

08002104 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002104:	f642 508c 	movw	r0, #11660	@ 0x2d8c
 8002108:	4770      	bx	lr

0800210a <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800210a:	f642 538c 	movw	r3, #11660	@ 0x2d8c
 800210e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002112:	3008      	adds	r0, #8
 8002114:	4770      	bx	lr

08002116 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002116:	f642 538c 	movw	r3, #11660	@ 0x2d8c
 800211a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800211e:	3008      	adds	r0, #8
 8002120:	4770      	bx	lr

08002122 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002122:	2001      	movs	r0, #1
 8002124:	4770      	bx	lr

08002126 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002126:	2010      	movs	r0, #16
 8002128:	4770      	bx	lr

0800212a <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800212a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800212e:	3008      	adds	r0, #8
 8002130:	4770      	bx	lr

08002132 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002132:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002136:	3008      	adds	r0, #8
 8002138:	4770      	bx	lr

0800213a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen2ScreenNoTransition();
 800213a:	4608      	mov	r0, r1
 800213c:	f000 bc10 	b.w	8002960 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>

08002140 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8002140:	b510      	push	{r4, lr}
 8002142:	4b03      	ldr	r3, [pc, #12]	@ (8002150 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002144:	6003      	str	r3, [r0, #0]
 8002146:	4604      	mov	r4, r0
 8002148:	f00a f917 	bl	800c37a <_ZN8touchgfx17AbstractPartitionD1Ev>
 800214c:	4620      	mov	r0, r4
 800214e:	bd10      	pop	{r4, pc}
 8002150:	08027a38 	.word	0x08027a38

08002154 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002154:	b510      	push	{r4, lr}
 8002156:	4604      	mov	r4, r0
 8002158:	f7ff fff2 	bl	8002140 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800215c:	4620      	mov	r0, r4
 800215e:	2114      	movs	r1, #20
 8002160:	f022 fbe3 	bl	802492a <_ZdlPvj>
 8002164:	4620      	mov	r0, r4
 8002166:	bd10      	pop	{r4, pc}

08002168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002168:	b510      	push	{r4, lr}
 800216a:	4b03      	ldr	r3, [pc, #12]	@ (8002178 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800216c:	6003      	str	r3, [r0, #0]
 800216e:	4604      	mov	r4, r0
 8002170:	f00a f903 	bl	800c37a <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002174:	4620      	mov	r0, r4
 8002176:	bd10      	pop	{r4, pc}
 8002178:	08027a04 	.word	0x08027a04

0800217c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800217c:	b510      	push	{r4, lr}
 800217e:	4604      	mov	r4, r0
 8002180:	f7ff fff2 	bl	8002168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002184:	4620      	mov	r0, r4
 8002186:	f642 5194 	movw	r1, #11668	@ 0x2d94
 800218a:	f022 fbce 	bl	802492a <_ZdlPvj>
 800218e:	4620      	mov	r0, r4
 8002190:	bd10      	pop	{r4, pc}
	...

08002194 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002194:	b510      	push	{r4, lr}
 8002196:	4b03      	ldr	r3, [pc, #12]	@ (80021a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002198:	6003      	str	r3, [r0, #0]
 800219a:	4604      	mov	r4, r0
 800219c:	f00a f8ed 	bl	800c37a <_ZN8touchgfx17AbstractPartitionD1Ev>
 80021a0:	4620      	mov	r0, r4
 80021a2:	bd10      	pop	{r4, pc}
 80021a4:	080279d0 	.word	0x080279d0

080021a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80021a8:	b510      	push	{r4, lr}
 80021aa:	4604      	mov	r4, r0
 80021ac:	f7ff fff2 	bl	8002194 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80021b0:	4620      	mov	r0, r4
 80021b2:	2118      	movs	r1, #24
 80021b4:	f022 fbb9 	bl	802492a <_ZdlPvj>
 80021b8:	4620      	mov	r0, r4
 80021ba:	bd10      	pop	{r4, pc}

080021bc <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80021bc:	b510      	push	{r4, lr}
 80021be:	4b08      	ldr	r3, [pc, #32]	@ (80021e0 <_ZN12FrontendHeapD1Ev+0x24>)
 80021c0:	6003      	str	r3, [r0, #0]
 80021c2:	4604      	mov	r4, r0
 80021c4:	f500 5037 	add.w	r0, r0, #11712	@ 0x2dc0
 80021c8:	f7ff ffba 	bl	8002140 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80021cc:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 80021d0:	f7ff ffca 	bl	8002168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80021d4:	f104 0014 	add.w	r0, r4, #20
 80021d8:	f7ff ffdc 	bl	8002194 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80021dc:	4620      	mov	r0, r4
 80021de:	bd10      	pop	{r4, pc}
 80021e0:	08027a6c 	.word	0x08027a6c

080021e4 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80021e4:	b508      	push	{r3, lr}
 80021e6:	4802      	ldr	r0, [pc, #8]	@ (80021f0 <__tcf_0+0xc>)
 80021e8:	f7ff ffe8 	bl	80021bc <_ZN12FrontendHeapD1Ev>
 80021ec:	bd08      	pop	{r3, pc}
 80021ee:	bf00      	nop
 80021f0:	200014e0 	.word	0x200014e0

080021f4 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80021f4:	b510      	push	{r4, lr}
 80021f6:	4604      	mov	r4, r0
 80021f8:	f7ff ffe0 	bl	80021bc <_ZN12FrontendHeapD1Ev>
 80021fc:	4620      	mov	r0, r4
 80021fe:	f642 7134 	movw	r1, #12084	@ 0x2f34
 8002202:	f022 fb92 	bl	802492a <_ZdlPvj>
 8002206:	4620      	mov	r0, r4
 8002208:	bd10      	pop	{r4, pc}
	...

0800220c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 800220c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002210:	f000 fac2 	bl	8002798 <_ZN14BitmapDatabase11getInstanceEv>
 8002214:	4605      	mov	r5, r0
 8002216:	f000 fac3 	bl	80027a0 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800221a:	2400      	movs	r4, #0
 800221c:	4601      	mov	r1, r0
 800221e:	4623      	mov	r3, r4
 8002220:	4628      	mov	r0, r5
 8002222:	4622      	mov	r2, r4
 8002224:	9400      	str	r4, [sp, #0]
 8002226:	f013 faed 	bl	8015804 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 800222a:	4b28      	ldr	r3, [pc, #160]	@ (80022cc <touchgfx_init+0xc0>)
 800222c:	4a28      	ldr	r2, [pc, #160]	@ (80022d0 <touchgfx_init+0xc4>)
 800222e:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8002230:	4620      	mov	r0, r4
 8002232:	f002 fc77 	bl	8004b24 <_ZN8touchgfx5Texts11setLanguageEt>
        static FrontendHeap instance;
 8002236:	4d27      	ldr	r5, [pc, #156]	@ (80022d4 <touchgfx_init+0xc8>)
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 8002238:	4b27      	ldr	r3, [pc, #156]	@ (80022d8 <touchgfx_init+0xcc>)
 800223a:	4a28      	ldr	r2, [pc, #160]	@ (80022dc <touchgfx_init+0xd0>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 800223c:	4828      	ldr	r0, [pc, #160]	@ (80022e0 <touchgfx_init+0xd4>)
 800223e:	609a      	str	r2, [r3, #8]
 8002240:	f013 fa48 	bl	80156d4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8002244:	682b      	ldr	r3, [r5, #0]
 8002246:	f3bf 8f5b 	dmb	ish
 800224a:	07db      	lsls	r3, r3, #31
 800224c:	d437      	bmi.n	80022be <touchgfx_init+0xb2>
 800224e:	4628      	mov	r0, r5
 8002250:	f022 fb6d 	bl	802492e <__cxa_guard_acquire>
 8002254:	b398      	cbz	r0, 80022be <touchgfx_init+0xb2>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8002256:	4c23      	ldr	r4, [pc, #140]	@ (80022e4 <touchgfx_init+0xd8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8002258:	4b23      	ldr	r3, [pc, #140]	@ (80022e8 <touchgfx_init+0xdc>)
 800225a:	6023      	str	r3, [r4, #0]
          screenStorage(scr),
          transitionStorage(tra),
 800225c:	f504 5737 	add.w	r7, r4, #11712	@ 0x2dc0
          frontendApplication(app)
 8002260:	f107 0618 	add.w	r6, r7, #24
        : presenterStorage(pres),
 8002264:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8002268:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
        : presenterStorage(pres),
 800226c:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 800226e:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8002272:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8002274:	6126      	str	r6, [r4, #16]
 8002276:	f00a f881 	bl	800c37c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800227a:	4b1c      	ldr	r3, [pc, #112]	@ (80022ec <touchgfx_init+0xe0>)
 800227c:	6163      	str	r3, [r4, #20]
 800227e:	4640      	mov	r0, r8
 8002280:	f00a f87c 	bl	800c37c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002284:	4b1a      	ldr	r3, [pc, #104]	@ (80022f0 <touchgfx_init+0xe4>)
 8002286:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002288:	4638      	mov	r0, r7
 800228a:	f00a f877 	bl	800c37c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800228e:	f504 5300 	add.w	r3, r4, #8192	@ 0x2000
 8002292:	f603 50d4 	addw	r0, r3, #3540	@ 0xdd4
 8002296:	4a17      	ldr	r2, [pc, #92]	@ (80022f4 <touchgfx_init+0xe8>)
 8002298:	f8c3 2dc0 	str.w	r2, [r3, #3520]	@ 0xdc0
 800229c:	f002 fcc6 	bl	8004c2c <_ZN5ModelC1Ev>
 80022a0:	4622      	mov	r2, r4
 80022a2:	f107 0114 	add.w	r1, r7, #20
 80022a6:	4630      	mov	r0, r6
 80022a8:	f002 fcb6 	bl	8004c18 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80022ac:	4630      	mov	r0, r6
 80022ae:	f000 fb57 	bl	8002960 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
        static FrontendHeap instance;
 80022b2:	4811      	ldr	r0, [pc, #68]	@ (80022f8 <touchgfx_init+0xec>)
 80022b4:	f023 fa94 	bl	80257e0 <atexit>
 80022b8:	4628      	mov	r0, r5
 80022ba:	f022 fb44 	bl	8024946 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80022be:	480f      	ldr	r0, [pc, #60]	@ (80022fc <touchgfx_init+0xf0>)
}
 80022c0:	b002      	add	sp, #8
 80022c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 80022c6:	f7ff bbe5 	b.w	8001a94 <_ZN11TouchGFXHAL10initializeEv>
 80022ca:	bf00      	nop
 80022cc:	20015350 	.word	0x20015350
 80022d0:	2000068c 	.word	0x2000068c
 80022d4:	200014dc 	.word	0x200014dc
 80022d8:	200006ac 	.word	0x200006ac
 80022dc:	20000690 	.word	0x20000690
 80022e0:	20000010 	.word	0x20000010
 80022e4:	200014e0 	.word	0x200014e0
 80022e8:	08027a6c 	.word	0x08027a6c
 80022ec:	080279d0 	.word	0x080279d0
 80022f0:	08027a04 	.word	0x08027a04
 80022f4:	08027a38 	.word	0x08027a38
 80022f8:	080021e5 	.word	0x080021e5
 80022fc:	20000608 	.word	0x20000608

08002300 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8002300:	4770      	bx	lr
	...

08002304 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8002304:	4801      	ldr	r0, [pc, #4]	@ (800230c <touchgfx_taskEntry+0x8>)
 8002306:	f7ff bbd3 	b.w	8001ab0 <_ZN11TouchGFXHAL9taskEntryEv>
 800230a:	bf00      	nop
 800230c:	20000608 	.word	0x20000608

08002310 <_GLOBAL__sub_I_touchgfx_init>:
}
 8002310:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8002312:	4e26      	ldr	r6, [pc, #152]	@ (80023ac <_GLOBAL__sub_I_touchgfx_init+0x9c>)
{
public:

    STM32TouchController() {}
 8002314:	4c26      	ldr	r4, [pc, #152]	@ (80023b0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
 8002316:	4d27      	ldr	r5, [pc, #156]	@ (80023b4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 8002318:	4b27      	ldr	r3, [pc, #156]	@ (80023b8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 800231a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 800231c:	4630      	mov	r0, r6
 800231e:	f7ff fe53 	bl	8001fc8 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8002322:	4628      	mov	r0, r5
 8002324:	f018 fb74 	bl	801aa10 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 8002328:	4824      	ldr	r0, [pc, #144]	@ (80023bc <_GLOBAL__sub_I_touchgfx_init+0xac>)
 800232a:	f010 ff95 	bl	8013258 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
 800232e:	4b24      	ldr	r3, [pc, #144]	@ (80023c0 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          isFrontPorchEntered(false),
 8002330:	4824      	ldr	r0, [pc, #144]	@ (80023c4 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          touchController(touchCtrl),
 8002332:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8002334:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8002336:	f44f 7180 	mov.w	r1, #256	@ 0x100
          auxiliaryLCD(0),
 800233a:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 800233e:	4922      	ldr	r1, [pc, #136]	@ (80023c8 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8002340:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
 8002342:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          isFrontPorchEntered(false),
 8002346:	4921      	ldr	r1, [pc, #132]	@ (80023cc <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          useAuxiliaryLCD(false),
 8002348:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          isFrontPorchEntered(false),
 800234c:	e9c3 011e 	strd	r0, r1, [r3, #120]	@ 0x78
          minDrawingHeight(maxDrawingHeight / 3),    // Best guess based on testing (but not ideal in all cases)
 8002350:	491f      	ldr	r1, [pc, #124]	@ (80023d0 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8002352:	f8c3 1080 	str.w	r1, [r3, #128]	@ 0x80
        instance = this;
 8002356:	491f      	ldr	r1, [pc, #124]	@ (80023d4 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002358:	481f      	ldr	r0, [pc, #124]	@ (80023d8 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
        instance = this;
 800235a:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800235c:	21f0      	movs	r1, #240	@ 0xf0
          buttonController(0),
 800235e:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8002362:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8002366:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800236a:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 800236e:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 8002372:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8002376:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 800237a:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          lastY(0),
 800237e:	665a      	str	r2, [r3, #100]	@ 0x64
          updateMCULoad(0),
 8002380:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 8002384:	675a      	str	r2, [r3, #116]	@ 0x74
          lcdRef(display),
 8002386:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800238a:	8001      	strh	r1, [r0, #0]
 800238c:	4813      	ldr	r0, [pc, #76]	@ (80023dc <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 800238e:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002390:	4813      	ldr	r0, [pc, #76]	@ (80023e0 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 8002392:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8002396:	8001      	strh	r1, [r0, #0]
 8002398:	4812      	ldr	r0, [pc, #72]	@ (80023e4 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 800239a:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 800239c:	4912      	ldr	r1, [pc, #72]	@ (80023e8 <_GLOBAL__sub_I_touchgfx_init+0xd8>)
 800239e:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80023a0:	2201      	movs	r2, #1
 80023a2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80023a6:	4a11      	ldr	r2, [pc, #68]	@ (80023ec <_GLOBAL__sub_I_touchgfx_init+0xdc>)
 80023a8:	601a      	str	r2, [r3, #0]
}
 80023aa:	bd70      	pop	{r4, r5, r6, pc}
 80023ac:	20000738 	.word	0x20000738
 80023b0:	200014d8 	.word	0x200014d8
 80023b4:	200006ac 	.word	0x200006ac
 80023b8:	0802787c 	.word	0x0802787c
 80023bc:	20000690 	.word	0x20000690
 80023c0:	20000608 	.word	0x20000608
 80023c4:	01010000 	.word	0x01010000
 80023c8:	01000001 	.word	0x01000001
 80023cc:	00500400 	.word	0x00500400
 80023d0:	0014001a 	.word	0x0014001a
 80023d4:	200152ec 	.word	0x200152ec
 80023d8:	200152e0 	.word	0x200152e0
 80023dc:	200152e6 	.word	0x200152e6
 80023e0:	200152e2 	.word	0x200152e2
 80023e4:	200152e8 	.word	0x200152e8
 80023e8:	200152e4 	.word	0x200152e4
 80023ec:	08027894 	.word	0x08027894

080023f0 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 80023f0:	4801      	ldr	r0, [pc, #4]	@ (80023f8 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 80023f2:	f7ff bc75 	b.w	8001ce0 <_ZN8STM32DMAD1Ev>
 80023f6:	bf00      	nop
 80023f8:	20000738 	.word	0x20000738

080023fc <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80023fc:	2000      	movs	r0, #0
 80023fe:	4770      	bx	lr

08002400 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002400:	8081      	strh	r1, [r0, #4]
    }
 8002402:	4770      	bx	lr

08002404 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002404:	80c1      	strh	r1, [r0, #6]
    }
 8002406:	4770      	bx	lr

08002408 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002408:	8101      	strh	r1, [r0, #8]
    }
 800240a:	4770      	bx	lr

0800240c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 800240c:	8141      	strh	r1, [r0, #10]
    }
 800240e:	4770      	bx	lr

08002410 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002410:	4770      	bx	lr

08002412 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002412:	4770      	bx	lr

08002414 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002414:	4770      	bx	lr

08002416 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8002416:	4770      	bx	lr

08002418 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002418:	4770      	bx	lr

0800241a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800241a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800241c:	88c4      	ldrh	r4, [r0, #6]
 800241e:	6803      	ldr	r3, [r0, #0]
 8002420:	1b12      	subs	r2, r2, r4
 8002422:	8884      	ldrh	r4, [r0, #4]
 8002424:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002426:	1b09      	subs	r1, r1, r4
 8002428:	b212      	sxth	r2, r2
    }
 800242a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800242e:	b209      	sxth	r1, r1
 8002430:	4718      	bx	r3

08002432 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002432:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002436:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002438:	f04f 33ff 	mov.w	r3, #4294967295
 800243c:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800243e:	6813      	ldr	r3, [r2, #0]
 8002440:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002442:	6010      	str	r0, [r2, #0]
    }
 8002444:	4770      	bx	lr

08002446 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8002446:	2000      	movs	r0, #0
 8002448:	4770      	bx	lr

0800244a <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800244a:	888b      	ldrh	r3, [r1, #4]
 800244c:	8083      	strh	r3, [r0, #4]
        return true;
    }
 800244e:	2001      	movs	r0, #1
 8002450:	4770      	bx	lr

08002452 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8002452:	4770      	bx	lr

08002454 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002454:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
 8002458:	4770      	bx	lr

0800245a <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800245a:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 800245e:	4770      	bx	lr

08002460 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8002460:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002462:	2200      	movs	r2, #0
        return rect.width;
 8002464:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8002468:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800246c:	8002      	strh	r2, [r0, #0]
 800246e:	8042      	strh	r2, [r0, #2]
 8002470:	8084      	strh	r4, [r0, #4]
 8002472:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8002474:	bd10      	pop	{r4, pc}

08002476 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8002476:	2200      	movs	r2, #0
 8002478:	8002      	strh	r2, [r0, #0]
 800247a:	8042      	strh	r2, [r0, #2]
 800247c:	8082      	strh	r2, [r0, #4]
 800247e:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002480:	4770      	bx	lr

08002482 <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
 8002482:	7701      	strb	r1, [r0, #28]
    }
 8002484:	4770      	bx	lr

08002486 <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
 8002486:	ed80 0a08 	vstr	s0, [r0, #32]
    }
 800248a:	4770      	bx	lr

0800248c <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
 800248c:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
 8002490:	4770      	bx	lr

08002492 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
 8002492:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
 8002496:	4770      	bx	lr

08002498 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
 8002498:	2001      	movs	r0, #1
 800249a:	4770      	bx	lr

0800249c <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
 800249c:	3098      	adds	r0, #152	@ 0x98
 800249e:	4770      	bx	lr

080024a0 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
 80024a0:	308c      	adds	r0, #140	@ 0x8c
 80024a2:	4770      	bx	lr

080024a4 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
 80024a4:	3084      	adds	r0, #132	@ 0x84
 80024a6:	4770      	bx	lr

080024a8 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 80024a8:	4770      	bx	lr

080024aa <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 80024aa:	4770      	bx	lr

080024ac <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
 80024ac:	4770      	bx	lr
	...

080024b0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80024b0:	4b03      	ldr	r3, [pc, #12]	@ (80024c0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80024b2:	2290      	movs	r2, #144	@ 0x90
 80024b4:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 80024b8:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80024bc:	4770      	bx	lr
 80024be:	bf00      	nop
 80024c0:	e000e100 	.word	0xe000e100

080024c4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 80024c4:	4a09      	ldr	r2, [pc, #36]	@ (80024ec <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80024c6:	490a      	ldr	r1, [pc, #40]	@ (80024f0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80024c8:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 80024ca:	480a      	ldr	r0, [pc, #40]	@ (80024f4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 80024cc:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80024d0:	3b01      	subs	r3, #1
 80024d2:	b29b      	uxth	r3, r3
 80024d4:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 80024d6:	6911      	ldr	r1, [r2, #16]
 80024d8:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80024dc:	3901      	subs	r1, #1
 80024de:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80024e0:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80024e2:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 80024e4:	f043 0301 	orr.w	r3, r3, #1
 80024e8:	6353      	str	r3, [r2, #52]	@ 0x34
}
 80024ea:	4770      	bx	lr
 80024ec:	40016800 	.word	0x40016800
 80024f0:	20004416 	.word	0x20004416
 80024f4:	20004414 	.word	0x20004414

080024f8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80024f8:	4b01      	ldr	r3, [pc, #4]	@ (8002500 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80024fa:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 80024fe:	4770      	bx	lr
 8002500:	40016800 	.word	0x40016800

08002504 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002504:	4b02      	ldr	r3, [pc, #8]	@ (8002510 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002506:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002508:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800250c:	625a      	str	r2, [r3, #36]	@ 0x24
}
 800250e:	4770      	bx	lr
 8002510:	40016800 	.word	0x40016800

08002514 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8002514:	b510      	push	{r4, lr}
 8002516:	212c      	movs	r1, #44	@ 0x2c
 8002518:	4604      	mov	r4, r0
 800251a:	f022 fa06 	bl	802492a <_ZdlPvj>
 800251e:	4620      	mov	r0, r4
 8002520:	bd10      	pop	{r4, pc}

08002522 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8002522:	b510      	push	{r4, lr}
 8002524:	21bc      	movs	r1, #188	@ 0xbc
 8002526:	4604      	mov	r4, r0
 8002528:	f022 f9ff 	bl	802492a <_ZdlPvj>
 800252c:	4620      	mov	r0, r4
 800252e:	bd10      	pop	{r4, pc}

08002530 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002530:	b570      	push	{r4, r5, r6, lr}
 8002532:	4604      	mov	r4, r0
    HAL::initialize();
 8002534:	f00a fa1f 	bl	800c976 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8002538:	6823      	ldr	r3, [r4, #0]
 800253a:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
 800253c:	f00f fc24 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
 8002540:	4601      	mov	r1, r0
 8002542:	4620      	mov	r0, r4
 8002544:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002546:	6823      	ldr	r3, [r4, #0]
 8002548:	4a05      	ldr	r2, [pc, #20]	@ (8002560 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800254a:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
 800254e:	4620      	mov	r0, r4
 8002550:	46ac      	mov	ip, r5
 8002552:	2300      	movs	r3, #0
}
 8002554:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002558:	f5a2 3116 	sub.w	r1, r2, #153600	@ 0x25800
 800255c:	4760      	bx	ip
 800255e:	bf00      	nop
 8002560:	d004b000 	.word	0xd004b000

08002564 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8002564:	f00a b9ee 	b.w	800c944 <_ZN8touchgfx3HAL10beginFrameEv>

08002568 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8002568:	f00a b9f8 	b.w	800c95c <_ZN8touchgfx3HAL8endFrameEv>

0800256c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 800256c:	f00a b9b4 	b.w	800c8d8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002570 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8002570:	f00a bb23 	b.w	800cbba <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08002574 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002574:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8002578:	b112      	cbz	r2, 8002580 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800257a:	6803      	ldr	r3, [r0, #0]
 800257c:	695b      	ldr	r3, [r3, #20]
 800257e:	4718      	bx	r3
    }
 8002580:	4770      	bx	lr

08002582 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002582:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8002586:	b11a      	cbz	r2, 8002590 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002588:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 800258c:	b102      	cbz	r2, 8002590 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800258e:	6018      	str	r0, [r3, #0]
        }
    }
 8002590:	4770      	bx	lr
	...

08002594 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002594:	4b03      	ldr	r3, [pc, #12]	@ (80025a4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8002596:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800259a:	609a      	str	r2, [r3, #8]
 800259c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80025a0:	609a      	str	r2, [r3, #8]
}
 80025a2:	4770      	bx	lr
 80025a4:	e000e100 	.word	0xe000e100

080025a8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80025a8:	4b08      	ldr	r3, [pc, #32]	@ (80025cc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80025aa:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80025ae:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80025b2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80025b6:	f3bf 8f6f 	isb	sy
 80025ba:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80025be:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80025c2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80025c6:	f3bf 8f6f 	isb	sy
}
 80025ca:	4770      	bx	lr
 80025cc:	e000e100 	.word	0xe000e100

080025d0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80025d0:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80025d2:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80025d4:	4e12      	ldr	r6, [pc, #72]	@ (8002620 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80025d6:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80025d8:	4b12      	ldr	r3, [pc, #72]	@ (8002624 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80025da:	6003      	str	r3, [r0, #0]
 80025dc:	6833      	ldr	r3, [r6, #0]
 80025de:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
    AbstractPainterRGB565()
 80025e2:	4605      	mov	r5, r0
 80025e4:	b10a      	cbz	r2, 80025ea <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80025e6:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80025e8:	b900      	cbnz	r0, 80025ec <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80025ea:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80025ec:	6803      	ldr	r3, [r0, #0]
 80025ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80025f0:	4798      	blx	r3
        return auxiliaryLCD;
 80025f2:	6833      	ldr	r3, [r6, #0]
 80025f4:	fab0 f480 	clz	r4, r0
 80025f8:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80025fa:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80025fc:	b130      	cbz	r0, 800260c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80025fe:	6803      	ldr	r3, [r0, #0]
 8002600:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002602:	4798      	blx	r3
 8002604:	2800      	cmp	r0, #0
 8002606:	bf08      	it	eq
 8002608:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 800260c:	b92c      	cbnz	r4, 800261a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 800260e:	4b06      	ldr	r3, [pc, #24]	@ (8002628 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8002610:	4a06      	ldr	r2, [pc, #24]	@ (800262c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8002612:	4807      	ldr	r0, [pc, #28]	@ (8002630 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8002614:	212c      	movs	r1, #44	@ 0x2c
 8002616:	f023 f8c5 	bl	80257a4 <__assert_func>
    }
 800261a:	4628      	mov	r0, r5
 800261c:	bd70      	pop	{r4, r5, r6, pc}
 800261e:	bf00      	nop
 8002620:	200152ec 	.word	0x200152ec
 8002624:	08027a80 	.word	0x08027a80
 8002628:	08026cce 	.word	0x08026cce
 800262c:	08026d2c 	.word	0x08026d2c
 8002630:	08026d65 	.word	0x08026d65

08002634 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8002634:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
 8002636:	4e25      	ldr	r6, [pc, #148]	@ (80026cc <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
 8002638:	6835      	ldr	r5, [r6, #0]
 800263a:	f3bf 8f5b 	dmb	ish
 800263e:	f015 0501 	ands.w	r5, r5, #1
 8002642:	d140      	bne.n	80026c6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
 8002644:	4630      	mov	r0, r6
 8002646:	f022 f972 	bl	802492e <__cxa_guard_acquire>
 800264a:	2800      	cmp	r0, #0
 800264c:	d03b      	beq.n	80026c6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
class CWRVectorRenderer : public VectorRenderer
 800264e:	4c20      	ldr	r4, [pc, #128]	@ (80026d0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 8002650:	4b20      	ldr	r3, [pc, #128]	@ (80026d4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa0>)
 8002652:	6125      	str	r5, [r4, #16]
 8002654:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 8002658:	e9c4 3500 	strd	r3, r5, [r4]
 800265c:	e9c4 5502 	strd	r5, r5, [r4, #8]
 8002660:	84e5      	strh	r5, [r4, #38]	@ 0x26
 8002662:	62a5      	str	r5, [r4, #40]	@ 0x28
 8002664:	85a5      	strh	r5, [r4, #44]	@ 0x2c
 8002666:	f011 f8dc 	bl	8013822 <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
 800266a:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800266e:	f00c fd0b 	bl	800f088 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8002672:	4b19      	ldr	r3, [pc, #100]	@ (80026d8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa4>)
 8002674:	65a3      	str	r3, [r4, #88]	@ 0x58
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8002676:	4620      	mov	r0, r4
 8002678:	4b18      	ldr	r3, [pc, #96]	@ (80026dc <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa8>)
 800267a:	f840 3b84 	str.w	r3, [r0], #132
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800267e:	f7ff ffa7 	bl	80025d0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002682:	4b17      	ldr	r3, [pc, #92]	@ (80026e0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xac>)
 8002684:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 8002688:	3324      	adds	r3, #36	@ 0x24
 800268a:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
class AbstractPainterLinearGradient : public AbstractPainter
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
 800268e:	f44f 03c8 	mov.w	r3, #6553600	@ 0x640000
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
 8002692:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 8002696:	2300      	movs	r3, #0
 8002698:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
 800269c:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 80026a0:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 80026a4:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 80026a8:	480e      	ldr	r0, [pc, #56]	@ (80026e4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb0>)
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
 80026aa:	4b0f      	ldr	r3, [pc, #60]	@ (80026e8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb4>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 80026ac:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        : AbstractPainter(),
 80026b0:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 80026b4:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 80026b8:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 80026bc:	f023 f890 	bl	80257e0 <atexit>
 80026c0:	4630      	mov	r0, r6
 80026c2:	f022 f940 	bl	8024946 <__cxa_guard_release>
}
 80026c6:	4802      	ldr	r0, [pc, #8]	@ (80026d0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 80026c8:	bd70      	pop	{r4, r5, r6, pc}
 80026ca:	bf00      	nop
 80026cc:	20004418 	.word	0x20004418
 80026d0:	2000441c 	.word	0x2000441c
 80026d4:	08028a14 	.word	0x08028a14
 80026d8:	08027aa0 	.word	0x08027aa0
 80026dc:	08027b18 	.word	0x08027b18
 80026e0:	080289c8 	.word	0x080289c8
 80026e4:	080024ad 	.word	0x080024ad
 80026e8:	080289a8 	.word	0x080289a8

080026ec <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 80026ec:	b538      	push	{r3, r4, r5, lr}
        return instance;
 80026ee:	4c18      	ldr	r4, [pc, #96]	@ (8002750 <HAL_LTDC_LineEventCallback+0x64>)
        if (!HAL::getInstance())
 80026f0:	6823      	ldr	r3, [r4, #0]
 80026f2:	b35b      	cbz	r3, 800274c <HAL_LTDC_LineEventCallback+0x60>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 80026f4:	4b17      	ldr	r3, [pc, #92]	@ (8002754 <HAL_LTDC_LineEventCallback+0x68>)
 80026f6:	4a18      	ldr	r2, [pc, #96]	@ (8002758 <HAL_LTDC_LineEventCallback+0x6c>)
 80026f8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80026fa:	8811      	ldrh	r1, [r2, #0]
 80026fc:	428b      	cmp	r3, r1
 80026fe:	d116      	bne.n	800272e <HAL_LTDC_LineEventCallback+0x42>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8002700:	4b16      	ldr	r3, [pc, #88]	@ (800275c <HAL_LTDC_LineEventCallback+0x70>)
 8002702:	8819      	ldrh	r1, [r3, #0]
 8002704:	f006 fa18 	bl	8008b38 <HAL_LTDC_ProgramLineEvent>
 8002708:	6823      	ldr	r3, [r4, #0]
        vSyncCnt++;
 800270a:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 800270e:	2500      	movs	r5, #0
        vSyncCnt++;
 8002710:	3201      	adds	r2, #1
 8002712:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 8002716:	f883 507c 	strb.w	r5, [r3, #124]	@ 0x7c
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800271a:	f7ff fab5 	bl	8001c88 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800271e:	6820      	ldr	r0, [r4, #0]
 8002720:	f00a fea6 	bl	800d470 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 8002724:	4628      	mov	r0, r5

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8002726:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800272a:	f7ff b8f5 	b.w	8001918 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800272e:	f006 fa03 	bl	8008b38 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8002732:	6824      	ldr	r4, [r4, #0]
        allowDMATransfers();
 8002734:	6823      	ldr	r3, [r4, #0]
 8002736:	4620      	mov	r0, r4
 8002738:	6a1b      	ldr	r3, [r3, #32]
 800273a:	4798      	blx	r3
        isFrontPorchEntered = true;
 800273c:	2301      	movs	r3, #1
 800273e:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002742:	2000      	movs	r0, #0
    }
 8002744:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002748:	f7ff b910 	b.w	800196c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 800274c:	bd38      	pop	{r3, r4, r5, pc}
 800274e:	bf00      	nop
 8002750:	200152ec 	.word	0x200152ec
 8002754:	40016800 	.word	0x40016800
 8002758:	20004416 	.word	0x20004416
 800275c:	20004414 	.word	0x20004414

08002760 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002760:	4770      	bx	lr

08002762 <_ZN23ApplicationFontProviderD0Ev>:
 8002762:	b510      	push	{r4, lr}
 8002764:	2104      	movs	r1, #4
 8002766:	4604      	mov	r4, r0
 8002768:	f022 f8df 	bl	802492a <_ZdlPvj>
 800276c:	4620      	mov	r0, r4
 800276e:	bd10      	pop	{r4, pc}

08002770 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002770:	2901      	cmp	r1, #1
{
 8002772:	b508      	push	{r3, lr}
    switch (typography)
 8002774:	d006      	beq.n	8002784 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8002776:	2902      	cmp	r1, #2
 8002778:	d008      	beq.n	800278c <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 800277a:	b959      	cbnz	r1, 8002794 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800277c:	f002 fa1e 	bl	8004bbc <_ZN17TypedTextDatabase8getFontsEv>
 8002780:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8002782:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002784:	f002 fa1a 	bl	8004bbc <_ZN17TypedTextDatabase8getFontsEv>
 8002788:	6840      	ldr	r0, [r0, #4]
 800278a:	e7fa      	b.n	8002782 <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800278c:	f002 fa16 	bl	8004bbc <_ZN17TypedTextDatabase8getFontsEv>
 8002790:	6880      	ldr	r0, [r0, #8]
 8002792:	e7f6      	b.n	8002782 <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002794:	2000      	movs	r0, #0
 8002796:	e7f4      	b.n	8002782 <_ZN23ApplicationFontProvider7getFontEt+0x12>

08002798 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002798:	4800      	ldr	r0, [pc, #0]	@ (800279c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800279a:	4770      	bx	lr
 800279c:	08027b70 	.word	0x08027b70

080027a0 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80027a0:	2018      	movs	r0, #24
 80027a2:	4770      	bx	lr

080027a4 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80027a4:	b513      	push	{r0, r1, r4, lr}
 80027a6:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80027a8:	b151      	cbz	r1, 80027c0 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80027aa:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80027ac:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80027ae:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80027b2:	aa01      	add	r2, sp, #4
 80027b4:	689c      	ldr	r4, [r3, #8]
 80027b6:	f10d 0303 	add.w	r3, sp, #3
 80027ba:	47a0      	blx	r4
        return glyph;
    }
 80027bc:	b002      	add	sp, #8
 80027be:	bd10      	pop	{r4, pc}
            return 0;
 80027c0:	4608      	mov	r0, r1
 80027c2:	e7fb      	b.n	80027bc <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080027c4 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80027c4:	89c0      	ldrh	r0, [r0, #14]
 80027c6:	4770      	bx	lr

080027c8 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80027c8:	8a00      	ldrh	r0, [r0, #16]
 80027ca:	4770      	bx	lr

080027cc <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80027cc:	88c0      	ldrh	r0, [r0, #6]
 80027ce:	4770      	bx	lr

080027d0 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80027d0:	8880      	ldrh	r0, [r0, #4]
 80027d2:	4770      	bx	lr

080027d4 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80027d4:	7a80      	ldrb	r0, [r0, #10]
    }
 80027d6:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 80027da:	4770      	bx	lr

080027dc <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80027dc:	7a80      	ldrb	r0, [r0, #10]
    }
 80027de:	09c0      	lsrs	r0, r0, #7
 80027e0:	4770      	bx	lr

080027e2 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 80027e2:	2000      	movs	r0, #0
 80027e4:	4770      	bx	lr
	...

080027e8 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 80027e8:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 80027f0 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 80027ec:	4770      	bx	lr
 80027ee:	bf00      	nop
 80027f0:	00000000 	.word	0x00000000

080027f4 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80027f4:	4770      	bx	lr

080027f6 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80027f6:	b510      	push	{r4, lr}
    }
 80027f8:	2108      	movs	r1, #8
    virtual ~TypedText()
 80027fa:	4604      	mov	r4, r0
    }
 80027fc:	f022 f895 	bl	802492a <_ZdlPvj>
 8002800:	4620      	mov	r0, r4
 8002802:	bd10      	pop	{r4, pc}

08002804 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002804:	4770      	bx	lr

08002806 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002806:	4770      	bx	lr

08002808 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002808:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 800280c:	6808      	ldr	r0, [r1, #0]
 800280e:	6849      	ldr	r1, [r1, #4]
 8002810:	c303      	stmia	r3!, {r0, r1}
    }
 8002812:	4770      	bx	lr

08002814 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002814:	4770      	bx	lr

08002816 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002816:	4770      	bx	lr

08002818 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002818:	6041      	str	r1, [r0, #4]
    }
 800281a:	4770      	bx	lr

0800281c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800281c:	4770      	bx	lr

0800281e <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800281e:	4770      	bx	lr

08002820 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 8002820:	4b06      	ldr	r3, [pc, #24]	@ (800283c <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002822:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002826:	2300      	movs	r3, #0
 8002828:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen2

void FrontendApplicationBase::gotoScreen2ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen2ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800282c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002830:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002834:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoScreen2ScreenNoTransition();
    }
 8002838:	4770      	bx	lr
 800283a:	bf00      	nop
 800283c:	08002f35 	.word	0x08002f35

08002840 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002840:	2301      	movs	r3, #1
 8002842:	7203      	strb	r3, [r0, #8]
    }
 8002844:	4770      	bx	lr

08002846 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002846:	4770      	bx	lr

08002848 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002848:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800284a:	68c2      	ldr	r2, [r0, #12]
 800284c:	6841      	ldr	r1, [r0, #4]
 800284e:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002850:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002852:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002856:	07d2      	lsls	r2, r2, #31
 8002858:	bf48      	it	mi
 800285a:	590a      	ldrmi	r2, [r1, r4]
 800285c:	689b      	ldr	r3, [r3, #8]
    }
 800285e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002862:	bf48      	it	mi
 8002864:	58d3      	ldrmi	r3, [r2, r3]
 8002866:	4718      	bx	r3

08002868 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8002868:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 800286a:	6840      	ldr	r0, [r0, #4]
 800286c:	b130      	cbz	r0, 800287c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800286e:	689a      	ldr	r2, [r3, #8]
 8002870:	b91a      	cbnz	r2, 800287a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8002872:	68d8      	ldr	r0, [r3, #12]
 8002874:	f000 0001 	and.w	r0, r0, #1
 8002878:	4770      	bx	lr
 800287a:	2001      	movs	r0, #1
    }
 800287c:	4770      	bx	lr

0800287e <_ZN8touchgfx12NoTransitionD0Ev>:
 800287e:	b510      	push	{r4, lr}
 8002880:	210c      	movs	r1, #12
 8002882:	4604      	mov	r4, r0
 8002884:	f022 f851 	bl	802492a <_ZdlPvj>
 8002888:	4620      	mov	r0, r4
 800288a:	bd10      	pop	{r4, pc}

0800288c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800288c:	b510      	push	{r4, lr}
 800288e:	2110      	movs	r1, #16
 8002890:	4604      	mov	r4, r0
 8002892:	f022 f84a 	bl	802492a <_ZdlPvj>
 8002896:	4620      	mov	r0, r4
 8002898:	bd10      	pop	{r4, pc}

0800289a <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 800289a:	b510      	push	{r4, lr}
 800289c:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 80028a0:	4604      	mov	r4, r0
 80028a2:	f022 f842 	bl	802492a <_ZdlPvj>
 80028a6:	4620      	mov	r0, r4
 80028a8:	bd10      	pop	{r4, pc}

080028aa <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80028aa:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80028ac:	f00f fa6c 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
 80028b0:	6803      	ldr	r3, [r0, #0]
    }
 80028b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80028b6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80028b8:	4718      	bx	r3

080028ba <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80028ba:	b510      	push	{r4, lr}
 80028bc:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80028be:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 80028c2:	b158      	cbz	r0, 80028dc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80028c4:	6803      	ldr	r3, [r0, #0]
 80028c6:	68db      	ldr	r3, [r3, #12]
 80028c8:	4798      	blx	r3
 80028ca:	b138      	cbz	r0, 80028dc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80028cc:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 80028d0:	6803      	ldr	r3, [r0, #0]
 80028d2:	689b      	ldr	r3, [r3, #8]
 80028d4:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80028d6:	2300      	movs	r3, #0
 80028d8:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 80028dc:	bd10      	pop	{r4, pc}
	...

080028e0 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80028e0:	4b04      	ldr	r3, [pc, #16]	@ (80028f4 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80028e2:	681b      	ldr	r3, [r3, #0]
 80028e4:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80028e8:	b10a      	cbz	r2, 80028ee <_ZN8touchgfx3HAL3lcdEv+0xe>
 80028ea:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80028ec:	b900      	cbnz	r0, 80028f0 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80028ee:	6898      	ldr	r0, [r3, #8]
    }
 80028f0:	4770      	bx	lr
 80028f2:	bf00      	nop
 80028f4:	200152ec 	.word	0x200152ec

080028f8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80028f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80028fa:	4617      	mov	r7, r2
 80028fc:	4604      	mov	r4, r0
 80028fe:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002900:	f00f fb04 	bl	8011f0c <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002904:	4b12      	ldr	r3, [pc, #72]	@ (8002950 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8002906:	601c      	str	r4, [r3, #0]
      model(m)
 8002908:	4b12      	ldr	r3, [pc, #72]	@ (8002954 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 800290a:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 800290c:	4b12      	ldr	r3, [pc, #72]	@ (8002958 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>)
        : currentPresenter(0),
 800290e:	2500      	movs	r5, #0
 8002910:	e9c4 3551 	strd	r3, r5, [r4, #324]	@ 0x144
        return instance;
 8002914:	4b11      	ldr	r3, [pc, #68]	@ (800295c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 8002916:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
 800291a:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800291c:	6803      	ldr	r3, [r0, #0]
 800291e:	2101      	movs	r1, #1
 8002920:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8002922:	e9c4 554f 	strd	r5, r5, [r4, #316]	@ 0x13c
      model(m)
 8002926:	e9c4 7655 	strd	r7, r6, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800292a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 800292c:	4628      	mov	r0, r5
 800292e:	f002 f8f9 	bl	8004b24 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002932:	f7ff ffd5 	bl	80028e0 <_ZN8touchgfx3HAL3lcdEv>
 8002936:	f019 ff14 	bl	801c762 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800293a:	f7ff ffd1 	bl	80028e0 <_ZN8touchgfx3HAL3lcdEv>
 800293e:	f019 ff8b 	bl	801c858 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 8002942:	f7ff ffcd 	bl	80028e0 <_ZN8touchgfx3HAL3lcdEv>
 8002946:	f019 ff93 	bl	801c870 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 800294a:	4620      	mov	r0, r4
 800294c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800294e:	bf00      	nop
 8002950:	20015340 	.word	0x20015340
 8002954:	08027d80 	.word	0x08027d80
 8002958:	08027d68 	.word	0x08027d68
 800295c:	200152ec 	.word	0x200152ec

08002960 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002960:	4b06      	ldr	r3, [pc, #24]	@ (800297c <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv+0x1c>)
 8002962:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002966:	2300      	movs	r3, #0
 8002968:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800296c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002970:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002974:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002978:	4770      	bx	lr
 800297a:	bf00      	nop
 800297c:	08002f35 	.word	0x08002f35

08002980 <_ZN23FrontendApplicationBase32gotoScreenWaitScreenNoTransitionEv>:
 8002980:	4b06      	ldr	r3, [pc, #24]	@ (800299c <_ZN23FrontendApplicationBase32gotoScreenWaitScreenNoTransitionEv+0x1c>)
 8002982:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002986:	2300      	movs	r3, #0
 8002988:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// ScreenWait

void FrontendApplicationBase::gotoScreenWaitScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreenWaitScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800298c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002990:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002994:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002998:	4770      	bx	lr
 800299a:	bf00      	nop
 800299c:	08002ded 	.word	0x08002ded

080029a0 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
 80029a0:	4b06      	ldr	r3, [pc, #24]	@ (80029bc <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 80029a2:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80029a6:	2300      	movs	r3, #0
 80029a8:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80029ac:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80029b0:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80029b4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80029b8:	4770      	bx	lr
 80029ba:	bf00      	nop
 80029bc:	08002ca1 	.word	0x08002ca1

080029c0 <_ZN23FrontendApplicationBase29gotoScreen3ScreenNoTransitionEv>:
 80029c0:	4b06      	ldr	r3, [pc, #24]	@ (80029dc <_ZN23FrontendApplicationBase29gotoScreen3ScreenNoTransitionEv+0x1c>)
 80029c2:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80029c6:	2300      	movs	r3, #0
 80029c8:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen3

void FrontendApplicationBase::gotoScreen3ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen3ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80029cc:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80029d0:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80029d4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80029d8:	4770      	bx	lr
 80029da:	bf00      	nop
 80029dc:	08002b55 	.word	0x08002b55

080029e0 <_ZN23FrontendApplicationBase29gotoScreen4ScreenNoTransitionEv>:
 80029e0:	4b06      	ldr	r3, [pc, #24]	@ (80029fc <_ZN23FrontendApplicationBase29gotoScreen4ScreenNoTransitionEv+0x1c>)
 80029e2:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80029e6:	2300      	movs	r3, #0
 80029e8:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen4

void FrontendApplicationBase::gotoScreen4ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen4ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80029ec:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80029f0:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80029f4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80029f8:	4770      	bx	lr
 80029fa:	bf00      	nop
 80029fc:	08002a09 	.word	0x08002a09

08002a00 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002a00:	6803      	ldr	r3, [r0, #0]
 8002a02:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a04:	4718      	bx	r3
	...

08002a08 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen4ScreenNoTransitionImpl()
{
 8002a08:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen4View, Screen4Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002a0c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002a10:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002a12:	68b0      	ldr	r0, [r6, #8]
 8002a14:	6803      	ldr	r3, [r0, #0]
 8002a16:	6a1b      	ldr	r3, [r3, #32]
 8002a18:	4798      	blx	r3
 8002a1a:	f642 538b 	movw	r3, #11659	@ 0x2d8b
 8002a1e:	4298      	cmp	r0, r3
 8002a20:	d805      	bhi.n	8002a2e <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x26>
 8002a22:	4b44      	ldr	r3, [pc, #272]	@ (8002b34 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x12c>)
 8002a24:	4a44      	ldr	r2, [pc, #272]	@ (8002b38 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x130>)
 8002a26:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002a28:	4844      	ldr	r0, [pc, #272]	@ (8002b3c <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x134>)
 8002a2a:	f022 febb 	bl	80257a4 <__assert_func>
 8002a2e:	6870      	ldr	r0, [r6, #4]
 8002a30:	6803      	ldr	r3, [r0, #0]
 8002a32:	6a1b      	ldr	r3, [r3, #32]
 8002a34:	4798      	blx	r3
 8002a36:	280f      	cmp	r0, #15
 8002a38:	d803      	bhi.n	8002a42 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x3a>
 8002a3a:	4b41      	ldr	r3, [pc, #260]	@ (8002b40 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x138>)
 8002a3c:	4a3e      	ldr	r2, [pc, #248]	@ (8002b38 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x130>)
 8002a3e:	21a4      	movs	r1, #164	@ 0xa4
 8002a40:	e7f2      	b.n	8002a28 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002a42:	68f0      	ldr	r0, [r6, #12]
 8002a44:	6803      	ldr	r3, [r0, #0]
 8002a46:	6a1b      	ldr	r3, [r3, #32]
 8002a48:	4798      	blx	r3
 8002a4a:	280b      	cmp	r0, #11
 8002a4c:	d803      	bhi.n	8002a56 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x4e>
 8002a4e:	4b3d      	ldr	r3, [pc, #244]	@ (8002b44 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x13c>)
 8002a50:	4a39      	ldr	r2, [pc, #228]	@ (8002b38 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x130>)
 8002a52:	21a5      	movs	r1, #165	@ 0xa5
 8002a54:	e7e8      	b.n	8002a28 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8002a56:	f00f f997 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002a5a:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8002b4c <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x144>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8002a5e:	3004      	adds	r0, #4
 8002a60:	f00f f9b7 	bl	8011dd2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002a64:	f8d9 0000 	ldr.w	r0, [r9]
 8002a68:	b110      	cbz	r0, 8002a70 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8002a6a:	6803      	ldr	r3, [r0, #0]
 8002a6c:	68db      	ldr	r3, [r3, #12]
 8002a6e:	4798      	blx	r3
    if (*currentTrans)
 8002a70:	f8d9 0000 	ldr.w	r0, [r9]
 8002a74:	b110      	cbz	r0, 8002a7c <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8002a76:	6803      	ldr	r3, [r0, #0]
 8002a78:	681b      	ldr	r3, [r3, #0]
 8002a7a:	4798      	blx	r3
    if (*currentScreen)
 8002a7c:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8002b50 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x148>
 8002a80:	f8d8 0000 	ldr.w	r0, [r8]
 8002a84:	b110      	cbz	r0, 8002a8c <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8002a86:	6803      	ldr	r3, [r0, #0]
 8002a88:	695b      	ldr	r3, [r3, #20]
 8002a8a:	4798      	blx	r3
    if (*currentPresenter)
 8002a8c:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002a90:	b110      	cbz	r0, 8002a98 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8002a92:	6803      	ldr	r3, [r0, #0]
 8002a94:	685b      	ldr	r3, [r3, #4]
 8002a96:	4798      	blx	r3
    if (*currentScreen)
 8002a98:	f8d8 0000 	ldr.w	r0, [r8]
 8002a9c:	b110      	cbz	r0, 8002aa4 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8002a9e:	6803      	ldr	r3, [r0, #0]
 8002aa0:	681b      	ldr	r3, [r3, #0]
 8002aa2:	4798      	blx	r3
    if (*currentPresenter)
 8002aa4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002aa8:	b110      	cbz	r0, 8002ab0 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8002aaa:	6803      	ldr	r3, [r0, #0]
 8002aac:	689b      	ldr	r3, [r3, #8]
 8002aae:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002ab0:	68f0      	ldr	r0, [r6, #12]
 8002ab2:	2100      	movs	r1, #0
 8002ab4:	f7ff ffa4 	bl	8002a00 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
        : screenContainer(0), done(false)
 8002ab8:	f04f 0b00 	mov.w	fp, #0
 8002abc:	4b22      	ldr	r3, [pc, #136]	@ (8002b48 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x140>)
 8002abe:	f8c0 b004 	str.w	fp, [r0, #4]
 8002ac2:	4604      	mov	r4, r0
 8002ac4:	f880 b008 	strb.w	fp, [r0, #8]
 8002ac8:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002aca:	68b0      	ldr	r0, [r6, #8]
 8002acc:	6803      	ldr	r3, [r0, #0]
 8002ace:	4659      	mov	r1, fp
 8002ad0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002ad2:	4798      	blx	r3
 8002ad4:	4605      	mov	r5, r0
 8002ad6:	f004 f853 	bl	8006b80 <_ZN11Screen4ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002ada:	6870      	ldr	r0, [r6, #4]
 8002adc:	6803      	ldr	r3, [r0, #0]
 8002ade:	4659      	mov	r1, fp
 8002ae0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002ae2:	4798      	blx	r3
 8002ae4:	4629      	mov	r1, r5
 8002ae6:	4606      	mov	r6, r0
 8002ae8:	f003 fe12 	bl	8006710 <_ZN16Screen4PresenterC1ER11Screen4View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8002aec:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002aee:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8002af2:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002af6:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002afa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002afe:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002b00:	f8c6 a008 	str.w	sl, [r6, #8]
 8002b04:	4628      	mov	r0, r5
 8002b06:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002b08:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002b0a:	4798      	blx	r3
    newPresenter->activate();
 8002b0c:	6833      	ldr	r3, [r6, #0]
 8002b0e:	4630      	mov	r0, r6
 8002b10:	681b      	ldr	r3, [r3, #0]
 8002b12:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002b14:	4621      	mov	r1, r4
 8002b16:	4628      	mov	r0, r5
 8002b18:	f011 fae6 	bl	80140e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002b1c:	6823      	ldr	r3, [r4, #0]
 8002b1e:	4620      	mov	r0, r4
 8002b20:	691b      	ldr	r3, [r3, #16]
 8002b22:	4798      	blx	r3
    newTransition->invalidate();
 8002b24:	6823      	ldr	r3, [r4, #0]
 8002b26:	695b      	ldr	r3, [r3, #20]
 8002b28:	4620      	mov	r0, r4
}
 8002b2a:	b001      	add	sp, #4
 8002b2c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002b30:	4718      	bx	r3
 8002b32:	bf00      	nop
 8002b34:	08026dc7 	.word	0x08026dc7
 8002b38:	08026e55 	.word	0x08026e55
 8002b3c:	08026f27 	.word	0x08026f27
 8002b40:	08026f6e 	.word	0x08026f6e
 8002b44:	08027011 	.word	0x08027011
 8002b48:	08027dd4 	.word	0x08027dd4
 8002b4c:	20015334 	.word	0x20015334
 8002b50:	20015330 	.word	0x20015330

08002b54 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv>:
{
 8002b54:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen3View, Screen3Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002b58:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002b5c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002b5e:	68b0      	ldr	r0, [r6, #8]
 8002b60:	6803      	ldr	r3, [r0, #0]
 8002b62:	6a1b      	ldr	r3, [r3, #32]
 8002b64:	4798      	blx	r3
 8002b66:	f642 538b 	movw	r3, #11659	@ 0x2d8b
 8002b6a:	4298      	cmp	r0, r3
 8002b6c:	d805      	bhi.n	8002b7a <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x26>
 8002b6e:	4b44      	ldr	r3, [pc, #272]	@ (8002c80 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x12c>)
 8002b70:	4a44      	ldr	r2, [pc, #272]	@ (8002c84 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x130>)
 8002b72:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002b74:	4844      	ldr	r0, [pc, #272]	@ (8002c88 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x134>)
 8002b76:	f022 fe15 	bl	80257a4 <__assert_func>
 8002b7a:	6870      	ldr	r0, [r6, #4]
 8002b7c:	6803      	ldr	r3, [r0, #0]
 8002b7e:	6a1b      	ldr	r3, [r3, #32]
 8002b80:	4798      	blx	r3
 8002b82:	280f      	cmp	r0, #15
 8002b84:	d803      	bhi.n	8002b8e <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x3a>
 8002b86:	4b41      	ldr	r3, [pc, #260]	@ (8002c8c <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x138>)
 8002b88:	4a3e      	ldr	r2, [pc, #248]	@ (8002c84 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x130>)
 8002b8a:	21a4      	movs	r1, #164	@ 0xa4
 8002b8c:	e7f2      	b.n	8002b74 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002b8e:	68f0      	ldr	r0, [r6, #12]
 8002b90:	6803      	ldr	r3, [r0, #0]
 8002b92:	6a1b      	ldr	r3, [r3, #32]
 8002b94:	4798      	blx	r3
 8002b96:	280b      	cmp	r0, #11
 8002b98:	d803      	bhi.n	8002ba2 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x4e>
 8002b9a:	4b3d      	ldr	r3, [pc, #244]	@ (8002c90 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x13c>)
 8002b9c:	4a39      	ldr	r2, [pc, #228]	@ (8002c84 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x130>)
 8002b9e:	21a5      	movs	r1, #165	@ 0xa5
 8002ba0:	e7e8      	b.n	8002b74 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8002ba2:	f00f f8f1 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002ba6:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8002c98 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x144>
 8002baa:	3004      	adds	r0, #4
 8002bac:	f00f f911 	bl	8011dd2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002bb0:	f8d9 0000 	ldr.w	r0, [r9]
 8002bb4:	b110      	cbz	r0, 8002bbc <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8002bb6:	6803      	ldr	r3, [r0, #0]
 8002bb8:	68db      	ldr	r3, [r3, #12]
 8002bba:	4798      	blx	r3
    if (*currentTrans)
 8002bbc:	f8d9 0000 	ldr.w	r0, [r9]
 8002bc0:	b110      	cbz	r0, 8002bc8 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8002bc2:	6803      	ldr	r3, [r0, #0]
 8002bc4:	681b      	ldr	r3, [r3, #0]
 8002bc6:	4798      	blx	r3
    if (*currentScreen)
 8002bc8:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8002c9c <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x148>
 8002bcc:	f8d8 0000 	ldr.w	r0, [r8]
 8002bd0:	b110      	cbz	r0, 8002bd8 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8002bd2:	6803      	ldr	r3, [r0, #0]
 8002bd4:	695b      	ldr	r3, [r3, #20]
 8002bd6:	4798      	blx	r3
    if (*currentPresenter)
 8002bd8:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002bdc:	b110      	cbz	r0, 8002be4 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8002bde:	6803      	ldr	r3, [r0, #0]
 8002be0:	685b      	ldr	r3, [r3, #4]
 8002be2:	4798      	blx	r3
    if (*currentScreen)
 8002be4:	f8d8 0000 	ldr.w	r0, [r8]
 8002be8:	b110      	cbz	r0, 8002bf0 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8002bea:	6803      	ldr	r3, [r0, #0]
 8002bec:	681b      	ldr	r3, [r3, #0]
 8002bee:	4798      	blx	r3
    if (*currentPresenter)
 8002bf0:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002bf4:	b110      	cbz	r0, 8002bfc <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8002bf6:	6803      	ldr	r3, [r0, #0]
 8002bf8:	689b      	ldr	r3, [r3, #8]
 8002bfa:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002bfc:	68f0      	ldr	r0, [r6, #12]
 8002bfe:	2100      	movs	r1, #0
 8002c00:	f7ff fefe 	bl	8002a00 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8002c04:	f04f 0b00 	mov.w	fp, #0
 8002c08:	4b22      	ldr	r3, [pc, #136]	@ (8002c94 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x140>)
 8002c0a:	f8c0 b004 	str.w	fp, [r0, #4]
 8002c0e:	4604      	mov	r4, r0
 8002c10:	f880 b008 	strb.w	fp, [r0, #8]
 8002c14:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002c16:	68b0      	ldr	r0, [r6, #8]
 8002c18:	6803      	ldr	r3, [r0, #0]
 8002c1a:	4659      	mov	r1, fp
 8002c1c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002c1e:	4798      	blx	r3
 8002c20:	4605      	mov	r5, r0
 8002c22:	f003 f903 	bl	8005e2c <_ZN11Screen3ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002c26:	6870      	ldr	r0, [r6, #4]
 8002c28:	6803      	ldr	r3, [r0, #0]
 8002c2a:	4659      	mov	r1, fp
 8002c2c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002c2e:	4798      	blx	r3
 8002c30:	4629      	mov	r1, r5
 8002c32:	4606      	mov	r6, r0
 8002c34:	f002 fec2 	bl	80059bc <_ZN16Screen3PresenterC1ER11Screen3View>
    model->bind(newPresenter);
 8002c38:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002c3a:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8002c3e:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002c42:	f8c8 5000 	str.w	r5, [r8]
 8002c46:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002c4a:	682b      	ldr	r3, [r5, #0]
 8002c4c:	f8c6 a008 	str.w	sl, [r6, #8]
 8002c50:	4628      	mov	r0, r5
 8002c52:	68db      	ldr	r3, [r3, #12]
 8002c54:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002c56:	4798      	blx	r3
    newPresenter->activate();
 8002c58:	6833      	ldr	r3, [r6, #0]
 8002c5a:	4630      	mov	r0, r6
 8002c5c:	681b      	ldr	r3, [r3, #0]
 8002c5e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002c60:	4621      	mov	r1, r4
 8002c62:	4628      	mov	r0, r5
 8002c64:	f011 fa40 	bl	80140e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002c68:	6823      	ldr	r3, [r4, #0]
 8002c6a:	4620      	mov	r0, r4
 8002c6c:	691b      	ldr	r3, [r3, #16]
 8002c6e:	4798      	blx	r3
    newTransition->invalidate();
 8002c70:	6823      	ldr	r3, [r4, #0]
 8002c72:	695b      	ldr	r3, [r3, #20]
 8002c74:	4620      	mov	r0, r4
}
 8002c76:	b001      	add	sp, #4
 8002c78:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002c7c:	4718      	bx	r3
 8002c7e:	bf00      	nop
 8002c80:	08026dc7 	.word	0x08026dc7
 8002c84:	080270b4 	.word	0x080270b4
 8002c88:	08026f27 	.word	0x08026f27
 8002c8c:	08026f6e 	.word	0x08026f6e
 8002c90:	08027011 	.word	0x08027011
 8002c94:	08027dd4 	.word	0x08027dd4
 8002c98:	20015334 	.word	0x20015334
 8002c9c:	20015330 	.word	0x20015330

08002ca0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
{
 8002ca0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002ca4:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002ca8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002caa:	68b0      	ldr	r0, [r6, #8]
 8002cac:	6803      	ldr	r3, [r0, #0]
 8002cae:	6a1b      	ldr	r3, [r3, #32]
 8002cb0:	4798      	blx	r3
 8002cb2:	f642 43ab 	movw	r3, #11435	@ 0x2cab
 8002cb6:	4298      	cmp	r0, r3
 8002cb8:	d805      	bhi.n	8002cc6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x26>
 8002cba:	4b44      	ldr	r3, [pc, #272]	@ (8002dcc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
 8002cbc:	4a44      	ldr	r2, [pc, #272]	@ (8002dd0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002cbe:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002cc0:	4844      	ldr	r0, [pc, #272]	@ (8002dd4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002cc2:	f022 fd6f 	bl	80257a4 <__assert_func>
 8002cc6:	6870      	ldr	r0, [r6, #4]
 8002cc8:	6803      	ldr	r3, [r0, #0]
 8002cca:	6a1b      	ldr	r3, [r3, #32]
 8002ccc:	4798      	blx	r3
 8002cce:	280f      	cmp	r0, #15
 8002cd0:	d803      	bhi.n	8002cda <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x3a>
 8002cd2:	4b41      	ldr	r3, [pc, #260]	@ (8002dd8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002cd4:	4a3e      	ldr	r2, [pc, #248]	@ (8002dd0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002cd6:	21a4      	movs	r1, #164	@ 0xa4
 8002cd8:	e7f2      	b.n	8002cc0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002cda:	68f0      	ldr	r0, [r6, #12]
 8002cdc:	6803      	ldr	r3, [r0, #0]
 8002cde:	6a1b      	ldr	r3, [r3, #32]
 8002ce0:	4798      	blx	r3
 8002ce2:	280b      	cmp	r0, #11
 8002ce4:	d803      	bhi.n	8002cee <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4e>
 8002ce6:	4b3d      	ldr	r3, [pc, #244]	@ (8002ddc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 8002ce8:	4a39      	ldr	r2, [pc, #228]	@ (8002dd0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002cea:	21a5      	movs	r1, #165	@ 0xa5
 8002cec:	e7e8      	b.n	8002cc0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8002cee:	f00f f84b 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002cf2:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8002de4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>
 8002cf6:	3004      	adds	r0, #4
 8002cf8:	f00f f86b 	bl	8011dd2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002cfc:	f8d9 0000 	ldr.w	r0, [r9]
 8002d00:	b110      	cbz	r0, 8002d08 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8002d02:	6803      	ldr	r3, [r0, #0]
 8002d04:	68db      	ldr	r3, [r3, #12]
 8002d06:	4798      	blx	r3
    if (*currentTrans)
 8002d08:	f8d9 0000 	ldr.w	r0, [r9]
 8002d0c:	b110      	cbz	r0, 8002d14 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8002d0e:	6803      	ldr	r3, [r0, #0]
 8002d10:	681b      	ldr	r3, [r3, #0]
 8002d12:	4798      	blx	r3
    if (*currentScreen)
 8002d14:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8002de8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
 8002d18:	f8d8 0000 	ldr.w	r0, [r8]
 8002d1c:	b110      	cbz	r0, 8002d24 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8002d1e:	6803      	ldr	r3, [r0, #0]
 8002d20:	695b      	ldr	r3, [r3, #20]
 8002d22:	4798      	blx	r3
    if (*currentPresenter)
 8002d24:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002d28:	b110      	cbz	r0, 8002d30 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8002d2a:	6803      	ldr	r3, [r0, #0]
 8002d2c:	685b      	ldr	r3, [r3, #4]
 8002d2e:	4798      	blx	r3
    if (*currentScreen)
 8002d30:	f8d8 0000 	ldr.w	r0, [r8]
 8002d34:	b110      	cbz	r0, 8002d3c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8002d36:	6803      	ldr	r3, [r0, #0]
 8002d38:	681b      	ldr	r3, [r3, #0]
 8002d3a:	4798      	blx	r3
    if (*currentPresenter)
 8002d3c:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002d40:	b110      	cbz	r0, 8002d48 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8002d42:	6803      	ldr	r3, [r0, #0]
 8002d44:	689b      	ldr	r3, [r3, #8]
 8002d46:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002d48:	68f0      	ldr	r0, [r6, #12]
 8002d4a:	2100      	movs	r1, #0
 8002d4c:	f7ff fe58 	bl	8002a00 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8002d50:	f04f 0b00 	mov.w	fp, #0
 8002d54:	4b22      	ldr	r3, [pc, #136]	@ (8002de0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 8002d56:	f8c0 b004 	str.w	fp, [r0, #4]
 8002d5a:	4604      	mov	r4, r0
 8002d5c:	f880 b008 	strb.w	fp, [r0, #8]
 8002d60:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002d62:	68b0      	ldr	r0, [r6, #8]
 8002d64:	6803      	ldr	r3, [r0, #0]
 8002d66:	4659      	mov	r1, fp
 8002d68:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002d6a:	4798      	blx	r3
 8002d6c:	4605      	mov	r5, r0
 8002d6e:	f002 f9fb 	bl	8005168 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002d72:	6870      	ldr	r0, [r6, #4]
 8002d74:	6803      	ldr	r3, [r0, #0]
 8002d76:	4659      	mov	r1, fp
 8002d78:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002d7a:	4798      	blx	r3
 8002d7c:	4629      	mov	r1, r5
 8002d7e:	4606      	mov	r6, r0
 8002d80:	f001 ff66 	bl	8004c50 <_ZN16Screen1PresenterC1ER11Screen1View>
    model->bind(newPresenter);
 8002d84:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002d86:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8002d8a:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002d8e:	f8c8 5000 	str.w	r5, [r8]
 8002d92:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002d96:	682b      	ldr	r3, [r5, #0]
 8002d98:	f8c6 a008 	str.w	sl, [r6, #8]
 8002d9c:	4628      	mov	r0, r5
 8002d9e:	68db      	ldr	r3, [r3, #12]
 8002da0:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002da2:	4798      	blx	r3
    newPresenter->activate();
 8002da4:	6833      	ldr	r3, [r6, #0]
 8002da6:	4630      	mov	r0, r6
 8002da8:	681b      	ldr	r3, [r3, #0]
 8002daa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002dac:	4621      	mov	r1, r4
 8002dae:	4628      	mov	r0, r5
 8002db0:	f011 f99a 	bl	80140e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002db4:	6823      	ldr	r3, [r4, #0]
 8002db6:	4620      	mov	r0, r4
 8002db8:	691b      	ldr	r3, [r3, #16]
 8002dba:	4798      	blx	r3
    newTransition->invalidate();
 8002dbc:	6823      	ldr	r3, [r4, #0]
 8002dbe:	695b      	ldr	r3, [r3, #20]
 8002dc0:	4620      	mov	r0, r4
}
 8002dc2:	b001      	add	sp, #4
 8002dc4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002dc8:	4718      	bx	r3
 8002dca:	bf00      	nop
 8002dcc:	08026dc7 	.word	0x08026dc7
 8002dd0:	08027186 	.word	0x08027186
 8002dd4:	08026f27 	.word	0x08026f27
 8002dd8:	08026f6e 	.word	0x08026f6e
 8002ddc:	08027011 	.word	0x08027011
 8002de0:	08027dd4 	.word	0x08027dd4
 8002de4:	20015334 	.word	0x20015334
 8002de8:	20015330 	.word	0x20015330

08002dec <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv>:
{
 8002dec:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<ScreenWaitView, ScreenWaitPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002df0:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002df4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002df6:	68b0      	ldr	r0, [r6, #8]
 8002df8:	6803      	ldr	r3, [r0, #0]
 8002dfa:	6a1b      	ldr	r3, [r3, #32]
 8002dfc:	4798      	blx	r3
 8002dfe:	f5b0 7fcc 	cmp.w	r0, #408	@ 0x198
 8002e02:	d205      	bcs.n	8002e10 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x24>
 8002e04:	4b43      	ldr	r3, [pc, #268]	@ (8002f14 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x128>)
 8002e06:	4a44      	ldr	r2, [pc, #272]	@ (8002f18 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x12c>)
 8002e08:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002e0a:	4844      	ldr	r0, [pc, #272]	@ (8002f1c <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x130>)
 8002e0c:	f022 fcca 	bl	80257a4 <__assert_func>
 8002e10:	6870      	ldr	r0, [r6, #4]
 8002e12:	6803      	ldr	r3, [r0, #0]
 8002e14:	6a1b      	ldr	r3, [r3, #32]
 8002e16:	4798      	blx	r3
 8002e18:	280f      	cmp	r0, #15
 8002e1a:	d803      	bhi.n	8002e24 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x38>
 8002e1c:	4b40      	ldr	r3, [pc, #256]	@ (8002f20 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x134>)
 8002e1e:	4a3e      	ldr	r2, [pc, #248]	@ (8002f18 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x12c>)
 8002e20:	21a4      	movs	r1, #164	@ 0xa4
 8002e22:	e7f2      	b.n	8002e0a <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002e24:	68f0      	ldr	r0, [r6, #12]
 8002e26:	6803      	ldr	r3, [r0, #0]
 8002e28:	6a1b      	ldr	r3, [r3, #32]
 8002e2a:	4798      	blx	r3
 8002e2c:	280b      	cmp	r0, #11
 8002e2e:	d803      	bhi.n	8002e38 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x4c>
 8002e30:	4b3c      	ldr	r3, [pc, #240]	@ (8002f24 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x138>)
 8002e32:	4a39      	ldr	r2, [pc, #228]	@ (8002f18 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x12c>)
 8002e34:	21a5      	movs	r1, #165	@ 0xa5
 8002e36:	e7e8      	b.n	8002e0a <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8002e38:	f00e ffa6 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002e3c:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8002f2c <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x140>
 8002e40:	3004      	adds	r0, #4
 8002e42:	f00e ffc6 	bl	8011dd2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002e46:	f8d9 0000 	ldr.w	r0, [r9]
 8002e4a:	b110      	cbz	r0, 8002e52 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8002e4c:	6803      	ldr	r3, [r0, #0]
 8002e4e:	68db      	ldr	r3, [r3, #12]
 8002e50:	4798      	blx	r3
    if (*currentTrans)
 8002e52:	f8d9 0000 	ldr.w	r0, [r9]
 8002e56:	b110      	cbz	r0, 8002e5e <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8002e58:	6803      	ldr	r3, [r0, #0]
 8002e5a:	681b      	ldr	r3, [r3, #0]
 8002e5c:	4798      	blx	r3
    if (*currentScreen)
 8002e5e:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8002f30 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x144>
 8002e62:	f8d8 0000 	ldr.w	r0, [r8]
 8002e66:	b110      	cbz	r0, 8002e6e <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002e68:	6803      	ldr	r3, [r0, #0]
 8002e6a:	695b      	ldr	r3, [r3, #20]
 8002e6c:	4798      	blx	r3
    if (*currentPresenter)
 8002e6e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002e72:	b110      	cbz	r0, 8002e7a <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002e74:	6803      	ldr	r3, [r0, #0]
 8002e76:	685b      	ldr	r3, [r3, #4]
 8002e78:	4798      	blx	r3
    if (*currentScreen)
 8002e7a:	f8d8 0000 	ldr.w	r0, [r8]
 8002e7e:	b110      	cbz	r0, 8002e86 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002e80:	6803      	ldr	r3, [r0, #0]
 8002e82:	681b      	ldr	r3, [r3, #0]
 8002e84:	4798      	blx	r3
    if (*currentPresenter)
 8002e86:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002e8a:	b110      	cbz	r0, 8002e92 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002e8c:	6803      	ldr	r3, [r0, #0]
 8002e8e:	689b      	ldr	r3, [r3, #8]
 8002e90:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002e92:	68f0      	ldr	r0, [r6, #12]
 8002e94:	2100      	movs	r1, #0
 8002e96:	f7ff fdb3 	bl	8002a00 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8002e9a:	f04f 0b00 	mov.w	fp, #0
 8002e9e:	4b22      	ldr	r3, [pc, #136]	@ (8002f28 <_ZN23FrontendApplicationBase36gotoScreenWaitScreenNoTransitionImplEv+0x13c>)
 8002ea0:	f8c0 b004 	str.w	fp, [r0, #4]
 8002ea4:	4604      	mov	r4, r0
 8002ea6:	f880 b008 	strb.w	fp, [r0, #8]
 8002eaa:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002eac:	68b0      	ldr	r0, [r6, #8]
 8002eae:	6803      	ldr	r3, [r0, #0]
 8002eb0:	4659      	mov	r1, fp
 8002eb2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002eb4:	4798      	blx	r3
 8002eb6:	4605      	mov	r5, r0
 8002eb8:	f004 faf6 	bl	80074a8 <_ZN14ScreenWaitViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002ebc:	6870      	ldr	r0, [r6, #4]
 8002ebe:	6803      	ldr	r3, [r0, #0]
 8002ec0:	4659      	mov	r1, fp
 8002ec2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002ec4:	4798      	blx	r3
 8002ec6:	4629      	mov	r1, r5
 8002ec8:	4606      	mov	r6, r0
 8002eca:	f004 facb 	bl	8007464 <_ZN19ScreenWaitPresenterC1ER14ScreenWaitView>
    model->bind(newPresenter);
 8002ece:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002ed0:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8002ed4:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002ed8:	f8c8 5000 	str.w	r5, [r8]
 8002edc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002ee0:	682b      	ldr	r3, [r5, #0]
 8002ee2:	f8c6 a008 	str.w	sl, [r6, #8]
 8002ee6:	4628      	mov	r0, r5
 8002ee8:	68db      	ldr	r3, [r3, #12]
 8002eea:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002eec:	4798      	blx	r3
    newPresenter->activate();
 8002eee:	6833      	ldr	r3, [r6, #0]
 8002ef0:	4630      	mov	r0, r6
 8002ef2:	681b      	ldr	r3, [r3, #0]
 8002ef4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002ef6:	4621      	mov	r1, r4
 8002ef8:	4628      	mov	r0, r5
 8002efa:	f011 f8f5 	bl	80140e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002efe:	6823      	ldr	r3, [r4, #0]
 8002f00:	4620      	mov	r0, r4
 8002f02:	691b      	ldr	r3, [r3, #16]
 8002f04:	4798      	blx	r3
    newTransition->invalidate();
 8002f06:	6823      	ldr	r3, [r4, #0]
 8002f08:	695b      	ldr	r3, [r3, #20]
 8002f0a:	4620      	mov	r0, r4
}
 8002f0c:	b001      	add	sp, #4
 8002f0e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002f12:	4718      	bx	r3
 8002f14:	08026dc7 	.word	0x08026dc7
 8002f18:	08027258 	.word	0x08027258
 8002f1c:	08026f27 	.word	0x08026f27
 8002f20:	08026f6e 	.word	0x08026f6e
 8002f24:	08027011 	.word	0x08027011
 8002f28:	08027dd4 	.word	0x08027dd4
 8002f2c:	20015334 	.word	0x20015334
 8002f30:	20015330 	.word	0x20015330

08002f34 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv>:
{
 8002f34:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002f38:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002f3c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002f3e:	68b0      	ldr	r0, [r6, #8]
 8002f40:	6803      	ldr	r3, [r0, #0]
 8002f42:	6a1b      	ldr	r3, [r3, #32]
 8002f44:	4798      	blx	r3
 8002f46:	f5b0 7f26 	cmp.w	r0, #664	@ 0x298
 8002f4a:	d205      	bcs.n	8002f58 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x24>
 8002f4c:	4b43      	ldr	r3, [pc, #268]	@ (800305c <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x128>)
 8002f4e:	4a44      	ldr	r2, [pc, #272]	@ (8003060 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x12c>)
 8002f50:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002f52:	4844      	ldr	r0, [pc, #272]	@ (8003064 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x130>)
 8002f54:	f022 fc26 	bl	80257a4 <__assert_func>
 8002f58:	6870      	ldr	r0, [r6, #4]
 8002f5a:	6803      	ldr	r3, [r0, #0]
 8002f5c:	6a1b      	ldr	r3, [r3, #32]
 8002f5e:	4798      	blx	r3
 8002f60:	280f      	cmp	r0, #15
 8002f62:	d803      	bhi.n	8002f6c <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x38>
 8002f64:	4b40      	ldr	r3, [pc, #256]	@ (8003068 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x134>)
 8002f66:	4a3e      	ldr	r2, [pc, #248]	@ (8003060 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x12c>)
 8002f68:	21a4      	movs	r1, #164	@ 0xa4
 8002f6a:	e7f2      	b.n	8002f52 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002f6c:	68f0      	ldr	r0, [r6, #12]
 8002f6e:	6803      	ldr	r3, [r0, #0]
 8002f70:	6a1b      	ldr	r3, [r3, #32]
 8002f72:	4798      	blx	r3
 8002f74:	280b      	cmp	r0, #11
 8002f76:	d803      	bhi.n	8002f80 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x4c>
 8002f78:	4b3c      	ldr	r3, [pc, #240]	@ (800306c <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x138>)
 8002f7a:	4a39      	ldr	r2, [pc, #228]	@ (8003060 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x12c>)
 8002f7c:	21a5      	movs	r1, #165	@ 0xa5
 8002f7e:	e7e8      	b.n	8002f52 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8002f80:	f00e ff02 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002f84:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8003074 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x140>
 8002f88:	3004      	adds	r0, #4
 8002f8a:	f00e ff22 	bl	8011dd2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002f8e:	f8d9 0000 	ldr.w	r0, [r9]
 8002f92:	b110      	cbz	r0, 8002f9a <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8002f94:	6803      	ldr	r3, [r0, #0]
 8002f96:	68db      	ldr	r3, [r3, #12]
 8002f98:	4798      	blx	r3
    if (*currentTrans)
 8002f9a:	f8d9 0000 	ldr.w	r0, [r9]
 8002f9e:	b110      	cbz	r0, 8002fa6 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8002fa0:	6803      	ldr	r3, [r0, #0]
 8002fa2:	681b      	ldr	r3, [r3, #0]
 8002fa4:	4798      	blx	r3
    if (*currentScreen)
 8002fa6:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8003078 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x144>
 8002faa:	f8d8 0000 	ldr.w	r0, [r8]
 8002fae:	b110      	cbz	r0, 8002fb6 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002fb0:	6803      	ldr	r3, [r0, #0]
 8002fb2:	695b      	ldr	r3, [r3, #20]
 8002fb4:	4798      	blx	r3
    if (*currentPresenter)
 8002fb6:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002fba:	b110      	cbz	r0, 8002fc2 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002fbc:	6803      	ldr	r3, [r0, #0]
 8002fbe:	685b      	ldr	r3, [r3, #4]
 8002fc0:	4798      	blx	r3
    if (*currentScreen)
 8002fc2:	f8d8 0000 	ldr.w	r0, [r8]
 8002fc6:	b110      	cbz	r0, 8002fce <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002fc8:	6803      	ldr	r3, [r0, #0]
 8002fca:	681b      	ldr	r3, [r3, #0]
 8002fcc:	4798      	blx	r3
    if (*currentPresenter)
 8002fce:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002fd2:	b110      	cbz	r0, 8002fda <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002fd4:	6803      	ldr	r3, [r0, #0]
 8002fd6:	689b      	ldr	r3, [r3, #8]
 8002fd8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002fda:	68f0      	ldr	r0, [r6, #12]
 8002fdc:	2100      	movs	r1, #0
 8002fde:	f7ff fd0f 	bl	8002a00 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8002fe2:	f04f 0b00 	mov.w	fp, #0
 8002fe6:	4b22      	ldr	r3, [pc, #136]	@ (8003070 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x13c>)
 8002fe8:	f8c0 b004 	str.w	fp, [r0, #4]
 8002fec:	4604      	mov	r4, r0
 8002fee:	f880 b008 	strb.w	fp, [r0, #8]
 8002ff2:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002ff4:	68b0      	ldr	r0, [r6, #8]
 8002ff6:	6803      	ldr	r3, [r0, #0]
 8002ff8:	4659      	mov	r1, fp
 8002ffa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002ffc:	4798      	blx	r3
 8002ffe:	4605      	mov	r5, r0
 8003000:	f002 fc84 	bl	800590c <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003004:	6870      	ldr	r0, [r6, #4]
 8003006:	6803      	ldr	r3, [r0, #0]
 8003008:	4659      	mov	r1, fp
 800300a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800300c:	4798      	blx	r3
 800300e:	4629      	mov	r1, r5
 8003010:	4606      	mov	r6, r0
 8003012:	f002 fc31 	bl	8005878 <_ZN16Screen2PresenterC1ER11Screen2View>
    model->bind(newPresenter);
 8003016:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003018:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 800301c:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003020:	f8c8 5000 	str.w	r5, [r8]
 8003024:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003028:	682b      	ldr	r3, [r5, #0]
 800302a:	f8c6 a008 	str.w	sl, [r6, #8]
 800302e:	4628      	mov	r0, r5
 8003030:	68db      	ldr	r3, [r3, #12]
 8003032:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8003034:	4798      	blx	r3
    newPresenter->activate();
 8003036:	6833      	ldr	r3, [r6, #0]
 8003038:	4630      	mov	r0, r6
 800303a:	681b      	ldr	r3, [r3, #0]
 800303c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800303e:	4621      	mov	r1, r4
 8003040:	4628      	mov	r0, r5
 8003042:	f011 f851 	bl	80140e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003046:	6823      	ldr	r3, [r4, #0]
 8003048:	4620      	mov	r0, r4
 800304a:	691b      	ldr	r3, [r3, #16]
 800304c:	4798      	blx	r3
    newTransition->invalidate();
 800304e:	6823      	ldr	r3, [r4, #0]
 8003050:	695b      	ldr	r3, [r3, #20]
 8003052:	4620      	mov	r0, r4
}
 8003054:	b001      	add	sp, #4
 8003056:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800305a:	4718      	bx	r3
 800305c:	08026dc7 	.word	0x08026dc7
 8003060:	08027330 	.word	0x08027330
 8003064:	08026f27 	.word	0x08026f27
 8003068:	08026f6e 	.word	0x08026f6e
 800306c:	08027011 	.word	0x08027011
 8003070:	08027dd4 	.word	0x08027dd4
 8003074:	20015334 	.word	0x20015334
 8003078:	20015330 	.word	0x20015330

0800307c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 800307c:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 800307e:	4770      	bx	lr

08003080 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8003080:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8003082:	4770      	bx	lr

08003084 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8003084:	4770      	bx	lr

08003086 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
    offset |= dataOffset[1] << 16;

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8003086:	888a      	ldrh	r2, [r1, #4]
    uint32_t offset = dataOffset[0];
 8003088:	880b      	ldrh	r3, [r1, #0]
{
 800308a:	b510      	push	{r4, lr}
    const uint8_t* pixels = table[glyph->unicode / 2048];
 800308c:	0ad2      	lsrs	r2, r2, #11
    offset |= dataOffset[1] << 16;
 800308e:	884c      	ldrh	r4, [r1, #2]
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8003090:	69c1      	ldr	r1, [r0, #28]
    uint32_t offset = dataOffset[0];
 8003092:	b29b      	uxth	r3, r3
    return pixels + offset;
 8003094:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
    offset |= dataOffset[1] << 16;
 8003098:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
}
 800309c:	4418      	add	r0, r3
 800309e:	bd10      	pop	{r4, pc}

080030a0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80030a0:	b510      	push	{r4, lr}
 80030a2:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 80030a4:	b1ba      	cbz	r2, 80030d6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80030a6:	7b10      	ldrb	r0, [r2, #12]
 80030a8:	b168      	cbz	r0, 80030c6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80030aa:	7b53      	ldrb	r3, [r2, #13]
 80030ac:	7ad2      	ldrb	r2, [r2, #11]
 80030ae:	021b      	lsls	r3, r3, #8
 80030b0:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80030b4:	431a      	orrs	r2, r3
 80030b6:	6a23      	ldr	r3, [r4, #32]
 80030b8:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 80030bc:	881a      	ldrh	r2, [r3, #0]
 80030be:	428a      	cmp	r2, r1
 80030c0:	d102      	bne.n	80030c8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80030c2:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 80030c6:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80030c8:	d805      	bhi.n	80030d6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80030ca:	3801      	subs	r0, #1
 80030cc:	b280      	uxth	r0, r0
 80030ce:	3304      	adds	r3, #4
 80030d0:	2800      	cmp	r0, #0
 80030d2:	d1f3      	bne.n	80030bc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80030d4:	e7f7      	b.n	80030c6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80030d6:	2000      	movs	r0, #0
 80030d8:	e7f5      	b.n	80030c6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080030da <_ZN8touchgfx13GeneratedFontD0Ev>:
 80030da:	b510      	push	{r4, lr}
 80030dc:	212c      	movs	r1, #44	@ 0x2c
 80030de:	4604      	mov	r4, r0
 80030e0:	f021 fc23 	bl	802492a <_ZdlPvj>
 80030e4:	4620      	mov	r0, r4
 80030e6:	bd10      	pop	{r4, pc}

080030e8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80030e8:	b530      	push	{r4, r5, lr}
 80030ea:	b08b      	sub	sp, #44	@ 0x2c
 80030ec:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80030ee:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 80030f2:	9508      	str	r5, [sp, #32]
 80030f4:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 80030f8:	9507      	str	r5, [sp, #28]
 80030fa:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 80030fe:	9506      	str	r5, [sp, #24]
 8003100:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 8003104:	9505      	str	r5, [sp, #20]
 8003106:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800310a:	9504      	str	r5, [sp, #16]
 800310c:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8003110:	9503      	str	r5, [sp, #12]
 8003112:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 8003116:	9502      	str	r5, [sp, #8]
 8003118:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 800311c:	9501      	str	r5, [sp, #4]
 800311e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8003122:	9500      	str	r5, [sp, #0]
 8003124:	f010 fc3a 	bl	801399c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8003128:	4b06      	ldr	r3, [pc, #24]	@ (8003144 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 800312a:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 800312c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 800312e:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8003130:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8003132:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8003134:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8003136:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 8003138:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 800313a:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 800313c:	4620      	mov	r0, r4
 800313e:	b00b      	add	sp, #44	@ 0x2c
 8003140:	bd30      	pop	{r4, r5, pc}
 8003142:	bf00      	nop
 8003144:	08027df8 	.word	0x08027df8

08003148 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8003148:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800314a:	4770      	bx	lr

0800314c <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800314c:	4770      	bx	lr

0800314e <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 800314e:	4770      	bx	lr

08003150 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8003150:	4770      	bx	lr

08003152 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8003152:	4770      	bx	lr

08003154 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8003154:	4770      	bx	lr

08003156 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8003156:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8003158:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
 800315a:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800315c:	466d      	mov	r5, sp
        rect.width = width;
 800315e:	8101      	strh	r1, [r0, #8]
 8003160:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8003164:	4601      	mov	r1, r0
    virtual void setWidth(int16_t width)
 8003166:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8003168:	4628      	mov	r0, r5
 800316a:	4798      	blx	r3
 800316c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003170:	343c      	adds	r4, #60	@ 0x3c
 8003172:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8003176:	b005      	add	sp, #20
 8003178:	bd30      	pop	{r4, r5, pc}

0800317a <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800317a:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 800317c:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
 800317e:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8003180:	466d      	mov	r5, sp
        rect.height = height;
 8003182:	8141      	strh	r1, [r0, #10]
 8003184:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8003188:	4601      	mov	r1, r0
    virtual void setHeight(int16_t height)
 800318a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 800318c:	4628      	mov	r0, r5
 800318e:	4798      	blx	r3
 8003190:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003194:	343c      	adds	r4, #60	@ 0x3c
 8003196:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800319a:	b005      	add	sp, #20
 800319c:	bd30      	pop	{r4, r5, pc}

0800319e <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800319e:	2200      	movs	r2, #0
 80031a0:	8002      	strh	r2, [r0, #0]
 80031a2:	8042      	strh	r2, [r0, #2]
 80031a4:	8082      	strh	r2, [r0, #4]
 80031a6:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80031a8:	4770      	bx	lr

080031aa <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80031aa:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
 80031ae:	4770      	bx	lr

080031b0 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80031b0:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80031b2:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80031b4:	4604      	mov	r4, r0
        setX(x);
 80031b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80031b8:	4615      	mov	r5, r2
        setX(x);
 80031ba:	4798      	blx	r3
        setBaselineY(baselineY);
 80031bc:	6823      	ldr	r3, [r4, #0]
 80031be:	4629      	mov	r1, r5
 80031c0:	4620      	mov	r0, r4
 80031c2:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
    }
 80031c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80031c8:	4718      	bx	r3

080031ca <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80031ca:	2000      	movs	r0, #0
 80031cc:	4770      	bx	lr

080031ce <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80031ce:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 80031d0:	4770      	bx	lr

080031d2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 80031d2:	4770      	bx	lr

080031d4 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80031d4:	4770      	bx	lr

080031d6 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80031d6:	4770      	bx	lr

080031d8 <_ZN15Screen1ViewBaseD1Ev>:
}

Screen1ViewBase::~Screen1ViewBase()
{

}
 80031d8:	4770      	bx	lr

080031da <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{

}
 80031da:	4770      	bx	lr

080031dc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed() const
    {
        return pressed;
 80031dc:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 80031e0:	b14b      	cbz	r3, 80031f6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 80031e2:	f100 026c 	add.w	r2, r0, #108	@ 0x6c
 80031e6:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80031e8:	65c2      	str	r2, [r0, #92]	@ 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80031ea:	b13b      	cbz	r3, 80031fc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 80031ec:	f100 0374 	add.w	r3, r0, #116	@ 0x74
 80031f0:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 80031f2:	6603      	str	r3, [r0, #96]	@ 0x60
        T::handlePressedUpdated();
    }
 80031f4:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 80031f6:	f100 0268 	add.w	r2, r0, #104	@ 0x68
 80031fa:	e7f4      	b.n	80031e6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80031fc:	f100 0370 	add.w	r3, r0, #112	@ 0x70
 8003200:	e7f6      	b.n	80031f0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

08003202 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003202:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003204:	68c2      	ldr	r2, [r0, #12]
 8003206:	6844      	ldr	r4, [r0, #4]
 8003208:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800320a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800320c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003210:	07d2      	lsls	r2, r2, #31
 8003212:	bf48      	it	mi
 8003214:	5962      	ldrmi	r2, [r4, r5]
 8003216:	689b      	ldr	r3, [r3, #8]
    }
 8003218:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800321a:	bf48      	it	mi
 800321c:	58d3      	ldrmi	r3, [r2, r3]
 800321e:	4718      	bx	r3

08003220 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8003220:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8003222:	6840      	ldr	r0, [r0, #4]
 8003224:	b130      	cbz	r0, 8003234 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8003226:	689a      	ldr	r2, [r3, #8]
 8003228:	b91a      	cbnz	r2, 8003232 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 800322a:	68d8      	ldr	r0, [r3, #12]
 800322c:	f000 0001 	and.w	r0, r0, #1
 8003230:	4770      	bx	lr
 8003232:	2001      	movs	r0, #1
    }
 8003234:	4770      	bx	lr

08003236 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003236:	f890 302d 	ldrb.w	r3, [r0, #45]	@ 0x2d
 800323a:	f880 305a 	strb.w	r3, [r0, #90]	@ 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 800323e:	4770      	bx	lr

08003240 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8003240:	b510      	push	{r4, lr}
 8003242:	214c      	movs	r1, #76	@ 0x4c
 8003244:	4604      	mov	r4, r0
 8003246:	f021 fb70 	bl	802492a <_ZdlPvj>
 800324a:	4620      	mov	r0, r4
 800324c:	bd10      	pop	{r4, pc}

0800324e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 800324e:	b510      	push	{r4, lr}
 8003250:	2178      	movs	r1, #120	@ 0x78
 8003252:	4604      	mov	r4, r0
 8003254:	f021 fb69 	bl	802492a <_ZdlPvj>
 8003258:	4620      	mov	r0, r4
 800325a:	bd10      	pop	{r4, pc}

0800325c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800325c:	b510      	push	{r4, lr}
 800325e:	2110      	movs	r1, #16
 8003260:	4604      	mov	r4, r0
 8003262:	f021 fb62 	bl	802492a <_ZdlPvj>
 8003266:	4620      	mov	r0, r4
 8003268:	bd10      	pop	{r4, pc}

0800326a <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 800326a:	b510      	push	{r4, lr}
}
 800326c:	f44f 7135 	mov.w	r1, #724	@ 0x2d4
Screen1ViewBase::~Screen1ViewBase()
 8003270:	4604      	mov	r4, r0
}
 8003272:	f021 fb5a 	bl	802492a <_ZdlPvj>
 8003276:	4620      	mov	r0, r4
 8003278:	bd10      	pop	{r4, pc}

0800327a <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 800327a:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 800327c:	f7ff f97a 	bl	8002574 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8003280:	bd08      	pop	{r3, pc}

08003282 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8003282:	b510      	push	{r4, lr}
 8003284:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8003286:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8003288:	b150      	cbz	r0, 80032a0 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 800328a:	6803      	ldr	r3, [r0, #0]
 800328c:	68db      	ldr	r3, [r3, #12]
 800328e:	4798      	blx	r3
 8003290:	b130      	cbz	r0, 80032a0 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8003292:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8003294:	6803      	ldr	r3, [r0, #0]
 8003296:	4621      	mov	r1, r4
 8003298:	689b      	ldr	r3, [r3, #8]
        }
    }
 800329a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 800329e:	4718      	bx	r3
    }
 80032a0:	bd10      	pop	{r4, pc}

080032a2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 80032a2:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 80032a4:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 80032a6:	f890 602c 	ldrb.w	r6, [r0, #44]	@ 0x2c
 80032aa:	4604      	mov	r4, r0
 80032ac:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 80032ae:	b90b      	cbnz	r3, 80032b4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x12>
 80032b0:	b116      	cbz	r6, 80032b8 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
        {
            executeAction();
        }
    }
 80032b2:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 80032b4:	2e00      	cmp	r6, #0
 80032b6:	d0fc      	beq.n	80032b2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 80032b8:	fab3 f383 	clz	r3, r3
 80032bc:	095b      	lsrs	r3, r3, #5
 80032be:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
        handlePressedUpdated();
 80032c2:	6823      	ldr	r3, [r4, #0]
 80032c4:	4620      	mov	r0, r4
 80032c6:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80032ca:	4798      	blx	r3
            invalidate();
 80032cc:	6823      	ldr	r3, [r4, #0]
 80032ce:	4620      	mov	r0, r4
 80032d0:	695b      	ldr	r3, [r3, #20]
 80032d2:	4798      	blx	r3
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 80032d4:	2e00      	cmp	r6, #0
 80032d6:	d0ec      	beq.n	80032b2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
 80032d8:	792b      	ldrb	r3, [r5, #4]
 80032da:	2b01      	cmp	r3, #1
 80032dc:	d1e9      	bne.n	80032b2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 80032de:	6823      	ldr	r3, [r4, #0]
 80032e0:	4620      	mov	r0, r4
 80032e2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    }
 80032e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 80032ea:	4718      	bx	r3

080032ec <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80032ec:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80032ee:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80032f0:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80032f2:	4b12      	ldr	r3, [pc, #72]	@ (800333c <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80032f4:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80032f6:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80032f8:	b28d      	uxth	r5, r1
 80032fa:	b92b      	cbnz	r3, 8003308 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80032fc:	4b10      	ldr	r3, [pc, #64]	@ (8003340 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80032fe:	4a11      	ldr	r2, [pc, #68]	@ (8003344 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003300:	216c      	movs	r1, #108	@ 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003302:	4811      	ldr	r0, [pc, #68]	@ (8003348 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8003304:	f022 fa4e 	bl	80257a4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003308:	4910      	ldr	r1, [pc, #64]	@ (800334c <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800330a:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800330c:	8809      	ldrh	r1, [r1, #0]
 800330e:	4291      	cmp	r1, r2
 8003310:	d803      	bhi.n	800331a <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8003312:	4b0f      	ldr	r3, [pc, #60]	@ (8003350 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8003314:	4a0b      	ldr	r2, [pc, #44]	@ (8003344 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003316:	216d      	movs	r1, #109	@ 0x6d
 8003318:	e7f3      	b.n	8003302 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 800331a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800331e:	4b0d      	ldr	r3, [pc, #52]	@ (8003354 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8003320:	681b      	ldr	r3, [r3, #0]
 8003322:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8003326:	6803      	ldr	r3, [r0, #0]
 8003328:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800332a:	4798      	blx	r3
 800332c:	1a29      	subs	r1, r5, r0
 800332e:	4633      	mov	r3, r6
 8003330:	4620      	mov	r0, r4
 8003332:	b209      	sxth	r1, r1
    }
 8003334:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003338:	4718      	bx	r3
 800333a:	bf00      	nop
 800333c:	20015344 	.word	0x20015344
 8003340:	08027402 	.word	0x08027402
 8003344:	08027444 	.word	0x08027444
 8003348:	0802747f 	.word	0x0802747f
 800334c:	20015348 	.word	0x20015348
 8003350:	080274c6 	.word	0x080274c6
 8003354:	2001534c 	.word	0x2001534c

08003358 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 8003358:	b538      	push	{r3, r4, r5, lr}
    if (&src == &flexButton1)
 800335a:	f100 0398 	add.w	r3, r0, #152	@ 0x98
 800335e:	4299      	cmp	r1, r3
{
 8003360:	4604      	mov	r4, r0
 8003362:	460d      	mov	r5, r1
    if (&src == &flexButton1)
 8003364:	d103      	bne.n	800336e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~Screen1ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003366:	f00e fd0f 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When flexButton1 clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
 800336a:	f7ff faf9 	bl	8002960 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
    }
    if (&src == &flexButton2)
 800336e:	f504 73c4 	add.w	r3, r4, #392	@ 0x188
 8003372:	429d      	cmp	r5, r3
 8003374:	d103      	bne.n	800337e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
 8003376:	f00e fd07 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When flexButton2 clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
 800337a:	f7ff faf1 	bl	8002960 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
    }
    if (&src == &flexButton3)
 800337e:	f504 7400 	add.w	r4, r4, #512	@ 0x200
 8003382:	42a5      	cmp	r5, r4
 8003384:	d105      	bne.n	8003392 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3a>
 8003386:	f00e fcff 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When flexButton3 clicked change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
    }
}
 800338a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoScreen1ScreenNoTransition();
 800338e:	f7ff bb07 	b.w	80029a0 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
}
 8003392:	bd38      	pop	{r3, r4, r5, pc}

08003394 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8003394:	2200      	movs	r2, #0
 8003396:	f04f 31ff 	mov.w	r1, #4294967295
 800339a:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 800339e:	6082      	str	r2, [r0, #8]
    }
 80033a0:	4770      	bx	lr

080033a2 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80033a2:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80033a4:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80033a6:	4604      	mov	r4, r0
        setX(x);
 80033a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
 80033aa:	4615      	mov	r5, r2
        setX(x);
 80033ac:	4798      	blx	r3
        setY(y);
 80033ae:	6823      	ldr	r3, [r4, #0]
 80033b0:	4629      	mov	r1, r5
 80033b2:	4620      	mov	r0, r4
 80033b4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
 80033b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80033ba:	4718      	bx	r3

080033bc <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80033bc:	b570      	push	{r4, r5, r6, lr}
 80033be:	4604      	mov	r4, r0
 80033c0:	461d      	mov	r5, r3
 80033c2:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 80033c6:	f7ff ffec 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80033ca:	6823      	ldr	r3, [r4, #0]
 80033cc:	4629      	mov	r1, r5
 80033ce:	4620      	mov	r0, r4
 80033d0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80033d2:	4798      	blx	r3
        setHeight(height);
 80033d4:	6823      	ldr	r3, [r4, #0]
 80033d6:	4631      	mov	r1, r6
 80033d8:	4620      	mov	r0, r4
 80033da:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 80033dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80033e0:	4718      	bx	r3
	...

080033e4 <_ZN8touchgfx6WidgetC1Ev>:
 80033e4:	2200      	movs	r2, #0
 80033e6:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80033ea:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80033ee:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80033f2:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80033f6:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80033fa:	8482      	strh	r2, [r0, #36]	@ 0x24
class Widget : public Drawable
 80033fc:	4a01      	ldr	r2, [pc, #4]	@ (8003404 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80033fe:	6002      	str	r2, [r0, #0]
 8003400:	4770      	bx	lr
 8003402:	bf00      	nop
 8003404:	08027e60 	.word	0x08027e60

08003408 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8003408:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 800340a:	2226      	movs	r2, #38	@ 0x26
    Box()
 800340c:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 800340e:	2100      	movs	r1, #0
 8003410:	f022 fbcf 	bl	8025bb2 <memset>
 8003414:	4620      	mov	r0, r4
 8003416:	f7ff ffe5 	bl	80033e4 <_ZN8touchgfx6WidgetC1Ev>
 800341a:	4b04      	ldr	r3, [pc, #16]	@ (800342c <_ZN8touchgfx3BoxC1Ev+0x24>)
 800341c:	6023      	str	r3, [r4, #0]
 800341e:	23ff      	movs	r3, #255	@ 0xff
 8003420:	f884 3026 	strb.w	r3, [r4, #38]	@ 0x26
        : color(col)
 8003424:	2300      	movs	r3, #0
 8003426:	62a3      	str	r3, [r4, #40]	@ 0x28
    }
 8003428:	4620      	mov	r0, r4
 800342a:	bd10      	pop	{r4, pc}
 800342c:	08028ad8 	.word	0x08028ad8

08003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 8003430:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8003432:	2226      	movs	r2, #38	@ 0x26
    Image(const Bitmap& bmp = Bitmap())
 8003434:	4604      	mov	r4, r0
 8003436:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8003438:	2100      	movs	r1, #0
 800343a:	f022 fbba 	bl	8025bb2 <memset>
 800343e:	4620      	mov	r0, r4
 8003440:	f7ff ffd0 	bl	80033e4 <_ZN8touchgfx6WidgetC1Ev>
 8003444:	4b06      	ldr	r3, [pc, #24]	@ (8003460 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8003446:	6023      	str	r3, [r4, #0]
 8003448:	882b      	ldrh	r3, [r5, #0]
 800344a:	84e3      	strh	r3, [r4, #38]	@ 0x26
 800344c:	23ff      	movs	r3, #255	@ 0xff
    {
        Image::setBitmap(bmp);
 800344e:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8003450:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
        Image::setBitmap(bmp);
 8003454:	4629      	mov	r1, r5
 8003456:	f00c f89b 	bl	800f590 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 800345a:	4620      	mov	r0, r4
 800345c:	bd38      	pop	{r3, r4, r5, pc}
 800345e:	bf00      	nop
 8003460:	08028ba8 	.word	0x08028ba8

08003464 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>:
        handleAlphaUpdated();
 8003464:	6803      	ldr	r3, [r0, #0]
        alpha = newAlpha;
 8003466:	f880 102d 	strb.w	r1, [r0, #45]	@ 0x2d
        handleAlphaUpdated();
 800346a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800346e:	4718      	bx	r3

08003470 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8003470:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003472:	2226      	movs	r2, #38	@ 0x26
 8003474:	4604      	mov	r4, r0
 8003476:	2100      	movs	r1, #0
 8003478:	f022 fb9b 	bl	8025bb2 <memset>
 800347c:	4620      	mov	r0, r4
 800347e:	f7ff ffb1 	bl	80033e4 <_ZN8touchgfx6WidgetC1Ev>
        : typedTextId(id)
 8003482:	4b0a      	ldr	r3, [pc, #40]	@ (80034ac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x3c>)
 8003484:	62a3      	str	r3, [r4, #40]	@ 0x28
 8003486:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800348a:	85a3      	strh	r3, [r4, #44]	@ 0x2c
 800348c:	f44f 027f 	mov.w	r2, #16711680	@ 0xff0000
 8003490:	2300      	movs	r3, #0
 8003492:	e9c4 320c 	strd	r3, r2, [r4, #48]	@ 0x30
        : TextAreaWithWildcardBase(), wc1(0)
 8003496:	4a06      	ldr	r2, [pc, #24]	@ (80034b0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x40>)
 8003498:	6022      	str	r2, [r4, #0]
 800349a:	8723      	strh	r3, [r4, #56]	@ 0x38
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800349c:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 80034a0:	e9c4 2310 	strd	r2, r3, [r4, #64]	@ 0x40
 80034a4:	63e3      	str	r3, [r4, #60]	@ 0x3c
 80034a6:	64a3      	str	r3, [r4, #72]	@ 0x48
    }
 80034a8:	4620      	mov	r0, r4
 80034aa:	bd10      	pop	{r4, pc}
 80034ac:	08027d58 	.word	0x08027d58
 80034b0:	08027ec8 	.word	0x08027ec8

080034b4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 80034b4:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
    BoxWithBorderButtonStyle()
 80034b8:	b570      	push	{r4, r5, r6, lr}
        : T(), up(), down()
 80034ba:	4606      	mov	r6, r0
 80034bc:	8583      	strh	r3, [r0, #44]	@ 0x2c
        touchable = touch;
 80034be:	f240 1301 	movw	r3, #257	@ 0x101
          firstChild(0)
 80034c2:	2500      	movs	r5, #0
 80034c4:	8483      	strh	r3, [r0, #36]	@ 0x24
 80034c6:	4b12      	ldr	r3, [pc, #72]	@ (8003510 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x5c>)
 80034c8:	6285      	str	r5, [r0, #40]	@ 0x28
        : x(0), y(0), width(0), height(0)
 80034ca:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80034ce:	e9c0 5503 	strd	r5, r5, [r0, #12]
          nextSibling(0),
 80034d2:	e9c0 5505 	strd	r5, r5, [r0, #20]
          cachedAbsX(0),
 80034d6:	e9c0 5507 	strd	r5, r5, [r0, #28]
 80034da:	6305      	str	r5, [r0, #48]	@ 0x30
 80034dc:	f846 3b34 	str.w	r3, [r6], #52
    BoxWithBorderButtonStyle()
 80034e0:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 80034e2:	4630      	mov	r0, r6
 80034e4:	f7ff ff90 	bl	8003408 <_ZN8touchgfx3BoxC1Ev>
 80034e8:	4b0a      	ldr	r3, [pc, #40]	@ (8003514 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x60>)
 80034ea:	6363      	str	r3, [r4, #52]	@ 0x34
        borderBox.setXY(0, 0);
 80034ec:	462a      	mov	r2, r5
 80034ee:	4629      	mov	r1, r5
 80034f0:	4630      	mov	r0, r6
        : color(0)
 80034f2:	e9c4 551a 	strd	r5, r5, [r4, #104]	@ 0x68
 80034f6:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
        : color(col)
 80034fa:	6625      	str	r5, [r4, #96]	@ 0x60
 80034fc:	f8a4 5064 	strh.w	r5, [r4, #100]	@ 0x64
 8003500:	f7ff ff4f 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8003504:	4620      	mov	r0, r4
 8003506:	4631      	mov	r1, r6
 8003508:	f008 ff4a 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800350c:	4620      	mov	r0, r4
 800350e:	bd70      	pop	{r4, r5, r6, pc}
 8003510:	08027f58 	.word	0x08027f58
 8003514:	08028b40 	.word	0x08028b40

08003518 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8003518:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800351c:	4604      	mov	r4, r0
 800351e:	b08d      	sub	sp, #52	@ 0x34
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8003520:	46a1      	mov	r9, r4
        : presenter(0)
 8003522:	2500      	movs	r5, #0
 8003524:	f010 fc34 	bl	8013d90 <_ZN8touchgfx6ScreenC1Ev>
 8003528:	4bc2      	ldr	r3, [pc, #776]	@ (8003834 <_ZN15Screen1ViewBaseC1Ev+0x31c>)
 800352a:	63e5      	str	r5, [r4, #60]	@ 0x3c
 800352c:	f849 3b40 	str.w	r3, [r9], #64
 8003530:	f104 0b6c 	add.w	fp, r4, #108	@ 0x6c
 8003534:	4648      	mov	r0, r9
 8003536:	f7ff ff67 	bl	8003408 <_ZN8touchgfx3BoxC1Ev>
 800353a:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 800353e:	a90a      	add	r1, sp, #40	@ 0x28
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003540:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8003544:	4658      	mov	r0, fp
 8003546:	f504 7788 	add.w	r7, r4, #272	@ 0x110
 800354a:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
 800354e:	f7ff ff6f 	bl	8003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003552:	4640      	mov	r0, r8
 8003554:	f7ff ffae 	bl	80034b4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003558:	4638      	mov	r0, r7
 800355a:	f7ff ff89 	bl	8003470 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800355e:	f504 73ae 	add.w	r3, r4, #348	@ 0x15c
 8003562:	a90a      	add	r1, sp, #40	@ 0x28
 8003564:	4618      	mov	r0, r3
 8003566:	9304      	str	r3, [sp, #16]
 8003568:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
 800356c:	f7ff ff60 	bl	8003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003570:	f504 73c4 	add.w	r3, r4, #392	@ 0x188
 8003574:	4618      	mov	r0, r3
 8003576:	9302      	str	r3, [sp, #8]
 8003578:	f7ff ff9c 	bl	80034b4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800357c:	f504 7300 	add.w	r3, r4, #512	@ 0x200
 8003580:	4618      	mov	r0, r3
 8003582:	f504 7a1e 	add.w	sl, r4, #632	@ 0x278
 8003586:	9303      	str	r3, [sp, #12]
 8003588:	f7ff ff94 	bl	80034b4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800358c:	4650      	mov	r0, sl
 800358e:	f7ff ff6f 	bl	8003470 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003592:	4ba9      	ldr	r3, [pc, #676]	@ (8003838 <_ZN15Screen1ViewBaseC1Ev+0x320>)
 8003594:	e9c4 34b1 	strd	r3, r4, [r4, #708]	@ 0x2c4
 8003598:	4ba8      	ldr	r3, [pc, #672]	@ (800383c <_ZN15Screen1ViewBaseC1Ev+0x324>)
 800359a:	e9c4 35b3 	strd	r3, r5, [r4, #716]	@ 0x2cc
    __background.setPosition(0, 0, 240, 320);
 800359e:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80035a2:	462a      	mov	r2, r5
 80035a4:	4648      	mov	r0, r9
 80035a6:	9300      	str	r3, [sp, #0]
 80035a8:	4629      	mov	r1, r5
 80035aa:	23f0      	movs	r3, #240	@ 0xf0
 80035ac:	f7ff ff06 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80035b0:	1d26      	adds	r6, r4, #4
        color = newColor;
 80035b2:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80035b6:	66a3      	str	r3, [r4, #104]	@ 0x68
 80035b8:	4649      	mov	r1, r9
 80035ba:	4630      	mov	r0, r6
 80035bc:	f008 fef0 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80035c0:	462a      	mov	r2, r5
 80035c2:	4658      	mov	r0, fp
 80035c4:	4629      	mov	r1, r5
 80035c6:	f7ff feec 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
 80035ca:	2310      	movs	r3, #16
    image1.setBitmap(touchgfx::Bitmap(BITMAP_PLAY_SCREEN_MIN_ID));
 80035cc:	4658      	mov	r0, fp
 80035ce:	a90a      	add	r1, sp, #40	@ 0x28
        borderBox.setPosition(x, y, width, height);
 80035d0:	f04f 092a 	mov.w	r9, #42	@ 0x2a
 80035d4:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 80035d8:	f00b ffda 	bl	800f590 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80035dc:	4659      	mov	r1, fp
 80035de:	4630      	mov	r0, r6
 80035e0:	f008 fede 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035e4:	462a      	mov	r2, r5
 80035e6:	464b      	mov	r3, r9
 80035e8:	4629      	mov	r1, r5
 80035ea:	f8cd 9000 	str.w	r9, [sp]
 80035ee:	f104 00cc 	add.w	r0, r4, #204	@ 0xcc
 80035f2:	f7ff fee3 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
        up = colorReleased;
 80035f6:	4b92      	ldr	r3, [pc, #584]	@ (8003840 <_ZN15Screen1ViewBaseC1Ev+0x328>)
 80035f8:	f8c4 3100 	str.w	r3, [r4, #256]	@ 0x100
        down = colorPressed;
 80035fc:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 8003600:	3333      	adds	r3, #51	@ 0x33
 8003602:	f8c4 3104 	str.w	r3, [r4, #260]	@ 0x104
        borderUp = borderColorReleased;
 8003606:	f5a3 43cc 	sub.w	r3, r3, #26112	@ 0x6600
 800360a:	3b66      	subs	r3, #102	@ 0x66
 800360c:	f8c4 3108 	str.w	r3, [r4, #264]	@ 0x108
        borderDown = borderColorPressed;
 8003610:	f103 1333 	add.w	r3, r3, #3342387	@ 0x330033
 8003614:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8003618:	f04f 0b05 	mov.w	fp, #5
 800361c:	f8c4 310c 	str.w	r3, [r4, #268]	@ 0x10c
        handlePressedUpdated();
 8003620:	4640      	mov	r0, r8
 8003622:	f8a4 b0fc 	strh.w	fp, [r4, #252]	@ 0xfc
 8003626:	f7ff fdd9 	bl	80031dc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    flexButton1.setAlpha(0);
 800362a:	4640      	mov	r0, r8
 800362c:	4629      	mov	r1, r5
 800362e:	f7ff ff19 	bl	8003464 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    flexButton1.setAction(flexButtonCallback);
 8003632:	f504 7331 	add.w	r3, r4, #708	@ 0x2c4
        action = &callback;
 8003636:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
    flexButton1.setPosition(184, 271, 42, 42);
 800363a:	f240 120f 	movw	r2, #271	@ 0x10f
 800363e:	4640      	mov	r0, r8
    flexButton1.setAction(flexButtonCallback);
 8003640:	9305      	str	r3, [sp, #20]
    flexButton1.setPosition(184, 271, 42, 42);
 8003642:	f8cd 9000 	str.w	r9, [sp]
 8003646:	464b      	mov	r3, r9
 8003648:	21b8      	movs	r1, #184	@ 0xb8
 800364a:	f7ff feb7 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
 800364e:	4641      	mov	r1, r8
 8003650:	4630      	mov	r0, r6
 8003652:	f008 fea5 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setPosition(119, 190, 172, 30);
 8003656:	231e      	movs	r3, #30
 8003658:	22be      	movs	r2, #190	@ 0xbe
 800365a:	9300      	str	r3, [sp, #0]
 800365c:	2177      	movs	r1, #119	@ 0x77
 800365e:	23ac      	movs	r3, #172	@ 0xac
 8003660:	4638      	mov	r0, r7
 8003662:	f7ff feab 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003666:	f04f 33ff 	mov.w	r3, #4294967295
 800366a:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
        boundingArea = calculateBoundingArea();
 800366e:	f8d4 3110 	ldr.w	r3, [r4, #272]	@ 0x110
        linespace = space;
 8003672:	f8a4 5144 	strh.w	r5, [r4, #324]	@ 0x144
        boundingArea = calculateBoundingArea();
 8003676:	f10d 0818 	add.w	r8, sp, #24
 800367a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800367e:	f8df 91ec 	ldr.w	r9, [pc, #492]	@ 800386c <_ZN15Screen1ViewBaseC1Ev+0x354>
 8003682:	4639      	mov	r1, r7
 8003684:	4640      	mov	r0, r8
 8003686:	4798      	blx	r3
 8003688:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800368c:	f504 73a6 	add.w	r3, r4, #332	@ 0x14c
 8003690:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003694:	f8d9 3000 	ldr.w	r3, [r9]
 8003698:	b92b      	cbnz	r3, 80036a6 <_ZN15Screen1ViewBaseC1Ev+0x18e>
 800369a:	4b6a      	ldr	r3, [pc, #424]	@ (8003844 <_ZN15Screen1ViewBaseC1Ev+0x32c>)
 800369c:	4a6a      	ldr	r2, [pc, #424]	@ (8003848 <_ZN15Screen1ViewBaseC1Ev+0x330>)
 800369e:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80036a0:	486a      	ldr	r0, [pc, #424]	@ (800384c <_ZN15Screen1ViewBaseC1Ev+0x334>)
 80036a2:	f022 f87f 	bl	80257a4 <__assert_func>
 80036a6:	4b6a      	ldr	r3, [pc, #424]	@ (8003850 <_ZN15Screen1ViewBaseC1Ev+0x338>)
 80036a8:	881b      	ldrh	r3, [r3, #0]
 80036aa:	2b0d      	cmp	r3, #13
 80036ac:	d803      	bhi.n	80036b6 <_ZN15Screen1ViewBaseC1Ev+0x19e>
 80036ae:	4b69      	ldr	r3, [pc, #420]	@ (8003854 <_ZN15Screen1ViewBaseC1Ev+0x33c>)
 80036b0:	4a65      	ldr	r2, [pc, #404]	@ (8003848 <_ZN15Screen1ViewBaseC1Ev+0x330>)
 80036b2:	2161      	movs	r1, #97	@ 0x61
 80036b4:	e7f4      	b.n	80036a0 <_ZN15Screen1ViewBaseC1Ev+0x188>
        return texts->getText(typedTextId);
 80036b6:	4b68      	ldr	r3, [pc, #416]	@ (8003858 <_ZN15Screen1ViewBaseC1Ev+0x340>)
 80036b8:	210d      	movs	r1, #13
 80036ba:	6818      	ldr	r0, [r3, #0]
 80036bc:	f001 fa6e 	bl	8004b9c <_ZNK8touchgfx5Texts7getTextEt>
        : typedTextId(id)
 80036c0:	230e      	movs	r3, #14
 80036c2:	4a66      	ldr	r2, [pc, #408]	@ (800385c <_ZN15Screen1ViewBaseC1Ev+0x344>)
        wc1 = value;
 80036c4:	f8c4 0158 	str.w	r0, [r4, #344]	@ 0x158
    textArea1.setTypedText(touchgfx::TypedText(T_MAN1));
 80036c8:	a90a      	add	r1, sp, #40	@ 0x28
 80036ca:	4638      	mov	r0, r7
 80036cc:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 80036d0:	920a      	str	r2, [sp, #40]	@ 0x28
 80036d2:	f00b fe01 	bl	800f2d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80036d6:	4639      	mov	r1, r7
 80036d8:	4630      	mov	r0, r6
 80036da:	f008 fe61 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2.setXY(0, 0);
 80036de:	462a      	mov	r2, r5
 80036e0:	9804      	ldr	r0, [sp, #16]
 80036e2:	4629      	mov	r1, r5
 80036e4:	f7ff fe5d 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
 80036e8:	2315      	movs	r3, #21
    image2.setBitmap(touchgfx::Bitmap(BITMAP_SCORE_ID));
 80036ea:	9804      	ldr	r0, [sp, #16]
 80036ec:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 80036f0:	a90a      	add	r1, sp, #40	@ 0x28
 80036f2:	f00b ff4d 	bl	800f590 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setPosition(x, y, width, height);
 80036f6:	271f      	movs	r7, #31
 80036f8:	9904      	ldr	r1, [sp, #16]
        visible = vis;
 80036fa:	f884 5181 	strb.w	r5, [r4, #385]	@ 0x181
 80036fe:	4630      	mov	r0, r6
 8003700:	f008 fe4e 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003704:	2341      	movs	r3, #65	@ 0x41
 8003706:	462a      	mov	r2, r5
 8003708:	4629      	mov	r1, r5
 800370a:	f504 70de 	add.w	r0, r4, #444	@ 0x1bc
 800370e:	9700      	str	r7, [sp, #0]
 8003710:	f7ff fe54 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 8003714:	4b52      	ldr	r3, [pc, #328]	@ (8003860 <_ZN15Screen1ViewBaseC1Ev+0x348>)
 8003716:	4a53      	ldr	r2, [pc, #332]	@ (8003864 <_ZN15Screen1ViewBaseC1Ev+0x34c>)
        down = colorPressed;
 8003718:	4949      	ldr	r1, [pc, #292]	@ (8003840 <_ZN15Screen1ViewBaseC1Ev+0x328>)
 800371a:	4853      	ldr	r0, [pc, #332]	@ (8003868 <_ZN15Screen1ViewBaseC1Ev+0x350>)
 800371c:	f8a4 b1ec 	strh.w	fp, [r4, #492]	@ 0x1ec
        borderDown = borderColorPressed;
 8003720:	e9c4 327e 	strd	r3, r2, [r4, #504]	@ 0x1f8
        down = colorPressed;
 8003724:	e9c4 107c 	strd	r1, r0, [r4, #496]	@ 0x1f0
        handlePressedUpdated();
 8003728:	9802      	ldr	r0, [sp, #8]
 800372a:	f7ff fd57 	bl	80031dc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    flexButton2.setAlpha(0);
 800372e:	9802      	ldr	r0, [sp, #8]
 8003730:	4629      	mov	r1, r5
 8003732:	f7ff fe97 	bl	8003464 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
 8003736:	9805      	ldr	r0, [sp, #20]
 8003738:	f8c4 01b8 	str.w	r0, [r4, #440]	@ 0x1b8
    flexButton2.setPosition(43, 127, 65, 31);
 800373c:	2341      	movs	r3, #65	@ 0x41
 800373e:	227f      	movs	r2, #127	@ 0x7f
 8003740:	9802      	ldr	r0, [sp, #8]
 8003742:	f884 51ad 	strb.w	r5, [r4, #429]	@ 0x1ad
 8003746:	212b      	movs	r1, #43	@ 0x2b
 8003748:	9700      	str	r7, [sp, #0]
 800374a:	f7ff fe37 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
 800374e:	9902      	ldr	r1, [sp, #8]
 8003750:	4630      	mov	r0, r6
 8003752:	f008 fe25 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 8003756:	2341      	movs	r3, #65	@ 0x41
 8003758:	462a      	mov	r2, r5
 800375a:	4629      	mov	r1, r5
 800375c:	f504 700d 	add.w	r0, r4, #564	@ 0x234
 8003760:	9700      	str	r7, [sp, #0]
 8003762:	f7ff fe2b 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 8003766:	4936      	ldr	r1, [pc, #216]	@ (8003840 <_ZN15Screen1ViewBaseC1Ev+0x328>)
 8003768:	483f      	ldr	r0, [pc, #252]	@ (8003868 <_ZN15Screen1ViewBaseC1Ev+0x350>)
 800376a:	f8a4 b264 	strh.w	fp, [r4, #612]	@ 0x264
 800376e:	e9c4 109a 	strd	r1, r0, [r4, #616]	@ 0x268
        borderUp = borderColorReleased;
 8003772:	f5a1 514c 	sub.w	r1, r1, #13056	@ 0x3300
 8003776:	3933      	subs	r1, #51	@ 0x33
 8003778:	f8c4 1270 	str.w	r1, [r4, #624]	@ 0x270
        borderDown = borderColorPressed;
 800377c:	f101 1133 	add.w	r1, r1, #3342387	@ 0x330033
 8003780:	f501 514c 	add.w	r1, r1, #13056	@ 0x3300
        handlePressedUpdated();
 8003784:	9803      	ldr	r0, [sp, #12]
        borderDown = borderColorPressed;
 8003786:	f8c4 1274 	str.w	r1, [r4, #628]	@ 0x274
        handlePressedUpdated();
 800378a:	f7ff fd27 	bl	80031dc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    flexButton3.setAlpha(0);
 800378e:	9803      	ldr	r0, [sp, #12]
 8003790:	4629      	mov	r1, r5
 8003792:	f7ff fe67 	bl	8003464 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
 8003796:	9905      	ldr	r1, [sp, #20]
 8003798:	f8c4 1230 	str.w	r1, [r4, #560]	@ 0x230
    flexButton3.setPosition(133, 127, 65, 31);
 800379c:	2341      	movs	r3, #65	@ 0x41
 800379e:	227f      	movs	r2, #127	@ 0x7f
 80037a0:	9803      	ldr	r0, [sp, #12]
 80037a2:	f884 5225 	strb.w	r5, [r4, #549]	@ 0x225
 80037a6:	2185      	movs	r1, #133	@ 0x85
 80037a8:	9700      	str	r7, [sp, #0]
 80037aa:	f7ff fe07 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
 80037ae:	9903      	ldr	r1, [sp, #12]
 80037b0:	4630      	mov	r0, r6
 80037b2:	f008 fdf5 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setPosition(55, 99, 130, 20);
 80037b6:	2314      	movs	r3, #20
 80037b8:	2263      	movs	r2, #99	@ 0x63
 80037ba:	9300      	str	r3, [sp, #0]
 80037bc:	2137      	movs	r1, #55	@ 0x37
 80037be:	2382      	movs	r3, #130	@ 0x82
 80037c0:	4650      	mov	r0, sl
 80037c2:	f7ff fdfb 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
 80037c6:	f8d4 3278 	ldr.w	r3, [r4, #632]	@ 0x278
        linespace = space;
 80037ca:	f8a4 52ac 	strh.w	r5, [r4, #684]	@ 0x2ac
        color = newColor;
 80037ce:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 80037d2:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 80037d6:	f8c4 12a8 	str.w	r1, [r4, #680]	@ 0x2a8
        boundingArea = calculateBoundingArea();
 80037da:	4640      	mov	r0, r8
 80037dc:	4651      	mov	r1, sl
 80037de:	4798      	blx	r3
 80037e0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80037e4:	f504 732d 	add.w	r3, r4, #692	@ 0x2b4
 80037e8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80037ec:	f8d9 3000 	ldr.w	r3, [r9]
 80037f0:	2b00      	cmp	r3, #0
 80037f2:	f43f af52 	beq.w	800369a <_ZN15Screen1ViewBaseC1Ev+0x182>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80037f6:	4916      	ldr	r1, [pc, #88]	@ (8003850 <_ZN15Screen1ViewBaseC1Ev+0x338>)
 80037f8:	880b      	ldrh	r3, [r1, #0]
 80037fa:	2b0b      	cmp	r3, #11
 80037fc:	f67f af57 	bls.w	80036ae <_ZN15Screen1ViewBaseC1Ev+0x196>
        return texts->getText(typedTextId);
 8003800:	4b15      	ldr	r3, [pc, #84]	@ (8003858 <_ZN15Screen1ViewBaseC1Ev+0x340>)
 8003802:	210b      	movs	r1, #11
 8003804:	6818      	ldr	r0, [r3, #0]
 8003806:	f001 f9c9 	bl	8004b9c <_ZNK8touchgfx5Texts7getTextEt>
        : typedTextId(id)
 800380a:	4a14      	ldr	r2, [pc, #80]	@ (800385c <_ZN15Screen1ViewBaseC1Ev+0x344>)
 800380c:	f8c4 02c0 	str.w	r0, [r4, #704]	@ 0x2c0
 8003810:	230c      	movs	r3, #12
    textArea2.setTypedText(touchgfx::TypedText(T_MAN1SCORE));
 8003812:	a90a      	add	r1, sp, #40	@ 0x28
 8003814:	4650      	mov	r0, sl
 8003816:	920a      	str	r2, [sp, #40]	@ 0x28
 8003818:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800381c:	f00b fd5c 	bl	800f2d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003820:	4630      	mov	r0, r6
 8003822:	f884 529d 	strb.w	r5, [r4, #669]	@ 0x29d
 8003826:	4651      	mov	r1, sl
 8003828:	f008 fdba 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800382c:	4620      	mov	r0, r4
 800382e:	b00d      	add	sp, #52	@ 0x34
 8003830:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003834:	0802800c 	.word	0x0802800c
 8003838:	08027ff4 	.word	0x08027ff4
 800383c:	08003359 	.word	0x08003359
 8003840:	ff006699 	.word	0xff006699
 8003844:	08027402 	.word	0x08027402
 8003848:	08027504 	.word	0x08027504
 800384c:	0802747f 	.word	0x0802747f
 8003850:	20015348 	.word	0x20015348
 8003854:	080274c6 	.word	0x080274c6
 8003858:	20015350 	.word	0x20015350
 800385c:	08027d58 	.word	0x08027d58
 8003860:	ff003366 	.word	0xff003366
 8003864:	ff336699 	.word	0xff336699
 8003868:	ff0099cc 	.word	0xff0099cc
 800386c:	20015344 	.word	0x20015344

08003870 <_ZN15Screen2ViewBase11turnOnMode1Ev>:
     * Virtual Action Handlers
     */
    virtual void turnOnMode1()
    {
        // Override and implement this function in Screen2
    }
 8003870:	4770      	bx	lr

08003872 <_ZN15Screen2ViewBase11turnOnMode2Ev>:
    virtual void turnOnMode2()
    {
        // Override and implement this function in Screen2
    }
 8003872:	4770      	bx	lr

08003874 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003874:	4770      	bx	lr

08003876 <_ZN15Screen2ViewBaseD1Ev>:
}

Screen2ViewBase::~Screen2ViewBase()
{

}
 8003876:	4770      	bx	lr

08003878 <_ZN15Screen2ViewBase11setupScreenEv>:

void Screen2ViewBase::setupScreen()
{

}
 8003878:	4770      	bx	lr

0800387a <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800387a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800387c:	68c2      	ldr	r2, [r0, #12]
 800387e:	6844      	ldr	r4, [r0, #4]
 8003880:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003882:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003884:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003888:	07d2      	lsls	r2, r2, #31
 800388a:	bf48      	it	mi
 800388c:	5962      	ldrmi	r2, [r4, r5]
 800388e:	689b      	ldr	r3, [r3, #8]
    }
 8003890:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003892:	bf48      	it	mi
 8003894:	58d3      	ldrmi	r3, [r2, r3]
 8003896:	4718      	bx	r3

08003898 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8003898:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 800389a:	6840      	ldr	r0, [r0, #4]
 800389c:	b130      	cbz	r0, 80038ac <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 800389e:	689a      	ldr	r2, [r3, #8]
 80038a0:	b91a      	cbnz	r2, 80038aa <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 80038a2:	68d8      	ldr	r0, [r3, #12]
 80038a4:	f000 0001 	and.w	r0, r0, #1
 80038a8:	4770      	bx	lr
 80038aa:	2001      	movs	r0, #1
    }
 80038ac:	4770      	bx	lr

080038ae <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80038ae:	b510      	push	{r4, lr}
 80038b0:	2110      	movs	r1, #16
 80038b2:	4604      	mov	r4, r0
 80038b4:	f021 f839 	bl	802492a <_ZdlPvj>
 80038b8:	4620      	mov	r0, r4
 80038ba:	bd10      	pop	{r4, pc}

080038bc <_ZN15Screen2ViewBaseD0Ev>:
Screen2ViewBase::~Screen2ViewBase()
 80038bc:	b510      	push	{r4, lr}
}
 80038be:	f44f 7125 	mov.w	r1, #660	@ 0x294
Screen2ViewBase::~Screen2ViewBase()
 80038c2:	4604      	mov	r4, r0
}
 80038c4:	f021 f831 	bl	802492a <_ZdlPvj>
 80038c8:	4620      	mov	r0, r4
 80038ca:	bd10      	pop	{r4, pc}

080038cc <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
 80038cc:	f500 7303 	add.w	r3, r0, #524	@ 0x20c
 80038d0:	4299      	cmp	r1, r3
{
 80038d2:	b570      	push	{r4, r5, r6, lr}
 80038d4:	4604      	mov	r4, r0
 80038d6:	460d      	mov	r5, r1
    if (&src == &flexButton1)
 80038d8:	d103      	bne.n	80038e2 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80038da:	f00e fa55 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When flexButton1 clicked change screen to ScreenWait
        //Go to ScreenWait with no screen transition
        application().gotoScreenWaitScreenNoTransition();
 80038de:	f7ff f84f 	bl	8002980 <_ZN23FrontendApplicationBase32gotoScreenWaitScreenNoTransitionEv>
    }
    if (&src == &flexButton2)
 80038e2:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 80038e6:	429d      	cmp	r5, r3
 80038e8:	d103      	bne.n	80038f2 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
    {
        //Interaction2
        //When flexButton2 clicked call virtual function
        //Call turnOnMode1
        turnOnMode1();
 80038ea:	6823      	ldr	r3, [r4, #0]
 80038ec:	4620      	mov	r0, r4
 80038ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80038f0:	4798      	blx	r3
    }
    if (&src == &flexButton3)
 80038f2:	f504 73ca 	add.w	r3, r4, #404	@ 0x194
 80038f6:	429d      	cmp	r5, r3
 80038f8:	d105      	bne.n	8003906 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3a>
    {
        //Interaction3
        //When flexButton3 clicked call virtual function
        //Call turnOnMode2
        turnOnMode2();
 80038fa:	6823      	ldr	r3, [r4, #0]
 80038fc:	4620      	mov	r0, r4
 80038fe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    }
}
 8003900:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        turnOnMode2();
 8003904:	4718      	bx	r3
}
 8003906:	bd70      	pop	{r4, r5, r6, pc}

08003908 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 8003908:	4a07      	ldr	r2, [pc, #28]	@ (8003928 <_ZN8touchgfx8DrawableC1Ev+0x20>)
 800390a:	6002      	str	r2, [r0, #0]
        : x(0), y(0), width(0), height(0)
 800390c:	2200      	movs	r2, #0
 800390e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8003912:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8003916:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 800391a:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 800391e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8003922:	8482      	strh	r2, [r0, #36]	@ 0x24
    }
 8003924:	4770      	bx	lr
 8003926:	bf00      	nop
 8003928:	08028c78 	.word	0x08028c78

0800392c <_ZN15Screen2ViewBaseC1Ev>:
Screen2ViewBase::Screen2ViewBase() :
 800392c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003930:	4604      	mov	r4, r0
 8003932:	b089      	sub	sp, #36	@ 0x24
    flexButtonCallback(this, &Screen2ViewBase::flexButtonCallbackHandler)
 8003934:	4627      	mov	r7, r4
 8003936:	2500      	movs	r5, #0
 8003938:	f010 fa2a 	bl	8013d90 <_ZN8touchgfx6ScreenC1Ev>
 800393c:	4b87      	ldr	r3, [pc, #540]	@ (8003b5c <_ZN15Screen2ViewBaseC1Ev+0x230>)
 800393e:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8003940:	f847 3b40 	str.w	r3, [r7], #64
 8003944:	f104 0b6c 	add.w	fp, r4, #108	@ 0x6c
 8003948:	4638      	mov	r0, r7
 800394a:	f7ff fd5d 	bl	8003408 <_ZN8touchgfx3BoxC1Ev>
 800394e:	f104 0a98 	add.w	sl, r4, #152	@ 0x98
 8003952:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8003956:	a907      	add	r1, sp, #28
 8003958:	4658      	mov	r0, fp
 800395a:	f104 09c4 	add.w	r9, r4, #196	@ 0xc4
 800395e:	f8ad 601c 	strh.w	r6, [sp, #28]
 8003962:	f7ff fd65 	bl	8003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003966:	a907      	add	r1, sp, #28
 8003968:	4650      	mov	r0, sl
 800396a:	f104 08f0 	add.w	r8, r4, #240	@ 0xf0
 800396e:	f8ad 601c 	strh.w	r6, [sp, #28]
 8003972:	f7ff fd5d 	bl	8003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003976:	a907      	add	r1, sp, #28
 8003978:	4648      	mov	r0, r9
 800397a:	f8ad 601c 	strh.w	r6, [sp, #28]
 800397e:	f7ff fd57 	bl	8003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003982:	a907      	add	r1, sp, #28
 8003984:	f8ad 601c 	strh.w	r6, [sp, #28]
 8003988:	4640      	mov	r0, r8
 800398a:	f504 768e 	add.w	r6, r4, #284	@ 0x11c
 800398e:	f7ff fd4f 	bl	8003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003992:	4630      	mov	r0, r6
 8003994:	f7ff fd8e 	bl	80034b4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003998:	f504 73ca 	add.w	r3, r4, #404	@ 0x194
 800399c:	4618      	mov	r0, r3
 800399e:	9303      	str	r3, [sp, #12]
 80039a0:	f7ff fd88 	bl	80034b4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 80039a4:	f504 7303 	add.w	r3, r4, #524	@ 0x20c
 80039a8:	4618      	mov	r0, r3
 80039aa:	9304      	str	r3, [sp, #16]
 80039ac:	f7ff fd82 	bl	80034b4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80039b0:	4b6b      	ldr	r3, [pc, #428]	@ (8003b60 <_ZN15Screen2ViewBaseC1Ev+0x234>)
 80039b2:	e9c4 34a1 	strd	r3, r4, [r4, #644]	@ 0x284
 80039b6:	4b6b      	ldr	r3, [pc, #428]	@ (8003b64 <_ZN15Screen2ViewBaseC1Ev+0x238>)
 80039b8:	e9c4 35a3 	strd	r3, r5, [r4, #652]	@ 0x28c
    __background.setPosition(0, 0, 240, 320);
 80039bc:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80039c0:	462a      	mov	r2, r5
 80039c2:	9300      	str	r3, [sp, #0]
 80039c4:	4629      	mov	r1, r5
 80039c6:	4638      	mov	r0, r7
 80039c8:	23f0      	movs	r3, #240	@ 0xf0
 80039ca:	f7ff fcf7 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
 80039ce:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80039d2:	66a3      	str	r3, [r4, #104]	@ 0x68
 80039d4:	4639      	mov	r1, r7
 80039d6:	1d20      	adds	r0, r4, #4
 80039d8:	f008 fce2 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image8.setXY(0, 0);
 80039dc:	462a      	mov	r2, r5
 80039de:	4629      	mov	r1, r5
 80039e0:	4658      	mov	r0, fp
 80039e2:	f7ff fcde 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
 80039e6:	2308      	movs	r3, #8
    image8.setBitmap(touchgfx::Bitmap(BITMAP_GEM_SCREEN_ID));
 80039e8:	a907      	add	r1, sp, #28
 80039ea:	4658      	mov	r0, fp
 80039ec:	f8ad 301c 	strh.w	r3, [sp, #28]
 80039f0:	f00b fdce 	bl	800f590 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80039f4:	4659      	mov	r1, fp
 80039f6:	1d20      	adds	r0, r4, #4
 80039f8:	f008 fcd2 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image5.setXY(86, 16);
 80039fc:	2210      	movs	r2, #16
 80039fe:	4650      	mov	r0, sl
 8003a00:	2156      	movs	r1, #86	@ 0x56
 8003a02:	f7ff fcce 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
 8003a06:	2302      	movs	r3, #2
    image5.setBitmap(touchgfx::Bitmap(BITMAP_BLOCK___ID));
 8003a08:	a907      	add	r1, sp, #28
 8003a0a:	4650      	mov	r0, sl
 8003a0c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8003a10:	f00b fdbe 	bl	800f590 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003a14:	4651      	mov	r1, sl
 8003a16:	1d20      	adds	r0, r4, #4
 8003a18:	f008 fcc2 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image6.setXY(-73, 10);
 8003a1c:	220a      	movs	r2, #10
 8003a1e:	4648      	mov	r0, r9
 8003a20:	f06f 0148 	mvn.w	r1, #72	@ 0x48
 8003a24:	f7ff fcbd 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
 8003a28:	2301      	movs	r3, #1
    image6.setBitmap(touchgfx::Bitmap(BITMAP_BLOCK__ID));
 8003a2a:	a907      	add	r1, sp, #28
 8003a2c:	4648      	mov	r0, r9
 8003a2e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8003a32:	f00b fdad 	bl	800f590 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003a36:	4649      	mov	r1, r9
 8003a38:	1d20      	adds	r0, r4, #4
 8003a3a:	f008 fcb1 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image7.setXY(13, 23);
 8003a3e:	2217      	movs	r2, #23
 8003a40:	4640      	mov	r0, r8
 8003a42:	210d      	movs	r1, #13
 8003a44:	f7ff fcad 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
    image7.setBitmap(touchgfx::Bitmap(BITMAP_BLOCK_ID));
 8003a48:	a907      	add	r1, sp, #28
 8003a4a:	4640      	mov	r0, r8
        borderBox.setPosition(x, y, width, height);
 8003a4c:	2720      	movs	r7, #32
 8003a4e:	f8ad 501c 	strh.w	r5, [sp, #28]
 8003a52:	f00b fd9d 	bl	800f590 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003a56:	4641      	mov	r1, r8
 8003a58:	1d20      	adds	r0, r4, #4
 8003a5a:	f008 fca1 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003a5e:	462a      	mov	r2, r5
 8003a60:	4629      	mov	r1, r5
 8003a62:	463b      	mov	r3, r7
 8003a64:	f504 70a8 	add.w	r0, r4, #336	@ 0x150
 8003a68:	9700      	str	r7, [sp, #0]
 8003a6a:	f7ff fca7 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 8003a6e:	f8df 90fc 	ldr.w	r9, [pc, #252]	@ 8003b6c <_ZN15Screen2ViewBaseC1Ev+0x240>
 8003a72:	f8df a0fc 	ldr.w	sl, [pc, #252]	@ 8003b70 <_ZN15Screen2ViewBaseC1Ev+0x244>
        borderDown = borderColorPressed;
 8003a76:	f8df b0fc 	ldr.w	fp, [pc, #252]	@ 8003b74 <_ZN15Screen2ViewBaseC1Ev+0x248>
 8003a7a:	4b3b      	ldr	r3, [pc, #236]	@ (8003b68 <_ZN15Screen2ViewBaseC1Ev+0x23c>)
 8003a7c:	f04f 0805 	mov.w	r8, #5
 8003a80:	e9c4 b363 	strd	fp, r3, [r4, #396]	@ 0x18c
        handlePressedUpdated();
 8003a84:	4630      	mov	r0, r6
        down = colorPressed;
 8003a86:	e9c4 9a61 	strd	r9, sl, [r4, #388]	@ 0x184
 8003a8a:	f8a4 8180 	strh.w	r8, [r4, #384]	@ 0x180
        handlePressedUpdated();
 8003a8e:	f7ff fba5 	bl	80031dc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    flexButton2.setAlpha(0);
 8003a92:	4629      	mov	r1, r5
 8003a94:	4630      	mov	r0, r6
 8003a96:	f7ff fce5 	bl	8003464 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    flexButton2.setAction(flexButtonCallback);
 8003a9a:	f504 7221 	add.w	r2, r4, #644	@ 0x284
 8003a9e:	f8c4 214c 	str.w	r2, [r4, #332]	@ 0x14c
    flexButton2.setPosition(151, 7, 32, 32);
 8003aa2:	463b      	mov	r3, r7
    flexButton2.setAction(flexButtonCallback);
 8003aa4:	9205      	str	r2, [sp, #20]
    flexButton2.setPosition(151, 7, 32, 32);
 8003aa6:	4630      	mov	r0, r6
 8003aa8:	2207      	movs	r2, #7
 8003aaa:	9700      	str	r7, [sp, #0]
 8003aac:	2197      	movs	r1, #151	@ 0x97
 8003aae:	f7ff fc85 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
 8003ab2:	4631      	mov	r1, r6
 8003ab4:	1d20      	adds	r0, r4, #4
 8003ab6:	f008 fc73 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 8003aba:	462a      	mov	r2, r5
 8003abc:	4629      	mov	r1, r5
 8003abe:	463b      	mov	r3, r7
 8003ac0:	f504 70e4 	add.w	r0, r4, #456	@ 0x1c8
 8003ac4:	9700      	str	r7, [sp, #0]
 8003ac6:	f7ff fc79 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 8003aca:	4b27      	ldr	r3, [pc, #156]	@ (8003b68 <_ZN15Screen2ViewBaseC1Ev+0x23c>)
 8003acc:	f8c4 3208 	str.w	r3, [r4, #520]	@ 0x208
        handlePressedUpdated();
 8003ad0:	9803      	ldr	r0, [sp, #12]
 8003ad2:	f8a4 81f8 	strh.w	r8, [r4, #504]	@ 0x1f8
        down = colorPressed;
 8003ad6:	e9c4 9a7f 	strd	r9, sl, [r4, #508]	@ 0x1fc
        borderUp = borderColorReleased;
 8003ada:	f8c4 b204 	str.w	fp, [r4, #516]	@ 0x204
        handlePressedUpdated();
 8003ade:	f7ff fb7d 	bl	80031dc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    flexButton3.setAlpha(0);
 8003ae2:	9803      	ldr	r0, [sp, #12]
 8003ae4:	4629      	mov	r1, r5
 8003ae6:	f7ff fcbd 	bl	8003464 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
 8003aea:	9a05      	ldr	r2, [sp, #20]
 8003aec:	f8c4 21c4 	str.w	r2, [r4, #452]	@ 0x1c4
    flexButton3.setPosition(199, 7, 32, 32);
 8003af0:	463b      	mov	r3, r7
 8003af2:	9803      	ldr	r0, [sp, #12]
 8003af4:	9700      	str	r7, [sp, #0]
 8003af6:	2207      	movs	r2, #7
 8003af8:	21c7      	movs	r1, #199	@ 0xc7
 8003afa:	f7ff fc5f 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
        borderBox.setPosition(x, y, width, height);
 8003afe:	261c      	movs	r6, #28
 8003b00:	9903      	ldr	r1, [sp, #12]
 8003b02:	1d20      	adds	r0, r4, #4
 8003b04:	f008 fc4c 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003b08:	462a      	mov	r2, r5
 8003b0a:	4629      	mov	r1, r5
 8003b0c:	f504 7010 	add.w	r0, r4, #576	@ 0x240
 8003b10:	9600      	str	r6, [sp, #0]
 8003b12:	2353      	movs	r3, #83	@ 0x53
 8003b14:	f7ff fc52 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 8003b18:	4b13      	ldr	r3, [pc, #76]	@ (8003b68 <_ZN15Screen2ViewBaseC1Ev+0x23c>)
 8003b1a:	f8c4 3280 	str.w	r3, [r4, #640]	@ 0x280
        handlePressedUpdated();
 8003b1e:	9804      	ldr	r0, [sp, #16]
 8003b20:	f8a4 8270 	strh.w	r8, [r4, #624]	@ 0x270
        down = colorPressed;
 8003b24:	e9c4 9a9d 	strd	r9, sl, [r4, #628]	@ 0x274
        borderUp = borderColorReleased;
 8003b28:	f8c4 b27c 	str.w	fp, [r4, #636]	@ 0x27c
        handlePressedUpdated();
 8003b2c:	f7ff fb56 	bl	80031dc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    flexButton1.setAlpha(0);
 8003b30:	9804      	ldr	r0, [sp, #16]
 8003b32:	4629      	mov	r1, r5
 8003b34:	f7ff fc96 	bl	8003464 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
 8003b38:	9b05      	ldr	r3, [sp, #20]
 8003b3a:	f8c4 323c 	str.w	r3, [r4, #572]	@ 0x23c
    flexButton1.setPosition(77, 126, 83, 28);
 8003b3e:	9804      	ldr	r0, [sp, #16]
 8003b40:	9600      	str	r6, [sp, #0]
 8003b42:	2353      	movs	r3, #83	@ 0x53
 8003b44:	227e      	movs	r2, #126	@ 0x7e
 8003b46:	214d      	movs	r1, #77	@ 0x4d
 8003b48:	f7ff fc38 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
 8003b4c:	1d20      	adds	r0, r4, #4
 8003b4e:	9904      	ldr	r1, [sp, #16]
 8003b50:	f008 fc26 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003b54:	4620      	mov	r0, r4
 8003b56:	b009      	add	sp, #36	@ 0x24
 8003b58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b5c:	08028058 	.word	0x08028058
 8003b60:	08028040 	.word	0x08028040
 8003b64:	080038cd 	.word	0x080038cd
 8003b68:	ff336699 	.word	0xff336699
 8003b6c:	ff006699 	.word	0xff006699
 8003b70:	ff0099cc 	.word	0xff0099cc
 8003b74:	ff003366 	.word	0xff003366

08003b78 <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003b78:	4770      	bx	lr

08003b7a <_ZN15Screen3ViewBaseD1Ev>:
}

Screen3ViewBase::~Screen3ViewBase()
{

}
 8003b7a:	4770      	bx	lr

08003b7c <_ZN15Screen3ViewBase11setupScreenEv>:

void Screen3ViewBase::setupScreen()
{

}
 8003b7c:	4770      	bx	lr

08003b7e <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003b7e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003b80:	68c2      	ldr	r2, [r0, #12]
 8003b82:	6844      	ldr	r4, [r0, #4]
 8003b84:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003b86:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003b88:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003b8c:	07d2      	lsls	r2, r2, #31
 8003b8e:	bf48      	it	mi
 8003b90:	5962      	ldrmi	r2, [r4, r5]
 8003b92:	689b      	ldr	r3, [r3, #8]
    }
 8003b94:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003b96:	bf48      	it	mi
 8003b98:	58d3      	ldrmi	r3, [r2, r3]
 8003b9a:	4718      	bx	r3

08003b9c <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8003b9c:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8003b9e:	6840      	ldr	r0, [r0, #4]
 8003ba0:	b130      	cbz	r0, 8003bb0 <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8003ba2:	689a      	ldr	r2, [r3, #8]
 8003ba4:	b91a      	cbnz	r2, 8003bae <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 8003ba6:	68d8      	ldr	r0, [r3, #12]
 8003ba8:	f000 0001 	and.w	r0, r0, #1
 8003bac:	4770      	bx	lr
 8003bae:	2001      	movs	r0, #1
    }
 8003bb0:	4770      	bx	lr

08003bb2 <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003bb2:	b510      	push	{r4, lr}
 8003bb4:	2110      	movs	r1, #16
 8003bb6:	4604      	mov	r4, r0
 8003bb8:	f020 feb7 	bl	802492a <_ZdlPvj>
 8003bbc:	4620      	mov	r0, r4
 8003bbe:	bd10      	pop	{r4, pc}

08003bc0 <_ZN15Screen3ViewBaseD0Ev>:
Screen3ViewBase::~Screen3ViewBase()
 8003bc0:	b510      	push	{r4, lr}
}
 8003bc2:	f44f 618d 	mov.w	r1, #1128	@ 0x468
Screen3ViewBase::~Screen3ViewBase()
 8003bc6:	4604      	mov	r4, r0
}
 8003bc8:	f020 feaf 	bl	802492a <_ZdlPvj>
 8003bcc:	4620      	mov	r0, r4
 8003bce:	bd10      	pop	{r4, pc}

08003bd0 <_ZN15Screen3ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen3ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 8003bd0:	b538      	push	{r3, r4, r5, lr}
    if (&src == &flexButton1)
 8003bd2:	f100 0398 	add.w	r3, r0, #152	@ 0x98
 8003bd6:	4299      	cmp	r1, r3
{
 8003bd8:	4604      	mov	r4, r0
 8003bda:	460d      	mov	r5, r1
    if (&src == &flexButton1)
 8003bdc:	d103      	bne.n	8003be6 <_ZN15Screen3ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~Screen3ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003bde:	f00e f8d3 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When flexButton1 clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
 8003be2:	f7fe febd 	bl	8002960 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
    }
    if (&src == &flexButton2)
 8003be6:	f504 730b 	add.w	r3, r4, #556	@ 0x22c
 8003bea:	429d      	cmp	r5, r3
 8003bec:	d103      	bne.n	8003bf6 <_ZN15Screen3ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
 8003bee:	f00e f8cb 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When flexButton2 clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
 8003bf2:	f7fe feb5 	bl	8002960 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
    }
    if (&src == &flexButton3)
 8003bf6:	f504 7329 	add.w	r3, r4, #676	@ 0x2a4
 8003bfa:	429d      	cmp	r5, r3
 8003bfc:	d103      	bne.n	8003c06 <_ZN15Screen3ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x36>
 8003bfe:	f00e f8c3 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When flexButton3 clicked change screen to Screen3
        //Go to Screen3 with no screen transition
        application().gotoScreen3ScreenNoTransition();
 8003c02:	f7fe fedd 	bl	80029c0 <_ZN23FrontendApplicationBase29gotoScreen3ScreenNoTransitionEv>
    }
    if (&src == &flexButton4)
 8003c06:	f504 7347 	add.w	r3, r4, #796	@ 0x31c
 8003c0a:	429d      	cmp	r5, r3
 8003c0c:	d103      	bne.n	8003c16 <_ZN15Screen3ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x46>
 8003c0e:	f00e f8bb 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction4
        //When flexButton4 clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
 8003c12:	f7fe fea5 	bl	8002960 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
    }
    if (&src == &flexButton5)
 8003c16:	f504 7465 	add.w	r4, r4, #916	@ 0x394
 8003c1a:	42a5      	cmp	r5, r4
 8003c1c:	d105      	bne.n	8003c2a <_ZN15Screen3ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x5a>
 8003c1e:	f00e f8b3 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When flexButton5 clicked change screen to Screen4
        //Go to Screen4 with no screen transition
        application().gotoScreen4ScreenNoTransition();
    }
}
 8003c22:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoScreen4ScreenNoTransition();
 8003c26:	f7fe bedb 	b.w	80029e0 <_ZN23FrontendApplicationBase29gotoScreen4ScreenNoTransitionEv>
}
 8003c2a:	bd38      	pop	{r3, r4, r5, pc}

08003c2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 8003c2c:	b410      	push	{r4}
        borderUp = borderColorReleased;
 8003c2e:	6703      	str	r3, [r0, #112]	@ 0x70
        borderDown = borderColorPressed;
 8003c30:	9b01      	ldr	r3, [sp, #4]
 8003c32:	6743      	str	r3, [r0, #116]	@ 0x74
        handlePressedUpdated();
 8003c34:	6803      	ldr	r3, [r0, #0]
    }
 8003c36:	f85d 4b04 	ldr.w	r4, [sp], #4
        handlePressedUpdated();
 8003c3a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
        down = colorPressed;
 8003c3e:	e9c0 121a 	strd	r1, r2, [r0, #104]	@ 0x68
        handlePressedUpdated();
 8003c42:	4718      	bx	r3

08003c44 <_ZN15Screen3ViewBaseC1Ev>:
Screen3ViewBase::Screen3ViewBase() :
 8003c44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c48:	4604      	mov	r4, r0
 8003c4a:	b093      	sub	sp, #76	@ 0x4c
    flexButtonCallback(this, &Screen3ViewBase::flexButtonCallbackHandler)
 8003c4c:	46a2      	mov	sl, r4
 8003c4e:	2500      	movs	r5, #0
 8003c50:	f010 f89e 	bl	8013d90 <_ZN8touchgfx6ScreenC1Ev>
 8003c54:	4b72      	ldr	r3, [pc, #456]	@ (8003e20 <_ZN15Screen3ViewBaseC1Ev+0x1dc>)
 8003c56:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8003c58:	f84a 3b40 	str.w	r3, [sl], #64
 8003c5c:	f104 0b6c 	add.w	fp, r4, #108	@ 0x6c
 8003c60:	4650      	mov	r0, sl
 8003c62:	f7ff fbd1 	bl	8003408 <_ZN8touchgfx3BoxC1Ev>
 8003c66:	f104 0998 	add.w	r9, r4, #152	@ 0x98
 8003c6a:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8003c6e:	a910      	add	r1, sp, #64	@ 0x40
 8003c70:	4658      	mov	r0, fp
 8003c72:	f8ad 6040 	strh.w	r6, [sp, #64]	@ 0x40
 8003c76:	f7ff fbdb 	bl	8003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003c7a:	4648      	mov	r0, r9
 8003c7c:	f7ff fc1a 	bl	80034b4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003c80:	f504 7388 	add.w	r3, r4, #272	@ 0x110
 8003c84:	4618      	mov	r0, r3
 8003c86:	9303      	str	r3, [sp, #12]
 8003c88:	f7ff fbf2 	bl	8003470 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003c8c:	f504 73ae 	add.w	r3, r4, #348	@ 0x15c
 8003c90:	a910      	add	r1, sp, #64	@ 0x40
 8003c92:	4618      	mov	r0, r3
 8003c94:	f504 77c4 	add.w	r7, r4, #392	@ 0x188
 8003c98:	9308      	str	r3, [sp, #32]
 8003c9a:	f8ad 6040 	strh.w	r6, [sp, #64]	@ 0x40
 8003c9e:	f7ff fbc7 	bl	8003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003ca2:	4638      	mov	r0, r7
 8003ca4:	f7ff fbe4 	bl	8003470 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003ca8:	f504 73ea 	add.w	r3, r4, #468	@ 0x1d4
 8003cac:	a910      	add	r1, sp, #64	@ 0x40
 8003cae:	4618      	mov	r0, r3
 8003cb0:	9309      	str	r3, [sp, #36]	@ 0x24
 8003cb2:	f8ad 6040 	strh.w	r6, [sp, #64]	@ 0x40
 8003cb6:	f7ff fbbb 	bl	8003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003cba:	f504 7300 	add.w	r3, r4, #512	@ 0x200
 8003cbe:	a910      	add	r1, sp, #64	@ 0x40
 8003cc0:	4618      	mov	r0, r3
 8003cc2:	930a      	str	r3, [sp, #40]	@ 0x28
 8003cc4:	f8ad 6040 	strh.w	r6, [sp, #64]	@ 0x40
 8003cc8:	f7ff fbb2 	bl	8003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003ccc:	f504 730b 	add.w	r3, r4, #556	@ 0x22c
 8003cd0:	4618      	mov	r0, r3
 8003cd2:	9304      	str	r3, [sp, #16]
 8003cd4:	f7ff fbee 	bl	80034b4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003cd8:	f504 7329 	add.w	r3, r4, #676	@ 0x2a4
 8003cdc:	4618      	mov	r0, r3
 8003cde:	9305      	str	r3, [sp, #20]
 8003ce0:	f7ff fbe8 	bl	80034b4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003ce4:	f504 7347 	add.w	r3, r4, #796	@ 0x31c
 8003ce8:	4618      	mov	r0, r3
 8003cea:	9306      	str	r3, [sp, #24]
 8003cec:	f7ff fbe2 	bl	80034b4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003cf0:	f504 7365 	add.w	r3, r4, #916	@ 0x394
 8003cf4:	4618      	mov	r0, r3
 8003cf6:	9307      	str	r3, [sp, #28]
 8003cf8:	f7ff fbdc 	bl	80034b4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003cfc:	f204 430c 	addw	r3, r4, #1036	@ 0x40c
 8003d00:	4618      	mov	r0, r3
 8003d02:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003d04:	f7ff fbb4 	bl	8003470 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003d08:	4b46      	ldr	r3, [pc, #280]	@ (8003e24 <_ZN15Screen3ViewBaseC1Ev+0x1e0>)
 8003d0a:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
 8003d0e:	4b46      	ldr	r3, [pc, #280]	@ (8003e28 <_ZN15Screen3ViewBaseC1Ev+0x1e4>)
 8003d10:	f8c4 3460 	str.w	r3, [r4, #1120]	@ 0x460
    __background.setPosition(0, 0, 240, 320);
 8003d14:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8003d18:	462a      	mov	r2, r5
 8003d1a:	4650      	mov	r0, sl
 8003d1c:	f8c4 445c 	str.w	r4, [r4, #1116]	@ 0x45c
 8003d20:	f8c4 5464 	str.w	r5, [r4, #1124]	@ 0x464
 8003d24:	4629      	mov	r1, r5
 8003d26:	9300      	str	r3, [sp, #0]
 8003d28:	23f0      	movs	r3, #240	@ 0xf0
 8003d2a:	f7ff fb47 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
 8003d2e:	1d26      	adds	r6, r4, #4
 8003d30:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8003d34:	66a3      	str	r3, [r4, #104]	@ 0x68
 8003d36:	4651      	mov	r1, sl
 8003d38:	4630      	mov	r0, r6
 8003d3a:	f008 fb31 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8003d3e:	462a      	mov	r2, r5
 8003d40:	4658      	mov	r0, fp
 8003d42:	4629      	mov	r1, r5
 8003d44:	f7ff fb2d 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
 8003d48:	f04f 0310 	mov.w	r3, #16
    image1.setBitmap(touchgfx::Bitmap(BITMAP_PLAY_SCREEN_MIN_ID));
 8003d4c:	4658      	mov	r0, fp
 8003d4e:	a910      	add	r1, sp, #64	@ 0x40
 8003d50:	f8ad 3040 	strh.w	r3, [sp, #64]	@ 0x40
 8003d54:	f00b fc1c 	bl	800f590 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003d58:	4659      	mov	r1, fp
 8003d5a:	4630      	mov	r0, r6
        borderBox.setPosition(x, y, width, height);
 8003d5c:	f04f 0b2d 	mov.w	fp, #45	@ 0x2d
 8003d60:	f008 fb1e 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003d64:	f8cd b000 	str.w	fp, [sp]
 8003d68:	232b      	movs	r3, #43	@ 0x2b
 8003d6a:	462a      	mov	r2, r5
 8003d6c:	4629      	mov	r1, r5
 8003d6e:	f104 00cc 	add.w	r0, r4, #204	@ 0xcc
 8003d72:	f7ff fb23 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003d76:	4b2d      	ldr	r3, [pc, #180]	@ (8003e2c <_ZN15Screen3ViewBaseC1Ev+0x1e8>)
 8003d78:	4a2d      	ldr	r2, [pc, #180]	@ (8003e30 <_ZN15Screen3ViewBaseC1Ev+0x1ec>)
 8003d7a:	492e      	ldr	r1, [pc, #184]	@ (8003e34 <_ZN15Screen3ViewBaseC1Ev+0x1f0>)
 8003d7c:	f04f 0805 	mov.w	r8, #5
 8003d80:	f8a4 80fc 	strh.w	r8, [r4, #252]	@ 0xfc
 8003d84:	9300      	str	r3, [sp, #0]
 8003d86:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 8003d8a:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 8003d8e:	4648      	mov	r0, r9
 8003d90:	f7ff ff4c 	bl	8003c2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1.setAction(flexButtonCallback);
 8003d94:	f504 6a8b 	add.w	sl, r4, #1112	@ 0x458
    flexButton1.setAlpha(0);
 8003d98:	4648      	mov	r0, r9
 8003d9a:	4629      	mov	r1, r5
 8003d9c:	f7ff fb62 	bl	8003464 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    flexButton1.setPosition(183, 269, 43, 45);
 8003da0:	232b      	movs	r3, #43	@ 0x2b
 8003da2:	f240 120d 	movw	r2, #269	@ 0x10d
 8003da6:	4648      	mov	r0, r9
 8003da8:	f8c4 a0c8 	str.w	sl, [r4, #200]	@ 0xc8
 8003dac:	21b7      	movs	r1, #183	@ 0xb7
 8003dae:	f8cd b000 	str.w	fp, [sp]
 8003db2:	f7ff fb03 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
 8003db6:	4649      	mov	r1, r9
 8003db8:	4630      	mov	r0, r6
 8003dba:	f008 faf1 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setPosition(119, 190, 172, 30);
 8003dbe:	231e      	movs	r3, #30
 8003dc0:	22be      	movs	r2, #190	@ 0xbe
 8003dc2:	9803      	ldr	r0, [sp, #12]
 8003dc4:	9300      	str	r3, [sp, #0]
 8003dc6:	2177      	movs	r1, #119	@ 0x77
 8003dc8:	23ac      	movs	r3, #172	@ 0xac
 8003dca:	f7ff faf7 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003dce:	f04f 33ff 	mov.w	r3, #4294967295
 8003dd2:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
        boundingArea = calculateBoundingArea();
 8003dd6:	f8d4 3110 	ldr.w	r3, [r4, #272]	@ 0x110
 8003dda:	9903      	ldr	r1, [sp, #12]
 8003ddc:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 8003de0:	f8a4 5144 	strh.w	r5, [r4, #324]	@ 0x144
        boundingArea = calculateBoundingArea();
 8003de4:	f10d 0930 	add.w	r9, sp, #48	@ 0x30
 8003de8:	4648      	mov	r0, r9
 8003dea:	4798      	blx	r3
 8003dec:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003df0:	f8df b058 	ldr.w	fp, [pc, #88]	@ 8003e4c <_ZN15Screen3ViewBaseC1Ev+0x208>
 8003df4:	f504 73a6 	add.w	r3, r4, #332	@ 0x14c
 8003df8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003dfc:	f8db 3000 	ldr.w	r3, [fp]
 8003e00:	b92b      	cbnz	r3, 8003e0e <_ZN15Screen3ViewBaseC1Ev+0x1ca>
 8003e02:	4b0d      	ldr	r3, [pc, #52]	@ (8003e38 <_ZN15Screen3ViewBaseC1Ev+0x1f4>)
 8003e04:	4a0d      	ldr	r2, [pc, #52]	@ (8003e3c <_ZN15Screen3ViewBaseC1Ev+0x1f8>)
 8003e06:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003e08:	480d      	ldr	r0, [pc, #52]	@ (8003e40 <_ZN15Screen3ViewBaseC1Ev+0x1fc>)
 8003e0a:	f021 fccb 	bl	80257a4 <__assert_func>
 8003e0e:	4b0d      	ldr	r3, [pc, #52]	@ (8003e44 <_ZN15Screen3ViewBaseC1Ev+0x200>)
 8003e10:	881b      	ldrh	r3, [r3, #0]
 8003e12:	2b0f      	cmp	r3, #15
 8003e14:	d81c      	bhi.n	8003e50 <_ZN15Screen3ViewBaseC1Ev+0x20c>
 8003e16:	4b0c      	ldr	r3, [pc, #48]	@ (8003e48 <_ZN15Screen3ViewBaseC1Ev+0x204>)
 8003e18:	4a08      	ldr	r2, [pc, #32]	@ (8003e3c <_ZN15Screen3ViewBaseC1Ev+0x1f8>)
 8003e1a:	2161      	movs	r1, #97	@ 0x61
 8003e1c:	e7f4      	b.n	8003e08 <_ZN15Screen3ViewBaseC1Ev+0x1c4>
 8003e1e:	bf00      	nop
 8003e20:	080280ac 	.word	0x080280ac
 8003e24:	08028094 	.word	0x08028094
 8003e28:	08003bd1 	.word	0x08003bd1
 8003e2c:	ff336699 	.word	0xff336699
 8003e30:	ff0099cc 	.word	0xff0099cc
 8003e34:	ff006699 	.word	0xff006699
 8003e38:	08027402 	.word	0x08027402
 8003e3c:	08027504 	.word	0x08027504
 8003e40:	0802747f 	.word	0x0802747f
 8003e44:	20015348 	.word	0x20015348
 8003e48:	080274c6 	.word	0x080274c6
 8003e4c:	20015344 	.word	0x20015344
        return texts->getText(typedTextId);
 8003e50:	4bad      	ldr	r3, [pc, #692]	@ (8004108 <_ZN15Screen3ViewBaseC1Ev+0x4c4>)
 8003e52:	210f      	movs	r1, #15
 8003e54:	6818      	ldr	r0, [r3, #0]
 8003e56:	f000 fea1 	bl	8004b9c <_ZNK8touchgfx5Texts7getTextEt>
        : typedTextId(id)
 8003e5a:	f04f 0110 	mov.w	r1, #16
 8003e5e:	4aab      	ldr	r2, [pc, #684]	@ (800410c <_ZN15Screen3ViewBaseC1Ev+0x4c8>)
 8003e60:	f8c4 0158 	str.w	r0, [r4, #344]	@ 0x158
 8003e64:	f8ad 1044 	strh.w	r1, [sp, #68]	@ 0x44
    textArea1.setTypedText(touchgfx::TypedText(T_TOADOX));
 8003e68:	9803      	ldr	r0, [sp, #12]
 8003e6a:	9210      	str	r2, [sp, #64]	@ 0x40
 8003e6c:	a910      	add	r1, sp, #64	@ 0x40
 8003e6e:	f00b fa33 	bl	800f2d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003e72:	9903      	ldr	r1, [sp, #12]
 8003e74:	4630      	mov	r0, r6
 8003e76:	f008 fa93 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image4.setXY(168, 0);
 8003e7a:	462a      	mov	r2, r5
 8003e7c:	9808      	ldr	r0, [sp, #32]
 8003e7e:	21a8      	movs	r1, #168	@ 0xa8
 8003e80:	f7ff fa8f 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
 8003e84:	230b      	movs	r3, #11
    image4.setBitmap(touchgfx::Bitmap(BITMAP_LV1_ID));
 8003e86:	9808      	ldr	r0, [sp, #32]
 8003e88:	f8ad 3040 	strh.w	r3, [sp, #64]	@ 0x40
 8003e8c:	a910      	add	r1, sp, #64	@ 0x40
 8003e8e:	f00b fb7f 	bl	800f590 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003e92:	9908      	ldr	r1, [sp, #32]
 8003e94:	4630      	mov	r0, r6
 8003e96:	f008 fa83 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(140, 59);
 8003e9a:	223b      	movs	r2, #59	@ 0x3b
 8003e9c:	218c      	movs	r1, #140	@ 0x8c
 8003e9e:	4638      	mov	r0, r7
 8003ea0:	f7ff fa7f 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
 8003ea4:	f8d4 3188 	ldr.w	r3, [r4, #392]	@ 0x188
        linespace = space;
 8003ea8:	f8a4 51bc 	strh.w	r5, [r4, #444]	@ 0x1bc
        color = newColor;
 8003eac:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8003eb0:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 8003eb4:	f8c4 11b8 	str.w	r1, [r4, #440]	@ 0x1b8
        boundingArea = calculateBoundingArea();
 8003eb8:	4648      	mov	r0, r9
 8003eba:	4639      	mov	r1, r7
 8003ebc:	4798      	blx	r3
 8003ebe:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8003ec2:	f504 73e2 	add.w	r3, r4, #452	@ 0x1c4
 8003ec6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003eca:	f8db 3000 	ldr.w	r3, [fp]
 8003ece:	2b00      	cmp	r3, #0
 8003ed0:	d097      	beq.n	8003e02 <_ZN15Screen3ViewBaseC1Ev+0x1be>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003ed2:	498f      	ldr	r1, [pc, #572]	@ (8004110 <_ZN15Screen3ViewBaseC1Ev+0x4cc>)
 8003ed4:	880b      	ldrh	r3, [r1, #0]
 8003ed6:	2b02      	cmp	r3, #2
 8003ed8:	d99d      	bls.n	8003e16 <_ZN15Screen3ViewBaseC1Ev+0x1d2>
        return texts->getText(typedTextId);
 8003eda:	4b8b      	ldr	r3, [pc, #556]	@ (8004108 <_ZN15Screen3ViewBaseC1Ev+0x4c4>)
 8003edc:	2102      	movs	r1, #2
 8003ede:	6818      	ldr	r0, [r3, #0]
 8003ee0:	f000 fe5c 	bl	8004b9c <_ZNK8touchgfx5Texts7getTextEt>
 8003ee4:	f8c4 01d0 	str.w	r0, [r4, #464]	@ 0x1d0
    textArea3.resizeToCurrentText();
 8003ee8:	4638      	mov	r0, r7
 8003eea:	f00b f9d5 	bl	800f298 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    textArea3.setTypedText(touchgfx::TypedText(T_TARGET3));
 8003eee:	a810      	add	r0, sp, #64	@ 0x40
        : typedTextId(id)
 8003ef0:	2303      	movs	r3, #3
 8003ef2:	4a86      	ldr	r2, [pc, #536]	@ (800410c <_ZN15Screen3ViewBaseC1Ev+0x4c8>)
 8003ef4:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8003ef8:	4601      	mov	r1, r0
 8003efa:	4638      	mov	r0, r7
 8003efc:	9210      	str	r2, [sp, #64]	@ 0x40
 8003efe:	f00b f9eb 	bl	800f2d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003f02:	4639      	mov	r1, r7
 8003f04:	4630      	mov	r0, r6
 8003f06:	f008 fa4b 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2.setXY(0, 0);
 8003f0a:	462a      	mov	r2, r5
 8003f0c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003f0e:	4629      	mov	r1, r5
 8003f10:	f7ff fa47 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_SCORE_ID));
 8003f14:	a810      	add	r0, sp, #64	@ 0x40
 8003f16:	2315      	movs	r3, #21
 8003f18:	4601      	mov	r1, r0
 8003f1a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003f1c:	f8ad 3040 	strh.w	r3, [sp, #64]	@ 0x40
 8003f20:	f00b fb36 	bl	800f590 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003f24:	9909      	ldr	r1, [sp, #36]	@ 0x24
        visible = vis;
 8003f26:	f884 51f9 	strb.w	r5, [r4, #505]	@ 0x1f9
 8003f2a:	4630      	mov	r0, r6
 8003f2c:	f008 fa38 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image3.setXY(0, 0);
 8003f30:	462a      	mov	r2, r5
 8003f32:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8003f34:	4629      	mov	r1, r5
 8003f36:	f7ff fa34 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
    image3.setBitmap(touchgfx::Bitmap(BITMAP_NEXT_LEVEL_ID));
 8003f3a:	a810      	add	r0, sp, #64	@ 0x40
 8003f3c:	230d      	movs	r3, #13
 8003f3e:	4601      	mov	r1, r0
 8003f40:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8003f42:	f8ad 3040 	strh.w	r3, [sp, #64]	@ 0x40
 8003f46:	271f      	movs	r7, #31
 8003f48:	f00b fb22 	bl	800f590 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003f4c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003f4e:	f884 5225 	strb.w	r5, [r4, #549]	@ 0x225
 8003f52:	4630      	mov	r0, r6
 8003f54:	f008 fa24 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f58:	2341      	movs	r3, #65	@ 0x41
 8003f5a:	462a      	mov	r2, r5
 8003f5c:	4629      	mov	r1, r5
 8003f5e:	f504 7018 	add.w	r0, r4, #608	@ 0x260
 8003f62:	9700      	str	r7, [sp, #0]
 8003f64:	f7ff fa2a 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003f68:	4b6a      	ldr	r3, [pc, #424]	@ (8004114 <_ZN15Screen3ViewBaseC1Ev+0x4d0>)
 8003f6a:	f8a4 8290 	strh.w	r8, [r4, #656]	@ 0x290
 8003f6e:	9300      	str	r3, [sp, #0]
 8003f70:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 8003f74:	4a68      	ldr	r2, [pc, #416]	@ (8004118 <_ZN15Screen3ViewBaseC1Ev+0x4d4>)
 8003f76:	4969      	ldr	r1, [pc, #420]	@ (800411c <_ZN15Screen3ViewBaseC1Ev+0x4d8>)
 8003f78:	9804      	ldr	r0, [sp, #16]
 8003f7a:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 8003f7e:	f7ff fe55 	bl	8003c2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton2.setAlpha(0);
 8003f82:	9804      	ldr	r0, [sp, #16]
 8003f84:	4629      	mov	r1, r5
 8003f86:	f7ff fa6d 	bl	8003464 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    flexButton2.setPosition(43, 127, 65, 31);
 8003f8a:	2341      	movs	r3, #65	@ 0x41
 8003f8c:	227f      	movs	r2, #127	@ 0x7f
 8003f8e:	9804      	ldr	r0, [sp, #16]
 8003f90:	f884 5251 	strb.w	r5, [r4, #593]	@ 0x251
 8003f94:	f8c4 a25c 	str.w	sl, [r4, #604]	@ 0x25c
 8003f98:	212b      	movs	r1, #43	@ 0x2b
 8003f9a:	9700      	str	r7, [sp, #0]
 8003f9c:	f7ff fa0e 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
 8003fa0:	9904      	ldr	r1, [sp, #16]
 8003fa2:	4630      	mov	r0, r6
 8003fa4:	f008 f9fc 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003fa8:	2341      	movs	r3, #65	@ 0x41
 8003faa:	462a      	mov	r2, r5
 8003fac:	4629      	mov	r1, r5
 8003fae:	f504 7036 	add.w	r0, r4, #728	@ 0x2d8
 8003fb2:	9700      	str	r7, [sp, #0]
 8003fb4:	f7ff fa02 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003fb8:	4b56      	ldr	r3, [pc, #344]	@ (8004114 <_ZN15Screen3ViewBaseC1Ev+0x4d0>)
 8003fba:	f8a4 8308 	strh.w	r8, [r4, #776]	@ 0x308
 8003fbe:	9300      	str	r3, [sp, #0]
 8003fc0:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 8003fc4:	4a54      	ldr	r2, [pc, #336]	@ (8004118 <_ZN15Screen3ViewBaseC1Ev+0x4d4>)
 8003fc6:	4955      	ldr	r1, [pc, #340]	@ (800411c <_ZN15Screen3ViewBaseC1Ev+0x4d8>)
 8003fc8:	9805      	ldr	r0, [sp, #20]
 8003fca:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 8003fce:	f7ff fe2d 	bl	8003c2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton3.setAlpha(0);
 8003fd2:	9805      	ldr	r0, [sp, #20]
 8003fd4:	4629      	mov	r1, r5
 8003fd6:	f7ff fa45 	bl	8003464 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    flexButton3.setPosition(133, 127, 65, 31);
 8003fda:	2341      	movs	r3, #65	@ 0x41
 8003fdc:	227f      	movs	r2, #127	@ 0x7f
 8003fde:	9805      	ldr	r0, [sp, #20]
 8003fe0:	f884 52c9 	strb.w	r5, [r4, #713]	@ 0x2c9
 8003fe4:	f8c4 a2d4 	str.w	sl, [r4, #724]	@ 0x2d4
 8003fe8:	2185      	movs	r1, #133	@ 0x85
 8003fea:	9700      	str	r7, [sp, #0]
 8003fec:	f7ff f9e6 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
 8003ff0:	9905      	ldr	r1, [sp, #20]
 8003ff2:	4630      	mov	r0, r6
 8003ff4:	f008 f9d4 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003ff8:	2341      	movs	r3, #65	@ 0x41
 8003ffa:	462a      	mov	r2, r5
 8003ffc:	4629      	mov	r1, r5
 8003ffe:	f504 7054 	add.w	r0, r4, #848	@ 0x350
 8004002:	9700      	str	r7, [sp, #0]
 8004004:	f7ff f9da 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8004008:	4b42      	ldr	r3, [pc, #264]	@ (8004114 <_ZN15Screen3ViewBaseC1Ev+0x4d0>)
 800400a:	f8a4 8380 	strh.w	r8, [r4, #896]	@ 0x380
 800400e:	9300      	str	r3, [sp, #0]
 8004010:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 8004014:	4a40      	ldr	r2, [pc, #256]	@ (8004118 <_ZN15Screen3ViewBaseC1Ev+0x4d4>)
 8004016:	4941      	ldr	r1, [pc, #260]	@ (800411c <_ZN15Screen3ViewBaseC1Ev+0x4d8>)
 8004018:	9806      	ldr	r0, [sp, #24]
 800401a:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 800401e:	f7ff fe05 	bl	8003c2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton4.setAlpha(0);
 8004022:	9806      	ldr	r0, [sp, #24]
 8004024:	4629      	mov	r1, r5
 8004026:	f7ff fa1d 	bl	8003464 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    flexButton4.setPosition(38, 121, 65, 31);
 800402a:	2341      	movs	r3, #65	@ 0x41
 800402c:	2279      	movs	r2, #121	@ 0x79
 800402e:	9806      	ldr	r0, [sp, #24]
 8004030:	f884 5341 	strb.w	r5, [r4, #833]	@ 0x341
 8004034:	f8c4 a34c 	str.w	sl, [r4, #844]	@ 0x34c
 8004038:	2126      	movs	r1, #38	@ 0x26
 800403a:	9700      	str	r7, [sp, #0]
 800403c:	f7ff f9be 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
 8004040:	9906      	ldr	r1, [sp, #24]
 8004042:	4630      	mov	r0, r6
 8004044:	f008 f9ac 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004048:	2341      	movs	r3, #65	@ 0x41
 800404a:	462a      	mov	r2, r5
 800404c:	4629      	mov	r1, r5
 800404e:	f504 7072 	add.w	r0, r4, #968	@ 0x3c8
 8004052:	9700      	str	r7, [sp, #0]
 8004054:	f7ff f9b2 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8004058:	4b2e      	ldr	r3, [pc, #184]	@ (8004114 <_ZN15Screen3ViewBaseC1Ev+0x4d0>)
 800405a:	f8a4 83f8 	strh.w	r8, [r4, #1016]	@ 0x3f8
 800405e:	9300      	str	r3, [sp, #0]
 8004060:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 8004064:	4a2c      	ldr	r2, [pc, #176]	@ (8004118 <_ZN15Screen3ViewBaseC1Ev+0x4d4>)
 8004066:	492d      	ldr	r1, [pc, #180]	@ (800411c <_ZN15Screen3ViewBaseC1Ev+0x4d8>)
 8004068:	9807      	ldr	r0, [sp, #28]
 800406a:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 800406e:	f7ff fddd 	bl	8003c2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton5.setAlpha(0);
 8004072:	9807      	ldr	r0, [sp, #28]
 8004074:	4629      	mov	r1, r5
 8004076:	f7ff f9f5 	bl	8003464 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    flexButton5.setPosition(142, 121, 65, 31);
 800407a:	2341      	movs	r3, #65	@ 0x41
 800407c:	2279      	movs	r2, #121	@ 0x79
 800407e:	9807      	ldr	r0, [sp, #28]
 8004080:	f884 53b9 	strb.w	r5, [r4, #953]	@ 0x3b9
 8004084:	f8c4 a3c4 	str.w	sl, [r4, #964]	@ 0x3c4
 8004088:	218e      	movs	r1, #142	@ 0x8e
 800408a:	9700      	str	r7, [sp, #0]
 800408c:	f7ff f996 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
 8004090:	9907      	ldr	r1, [sp, #28]
 8004092:	4630      	mov	r0, r6
 8004094:	f008 f984 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setPosition(55, 99, 130, 20);
 8004098:	2314      	movs	r3, #20
 800409a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800409c:	9300      	str	r3, [sp, #0]
 800409e:	2263      	movs	r2, #99	@ 0x63
 80040a0:	2382      	movs	r3, #130	@ 0x82
 80040a2:	2137      	movs	r1, #55	@ 0x37
 80040a4:	f7ff f98a 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80040a8:	f8db 3000 	ldr.w	r3, [fp]
        linespace = space;
 80040ac:	f8a4 5440 	strh.w	r5, [r4, #1088]	@ 0x440
        color = newColor;
 80040b0:	f04f 30ff 	mov.w	r0, #4294967295
 80040b4:	f8c4 043c 	str.w	r0, [r4, #1084]	@ 0x43c
        boundingArea = calculateBoundingArea();
 80040b8:	f8c4 5448 	str.w	r5, [r4, #1096]	@ 0x448
 80040bc:	f8c4 044c 	str.w	r0, [r4, #1100]	@ 0x44c
 80040c0:	f8c4 5450 	str.w	r5, [r4, #1104]	@ 0x450
 80040c4:	2b00      	cmp	r3, #0
 80040c6:	f43f ae9c 	beq.w	8003e02 <_ZN15Screen3ViewBaseC1Ev+0x1be>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80040ca:	4911      	ldr	r1, [pc, #68]	@ (8004110 <_ZN15Screen3ViewBaseC1Ev+0x4cc>)
 80040cc:	880b      	ldrh	r3, [r1, #0]
 80040ce:	2b08      	cmp	r3, #8
 80040d0:	f67f aea1 	bls.w	8003e16 <_ZN15Screen3ViewBaseC1Ev+0x1d2>
        return texts->getText(typedTextId);
 80040d4:	4b0c      	ldr	r3, [pc, #48]	@ (8004108 <_ZN15Screen3ViewBaseC1Ev+0x4c4>)
 80040d6:	2108      	movs	r1, #8
 80040d8:	6818      	ldr	r0, [r3, #0]
 80040da:	f000 fd5f 	bl	8004b9c <_ZNK8touchgfx5Texts7getTextEt>
        : typedTextId(id)
 80040de:	4a0b      	ldr	r2, [pc, #44]	@ (800410c <_ZN15Screen3ViewBaseC1Ev+0x4c8>)
 80040e0:	f8c4 0454 	str.w	r0, [r4, #1108]	@ 0x454
 80040e4:	230a      	movs	r3, #10
    textArea2.setTypedText(touchgfx::TypedText(T_MAN3SCORE));
 80040e6:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80040e8:	9210      	str	r2, [sp, #64]	@ 0x40
 80040ea:	a910      	add	r1, sp, #64	@ 0x40
 80040ec:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 80040f0:	f00b f8f2 	bl	800f2d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80040f4:	4630      	mov	r0, r6
 80040f6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80040f8:	f884 5431 	strb.w	r5, [r4, #1073]	@ 0x431
 80040fc:	f008 f950 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004100:	4620      	mov	r0, r4
 8004102:	b013      	add	sp, #76	@ 0x4c
 8004104:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004108:	20015350 	.word	0x20015350
 800410c:	08027d58 	.word	0x08027d58
 8004110:	20015348 	.word	0x20015348
 8004114:	ff336699 	.word	0xff336699
 8004118:	ff0099cc 	.word	0xff0099cc
 800411c:	ff006699 	.word	0xff006699

08004120 <_ZN8touchgfx8CallbackI15Screen4ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004120:	4770      	bx	lr

08004122 <_ZN15Screen4ViewBaseD1Ev>:
}

Screen4ViewBase::~Screen4ViewBase()
{

}
 8004122:	4770      	bx	lr

08004124 <_ZN15Screen4ViewBase11setupScreenEv>:

void Screen4ViewBase::setupScreen()
{

}
 8004124:	4770      	bx	lr

08004126 <_ZN8touchgfx8CallbackI15Screen4ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8004126:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004128:	68c2      	ldr	r2, [r0, #12]
 800412a:	6844      	ldr	r4, [r0, #4]
 800412c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800412e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8004130:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8004134:	07d2      	lsls	r2, r2, #31
 8004136:	bf48      	it	mi
 8004138:	5962      	ldrmi	r2, [r4, r5]
 800413a:	689b      	ldr	r3, [r3, #8]
    }
 800413c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800413e:	bf48      	it	mi
 8004140:	58d3      	ldrmi	r3, [r2, r3]
 8004142:	4718      	bx	r3

08004144 <_ZNK8touchgfx8CallbackI15Screen4ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8004144:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8004146:	6840      	ldr	r0, [r0, #4]
 8004148:	b130      	cbz	r0, 8004158 <_ZNK8touchgfx8CallbackI15Screen4ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 800414a:	689a      	ldr	r2, [r3, #8]
 800414c:	b91a      	cbnz	r2, 8004156 <_ZNK8touchgfx8CallbackI15Screen4ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 800414e:	68d8      	ldr	r0, [r3, #12]
 8004150:	f000 0001 	and.w	r0, r0, #1
 8004154:	4770      	bx	lr
 8004156:	2001      	movs	r0, #1
    }
 8004158:	4770      	bx	lr

0800415a <_ZN8touchgfx8CallbackI15Screen4ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800415a:	b510      	push	{r4, lr}
 800415c:	2110      	movs	r1, #16
 800415e:	4604      	mov	r4, r0
 8004160:	f020 fbe3 	bl	802492a <_ZdlPvj>
 8004164:	4620      	mov	r0, r4
 8004166:	bd10      	pop	{r4, pc}

08004168 <_ZN15Screen4ViewBaseD0Ev>:
Screen4ViewBase::~Screen4ViewBase()
 8004168:	b510      	push	{r4, lr}
}
 800416a:	f44f 618d 	mov.w	r1, #1128	@ 0x468
Screen4ViewBase::~Screen4ViewBase()
 800416e:	4604      	mov	r4, r0
}
 8004170:	f020 fbdb 	bl	802492a <_ZdlPvj>
 8004174:	4620      	mov	r0, r4
 8004176:	bd10      	pop	{r4, pc}

08004178 <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen4ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 8004178:	b538      	push	{r3, r4, r5, lr}
    if (&src == &flexButton1)
 800417a:	f100 0398 	add.w	r3, r0, #152	@ 0x98
 800417e:	4299      	cmp	r1, r3
{
 8004180:	4604      	mov	r4, r0
 8004182:	460d      	mov	r5, r1
    if (&src == &flexButton1)
 8004184:	d103      	bne.n	800418e <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~Screen4ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8004186:	f00d fdff 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When flexButton1 clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
 800418a:	f7fe fbe9 	bl	8002960 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
    }
    if (&src == &flexButton2)
 800418e:	f504 730b 	add.w	r3, r4, #556	@ 0x22c
 8004192:	429d      	cmp	r5, r3
 8004194:	d103      	bne.n	800419e <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
 8004196:	f00d fdf7 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When flexButton2 clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
 800419a:	f7fe fbe1 	bl	8002960 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
    }
    if (&src == &flexButton3)
 800419e:	f504 7329 	add.w	r3, r4, #676	@ 0x2a4
 80041a2:	429d      	cmp	r5, r3
 80041a4:	d103      	bne.n	80041ae <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x36>
 80041a6:	f00d fdef 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When flexButton3 clicked change screen to Screen4
        //Go to Screen4 with no screen transition
        application().gotoScreen4ScreenNoTransition();
 80041aa:	f7fe fc19 	bl	80029e0 <_ZN23FrontendApplicationBase29gotoScreen4ScreenNoTransitionEv>
    }
    if (&src == &flexButton4)
 80041ae:	f504 7347 	add.w	r3, r4, #796	@ 0x31c
 80041b2:	429d      	cmp	r5, r3
 80041b4:	d103      	bne.n	80041be <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x46>
 80041b6:	f00d fde7 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction4
        //When flexButton4 clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
 80041ba:	f7fe fbd1 	bl	8002960 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
    }
    if (&src == &flexButton5)
 80041be:	f504 7465 	add.w	r4, r4, #916	@ 0x394
 80041c2:	42a5      	cmp	r5, r4
 80041c4:	d105      	bne.n	80041d2 <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x5a>
 80041c6:	f00d fddf 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When flexButton5 clicked change screen to Screen4
        //Go to Screen4 with no screen transition
        application().gotoScreen4ScreenNoTransition();
    }
}
 80041ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoScreen4ScreenNoTransition();
 80041ce:	f7fe bc07 	b.w	80029e0 <_ZN23FrontendApplicationBase29gotoScreen4ScreenNoTransitionEv>
}
 80041d2:	bd38      	pop	{r3, r4, r5, pc}

080041d4 <_ZN15Screen4ViewBaseC1Ev>:
Screen4ViewBase::Screen4ViewBase() :
 80041d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80041d8:	4604      	mov	r4, r0
 80041da:	b093      	sub	sp, #76	@ 0x4c
    flexButtonCallback(this, &Screen4ViewBase::flexButtonCallbackHandler)
 80041dc:	46a2      	mov	sl, r4
 80041de:	2500      	movs	r5, #0
 80041e0:	f00f fdd6 	bl	8013d90 <_ZN8touchgfx6ScreenC1Ev>
 80041e4:	4b71      	ldr	r3, [pc, #452]	@ (80043ac <_ZN15Screen4ViewBaseC1Ev+0x1d8>)
 80041e6:	63e5      	str	r5, [r4, #60]	@ 0x3c
 80041e8:	f84a 3b40 	str.w	r3, [sl], #64
 80041ec:	f104 0b6c 	add.w	fp, r4, #108	@ 0x6c
 80041f0:	4650      	mov	r0, sl
 80041f2:	f7ff f909 	bl	8003408 <_ZN8touchgfx3BoxC1Ev>
 80041f6:	f104 0998 	add.w	r9, r4, #152	@ 0x98
 80041fa:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 80041fe:	a910      	add	r1, sp, #64	@ 0x40
 8004200:	4658      	mov	r0, fp
 8004202:	f504 7888 	add.w	r8, r4, #272	@ 0x110
 8004206:	f8ad 6040 	strh.w	r6, [sp, #64]	@ 0x40
 800420a:	f7ff f911 	bl	8003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800420e:	4648      	mov	r0, r9
 8004210:	f7ff f950 	bl	80034b4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8004214:	4640      	mov	r0, r8
 8004216:	f7ff f92b 	bl	8003470 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800421a:	f504 73ae 	add.w	r3, r4, #348	@ 0x15c
 800421e:	a910      	add	r1, sp, #64	@ 0x40
 8004220:	4618      	mov	r0, r3
 8004222:	f504 77c4 	add.w	r7, r4, #392	@ 0x188
 8004226:	9308      	str	r3, [sp, #32]
 8004228:	f8ad 6040 	strh.w	r6, [sp, #64]	@ 0x40
 800422c:	f7ff f900 	bl	8003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004230:	4638      	mov	r0, r7
 8004232:	f7ff f91d 	bl	8003470 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004236:	f504 73ea 	add.w	r3, r4, #468	@ 0x1d4
 800423a:	a910      	add	r1, sp, #64	@ 0x40
 800423c:	4618      	mov	r0, r3
 800423e:	9309      	str	r3, [sp, #36]	@ 0x24
 8004240:	f8ad 6040 	strh.w	r6, [sp, #64]	@ 0x40
 8004244:	f7ff f8f4 	bl	8003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004248:	f504 7300 	add.w	r3, r4, #512	@ 0x200
 800424c:	a910      	add	r1, sp, #64	@ 0x40
 800424e:	4618      	mov	r0, r3
 8004250:	930a      	str	r3, [sp, #40]	@ 0x28
 8004252:	f8ad 6040 	strh.w	r6, [sp, #64]	@ 0x40
 8004256:	f7ff f8eb 	bl	8003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800425a:	f504 730b 	add.w	r3, r4, #556	@ 0x22c
 800425e:	4618      	mov	r0, r3
 8004260:	9303      	str	r3, [sp, #12]
 8004262:	f7ff f927 	bl	80034b4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8004266:	f504 7329 	add.w	r3, r4, #676	@ 0x2a4
 800426a:	4618      	mov	r0, r3
 800426c:	9304      	str	r3, [sp, #16]
 800426e:	f7ff f921 	bl	80034b4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8004272:	f504 7347 	add.w	r3, r4, #796	@ 0x31c
 8004276:	4618      	mov	r0, r3
 8004278:	9305      	str	r3, [sp, #20]
 800427a:	f7ff f91b 	bl	80034b4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800427e:	f504 7365 	add.w	r3, r4, #916	@ 0x394
 8004282:	4618      	mov	r0, r3
 8004284:	9306      	str	r3, [sp, #24]
 8004286:	f7ff f915 	bl	80034b4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800428a:	f204 430c 	addw	r3, r4, #1036	@ 0x40c
 800428e:	4618      	mov	r0, r3
 8004290:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004292:	f7ff f8ed 	bl	8003470 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8004296:	4b46      	ldr	r3, [pc, #280]	@ (80043b0 <_ZN15Screen4ViewBaseC1Ev+0x1dc>)
 8004298:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
 800429c:	4b45      	ldr	r3, [pc, #276]	@ (80043b4 <_ZN15Screen4ViewBaseC1Ev+0x1e0>)
 800429e:	f8c4 3460 	str.w	r3, [r4, #1120]	@ 0x460
    __background.setPosition(0, 0, 240, 320);
 80042a2:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80042a6:	462a      	mov	r2, r5
 80042a8:	4650      	mov	r0, sl
 80042aa:	f8c4 445c 	str.w	r4, [r4, #1116]	@ 0x45c
 80042ae:	f8c4 5464 	str.w	r5, [r4, #1124]	@ 0x464
 80042b2:	4629      	mov	r1, r5
 80042b4:	9300      	str	r3, [sp, #0]
 80042b6:	23f0      	movs	r3, #240	@ 0xf0
 80042b8:	f7ff f880 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
 80042bc:	1d26      	adds	r6, r4, #4
 80042be:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80042c2:	66a3      	str	r3, [r4, #104]	@ 0x68
 80042c4:	4651      	mov	r1, sl
 80042c6:	4630      	mov	r0, r6
 80042c8:	f008 f86a 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80042cc:	462a      	mov	r2, r5
 80042ce:	4658      	mov	r0, fp
 80042d0:	4629      	mov	r1, r5
 80042d2:	f7ff f866 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
 80042d6:	2310      	movs	r3, #16
    image1.setBitmap(touchgfx::Bitmap(BITMAP_PLAY_SCREEN_MIN_ID));
 80042d8:	4658      	mov	r0, fp
 80042da:	a910      	add	r1, sp, #64	@ 0x40
 80042dc:	f8ad 3040 	strh.w	r3, [sp, #64]	@ 0x40
 80042e0:	f04f 0a2b 	mov.w	sl, #43	@ 0x2b
 80042e4:	f00b f954 	bl	800f590 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80042e8:	4659      	mov	r1, fp
 80042ea:	4630      	mov	r0, r6
 80042ec:	f008 f858 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80042f0:	f8cd a000 	str.w	sl, [sp]
 80042f4:	2329      	movs	r3, #41	@ 0x29
 80042f6:	462a      	mov	r2, r5
 80042f8:	4629      	mov	r1, r5
 80042fa:	f104 00cc 	add.w	r0, r4, #204	@ 0xcc
 80042fe:	f7ff f85d 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8004302:	4b2d      	ldr	r3, [pc, #180]	@ (80043b8 <_ZN15Screen4ViewBaseC1Ev+0x1e4>)
 8004304:	4a2d      	ldr	r2, [pc, #180]	@ (80043bc <_ZN15Screen4ViewBaseC1Ev+0x1e8>)
 8004306:	492e      	ldr	r1, [pc, #184]	@ (80043c0 <_ZN15Screen4ViewBaseC1Ev+0x1ec>)
 8004308:	f04f 0b05 	mov.w	fp, #5
 800430c:	f8a4 b0fc 	strh.w	fp, [r4, #252]	@ 0xfc
 8004310:	9300      	str	r3, [sp, #0]
 8004312:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 8004316:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 800431a:	4648      	mov	r0, r9
 800431c:	f7ff fc86 	bl	8003c2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1.setAlpha(0);
 8004320:	4648      	mov	r0, r9
 8004322:	4629      	mov	r1, r5
 8004324:	f7ff f89e 	bl	8003464 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    flexButton1.setAction(flexButtonCallback);
 8004328:	f504 638b 	add.w	r3, r4, #1112	@ 0x458
 800432c:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
    flexButton1.setPosition(185, 271, 41, 43);
 8004330:	f240 120f 	movw	r2, #271	@ 0x10f
 8004334:	4648      	mov	r0, r9
    flexButton1.setAction(flexButtonCallback);
 8004336:	9307      	str	r3, [sp, #28]
    flexButton1.setPosition(185, 271, 41, 43);
 8004338:	f8cd a000 	str.w	sl, [sp]
 800433c:	2329      	movs	r3, #41	@ 0x29
 800433e:	21b9      	movs	r1, #185	@ 0xb9
 8004340:	f7ff f83c 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
 8004344:	4649      	mov	r1, r9
 8004346:	4630      	mov	r0, r6
 8004348:	f008 f82a 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setPosition(119, 190, 172, 30);
 800434c:	231e      	movs	r3, #30
 800434e:	22be      	movs	r2, #190	@ 0xbe
 8004350:	9300      	str	r3, [sp, #0]
 8004352:	2177      	movs	r1, #119	@ 0x77
 8004354:	23ac      	movs	r3, #172	@ 0xac
 8004356:	4640      	mov	r0, r8
 8004358:	f7ff f830 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800435c:	f04f 33ff 	mov.w	r3, #4294967295
 8004360:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
        boundingArea = calculateBoundingArea();
 8004364:	f8d4 3110 	ldr.w	r3, [r4, #272]	@ 0x110
        linespace = space;
 8004368:	f8a4 5144 	strh.w	r5, [r4, #324]	@ 0x144
        boundingArea = calculateBoundingArea();
 800436c:	f10d 0930 	add.w	r9, sp, #48	@ 0x30
 8004370:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004374:	f8df a060 	ldr.w	sl, [pc, #96]	@ 80043d8 <_ZN15Screen4ViewBaseC1Ev+0x204>
 8004378:	4641      	mov	r1, r8
 800437a:	4648      	mov	r0, r9
 800437c:	4798      	blx	r3
 800437e:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8004382:	f504 73a6 	add.w	r3, r4, #332	@ 0x14c
 8004386:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800438a:	f8da 3000 	ldr.w	r3, [sl]
 800438e:	b92b      	cbnz	r3, 800439c <_ZN15Screen4ViewBaseC1Ev+0x1c8>
 8004390:	4b0c      	ldr	r3, [pc, #48]	@ (80043c4 <_ZN15Screen4ViewBaseC1Ev+0x1f0>)
 8004392:	4a0d      	ldr	r2, [pc, #52]	@ (80043c8 <_ZN15Screen4ViewBaseC1Ev+0x1f4>)
 8004394:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004396:	480d      	ldr	r0, [pc, #52]	@ (80043cc <_ZN15Screen4ViewBaseC1Ev+0x1f8>)
 8004398:	f021 fa04 	bl	80257a4 <__assert_func>
 800439c:	4b0c      	ldr	r3, [pc, #48]	@ (80043d0 <_ZN15Screen4ViewBaseC1Ev+0x1fc>)
 800439e:	881b      	ldrh	r3, [r3, #0]
 80043a0:	2b06      	cmp	r3, #6
 80043a2:	d81b      	bhi.n	80043dc <_ZN15Screen4ViewBaseC1Ev+0x208>
 80043a4:	4b0b      	ldr	r3, [pc, #44]	@ (80043d4 <_ZN15Screen4ViewBaseC1Ev+0x200>)
 80043a6:	4a08      	ldr	r2, [pc, #32]	@ (80043c8 <_ZN15Screen4ViewBaseC1Ev+0x1f4>)
 80043a8:	2161      	movs	r1, #97	@ 0x61
 80043aa:	e7f4      	b.n	8004396 <_ZN15Screen4ViewBaseC1Ev+0x1c2>
 80043ac:	080280f8 	.word	0x080280f8
 80043b0:	080280e0 	.word	0x080280e0
 80043b4:	08004179 	.word	0x08004179
 80043b8:	ff336699 	.word	0xff336699
 80043bc:	ff0099cc 	.word	0xff0099cc
 80043c0:	ff006699 	.word	0xff006699
 80043c4:	08027402 	.word	0x08027402
 80043c8:	08027504 	.word	0x08027504
 80043cc:	0802747f 	.word	0x0802747f
 80043d0:	20015348 	.word	0x20015348
 80043d4:	080274c6 	.word	0x080274c6
 80043d8:	20015344 	.word	0x20015344
        return texts->getText(typedTextId);
 80043dc:	4bae      	ldr	r3, [pc, #696]	@ (8004698 <_ZN15Screen4ViewBaseC1Ev+0x4c4>)
 80043de:	2106      	movs	r1, #6
 80043e0:	6818      	ldr	r0, [r3, #0]
 80043e2:	f000 fbdb 	bl	8004b9c <_ZNK8touchgfx5Texts7getTextEt>
        : typedTextId(id)
 80043e6:	2307      	movs	r3, #7
 80043e8:	4aac      	ldr	r2, [pc, #688]	@ (800469c <_ZN15Screen4ViewBaseC1Ev+0x4c8>)
 80043ea:	f8c4 0158 	str.w	r0, [r4, #344]	@ 0x158
    textArea1.setTypedText(touchgfx::TypedText(T_MAN4));
 80043ee:	a910      	add	r1, sp, #64	@ 0x40
 80043f0:	4640      	mov	r0, r8
 80043f2:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 80043f6:	9210      	str	r2, [sp, #64]	@ 0x40
 80043f8:	f00a ff6e 	bl	800f2d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80043fc:	4641      	mov	r1, r8
 80043fe:	4630      	mov	r0, r6
 8004400:	f007 ffce 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image4.setXY(168, 0);
 8004404:	462a      	mov	r2, r5
 8004406:	9808      	ldr	r0, [sp, #32]
 8004408:	21a8      	movs	r1, #168	@ 0xa8
 800440a:	f7fe ffca 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
 800440e:	230c      	movs	r3, #12
    image4.setBitmap(touchgfx::Bitmap(BITMAP_LV2_ID));
 8004410:	9808      	ldr	r0, [sp, #32]
 8004412:	f8ad 3040 	strh.w	r3, [sp, #64]	@ 0x40
 8004416:	a910      	add	r1, sp, #64	@ 0x40
 8004418:	f00b f8ba 	bl	800f590 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800441c:	9908      	ldr	r1, [sp, #32]
 800441e:	4630      	mov	r0, r6
 8004420:	f007 ffbe 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(140, 54);
 8004424:	2236      	movs	r2, #54	@ 0x36
 8004426:	218c      	movs	r1, #140	@ 0x8c
 8004428:	4638      	mov	r0, r7
 800442a:	f7fe ffba 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
 800442e:	f8d4 3188 	ldr.w	r3, [r4, #392]	@ 0x188
        linespace = space;
 8004432:	f8a4 51bc 	strh.w	r5, [r4, #444]	@ 0x1bc
        color = newColor;
 8004436:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 800443a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 800443e:	f8c4 11b8 	str.w	r1, [r4, #440]	@ 0x1b8
        boundingArea = calculateBoundingArea();
 8004442:	4648      	mov	r0, r9
 8004444:	4639      	mov	r1, r7
 8004446:	4798      	blx	r3
 8004448:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 800444c:	f504 73e2 	add.w	r3, r4, #452	@ 0x1c4
 8004450:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004454:	f8da 3000 	ldr.w	r3, [sl]
 8004458:	2b00      	cmp	r3, #0
 800445a:	d099      	beq.n	8004390 <_ZN15Screen4ViewBaseC1Ev+0x1bc>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800445c:	4990      	ldr	r1, [pc, #576]	@ (80046a0 <_ZN15Screen4ViewBaseC1Ev+0x4cc>)
 800445e:	880b      	ldrh	r3, [r1, #0]
 8004460:	2b00      	cmp	r3, #0
 8004462:	d09f      	beq.n	80043a4 <_ZN15Screen4ViewBaseC1Ev+0x1d0>
        return texts->getText(typedTextId);
 8004464:	4b8c      	ldr	r3, [pc, #560]	@ (8004698 <_ZN15Screen4ViewBaseC1Ev+0x4c4>)
 8004466:	4629      	mov	r1, r5
 8004468:	6818      	ldr	r0, [r3, #0]
 800446a:	f000 fb97 	bl	8004b9c <_ZNK8touchgfx5Texts7getTextEt>
 800446e:	f8c4 01d0 	str.w	r0, [r4, #464]	@ 0x1d0
    textArea3.resizeToCurrentText();
 8004472:	4638      	mov	r0, r7
 8004474:	f00a ff10 	bl	800f298 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    textArea3.setTypedText(touchgfx::TypedText(T_TARGET4));
 8004478:	a810      	add	r0, sp, #64	@ 0x40
        : typedTextId(id)
 800447a:	2301      	movs	r3, #1
 800447c:	4a87      	ldr	r2, [pc, #540]	@ (800469c <_ZN15Screen4ViewBaseC1Ev+0x4c8>)
 800447e:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8004482:	4601      	mov	r1, r0
 8004484:	4638      	mov	r0, r7
 8004486:	9210      	str	r2, [sp, #64]	@ 0x40
 8004488:	f00a ff26 	bl	800f2d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800448c:	4639      	mov	r1, r7
 800448e:	4630      	mov	r0, r6
 8004490:	f007 ff86 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2.setXY(0, 0);
 8004494:	462a      	mov	r2, r5
 8004496:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004498:	4629      	mov	r1, r5
 800449a:	f7fe ff82 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_SCORE_ID));
 800449e:	a810      	add	r0, sp, #64	@ 0x40
 80044a0:	2315      	movs	r3, #21
 80044a2:	4601      	mov	r1, r0
 80044a4:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80044a6:	f8ad 3040 	strh.w	r3, [sp, #64]	@ 0x40
 80044aa:	f00b f871 	bl	800f590 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80044ae:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80044b0:	f884 51f9 	strb.w	r5, [r4, #505]	@ 0x1f9
 80044b4:	4630      	mov	r0, r6
 80044b6:	f007 ff73 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image3.setXY(0, 0);
 80044ba:	462a      	mov	r2, r5
 80044bc:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80044be:	4629      	mov	r1, r5
 80044c0:	f7fe ff6f 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
    image3.setBitmap(touchgfx::Bitmap(BITMAP_NEXT_LEVEL_ID));
 80044c4:	a810      	add	r0, sp, #64	@ 0x40
 80044c6:	230d      	movs	r3, #13
 80044c8:	4601      	mov	r1, r0
 80044ca:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80044cc:	f8ad 3040 	strh.w	r3, [sp, #64]	@ 0x40
 80044d0:	271f      	movs	r7, #31
 80044d2:	f00b f85d 	bl	800f590 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80044d6:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80044d8:	f884 5225 	strb.w	r5, [r4, #549]	@ 0x225
 80044dc:	4630      	mov	r0, r6
 80044de:	f007 ff5f 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80044e2:	2341      	movs	r3, #65	@ 0x41
 80044e4:	462a      	mov	r2, r5
 80044e6:	4629      	mov	r1, r5
 80044e8:	f504 7018 	add.w	r0, r4, #608	@ 0x260
 80044ec:	9700      	str	r7, [sp, #0]
 80044ee:	f7fe ff65 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80044f2:	4b6c      	ldr	r3, [pc, #432]	@ (80046a4 <_ZN15Screen4ViewBaseC1Ev+0x4d0>)
 80044f4:	f8a4 b290 	strh.w	fp, [r4, #656]	@ 0x290
 80044f8:	9300      	str	r3, [sp, #0]
 80044fa:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 80044fe:	4a6a      	ldr	r2, [pc, #424]	@ (80046a8 <_ZN15Screen4ViewBaseC1Ev+0x4d4>)
 8004500:	496a      	ldr	r1, [pc, #424]	@ (80046ac <_ZN15Screen4ViewBaseC1Ev+0x4d8>)
 8004502:	9803      	ldr	r0, [sp, #12]
 8004504:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 8004508:	f7ff fb90 	bl	8003c2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton2.setAlpha(0);
 800450c:	9803      	ldr	r0, [sp, #12]
 800450e:	4629      	mov	r1, r5
 8004510:	f7fe ffa8 	bl	8003464 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
 8004514:	9807      	ldr	r0, [sp, #28]
 8004516:	f8c4 025c 	str.w	r0, [r4, #604]	@ 0x25c
    flexButton2.setPosition(42, 127, 65, 31);
 800451a:	2341      	movs	r3, #65	@ 0x41
 800451c:	227f      	movs	r2, #127	@ 0x7f
 800451e:	9803      	ldr	r0, [sp, #12]
 8004520:	f884 5251 	strb.w	r5, [r4, #593]	@ 0x251
 8004524:	212a      	movs	r1, #42	@ 0x2a
 8004526:	9700      	str	r7, [sp, #0]
 8004528:	f7fe ff48 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
 800452c:	9903      	ldr	r1, [sp, #12]
 800452e:	4630      	mov	r0, r6
 8004530:	f007 ff36 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004534:	2341      	movs	r3, #65	@ 0x41
 8004536:	462a      	mov	r2, r5
 8004538:	4629      	mov	r1, r5
 800453a:	f504 7036 	add.w	r0, r4, #728	@ 0x2d8
 800453e:	9700      	str	r7, [sp, #0]
 8004540:	f7fe ff3c 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8004544:	4b57      	ldr	r3, [pc, #348]	@ (80046a4 <_ZN15Screen4ViewBaseC1Ev+0x4d0>)
 8004546:	f8a4 b308 	strh.w	fp, [r4, #776]	@ 0x308
 800454a:	9300      	str	r3, [sp, #0]
 800454c:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 8004550:	4a55      	ldr	r2, [pc, #340]	@ (80046a8 <_ZN15Screen4ViewBaseC1Ev+0x4d4>)
 8004552:	4956      	ldr	r1, [pc, #344]	@ (80046ac <_ZN15Screen4ViewBaseC1Ev+0x4d8>)
 8004554:	9804      	ldr	r0, [sp, #16]
 8004556:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 800455a:	f7ff fb67 	bl	8003c2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton3.setAlpha(0);
 800455e:	9804      	ldr	r0, [sp, #16]
 8004560:	4629      	mov	r1, r5
 8004562:	f7fe ff7f 	bl	8003464 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
 8004566:	9807      	ldr	r0, [sp, #28]
 8004568:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
    flexButton3.setPosition(133, 127, 65, 31);
 800456c:	2341      	movs	r3, #65	@ 0x41
 800456e:	227f      	movs	r2, #127	@ 0x7f
 8004570:	9804      	ldr	r0, [sp, #16]
 8004572:	f884 52c9 	strb.w	r5, [r4, #713]	@ 0x2c9
 8004576:	2185      	movs	r1, #133	@ 0x85
 8004578:	9700      	str	r7, [sp, #0]
 800457a:	f7fe ff1f 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
 800457e:	9904      	ldr	r1, [sp, #16]
 8004580:	4630      	mov	r0, r6
 8004582:	f007 ff0d 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004586:	2341      	movs	r3, #65	@ 0x41
 8004588:	462a      	mov	r2, r5
 800458a:	4629      	mov	r1, r5
 800458c:	f504 7054 	add.w	r0, r4, #848	@ 0x350
 8004590:	9700      	str	r7, [sp, #0]
 8004592:	f7fe ff13 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8004596:	4b43      	ldr	r3, [pc, #268]	@ (80046a4 <_ZN15Screen4ViewBaseC1Ev+0x4d0>)
 8004598:	f8a4 b380 	strh.w	fp, [r4, #896]	@ 0x380
 800459c:	9300      	str	r3, [sp, #0]
 800459e:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 80045a2:	4a41      	ldr	r2, [pc, #260]	@ (80046a8 <_ZN15Screen4ViewBaseC1Ev+0x4d4>)
 80045a4:	4941      	ldr	r1, [pc, #260]	@ (80046ac <_ZN15Screen4ViewBaseC1Ev+0x4d8>)
 80045a6:	9805      	ldr	r0, [sp, #20]
 80045a8:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 80045ac:	f7ff fb3e 	bl	8003c2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton4.setAlpha(0);
 80045b0:	9805      	ldr	r0, [sp, #20]
 80045b2:	4629      	mov	r1, r5
 80045b4:	f7fe ff56 	bl	8003464 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
 80045b8:	9807      	ldr	r0, [sp, #28]
 80045ba:	f8c4 034c 	str.w	r0, [r4, #844]	@ 0x34c
    flexButton4.setPosition(38, 121, 65, 31);
 80045be:	2341      	movs	r3, #65	@ 0x41
 80045c0:	2279      	movs	r2, #121	@ 0x79
 80045c2:	9805      	ldr	r0, [sp, #20]
 80045c4:	f884 5341 	strb.w	r5, [r4, #833]	@ 0x341
 80045c8:	2126      	movs	r1, #38	@ 0x26
 80045ca:	9700      	str	r7, [sp, #0]
 80045cc:	f7fe fef6 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
 80045d0:	9905      	ldr	r1, [sp, #20]
 80045d2:	4630      	mov	r0, r6
 80045d4:	f007 fee4 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80045d8:	2341      	movs	r3, #65	@ 0x41
 80045da:	462a      	mov	r2, r5
 80045dc:	4629      	mov	r1, r5
 80045de:	f504 7072 	add.w	r0, r4, #968	@ 0x3c8
 80045e2:	9700      	str	r7, [sp, #0]
 80045e4:	f7fe feea 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80045e8:	4b2e      	ldr	r3, [pc, #184]	@ (80046a4 <_ZN15Screen4ViewBaseC1Ev+0x4d0>)
 80045ea:	f8a4 b3f8 	strh.w	fp, [r4, #1016]	@ 0x3f8
 80045ee:	9300      	str	r3, [sp, #0]
 80045f0:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 80045f4:	4a2c      	ldr	r2, [pc, #176]	@ (80046a8 <_ZN15Screen4ViewBaseC1Ev+0x4d4>)
 80045f6:	492d      	ldr	r1, [pc, #180]	@ (80046ac <_ZN15Screen4ViewBaseC1Ev+0x4d8>)
 80045f8:	9806      	ldr	r0, [sp, #24]
 80045fa:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 80045fe:	f7ff fb15 	bl	8003c2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton5.setAlpha(0);
 8004602:	9806      	ldr	r0, [sp, #24]
 8004604:	4629      	mov	r1, r5
 8004606:	f7fe ff2d 	bl	8003464 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
 800460a:	9807      	ldr	r0, [sp, #28]
 800460c:	f8c4 03c4 	str.w	r0, [r4, #964]	@ 0x3c4
    flexButton5.setPosition(142, 121, 65, 31);
 8004610:	2341      	movs	r3, #65	@ 0x41
 8004612:	2279      	movs	r2, #121	@ 0x79
 8004614:	9806      	ldr	r0, [sp, #24]
 8004616:	f884 53b9 	strb.w	r5, [r4, #953]	@ 0x3b9
 800461a:	218e      	movs	r1, #142	@ 0x8e
 800461c:	9700      	str	r7, [sp, #0]
 800461e:	f7fe fecd 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
 8004622:	9906      	ldr	r1, [sp, #24]
 8004624:	4630      	mov	r0, r6
 8004626:	f007 febb 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setPosition(55, 99, 130, 20);
 800462a:	2314      	movs	r3, #20
 800462c:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800462e:	9300      	str	r3, [sp, #0]
 8004630:	2263      	movs	r2, #99	@ 0x63
 8004632:	2382      	movs	r3, #130	@ 0x82
 8004634:	2137      	movs	r1, #55	@ 0x37
 8004636:	f7fe fec1 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800463a:	f8da 3000 	ldr.w	r3, [sl]
        linespace = space;
 800463e:	f8a4 5440 	strh.w	r5, [r4, #1088]	@ 0x440
        color = newColor;
 8004642:	f04f 30ff 	mov.w	r0, #4294967295
 8004646:	f8c4 043c 	str.w	r0, [r4, #1084]	@ 0x43c
        boundingArea = calculateBoundingArea();
 800464a:	f8c4 5448 	str.w	r5, [r4, #1096]	@ 0x448
 800464e:	f8c4 044c 	str.w	r0, [r4, #1100]	@ 0x44c
 8004652:	f8c4 5450 	str.w	r5, [r4, #1104]	@ 0x450
 8004656:	2b00      	cmp	r3, #0
 8004658:	f43f ae9a 	beq.w	8004390 <_ZN15Screen4ViewBaseC1Ev+0x1bc>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800465c:	4910      	ldr	r1, [pc, #64]	@ (80046a0 <_ZN15Screen4ViewBaseC1Ev+0x4cc>)
 800465e:	880b      	ldrh	r3, [r1, #0]
 8004660:	2b04      	cmp	r3, #4
 8004662:	f67f ae9f 	bls.w	80043a4 <_ZN15Screen4ViewBaseC1Ev+0x1d0>
        return texts->getText(typedTextId);
 8004666:	4b0c      	ldr	r3, [pc, #48]	@ (8004698 <_ZN15Screen4ViewBaseC1Ev+0x4c4>)
 8004668:	2104      	movs	r1, #4
 800466a:	6818      	ldr	r0, [r3, #0]
 800466c:	f000 fa96 	bl	8004b9c <_ZNK8touchgfx5Texts7getTextEt>
        : typedTextId(id)
 8004670:	4a0a      	ldr	r2, [pc, #40]	@ (800469c <_ZN15Screen4ViewBaseC1Ev+0x4c8>)
 8004672:	f8c4 0454 	str.w	r0, [r4, #1108]	@ 0x454
    textArea2.setTypedText(touchgfx::TypedText(T_MAN4SCORE));
 8004676:	a910      	add	r1, sp, #64	@ 0x40
 8004678:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800467a:	9210      	str	r2, [sp, #64]	@ 0x40
 800467c:	f8ad b044 	strh.w	fp, [sp, #68]	@ 0x44
 8004680:	f00a fe2a 	bl	800f2d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004684:	4630      	mov	r0, r6
 8004686:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8004688:	f884 5431 	strb.w	r5, [r4, #1073]	@ 0x431
 800468c:	f007 fe88 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004690:	4620      	mov	r0, r4
 8004692:	b013      	add	sp, #76	@ 0x4c
 8004694:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004698:	20015350 	.word	0x20015350
 800469c:	08027d58 	.word	0x08027d58
 80046a0:	20015348 	.word	0x20015348
 80046a4:	ff336699 	.word	0xff336699
 80046a8:	ff0099cc 	.word	0xff0099cc
 80046ac:	ff006699 	.word	0xff006699

080046b0 <_ZN8touchgfx8CallbackI18ScreenWaitViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80046b0:	4770      	bx	lr

080046b2 <_ZN18ScreenWaitViewBaseD1Ev>:
}

ScreenWaitViewBase::~ScreenWaitViewBase()
{

}
 80046b2:	4770      	bx	lr

080046b4 <_ZN18ScreenWaitViewBase11setupScreenEv>:

void ScreenWaitViewBase::setupScreen()
{

}
 80046b4:	4770      	bx	lr

080046b6 <_ZN8touchgfx8CallbackI18ScreenWaitViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80046b6:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80046b8:	68c2      	ldr	r2, [r0, #12]
 80046ba:	6844      	ldr	r4, [r0, #4]
 80046bc:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80046be:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80046c0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80046c4:	07d2      	lsls	r2, r2, #31
 80046c6:	bf48      	it	mi
 80046c8:	5962      	ldrmi	r2, [r4, r5]
 80046ca:	689b      	ldr	r3, [r3, #8]
    }
 80046cc:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80046ce:	bf48      	it	mi
 80046d0:	58d3      	ldrmi	r3, [r2, r3]
 80046d2:	4718      	bx	r3

080046d4 <_ZNK8touchgfx8CallbackI18ScreenWaitViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 80046d4:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 80046d6:	6840      	ldr	r0, [r0, #4]
 80046d8:	b130      	cbz	r0, 80046e8 <_ZNK8touchgfx8CallbackI18ScreenWaitViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80046da:	689a      	ldr	r2, [r3, #8]
 80046dc:	b91a      	cbnz	r2, 80046e6 <_ZNK8touchgfx8CallbackI18ScreenWaitViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 80046de:	68d8      	ldr	r0, [r3, #12]
 80046e0:	f000 0001 	and.w	r0, r0, #1
 80046e4:	4770      	bx	lr
 80046e6:	2001      	movs	r0, #1
    }
 80046e8:	4770      	bx	lr

080046ea <_ZN8touchgfx8CallbackI18ScreenWaitViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80046ea:	b510      	push	{r4, lr}
 80046ec:	2110      	movs	r1, #16
 80046ee:	4604      	mov	r4, r0
 80046f0:	f020 f91b 	bl	802492a <_ZdlPvj>
 80046f4:	4620      	mov	r0, r4
 80046f6:	bd10      	pop	{r4, pc}

080046f8 <_ZN18ScreenWaitViewBaseD0Ev>:
ScreenWaitViewBase::~ScreenWaitViewBase()
 80046f8:	b510      	push	{r4, lr}
}
 80046fa:	f44f 71cc 	mov.w	r1, #408	@ 0x198
ScreenWaitViewBase::~ScreenWaitViewBase()
 80046fe:	4604      	mov	r4, r0
}
 8004700:	f020 f913 	bl	802492a <_ZdlPvj>
 8004704:	4620      	mov	r0, r4
 8004706:	bd10      	pop	{r4, pc}

08004708 <_ZN18ScreenWaitViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void ScreenWaitViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 8004708:	b538      	push	{r3, r4, r5, lr}
    if (&src == &flexButton1)
 800470a:	f100 0398 	add.w	r3, r0, #152	@ 0x98
 800470e:	4299      	cmp	r1, r3
{
 8004710:	4604      	mov	r4, r0
 8004712:	460d      	mov	r5, r1
    if (&src == &flexButton1)
 8004714:	d103      	bne.n	800471e <_ZN18ScreenWaitViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~ScreenWaitViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8004716:	f00d fb37 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When flexButton1 clicked change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
 800471a:	f7fe f941 	bl	80029a0 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    }
    if (&src == &flexButton2)
 800471e:	f504 7488 	add.w	r4, r4, #272	@ 0x110
 8004722:	42a5      	cmp	r5, r4
 8004724:	d105      	bne.n	8004732 <_ZN18ScreenWaitViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
 8004726:	f00d fb2f 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction2
        //When flexButton2 clicked change screen to Screen3
        //Go to Screen3 with no screen transition
        application().gotoScreen3ScreenNoTransition();
    }
}
 800472a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoScreen3ScreenNoTransition();
 800472e:	f7fe b947 	b.w	80029c0 <_ZN23FrontendApplicationBase29gotoScreen3ScreenNoTransitionEv>
}
 8004732:	bd38      	pop	{r3, r4, r5, pc}

08004734 <_ZN18ScreenWaitViewBaseC1Ev>:
ScreenWaitViewBase::ScreenWaitViewBase() :
 8004734:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004738:	4604      	mov	r4, r0
 800473a:	b085      	sub	sp, #20
    flexButtonCallback(this, &ScreenWaitViewBase::flexButtonCallbackHandler)
 800473c:	46a2      	mov	sl, r4
 800473e:	2500      	movs	r5, #0
 8004740:	f00f fb26 	bl	8013d90 <_ZN8touchgfx6ScreenC1Ev>
 8004744:	4b5a      	ldr	r3, [pc, #360]	@ (80048b0 <_ZN18ScreenWaitViewBaseC1Ev+0x17c>)
 8004746:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8004748:	f84a 3b40 	str.w	r3, [sl], #64
 800474c:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 8004750:	4650      	mov	r0, sl
 8004752:	f7fe fe59 	bl	8003408 <_ZN8touchgfx3BoxC1Ev>
 8004756:	f64f 76ff 	movw	r6, #65535	@ 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 800475a:	2226      	movs	r2, #38	@ 0x26
 800475c:	4629      	mov	r1, r5
 800475e:	4648      	mov	r0, r9
 8004760:	f8ad 600c 	strh.w	r6, [sp, #12]
 8004764:	f021 fa25 	bl	8025bb2 <memset>
 8004768:	4648      	mov	r0, r9
 800476a:	f7ff f8cd 	bl	8003908 <_ZN8touchgfx8DrawableC1Ev>
 800476e:	4b51      	ldr	r3, [pc, #324]	@ (80048b4 <_ZN18ScreenWaitViewBaseC1Ev+0x180>)
 8004770:	66e3      	str	r3, [r4, #108]	@ 0x6c
 8004772:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8004776:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
 800477a:	f104 0798 	add.w	r7, r4, #152	@ 0x98
        Image::setBitmap(bmp);
 800477e:	a903      	add	r1, sp, #12
        : Widget(), bitmap(bmp), alpha(255)
 8004780:	f884 6094 	strb.w	r6, [r4, #148]	@ 0x94
        Image::setBitmap(bmp);
 8004784:	4648      	mov	r0, r9
 8004786:	f00a ff03 	bl	800f590 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800478a:	f504 7688 	add.w	r6, r4, #272	@ 0x110
 800478e:	4638      	mov	r0, r7
 8004790:	f7fe fe90 	bl	80034b4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8004794:	4630      	mov	r0, r6
 8004796:	f7fe fe8d 	bl	80034b4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800479a:	4b47      	ldr	r3, [pc, #284]	@ (80048b8 <_ZN18ScreenWaitViewBaseC1Ev+0x184>)
 800479c:	e9c4 3462 	strd	r3, r4, [r4, #392]	@ 0x188
 80047a0:	4b46      	ldr	r3, [pc, #280]	@ (80048bc <_ZN18ScreenWaitViewBaseC1Ev+0x188>)
 80047a2:	e9c4 3564 	strd	r3, r5, [r4, #400]	@ 0x190
    __background.setPosition(0, 0, 240, 320);
 80047a6:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80047aa:	462a      	mov	r2, r5
 80047ac:	9300      	str	r3, [sp, #0]
 80047ae:	4629      	mov	r1, r5
 80047b0:	4650      	mov	r0, sl
 80047b2:	23f0      	movs	r3, #240	@ 0xf0
 80047b4:	f7fe fe02 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
 80047b8:	f104 0804 	add.w	r8, r4, #4
 80047bc:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80047c0:	66a3      	str	r3, [r4, #104]	@ 0x68
 80047c2:	4651      	mov	r1, sl
 80047c4:	4640      	mov	r0, r8
 80047c6:	f007 fdeb 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80047ca:	462a      	mov	r2, r5
 80047cc:	4629      	mov	r1, r5
 80047ce:	4648      	mov	r0, r9
 80047d0:	f7fe fde7 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
 80047d4:	2307      	movs	r3, #7
    image1.setBitmap(touchgfx::Bitmap(BITMAP_CHOOSE_MODE_QUES_ID));
 80047d6:	a903      	add	r1, sp, #12
 80047d8:	4648      	mov	r0, r9
 80047da:	f8ad 300c 	strh.w	r3, [sp, #12]
 80047de:	f00a fed7 	bl	800f590 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80047e2:	4649      	mov	r1, r9
 80047e4:	4640      	mov	r0, r8
 80047e6:	f04f 091d 	mov.w	r9, #29
 80047ea:	f007 fdd9 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80047ee:	462a      	mov	r2, r5
 80047f0:	4629      	mov	r1, r5
 80047f2:	f104 00cc 	add.w	r0, r4, #204	@ 0xcc
 80047f6:	f8cd 9000 	str.w	r9, [sp]
 80047fa:	2346      	movs	r3, #70	@ 0x46
 80047fc:	f7fe fdde 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 8004800:	4a2f      	ldr	r2, [pc, #188]	@ (80048c0 <_ZN18ScreenWaitViewBaseC1Ev+0x18c>)
        borderDown = borderColorPressed;
 8004802:	4930      	ldr	r1, [pc, #192]	@ (80048c4 <_ZN18ScreenWaitViewBaseC1Ev+0x190>)
        down = colorPressed;
 8004804:	4b30      	ldr	r3, [pc, #192]	@ (80048c8 <_ZN18ScreenWaitViewBaseC1Ev+0x194>)
        borderDown = borderColorPressed;
 8004806:	4831      	ldr	r0, [pc, #196]	@ (80048cc <_ZN18ScreenWaitViewBaseC1Ev+0x198>)
        handlePressedUpdated();
 8004808:	f8d4 a098 	ldr.w	sl, [r4, #152]	@ 0x98
 800480c:	f04f 0b05 	mov.w	fp, #5
        down = colorPressed;
 8004810:	e9c4 3240 	strd	r3, r2, [r4, #256]	@ 0x100
        borderDown = borderColorPressed;
 8004814:	e9c4 1042 	strd	r1, r0, [r4, #264]	@ 0x108
 8004818:	f8a4 b0fc 	strh.w	fp, [r4, #252]	@ 0xfc
        handlePressedUpdated();
 800481c:	4638      	mov	r0, r7
 800481e:	f7fe fcdd 	bl	80031dc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 8004822:	f884 50c5 	strb.w	r5, [r4, #197]	@ 0xc5
        handleAlphaUpdated();
 8004826:	f8da 3090 	ldr.w	r3, [sl, #144]	@ 0x90
 800482a:	4638      	mov	r0, r7
    flexButton1.setAction(flexButtonCallback);
 800482c:	f504 7ac4 	add.w	sl, r4, #392	@ 0x188
 8004830:	4798      	blx	r3
        action = &callback;
 8004832:	f8c4 a0c8 	str.w	sl, [r4, #200]	@ 0xc8
    flexButton1.setPosition(26, 111, 70, 29);
 8004836:	2346      	movs	r3, #70	@ 0x46
 8004838:	226f      	movs	r2, #111	@ 0x6f
 800483a:	4638      	mov	r0, r7
 800483c:	f8cd 9000 	str.w	r9, [sp]
 8004840:	211a      	movs	r1, #26
 8004842:	f7fe fdbb 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
 8004846:	4639      	mov	r1, r7
 8004848:	4640      	mov	r0, r8
 800484a:	f007 fda9 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 800484e:	462a      	mov	r2, r5
 8004850:	4629      	mov	r1, r5
 8004852:	f504 70a2 	add.w	r0, r4, #324	@ 0x144
 8004856:	f8cd 9000 	str.w	r9, [sp]
 800485a:	234b      	movs	r3, #75	@ 0x4b
 800485c:	f7fe fdae 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 8004860:	4a17      	ldr	r2, [pc, #92]	@ (80048c0 <_ZN18ScreenWaitViewBaseC1Ev+0x18c>)
        borderDown = borderColorPressed;
 8004862:	4918      	ldr	r1, [pc, #96]	@ (80048c4 <_ZN18ScreenWaitViewBaseC1Ev+0x190>)
        down = colorPressed;
 8004864:	4b18      	ldr	r3, [pc, #96]	@ (80048c8 <_ZN18ScreenWaitViewBaseC1Ev+0x194>)
        borderDown = borderColorPressed;
 8004866:	4819      	ldr	r0, [pc, #100]	@ (80048cc <_ZN18ScreenWaitViewBaseC1Ev+0x198>)
        handlePressedUpdated();
 8004868:	f8d4 7110 	ldr.w	r7, [r4, #272]	@ 0x110
 800486c:	f8a4 b174 	strh.w	fp, [r4, #372]	@ 0x174
        down = colorPressed;
 8004870:	e9c4 325e 	strd	r3, r2, [r4, #376]	@ 0x178
        borderDown = borderColorPressed;
 8004874:	e9c4 1060 	strd	r1, r0, [r4, #384]	@ 0x180
        handlePressedUpdated();
 8004878:	4630      	mov	r0, r6
 800487a:	f7fe fcaf 	bl	80031dc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 800487e:	f884 513d 	strb.w	r5, [r4, #317]	@ 0x13d
        handleAlphaUpdated();
 8004882:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8004886:	4630      	mov	r0, r6
 8004888:	4798      	blx	r3
        action = &callback;
 800488a:	f8c4 a140 	str.w	sl, [r4, #320]	@ 0x140
    flexButton2.setPosition(141, 111, 75, 29);
 800488e:	234b      	movs	r3, #75	@ 0x4b
 8004890:	226f      	movs	r2, #111	@ 0x6f
 8004892:	4630      	mov	r0, r6
 8004894:	f8cd 9000 	str.w	r9, [sp]
 8004898:	218d      	movs	r1, #141	@ 0x8d
 800489a:	f7fe fd8f 	bl	80033bc <_ZN8touchgfx8Drawable11setPositionEssss>
 800489e:	4640      	mov	r0, r8
 80048a0:	4631      	mov	r1, r6
 80048a2:	f007 fd7d 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80048a6:	4620      	mov	r0, r4
 80048a8:	b005      	add	sp, #20
 80048aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80048ae:	bf00      	nop
 80048b0:	08028144 	.word	0x08028144
 80048b4:	08028ba8 	.word	0x08028ba8
 80048b8:	0802812c 	.word	0x0802812c
 80048bc:	08004709 	.word	0x08004709
 80048c0:	ff0099cc 	.word	0xff0099cc
 80048c4:	ff003366 	.word	0xff003366
 80048c8:	ff006699 	.word	0xff006699
 80048cc:	ff336699 	.word	0xff336699

080048d0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80048d0:	4770      	bx	lr
	...

080048d4 <_Z23getFont_verdana_10_4bppv>:
{
 80048d4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80048d6:	4d16      	ldr	r5, [pc, #88]	@ (8004930 <_Z23getFont_verdana_10_4bppv+0x5c>)
 80048d8:	682c      	ldr	r4, [r5, #0]
 80048da:	f014 0401 	ands.w	r4, r4, #1
{
 80048de:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80048e0:	f3bf 8f5b 	dmb	ish
 80048e4:	d120      	bne.n	8004928 <_Z23getFont_verdana_10_4bppv+0x54>
 80048e6:	4628      	mov	r0, r5
 80048e8:	f020 f821 	bl	802492e <__cxa_guard_acquire>
 80048ec:	b1e0      	cbz	r0, 8004928 <_Z23getFont_verdana_10_4bppv+0x54>
 80048ee:	233f      	movs	r3, #63	@ 0x3f
 80048f0:	9309      	str	r3, [sp, #36]	@ 0x24
 80048f2:	4b10      	ldr	r3, [pc, #64]	@ (8004934 <_Z23getFont_verdana_10_4bppv+0x60>)
 80048f4:	9308      	str	r3, [sp, #32]
 80048f6:	4b10      	ldr	r3, [pc, #64]	@ (8004938 <_Z23getFont_verdana_10_4bppv+0x64>)
 80048f8:	4910      	ldr	r1, [pc, #64]	@ (800493c <_Z23getFont_verdana_10_4bppv+0x68>)
 80048fa:	4811      	ldr	r0, [pc, #68]	@ (8004940 <_Z23getFont_verdana_10_4bppv+0x6c>)
 80048fc:	940a      	str	r4, [sp, #40]	@ 0x28
 80048fe:	2201      	movs	r2, #1
 8004900:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8004904:	2304      	movs	r3, #4
 8004906:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800490a:	230a      	movs	r3, #10
 800490c:	9300      	str	r3, [sp, #0]
 800490e:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8004912:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8004916:	9405      	str	r4, [sp, #20]
 8004918:	f7fe fbe6 	bl	80030e8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800491c:	4809      	ldr	r0, [pc, #36]	@ (8004944 <_Z23getFont_verdana_10_4bppv+0x70>)
 800491e:	f020 ff5f 	bl	80257e0 <atexit>
 8004922:	4628      	mov	r0, r5
 8004924:	f020 f80f 	bl	8024946 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8004928:	4805      	ldr	r0, [pc, #20]	@ (8004940 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800492a:	b00f      	add	sp, #60	@ 0x3c
 800492c:	bd30      	pop	{r4, r5, pc}
 800492e:	bf00      	nop
 8004930:	200044d8 	.word	0x200044d8
 8004934:	08029c74 	.word	0x08029c74
 8004938:	08029c8c 	.word	0x08029c8c
 800493c:	08029b58 	.word	0x08029b58
 8004940:	200044dc 	.word	0x200044dc
 8004944:	080048d1 	.word	0x080048d1

08004948 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 18, 20, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8004948:	4770      	bx	lr
	...

0800494c <_Z23getFont_verdana_20_4bppv>:
{
 800494c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 18, 20, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800494e:	4d16      	ldr	r5, [pc, #88]	@ (80049a8 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8004950:	682c      	ldr	r4, [r5, #0]
 8004952:	f014 0401 	ands.w	r4, r4, #1
{
 8004956:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 18, 20, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8004958:	f3bf 8f5b 	dmb	ish
 800495c:	d121      	bne.n	80049a2 <_Z23getFont_verdana_20_4bppv+0x56>
 800495e:	4628      	mov	r0, r5
 8004960:	f01f ffe5 	bl	802492e <__cxa_guard_acquire>
 8004964:	b1e8      	cbz	r0, 80049a2 <_Z23getFont_verdana_20_4bppv+0x56>
 8004966:	233f      	movs	r3, #63	@ 0x3f
 8004968:	9309      	str	r3, [sp, #36]	@ 0x24
 800496a:	4b10      	ldr	r3, [pc, #64]	@ (80049ac <_Z23getFont_verdana_20_4bppv+0x60>)
 800496c:	9308      	str	r3, [sp, #32]
 800496e:	4b10      	ldr	r3, [pc, #64]	@ (80049b0 <_Z23getFont_verdana_20_4bppv+0x64>)
 8004970:	9307      	str	r3, [sp, #28]
 8004972:	2301      	movs	r3, #1
 8004974:	e9cd 4305 	strd	r4, r3, [sp, #20]
 8004978:	9304      	str	r3, [sp, #16]
 800497a:	2304      	movs	r3, #4
 800497c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8004980:	2314      	movs	r3, #20
 8004982:	490c      	ldr	r1, [pc, #48]	@ (80049b4 <_Z23getFont_verdana_20_4bppv+0x68>)
 8004984:	9300      	str	r3, [sp, #0]
 8004986:	2212      	movs	r2, #18
 8004988:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800498c:	480a      	ldr	r0, [pc, #40]	@ (80049b8 <_Z23getFont_verdana_20_4bppv+0x6c>)
 800498e:	940a      	str	r4, [sp, #40]	@ 0x28
 8004990:	9401      	str	r4, [sp, #4]
 8004992:	f7fe fba9 	bl	80030e8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004996:	4809      	ldr	r0, [pc, #36]	@ (80049bc <_Z23getFont_verdana_20_4bppv+0x70>)
 8004998:	f020 ff22 	bl	80257e0 <atexit>
 800499c:	4628      	mov	r0, r5
 800499e:	f01f ffd2 	bl	8024946 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 80049a2:	4805      	ldr	r0, [pc, #20]	@ (80049b8 <_Z23getFont_verdana_20_4bppv+0x6c>)
 80049a4:	b00f      	add	sp, #60	@ 0x3c
 80049a6:	bd30      	pop	{r4, r5, pc}
 80049a8:	20004508 	.word	0x20004508
 80049ac:	08029c78 	.word	0x08029c78
 80049b0:	08029c90 	.word	0x08029c90
 80049b4:	08029b68 	.word	0x08029b68
 80049b8:	2000450c 	.word	0x2000450c
 80049bc:	08004949 	.word	0x08004949

080049c0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80049c0:	4770      	bx	lr
	...

080049c4 <_Z23getFont_verdana_40_4bppv>:
{
 80049c4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80049c6:	4d16      	ldr	r5, [pc, #88]	@ (8004a20 <_Z23getFont_verdana_40_4bppv+0x5c>)
 80049c8:	682c      	ldr	r4, [r5, #0]
 80049ca:	f014 0401 	ands.w	r4, r4, #1
{
 80049ce:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80049d0:	f3bf 8f5b 	dmb	ish
 80049d4:	d120      	bne.n	8004a18 <_Z23getFont_verdana_40_4bppv+0x54>
 80049d6:	4628      	mov	r0, r5
 80049d8:	f01f ffa9 	bl	802492e <__cxa_guard_acquire>
 80049dc:	b1e0      	cbz	r0, 8004a18 <_Z23getFont_verdana_40_4bppv+0x54>
 80049de:	233f      	movs	r3, #63	@ 0x3f
 80049e0:	9309      	str	r3, [sp, #36]	@ 0x24
 80049e2:	4b10      	ldr	r3, [pc, #64]	@ (8004a24 <_Z23getFont_verdana_40_4bppv+0x60>)
 80049e4:	9308      	str	r3, [sp, #32]
 80049e6:	4b10      	ldr	r3, [pc, #64]	@ (8004a28 <_Z23getFont_verdana_40_4bppv+0x64>)
 80049e8:	4910      	ldr	r1, [pc, #64]	@ (8004a2c <_Z23getFont_verdana_40_4bppv+0x68>)
 80049ea:	4811      	ldr	r0, [pc, #68]	@ (8004a30 <_Z23getFont_verdana_40_4bppv+0x6c>)
 80049ec:	940a      	str	r4, [sp, #40]	@ 0x28
 80049ee:	2201      	movs	r2, #1
 80049f0:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80049f4:	2304      	movs	r3, #4
 80049f6:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80049fa:	2328      	movs	r3, #40	@ 0x28
 80049fc:	9300      	str	r3, [sp, #0]
 80049fe:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8004a02:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8004a06:	9405      	str	r4, [sp, #20]
 8004a08:	f7fe fb6e 	bl	80030e8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004a0c:	4809      	ldr	r0, [pc, #36]	@ (8004a34 <_Z23getFont_verdana_40_4bppv+0x70>)
 8004a0e:	f020 fee7 	bl	80257e0 <atexit>
 8004a12:	4628      	mov	r0, r5
 8004a14:	f01f ff97 	bl	8024946 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8004a18:	4805      	ldr	r0, [pc, #20]	@ (8004a30 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8004a1a:	b00f      	add	sp, #60	@ 0x3c
 8004a1c:	bd30      	pop	{r4, r5, pc}
 8004a1e:	bf00      	nop
 8004a20:	20004538 	.word	0x20004538
 8004a24:	08029c88 	.word	0x08029c88
 8004a28:	08029c94 	.word	0x08029c94
 8004a2c:	08029c64 	.word	0x08029c64
 8004a30:	2000453c 	.word	0x2000453c
 8004a34:	080049c1 	.word	0x080049c1

08004a38 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 8004a38:	2000      	movs	r0, #0
 8004a3a:	4770      	bx	lr

08004a3c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 8004a3c:	2000      	movs	r0, #0
 8004a3e:	4770      	bx	lr

08004a40 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004a40:	b40e      	push	{r1, r2, r3}
 8004a42:	b503      	push	{r0, r1, lr}
 8004a44:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004a46:	2100      	movs	r1, #0
{
 8004a48:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8004a4c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004a4e:	f00e fa23 	bl	8012e98 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004a52:	b002      	add	sp, #8
 8004a54:	f85d eb04 	ldr.w	lr, [sp], #4
 8004a58:	b003      	add	sp, #12
 8004a5a:	4770      	bx	lr

08004a5c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004a5c:	b40c      	push	{r2, r3}
 8004a5e:	b507      	push	{r0, r1, r2, lr}
 8004a60:	ab04      	add	r3, sp, #16
 8004a62:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8004a66:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8004a68:	f00e fa16 	bl	8012e98 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004a6c:	b003      	add	sp, #12
 8004a6e:	f85d eb04 	ldr.w	lr, [sp], #4
 8004a72:	b002      	add	sp, #8
 8004a74:	4770      	bx	lr
	...

08004a78 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8004a78:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 8004a7a:	b510      	push	{r4, lr}
 8004a7c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8004a7e:	b373      	cbz	r3, 8004ade <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8004a80:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 8004a82:	b92b      	cbnz	r3, 8004a90 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8004a84:	4b18      	ldr	r3, [pc, #96]	@ (8004ae8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8004a86:	4a19      	ldr	r2, [pc, #100]	@ (8004aec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8004a88:	21c5      	movs	r1, #197	@ 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8004a8a:	4819      	ldr	r0, [pc, #100]	@ (8004af0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8004a8c:	f020 fe8a 	bl	80257a4 <__assert_func>
            return buffer[pos];
 8004a90:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8004a92:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8004a96:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 8004a98:	b30b      	cbz	r3, 8004ade <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8004a9a:	f010 f864 	bl	8014b66 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8004a9e:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8004aa0:	2b01      	cmp	r3, #1
 8004aa2:	d803      	bhi.n	8004aac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8004aa4:	4b13      	ldr	r3, [pc, #76]	@ (8004af4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8004aa6:	4a14      	ldr	r2, [pc, #80]	@ (8004af8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8004aa8:	21cb      	movs	r1, #203	@ 0xcb
 8004aaa:	e7ee      	b.n	8004a8a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8004aac:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8004aae:	1c53      	adds	r3, r2, #1
 8004ab0:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8004ab2:	2b09      	cmp	r3, #9
 8004ab4:	4619      	mov	r1, r3
 8004ab6:	bf88      	it	hi
 8004ab8:	f1a3 010a 	subhi.w	r1, r3, #10
 8004abc:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8004ac0:	f640 103f 	movw	r0, #2367	@ 0x93f
 8004ac4:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 8004ac6:	4281      	cmp	r1, r0
 8004ac8:	d109      	bne.n	8004ade <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8004aca:	2b0a      	cmp	r3, #10
 8004acc:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8004ad0:	bf28      	it	cs
 8004ad2:	2300      	movcs	r3, #0
 8004ad4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8004ad8:	8c50      	ldrh	r0, [r2, #34]	@ 0x22
            buffer[index < size ? index : 0] = newChar;
 8004ada:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 8004adc:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8004ade:	4620      	mov	r0, r4
}
 8004ae0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8004ae4:	f00f bf42 	b.w	801496c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8004ae8:	0802754f 	.word	0x0802754f
 8004aec:	08027558 	.word	0x08027558
 8004af0:	08027603 	.word	0x08027603
 8004af4:	0802764d 	.word	0x0802764d
 8004af8:	0802765b 	.word	0x0802765b

08004afc <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8004afc:	f00f befd 	b.w	80148fa <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08004b00 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8004b00:	b510      	push	{r4, lr}
 8004b02:	b086      	sub	sp, #24
 8004b04:	ac02      	add	r4, sp, #8
 8004b06:	e884 0006 	stmia.w	r4, {r1, r2}
 8004b0a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8004b0c:	ab0a      	add	r3, sp, #40	@ 0x28
 8004b0e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8004b10:	9301      	str	r3, [sp, #4]
 8004b12:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004b14:	9300      	str	r3, [sp, #0]
 8004b16:	4621      	mov	r1, r4
 8004b18:	9b08      	ldr	r3, [sp, #32]
 8004b1a:	f00c fcd3 	bl	80114c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8004b1e:	b006      	add	sp, #24
 8004b20:	bd10      	pop	{r4, pc}
	...

08004b24 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8004b24:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8004b26:	bb18      	cbnz	r0, 8004b70 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8004b28:	4b12      	ldr	r3, [pc, #72]	@ (8004b74 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8004b2a:	4813      	ldr	r0, [pc, #76]	@ (8004b78 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8004b2c:	681c      	ldr	r4, [r3, #0]
 8004b2e:	4913      	ldr	r1, [pc, #76]	@ (8004b7c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8004b30:	b1b4      	cbz	r4, 8004b60 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004b32:	6822      	ldr	r2, [r4, #0]
 8004b34:	4422      	add	r2, r4
 8004b36:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8004b38:	6862      	ldr	r2, [r4, #4]
 8004b3a:	4422      	add	r2, r4
 8004b3c:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004b3e:	68a2      	ldr	r2, [r4, #8]
 8004b40:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8004b42:	4b0f      	ldr	r3, [pc, #60]	@ (8004b80 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8004b44:	2200      	movs	r2, #0
 8004b46:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8004b48:	f000 f838 	bl	8004bbc <_ZN17TypedTextDatabase8getFontsEv>
 8004b4c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8004b4e:	f000 f833 	bl	8004bb8 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8004b52:	4b0c      	ldr	r3, [pc, #48]	@ (8004b84 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8004b54:	601c      	str	r4, [r3, #0]
        fonts = f;
 8004b56:	4b0c      	ldr	r3, [pc, #48]	@ (8004b88 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8004b58:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8004b5a:	4b0c      	ldr	r3, [pc, #48]	@ (8004b8c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8004b5c:	8018      	strh	r0, [r3, #0]
    }
}
 8004b5e:	e007      	b.n	8004b70 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8004b60:	4b0b      	ldr	r3, [pc, #44]	@ (8004b90 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8004b62:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8004b64:	4b0b      	ldr	r3, [pc, #44]	@ (8004b94 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8004b66:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8004b68:	4b0b      	ldr	r3, [pc, #44]	@ (8004b98 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8004b6a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8004b6c:	2c00      	cmp	r4, #0
 8004b6e:	d1e8      	bne.n	8004b42 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8004b70:	bd38      	pop	{r3, r4, r5, pc}
 8004b72:	bf00      	nop
 8004b74:	20004574 	.word	0x20004574
 8004b78:	2000456c 	.word	0x2000456c
 8004b7c:	20004568 	.word	0x20004568
 8004b80:	20004570 	.word	0x20004570
 8004b84:	20015344 	.word	0x20015344
 8004b88:	2001534c 	.word	0x2001534c
 8004b8c:	20015348 	.word	0x20015348
 8004b90:	08029cdc 	.word	0x08029cdc
 8004b94:	08029c98 	.word	0x08029c98
 8004b98:	08029d08 	.word	0x08029d08

08004b9c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8004b9c:	4b04      	ldr	r3, [pc, #16]	@ (8004bb0 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8004b9e:	681b      	ldr	r3, [r3, #0]
 8004ba0:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8004ba4:	4b03      	ldr	r3, [pc, #12]	@ (8004bb4 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8004ba6:	681b      	ldr	r3, [r3, #0]
}
 8004ba8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8004bac:	4770      	bx	lr
 8004bae:	bf00      	nop
 8004bb0:	20004568 	.word	0x20004568
 8004bb4:	2000456c 	.word	0x2000456c

08004bb8 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8004bb8:	2011      	movs	r0, #17
 8004bba:	4770      	bx	lr

08004bbc <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8004bbc:	4800      	ldr	r0, [pc, #0]	@ (8004bc0 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8004bbe:	4770      	bx	lr
 8004bc0:	20004578 	.word	0x20004578

08004bc4 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8004bc4:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8004bc6:	f7ff fec1 	bl	800494c <_Z23getFont_verdana_20_4bppv>
};
 8004bca:	4c04      	ldr	r4, [pc, #16]	@ (8004bdc <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8004bcc:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8004bce:	f7ff fef9 	bl	80049c4 <_Z23getFont_verdana_40_4bppv>
};
 8004bd2:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8004bd4:	f7ff fe7e 	bl	80048d4 <_Z23getFont_verdana_10_4bppv>
};
 8004bd8:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8004bda:	bd10      	pop	{r4, pc}
 8004bdc:	20004578 	.word	0x20004578

08004be0 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 8004be0:	b510      	push	{r4, lr}
    pointArray = 0;
 8004be2:	2400      	movs	r4, #0
 8004be4:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 8004be6:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 8004be8:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 8004bea:	601c      	str	r4, [r3, #0]
}
 8004bec:	bd10      	pop	{r4, pc}

08004bee <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8004bee:	4770      	bx	lr

08004bf0 <_ZN19FrontendApplicationD0Ev>:
 8004bf0:	b510      	push	{r4, lr}
 8004bf2:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8004bf6:	4604      	mov	r4, r0
 8004bf8:	f01f fe97 	bl	802492a <_ZdlPvj>
 8004bfc:	4620      	mov	r0, r4
 8004bfe:	bd10      	pop	{r4, pc}

08004c00 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8004c00:	b510      	push	{r4, lr}
 8004c02:	4604      	mov	r4, r0
    {
        model.tick();
 8004c04:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 8004c08:	f000 f813 	bl	8004c32 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8004c0c:	4620      	mov	r0, r4
    }
 8004c0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8004c12:	f00d b93b 	b.w	8011e8c <_ZN8touchgfx11Application15handleTickEventEv>
	...

08004c18 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8004c18:	b510      	push	{r4, lr}
 8004c1a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8004c1c:	f7fd fe6c 	bl	80028f8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8004c20:	4b01      	ldr	r3, [pc, #4]	@ (8004c28 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8004c22:	6023      	str	r3, [r4, #0]
{

}
 8004c24:	4620      	mov	r0, r4
 8004c26:	bd10      	pop	{r4, pc}
 8004c28:	08028178 	.word	0x08028178

08004c2c <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8004c2c:	2200      	movs	r2, #0
 8004c2e:	6002      	str	r2, [r0, #0]
{

}
 8004c30:	4770      	bx	lr

08004c32 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8004c32:	4770      	bx	lr

08004c34 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 8004c34:	4770      	bx	lr

08004c36 <_ZThn4_N16Screen1PresenterD1Ev>:
 8004c36:	3804      	subs	r0, #4
 8004c38:	4770      	bx	lr

08004c3a <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8004c3a:	4770      	bx	lr

08004c3c <_ZN16Screen1PresenterD0Ev>:
 8004c3c:	b510      	push	{r4, lr}
 8004c3e:	2110      	movs	r1, #16
 8004c40:	4604      	mov	r4, r0
 8004c42:	f01f fe72 	bl	802492a <_ZdlPvj>
 8004c46:	4620      	mov	r0, r4
 8004c48:	bd10      	pop	{r4, pc}

08004c4a <_ZThn4_N16Screen1PresenterD0Ev>:
 8004c4a:	f1a0 0004 	sub.w	r0, r0, #4
 8004c4e:	e7f5      	b.n	8004c3c <_ZN16Screen1PresenterD0Ev>

08004c50 <_ZN16Screen1PresenterC1ER11Screen1View>:
    ModelListener() : model(0) {}
 8004c50:	2200      	movs	r2, #0
 8004c52:	6082      	str	r2, [r0, #8]
    : view(v)
 8004c54:	4a02      	ldr	r2, [pc, #8]	@ (8004c60 <_ZN16Screen1PresenterC1ER11Screen1View+0x10>)
 8004c56:	6002      	str	r2, [r0, #0]
 8004c58:	3218      	adds	r2, #24
 8004c5a:	6042      	str	r2, [r0, #4]
 8004c5c:	60c1      	str	r1, [r0, #12]
}
 8004c5e:	4770      	bx	lr
 8004c60:	080281cc 	.word	0x080281cc

08004c64 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8004c64:	4770      	bx	lr
	...

08004c68 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8004c68:	4b17      	ldr	r3, [pc, #92]	@ (8004cc8 <_ZN11Screen1ViewD1Ev+0x60>)
 8004c6a:	b570      	push	{r4, r5, r6, lr}
 8004c6c:	4605      	mov	r5, r0
 8004c6e:	6003      	str	r3, [r0, #0]
 8004c70:	f642 4418 	movw	r4, #11288	@ 0x2c18
 8004c74:	f642 3648 	movw	r6, #11080	@ 0x2b48
 8004c78:	42b4      	cmp	r4, r6
 8004c7a:	d005      	beq.n	8004c88 <_ZN11Screen1ViewD1Ev+0x20>
 8004c7c:	592b      	ldr	r3, [r5, r4]
 8004c7e:	1928      	adds	r0, r5, r4
 8004c80:	681b      	ldr	r3, [r3, #0]
 8004c82:	4798      	blx	r3
 8004c84:	3c34      	subs	r4, #52	@ 0x34
 8004c86:	e7f7      	b.n	8004c78 <_ZN11Screen1ViewD1Ev+0x10>
 8004c88:	f642 3450 	movw	r4, #11088	@ 0x2b50
 8004c8c:	f642 0690 	movw	r6, #10384	@ 0x2890
 8004c90:	592b      	ldr	r3, [r5, r4]
 8004c92:	1928      	adds	r0, r5, r4
 8004c94:	681b      	ldr	r3, [r3, #0]
 8004c96:	3c2c      	subs	r4, #44	@ 0x2c
 8004c98:	4798      	blx	r3
 8004c9a:	42b4      	cmp	r4, r6
 8004c9c:	d1f8      	bne.n	8004c90 <_ZN11Screen1ViewD1Ev+0x28>
 8004c9e:	592b      	ldr	r3, [r5, r4]
 8004ca0:	1928      	adds	r0, r5, r4
 8004ca2:	681b      	ldr	r3, [r3, #0]
 8004ca4:	3c2c      	subs	r4, #44	@ 0x2c
 8004ca6:	4798      	blx	r3
 8004ca8:	f5b4 6fc6 	cmp.w	r4, #1584	@ 0x630
 8004cac:	d1f7      	bne.n	8004c9e <_ZN11Screen1ViewD1Ev+0x36>
 8004cae:	592b      	ldr	r3, [r5, r4]
 8004cb0:	1928      	adds	r0, r5, r4
 8004cb2:	681b      	ldr	r3, [r3, #0]
 8004cb4:	3c2c      	subs	r4, #44	@ 0x2c
 8004cb6:	4798      	blx	r3
 8004cb8:	f5b4 7f5c 	cmp.w	r4, #880	@ 0x370
 8004cbc:	d1f7      	bne.n	8004cae <_ZN11Screen1ViewD1Ev+0x46>
 8004cbe:	4628      	mov	r0, r5
 8004cc0:	f7fe fa8a 	bl	80031d8 <_ZN15Screen1ViewBaseD1Ev>
 8004cc4:	4628      	mov	r0, r5
 8004cc6:	bd70      	pop	{r4, r5, r6, pc}
 8004cc8:	080281f4 	.word	0x080281f4

08004ccc <_ZN11Screen1ViewD0Ev>:
 8004ccc:	b510      	push	{r4, lr}
 8004cce:	4604      	mov	r4, r0
 8004cd0:	f7ff ffca 	bl	8004c68 <_ZN11Screen1ViewD1Ev>
 8004cd4:	4620      	mov	r0, r4
 8004cd6:	f642 41ac 	movw	r1, #11436	@ 0x2cac
 8004cda:	f01f fe26 	bl	802492a <_ZdlPvj>
 8004cde:	4620      	mov	r0, r4
 8004ce0:	bd10      	pop	{r4, pc}

08004ce2 <_ZN11Screen1View14checkCollisionEiii>:
        }
    }
}

bool Screen1View::checkCollision(int newX, int newY, int shape)
{
 8004ce2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004ce6:	f500 5431 	add.w	r4, r0, #11328	@ 0x2c40
    for(int y = 0; y < 4; y++) {
        for(int x = 0; x < 4; x++) {
            if(currentTetromino[y][x]) {  // Thay đổi từ TETROMINOS sang currentTetromino
                int boardX = (newX - 20) / BLOCK_SIZE + x;
 8004cea:	230f      	movs	r3, #15
 8004cec:	3914      	subs	r1, #20
                int boardY = (newY - 10) / BLOCK_SIZE + y;
 8004cee:	3a0a      	subs	r2, #10
                int boardX = (newX - 20) / BLOCK_SIZE + x;
 8004cf0:	fb91 f1f3 	sdiv	r1, r1, r3
                int boardY = (newY - 10) / BLOCK_SIZE + y;
 8004cf4:	fb92 f2f3 	sdiv	r2, r2, r3
 8004cf8:	340b      	adds	r4, #11
 8004cfa:	f102 0804 	add.w	r8, r2, #4
 8004cfe:	f101 0e04 	add.w	lr, r1, #4
 8004d02:	f500 7335 	add.w	r3, r0, #724	@ 0x2d4
 8004d06:	f04f 0c0a 	mov.w	ip, #10
        for(int x = 0; x < 4; x++) {
 8004d0a:	460d      	mov	r5, r1
 8004d0c:	fb0c 3702 	mla	r7, ip, r2, r3
{
 8004d10:	4626      	mov	r6, r4
            if(currentTetromino[y][x]) {  // Thay đổi từ TETROMINOS sang currentTetromino
 8004d12:	f816 0f01 	ldrb.w	r0, [r6, #1]!
 8004d16:	b128      	cbz	r0, 8004d24 <_ZN11Screen1View14checkCollisionEiii+0x42>
                
                // Kiểm tra chạm đáy
                if(boardY >= BOARD_HEIGHT) return true;
 8004d18:	2a13      	cmp	r2, #19
 8004d1a:	dc0d      	bgt.n	8004d38 <_ZN11Screen1View14checkCollisionEiii+0x56>
                
                // Kiểm tra chạm biên
                if(boardX < 0 || boardX >= BOARD_WIDTH) return true;
 8004d1c:	2d09      	cmp	r5, #9
 8004d1e:	d80b      	bhi.n	8004d38 <_ZN11Screen1View14checkCollisionEiii+0x56>
                
                // Kiểm tra chạm khối khác
                if(board[boardY][boardX]) return true;
 8004d20:	5d78      	ldrb	r0, [r7, r5]
 8004d22:	b950      	cbnz	r0, 8004d3a <_ZN11Screen1View14checkCollisionEiii+0x58>
        for(int x = 0; x < 4; x++) {
 8004d24:	3501      	adds	r5, #1
 8004d26:	4575      	cmp	r5, lr
 8004d28:	d1f3      	bne.n	8004d12 <_ZN11Screen1View14checkCollisionEiii+0x30>
    for(int y = 0; y < 4; y++) {
 8004d2a:	3201      	adds	r2, #1
 8004d2c:	4542      	cmp	r2, r8
 8004d2e:	f104 0404 	add.w	r4, r4, #4
 8004d32:	d1ea      	bne.n	8004d0a <_ZN11Screen1View14checkCollisionEiii+0x28>
            }
        }
    }
    return false;
 8004d34:	2000      	movs	r0, #0
 8004d36:	e000      	b.n	8004d3a <_ZN11Screen1View14checkCollisionEiii+0x58>
                if(boardY >= BOARD_HEIGHT) return true;
 8004d38:	2001      	movs	r0, #1
}
 8004d3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08004d40 <_ZN11Screen1View12simpleRandomEv>:
uint32_t Screen1View::simpleRandom()
{
    // Linear Congruential Generator (LCG)
    // Sử dụng công thức: next = (a * seed + c) % m
    // a = 1664525, c = 1013904223, m = 2^32
    randomSeed = randomSeed * 1664525 + 1013904223 + score - 2611;
 8004d40:	f500 5200 	add.w	r2, r0, #8192	@ 0x2000
 8004d44:	4b05      	ldr	r3, [pc, #20]	@ (8004d5c <_ZN11Screen1View12simpleRandomEv+0x1c>)
 8004d46:	f8d2 0c70 	ldr.w	r0, [r2, #3184]	@ 0xc70
 8004d4a:	f8d2 1c80 	ldr.w	r1, [r2, #3200]	@ 0xc80
 8004d4e:	4403      	add	r3, r0
 8004d50:	4803      	ldr	r0, [pc, #12]	@ (8004d60 <_ZN11Screen1View12simpleRandomEv+0x20>)
 8004d52:	fb00 3001 	mla	r0, r0, r1, r3
 8004d56:	f8c2 0c80 	str.w	r0, [r2, #3200]	@ 0xc80
    return randomSeed;
 8004d5a:	4770      	bx	lr
 8004d5c:	3c6ee92c 	.word	0x3c6ee92c
 8004d60:	0019660d 	.word	0x0019660d

08004d64 <_ZN11Screen1View10shuffleBagEv>:
{
 8004d64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004d66:	f500 5531 	add.w	r5, r0, #11328	@ 0x2c40
 8004d6a:	4606      	mov	r6, r0
 8004d6c:	353c      	adds	r5, #60	@ 0x3c
 8004d6e:	2407      	movs	r4, #7
        bag[i] = bag[j];
 8004d70:	f642 4775 	movw	r7, #11381	@ 0x2c75
        int j = simpleRandom() % (i + 1);
 8004d74:	4630      	mov	r0, r6
 8004d76:	f7ff ffe3 	bl	8004d40 <_ZN11Screen1View12simpleRandomEv>
 8004d7a:	fbb0 f3f4 	udiv	r3, r0, r4
 8004d7e:	fb03 0314 	mls	r3, r3, r4, r0
        bag[i] = bag[j];
 8004d82:	4433      	add	r3, r6
    for(int i = BAG_SIZE - 1; i > 0; i--) {
 8004d84:	3c01      	subs	r4, #1
        uint8_t temp = bag[i];
 8004d86:	f815 2d01 	ldrb.w	r2, [r5, #-1]!
        bag[i] = bag[j];
 8004d8a:	5dd9      	ldrb	r1, [r3, r7]
 8004d8c:	7029      	strb	r1, [r5, #0]
    for(int i = BAG_SIZE - 1; i > 0; i--) {
 8004d8e:	2c01      	cmp	r4, #1
        bag[j] = temp;
 8004d90:	55da      	strb	r2, [r3, r7]
    for(int i = BAG_SIZE - 1; i > 0; i--) {
 8004d92:	d1ef      	bne.n	8004d74 <_ZN11Screen1View10shuffleBagEv+0x10>
}
 8004d94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08004d98 <_ZN11Screen1View13initializeBagEv>:
{
 8004d98:	b538      	push	{r3, r4, r5, lr}
        bag[i] = i;
 8004d9a:	f500 5400 	add.w	r4, r0, #8192	@ 0x2000
 8004d9e:	f240 2301 	movw	r3, #513	@ 0x201
 8004da2:	2500      	movs	r5, #0
 8004da4:	f8a4 3c76 	strh.w	r3, [r4, #3190]	@ 0xc76
 8004da8:	4b04      	ldr	r3, [pc, #16]	@ (8004dbc <_ZN11Screen1View13initializeBagEv+0x24>)
 8004daa:	f884 5c75 	strb.w	r5, [r4, #3189]	@ 0xc75
 8004dae:	f8c4 3c78 	str.w	r3, [r4, #3192]	@ 0xc78
    shuffleBag();
 8004db2:	f7ff ffd7 	bl	8004d64 <_ZN11Screen1View10shuffleBagEv>
    bagIndex = 0;
 8004db6:	f8c4 5c7c 	str.w	r5, [r4, #3196]	@ 0xc7c
}
 8004dba:	bd38      	pop	{r3, r4, r5, pc}
 8004dbc:	06050403 	.word	0x06050403

08004dc0 <_ZN11Screen1View12getNextShapeEv>:
{
 8004dc0:	b538      	push	{r3, r4, r5, lr}
    if(bagIndex >= BAG_SIZE) {
 8004dc2:	f500 5500 	add.w	r5, r0, #8192	@ 0x2000
{
 8004dc6:	4604      	mov	r4, r0
    if(bagIndex >= BAG_SIZE) {
 8004dc8:	f8d5 3c7c 	ldr.w	r3, [r5, #3196]	@ 0xc7c
 8004dcc:	2b06      	cmp	r3, #6
 8004dce:	dd04      	ble.n	8004dda <_ZN11Screen1View12getNextShapeEv+0x1a>
        shuffleBag();
 8004dd0:	f7ff ffc8 	bl	8004d64 <_ZN11Screen1View10shuffleBagEv>
        bagIndex = 0;
 8004dd4:	2300      	movs	r3, #0
 8004dd6:	f8c5 3c7c 	str.w	r3, [r5, #3196]	@ 0xc7c
    return bag[bagIndex++];
 8004dda:	f8d5 3c7c 	ldr.w	r3, [r5, #3196]	@ 0xc7c
 8004dde:	1c5a      	adds	r2, r3, #1
 8004de0:	441c      	add	r4, r3
}
 8004de2:	f642 4375 	movw	r3, #11381	@ 0x2c75
    return bag[bagIndex++];
 8004de6:	f8c5 2c7c 	str.w	r2, [r5, #3196]	@ 0xc7c
}
 8004dea:	5ce0      	ldrb	r0, [r4, r3]
 8004dec:	bd38      	pop	{r3, r4, r5, pc}

08004dee <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8004dee:	f7fe b9f4 	b.w	80031da <_ZN15Screen1ViewBase11setupScreenEv>

08004df2 <_ZN11Screen1View11clearScreenEv>:
{
 8004df2:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004df6:	4604      	mov	r4, r0
        for(int x = 0; x < 4; x++) {
 8004df8:	2500      	movs	r5, #0
 8004dfa:	f500 7967 	add.w	r9, r0, #924	@ 0x39c
     *
     * @param [in] d The Drawable to remove.
     */
    void remove(Drawable& d)
    {
        container.remove(d);
 8004dfe:	f100 0804 	add.w	r8, r0, #4
 8004e02:	eb09 0705 	add.w	r7, r9, r5
 8004e06:	2600      	movs	r6, #0
 8004e08:	4639      	mov	r1, r7
 8004e0a:	4640      	mov	r0, r8
 8004e0c:	3601      	adds	r6, #1
 8004e0e:	f007 fb08 	bl	800c422 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8004e12:	2e04      	cmp	r6, #4
 8004e14:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 8004e18:	d1f6      	bne.n	8004e08 <_ZN11Screen1View11clearScreenEv+0x16>
    for(int y = 0; y < 4; y++) {
 8004e1a:	35b0      	adds	r5, #176	@ 0xb0
 8004e1c:	f5b5 7f30 	cmp.w	r5, #704	@ 0x2c0
 8004e20:	d1ef      	bne.n	8004e02 <_ZN11Screen1View11clearScreenEv+0x10>
 8004e22:	f06f 0a2a 	mvn.w	sl, #42	@ 0x2a
 8004e26:	f204 29d3 	addw	r9, r4, #723	@ 0x2d3
 8004e2a:	fb04 fa0a 	mul.w	sl, r4, sl
 8004e2e:	2700      	movs	r7, #0
                remove(staticBlocks[y][x]);
 8004e30:	f04f 0b2c 	mov.w	fp, #44	@ 0x2c
        for(int x = 0; x < 4; x++) {
 8004e34:	464e      	mov	r6, r9
 8004e36:	250a      	movs	r5, #10
            if(board[y][x]) {
 8004e38:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 8004e3c:	b14a      	cbz	r2, 8004e52 <_ZN11Screen1View11clearScreenEv+0x60>
                remove(staticBlocks[y][x]);
 8004e3e:	fb0b a106 	mla	r1, fp, r6, sl
 8004e42:	f5a1 41ec 	sub.w	r1, r1, #30208	@ 0x7600
 8004e46:	3914      	subs	r1, #20
 8004e48:	4640      	mov	r0, r8
 8004e4a:	f007 faea 	bl	800c422 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
                board[y][x] = false;
 8004e4e:	2300      	movs	r3, #0
 8004e50:	7033      	strb	r3, [r6, #0]
        for(int x = 0; x < BOARD_WIDTH; x++) {
 8004e52:	3d01      	subs	r5, #1
 8004e54:	d1f0      	bne.n	8004e38 <_ZN11Screen1View11clearScreenEv+0x46>
    for(int y = 0; y < BOARD_HEIGHT; y++) {
 8004e56:	f507 77dc 	add.w	r7, r7, #440	@ 0x1b8
 8004e5a:	f242 2260 	movw	r2, #8800	@ 0x2260
 8004e5e:	4297      	cmp	r7, r2
 8004e60:	f109 090a 	add.w	r9, r9, #10
 8004e64:	d1e6      	bne.n	8004e34 <_ZN11Screen1View11clearScreenEv+0x42>
 8004e66:	f504 5422 	add.w	r4, r4, #10368	@ 0x2880
 8004e6a:	343c      	adds	r4, #60	@ 0x3c
        for(int x = 0; x < 4; x++) {
 8004e6c:	1967      	adds	r7, r4, r5
 8004e6e:	2600      	movs	r6, #0
 8004e70:	4639      	mov	r1, r7
 8004e72:	4640      	mov	r0, r8
 8004e74:	3601      	adds	r6, #1
 8004e76:	f007 fad4 	bl	800c422 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8004e7a:	2e04      	cmp	r6, #4
 8004e7c:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 8004e80:	d1f6      	bne.n	8004e70 <_ZN11Screen1View11clearScreenEv+0x7e>
    for(int y = 0; y < 4; y++) {
 8004e82:	35b0      	adds	r5, #176	@ 0xb0
 8004e84:	f5b5 7f30 	cmp.w	r5, #704	@ 0x2c0
 8004e88:	d1f0      	bne.n	8004e6c <_ZN11Screen1View11clearScreenEv+0x7a>
}
 8004e8a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08004e90 <_ZN11Screen1View13drawTetrominoEiii>:
{
 8004e90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004e94:	b087      	sub	sp, #28
 8004e96:	461c      	mov	r4, r3
 8004e98:	1d03      	adds	r3, r0, #4
 8004e9a:	4605      	mov	r5, r0
 8004e9c:	4617      	mov	r7, r2
        for(int x = 0; x < 4; x++) {
 8004e9e:	2600      	movs	r6, #0
 8004ea0:	f500 7a67 	add.w	sl, r0, #924	@ 0x39c
 8004ea4:	9300      	str	r3, [sp, #0]
 8004ea6:	eb0a 0906 	add.w	r9, sl, r6
 8004eaa:	f04f 0800 	mov.w	r8, #0
 8004eae:	4649      	mov	r1, r9
 8004eb0:	9800      	ldr	r0, [sp, #0]
 8004eb2:	f108 0801 	add.w	r8, r8, #1
 8004eb6:	f007 fab4 	bl	800c422 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8004eba:	f1b8 0f04 	cmp.w	r8, #4
 8004ebe:	f109 092c 	add.w	r9, r9, #44	@ 0x2c
 8004ec2:	d1f4      	bne.n	8004eae <_ZN11Screen1View13drawTetrominoEiii+0x1e>
    for(int y = 0; y < 4; y++) {
 8004ec4:	36b0      	adds	r6, #176	@ 0xb0
 8004ec6:	f5b6 7f30 	cmp.w	r6, #704	@ 0x2c0
 8004eca:	d1ec      	bne.n	8004ea6 <_ZN11Screen1View13drawTetrominoEiii+0x16>
 8004ecc:	b2bf      	uxth	r7, r7
 8004ece:	f107 023c 	add.w	r2, r7, #60	@ 0x3c
 8004ed2:	f505 5831 	add.w	r8, r5, #11328	@ 0x2c40
 8004ed6:	b292      	uxth	r2, r2
 8004ed8:	f108 080b 	add.w	r8, r8, #11
 8004edc:	b2a4      	uxth	r4, r4
 8004ede:	2300      	movs	r3, #0
 8004ee0:	9202      	str	r2, [sp, #8]
                blocks[y][x].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 8004ee2:	f505 5b00 	add.w	fp, r5, #8192	@ 0x2000
        for(int x = 0; x < 4; x++) {
 8004ee6:	eb05 0a03 	add.w	sl, r5, r3
 8004eea:	463e      	mov	r6, r7
        for(int x = 0; x < 4; x++) {
 8004eec:	f8cd 8004 	str.w	r8, [sp, #4]
            if(currentTetromino[y][x] == 1) {
 8004ef0:	9901      	ldr	r1, [sp, #4]
 8004ef2:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8004ef6:	9101      	str	r1, [sp, #4]
 8004ef8:	2a01      	cmp	r2, #1
 8004efa:	d119      	bne.n	8004f30 <_ZN11Screen1View13drawTetrominoEiii+0xa0>
                blocks[y][x].setXY(
 8004efc:	f50a 7967 	add.w	r9, sl, #924	@ 0x39c
 8004f00:	b222      	sxth	r2, r4
 8004f02:	b231      	sxth	r1, r6
 8004f04:	4648      	mov	r0, r9
 8004f06:	9303      	str	r3, [sp, #12]
 8004f08:	f7fe fa4b 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
                blocks[y][x].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 8004f0c:	4b11      	ldr	r3, [pc, #68]	@ (8004f54 <_ZN11Screen1View13drawTetrominoEiii+0xc4>)
 8004f0e:	f8db 1c64 	ldr.w	r1, [fp, #3172]	@ 0xc64
 8004f12:	f8da 239c 	ldr.w	r2, [sl, #924]	@ 0x39c
 8004f16:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8004f1a:	6e12      	ldr	r2, [r2, #96]	@ 0x60
 8004f1c:	f8ad 1014 	strh.w	r1, [sp, #20]
 8004f20:	4648      	mov	r0, r9
 8004f22:	a905      	add	r1, sp, #20
 8004f24:	4790      	blx	r2
        container.add(d);
 8004f26:	9800      	ldr	r0, [sp, #0]
 8004f28:	4649      	mov	r1, r9
 8004f2a:	f007 fa39 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004f2e:	9b03      	ldr	r3, [sp, #12]
        for(int x = 0; x < 4; x++) {
 8004f30:	9a02      	ldr	r2, [sp, #8]
 8004f32:	360f      	adds	r6, #15
 8004f34:	b2b6      	uxth	r6, r6
 8004f36:	4296      	cmp	r6, r2
 8004f38:	f10a 0a2c 	add.w	sl, sl, #44	@ 0x2c
 8004f3c:	d1d8      	bne.n	8004ef0 <_ZN11Screen1View13drawTetrominoEiii+0x60>
    for(int y = 0; y < 4; y++) {
 8004f3e:	33b0      	adds	r3, #176	@ 0xb0
 8004f40:	340f      	adds	r4, #15
 8004f42:	f5b3 7f30 	cmp.w	r3, #704	@ 0x2c0
 8004f46:	f108 0804 	add.w	r8, r8, #4
 8004f4a:	b2a4      	uxth	r4, r4
 8004f4c:	d1cb      	bne.n	8004ee6 <_ZN11Screen1View13drawTetrominoEiii+0x56>
}
 8004f4e:	b007      	add	sp, #28
 8004f50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004f54:	0802822e 	.word	0x0802822e

08004f58 <_ZN11Screen1View15rotateTetrominoEv>:
{
 8004f58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    if (currentShape == 3) return;
 8004f5c:	f500 5400 	add.w	r4, r0, #8192	@ 0x2000
{
 8004f60:	b089      	sub	sp, #36	@ 0x24
    if (currentShape == 3) return;
 8004f62:	f8d4 7c64 	ldr.w	r7, [r4, #3172]	@ 0xc64
 8004f66:	2f03      	cmp	r7, #3
{
 8004f68:	4606      	mov	r6, r0
    if (currentShape == 3) return;
 8004f6a:	d066      	beq.n	800503a <_ZN11Screen1View15rotateTetrominoEv+0xe2>
    uint8_t rotated[4][4] = {0};
 8004f6c:	ad04      	add	r5, sp, #16
 8004f6e:	2210      	movs	r2, #16
 8004f70:	2100      	movs	r1, #0
 8004f72:	4628      	mov	r0, r5
 8004f74:	f020 fe1d 	bl	8025bb2 <memset>
    memcpy(temp, currentTetromino, sizeof(temp));
 8004f78:	46ec      	mov	ip, sp
 8004f7a:	f604 424c 	addw	r2, r4, #3148	@ 0xc4c
 8004f7e:	f604 485c 	addw	r8, r4, #3164	@ 0xc5c
 8004f82:	4663      	mov	r3, ip
 8004f84:	6810      	ldr	r0, [r2, #0]
 8004f86:	6851      	ldr	r1, [r2, #4]
 8004f88:	46e6      	mov	lr, ip
 8004f8a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8004f8e:	3208      	adds	r2, #8
 8004f90:	4542      	cmp	r2, r8
 8004f92:	46f4      	mov	ip, lr
 8004f94:	d1f6      	bne.n	8004f84 <_ZN11Screen1View15rotateTetrominoEv+0x2c>
        centerX = 2;
 8004f96:	2f00      	cmp	r7, #0
 8004f98:	bf14      	ite	ne
 8004f9a:	f04f 0801 	movne.w	r8, #1
 8004f9e:	f04f 0802 	moveq.w	r8, #2
    for(int y = 0; y < 4; y++) {
 8004fa2:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8004fa6:	2200      	movs	r2, #0
        for(int x = 0; x < 4; x++) {
 8004fa8:	4628      	mov	r0, r5
 8004faa:	eba5 0c02 	sub.w	ip, r5, r2
 8004fae:	ebaa 0902 	sub.w	r9, sl, r2
        centerX = 1;
 8004fb2:	4619      	mov	r1, r3
        for(int x = 0; x < 4; x++) {
 8004fb4:	f04f 0e00 	mov.w	lr, #0
            if (currentShape == 0) { // Xử lý đặc biệt cho hình I
 8004fb8:	2f00      	cmp	r7, #0
 8004fba:	d141      	bne.n	8005040 <_ZN11Screen1View15rotateTetrominoEv+0xe8>
                rotated[x][3-y] = temp[y][x];
 8004fbc:	f891 b000 	ldrb.w	fp, [r1]
 8004fc0:	f88c b003 	strb.w	fp, [ip, #3]
        for(int x = 0; x < 4; x++) {
 8004fc4:	f10e 0e01 	add.w	lr, lr, #1
 8004fc8:	f1be 0f04 	cmp.w	lr, #4
 8004fcc:	f101 0101 	add.w	r1, r1, #1
 8004fd0:	f10c 0c04 	add.w	ip, ip, #4
 8004fd4:	d1f0      	bne.n	8004fb8 <_ZN11Screen1View15rotateTetrominoEv+0x60>
    for(int y = 0; y < 4; y++) {
 8004fd6:	3201      	adds	r2, #1
 8004fd8:	2a04      	cmp	r2, #4
 8004fda:	f103 0304 	add.w	r3, r3, #4
 8004fde:	d1e3      	bne.n	8004fa8 <_ZN11Screen1View15rotateTetrominoEv+0x50>
    for(int y = 0; y < 4 && canRotate; y++) {
 8004fe0:	2100      	movs	r1, #0
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8004fe2:	f04f 0e0f 	mov.w	lr, #15
                   board[boardY][boardX]) {
 8004fe6:	f04f 080a 	mov.w	r8, #10
    for(int y = 0; y < 4; y++) {
 8004fea:	4684      	mov	ip, r0
        for(int x = 0; x < 4; x++) {
 8004fec:	2200      	movs	r2, #0
            if(rotated[y][x]) {
 8004fee:	f81c 3b01 	ldrb.w	r3, [ip], #1
 8004ff2:	b1c3      	cbz	r3, 8005026 <_ZN11Screen1View15rotateTetrominoEv+0xce>
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8004ff4:	f8d4 3c5c 	ldr.w	r3, [r4, #3164]	@ 0xc5c
 8004ff8:	f1a3 0914 	sub.w	r9, r3, #20
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8004ffc:	f8d4 3c60 	ldr.w	r3, [r4, #3168]	@ 0xc60
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8005000:	fb99 f9fe 	sdiv	r9, r9, lr
 8005004:	4491      	add	r9, r2
                if(boardX < 0 || boardX >= BOARD_WIDTH || 
 8005006:	f1b9 0f09 	cmp.w	r9, #9
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 800500a:	f1a3 030a 	sub.w	r3, r3, #10
 800500e:	fb93 f3fe 	sdiv	r3, r3, lr
 8005012:	440b      	add	r3, r1
                if(boardX < 0 || boardX >= BOARD_WIDTH || 
 8005014:	d81c      	bhi.n	8005050 <_ZN11Screen1View15rotateTetrominoEv+0xf8>
 8005016:	2b13      	cmp	r3, #19
 8005018:	d81a      	bhi.n	8005050 <_ZN11Screen1View15rotateTetrominoEv+0xf8>
                   board[boardY][boardX]) {
 800501a:	fb08 6303 	mla	r3, r8, r3, r6
 800501e:	444b      	add	r3, r9
                   boardY < 0 || boardY >= BOARD_HEIGHT ||
 8005020:	f893 32d4 	ldrb.w	r3, [r3, #724]	@ 0x2d4
 8005024:	b9a3      	cbnz	r3, 8005050 <_ZN11Screen1View15rotateTetrominoEv+0xf8>
        for(int x = 0; x < 4; x++) {
 8005026:	3201      	adds	r2, #1
 8005028:	2a04      	cmp	r2, #4
 800502a:	d1e0      	bne.n	8004fee <_ZN11Screen1View15rotateTetrominoEv+0x96>
 800502c:	2301      	movs	r3, #1
    for(int y = 0; y < 4 && canRotate; y++) {
 800502e:	3101      	adds	r1, #1
 8005030:	2904      	cmp	r1, #4
 8005032:	d00f      	beq.n	8005054 <_ZN11Screen1View15rotateTetrominoEv+0xfc>
 8005034:	3004      	adds	r0, #4
 8005036:	2b00      	cmp	r3, #0
 8005038:	d1d7      	bne.n	8004fea <_ZN11Screen1View15rotateTetrominoEv+0x92>
}
 800503a:	b009      	add	sp, #36	@ 0x24
 800503c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                if(newX >= 0 && newX < 4 && newY >= 0 && newY < 4) {
 8005040:	f1b9 0f03 	cmp.w	r9, #3
                    rotated[newY][newX] = temp[y][x];
 8005044:	bf9c      	itt	ls
 8005046:	f891 b000 	ldrbls.w	fp, [r1]
 800504a:	f80c b018 	strbls.w	fp, [ip, r8, lsl #1]
 800504e:	e7b9      	b.n	8004fc4 <_ZN11Screen1View15rotateTetrominoEv+0x6c>
                    canRotate = false;
 8005050:	2300      	movs	r3, #0
 8005052:	e7ec      	b.n	800502e <_ZN11Screen1View15rotateTetrominoEv+0xd6>
    if(canRotate) {
 8005054:	2b00      	cmp	r3, #0
 8005056:	d0f0      	beq.n	800503a <_ZN11Screen1View15rotateTetrominoEv+0xe2>
        memcpy(currentTetromino, rotated, sizeof(currentTetromino));
 8005058:	f604 424c 	addw	r2, r4, #3148	@ 0xc4c
 800505c:	f10d 0c20 	add.w	ip, sp, #32
 8005060:	462b      	mov	r3, r5
 8005062:	cb03      	ldmia	r3!, {r0, r1}
 8005064:	4563      	cmp	r3, ip
 8005066:	6010      	str	r0, [r2, #0]
 8005068:	6051      	str	r1, [r2, #4]
 800506a:	461d      	mov	r5, r3
 800506c:	f102 0208 	add.w	r2, r2, #8
 8005070:	d1f6      	bne.n	8005060 <_ZN11Screen1View15rotateTetrominoEv+0x108>
        drawTetromino(currentShape, currentX, currentY);
 8005072:	4630      	mov	r0, r6
 8005074:	f8d4 3c60 	ldr.w	r3, [r4, #3168]	@ 0xc60
 8005078:	f8d4 2c5c 	ldr.w	r2, [r4, #3164]	@ 0xc5c
 800507c:	4639      	mov	r1, r7
 800507e:	f7ff ff07 	bl	8004e90 <_ZN11Screen1View13drawTetrominoEiii>
        container.invalidate();
 8005082:	1d30      	adds	r0, r6, #4
}
 8005084:	b009      	add	sp, #36	@ 0x24
 8005086:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800508a:	f00e b82f 	b.w	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
	...

08005090 <_ZN11Screen1View17drawNextTetrominoEv>:
{
 8005090:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    switch(nextShape) {
 8005094:	f500 5b00 	add.w	fp, r0, #8192	@ 0x2000
{
 8005098:	b085      	sub	sp, #20
    switch(nextShape) {
 800509a:	f8db 2c68 	ldr.w	r2, [fp, #3176]	@ 0xc68
{
 800509e:	4605      	mov	r5, r0
    switch(nextShape) {
 80050a0:	2a00      	cmp	r2, #0
 80050a2:	d057      	beq.n	8005154 <_ZN11Screen1View17drawNextTetrominoEv+0xc4>
            NEXT_START_Y = 123;
 80050a4:	2a03      	cmp	r2, #3
 80050a6:	f04f 0a7b 	mov.w	sl, #123	@ 0x7b
 80050aa:	bf0c      	ite	eq
 80050ac:	f04f 09c3 	moveq.w	r9, #195	@ 0xc3
 80050b0:	f04f 09c0 	movne.w	r9, #192	@ 0xc0
    for(int y = 0; y < 4; y++) {
 80050b4:	f505 5822 	add.w	r8, r5, #10368	@ 0x2880
        container.remove(d);
 80050b8:	1d2b      	adds	r3, r5, #4
        for(int x = 0; x < 4; x++) {
 80050ba:	2400      	movs	r4, #0
 80050bc:	f108 083c 	add.w	r8, r8, #60	@ 0x3c
 80050c0:	9301      	str	r3, [sp, #4]
 80050c2:	eb08 0704 	add.w	r7, r8, r4
 80050c6:	2600      	movs	r6, #0
 80050c8:	4639      	mov	r1, r7
 80050ca:	9801      	ldr	r0, [sp, #4]
 80050cc:	3601      	adds	r6, #1
 80050ce:	f007 f9a8 	bl	800c422 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80050d2:	2e04      	cmp	r6, #4
 80050d4:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 80050d8:	d1f6      	bne.n	80050c8 <_ZN11Screen1View17drawNextTetrominoEv+0x38>
    for(int y = 0; y < 4; y++) {
 80050da:	34b0      	adds	r4, #176	@ 0xb0
 80050dc:	f5b4 7f30 	cmp.w	r4, #704	@ 0x2c0
 80050e0:	d1ef      	bne.n	80050c2 <_ZN11Screen1View17drawNextTetrominoEv+0x32>
    for(int y = 0; y < 4; y++) {
 80050e2:	2400      	movs	r4, #0
        for(int x = 0; x < 4; x++) {
 80050e4:	f642 07bc 	movw	r7, #10428	@ 0x28bc
 80050e8:	23b0      	movs	r3, #176	@ 0xb0
 80050ea:	fb03 7704 	mla	r7, r3, r4, r7
 80050ee:	2600      	movs	r6, #0
            if(TETROMINOS[nextShape][y][x] == 1) {
 80050f0:	f8db 2c68 	ldr.w	r2, [fp, #3176]	@ 0xc68
 80050f4:	4b1a      	ldr	r3, [pc, #104]	@ (8005160 <_ZN11Screen1View17drawNextTetrominoEv+0xd0>)
 80050f6:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80050fa:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 80050fe:	5d92      	ldrb	r2, [r2, r6]
 8005100:	2a01      	cmp	r2, #1
 8005102:	d11c      	bne.n	800513e <_ZN11Screen1View17drawNextTetrominoEv+0xae>
                nextBlocks[y][x].setXY(
 8005104:	eb04 02c4 	add.w	r2, r4, r4, lsl #3
 8005108:	eb06 01c6 	add.w	r1, r6, r6, lsl #3
 800510c:	eb05 0807 	add.w	r8, r5, r7
 8005110:	4452      	add	r2, sl
 8005112:	4449      	add	r1, r9
 8005114:	b212      	sxth	r2, r2
 8005116:	b209      	sxth	r1, r1
 8005118:	4640      	mov	r0, r8
 800511a:	f7fe f942 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
                nextBlocks[y][x].setBitmap(Bitmap(TETROMINO_NEXT_IMAGES[nextShape]));
 800511e:	f8db 1c68 	ldr.w	r1, [fp, #3176]	@ 0xc68
 8005122:	4b10      	ldr	r3, [pc, #64]	@ (8005164 <_ZN11Screen1View17drawNextTetrominoEv+0xd4>)
 8005124:	59ea      	ldr	r2, [r5, r7]
 8005126:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 800512a:	f8ad 100c 	strh.w	r1, [sp, #12]
 800512e:	4640      	mov	r0, r8
 8005130:	a903      	add	r1, sp, #12
 8005132:	6e12      	ldr	r2, [r2, #96]	@ 0x60
 8005134:	4790      	blx	r2
        container.add(d);
 8005136:	9801      	ldr	r0, [sp, #4]
 8005138:	4641      	mov	r1, r8
 800513a:	f007 f931 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        for(int x = 0; x < 4; x++) {
 800513e:	3601      	adds	r6, #1
 8005140:	2e04      	cmp	r6, #4
 8005142:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 8005146:	d1d3      	bne.n	80050f0 <_ZN11Screen1View17drawNextTetrominoEv+0x60>
    for(int y = 0; y < 4; y++) {
 8005148:	3401      	adds	r4, #1
 800514a:	2c04      	cmp	r4, #4
 800514c:	d1ca      	bne.n	80050e4 <_ZN11Screen1View17drawNextTetrominoEv+0x54>
}
 800514e:	b005      	add	sp, #20
 8005150:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            NEXT_START_Y = 127;
 8005154:	f04f 0a7f 	mov.w	sl, #127	@ 0x7f
            NEXT_START_X = 187;
 8005158:	f04f 09bb 	mov.w	r9, #187	@ 0xbb
 800515c:	e7aa      	b.n	80050b4 <_ZN11Screen1View17drawNextTetrominoEv+0x24>
 800515e:	bf00      	nop
 8005160:	0802823c 	.word	0x0802823c
 8005164:	08028220 	.word	0x08028220

08005168 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View() : 
 8005168:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800516c:	4605      	mov	r5, r0
    randomSeed(2611)
 800516e:	f7fe f9d3 	bl	8003518 <_ZN15Screen1ViewBaseC1Ev>
 8005172:	4b57      	ldr	r3, [pc, #348]	@ (80052d0 <_ZN11Screen1ViewC1Ev+0x168>)
 8005174:	602b      	str	r3, [r5, #0]
 8005176:	f505 7667 	add.w	r6, r5, #924	@ 0x39c
 800517a:	f205 645c 	addw	r4, r5, #1628	@ 0x65c
 800517e:	f64f 78ff 	movw	r8, #65535	@ 0xffff
 8005182:	f106 07b0 	add.w	r7, r6, #176	@ 0xb0
 8005186:	4630      	mov	r0, r6
 8005188:	4669      	mov	r1, sp
 800518a:	362c      	adds	r6, #44	@ 0x2c
 800518c:	f8ad 8000 	strh.w	r8, [sp]
 8005190:	f7fe f94e 	bl	8003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8005194:	42be      	cmp	r6, r7
 8005196:	d1f6      	bne.n	8005186 <_ZN11Screen1ViewC1Ev+0x1e>
 8005198:	42a6      	cmp	r6, r4
 800519a:	d1f2      	bne.n	8005182 <_ZN11Screen1ViewC1Ev+0x1a>
 800519c:	f505 5622 	add.w	r6, r5, #10368	@ 0x2880
 80051a0:	363c      	adds	r6, #60	@ 0x3c
 80051a2:	f64f 78ff 	movw	r8, #65535	@ 0xffff
 80051a6:	f504 77dc 	add.w	r7, r4, #440	@ 0x1b8
 80051aa:	4620      	mov	r0, r4
 80051ac:	4669      	mov	r1, sp
 80051ae:	342c      	adds	r4, #44	@ 0x2c
 80051b0:	f8ad 8000 	strh.w	r8, [sp]
 80051b4:	f7fe f93c 	bl	8003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80051b8:	42bc      	cmp	r4, r7
 80051ba:	d1f6      	bne.n	80051aa <_ZN11Screen1ViewC1Ev+0x42>
 80051bc:	42b4      	cmp	r4, r6
 80051be:	d1f2      	bne.n	80051a6 <_ZN11Screen1ViewC1Ev+0x3e>
 80051c0:	f505 572d 	add.w	r7, r5, #11072	@ 0x2b40
 80051c4:	373c      	adds	r7, #60	@ 0x3c
 80051c6:	f64f 78ff 	movw	r8, #65535	@ 0xffff
Screen1View::Screen1View() : 
 80051ca:	4634      	mov	r4, r6
    randomSeed(2611)
 80051cc:	36b0      	adds	r6, #176	@ 0xb0
 80051ce:	4620      	mov	r0, r4
 80051d0:	4669      	mov	r1, sp
 80051d2:	342c      	adds	r4, #44	@ 0x2c
 80051d4:	f8ad 8000 	strh.w	r8, [sp]
 80051d8:	f7fe f92a 	bl	8003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80051dc:	42b4      	cmp	r4, r6
 80051de:	d1f6      	bne.n	80051ce <_ZN11Screen1ViewC1Ev+0x66>
 80051e0:	42bc      	cmp	r4, r7
 80051e2:	4626      	mov	r6, r4
 80051e4:	d1f1      	bne.n	80051ca <_ZN11Screen1ViewC1Ev+0x62>
 80051e6:	f505 5131 	add.w	r1, r5, #11328	@ 0x2c40
        : Box(), borderColor(0), borderSize(0)
 80051ea:	483a      	ldr	r0, [pc, #232]	@ (80052d4 <_ZN11Screen1ViewC1Ev+0x16c>)
 80051ec:	4623      	mov	r3, r4
 80051ee:	310c      	adds	r1, #12
 80051f0:	2200      	movs	r2, #0
          visible(true)
 80051f2:	2601      	movs	r6, #1
        : Widget(), alpha(255), color(0)
 80051f4:	24ff      	movs	r4, #255	@ 0xff
 80051f6:	809a      	strh	r2, [r3, #4]
 80051f8:	80da      	strh	r2, [r3, #6]
 80051fa:	811a      	strh	r2, [r3, #8]
 80051fc:	815a      	strh	r2, [r3, #10]
 80051fe:	819a      	strh	r2, [r3, #12]
 8005200:	81da      	strh	r2, [r3, #14]
 8005202:	821a      	strh	r2, [r3, #16]
 8005204:	825a      	strh	r2, [r3, #18]
          nextDrawChainElement(0),
 8005206:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 8005208:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 800520a:	845a      	strh	r2, [r3, #34]	@ 0x22
          touchable(false),
 800520c:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
          visible(true)
 8005210:	f883 6025 	strb.w	r6, [r3, #37]	@ 0x25
 8005214:	f883 4026 	strb.w	r4, [r3, #38]	@ 0x26
        : color(col)
 8005218:	629a      	str	r2, [r3, #40]	@ 0x28
 800521a:	6018      	str	r0, [r3, #0]
 800521c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800521e:	861a      	strh	r2, [r3, #48]	@ 0x30
          nextSibling(0),
 8005220:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8005224:	3334      	adds	r3, #52	@ 0x34
 8005226:	428b      	cmp	r3, r1
 8005228:	d1e5      	bne.n	80051f6 <_ZN11Screen1ViewC1Ev+0x8e>
    currentX(80),
 800522a:	f505 5400 	add.w	r4, r5, #8192	@ 0x2000
 800522e:	2350      	movs	r3, #80	@ 0x50
 8005230:	f8c4 3c5c 	str.w	r3, [r4, #3164]	@ 0xc5c
    currentY(10),
 8005234:	230a      	movs	r3, #10
 8005236:	f8c4 3c60 	str.w	r3, [r4, #3168]	@ 0xc60
    randomSeed(2611)
 800523a:	f640 2333 	movw	r3, #2611	@ 0xa33
 800523e:	f8c4 3c80 	str.w	r3, [r4, #3200]	@ 0xc80
    currentShape(0),
 8005242:	f8c4 2c64 	str.w	r2, [r4, #3172]	@ 0xc64
    tickCount(0),
 8005246:	f8c4 2c6c 	str.w	r2, [r4, #3180]	@ 0xc6c
    isGameOver(false),
 800524a:	f884 2c74 	strb.w	r2, [r4, #3188]	@ 0xc74
    initializeBag();
 800524e:	4628      	mov	r0, r5
 8005250:	f7ff fda2 	bl	8004d98 <_ZN11Screen1View13initializeBagEv>
    nextShape = getNextShape();
 8005254:	4628      	mov	r0, r5
 8005256:	f7ff fdb3 	bl	8004dc0 <_ZN11Screen1View12getNextShapeEv>
    memset(board, 0, sizeof(board));
 800525a:	22c8      	movs	r2, #200	@ 0xc8
    nextShape = getNextShape();
 800525c:	f8c4 0c68 	str.w	r0, [r4, #3176]	@ 0xc68
    memset(board, 0, sizeof(board));
 8005260:	2100      	movs	r1, #0
 8005262:	f505 7035 	add.w	r0, r5, #724	@ 0x2d4
 8005266:	f020 fca4 	bl	8025bb2 <memset>
    memcpy(currentTetromino, TETROMINOS[currentShape], sizeof(currentTetromino));
 800526a:	4b1b      	ldr	r3, [pc, #108]	@ (80052d8 <_ZN11Screen1ViewC1Ev+0x170>)
 800526c:	f604 424c 	addw	r2, r4, #3148	@ 0xc4c
 8005270:	f103 0110 	add.w	r1, r3, #16
 8005274:	f853 0b04 	ldr.w	r0, [r3], #4
 8005278:	f842 0b04 	str.w	r0, [r2], #4
 800527c:	428b      	cmp	r3, r1
 800527e:	d1f9      	bne.n	8005274 <_ZN11Screen1ViewC1Ev+0x10c>
    drawTetromino(currentShape, currentX, currentY);
 8005280:	230a      	movs	r3, #10
 8005282:	2250      	movs	r2, #80	@ 0x50
 8005284:	2100      	movs	r1, #0
 8005286:	4628      	mov	r0, r5
 8005288:	f7ff fe02 	bl	8004e90 <_ZN11Screen1View13drawTetrominoEiii>
    drawNextTetromino();
 800528c:	4628      	mov	r0, r5
 800528e:	f7ff feff 	bl	8005090 <_ZN11Screen1View17drawNextTetrominoEv>
    score = 0;
 8005292:	2300      	movs	r3, #0
 8005294:	f8c4 3c70 	str.w	r3, [r4, #3184]	@ 0xc70
    Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 8005298:	f505 5432 	add.w	r4, r5, #11392	@ 0x2c80
 800529c:	3404      	adds	r4, #4
 800529e:	4a0f      	ldr	r2, [pc, #60]	@ (80052dc <_ZN11Screen1ViewC1Ev+0x174>)
 80052a0:	2114      	movs	r1, #20
 80052a2:	4620      	mov	r0, r4
 80052a4:	f010 fa08 	bl	80156b8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80052a8:	f8c5 4158 	str.w	r4, [r5, #344]	@ 0x158
        : typedTextId(id)
 80052ac:	4b0c      	ldr	r3, [pc, #48]	@ (80052e0 <_ZN11Screen1ViewC1Ev+0x178>)
 80052ae:	9300      	str	r3, [sp, #0]
    textArea1.setTypedText(touchgfx::TypedText(T_MAN1));
 80052b0:	f505 7488 	add.w	r4, r5, #272	@ 0x110
 80052b4:	230e      	movs	r3, #14
 80052b6:	4669      	mov	r1, sp
 80052b8:	4620      	mov	r0, r4
 80052ba:	f8ad 3004 	strh.w	r3, [sp, #4]
 80052be:	f00a f80b 	bl	800f2d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea1.invalidate(); // Vẽ lại nội dung
 80052c2:	4620      	mov	r0, r4
 80052c4:	f00d ff12 	bl	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
}
 80052c8:	4628      	mov	r0, r5
 80052ca:	b002      	add	sp, #8
 80052cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80052d0:	080281f4 	.word	0x080281f4
 80052d4:	08028b40 	.word	0x08028b40
 80052d8:	0802823c 	.word	0x0802823c
 80052dc:	0802772d 	.word	0x0802772d
 80052e0:	08027d58 	.word	0x08027d58

080052e4 <_ZN11Screen1View18createNewTetrominoEv>:
{
 80052e4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    if (isGameOver) {
 80052e6:	f500 5500 	add.w	r5, r0, #8192	@ 0x2000
{
 80052ea:	4604      	mov	r4, r0
    if (isGameOver) {
 80052ec:	f895 3c74 	ldrb.w	r3, [r5, #3188]	@ 0xc74
 80052f0:	2b00      	cmp	r3, #0
 80052f2:	f040 808e 	bne.w	8005412 <_ZN11Screen1View18createNewTetrominoEv+0x12e>
    currentY = 10;
 80052f6:	230a      	movs	r3, #10
    currentShape = nextShape;
 80052f8:	f8d5 6c68 	ldr.w	r6, [r5, #3176]	@ 0xc68
    currentY = 10;
 80052fc:	f8c5 3c60 	str.w	r3, [r5, #3168]	@ 0xc60
    currentX = 80;
 8005300:	2350      	movs	r3, #80	@ 0x50
 8005302:	f8c5 3c5c 	str.w	r3, [r5, #3164]	@ 0xc5c
    currentShape = nextShape;
 8005306:	f8c5 6c64 	str.w	r6, [r5, #3172]	@ 0xc64
    nextShape = getNextShape();
 800530a:	f7ff fd59 	bl	8004dc0 <_ZN11Screen1View12getNextShapeEv>
    memcpy(currentTetromino, TETROMINOS[currentShape], sizeof(currentTetromino));
 800530e:	4b42      	ldr	r3, [pc, #264]	@ (8005418 <_ZN11Screen1View18createNewTetrominoEv+0x134>)
    nextShape = getNextShape();
 8005310:	f8c5 0c68 	str.w	r0, [r5, #3176]	@ 0xc68
    memcpy(currentTetromino, TETROMINOS[currentShape], sizeof(currentTetromino));
 8005314:	eb03 1306 	add.w	r3, r3, r6, lsl #4
 8005318:	f504 5231 	add.w	r2, r4, #11328	@ 0x2c40
 800531c:	320c      	adds	r2, #12
 800531e:	f103 0110 	add.w	r1, r3, #16
 8005322:	f853 0b04 	ldr.w	r0, [r3], #4
 8005326:	f842 0b04 	str.w	r0, [r2], #4
 800532a:	428b      	cmp	r3, r1
 800532c:	d1f9      	bne.n	8005322 <_ZN11Screen1View18createNewTetrominoEv+0x3e>
    drawNextTetromino();
 800532e:	4620      	mov	r0, r4
 8005330:	f7ff feae 	bl	8005090 <_ZN11Screen1View17drawNextTetrominoEv>
    for(int y = 0; y < 4 && canCreate; y++) {
 8005334:	f504 5131 	add.w	r1, r4, #11328	@ 0x2c40
 8005338:	310b      	adds	r1, #11
 800533a:	2600      	movs	r6, #0
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 800533c:	f04f 0c0f 	mov.w	ip, #15
{
 8005340:	460f      	mov	r7, r1
        for(int x = 0; x < 4; x++) {
 8005342:	2000      	movs	r0, #0
            if(currentTetromino[y][x]) {  // Nếu ô này có khối
 8005344:	f817 3f01 	ldrb.w	r3, [r7, #1]!
 8005348:	b1c3      	cbz	r3, 800537c <_ZN11Screen1View18createNewTetrominoEv+0x98>
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 800534a:	f8d5 2c5c 	ldr.w	r2, [r5, #3164]	@ 0xc5c
 800534e:	3a14      	subs	r2, #20
 8005350:	fb92 f2fc 	sdiv	r2, r2, ip
 8005354:	4402      	add	r2, r0
                if(boardX >= 0 && boardX < BOARD_WIDTH && 
 8005356:	2a09      	cmp	r2, #9
 8005358:	d810      	bhi.n	800537c <_ZN11Screen1View18createNewTetrominoEv+0x98>
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 800535a:	f8d5 3c60 	ldr.w	r3, [r5, #3168]	@ 0xc60
 800535e:	3b0a      	subs	r3, #10
 8005360:	fb93 f3fc 	sdiv	r3, r3, ip
 8005364:	4433      	add	r3, r6
                if(boardX >= 0 && boardX < BOARD_WIDTH && 
 8005366:	2b13      	cmp	r3, #19
 8005368:	d808      	bhi.n	800537c <_ZN11Screen1View18createNewTetrominoEv+0x98>
                   board[boardY][boardX]) {
 800536a:	f04f 0e0a 	mov.w	lr, #10
 800536e:	fb0e 4303 	mla	r3, lr, r3, r4
 8005372:	4413      	add	r3, r2
                   boardY >= 0 && boardY < BOARD_HEIGHT && 
 8005374:	f893 32d4 	ldrb.w	r3, [r3, #724]	@ 0x2d4
 8005378:	2b00      	cmp	r3, #0
 800537a:	d13a      	bne.n	80053f2 <_ZN11Screen1View18createNewTetrominoEv+0x10e>
        for(int x = 0; x < 4; x++) {
 800537c:	3001      	adds	r0, #1
 800537e:	2804      	cmp	r0, #4
 8005380:	d1e0      	bne.n	8005344 <_ZN11Screen1View18createNewTetrominoEv+0x60>
 8005382:	2301      	movs	r3, #1
    for(int y = 0; y < 4 && canCreate; y++) {
 8005384:	3601      	adds	r6, #1
 8005386:	2e04      	cmp	r6, #4
 8005388:	d035      	beq.n	80053f6 <_ZN11Screen1View18createNewTetrominoEv+0x112>
 800538a:	3104      	adds	r1, #4
 800538c:	2b00      	cmp	r3, #0
 800538e:	d1d7      	bne.n	8005340 <_ZN11Screen1View18createNewTetrominoEv+0x5c>
        isGameOver = true;
 8005390:	2601      	movs	r6, #1
 8005392:	f885 6c74 	strb.w	r6, [r5, #3188]	@ 0xc74
        clearScreen();
 8005396:	4620      	mov	r0, r4
        Unicode::snprintf(textArea2Buffer, sizeof(textArea2Buffer), "%d", score);
 8005398:	f504 5732 	add.w	r7, r4, #11392	@ 0x2c80
        clearScreen();
 800539c:	f7ff fd29 	bl	8004df2 <_ZN11Screen1View11clearScreenEv>
        Unicode::snprintf(textArea2Buffer, sizeof(textArea2Buffer), "%d", score);
 80053a0:	3718      	adds	r7, #24
        visible = vis;
 80053a2:	2300      	movs	r3, #0
 80053a4:	4a1d      	ldr	r2, [pc, #116]	@ (800541c <_ZN11Screen1View18createNewTetrominoEv+0x138>)
 80053a6:	f884 30bd 	strb.w	r3, [r4, #189]	@ 0xbd
 80053aa:	f884 6181 	strb.w	r6, [r4, #385]	@ 0x181
 80053ae:	f8d5 3c70 	ldr.w	r3, [r5, #3184]	@ 0xc70
 80053b2:	f884 61ad 	strb.w	r6, [r4, #429]	@ 0x1ad
 80053b6:	f884 6225 	strb.w	r6, [r4, #549]	@ 0x225
 80053ba:	2114      	movs	r1, #20
 80053bc:	4638      	mov	r0, r7
 80053be:	f010 f97b 	bl	80156b8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        textArea2.setTypedText(touchgfx::TypedText(T_MAN1SCORE));
 80053c2:	f504 751e 	add.w	r5, r4, #632	@ 0x278
 80053c6:	4b16      	ldr	r3, [pc, #88]	@ (8005420 <_ZN11Screen1View18createNewTetrominoEv+0x13c>)
 80053c8:	9300      	str	r3, [sp, #0]
 80053ca:	4669      	mov	r1, sp
 80053cc:	230c      	movs	r3, #12
 80053ce:	4628      	mov	r0, r5
 80053d0:	f884 629d 	strb.w	r6, [r4, #669]	@ 0x29d
 80053d4:	f8c4 72c0 	str.w	r7, [r4, #704]	@ 0x2c0
 80053d8:	f8ad 3004 	strh.w	r3, [sp, #4]
 80053dc:	f009 ff7c 	bl	800f2d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        textArea2.invalidate();
 80053e0:	4628      	mov	r0, r5
 80053e2:	f00d fe83 	bl	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
        container.invalidate();
 80053e6:	1d20      	adds	r0, r4, #4
}
 80053e8:	b003      	add	sp, #12
 80053ea:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80053ee:	f00d be7d 	b.w	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
                    canCreate = false;
 80053f2:	2300      	movs	r3, #0
 80053f4:	e7c6      	b.n	8005384 <_ZN11Screen1View18createNewTetrominoEv+0xa0>
    if (!canCreate) {
 80053f6:	2b00      	cmp	r3, #0
 80053f8:	d0ca      	beq.n	8005390 <_ZN11Screen1View18createNewTetrominoEv+0xac>
        drawTetromino(currentShape, currentX, currentY);
 80053fa:	f8d5 3c60 	ldr.w	r3, [r5, #3168]	@ 0xc60
 80053fe:	f8d5 2c5c 	ldr.w	r2, [r5, #3164]	@ 0xc5c
 8005402:	f8d5 1c64 	ldr.w	r1, [r5, #3172]	@ 0xc64
 8005406:	4620      	mov	r0, r4
}
 8005408:	b003      	add	sp, #12
 800540a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
        drawTetromino(currentShape, currentX, currentY);
 800540e:	f7ff bd3f 	b.w	8004e90 <_ZN11Screen1View13drawTetrominoEiii>
}
 8005412:	b003      	add	sp, #12
 8005414:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005416:	bf00      	nop
 8005418:	0802823c 	.word	0x0802823c
 800541c:	0802772d 	.word	0x0802772d
 8005420:	08027d58 	.word	0x08027d58

08005424 <_ZN11Screen1View18checkAndClearLinesEv>:
{
 8005424:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005428:	b09d      	sub	sp, #116	@ 0x74
 800542a:	4605      	mov	r5, r0
    int fullLines[BOARD_HEIGHT] = {0};  // Track which lines are full
 800542c:	2250      	movs	r2, #80	@ 0x50
 800542e:	2100      	movs	r1, #0
 8005430:	a808      	add	r0, sp, #32
 8005432:	f020 fbbe 	bl	8025bb2 <memset>
    int numFullLines = 0;
 8005436:	2400      	movs	r4, #0
 8005438:	f205 3291 	addw	r2, r5, #913	@ 0x391
    for(int y = BOARD_HEIGHT - 1; y >= 0; y--) {
 800543c:	2313      	movs	r3, #19
{
 800543e:	4610      	mov	r0, r2
        for(int x = 0; x < BOARD_WIDTH; x++) {
 8005440:	2100      	movs	r1, #0
            if(!board[y][x]) {
 8005442:	f810 6f01 	ldrb.w	r6, [r0, #1]!
 8005446:	b146      	cbz	r6, 800545a <_ZN11Screen1View18checkAndClearLinesEv+0x36>
        for(int x = 0; x < BOARD_WIDTH; x++) {
 8005448:	3101      	adds	r1, #1
 800544a:	290a      	cmp	r1, #10
 800544c:	d1f9      	bne.n	8005442 <_ZN11Screen1View18checkAndClearLinesEv+0x1e>
            fullLines[numFullLines++] = y;
 800544e:	a91c      	add	r1, sp, #112	@ 0x70
 8005450:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8005454:	3401      	adds	r4, #1
 8005456:	f841 3c50 	str.w	r3, [r1, #-80]
    for(int y = BOARD_HEIGHT - 1; y >= 0; y--) {
 800545a:	3b01      	subs	r3, #1
 800545c:	1c59      	adds	r1, r3, #1
 800545e:	f1a2 020a 	sub.w	r2, r2, #10
 8005462:	d1ec      	bne.n	800543e <_ZN11Screen1View18checkAndClearLinesEv+0x1a>
    if(numFullLines > 0) {
 8005464:	2c00      	cmp	r4, #0
 8005466:	f340 80e8 	ble.w	800563a <_ZN11Screen1View18checkAndClearLinesEv+0x216>
            score += 10; // 1 line cleared
 800546a:	f505 5200 	add.w	r2, r5, #8192	@ 0x2000
        if (numFullLines == 1) {
 800546e:	2c01      	cmp	r4, #1
            score += 10; // 1 line cleared
 8005470:	f8d2 3c70 	ldr.w	r3, [r2, #3184]	@ 0xc70
        if (numFullLines == 1) {
 8005474:	d14d      	bne.n	8005512 <_ZN11Screen1View18checkAndClearLinesEv+0xee>
            score += 10; // 1 line cleared
 8005476:	330a      	adds	r3, #10
        Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 8005478:	f505 5632 	add.w	r6, r5, #11392	@ 0x2c80
 800547c:	3604      	adds	r6, #4
            score += 10; // 1 line cleared
 800547e:	f8c2 3c70 	str.w	r3, [r2, #3184]	@ 0xc70
        Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 8005482:	2114      	movs	r1, #20
 8005484:	4a6e      	ldr	r2, [pc, #440]	@ (8005640 <_ZN11Screen1View18checkAndClearLinesEv+0x21c>)
 8005486:	4630      	mov	r0, r6
 8005488:	f010 f916 	bl	80156b8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800548c:	4b6d      	ldr	r3, [pc, #436]	@ (8005644 <_ZN11Screen1View18checkAndClearLinesEv+0x220>)
 800548e:	f8c5 6158 	str.w	r6, [r5, #344]	@ 0x158
        textArea1.setTypedText(touchgfx::TypedText(T_MAN1));
 8005492:	f505 7688 	add.w	r6, r5, #272	@ 0x110
 8005496:	4630      	mov	r0, r6
 8005498:	9306      	str	r3, [sp, #24]
 800549a:	a906      	add	r1, sp, #24
 800549c:	230e      	movs	r3, #14
 800549e:	f8ad 301c 	strh.w	r3, [sp, #28]
 80054a2:	f009 ff19 	bl	800f2d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        textArea1.invalidate(); // Vẽ lại nội dung
 80054a6:	4630      	mov	r0, r6
 80054a8:	f06f 062a 	mvn.w	r6, #42	@ 0x2a
 80054ac:	436e      	muls	r6, r5
 80054ae:	f00d fe1d 	bl	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
                remove(staticBlocks[lineY][x]);
 80054b2:	f5a6 46eb 	sub.w	r6, r6, #30080	@ 0x7580
        for(int i = 0; i < numFullLines; i++) {
 80054b6:	2300      	movs	r3, #0
        textArea1.invalidate(); // Vẽ lại nội dung
 80054b8:	f10d 0920 	add.w	r9, sp, #32
        for(int i = 0; i < numFullLines; i++) {
 80054bc:	9301      	str	r3, [sp, #4]
 80054be:	f04f 0b0a 	mov.w	fp, #10
        container.remove(d);
 80054c2:	f105 0a04 	add.w	sl, r5, #4
                remove(staticBlocks[lineY][x]);
 80054c6:	3e68      	subs	r6, #104	@ 0x68
            int lineY = fullLines[i];
 80054c8:	f859 7b04 	ldr.w	r7, [r9], #4
            for(int x = 0; x < BOARD_WIDTH; x++) {
 80054cc:	fb0b 5707 	mla	r7, fp, r7, r5
 80054d0:	f207 27d3 	addw	r7, r7, #723	@ 0x2d3
 80054d4:	f04f 0800 	mov.w	r8, #0
                remove(staticBlocks[lineY][x]);
 80054d8:	222c      	movs	r2, #44	@ 0x2c
 80054da:	fb02 6107 	mla	r1, r2, r7, r6
 80054de:	4650      	mov	r0, sl
            for(int x = 0; x < BOARD_WIDTH; x++) {
 80054e0:	f108 0801 	add.w	r8, r8, #1
 80054e4:	f006 ff9d 	bl	800c422 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
                board[lineY][x] = false;
 80054e8:	2300      	movs	r3, #0
            for(int x = 0; x < BOARD_WIDTH; x++) {
 80054ea:	f1b8 0f0a 	cmp.w	r8, #10
                board[lineY][x] = false;
 80054ee:	f807 3f01 	strb.w	r3, [r7, #1]!
            for(int x = 0; x < BOARD_WIDTH; x++) {
 80054f2:	f04f 022c 	mov.w	r2, #44	@ 0x2c
 80054f6:	d1f0      	bne.n	80054da <_ZN11Screen1View18checkAndClearLinesEv+0xb6>
        for(int i = 0; i < numFullLines; i++) {
 80054f8:	9a01      	ldr	r2, [sp, #4]
 80054fa:	3201      	adds	r2, #1
 80054fc:	4294      	cmp	r4, r2
 80054fe:	d111      	bne.n	8005524 <_ZN11Screen1View18checkAndClearLinesEv+0x100>
        for(int y = fullLines[0]; y >= 0; y--) {
 8005500:	9f08      	ldr	r7, [sp, #32]
 8005502:	2f00      	cmp	r7, #0
 8005504:	da1f      	bge.n	8005546 <_ZN11Screen1View18checkAndClearLinesEv+0x122>
        container.invalidate();
 8005506:	4650      	mov	r0, sl
}
 8005508:	b01d      	add	sp, #116	@ 0x74
 800550a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800550e:	f00d bded 	b.w	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
        } else if (numFullLines == 2) {
 8005512:	2c02      	cmp	r4, #2
 8005514:	d101      	bne.n	800551a <_ZN11Screen1View18checkAndClearLinesEv+0xf6>
            score += 30; // 2 lines cleared
 8005516:	331e      	adds	r3, #30
 8005518:	e7ae      	b.n	8005478 <_ZN11Screen1View18checkAndClearLinesEv+0x54>
        } else if (numFullLines == 3) {
 800551a:	2c03      	cmp	r4, #3
            score += 50; // 3 lines cleared
 800551c:	bf0c      	ite	eq
 800551e:	3332      	addeq	r3, #50	@ 0x32
            score += 100; // 4 or more lines cleared
 8005520:	3364      	addne	r3, #100	@ 0x64
 8005522:	e7a9      	b.n	8005478 <_ZN11Screen1View18checkAndClearLinesEv+0x54>
 8005524:	9201      	str	r2, [sp, #4]
 8005526:	e7cf      	b.n	80054c8 <_ZN11Screen1View18checkAndClearLinesEv+0xa4>
 8005528:	4622      	mov	r2, r4
                if(fullLines[i] > y) shiftDown++;
 800552a:	f850 4b04 	ldr.w	r4, [r0], #4
            for(int i = 0; i < numFullLines; i++) {
 800552e:	9e01      	ldr	r6, [sp, #4]
                if(fullLines[i] > y) shiftDown++;
 8005530:	42bc      	cmp	r4, r7
 8005532:	bfc8      	it	gt
 8005534:	3101      	addgt	r1, #1
            for(int i = 0; i < numFullLines; i++) {
 8005536:	4296      	cmp	r6, r2
 8005538:	f102 0401 	add.w	r4, r2, #1
 800553c:	d1f4      	bne.n	8005528 <_ZN11Screen1View18checkAndClearLinesEv+0x104>
            if(shiftDown > 0) {
 800553e:	2900      	cmp	r1, #0
 8005540:	dc05      	bgt.n	800554e <_ZN11Screen1View18checkAndClearLinesEv+0x12a>
        for(int y = fullLines[0]; y >= 0; y--) {
 8005542:	3f01      	subs	r7, #1
 8005544:	e7dd      	b.n	8005502 <_ZN11Screen1View18checkAndClearLinesEv+0xde>
            for(int i = 0; i < numFullLines; i++) {
 8005546:	2200      	movs	r2, #0
 8005548:	a808      	add	r0, sp, #32
            int shiftDown = 0;
 800554a:	4611      	mov	r1, r2
 800554c:	e7ed      	b.n	800552a <_ZN11Screen1View18checkAndClearLinesEv+0x106>
                        board[y + shiftDown][x] = true;
 800554e:	4439      	add	r1, r7
 8005550:	200a      	movs	r0, #10
 8005552:	fb00 f407 	mul.w	r4, r0, r7
                            10 + ((y + shiftDown) * BLOCK_SIZE)
 8005556:	ebc1 1201 	rsb	r2, r1, r1, lsl #4
 800555a:	f44f 7cdc 	mov.w	ip, #440	@ 0x1b8
 800555e:	f205 29d3 	addw	r9, r5, #723	@ 0x2d3
 8005562:	fb0c 5601 	mla	r6, ip, r1, r5
 8005566:	320a      	adds	r2, #10
 8005568:	9402      	str	r4, [sp, #8]
 800556a:	44a1      	add	r9, r4
 800556c:	4341      	muls	r1, r0
 800556e:	f205 645c 	addw	r4, r5, #1628	@ 0x65c
                        staticBlocks[y + shiftDown][x].setXY(
 8005572:	b212      	sxth	r2, r2
 8005574:	fb0c 4407 	mla	r4, ip, r7, r4
 8005578:	9103      	str	r1, [sp, #12]
 800557a:	46b3      	mov	fp, r6
 800557c:	f04f 0814 	mov.w	r8, #20
                    if(board[y][x]) {
 8005580:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8005584:	2900      	cmp	r1, #0
 8005586:	d04a      	beq.n	800561e <_ZN11Screen1View18checkAndClearLinesEv+0x1fa>
                        board[y + shiftDown][x] = true;
 8005588:	9902      	ldr	r1, [sp, #8]
 800558a:	9803      	ldr	r0, [sp, #12]
                        staticBlocks[y + shiftDown][x].setXY(
 800558c:	9205      	str	r2, [sp, #20]
                        board[y + shiftDown][x] = true;
 800558e:	eba9 0101 	sub.w	r1, r9, r1
 8005592:	f04f 0c01 	mov.w	ip, #1
 8005596:	f801 c000 	strb.w	ip, [r1, r0]
class Drawable
 800559a:	e9d4 0101 	ldrd	r0, r1, [r4, #4]
 800559e:	f506 6ecc 	add.w	lr, r6, #1632	@ 0x660
                        board[y][x] = false;
 80055a2:	f889 3000 	strb.w	r3, [r9]
 80055a6:	e88e 0003 	stmia.w	lr, {r0, r1}
 80055aa:	e9d4 0103 	ldrd	r0, r1, [r4, #12]
 80055ae:	f506 6ecd 	add.w	lr, r6, #1640	@ 0x668
 80055b2:	e88e 0003 	stmia.w	lr, {r0, r1}
 80055b6:	6961      	ldr	r1, [r4, #20]
 80055b8:	f8c6 1670 	str.w	r1, [r6, #1648]	@ 0x670
 80055bc:	69a1      	ldr	r1, [r4, #24]
 80055be:	f8c6 1674 	str.w	r1, [r6, #1652]	@ 0x674
 80055c2:	69e1      	ldr	r1, [r4, #28]
 80055c4:	f8c6 1678 	str.w	r1, [r6, #1656]	@ 0x678
 80055c8:	f9b4 1020 	ldrsh.w	r1, [r4, #32]
 80055cc:	f8a6 167c 	strh.w	r1, [r6, #1660]	@ 0x67c
 80055d0:	f9b4 1022 	ldrsh.w	r1, [r4, #34]	@ 0x22
 80055d4:	f8a6 167e 	strh.w	r1, [r6, #1662]	@ 0x67e
 80055d8:	f894 1024 	ldrb.w	r1, [r4, #36]	@ 0x24
 80055dc:	f886 1680 	strb.w	r1, [r6, #1664]	@ 0x680
 80055e0:	f894 1025 	ldrb.w	r1, [r4, #37]	@ 0x25
 80055e4:	f886 1681 	strb.w	r1, [r6, #1665]	@ 0x681
class Image : public Widget
 80055e8:	8ce1      	ldrh	r1, [r4, #38]	@ 0x26
 80055ea:	f8ab 1682 	strh.w	r1, [fp, #1666]	@ 0x682
                        staticBlocks[y + shiftDown][x] = staticBlocks[y][x];
 80055ee:	f206 6c5c 	addw	ip, r6, #1628	@ 0x65c
 80055f2:	f894 1028 	ldrb.w	r1, [r4, #40]	@ 0x28
 80055f6:	f88b 1684 	strb.w	r1, [fp, #1668]	@ 0x684
                        staticBlocks[y + shiftDown][x].setXY(
 80055fa:	4660      	mov	r0, ip
 80055fc:	fa0f f188 	sxth.w	r1, r8
 8005600:	f8cd c010 	str.w	ip, [sp, #16]
 8005604:	f7fd fecd 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
        container.add(d);
 8005608:	9804      	ldr	r0, [sp, #16]
 800560a:	4601      	mov	r1, r0
 800560c:	4650      	mov	r0, sl
 800560e:	f006 fec7 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        container.remove(d);
 8005612:	4621      	mov	r1, r4
 8005614:	4650      	mov	r0, sl
 8005616:	f006 ff04 	bl	800c422 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 800561a:	9a05      	ldr	r2, [sp, #20]
 800561c:	2300      	movs	r3, #0
                for(int x = 0; x < BOARD_WIDTH; x++) {
 800561e:	f108 080f 	add.w	r8, r8, #15
 8005622:	fa1f f888 	uxth.w	r8, r8
 8005626:	f1b8 0faa 	cmp.w	r8, #170	@ 0xaa
 800562a:	f106 062c 	add.w	r6, r6, #44	@ 0x2c
 800562e:	f10b 0b2c 	add.w	fp, fp, #44	@ 0x2c
 8005632:	f104 042c 	add.w	r4, r4, #44	@ 0x2c
 8005636:	d1a3      	bne.n	8005580 <_ZN11Screen1View18checkAndClearLinesEv+0x15c>
 8005638:	e783      	b.n	8005542 <_ZN11Screen1View18checkAndClearLinesEv+0x11e>
}
 800563a:	b01d      	add	sp, #116	@ 0x74
 800563c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005640:	0802772d 	.word	0x0802772d
 8005644:	08027d58 	.word	0x08027d58

08005648 <_ZN11Screen1View15freezeTetrominoEv>:
{
 8005648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800564c:	f500 5a31 	add.w	sl, r0, #11328	@ 0x2c40
 8005650:	b085      	sub	sp, #20
 8005652:	4605      	mov	r5, r0
 8005654:	f10a 0a0b 	add.w	sl, sl, #11
    for(int y = 0; y < 4; y++) {
 8005658:	f04f 0900 	mov.w	r9, #0
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 800565c:	f500 5b00 	add.w	fp, r0, #8192	@ 0x2000
        for(int x = 0; x < 4; x++) {
 8005660:	ebc9 1309 	rsb	r3, r9, r9, lsl #4
 8005664:	b29b      	uxth	r3, r3
 8005666:	9300      	str	r3, [sp, #0]
 8005668:	f04f 0800 	mov.w	r8, #0
{
 800566c:	4653      	mov	r3, sl
            if(currentTetromino[y][x]) {
 800566e:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8005672:	2a00      	cmp	r2, #0
 8005674:	d03d      	beq.n	80056f2 <_ZN11Screen1View15freezeTetrominoEv+0xaa>
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8005676:	f8db 2c60 	ldr.w	r2, [fp, #3168]	@ 0xc60
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 800567a:	f8db 1c5c 	ldr.w	r1, [fp, #3164]	@ 0xc5c
 800567e:	9301      	str	r3, [sp, #4]
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8005680:	f1a2 060a 	sub.w	r6, r2, #10
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8005684:	230f      	movs	r3, #15
                board[boardY][boardX] = true;
 8005686:	200a      	movs	r0, #10
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8005688:	fb96 f6f3 	sdiv	r6, r6, r3
 800568c:	444e      	add	r6, r9
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 800568e:	f1a1 0414 	sub.w	r4, r1, #20
                board[boardY][boardX] = true;
 8005692:	fb00 5006 	mla	r0, r0, r6, r5
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8005696:	fb94 f4f3 	sdiv	r4, r4, r3
 800569a:	4444      	add	r4, r8
                board[boardY][boardX] = true;
 800569c:	4420      	add	r0, r4
 800569e:	2701      	movs	r7, #1
 80056a0:	f880 72d4 	strb.w	r7, [r0, #724]	@ 0x2d4
                staticBlocks[boardY][boardX].setXY(
 80056a4:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 80056a8:	4346      	muls	r6, r0
 80056aa:	202c      	movs	r0, #44	@ 0x2c
                    currentY + (y * BLOCK_SIZE)
 80056ac:	9b00      	ldr	r3, [sp, #0]
                staticBlocks[boardY][boardX].setXY(
 80056ae:	4344      	muls	r4, r0
 80056b0:	f206 675c 	addw	r7, r6, #1628	@ 0x65c
 80056b4:	4427      	add	r7, r4
                    currentX + (x * BLOCK_SIZE),
 80056b6:	ebc8 1008 	rsb	r0, r8, r8, lsl #4
                staticBlocks[boardY][boardX].setXY(
 80056ba:	442f      	add	r7, r5
                    currentY + (y * BLOCK_SIZE)
 80056bc:	441a      	add	r2, r3
                    currentX + (x * BLOCK_SIZE),
 80056be:	4401      	add	r1, r0
                staticBlocks[boardY][boardX].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 80056c0:	4434      	add	r4, r6
                staticBlocks[boardY][boardX].setXY(
 80056c2:	b212      	sxth	r2, r2
 80056c4:	b209      	sxth	r1, r1
 80056c6:	4638      	mov	r0, r7
                staticBlocks[boardY][boardX].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 80056c8:	442c      	add	r4, r5
                staticBlocks[boardY][boardX].setXY(
 80056ca:	f7fd fe6a 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
                staticBlocks[boardY][boardX].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 80056ce:	4b12      	ldr	r3, [pc, #72]	@ (8005718 <_ZN11Screen1View15freezeTetrominoEv+0xd0>)
 80056d0:	f8db 1c64 	ldr.w	r1, [fp, #3172]	@ 0xc64
 80056d4:	f8d4 265c 	ldr.w	r2, [r4, #1628]	@ 0x65c
 80056d8:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 80056dc:	6e12      	ldr	r2, [r2, #96]	@ 0x60
 80056de:	f8ad 100c 	strh.w	r1, [sp, #12]
 80056e2:	4638      	mov	r0, r7
 80056e4:	a903      	add	r1, sp, #12
 80056e6:	4790      	blx	r2
        container.add(d);
 80056e8:	4639      	mov	r1, r7
 80056ea:	1d28      	adds	r0, r5, #4
 80056ec:	f006 fe58 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80056f0:	9b01      	ldr	r3, [sp, #4]
        for(int x = 0; x < 4; x++) {
 80056f2:	f108 0801 	add.w	r8, r8, #1
 80056f6:	f1b8 0f04 	cmp.w	r8, #4
 80056fa:	d1b8      	bne.n	800566e <_ZN11Screen1View15freezeTetrominoEv+0x26>
    for(int y = 0; y < 4; y++) {
 80056fc:	f109 0901 	add.w	r9, r9, #1
 8005700:	f1b9 0f04 	cmp.w	r9, #4
 8005704:	f10a 0a04 	add.w	sl, sl, #4
 8005708:	d1aa      	bne.n	8005660 <_ZN11Screen1View15freezeTetrominoEv+0x18>
    checkAndClearLines();
 800570a:	4628      	mov	r0, r5
}
 800570c:	b005      	add	sp, #20
 800570e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    checkAndClearLines();
 8005712:	f7ff be87 	b.w	8005424 <_ZN11Screen1View18checkAndClearLinesEv>
 8005716:	bf00      	nop
 8005718:	0802822e 	.word	0x0802822e

0800571c <_ZN11Screen1View15handleTickEventEv>:
{
 800571c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    if (isGameOver) {
 8005720:	f500 5400 	add.w	r4, r0, #8192	@ 0x2000
{
 8005724:	4605      	mov	r5, r0
    if (isGameOver) {
 8005726:	f894 6c74 	ldrb.w	r6, [r4, #3188]	@ 0xc74
 800572a:	2e00      	cmp	r6, #0
 800572c:	f040 8090 	bne.w	8005850 <_ZN11Screen1View15handleTickEventEv+0x134>
    tickCount++;
 8005730:	f8d4 3c6c 	ldr.w	r3, [r4, #3180]	@ 0xc6c
 8005734:	2219      	movs	r2, #25
 8005736:	3301      	adds	r3, #1
 8005738:	f8c4 3c6c 	str.w	r3, [r4, #3180]	@ 0xc6c
 800573c:	fbb3 f1f2 	udiv	r1, r3, r2
 8005740:	fb02 3311 	mls	r3, r2, r1, r3
    if (tickCount % 25 == 12) {
 8005744:	2b0c      	cmp	r3, #12
 8005746:	d117      	bne.n	8005778 <_ZN11Screen1View15handleTickEventEv+0x5c>
        uint32_t count = osMessageQueueGetCount(Queue1Handle);
 8005748:	4f43      	ldr	r7, [pc, #268]	@ (8005858 <_ZN11Screen1View15handleTickEventEv+0x13c>)
        uint8_t res = 0;
 800574a:	f88d 6007 	strb.w	r6, [sp, #7]
        uint32_t count = osMessageQueueGetCount(Queue1Handle);
 800574e:	6838      	ldr	r0, [r7, #0]
 8005750:	f004 fdd2 	bl	800a2f8 <osMessageQueueGetCount>
        if (count > 0)
 8005754:	b180      	cbz	r0, 8005778 <_ZN11Screen1View15handleTickEventEv+0x5c>
            osMessageQueueGet(Queue1Handle, &res, NULL, osWaitForever);
 8005756:	f04f 33ff 	mov.w	r3, #4294967295
 800575a:	6838      	ldr	r0, [r7, #0]
 800575c:	4632      	mov	r2, r6
 800575e:	f10d 0107 	add.w	r1, sp, #7
 8005762:	f004 fd99 	bl	800a298 <osMessageQueueGet>
            if (res == 'L') 
 8005766:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800576a:	2b4c      	cmp	r3, #76	@ 0x4c
 800576c:	d02d      	beq.n	80057ca <_ZN11Screen1View15handleTickEventEv+0xae>
 800576e:	d826      	bhi.n	80057be <_ZN11Screen1View15handleTickEventEv+0xa2>
 8005770:	2b43      	cmp	r3, #67	@ 0x43
 8005772:	d060      	beq.n	8005836 <_ZN11Screen1View15handleTickEventEv+0x11a>
 8005774:	2b44      	cmp	r3, #68	@ 0x44
 8005776:	d048      	beq.n	800580a <_ZN11Screen1View15handleTickEventEv+0xee>
    if (tickCount % 50 == 0) 
 8005778:	f8d4 3c6c 	ldr.w	r3, [r4, #3180]	@ 0xc6c
 800577c:	2232      	movs	r2, #50	@ 0x32
 800577e:	fbb3 f1f2 	udiv	r1, r3, r2
 8005782:	fb02 3311 	mls	r3, r2, r1, r3
 8005786:	b9a3      	cbnz	r3, 80057b2 <_ZN11Screen1View15handleTickEventEv+0x96>
        if (checkCollision(currentX, currentY + BLOCK_SIZE, currentShape))
 8005788:	f8d4 6c60 	ldr.w	r6, [r4, #3168]	@ 0xc60
 800578c:	f8d4 8c5c 	ldr.w	r8, [r4, #3164]	@ 0xc5c
 8005790:	f8d4 7c64 	ldr.w	r7, [r4, #3172]	@ 0xc64
 8005794:	360f      	adds	r6, #15
 8005796:	463b      	mov	r3, r7
 8005798:	4632      	mov	r2, r6
 800579a:	4641      	mov	r1, r8
 800579c:	4628      	mov	r0, r5
 800579e:	f7ff faa0 	bl	8004ce2 <_ZN11Screen1View14checkCollisionEiii>
 80057a2:	2800      	cmp	r0, #0
 80057a4:	d04b      	beq.n	800583e <_ZN11Screen1View15handleTickEventEv+0x122>
            freezeTetromino();
 80057a6:	4628      	mov	r0, r5
 80057a8:	f7ff ff4e 	bl	8005648 <_ZN11Screen1View15freezeTetrominoEv>
            createNewTetromino();
 80057ac:	4628      	mov	r0, r5
 80057ae:	f7ff fd99 	bl	80052e4 <_ZN11Screen1View18createNewTetrominoEv>
        container.invalidate();
 80057b2:	1d28      	adds	r0, r5, #4
}
 80057b4:	b002      	add	sp, #8
 80057b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80057ba:	f00d bc97 	b.w	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
 80057be:	2b52      	cmp	r3, #82	@ 0x52
 80057c0:	d1da      	bne.n	8005778 <_ZN11Screen1View15handleTickEventEv+0x5c>
                if (!checkCollision(currentX + BLOCK_SIZE, currentY, currentShape)) 
 80057c2:	f8d4 6c5c 	ldr.w	r6, [r4, #3164]	@ 0xc5c
 80057c6:	360f      	adds	r6, #15
 80057c8:	e002      	b.n	80057d0 <_ZN11Screen1View15handleTickEventEv+0xb4>
                if (!checkCollision(currentX - BLOCK_SIZE, currentY, currentShape)) 
 80057ca:	f8d4 6c5c 	ldr.w	r6, [r4, #3164]	@ 0xc5c
 80057ce:	3e0f      	subs	r6, #15
                if (!checkCollision(currentX + BLOCK_SIZE, currentY, currentShape)) 
 80057d0:	f8d4 8c60 	ldr.w	r8, [r4, #3168]	@ 0xc60
 80057d4:	f8d4 7c64 	ldr.w	r7, [r4, #3172]	@ 0xc64
 80057d8:	4642      	mov	r2, r8
 80057da:	463b      	mov	r3, r7
 80057dc:	4631      	mov	r1, r6
 80057de:	4628      	mov	r0, r5
 80057e0:	f7ff fa7f 	bl	8004ce2 <_ZN11Screen1View14checkCollisionEiii>
 80057e4:	2800      	cmp	r0, #0
 80057e6:	d1c7      	bne.n	8005778 <_ZN11Screen1View15handleTickEventEv+0x5c>
                    currentX += BLOCK_SIZE;
 80057e8:	f8c4 6c5c 	str.w	r6, [r4, #3164]	@ 0xc5c
                    drawTetromino(currentShape, currentX, currentY);
 80057ec:	4643      	mov	r3, r8
 80057ee:	4632      	mov	r2, r6
 80057f0:	4639      	mov	r1, r7
 80057f2:	4628      	mov	r0, r5
 80057f4:	f7ff fb4c 	bl	8004e90 <_ZN11Screen1View13drawTetrominoEiii>
 80057f8:	e7be      	b.n	8005778 <_ZN11Screen1View15handleTickEventEv+0x5c>
                    currentY += BLOCK_SIZE;
 80057fa:	f8c4 6c60 	str.w	r6, [r4, #3168]	@ 0xc60
                    drawTetromino(currentShape, currentX, currentY);
 80057fe:	4633      	mov	r3, r6
 8005800:	463a      	mov	r2, r7
 8005802:	4641      	mov	r1, r8
 8005804:	4628      	mov	r0, r5
 8005806:	f7ff fb43 	bl	8004e90 <_ZN11Screen1View13drawTetrominoEiii>
                while (!checkCollision(currentX, currentY + BLOCK_SIZE, currentShape)) 
 800580a:	f8d4 6c60 	ldr.w	r6, [r4, #3168]	@ 0xc60
 800580e:	f8d4 7c5c 	ldr.w	r7, [r4, #3164]	@ 0xc5c
 8005812:	f8d4 8c64 	ldr.w	r8, [r4, #3172]	@ 0xc64
 8005816:	360f      	adds	r6, #15
 8005818:	4643      	mov	r3, r8
 800581a:	4632      	mov	r2, r6
 800581c:	4639      	mov	r1, r7
 800581e:	4628      	mov	r0, r5
 8005820:	f7ff fa5f 	bl	8004ce2 <_ZN11Screen1View14checkCollisionEiii>
 8005824:	2800      	cmp	r0, #0
 8005826:	d0e8      	beq.n	80057fa <_ZN11Screen1View15handleTickEventEv+0xde>
                freezeTetromino();
 8005828:	4628      	mov	r0, r5
 800582a:	f7ff ff0d 	bl	8005648 <_ZN11Screen1View15freezeTetrominoEv>
                createNewTetromino();
 800582e:	4628      	mov	r0, r5
 8005830:	f7ff fd58 	bl	80052e4 <_ZN11Screen1View18createNewTetrominoEv>
 8005834:	e7a0      	b.n	8005778 <_ZN11Screen1View15handleTickEventEv+0x5c>
                rotateTetromino(); // Xoay hình nếu nhận được lệnh
 8005836:	4628      	mov	r0, r5
 8005838:	f7ff fb8e 	bl	8004f58 <_ZN11Screen1View15rotateTetrominoEv>
 800583c:	e79c      	b.n	8005778 <_ZN11Screen1View15handleTickEventEv+0x5c>
            currentY += BLOCK_SIZE;
 800583e:	f8c4 6c60 	str.w	r6, [r4, #3168]	@ 0xc60
            drawTetromino(currentShape, currentX, currentY);
 8005842:	4633      	mov	r3, r6
 8005844:	4642      	mov	r2, r8
 8005846:	4639      	mov	r1, r7
 8005848:	4628      	mov	r0, r5
 800584a:	f7ff fb21 	bl	8004e90 <_ZN11Screen1View13drawTetrominoEiii>
 800584e:	e7b0      	b.n	80057b2 <_ZN11Screen1View15handleTickEventEv+0x96>
}
 8005850:	b002      	add	sp, #8
 8005852:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005856:	bf00      	nop
 8005858:	200003a8 	.word	0x200003a8

0800585c <_ZN16Screen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen2Presenter() {}
 800585c:	4770      	bx	lr

0800585e <_ZThn4_N16Screen2PresenterD1Ev>:
 800585e:	3804      	subs	r0, #4
 8005860:	4770      	bx	lr

08005862 <_ZN16Screen2Presenter10deactivateEv>:
}

void Screen2Presenter::activate()
{

}
 8005862:	4770      	bx	lr

08005864 <_ZN16Screen2PresenterD0Ev>:
 8005864:	b510      	push	{r4, lr}
 8005866:	2110      	movs	r1, #16
 8005868:	4604      	mov	r4, r0
 800586a:	f01f f85e 	bl	802492a <_ZdlPvj>
 800586e:	4620      	mov	r0, r4
 8005870:	bd10      	pop	{r4, pc}

08005872 <_ZThn4_N16Screen2PresenterD0Ev>:
 8005872:	f1a0 0004 	sub.w	r0, r0, #4
 8005876:	e7f5      	b.n	8005864 <_ZN16Screen2PresenterD0Ev>

08005878 <_ZN16Screen2PresenterC1ER11Screen2View>:
 8005878:	2200      	movs	r2, #0
 800587a:	6082      	str	r2, [r0, #8]
    : view(v)
 800587c:	4a02      	ldr	r2, [pc, #8]	@ (8005888 <_ZN16Screen2PresenterC1ER11Screen2View+0x10>)
 800587e:	6002      	str	r2, [r0, #0]
 8005880:	3218      	adds	r2, #24
 8005882:	6042      	str	r2, [r0, #4]
 8005884:	60c1      	str	r1, [r0, #12]
}
 8005886:	4770      	bx	lr
 8005888:	080282b4 	.word	0x080282b4

0800588c <_ZN11Screen2View14tearDownScreenEv>:
}

void Screen2View::tearDownScreen()
{
    Screen2ViewBase::tearDownScreen();
}
 800588c:	4770      	bx	lr
	...

08005890 <_ZN11Screen2View11turnOnMode1Ev>:

void Screen2View::turnOnMode1()
{
 8005890:	b513      	push	{r0, r1, r4, lr}
    // Implementation for turning on mode 1
    uint8_t mode = 0; 
    uint32_t count = osMessageQueueGetCount(Queue2Handle);
 8005892:	4c08      	ldr	r4, [pc, #32]	@ (80058b4 <_ZN11Screen2View11turnOnMode1Ev+0x24>)
    uint8_t mode = 0; 
 8005894:	2300      	movs	r3, #0
    uint32_t count = osMessageQueueGetCount(Queue2Handle);
 8005896:	6820      	ldr	r0, [r4, #0]
    uint8_t mode = 0; 
 8005898:	f88d 3007 	strb.w	r3, [sp, #7]
    uint32_t count = osMessageQueueGetCount(Queue2Handle);
 800589c:	f004 fd2c 	bl	800a2f8 <osMessageQueueGetCount>
    if (count < 1) 
 80058a0:	4602      	mov	r2, r0
 80058a2:	b928      	cbnz	r0, 80058b0 <_ZN11Screen2View11turnOnMode1Ev+0x20>
    {
        osMessageQueuePut(Queue2Handle, &mode, 0, 10);
 80058a4:	6820      	ldr	r0, [r4, #0]
 80058a6:	230a      	movs	r3, #10
 80058a8:	f10d 0107 	add.w	r1, sp, #7
 80058ac:	f004 fcc3 	bl	800a236 <osMessageQueuePut>
    }
}
 80058b0:	b002      	add	sp, #8
 80058b2:	bd10      	pop	{r4, pc}
 80058b4:	200003a4 	.word	0x200003a4

080058b8 <_ZN11Screen2View11turnOnMode2Ev>:

void Screen2View::turnOnMode2()
{
 80058b8:	b513      	push	{r0, r1, r4, lr}
    // Implementation for turning on mode 2
    uint8_t mode = 1; 
    uint32_t count = osMessageQueueGetCount(Queue2Handle);
 80058ba:	4c08      	ldr	r4, [pc, #32]	@ (80058dc <_ZN11Screen2View11turnOnMode2Ev+0x24>)
    uint8_t mode = 1; 
 80058bc:	2301      	movs	r3, #1
    uint32_t count = osMessageQueueGetCount(Queue2Handle);
 80058be:	6820      	ldr	r0, [r4, #0]
    uint8_t mode = 1; 
 80058c0:	f88d 3007 	strb.w	r3, [sp, #7]
    uint32_t count = osMessageQueueGetCount(Queue2Handle);
 80058c4:	f004 fd18 	bl	800a2f8 <osMessageQueueGetCount>
    if (count < 1) 
 80058c8:	4602      	mov	r2, r0
 80058ca:	b928      	cbnz	r0, 80058d8 <_ZN11Screen2View11turnOnMode2Ev+0x20>
    {
        osMessageQueuePut(Queue2Handle, &mode, 0, 10);
 80058cc:	6820      	ldr	r0, [r4, #0]
 80058ce:	230a      	movs	r3, #10
 80058d0:	f10d 0107 	add.w	r1, sp, #7
 80058d4:	f004 fcaf 	bl	800a236 <osMessageQueuePut>
    }
}
 80058d8:	b002      	add	sp, #8
 80058da:	bd10      	pop	{r4, pc}
 80058dc:	200003a4 	.word	0x200003a4

080058e0 <_ZN11Screen2ViewD1Ev>:

class Screen2View : public Screen2ViewBase
{
public:
    Screen2View();
    virtual ~Screen2View() {}
 80058e0:	b510      	push	{r4, lr}
 80058e2:	4b03      	ldr	r3, [pc, #12]	@ (80058f0 <_ZN11Screen2ViewD1Ev+0x10>)
 80058e4:	6003      	str	r3, [r0, #0]
 80058e6:	4604      	mov	r4, r0
 80058e8:	f7fd ffc5 	bl	8003876 <_ZN15Screen2ViewBaseD1Ev>
 80058ec:	4620      	mov	r0, r4
 80058ee:	bd10      	pop	{r4, pc}
 80058f0:	080282dc 	.word	0x080282dc

080058f4 <_ZN11Screen2ViewD0Ev>:
 80058f4:	b510      	push	{r4, lr}
 80058f6:	4604      	mov	r4, r0
 80058f8:	f7ff fff2 	bl	80058e0 <_ZN11Screen2ViewD1Ev>
 80058fc:	4620      	mov	r0, r4
 80058fe:	f44f 7126 	mov.w	r1, #664	@ 0x298
 8005902:	f01f f812 	bl	802492a <_ZdlPvj>
 8005906:	4620      	mov	r0, r4
 8005908:	bd10      	pop	{r4, pc}
	...

0800590c <_ZN11Screen2ViewC1Ev>:
Screen2View::Screen2View()
 800590c:	b510      	push	{r4, lr}
 800590e:	4604      	mov	r4, r0
 8005910:	f7fe f80c 	bl	800392c <_ZN15Screen2ViewBaseC1Ev>
 8005914:	4b03      	ldr	r3, [pc, #12]	@ (8005924 <_ZN11Screen2ViewC1Ev+0x18>)
 8005916:	6023      	str	r3, [r4, #0]
    tickCount = 0;
 8005918:	2300      	movs	r3, #0
 800591a:	f8c4 3294 	str.w	r3, [r4, #660]	@ 0x294
}
 800591e:	4620      	mov	r0, r4
 8005920:	bd10      	pop	{r4, pc}
 8005922:	bf00      	nop
 8005924:	080282dc 	.word	0x080282dc

08005928 <_ZN11Screen2View11setupScreenEv>:
    Screen2ViewBase::setupScreen();
 8005928:	f7fd bfa6 	b.w	8003878 <_ZN15Screen2ViewBase11setupScreenEv>

0800592c <_ZN11Screen2View15handleTickEventEv>:

void Screen2View::handleTickEvent()
{
    tickCount++;
 800592c:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
    switch(tickCount % 18) {
 8005930:	2212      	movs	r2, #18
    tickCount++;
 8005932:	3301      	adds	r3, #1
 8005934:	f8c0 3294 	str.w	r3, [r0, #660]	@ 0x294
    switch(tickCount % 18) {
 8005938:	fbb3 f1f2 	udiv	r1, r3, r2
 800593c:	fb02 3311 	mls	r3, r2, r1, r3
 8005940:	2b0f      	cmp	r3, #15
 8005942:	d818      	bhi.n	8005976 <_ZN11Screen2View15handleTickEventEv+0x4a>
 8005944:	e8df f003 	tbb	[pc, r3]
 8005948:	0f171708 	.word	0x0f171708
 800594c:	171a1717 	.word	0x171a1717
 8005950:	17171e17 	.word	0x17171e17
 8005954:	2a171723 	.word	0x2a171723
        visible = vis;
 8005958:	2300      	movs	r3, #0
 800595a:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9
 800595e:	2301      	movs	r3, #1
 8005960:	f880 3115 	strb.w	r3, [r0, #277]	@ 0x115
 8005964:	e005      	b.n	8005972 <_ZN11Screen2View15handleTickEventEv+0x46>
 8005966:	2300      	movs	r3, #0
 8005968:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9
 800596c:	f880 3115 	strb.w	r3, [r0, #277]	@ 0x115
 8005970:	2301      	movs	r3, #1
 8005972:	f880 30bd 	strb.w	r3, [r0, #189]	@ 0xbd
 8005976:	3004      	adds	r0, #4
 8005978:	f00d bbb8 	b.w	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
 800597c:	2300      	movs	r3, #0
 800597e:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9
 8005982:	e7ed      	b.n	8005960 <_ZN11Screen2View15handleTickEventEv+0x34>
 8005984:	2301      	movs	r3, #1
 8005986:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9
 800598a:	2300      	movs	r3, #0
 800598c:	e7e8      	b.n	8005960 <_ZN11Screen2View15handleTickEventEv+0x34>
 800598e:	2301      	movs	r3, #1
 8005990:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9
 8005994:	f880 3115 	strb.w	r3, [r0, #277]	@ 0x115
 8005998:	2300      	movs	r3, #0
 800599a:	e7ea      	b.n	8005972 <_ZN11Screen2View15handleTickEventEv+0x46>
 800599c:	2301      	movs	r3, #1
 800599e:	e7ee      	b.n	800597e <_ZN11Screen2View15handleTickEventEv+0x52>

080059a0 <_ZN16Screen3PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen3Presenter() {}
 80059a0:	4770      	bx	lr

080059a2 <_ZThn4_N16Screen3PresenterD1Ev>:
 80059a2:	3804      	subs	r0, #4
 80059a4:	4770      	bx	lr

080059a6 <_ZN16Screen3Presenter10deactivateEv>:
}

void Screen3Presenter::activate()
{

}
 80059a6:	4770      	bx	lr

080059a8 <_ZN16Screen3PresenterD0Ev>:
 80059a8:	b510      	push	{r4, lr}
 80059aa:	2110      	movs	r1, #16
 80059ac:	4604      	mov	r4, r0
 80059ae:	f01e ffbc 	bl	802492a <_ZdlPvj>
 80059b2:	4620      	mov	r0, r4
 80059b4:	bd10      	pop	{r4, pc}

080059b6 <_ZThn4_N16Screen3PresenterD0Ev>:
 80059b6:	f1a0 0004 	sub.w	r0, r0, #4
 80059ba:	e7f5      	b.n	80059a8 <_ZN16Screen3PresenterD0Ev>

080059bc <_ZN16Screen3PresenterC1ER11Screen3View>:
 80059bc:	2200      	movs	r2, #0
 80059be:	6082      	str	r2, [r0, #8]
    : view(v)
 80059c0:	4a02      	ldr	r2, [pc, #8]	@ (80059cc <_ZN16Screen3PresenterC1ER11Screen3View+0x10>)
 80059c2:	6002      	str	r2, [r0, #0]
 80059c4:	3218      	adds	r2, #24
 80059c6:	6042      	str	r2, [r0, #4]
 80059c8:	60c1      	str	r1, [r0, #12]
}
 80059ca:	4770      	bx	lr
 80059cc:	08028318 	.word	0x08028318

080059d0 <_ZN11Screen3View14tearDownScreenEv>:
}

void Screen3View::tearDownScreen()
{
    Screen3ViewBase::tearDownScreen();
}
 80059d0:	4770      	bx	lr
	...

080059d4 <_ZN11Screen3ViewD1Ev>:

class Screen3View : public Screen3ViewBase
{
public:
    Screen3View();
    virtual ~Screen3View() {}
 80059d4:	4b13      	ldr	r3, [pc, #76]	@ (8005a24 <_ZN11Screen3ViewD1Ev+0x50>)
 80059d6:	b570      	push	{r4, r5, r6, lr}
 80059d8:	4605      	mov	r5, r0
 80059da:	6003      	str	r3, [r0, #0]
 80059dc:	f642 44e4 	movw	r4, #11492	@ 0x2ce4
 80059e0:	f642 2624 	movw	r6, #10788	@ 0x2a24
 80059e4:	42b4      	cmp	r4, r6
 80059e6:	d116      	bne.n	8005a16 <_ZN11Screen3ViewD1Ev+0x42>
 80059e8:	f240 76c4 	movw	r6, #1988	@ 0x7c4
 80059ec:	592b      	ldr	r3, [r5, r4]
 80059ee:	1928      	adds	r0, r5, r4
 80059f0:	681b      	ldr	r3, [r3, #0]
 80059f2:	3c2c      	subs	r4, #44	@ 0x2c
 80059f4:	4798      	blx	r3
 80059f6:	42b4      	cmp	r4, r6
 80059f8:	d1f8      	bne.n	80059ec <_ZN11Screen3ViewD1Ev+0x18>
 80059fa:	f240 5604 	movw	r6, #1284	@ 0x504
 80059fe:	592b      	ldr	r3, [r5, r4]
 8005a00:	1928      	adds	r0, r5, r4
 8005a02:	681b      	ldr	r3, [r3, #0]
 8005a04:	3c2c      	subs	r4, #44	@ 0x2c
 8005a06:	4798      	blx	r3
 8005a08:	42b4      	cmp	r4, r6
 8005a0a:	d1f8      	bne.n	80059fe <_ZN11Screen3ViewD1Ev+0x2a>
 8005a0c:	4628      	mov	r0, r5
 8005a0e:	f7fe f8b4 	bl	8003b7a <_ZN15Screen3ViewBaseD1Ev>
 8005a12:	4628      	mov	r0, r5
 8005a14:	bd70      	pop	{r4, r5, r6, pc}
 8005a16:	592b      	ldr	r3, [r5, r4]
 8005a18:	1928      	adds	r0, r5, r4
 8005a1a:	681b      	ldr	r3, [r3, #0]
 8005a1c:	4798      	blx	r3
 8005a1e:	3c2c      	subs	r4, #44	@ 0x2c
 8005a20:	e7e0      	b.n	80059e4 <_ZN11Screen3ViewD1Ev+0x10>
 8005a22:	bf00      	nop
 8005a24:	08028340 	.word	0x08028340

08005a28 <_ZN11Screen3ViewD0Ev>:
 8005a28:	b510      	push	{r4, lr}
 8005a2a:	4604      	mov	r4, r0
 8005a2c:	f7ff ffd2 	bl	80059d4 <_ZN11Screen3ViewD1Ev>
 8005a30:	4620      	mov	r0, r4
 8005a32:	f642 518c 	movw	r1, #11660	@ 0x2d8c
 8005a36:	f01e ff78 	bl	802492a <_ZdlPvj>
 8005a3a:	4620      	mov	r0, r4
 8005a3c:	bd10      	pop	{r4, pc}

08005a3e <_ZN11Screen3View14checkCollisionEiii>:
bool Screen3View::checkCollision(int newX, int newY, int shape)
{
    for(int y = 0; y < 4; y++) {
        for(int x = 0; x < 4; x++) {
            if(currentTetromino[y][x]) {  // Thay đổi từ TETROMINOS sang currentTetromino
                int boardX = (newX - 20) / BLOCK_SIZE + x;
 8005a3e:	230f      	movs	r3, #15
{
 8005a40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005a44:	f500 5434 	add.w	r4, r0, #11520	@ 0x2d00
                int boardX = (newX - 20) / BLOCK_SIZE + x;
 8005a48:	3914      	subs	r1, #20
                int boardY = (newY - 10) / BLOCK_SIZE + y;
 8005a4a:	3a0a      	subs	r2, #10
                int boardX = (newX - 20) / BLOCK_SIZE + x;
 8005a4c:	fb91 f1f3 	sdiv	r1, r1, r3
                int boardY = (newY - 10) / BLOCK_SIZE + y;
 8005a50:	fb92 f2f3 	sdiv	r2, r2, r3
 8005a54:	441c      	add	r4, r3
 8005a56:	f102 0804 	add.w	r8, r2, #4
 8005a5a:	f101 0e04 	add.w	lr, r1, #4
 8005a5e:	f500 638d 	add.w	r3, r0, #1128	@ 0x468
 8005a62:	f04f 0c0a 	mov.w	ip, #10
        for(int x = 0; x < 4; x++) {
 8005a66:	460d      	mov	r5, r1
 8005a68:	fb0c 3702 	mla	r7, ip, r2, r3
{
 8005a6c:	4626      	mov	r6, r4
            if(currentTetromino[y][x]) {  // Thay đổi từ TETROMINOS sang currentTetromino
 8005a6e:	f816 0f01 	ldrb.w	r0, [r6, #1]!
 8005a72:	b128      	cbz	r0, 8005a80 <_ZN11Screen3View14checkCollisionEiii+0x42>
                
                // Kiểm tra chạm đáy
                if(boardY >= BOARD_HEIGHT) return true;
 8005a74:	2a13      	cmp	r2, #19
 8005a76:	dc0d      	bgt.n	8005a94 <_ZN11Screen3View14checkCollisionEiii+0x56>
                
                // Kiểm tra chạm biên
                if(boardX < 0 || boardX >= BOARD_WIDTH) return true;
 8005a78:	2d09      	cmp	r5, #9
 8005a7a:	d80b      	bhi.n	8005a94 <_ZN11Screen3View14checkCollisionEiii+0x56>
                
                // Kiểm tra chạm khối khác
                if(board[boardY][boardX]) return true;
 8005a7c:	5d78      	ldrb	r0, [r7, r5]
 8005a7e:	b950      	cbnz	r0, 8005a96 <_ZN11Screen3View14checkCollisionEiii+0x58>
        for(int x = 0; x < 4; x++) {
 8005a80:	3501      	adds	r5, #1
 8005a82:	4575      	cmp	r5, lr
 8005a84:	d1f3      	bne.n	8005a6e <_ZN11Screen3View14checkCollisionEiii+0x30>
    for(int y = 0; y < 4; y++) {
 8005a86:	3201      	adds	r2, #1
 8005a88:	4542      	cmp	r2, r8
 8005a8a:	f104 0404 	add.w	r4, r4, #4
 8005a8e:	d1ea      	bne.n	8005a66 <_ZN11Screen3View14checkCollisionEiii+0x28>
            }
        }
    }
    return false;
 8005a90:	2000      	movs	r0, #0
 8005a92:	e000      	b.n	8005a96 <_ZN11Screen3View14checkCollisionEiii+0x58>
                if(boardY >= BOARD_HEIGHT) return true;
 8005a94:	2001      	movs	r0, #1
}
 8005a96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08005a9c <_ZN11Screen3View12simpleRandomEv>:
uint32_t Screen3View::simpleRandom()
{
    // Linear Congruential Generator (LCG)
    // Sử dụng công thức: next = (a * seed + c) % m
    // a = 1664525, c = 1013904223, m = 2^32
    randomSeed = randomSeed * 1664525 + 1013904223 + score - 2611;
 8005a9c:	f500 5200 	add.w	r2, r0, #8192	@ 0x2000
 8005aa0:	4b05      	ldr	r3, [pc, #20]	@ (8005ab8 <_ZN11Screen3View12simpleRandomEv+0x1c>)
 8005aa2:	f8d2 0d34 	ldr.w	r0, [r2, #3380]	@ 0xd34
 8005aa6:	f8d2 1d4c 	ldr.w	r1, [r2, #3404]	@ 0xd4c
 8005aaa:	4403      	add	r3, r0
 8005aac:	4803      	ldr	r0, [pc, #12]	@ (8005abc <_ZN11Screen3View12simpleRandomEv+0x20>)
 8005aae:	fb00 3001 	mla	r0, r0, r1, r3
 8005ab2:	f8c2 0d4c 	str.w	r0, [r2, #3404]	@ 0xd4c
    return randomSeed;
 8005ab6:	4770      	bx	lr
 8005ab8:	3c6ee92c 	.word	0x3c6ee92c
 8005abc:	0019660d 	.word	0x0019660d

08005ac0 <_ZN11Screen3View10shuffleBagEv>:
{
 8005ac0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005ac2:	f500 5535 	add.w	r5, r0, #11584	@ 0x2d40
 8005ac6:	4606      	mov	r6, r0
 8005ac8:	3505      	adds	r5, #5
 8005aca:	2407      	movs	r4, #7
        bag[i] = bag[j];
 8005acc:	f642 573e 	movw	r7, #11582	@ 0x2d3e
        int j = simpleRandom() % (i + 1);
 8005ad0:	4630      	mov	r0, r6
 8005ad2:	f7ff ffe3 	bl	8005a9c <_ZN11Screen3View12simpleRandomEv>
 8005ad6:	fbb0 f3f4 	udiv	r3, r0, r4
 8005ada:	fb03 0314 	mls	r3, r3, r4, r0
        bag[i] = bag[j];
 8005ade:	4433      	add	r3, r6
    for(int i = BAG_SIZE - 1; i > 0; i--) {
 8005ae0:	3c01      	subs	r4, #1
        uint8_t temp = bag[i];
 8005ae2:	f815 2d01 	ldrb.w	r2, [r5, #-1]!
        bag[i] = bag[j];
 8005ae6:	5dd9      	ldrb	r1, [r3, r7]
 8005ae8:	7029      	strb	r1, [r5, #0]
    for(int i = BAG_SIZE - 1; i > 0; i--) {
 8005aea:	2c01      	cmp	r4, #1
        bag[j] = temp;
 8005aec:	55da      	strb	r2, [r3, r7]
    for(int i = BAG_SIZE - 1; i > 0; i--) {
 8005aee:	d1ef      	bne.n	8005ad0 <_ZN11Screen3View10shuffleBagEv+0x10>
}
 8005af0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08005af4 <_ZN11Screen3View13initializeBagEv>:
{
 8005af4:	b510      	push	{r4, lr}
        bag[i] = i;
 8005af6:	f500 5400 	add.w	r4, r0, #8192	@ 0x2000
 8005afa:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8005afe:	f8a4 3d3e 	strh.w	r3, [r4, #3390]	@ 0xd3e
 8005b02:	4b06      	ldr	r3, [pc, #24]	@ (8005b1c <_ZN11Screen3View13initializeBagEv+0x28>)
 8005b04:	f8c4 3d40 	str.w	r3, [r4, #3392]	@ 0xd40
 8005b08:	2306      	movs	r3, #6
 8005b0a:	f884 3d44 	strb.w	r3, [r4, #3396]	@ 0xd44
    shuffleBag();
 8005b0e:	f7ff ffd7 	bl	8005ac0 <_ZN11Screen3View10shuffleBagEv>
    bagIndex = 0;
 8005b12:	2300      	movs	r3, #0
 8005b14:	f8c4 3d48 	str.w	r3, [r4, #3400]	@ 0xd48
}
 8005b18:	bd10      	pop	{r4, pc}
 8005b1a:	bf00      	nop
 8005b1c:	05040302 	.word	0x05040302

08005b20 <_ZN11Screen3View12getNextShapeEv>:
{
 8005b20:	b538      	push	{r3, r4, r5, lr}
    if(bagIndex >= BAG_SIZE) {
 8005b22:	f500 5500 	add.w	r5, r0, #8192	@ 0x2000
{
 8005b26:	4604      	mov	r4, r0
    if(bagIndex >= BAG_SIZE) {
 8005b28:	f8d5 3d48 	ldr.w	r3, [r5, #3400]	@ 0xd48
 8005b2c:	2b06      	cmp	r3, #6
 8005b2e:	dd04      	ble.n	8005b3a <_ZN11Screen3View12getNextShapeEv+0x1a>
        shuffleBag();
 8005b30:	f7ff ffc6 	bl	8005ac0 <_ZN11Screen3View10shuffleBagEv>
        bagIndex = 0;
 8005b34:	2300      	movs	r3, #0
 8005b36:	f8c5 3d48 	str.w	r3, [r5, #3400]	@ 0xd48
    return bag[bagIndex++];
 8005b3a:	f8d5 3d48 	ldr.w	r3, [r5, #3400]	@ 0xd48
 8005b3e:	1c5a      	adds	r2, r3, #1
 8005b40:	441c      	add	r4, r3
}
 8005b42:	f642 533e 	movw	r3, #11582	@ 0x2d3e
    return bag[bagIndex++];
 8005b46:	f8c5 2d48 	str.w	r2, [r5, #3400]	@ 0xd48
}
 8005b4a:	5ce0      	ldrb	r0, [r4, r3]
 8005b4c:	bd38      	pop	{r3, r4, r5, pc}

08005b4e <_ZN11Screen3View11setupScreenEv>:
    Screen3ViewBase::setupScreen();
 8005b4e:	f7fe b815 	b.w	8003b7c <_ZN15Screen3ViewBase11setupScreenEv>
	...

08005b54 <_ZN11Screen3View13drawTetrominoEiii>:
{
 8005b54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005b58:	b087      	sub	sp, #28
 8005b5a:	461c      	mov	r4, r3
        container.remove(d);
 8005b5c:	1d03      	adds	r3, r0, #4
 8005b5e:	4605      	mov	r5, r0
 8005b60:	4617      	mov	r7, r2
        for(int x = 0; x < 4; x++) {
 8005b62:	2600      	movs	r6, #0
 8005b64:	f500 6aa6 	add.w	sl, r0, #1328	@ 0x530
 8005b68:	9300      	str	r3, [sp, #0]
 8005b6a:	eb0a 0906 	add.w	r9, sl, r6
 8005b6e:	f04f 0800 	mov.w	r8, #0
 8005b72:	4649      	mov	r1, r9
 8005b74:	9800      	ldr	r0, [sp, #0]
 8005b76:	f108 0801 	add.w	r8, r8, #1
 8005b7a:	f006 fc52 	bl	800c422 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8005b7e:	f1b8 0f04 	cmp.w	r8, #4
 8005b82:	f109 092c 	add.w	r9, r9, #44	@ 0x2c
 8005b86:	d1f4      	bne.n	8005b72 <_ZN11Screen3View13drawTetrominoEiii+0x1e>
    for(int y = 0; y < 4; y++) {
 8005b88:	36b0      	adds	r6, #176	@ 0xb0
 8005b8a:	f5b6 7f30 	cmp.w	r6, #704	@ 0x2c0
 8005b8e:	d1ec      	bne.n	8005b6a <_ZN11Screen3View13drawTetrominoEiii+0x16>
 8005b90:	b2bf      	uxth	r7, r7
 8005b92:	f107 023c 	add.w	r2, r7, #60	@ 0x3c
 8005b96:	f505 5834 	add.w	r8, r5, #11520	@ 0x2d00
 8005b9a:	b292      	uxth	r2, r2
 8005b9c:	f108 080f 	add.w	r8, r8, #15
 8005ba0:	b2a4      	uxth	r4, r4
 8005ba2:	2300      	movs	r3, #0
 8005ba4:	9202      	str	r2, [sp, #8]
                blocks[y][x].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 8005ba6:	f505 5b00 	add.w	fp, r5, #8192	@ 0x2000
        for(int x = 0; x < 4; x++) {
 8005baa:	eb05 0a03 	add.w	sl, r5, r3
 8005bae:	463e      	mov	r6, r7
        for(int x = 0; x < 4; x++) {
 8005bb0:	f8cd 8004 	str.w	r8, [sp, #4]
            if(currentTetromino[y][x] == 1) {
 8005bb4:	9901      	ldr	r1, [sp, #4]
 8005bb6:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8005bba:	9101      	str	r1, [sp, #4]
 8005bbc:	2a01      	cmp	r2, #1
 8005bbe:	d119      	bne.n	8005bf4 <_ZN11Screen3View13drawTetrominoEiii+0xa0>
                blocks[y][x].setXY(
 8005bc0:	f50a 69a6 	add.w	r9, sl, #1328	@ 0x530
 8005bc4:	b222      	sxth	r2, r4
 8005bc6:	b231      	sxth	r1, r6
 8005bc8:	4648      	mov	r0, r9
 8005bca:	9303      	str	r3, [sp, #12]
 8005bcc:	f7fd fbe9 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
                blocks[y][x].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 8005bd0:	4b11      	ldr	r3, [pc, #68]	@ (8005c18 <_ZN11Screen3View13drawTetrominoEiii+0xc4>)
 8005bd2:	f8db 1d28 	ldr.w	r1, [fp, #3368]	@ 0xd28
 8005bd6:	f8da 2530 	ldr.w	r2, [sl, #1328]	@ 0x530
 8005bda:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8005bde:	6e12      	ldr	r2, [r2, #96]	@ 0x60
 8005be0:	f8ad 1014 	strh.w	r1, [sp, #20]
 8005be4:	4648      	mov	r0, r9
 8005be6:	a905      	add	r1, sp, #20
 8005be8:	4790      	blx	r2
        container.add(d);
 8005bea:	9800      	ldr	r0, [sp, #0]
 8005bec:	4649      	mov	r1, r9
 8005bee:	f006 fbd7 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005bf2:	9b03      	ldr	r3, [sp, #12]
        for(int x = 0; x < 4; x++) {
 8005bf4:	9a02      	ldr	r2, [sp, #8]
 8005bf6:	360f      	adds	r6, #15
 8005bf8:	b2b6      	uxth	r6, r6
 8005bfa:	4296      	cmp	r6, r2
 8005bfc:	f10a 0a2c 	add.w	sl, sl, #44	@ 0x2c
 8005c00:	d1d8      	bne.n	8005bb4 <_ZN11Screen3View13drawTetrominoEiii+0x60>
    for(int y = 0; y < 4; y++) {
 8005c02:	33b0      	adds	r3, #176	@ 0xb0
 8005c04:	340f      	adds	r4, #15
 8005c06:	f5b3 7f30 	cmp.w	r3, #704	@ 0x2c0
 8005c0a:	f108 0804 	add.w	r8, r8, #4
 8005c0e:	b2a4      	uxth	r4, r4
 8005c10:	d1cb      	bne.n	8005baa <_ZN11Screen3View13drawTetrominoEiii+0x56>
}
 8005c12:	b007      	add	sp, #28
 8005c14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005c18:	0802851e 	.word	0x0802851e

08005c1c <_ZN11Screen3View15rotateTetrominoEv>:
{
 8005c1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    if (currentShape == 3) return;
 8005c20:	f500 5400 	add.w	r4, r0, #8192	@ 0x2000
{
 8005c24:	b089      	sub	sp, #36	@ 0x24
    if (currentShape == 3) return;
 8005c26:	f8d4 7d28 	ldr.w	r7, [r4, #3368]	@ 0xd28
 8005c2a:	2f03      	cmp	r7, #3
{
 8005c2c:	4606      	mov	r6, r0
    if (currentShape == 3) return;
 8005c2e:	d066      	beq.n	8005cfe <_ZN11Screen3View15rotateTetrominoEv+0xe2>
    uint8_t rotated[4][4] = {0};
 8005c30:	ad04      	add	r5, sp, #16
 8005c32:	2210      	movs	r2, #16
 8005c34:	2100      	movs	r1, #0
 8005c36:	4628      	mov	r0, r5
 8005c38:	f01f ffbb 	bl	8025bb2 <memset>
    memcpy(temp, currentTetromino, sizeof(temp));
 8005c3c:	46ec      	mov	ip, sp
 8005c3e:	f504 6251 	add.w	r2, r4, #3344	@ 0xd10
 8005c42:	f504 6852 	add.w	r8, r4, #3360	@ 0xd20
 8005c46:	4663      	mov	r3, ip
 8005c48:	6810      	ldr	r0, [r2, #0]
 8005c4a:	6851      	ldr	r1, [r2, #4]
 8005c4c:	46e6      	mov	lr, ip
 8005c4e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8005c52:	3208      	adds	r2, #8
 8005c54:	4542      	cmp	r2, r8
 8005c56:	46f4      	mov	ip, lr
 8005c58:	d1f6      	bne.n	8005c48 <_ZN11Screen3View15rotateTetrominoEv+0x2c>
        centerX = 2;
 8005c5a:	2f00      	cmp	r7, #0
 8005c5c:	bf14      	ite	ne
 8005c5e:	f04f 0801 	movne.w	r8, #1
 8005c62:	f04f 0802 	moveq.w	r8, #2
    for(int y = 0; y < 4; y++) {
 8005c66:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8005c6a:	2200      	movs	r2, #0
        for(int x = 0; x < 4; x++) {
 8005c6c:	4628      	mov	r0, r5
 8005c6e:	eba5 0c02 	sub.w	ip, r5, r2
 8005c72:	ebaa 0902 	sub.w	r9, sl, r2
        centerX = 1;
 8005c76:	4619      	mov	r1, r3
        for(int x = 0; x < 4; x++) {
 8005c78:	f04f 0e00 	mov.w	lr, #0
            if (currentShape == 0) { // Xử lý đặc biệt cho hình I
 8005c7c:	2f00      	cmp	r7, #0
 8005c7e:	d141      	bne.n	8005d04 <_ZN11Screen3View15rotateTetrominoEv+0xe8>
                rotated[x][3-y] = temp[y][x];
 8005c80:	f891 b000 	ldrb.w	fp, [r1]
 8005c84:	f88c b003 	strb.w	fp, [ip, #3]
        for(int x = 0; x < 4; x++) {
 8005c88:	f10e 0e01 	add.w	lr, lr, #1
 8005c8c:	f1be 0f04 	cmp.w	lr, #4
 8005c90:	f101 0101 	add.w	r1, r1, #1
 8005c94:	f10c 0c04 	add.w	ip, ip, #4
 8005c98:	d1f0      	bne.n	8005c7c <_ZN11Screen3View15rotateTetrominoEv+0x60>
    for(int y = 0; y < 4; y++) {
 8005c9a:	3201      	adds	r2, #1
 8005c9c:	2a04      	cmp	r2, #4
 8005c9e:	f103 0304 	add.w	r3, r3, #4
 8005ca2:	d1e3      	bne.n	8005c6c <_ZN11Screen3View15rotateTetrominoEv+0x50>
    for(int y = 0; y < 4 && canRotate; y++) {
 8005ca4:	2100      	movs	r1, #0
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8005ca6:	f04f 0e0f 	mov.w	lr, #15
                   board[boardY][boardX]) {
 8005caa:	f04f 080a 	mov.w	r8, #10
    for(int y = 0; y < 4; y++) {
 8005cae:	4684      	mov	ip, r0
        for(int x = 0; x < 4; x++) {
 8005cb0:	2200      	movs	r2, #0
            if(rotated[y][x]) {
 8005cb2:	f81c 3b01 	ldrb.w	r3, [ip], #1
 8005cb6:	b1c3      	cbz	r3, 8005cea <_ZN11Screen3View15rotateTetrominoEv+0xce>
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8005cb8:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8005cbc:	f1a3 0914 	sub.w	r9, r3, #20
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8005cc0:	f8d4 3d24 	ldr.w	r3, [r4, #3364]	@ 0xd24
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8005cc4:	fb99 f9fe 	sdiv	r9, r9, lr
 8005cc8:	4491      	add	r9, r2
                if(boardX < 0 || boardX >= BOARD_WIDTH || 
 8005cca:	f1b9 0f09 	cmp.w	r9, #9
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8005cce:	f1a3 030a 	sub.w	r3, r3, #10
 8005cd2:	fb93 f3fe 	sdiv	r3, r3, lr
 8005cd6:	440b      	add	r3, r1
                if(boardX < 0 || boardX >= BOARD_WIDTH || 
 8005cd8:	d81c      	bhi.n	8005d14 <_ZN11Screen3View15rotateTetrominoEv+0xf8>
 8005cda:	2b13      	cmp	r3, #19
 8005cdc:	d81a      	bhi.n	8005d14 <_ZN11Screen3View15rotateTetrominoEv+0xf8>
                   board[boardY][boardX]) {
 8005cde:	fb08 6303 	mla	r3, r8, r3, r6
 8005ce2:	444b      	add	r3, r9
                   boardY < 0 || boardY >= BOARD_HEIGHT ||
 8005ce4:	f893 3468 	ldrb.w	r3, [r3, #1128]	@ 0x468
 8005ce8:	b9a3      	cbnz	r3, 8005d14 <_ZN11Screen3View15rotateTetrominoEv+0xf8>
        for(int x = 0; x < 4; x++) {
 8005cea:	3201      	adds	r2, #1
 8005cec:	2a04      	cmp	r2, #4
 8005cee:	d1e0      	bne.n	8005cb2 <_ZN11Screen3View15rotateTetrominoEv+0x96>
 8005cf0:	2301      	movs	r3, #1
    for(int y = 0; y < 4 && canRotate; y++) {
 8005cf2:	3101      	adds	r1, #1
 8005cf4:	2904      	cmp	r1, #4
 8005cf6:	d00f      	beq.n	8005d18 <_ZN11Screen3View15rotateTetrominoEv+0xfc>
 8005cf8:	3004      	adds	r0, #4
 8005cfa:	2b00      	cmp	r3, #0
 8005cfc:	d1d7      	bne.n	8005cae <_ZN11Screen3View15rotateTetrominoEv+0x92>
}
 8005cfe:	b009      	add	sp, #36	@ 0x24
 8005d00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                if(newX >= 0 && newX < 4 && newY >= 0 && newY < 4) {
 8005d04:	f1b9 0f03 	cmp.w	r9, #3
                    rotated[newY][newX] = temp[y][x];
 8005d08:	bf9c      	itt	ls
 8005d0a:	f891 b000 	ldrbls.w	fp, [r1]
 8005d0e:	f80c b018 	strbls.w	fp, [ip, r8, lsl #1]
 8005d12:	e7b9      	b.n	8005c88 <_ZN11Screen3View15rotateTetrominoEv+0x6c>
                    canRotate = false;
 8005d14:	2300      	movs	r3, #0
 8005d16:	e7ec      	b.n	8005cf2 <_ZN11Screen3View15rotateTetrominoEv+0xd6>
    if(canRotate) {
 8005d18:	2b00      	cmp	r3, #0
 8005d1a:	d0f0      	beq.n	8005cfe <_ZN11Screen3View15rotateTetrominoEv+0xe2>
        memcpy(currentTetromino, rotated, sizeof(currentTetromino));
 8005d1c:	f504 6251 	add.w	r2, r4, #3344	@ 0xd10
 8005d20:	f10d 0c20 	add.w	ip, sp, #32
 8005d24:	462b      	mov	r3, r5
 8005d26:	cb03      	ldmia	r3!, {r0, r1}
 8005d28:	4563      	cmp	r3, ip
 8005d2a:	6010      	str	r0, [r2, #0]
 8005d2c:	6051      	str	r1, [r2, #4]
 8005d2e:	461d      	mov	r5, r3
 8005d30:	f102 0208 	add.w	r2, r2, #8
 8005d34:	d1f6      	bne.n	8005d24 <_ZN11Screen3View15rotateTetrominoEv+0x108>
        drawTetromino(currentShape, currentX, currentY);
 8005d36:	4630      	mov	r0, r6
 8005d38:	f8d4 3d24 	ldr.w	r3, [r4, #3364]	@ 0xd24
 8005d3c:	f8d4 2d20 	ldr.w	r2, [r4, #3360]	@ 0xd20
 8005d40:	4639      	mov	r1, r7
 8005d42:	f7ff ff07 	bl	8005b54 <_ZN11Screen3View13drawTetrominoEiii>
        container.invalidate();
 8005d46:	1d30      	adds	r0, r6, #4
}
 8005d48:	b009      	add	sp, #36	@ 0x24
 8005d4a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005d4e:	f00d b9cd 	b.w	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
	...

08005d54 <_ZN11Screen3View17drawNextTetrominoEv>:
{
 8005d54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    switch(nextShape) {
 8005d58:	f500 5b00 	add.w	fp, r0, #8192	@ 0x2000
{
 8005d5c:	b085      	sub	sp, #20
    switch(nextShape) {
 8005d5e:	f8db 2d2c 	ldr.w	r2, [fp, #3372]	@ 0xd2c
{
 8005d62:	4605      	mov	r5, r0
    switch(nextShape) {
 8005d64:	2a00      	cmp	r2, #0
 8005d66:	d057      	beq.n	8005e18 <_ZN11Screen3View17drawNextTetrominoEv+0xc4>
            NEXT_START_Y = 123;
 8005d68:	2a03      	cmp	r2, #3
 8005d6a:	f04f 0a7b 	mov.w	sl, #123	@ 0x7b
 8005d6e:	bf0c      	ite	eq
 8005d70:	f04f 09c3 	moveq.w	r9, #195	@ 0xc3
 8005d74:	f04f 09c0 	movne.w	r9, #192	@ 0xc0
    for(int y = 0; y < 4; y++) {
 8005d78:	f505 5829 	add.w	r8, r5, #10816	@ 0x2a40
        container.remove(d);
 8005d7c:	1d2b      	adds	r3, r5, #4
        for(int x = 0; x < 4; x++) {
 8005d7e:	2400      	movs	r4, #0
 8005d80:	f108 0810 	add.w	r8, r8, #16
 8005d84:	9301      	str	r3, [sp, #4]
 8005d86:	eb08 0704 	add.w	r7, r8, r4
 8005d8a:	2600      	movs	r6, #0
 8005d8c:	4639      	mov	r1, r7
 8005d8e:	9801      	ldr	r0, [sp, #4]
 8005d90:	3601      	adds	r6, #1
 8005d92:	f006 fb46 	bl	800c422 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8005d96:	2e04      	cmp	r6, #4
 8005d98:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 8005d9c:	d1f6      	bne.n	8005d8c <_ZN11Screen3View17drawNextTetrominoEv+0x38>
    for(int y = 0; y < 4; y++) {
 8005d9e:	34b0      	adds	r4, #176	@ 0xb0
 8005da0:	f5b4 7f30 	cmp.w	r4, #704	@ 0x2c0
 8005da4:	d1ef      	bne.n	8005d86 <_ZN11Screen3View17drawNextTetrominoEv+0x32>
    for(int y = 0; y < 4; y++) {
 8005da6:	2400      	movs	r4, #0
        for(int x = 0; x < 4; x++) {
 8005da8:	f642 2750 	movw	r7, #10832	@ 0x2a50
 8005dac:	23b0      	movs	r3, #176	@ 0xb0
 8005dae:	fb03 7704 	mla	r7, r3, r4, r7
 8005db2:	2600      	movs	r6, #0
            if(TETROMINOS[nextShape][y][x] == 1) {
 8005db4:	f8db 2d2c 	ldr.w	r2, [fp, #3372]	@ 0xd2c
 8005db8:	4b1a      	ldr	r3, [pc, #104]	@ (8005e24 <_ZN11Screen3View17drawNextTetrominoEv+0xd0>)
 8005dba:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8005dbe:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 8005dc2:	5d92      	ldrb	r2, [r2, r6]
 8005dc4:	2a01      	cmp	r2, #1
 8005dc6:	d11c      	bne.n	8005e02 <_ZN11Screen3View17drawNextTetrominoEv+0xae>
                nextBlocks[y][x].setXY(
 8005dc8:	eb04 02c4 	add.w	r2, r4, r4, lsl #3
 8005dcc:	eb06 01c6 	add.w	r1, r6, r6, lsl #3
 8005dd0:	eb05 0807 	add.w	r8, r5, r7
 8005dd4:	4452      	add	r2, sl
 8005dd6:	4449      	add	r1, r9
 8005dd8:	b212      	sxth	r2, r2
 8005dda:	b209      	sxth	r1, r1
 8005ddc:	4640      	mov	r0, r8
 8005dde:	f7fd fae0 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
                nextBlocks[y][x].setBitmap(Bitmap(TETROMINO_NEXT_IMAGES[nextShape]));
 8005de2:	f8db 1d2c 	ldr.w	r1, [fp, #3372]	@ 0xd2c
 8005de6:	4b10      	ldr	r3, [pc, #64]	@ (8005e28 <_ZN11Screen3View17drawNextTetrominoEv+0xd4>)
 8005de8:	59ea      	ldr	r2, [r5, r7]
 8005dea:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8005dee:	f8ad 100c 	strh.w	r1, [sp, #12]
 8005df2:	4640      	mov	r0, r8
 8005df4:	a903      	add	r1, sp, #12
 8005df6:	6e12      	ldr	r2, [r2, #96]	@ 0x60
 8005df8:	4790      	blx	r2
        container.add(d);
 8005dfa:	9801      	ldr	r0, [sp, #4]
 8005dfc:	4641      	mov	r1, r8
 8005dfe:	f006 facf 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        for(int x = 0; x < 4; x++) {
 8005e02:	3601      	adds	r6, #1
 8005e04:	2e04      	cmp	r6, #4
 8005e06:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 8005e0a:	d1d3      	bne.n	8005db4 <_ZN11Screen3View17drawNextTetrominoEv+0x60>
    for(int y = 0; y < 4; y++) {
 8005e0c:	3401      	adds	r4, #1
 8005e0e:	2c04      	cmp	r4, #4
 8005e10:	d1ca      	bne.n	8005da8 <_ZN11Screen3View17drawNextTetrominoEv+0x54>
}
 8005e12:	b005      	add	sp, #20
 8005e14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            NEXT_START_Y = 127;
 8005e18:	f04f 0a7f 	mov.w	sl, #127	@ 0x7f
            NEXT_START_X = 187;
 8005e1c:	f04f 09bb 	mov.w	r9, #187	@ 0xbb
 8005e20:	e7aa      	b.n	8005d78 <_ZN11Screen3View17drawNextTetrominoEv+0x24>
 8005e22:	bf00      	nop
 8005e24:	0802852c 	.word	0x0802852c
 8005e28:	08028510 	.word	0x08028510

08005e2c <_ZN11Screen3ViewC1Ev>:
Screen3View::Screen3View() : 
 8005e2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005e30:	4604      	mov	r4, r0
 8005e32:	b08d      	sub	sp, #52	@ 0x34
    randomSeed(1324)
 8005e34:	f7fd ff06 	bl	8003c44 <_ZN15Screen3ViewBaseC1Ev>
 8005e38:	4b90      	ldr	r3, [pc, #576]	@ (800607c <_ZN11Screen3ViewC1Ev+0x250>)
 8005e3a:	6023      	str	r3, [r4, #0]
 8005e3c:	f504 65a6 	add.w	r5, r4, #1328	@ 0x530
 8005e40:	f504 66fe 	add.w	r6, r4, #2032	@ 0x7f0
 8005e44:	f64f 78ff 	movw	r8, #65535	@ 0xffff
 8005e48:	f105 07b0 	add.w	r7, r5, #176	@ 0xb0
 8005e4c:	4628      	mov	r0, r5
 8005e4e:	a90a      	add	r1, sp, #40	@ 0x28
 8005e50:	352c      	adds	r5, #44	@ 0x2c
 8005e52:	f8ad 8028 	strh.w	r8, [sp, #40]	@ 0x28
 8005e56:	f7fd faeb 	bl	8003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8005e5a:	42bd      	cmp	r5, r7
 8005e5c:	d1f6      	bne.n	8005e4c <_ZN11Screen3ViewC1Ev+0x20>
 8005e5e:	42b5      	cmp	r5, r6
 8005e60:	d1f2      	bne.n	8005e48 <_ZN11Screen3ViewC1Ev+0x1c>
 8005e62:	f504 5529 	add.w	r5, r4, #10816	@ 0x2a40
 8005e66:	3510      	adds	r5, #16
 8005e68:	f64f 78ff 	movw	r8, #65535	@ 0xffff
 8005e6c:	f506 77dc 	add.w	r7, r6, #440	@ 0x1b8
 8005e70:	4630      	mov	r0, r6
 8005e72:	a90a      	add	r1, sp, #40	@ 0x28
 8005e74:	362c      	adds	r6, #44	@ 0x2c
 8005e76:	f8ad 8028 	strh.w	r8, [sp, #40]	@ 0x28
 8005e7a:	f7fd fad9 	bl	8003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8005e7e:	42be      	cmp	r6, r7
 8005e80:	d1f6      	bne.n	8005e70 <_ZN11Screen3ViewC1Ev+0x44>
 8005e82:	42ae      	cmp	r6, r5
 8005e84:	d1f2      	bne.n	8005e6c <_ZN11Screen3ViewC1Ev+0x40>
 8005e86:	f504 5634 	add.w	r6, r4, #11520	@ 0x2d00
 8005e8a:	3610      	adds	r6, #16
 8005e8c:	f64f 78ff 	movw	r8, #65535	@ 0xffff
 8005e90:	f105 07b0 	add.w	r7, r5, #176	@ 0xb0
 8005e94:	4628      	mov	r0, r5
 8005e96:	a90a      	add	r1, sp, #40	@ 0x28
 8005e98:	352c      	adds	r5, #44	@ 0x2c
 8005e9a:	f8ad 8028 	strh.w	r8, [sp, #40]	@ 0x28
 8005e9e:	f7fd fac7 	bl	8003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8005ea2:	42bd      	cmp	r5, r7
 8005ea4:	d1f6      	bne.n	8005e94 <_ZN11Screen3ViewC1Ev+0x68>
 8005ea6:	42b5      	cmp	r5, r6
 8005ea8:	d1f2      	bne.n	8005e90 <_ZN11Screen3ViewC1Ev+0x64>
    currentX(80),
 8005eaa:	f504 5500 	add.w	r5, r4, #8192	@ 0x2000
 8005eae:	2350      	movs	r3, #80	@ 0x50
 8005eb0:	f8c5 3d20 	str.w	r3, [r5, #3360]	@ 0xd20
    currentY(10),
 8005eb4:	230a      	movs	r3, #10
    currentShape(0),
 8005eb6:	2600      	movs	r6, #0
    currentY(10),
 8005eb8:	f8c5 3d24 	str.w	r3, [r5, #3364]	@ 0xd24
    randomSeed(1324)
 8005ebc:	f240 532c 	movw	r3, #1324	@ 0x52c
 8005ec0:	f8c5 3d4c 	str.w	r3, [r5, #3404]	@ 0xd4c
    initializeBag();
 8005ec4:	4620      	mov	r0, r4
    currentShape(0),
 8005ec6:	f8c5 6d28 	str.w	r6, [r5, #3368]	@ 0xd28
    tickCount(0),
 8005eca:	f8c5 6d30 	str.w	r6, [r5, #3376]	@ 0xd30
    isGameOver(false),
 8005ece:	f8a5 6d3c 	strh.w	r6, [r5, #3388]	@ 0xd3c
    initializeBag();
 8005ed2:	f7ff fe0f 	bl	8005af4 <_ZN11Screen3View13initializeBagEv>
    nextShape = getNextShape();
 8005ed6:	4620      	mov	r0, r4
 8005ed8:	f7ff fe22 	bl	8005b20 <_ZN11Screen3View12getNextShapeEv>
    memset(board, 0, sizeof(board));
 8005edc:	22c8      	movs	r2, #200	@ 0xc8
    nextShape = getNextShape();
 8005ede:	f8c5 0d2c 	str.w	r0, [r5, #3372]	@ 0xd2c
    memset(board, 0, sizeof(board));
 8005ee2:	4631      	mov	r1, r6
 8005ee4:	f504 608d 	add.w	r0, r4, #1128	@ 0x468
 8005ee8:	f01f fe63 	bl	8025bb2 <memset>
    memcpy(currentTetromino, TETROMINOS[currentShape], sizeof(currentTetromino));
 8005eec:	4b64      	ldr	r3, [pc, #400]	@ (8006080 <_ZN11Screen3ViewC1Ev+0x254>)
 8005eee:	f505 6251 	add.w	r2, r5, #3344	@ 0xd10
 8005ef2:	f103 0110 	add.w	r1, r3, #16
 8005ef6:	f853 0b04 	ldr.w	r0, [r3], #4
 8005efa:	f842 0b04 	str.w	r0, [r2], #4
 8005efe:	428b      	cmp	r3, r1
 8005f00:	d1f9      	bne.n	8005ef6 <_ZN11Screen3ViewC1Ev+0xca>
    drawTetromino(currentShape, currentX, currentY);
 8005f02:	230a      	movs	r3, #10
 8005f04:	2250      	movs	r2, #80	@ 0x50
 8005f06:	2100      	movs	r1, #0
 8005f08:	4620      	mov	r0, r4
 8005f0a:	f7ff fe23 	bl	8005b54 <_ZN11Screen3View13drawTetrominoEiii>
    drawNextTetromino();
 8005f0e:	4620      	mov	r0, r4
 8005f10:	f7ff ff20 	bl	8005d54 <_ZN11Screen3View17drawNextTetrominoEv>
    for(int i = 0; i < NUM_FIXED_BLOCKS; i++) {
 8005f14:	f8df a180 	ldr.w	sl, [pc, #384]	@ 8006098 <_ZN11Screen3ViewC1Ev+0x26c>
    drawNextTetromino();
 8005f18:	f04f 0908 	mov.w	r9, #8
        int blockY = INIT_BLOCKS[i][1];
 8005f1c:	e9da 0600 	ldrd	r0, r6, [sl]
        int shape = INIT_BLOCKS[i][2];
 8005f20:	f8da 3008 	ldr.w	r3, [sl, #8]
 8005f24:	9303      	str	r3, [sp, #12]
        for(int y = 0; y < 4; y++) {
 8005f26:	f44f 73dc 	mov.w	r3, #440	@ 0x1b8
                    int boardY = (blockY - 10) / BLOCK_SIZE + y;
 8005f2a:	210f      	movs	r1, #15
 8005f2c:	f1a6 020a 	sub.w	r2, r6, #10
 8005f30:	fb92 f2f1 	sdiv	r2, r2, r1
 8005f34:	4353      	muls	r3, r2
 8005f36:	9f03      	ldr	r7, [sp, #12]
 8005f38:	9300      	str	r3, [sp, #0]
 8005f3a:	4b52      	ldr	r3, [pc, #328]	@ (8006084 <_ZN11Screen3ViewC1Ev+0x258>)
 8005f3c:	eb03 1307 	add.w	r3, r3, r7, lsl #4
 8005f40:	9301      	str	r3, [sp, #4]
 8005f42:	270a      	movs	r7, #10
                    int boardX = (blockX - 20) / BLOCK_SIZE + x;
 8005f44:	f1a0 0314 	sub.w	r3, r0, #20
 8005f48:	fb93 f3f1 	sdiv	r3, r3, r1
 8005f4c:	f503 618d 	add.w	r1, r3, #1128	@ 0x468
 8005f50:	fb07 1202 	mla	r2, r7, r2, r1
 8005f54:	18a2      	adds	r2, r4, r2
 8005f56:	b2b6      	uxth	r6, r6
 8005f58:	9202      	str	r2, [sp, #8]
 8005f5a:	f106 023c 	add.w	r2, r6, #60	@ 0x3c
 8005f5e:	b292      	uxth	r2, r2
 8005f60:	9207      	str	r2, [sp, #28]
 8005f62:	222c      	movs	r2, #44	@ 0x2c
 8005f64:	fb02 4303 	mla	r3, r2, r3, r4
 8005f68:	9308      	str	r3, [sp, #32]
 8005f6a:	b283      	uxth	r3, r0
 8005f6c:	9304      	str	r3, [sp, #16]
 8005f6e:	333c      	adds	r3, #60	@ 0x3c
 8005f70:	b29b      	uxth	r3, r3
 8005f72:	9306      	str	r3, [sp, #24]
                    staticBlocks[boardY][boardX].setXY(
 8005f74:	b233      	sxth	r3, r6
 8005f76:	9305      	str	r3, [sp, #20]
 8005f78:	9b08      	ldr	r3, [sp, #32]
 8005f7a:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8005f7e:	f503 67fe 	add.w	r7, r3, #2032	@ 0x7f0
 8005f82:	9b00      	ldr	r3, [sp, #0]
 8005f84:	441f      	add	r7, r3
 8005f86:	e9dd 3b01 	ldrd	r3, fp, [sp, #4]
                if(TETROMINOS_INIT[shape][y][x]) {
 8005f8a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005f8e:	b1e2      	cbz	r2, 8005fca <_ZN11Screen3ViewC1Ev+0x19e>
 8005f90:	9309      	str	r3, [sp, #36]	@ 0x24
                    board[boardY][boardX] = true;
 8005f92:	f04f 0301 	mov.w	r3, #1
                    staticBlocks[boardY][boardX].setXY(
 8005f96:	9a05      	ldr	r2, [sp, #20]
                    board[boardY][boardX] = true;
 8005f98:	f88b 3000 	strb.w	r3, [fp]
                    staticBlocks[boardY][boardX].setXY(
 8005f9c:	fa0f f188 	sxth.w	r1, r8
 8005fa0:	4638      	mov	r0, r7
 8005fa2:	f7fd f9fe 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
                    staticBlocks[boardY][boardX].setBitmap(Bitmap(TETROMINO_IMAGES[INIT_BLOCKS_TYPE[shape]]));
 8005fa6:	4b38      	ldr	r3, [pc, #224]	@ (8006088 <_ZN11Screen3ViewC1Ev+0x25c>)
 8005fa8:	9903      	ldr	r1, [sp, #12]
 8005faa:	683a      	ldr	r2, [r7, #0]
 8005fac:	5c59      	ldrb	r1, [r3, r1]
 8005fae:	4b37      	ldr	r3, [pc, #220]	@ (800608c <_ZN11Screen3ViewC1Ev+0x260>)
 8005fb0:	6e12      	ldr	r2, [r2, #96]	@ 0x60
 8005fb2:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8005fb6:	f8ad 1028 	strh.w	r1, [sp, #40]	@ 0x28
 8005fba:	4638      	mov	r0, r7
 8005fbc:	a90a      	add	r1, sp, #40	@ 0x28
 8005fbe:	4790      	blx	r2
 8005fc0:	4639      	mov	r1, r7
 8005fc2:	1d20      	adds	r0, r4, #4
 8005fc4:	f006 f9ec 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005fc8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
            for(int x = 0; x < 4; x++) {
 8005fca:	9a06      	ldr	r2, [sp, #24]
 8005fcc:	f108 080f 	add.w	r8, r8, #15
 8005fd0:	fa1f f888 	uxth.w	r8, r8
 8005fd4:	4590      	cmp	r8, r2
 8005fd6:	f10b 0b01 	add.w	fp, fp, #1
 8005fda:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 8005fde:	d1d4      	bne.n	8005f8a <_ZN11Screen3ViewC1Ev+0x15e>
        for(int y = 0; y < 4; y++) {
 8005fe0:	9b00      	ldr	r3, [sp, #0]
 8005fe2:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 8005fe6:	9300      	str	r3, [sp, #0]
 8005fe8:	9b01      	ldr	r3, [sp, #4]
 8005fea:	3304      	adds	r3, #4
 8005fec:	9301      	str	r3, [sp, #4]
 8005fee:	9b02      	ldr	r3, [sp, #8]
 8005ff0:	330a      	adds	r3, #10
 8005ff2:	360f      	adds	r6, #15
 8005ff4:	9302      	str	r3, [sp, #8]
 8005ff6:	9b07      	ldr	r3, [sp, #28]
 8005ff8:	b2b6      	uxth	r6, r6
 8005ffa:	429e      	cmp	r6, r3
 8005ffc:	d1ba      	bne.n	8005f74 <_ZN11Screen3ViewC1Ev+0x148>
    for(int i = 0; i < NUM_FIXED_BLOCKS; i++) {
 8005ffe:	f1b9 0901 	subs.w	r9, r9, #1
 8006002:	f10a 0a0c 	add.w	sl, sl, #12
 8006006:	d189      	bne.n	8005f1c <_ZN11Screen3ViewC1Ev+0xf0>
    Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 8006008:	f504 5635 	add.w	r6, r4, #11584	@ 0x2d40
 800600c:	3610      	adds	r6, #16
 800600e:	4a20      	ldr	r2, [pc, #128]	@ (8006090 <_ZN11Screen3ViewC1Ev+0x264>)
    score = 0;
 8006010:	f8c5 9d34 	str.w	r9, [r5, #3380]	@ 0xd34
    Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 8006014:	464b      	mov	r3, r9
    textArea1.setTypedText(touchgfx::TypedText(T_TOADOX));
 8006016:	f504 7788 	add.w	r7, r4, #272	@ 0x110
    Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 800601a:	2114      	movs	r1, #20
 800601c:	4630      	mov	r0, r6
 800601e:	f00f fb4b 	bl	80156b8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8006022:	2310      	movs	r3, #16
    textArea1.setTypedText(touchgfx::TypedText(T_TOADOX));
 8006024:	a90a      	add	r1, sp, #40	@ 0x28
 8006026:	f8c4 6158 	str.w	r6, [r4, #344]	@ 0x158
 800602a:	4638      	mov	r0, r7
 800602c:	4e19      	ldr	r6, [pc, #100]	@ (8006094 <_ZN11Screen3ViewC1Ev+0x268>)
 800602e:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8006032:	960a      	str	r6, [sp, #40]	@ 0x28
 8006034:	f009 f950 	bl	800f2d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea1.invalidate();
 8006038:	4638      	mov	r0, r7
 800603a:	f00d f857 	bl	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
    targetScore = 200;
 800603e:	23c8      	movs	r3, #200	@ 0xc8
 8006040:	f8c5 3d38 	str.w	r3, [r5, #3384]	@ 0xd38
    Unicode::snprintf(textArea3Buffer, sizeof(textArea3Buffer), "%d", targetScore);
 8006044:	f504 5535 	add.w	r5, r4, #11584	@ 0x2d40
 8006048:	3538      	adds	r5, #56	@ 0x38
 800604a:	4a11      	ldr	r2, [pc, #68]	@ (8006090 <_ZN11Screen3ViewC1Ev+0x264>)
 800604c:	2114      	movs	r1, #20
 800604e:	4628      	mov	r0, r5
 8006050:	f00f fb32 	bl	80156b8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8006054:	f8c4 51d0 	str.w	r5, [r4, #464]	@ 0x1d0
    textArea3.setTypedText(touchgfx::TypedText(T_TARGET3));
 8006058:	f504 75c4 	add.w	r5, r4, #392	@ 0x188
 800605c:	2303      	movs	r3, #3
 800605e:	a90a      	add	r1, sp, #40	@ 0x28
 8006060:	4628      	mov	r0, r5
 8006062:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8006066:	960a      	str	r6, [sp, #40]	@ 0x28
 8006068:	f009 f936 	bl	800f2d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea3.invalidate();
 800606c:	4628      	mov	r0, r5
 800606e:	f00d f83d 	bl	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8006072:	4620      	mov	r0, r4
 8006074:	b00d      	add	sp, #52	@ 0x34
 8006076:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800607a:	bf00      	nop
 800607c:	08028340 	.word	0x08028340
 8006080:	0802852c 	.word	0x0802852c
 8006084:	080283e0 	.word	0x080283e0
 8006088:	0802836c 	.word	0x0802836c
 800608c:	0802851e 	.word	0x0802851e
 8006090:	0802772d 	.word	0x0802772d
 8006094:	08027d58 	.word	0x08027d58
 8006098:	08028380 	.word	0x08028380

0800609c <_ZN11Screen3View11clearScreenEv>:
{
 800609c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80060a0:	4604      	mov	r4, r0
        for(int x = 0; x < 4; x++) {
 80060a2:	2500      	movs	r5, #0
 80060a4:	f500 69a6 	add.w	r9, r0, #1328	@ 0x530
        container.remove(d);
 80060a8:	f100 0804 	add.w	r8, r0, #4
 80060ac:	eb09 0705 	add.w	r7, r9, r5
 80060b0:	2600      	movs	r6, #0
 80060b2:	4639      	mov	r1, r7
 80060b4:	4640      	mov	r0, r8
 80060b6:	3601      	adds	r6, #1
 80060b8:	f006 f9b3 	bl	800c422 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80060bc:	2e04      	cmp	r6, #4
 80060be:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 80060c2:	d1f6      	bne.n	80060b2 <_ZN11Screen3View11clearScreenEv+0x16>
    for(int y = 0; y < 4; y++) {
 80060c4:	35b0      	adds	r5, #176	@ 0xb0
 80060c6:	f5b5 7f30 	cmp.w	r5, #704	@ 0x2c0
 80060ca:	d1ef      	bne.n	80060ac <_ZN11Screen3View11clearScreenEv+0x10>
 80060cc:	f06f 0a2a 	mvn.w	sl, #42	@ 0x2a
 80060d0:	f204 4967 	addw	r9, r4, #1127	@ 0x467
 80060d4:	fb04 fa0a 	mul.w	sl, r4, sl
 80060d8:	2700      	movs	r7, #0
                remove(staticBlocks[y][x]);
 80060da:	f04f 0b2c 	mov.w	fp, #44	@ 0x2c
        for(int x = 0; x < 4; x++) {
 80060de:	464e      	mov	r6, r9
 80060e0:	250a      	movs	r5, #10
            if(board[y][x]) {
 80060e2:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 80060e6:	b14a      	cbz	r2, 80060fc <_ZN11Screen3View11clearScreenEv+0x60>
                remove(staticBlocks[y][x]);
 80060e8:	fb0b a106 	mla	r1, fp, r6, sl
 80060ec:	f5a1 4139 	sub.w	r1, r1, #47360	@ 0xb900
 80060f0:	39f0      	subs	r1, #240	@ 0xf0
 80060f2:	4640      	mov	r0, r8
 80060f4:	f006 f995 	bl	800c422 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
                board[y][x] = false;
 80060f8:	2300      	movs	r3, #0
 80060fa:	7033      	strb	r3, [r6, #0]
        for(int x = 0; x < BOARD_WIDTH; x++) {
 80060fc:	3d01      	subs	r5, #1
 80060fe:	d1f0      	bne.n	80060e2 <_ZN11Screen3View11clearScreenEv+0x46>
    for(int y = 0; y < BOARD_HEIGHT; y++) {
 8006100:	f507 77dc 	add.w	r7, r7, #440	@ 0x1b8
 8006104:	f242 2260 	movw	r2, #8800	@ 0x2260
 8006108:	4297      	cmp	r7, r2
 800610a:	f109 090a 	add.w	r9, r9, #10
 800610e:	d1e6      	bne.n	80060de <_ZN11Screen3View11clearScreenEv+0x42>
 8006110:	f504 5429 	add.w	r4, r4, #10816	@ 0x2a40
 8006114:	3410      	adds	r4, #16
        for(int x = 0; x < 4; x++) {
 8006116:	1967      	adds	r7, r4, r5
 8006118:	2600      	movs	r6, #0
 800611a:	4639      	mov	r1, r7
 800611c:	4640      	mov	r0, r8
 800611e:	3601      	adds	r6, #1
 8006120:	f006 f97f 	bl	800c422 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8006124:	2e04      	cmp	r6, #4
 8006126:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 800612a:	d1f6      	bne.n	800611a <_ZN11Screen3View11clearScreenEv+0x7e>
    for(int y = 0; y < 4; y++) {
 800612c:	35b0      	adds	r5, #176	@ 0xb0
 800612e:	f5b5 7f30 	cmp.w	r5, #704	@ 0x2c0
 8006132:	d1f0      	bne.n	8006116 <_ZN11Screen3View11clearScreenEv+0x7a>
}
 8006134:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08006138 <_ZN11Screen3View18createNewTetrominoEv>:
{
 8006138:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    if (isGameOver || isWin) {
 800613a:	f500 5500 	add.w	r5, r0, #8192	@ 0x2000
{
 800613e:	4604      	mov	r4, r0
    if (isGameOver || isWin) {
 8006140:	f895 3d3c 	ldrb.w	r3, [r5, #3388]	@ 0xd3c
 8006144:	2b00      	cmp	r3, #0
 8006146:	f040 8093 	bne.w	8006270 <_ZN11Screen3View18createNewTetrominoEv+0x138>
 800614a:	f895 3d3d 	ldrb.w	r3, [r5, #3389]	@ 0xd3d
 800614e:	2b00      	cmp	r3, #0
 8006150:	f040 808e 	bne.w	8006270 <_ZN11Screen3View18createNewTetrominoEv+0x138>
    currentY = 10;
 8006154:	230a      	movs	r3, #10
    currentShape = nextShape;
 8006156:	f8d5 6d2c 	ldr.w	r6, [r5, #3372]	@ 0xd2c
    currentY = 10;
 800615a:	f8c5 3d24 	str.w	r3, [r5, #3364]	@ 0xd24
    currentX = 80;
 800615e:	2350      	movs	r3, #80	@ 0x50
 8006160:	f8c5 3d20 	str.w	r3, [r5, #3360]	@ 0xd20
    currentShape = nextShape;
 8006164:	f8c5 6d28 	str.w	r6, [r5, #3368]	@ 0xd28
    nextShape = getNextShape();
 8006168:	f7ff fcda 	bl	8005b20 <_ZN11Screen3View12getNextShapeEv>
    memcpy(currentTetromino, TETROMINOS[currentShape], sizeof(currentTetromino));
 800616c:	4b41      	ldr	r3, [pc, #260]	@ (8006274 <_ZN11Screen3View18createNewTetrominoEv+0x13c>)
    nextShape = getNextShape();
 800616e:	f8c5 0d2c 	str.w	r0, [r5, #3372]	@ 0xd2c
    memcpy(currentTetromino, TETROMINOS[currentShape], sizeof(currentTetromino));
 8006172:	eb03 1306 	add.w	r3, r3, r6, lsl #4
 8006176:	f504 5234 	add.w	r2, r4, #11520	@ 0x2d00
 800617a:	3210      	adds	r2, #16
 800617c:	f103 0110 	add.w	r1, r3, #16
 8006180:	f853 0b04 	ldr.w	r0, [r3], #4
 8006184:	f842 0b04 	str.w	r0, [r2], #4
 8006188:	428b      	cmp	r3, r1
 800618a:	d1f9      	bne.n	8006180 <_ZN11Screen3View18createNewTetrominoEv+0x48>
    drawNextTetromino();
 800618c:	4620      	mov	r0, r4
 800618e:	f7ff fde1 	bl	8005d54 <_ZN11Screen3View17drawNextTetrominoEv>
    for(int y = 0; y < 4 && canCreate; y++) {
 8006192:	f504 5134 	add.w	r1, r4, #11520	@ 0x2d00
 8006196:	310f      	adds	r1, #15
 8006198:	2600      	movs	r6, #0
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 800619a:	f04f 0c0f 	mov.w	ip, #15
{
 800619e:	460f      	mov	r7, r1
        for(int x = 0; x < 4; x++) {
 80061a0:	2000      	movs	r0, #0
            if(currentTetromino[y][x]) {  // Nếu ô này có khối
 80061a2:	f817 3f01 	ldrb.w	r3, [r7, #1]!
 80061a6:	b1c3      	cbz	r3, 80061da <_ZN11Screen3View18createNewTetrominoEv+0xa2>
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 80061a8:	f8d5 2d20 	ldr.w	r2, [r5, #3360]	@ 0xd20
 80061ac:	3a14      	subs	r2, #20
 80061ae:	fb92 f2fc 	sdiv	r2, r2, ip
 80061b2:	4402      	add	r2, r0
                if(boardX >= 0 && boardX < BOARD_WIDTH && 
 80061b4:	2a09      	cmp	r2, #9
 80061b6:	d810      	bhi.n	80061da <_ZN11Screen3View18createNewTetrominoEv+0xa2>
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 80061b8:	f8d5 3d24 	ldr.w	r3, [r5, #3364]	@ 0xd24
 80061bc:	3b0a      	subs	r3, #10
 80061be:	fb93 f3fc 	sdiv	r3, r3, ip
 80061c2:	4433      	add	r3, r6
                if(boardX >= 0 && boardX < BOARD_WIDTH && 
 80061c4:	2b13      	cmp	r3, #19
 80061c6:	d808      	bhi.n	80061da <_ZN11Screen3View18createNewTetrominoEv+0xa2>
                   board[boardY][boardX]) {
 80061c8:	f04f 0e0a 	mov.w	lr, #10
 80061cc:	fb0e 4303 	mla	r3, lr, r3, r4
 80061d0:	4413      	add	r3, r2
                   boardY >= 0 && boardY < BOARD_HEIGHT && 
 80061d2:	f893 3468 	ldrb.w	r3, [r3, #1128]	@ 0x468
 80061d6:	2b00      	cmp	r3, #0
 80061d8:	d13a      	bne.n	8006250 <_ZN11Screen3View18createNewTetrominoEv+0x118>
        for(int x = 0; x < 4; x++) {
 80061da:	3001      	adds	r0, #1
 80061dc:	2804      	cmp	r0, #4
 80061de:	d1e0      	bne.n	80061a2 <_ZN11Screen3View18createNewTetrominoEv+0x6a>
 80061e0:	2301      	movs	r3, #1
    for(int y = 0; y < 4 && canCreate; y++) {
 80061e2:	3601      	adds	r6, #1
 80061e4:	2e04      	cmp	r6, #4
 80061e6:	d035      	beq.n	8006254 <_ZN11Screen3View18createNewTetrominoEv+0x11c>
 80061e8:	3104      	adds	r1, #4
 80061ea:	2b00      	cmp	r3, #0
 80061ec:	d1d7      	bne.n	800619e <_ZN11Screen3View18createNewTetrominoEv+0x66>
        isGameOver = true;
 80061ee:	2601      	movs	r6, #1
 80061f0:	f885 6d3c 	strb.w	r6, [r5, #3388]	@ 0xd3c
        clearScreen();
 80061f4:	4620      	mov	r0, r4
        Unicode::snprintf(textArea2Buffer, sizeof(textArea2Buffer), "%d", score);
 80061f6:	f504 5735 	add.w	r7, r4, #11584	@ 0x2d40
        clearScreen();
 80061fa:	f7ff ff4f 	bl	800609c <_ZN11Screen3View11clearScreenEv>
        Unicode::snprintf(textArea2Buffer, sizeof(textArea2Buffer), "%d", score);
 80061fe:	3724      	adds	r7, #36	@ 0x24
 8006200:	2300      	movs	r3, #0
 8006202:	4a1d      	ldr	r2, [pc, #116]	@ (8006278 <_ZN11Screen3View18createNewTetrominoEv+0x140>)
 8006204:	f884 30bd 	strb.w	r3, [r4, #189]	@ 0xbd
 8006208:	f884 61f9 	strb.w	r6, [r4, #505]	@ 0x1f9
 800620c:	f8d5 3d34 	ldr.w	r3, [r5, #3380]	@ 0xd34
 8006210:	f884 6251 	strb.w	r6, [r4, #593]	@ 0x251
 8006214:	f884 62c9 	strb.w	r6, [r4, #713]	@ 0x2c9
 8006218:	2114      	movs	r1, #20
 800621a:	4638      	mov	r0, r7
 800621c:	f00f fa4c 	bl	80156b8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        textArea2.setTypedText(touchgfx::TypedText(T_MAN3SCORE));
 8006220:	f204 450c 	addw	r5, r4, #1036	@ 0x40c
 8006224:	4b15      	ldr	r3, [pc, #84]	@ (800627c <_ZN11Screen3View18createNewTetrominoEv+0x144>)
 8006226:	9300      	str	r3, [sp, #0]
 8006228:	4669      	mov	r1, sp
 800622a:	230a      	movs	r3, #10
 800622c:	4628      	mov	r0, r5
 800622e:	f884 6431 	strb.w	r6, [r4, #1073]	@ 0x431
 8006232:	f8c4 7454 	str.w	r7, [r4, #1108]	@ 0x454
 8006236:	f8ad 3004 	strh.w	r3, [sp, #4]
 800623a:	f009 f84d 	bl	800f2d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        textArea2.invalidate(); // Vẽ lại nội dung
 800623e:	4628      	mov	r0, r5
 8006240:	f00c ff54 	bl	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
        container.invalidate();
 8006244:	1d20      	adds	r0, r4, #4
}
 8006246:	b003      	add	sp, #12
 8006248:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800624c:	f00c bf4e 	b.w	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
                    canCreate = false;
 8006250:	2300      	movs	r3, #0
 8006252:	e7c6      	b.n	80061e2 <_ZN11Screen3View18createNewTetrominoEv+0xaa>
    if (!canCreate) {
 8006254:	2b00      	cmp	r3, #0
 8006256:	d0ca      	beq.n	80061ee <_ZN11Screen3View18createNewTetrominoEv+0xb6>
        drawTetromino(currentShape, currentX, currentY);
 8006258:	f8d5 3d24 	ldr.w	r3, [r5, #3364]	@ 0xd24
 800625c:	f8d5 2d20 	ldr.w	r2, [r5, #3360]	@ 0xd20
 8006260:	f8d5 1d28 	ldr.w	r1, [r5, #3368]	@ 0xd28
 8006264:	4620      	mov	r0, r4
}
 8006266:	b003      	add	sp, #12
 8006268:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
        drawTetromino(currentShape, currentX, currentY);
 800626c:	f7ff bc72 	b.w	8005b54 <_ZN11Screen3View13drawTetrominoEiii>
}
 8006270:	b003      	add	sp, #12
 8006272:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006274:	0802852c 	.word	0x0802852c
 8006278:	0802772d 	.word	0x0802772d
 800627c:	08027d58 	.word	0x08027d58

08006280 <_ZN11Screen3View18checkAndClearLinesEv>:
{
 8006280:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006284:	b09d      	sub	sp, #116	@ 0x74
 8006286:	4604      	mov	r4, r0
    int fullLines[BOARD_HEIGHT] = {0};  // Track which lines are full
 8006288:	2250      	movs	r2, #80	@ 0x50
 800628a:	2100      	movs	r1, #0
 800628c:	a808      	add	r0, sp, #32
 800628e:	f01f fc90 	bl	8025bb2 <memset>
    int numFullLines = 0;
 8006292:	2500      	movs	r5, #0
 8006294:	f204 5225 	addw	r2, r4, #1317	@ 0x525
    for(int y = BOARD_HEIGHT - 1; y >= 0; y--) {
 8006298:	2313      	movs	r3, #19
{
 800629a:	4610      	mov	r0, r2
        for(int x = 0; x < BOARD_WIDTH; x++) {
 800629c:	2100      	movs	r1, #0
            if(!board[y][x]) {
 800629e:	f810 6f01 	ldrb.w	r6, [r0, #1]!
 80062a2:	b146      	cbz	r6, 80062b6 <_ZN11Screen3View18checkAndClearLinesEv+0x36>
        for(int x = 0; x < BOARD_WIDTH; x++) {
 80062a4:	3101      	adds	r1, #1
 80062a6:	290a      	cmp	r1, #10
 80062a8:	d1f9      	bne.n	800629e <_ZN11Screen3View18checkAndClearLinesEv+0x1e>
            fullLines[numFullLines++] = y;
 80062aa:	a91c      	add	r1, sp, #112	@ 0x70
 80062ac:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 80062b0:	3501      	adds	r5, #1
 80062b2:	f841 3c50 	str.w	r3, [r1, #-80]
    for(int y = BOARD_HEIGHT - 1; y >= 0; y--) {
 80062b6:	3b01      	subs	r3, #1
 80062b8:	1c59      	adds	r1, r3, #1
 80062ba:	f1a2 020a 	sub.w	r2, r2, #10
 80062be:	d1ec      	bne.n	800629a <_ZN11Screen3View18checkAndClearLinesEv+0x1a>
    if(numFullLines > 0) {
 80062c0:	2d00      	cmp	r5, #0
 80062c2:	dd50      	ble.n	8006366 <_ZN11Screen3View18checkAndClearLinesEv+0xe6>
            score += 10; // 1 line cleared
 80062c4:	f504 5200 	add.w	r2, r4, #8192	@ 0x2000
        if (numFullLines == 1) {
 80062c8:	2d01      	cmp	r5, #1
            score += 10; // 1 line cleared
 80062ca:	f8d2 3d34 	ldr.w	r3, [r2, #3380]	@ 0xd34
        if (numFullLines == 1) {
 80062ce:	d168      	bne.n	80063a2 <_ZN11Screen3View18checkAndClearLinesEv+0x122>
            score += 10; // 1 line cleared
 80062d0:	330a      	adds	r3, #10
        Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 80062d2:	f504 5635 	add.w	r6, r4, #11584	@ 0x2d40
 80062d6:	3610      	adds	r6, #16
            score += 10; // 1 line cleared
 80062d8:	f8c2 3d34 	str.w	r3, [r2, #3380]	@ 0xd34
        Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 80062dc:	2114      	movs	r1, #20
 80062de:	4a7c      	ldr	r2, [pc, #496]	@ (80064d0 <_ZN11Screen3View18checkAndClearLinesEv+0x250>)
 80062e0:	4630      	mov	r0, r6
 80062e2:	f00f f9e9 	bl	80156b8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80062e6:	4b7b      	ldr	r3, [pc, #492]	@ (80064d4 <_ZN11Screen3View18checkAndClearLinesEv+0x254>)
 80062e8:	f8c4 6158 	str.w	r6, [r4, #344]	@ 0x158
        textArea1.setTypedText(touchgfx::TypedText(T_TOADOX));
 80062ec:	f504 7688 	add.w	r6, r4, #272	@ 0x110
 80062f0:	4630      	mov	r0, r6
 80062f2:	9306      	str	r3, [sp, #24]
 80062f4:	a906      	add	r1, sp, #24
 80062f6:	2310      	movs	r3, #16
 80062f8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80062fc:	f008 ffec 	bl	800f2d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        textArea1.invalidate(); // Vẽ lại nội dung};
 8006300:	4630      	mov	r0, r6
 8006302:	f06f 062a 	mvn.w	r6, #42	@ 0x2a
 8006306:	4366      	muls	r6, r4
 8006308:	f00c fef0 	bl	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
                remove(staticBlocks[lineY][x]);
 800630c:	f5a6 4639 	sub.w	r6, r6, #47360	@ 0xb900
        for(int i = 0; i < numFullLines; i++) {
 8006310:	2300      	movs	r3, #0
        textArea1.invalidate(); // Vẽ lại nội dung};
 8006312:	f10d 0920 	add.w	r9, sp, #32
        for(int i = 0; i < numFullLines; i++) {
 8006316:	9301      	str	r3, [sp, #4]
 8006318:	f04f 0b0a 	mov.w	fp, #10
        container.remove(d);
 800631c:	f104 0a04 	add.w	sl, r4, #4
                remove(staticBlocks[lineY][x]);
 8006320:	3ec4      	subs	r6, #196	@ 0xc4
            int lineY = fullLines[i];
 8006322:	f859 7b04 	ldr.w	r7, [r9], #4
            for(int x = 0; x < BOARD_WIDTH; x++) {
 8006326:	fb0b 4707 	mla	r7, fp, r7, r4
 800632a:	f207 4767 	addw	r7, r7, #1127	@ 0x467
 800632e:	f04f 0800 	mov.w	r8, #0
                remove(staticBlocks[lineY][x]);
 8006332:	222c      	movs	r2, #44	@ 0x2c
 8006334:	fb02 6107 	mla	r1, r2, r7, r6
 8006338:	4650      	mov	r0, sl
            for(int x = 0; x < BOARD_WIDTH; x++) {
 800633a:	f108 0801 	add.w	r8, r8, #1
 800633e:	f006 f870 	bl	800c422 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
                board[lineY][x] = false;
 8006342:	2300      	movs	r3, #0
            for(int x = 0; x < BOARD_WIDTH; x++) {
 8006344:	f1b8 0f0a 	cmp.w	r8, #10
                board[lineY][x] = false;
 8006348:	f807 3f01 	strb.w	r3, [r7, #1]!
            for(int x = 0; x < BOARD_WIDTH; x++) {
 800634c:	f04f 022c 	mov.w	r2, #44	@ 0x2c
 8006350:	d1f0      	bne.n	8006334 <_ZN11Screen3View18checkAndClearLinesEv+0xb4>
        for(int i = 0; i < numFullLines; i++) {
 8006352:	9a01      	ldr	r2, [sp, #4]
 8006354:	3201      	adds	r2, #1
 8006356:	4295      	cmp	r5, r2
 8006358:	d12c      	bne.n	80063b4 <_ZN11Screen3View18checkAndClearLinesEv+0x134>
        for(int y = fullLines[0]; y >= 0; y--) {
 800635a:	9f08      	ldr	r7, [sp, #32]
 800635c:	2f00      	cmp	r7, #0
 800635e:	da3a      	bge.n	80063d6 <_ZN11Screen3View18checkAndClearLinesEv+0x156>
        container.invalidate();
 8006360:	4650      	mov	r0, sl
 8006362:	f00c fec3 	bl	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
    if (score >= targetScore) {
 8006366:	f504 5300 	add.w	r3, r4, #8192	@ 0x2000
 800636a:	f8d3 1d34 	ldr.w	r1, [r3, #3380]	@ 0xd34
 800636e:	f8d3 2d38 	ldr.w	r2, [r3, #3384]	@ 0xd38
 8006372:	4291      	cmp	r1, r2
 8006374:	f0c0 80a9 	bcc.w	80064ca <_ZN11Screen3View18checkAndClearLinesEv+0x24a>
        isWin = true;
 8006378:	2501      	movs	r5, #1
 800637a:	f883 5d3d 	strb.w	r5, [r3, #3389]	@ 0xd3d
        clearScreen();
 800637e:	4620      	mov	r0, r4
 8006380:	f7ff fe8c 	bl	800609c <_ZN11Screen3View11clearScreenEv>
 8006384:	2300      	movs	r3, #0
 8006386:	1d20      	adds	r0, r4, #4
 8006388:	f884 5225 	strb.w	r5, [r4, #549]	@ 0x225
 800638c:	f884 30bd 	strb.w	r3, [r4, #189]	@ 0xbd
 8006390:	f884 5341 	strb.w	r5, [r4, #833]	@ 0x341
 8006394:	f884 53b9 	strb.w	r5, [r4, #953]	@ 0x3b9
}
 8006398:	b01d      	add	sp, #116	@ 0x74
 800639a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800639e:	f00c bea5 	b.w	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
        } else if (numFullLines == 2) {
 80063a2:	2d02      	cmp	r5, #2
 80063a4:	d101      	bne.n	80063aa <_ZN11Screen3View18checkAndClearLinesEv+0x12a>
            score += 30; // 2 lines cleared
 80063a6:	331e      	adds	r3, #30
 80063a8:	e793      	b.n	80062d2 <_ZN11Screen3View18checkAndClearLinesEv+0x52>
        } else if (numFullLines == 3) {
 80063aa:	2d03      	cmp	r5, #3
            score += 50; // 3 lines cleared
 80063ac:	bf0c      	ite	eq
 80063ae:	3332      	addeq	r3, #50	@ 0x32
            score += 100; // 4 or more lines cleared
 80063b0:	3364      	addne	r3, #100	@ 0x64
 80063b2:	e78e      	b.n	80062d2 <_ZN11Screen3View18checkAndClearLinesEv+0x52>
 80063b4:	9201      	str	r2, [sp, #4]
 80063b6:	e7b4      	b.n	8006322 <_ZN11Screen3View18checkAndClearLinesEv+0xa2>
 80063b8:	462a      	mov	r2, r5
                if(fullLines[i] > y) shiftDown++;
 80063ba:	f850 5b04 	ldr.w	r5, [r0], #4
            for(int i = 0; i < numFullLines; i++) {
 80063be:	9e01      	ldr	r6, [sp, #4]
                if(fullLines[i] > y) shiftDown++;
 80063c0:	42bd      	cmp	r5, r7
 80063c2:	bfc8      	it	gt
 80063c4:	3101      	addgt	r1, #1
            for(int i = 0; i < numFullLines; i++) {
 80063c6:	4296      	cmp	r6, r2
 80063c8:	f102 0501 	add.w	r5, r2, #1
 80063cc:	d1f4      	bne.n	80063b8 <_ZN11Screen3View18checkAndClearLinesEv+0x138>
            if(shiftDown > 0) {
 80063ce:	2900      	cmp	r1, #0
 80063d0:	dc05      	bgt.n	80063de <_ZN11Screen3View18checkAndClearLinesEv+0x15e>
        for(int y = fullLines[0]; y >= 0; y--) {
 80063d2:	3f01      	subs	r7, #1
 80063d4:	e7c2      	b.n	800635c <_ZN11Screen3View18checkAndClearLinesEv+0xdc>
            for(int i = 0; i < numFullLines; i++) {
 80063d6:	2200      	movs	r2, #0
 80063d8:	a808      	add	r0, sp, #32
            int shiftDown = 0;
 80063da:	4611      	mov	r1, r2
 80063dc:	e7ed      	b.n	80063ba <_ZN11Screen3View18checkAndClearLinesEv+0x13a>
                        board[y + shiftDown][x] = true;
 80063de:	4439      	add	r1, r7
 80063e0:	200a      	movs	r0, #10
 80063e2:	fb00 f507 	mul.w	r5, r0, r7
                            10 + ((y + shiftDown) * BLOCK_SIZE)
 80063e6:	ebc1 1201 	rsb	r2, r1, r1, lsl #4
 80063ea:	f44f 7cdc 	mov.w	ip, #440	@ 0x1b8
 80063ee:	f204 4967 	addw	r9, r4, #1127	@ 0x467
 80063f2:	fb0c 4601 	mla	r6, ip, r1, r4
 80063f6:	320a      	adds	r2, #10
 80063f8:	9502      	str	r5, [sp, #8]
 80063fa:	44a9      	add	r9, r5
 80063fc:	4341      	muls	r1, r0
 80063fe:	f504 65fe 	add.w	r5, r4, #2032	@ 0x7f0
                        staticBlocks[y + shiftDown][x].setXY(
 8006402:	b212      	sxth	r2, r2
 8006404:	fb0c 5507 	mla	r5, ip, r7, r5
 8006408:	9103      	str	r1, [sp, #12]
 800640a:	46b3      	mov	fp, r6
 800640c:	f04f 0814 	mov.w	r8, #20
                    if(board[y][x]) {
 8006410:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8006414:	2900      	cmp	r1, #0
 8006416:	d04a      	beq.n	80064ae <_ZN11Screen3View18checkAndClearLinesEv+0x22e>
                        board[y + shiftDown][x] = true;
 8006418:	9902      	ldr	r1, [sp, #8]
 800641a:	9803      	ldr	r0, [sp, #12]
                        staticBlocks[y + shiftDown][x].setXY(
 800641c:	9205      	str	r2, [sp, #20]
                        board[y + shiftDown][x] = true;
 800641e:	eba9 0101 	sub.w	r1, r9, r1
 8006422:	f04f 0c01 	mov.w	ip, #1
 8006426:	f801 c000 	strb.w	ip, [r1, r0]
class Drawable
 800642a:	e9d5 0101 	ldrd	r0, r1, [r5, #4]
 800642e:	f206 7ef4 	addw	lr, r6, #2036	@ 0x7f4
                        board[y][x] = false;
 8006432:	f889 3000 	strb.w	r3, [r9]
 8006436:	e88e 0003 	stmia.w	lr, {r0, r1}
 800643a:	e9d5 0103 	ldrd	r0, r1, [r5, #12]
 800643e:	f206 7efc 	addw	lr, r6, #2044	@ 0x7fc
 8006442:	e88e 0003 	stmia.w	lr, {r0, r1}
 8006446:	6969      	ldr	r1, [r5, #20]
 8006448:	f8c6 1804 	str.w	r1, [r6, #2052]	@ 0x804
 800644c:	69a9      	ldr	r1, [r5, #24]
 800644e:	f8c6 1808 	str.w	r1, [r6, #2056]	@ 0x808
 8006452:	69e9      	ldr	r1, [r5, #28]
 8006454:	f8c6 180c 	str.w	r1, [r6, #2060]	@ 0x80c
 8006458:	f9b5 1020 	ldrsh.w	r1, [r5, #32]
 800645c:	f8a6 1810 	strh.w	r1, [r6, #2064]	@ 0x810
 8006460:	f9b5 1022 	ldrsh.w	r1, [r5, #34]	@ 0x22
 8006464:	f8a6 1812 	strh.w	r1, [r6, #2066]	@ 0x812
 8006468:	f895 1024 	ldrb.w	r1, [r5, #36]	@ 0x24
 800646c:	f886 1814 	strb.w	r1, [r6, #2068]	@ 0x814
 8006470:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 8006474:	f886 1815 	strb.w	r1, [r6, #2069]	@ 0x815
 8006478:	8ce9      	ldrh	r1, [r5, #38]	@ 0x26
 800647a:	f8ab 1816 	strh.w	r1, [fp, #2070]	@ 0x816
                        staticBlocks[y + shiftDown][x] = staticBlocks[y][x];
 800647e:	f506 6cfe 	add.w	ip, r6, #2032	@ 0x7f0
 8006482:	f895 1028 	ldrb.w	r1, [r5, #40]	@ 0x28
 8006486:	f88b 1818 	strb.w	r1, [fp, #2072]	@ 0x818
                        staticBlocks[y + shiftDown][x].setXY(
 800648a:	4660      	mov	r0, ip
 800648c:	fa0f f188 	sxth.w	r1, r8
 8006490:	f8cd c010 	str.w	ip, [sp, #16]
 8006494:	f7fc ff85 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
        container.add(d);
 8006498:	9804      	ldr	r0, [sp, #16]
 800649a:	4601      	mov	r1, r0
 800649c:	4650      	mov	r0, sl
 800649e:	f005 ff7f 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        container.remove(d);
 80064a2:	4629      	mov	r1, r5
 80064a4:	4650      	mov	r0, sl
 80064a6:	f005 ffbc 	bl	800c422 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80064aa:	9a05      	ldr	r2, [sp, #20]
 80064ac:	2300      	movs	r3, #0
                for(int x = 0; x < BOARD_WIDTH; x++) {
 80064ae:	f108 080f 	add.w	r8, r8, #15
 80064b2:	fa1f f888 	uxth.w	r8, r8
 80064b6:	f1b8 0faa 	cmp.w	r8, #170	@ 0xaa
 80064ba:	f106 062c 	add.w	r6, r6, #44	@ 0x2c
 80064be:	f10b 0b2c 	add.w	fp, fp, #44	@ 0x2c
 80064c2:	f105 052c 	add.w	r5, r5, #44	@ 0x2c
 80064c6:	d1a3      	bne.n	8006410 <_ZN11Screen3View18checkAndClearLinesEv+0x190>
 80064c8:	e783      	b.n	80063d2 <_ZN11Screen3View18checkAndClearLinesEv+0x152>
}
 80064ca:	b01d      	add	sp, #116	@ 0x74
 80064cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80064d0:	0802772d 	.word	0x0802772d
 80064d4:	08027d58 	.word	0x08027d58

080064d8 <_ZN11Screen3View15freezeTetrominoEv>:
{
 80064d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80064dc:	f500 5a34 	add.w	sl, r0, #11520	@ 0x2d00
 80064e0:	b085      	sub	sp, #20
 80064e2:	4605      	mov	r5, r0
 80064e4:	f10a 0a0f 	add.w	sl, sl, #15
    for(int y = 0; y < 4; y++) {
 80064e8:	f04f 0900 	mov.w	r9, #0
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 80064ec:	f500 5b00 	add.w	fp, r0, #8192	@ 0x2000
        for(int x = 0; x < 4; x++) {
 80064f0:	ebc9 1309 	rsb	r3, r9, r9, lsl #4
 80064f4:	b29b      	uxth	r3, r3
 80064f6:	9300      	str	r3, [sp, #0]
 80064f8:	f04f 0800 	mov.w	r8, #0
{
 80064fc:	4653      	mov	r3, sl
            if(currentTetromino[y][x]) {
 80064fe:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8006502:	2a00      	cmp	r2, #0
 8006504:	d03d      	beq.n	8006582 <_ZN11Screen3View15freezeTetrominoEv+0xaa>
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8006506:	f8db 2d24 	ldr.w	r2, [fp, #3364]	@ 0xd24
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 800650a:	f8db 1d20 	ldr.w	r1, [fp, #3360]	@ 0xd20
 800650e:	9301      	str	r3, [sp, #4]
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8006510:	f1a2 060a 	sub.w	r6, r2, #10
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8006514:	230f      	movs	r3, #15
                board[boardY][boardX] = true;
 8006516:	200a      	movs	r0, #10
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8006518:	fb96 f6f3 	sdiv	r6, r6, r3
 800651c:	444e      	add	r6, r9
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 800651e:	f1a1 0414 	sub.w	r4, r1, #20
                board[boardY][boardX] = true;
 8006522:	fb00 5006 	mla	r0, r0, r6, r5
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8006526:	fb94 f4f3 	sdiv	r4, r4, r3
 800652a:	4444      	add	r4, r8
                board[boardY][boardX] = true;
 800652c:	4420      	add	r0, r4
 800652e:	2701      	movs	r7, #1
 8006530:	f880 7468 	strb.w	r7, [r0, #1128]	@ 0x468
                staticBlocks[boardY][boardX].setXY(
 8006534:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 8006538:	4346      	muls	r6, r0
 800653a:	202c      	movs	r0, #44	@ 0x2c
                    currentY + (y * BLOCK_SIZE)
 800653c:	9b00      	ldr	r3, [sp, #0]
                staticBlocks[boardY][boardX].setXY(
 800653e:	4344      	muls	r4, r0
 8006540:	f506 67fe 	add.w	r7, r6, #2032	@ 0x7f0
 8006544:	4427      	add	r7, r4
                    currentX + (x * BLOCK_SIZE),
 8006546:	ebc8 1008 	rsb	r0, r8, r8, lsl #4
                staticBlocks[boardY][boardX].setXY(
 800654a:	442f      	add	r7, r5
                    currentY + (y * BLOCK_SIZE)
 800654c:	441a      	add	r2, r3
                    currentX + (x * BLOCK_SIZE),
 800654e:	4401      	add	r1, r0
                staticBlocks[boardY][boardX].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 8006550:	4434      	add	r4, r6
                staticBlocks[boardY][boardX].setXY(
 8006552:	b212      	sxth	r2, r2
 8006554:	b209      	sxth	r1, r1
 8006556:	4638      	mov	r0, r7
                staticBlocks[boardY][boardX].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 8006558:	442c      	add	r4, r5
                staticBlocks[boardY][boardX].setXY(
 800655a:	f7fc ff22 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
                staticBlocks[boardY][boardX].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 800655e:	4b12      	ldr	r3, [pc, #72]	@ (80065a8 <_ZN11Screen3View15freezeTetrominoEv+0xd0>)
 8006560:	f8db 1d28 	ldr.w	r1, [fp, #3368]	@ 0xd28
 8006564:	f8d4 27f0 	ldr.w	r2, [r4, #2032]	@ 0x7f0
 8006568:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 800656c:	6e12      	ldr	r2, [r2, #96]	@ 0x60
 800656e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8006572:	4638      	mov	r0, r7
 8006574:	a903      	add	r1, sp, #12
 8006576:	4790      	blx	r2
        container.add(d);
 8006578:	4639      	mov	r1, r7
 800657a:	1d28      	adds	r0, r5, #4
 800657c:	f005 ff10 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006580:	9b01      	ldr	r3, [sp, #4]
        for(int x = 0; x < 4; x++) {
 8006582:	f108 0801 	add.w	r8, r8, #1
 8006586:	f1b8 0f04 	cmp.w	r8, #4
 800658a:	d1b8      	bne.n	80064fe <_ZN11Screen3View15freezeTetrominoEv+0x26>
    for(int y = 0; y < 4; y++) {
 800658c:	f109 0901 	add.w	r9, r9, #1
 8006590:	f1b9 0f04 	cmp.w	r9, #4
 8006594:	f10a 0a04 	add.w	sl, sl, #4
 8006598:	d1aa      	bne.n	80064f0 <_ZN11Screen3View15freezeTetrominoEv+0x18>
    checkAndClearLines();
 800659a:	4628      	mov	r0, r5
}
 800659c:	b005      	add	sp, #20
 800659e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    checkAndClearLines();
 80065a2:	f7ff be6d 	b.w	8006280 <_ZN11Screen3View18checkAndClearLinesEv>
 80065a6:	bf00      	nop
 80065a8:	0802851e 	.word	0x0802851e

080065ac <_ZN11Screen3View15handleTickEventEv>:
{
 80065ac:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    if (isGameOver || isWin) {
 80065b0:	f500 5400 	add.w	r4, r0, #8192	@ 0x2000
{
 80065b4:	4605      	mov	r5, r0
    if (isGameOver || isWin) {
 80065b6:	f894 3d3c 	ldrb.w	r3, [r4, #3388]	@ 0xd3c
 80065ba:	2b00      	cmp	r3, #0
 80065bc:	f040 8095 	bne.w	80066ea <_ZN11Screen3View15handleTickEventEv+0x13e>
 80065c0:	f894 6d3d 	ldrb.w	r6, [r4, #3389]	@ 0xd3d
 80065c4:	2e00      	cmp	r6, #0
 80065c6:	f040 8090 	bne.w	80066ea <_ZN11Screen3View15handleTickEventEv+0x13e>
    tickCount++;
 80065ca:	f8d4 3d30 	ldr.w	r3, [r4, #3376]	@ 0xd30
 80065ce:	2219      	movs	r2, #25
 80065d0:	3301      	adds	r3, #1
 80065d2:	f8c4 3d30 	str.w	r3, [r4, #3376]	@ 0xd30
 80065d6:	fbb3 f1f2 	udiv	r1, r3, r2
 80065da:	fb02 3311 	mls	r3, r2, r1, r3
    if (tickCount % 25 == 12) {
 80065de:	2b0c      	cmp	r3, #12
 80065e0:	d117      	bne.n	8006612 <_ZN11Screen3View15handleTickEventEv+0x66>
        uint32_t count = osMessageQueueGetCount(Queue1Handle);
 80065e2:	4f43      	ldr	r7, [pc, #268]	@ (80066f0 <_ZN11Screen3View15handleTickEventEv+0x144>)
        uint8_t res = 0;
 80065e4:	f88d 6007 	strb.w	r6, [sp, #7]
        uint32_t count = osMessageQueueGetCount(Queue1Handle);
 80065e8:	6838      	ldr	r0, [r7, #0]
 80065ea:	f003 fe85 	bl	800a2f8 <osMessageQueueGetCount>
        if (count > 0)
 80065ee:	b180      	cbz	r0, 8006612 <_ZN11Screen3View15handleTickEventEv+0x66>
            osMessageQueueGet(Queue1Handle, &res, NULL, osWaitForever);
 80065f0:	f04f 33ff 	mov.w	r3, #4294967295
 80065f4:	6838      	ldr	r0, [r7, #0]
 80065f6:	4632      	mov	r2, r6
 80065f8:	f10d 0107 	add.w	r1, sp, #7
 80065fc:	f003 fe4c 	bl	800a298 <osMessageQueueGet>
            if (res == 'L') 
 8006600:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8006604:	2b4c      	cmp	r3, #76	@ 0x4c
 8006606:	d02d      	beq.n	8006664 <_ZN11Screen3View15handleTickEventEv+0xb8>
 8006608:	d826      	bhi.n	8006658 <_ZN11Screen3View15handleTickEventEv+0xac>
 800660a:	2b43      	cmp	r3, #67	@ 0x43
 800660c:	d060      	beq.n	80066d0 <_ZN11Screen3View15handleTickEventEv+0x124>
 800660e:	2b44      	cmp	r3, #68	@ 0x44
 8006610:	d048      	beq.n	80066a4 <_ZN11Screen3View15handleTickEventEv+0xf8>
    if (tickCount % 50 == 0) 
 8006612:	f8d4 3d30 	ldr.w	r3, [r4, #3376]	@ 0xd30
 8006616:	2232      	movs	r2, #50	@ 0x32
 8006618:	fbb3 f1f2 	udiv	r1, r3, r2
 800661c:	fb02 3311 	mls	r3, r2, r1, r3
 8006620:	b9a3      	cbnz	r3, 800664c <_ZN11Screen3View15handleTickEventEv+0xa0>
        if (checkCollision(currentX, currentY + BLOCK_SIZE, currentShape))
 8006622:	f8d4 6d24 	ldr.w	r6, [r4, #3364]	@ 0xd24
 8006626:	f8d4 8d20 	ldr.w	r8, [r4, #3360]	@ 0xd20
 800662a:	f8d4 7d28 	ldr.w	r7, [r4, #3368]	@ 0xd28
 800662e:	360f      	adds	r6, #15
 8006630:	463b      	mov	r3, r7
 8006632:	4632      	mov	r2, r6
 8006634:	4641      	mov	r1, r8
 8006636:	4628      	mov	r0, r5
 8006638:	f7ff fa01 	bl	8005a3e <_ZN11Screen3View14checkCollisionEiii>
 800663c:	2800      	cmp	r0, #0
 800663e:	d04b      	beq.n	80066d8 <_ZN11Screen3View15handleTickEventEv+0x12c>
            freezeTetromino();
 8006640:	4628      	mov	r0, r5
 8006642:	f7ff ff49 	bl	80064d8 <_ZN11Screen3View15freezeTetrominoEv>
            createNewTetromino();
 8006646:	4628      	mov	r0, r5
 8006648:	f7ff fd76 	bl	8006138 <_ZN11Screen3View18createNewTetrominoEv>
        container.invalidate();
 800664c:	1d28      	adds	r0, r5, #4
}
 800664e:	b002      	add	sp, #8
 8006650:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006654:	f00c bd4a 	b.w	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
 8006658:	2b52      	cmp	r3, #82	@ 0x52
 800665a:	d1da      	bne.n	8006612 <_ZN11Screen3View15handleTickEventEv+0x66>
                if (!checkCollision(currentX + BLOCK_SIZE, currentY, currentShape)) 
 800665c:	f8d4 6d20 	ldr.w	r6, [r4, #3360]	@ 0xd20
 8006660:	360f      	adds	r6, #15
 8006662:	e002      	b.n	800666a <_ZN11Screen3View15handleTickEventEv+0xbe>
                if (!checkCollision(currentX - BLOCK_SIZE, currentY, currentShape)) 
 8006664:	f8d4 6d20 	ldr.w	r6, [r4, #3360]	@ 0xd20
 8006668:	3e0f      	subs	r6, #15
                if (!checkCollision(currentX + BLOCK_SIZE, currentY, currentShape)) 
 800666a:	f8d4 8d24 	ldr.w	r8, [r4, #3364]	@ 0xd24
 800666e:	f8d4 7d28 	ldr.w	r7, [r4, #3368]	@ 0xd28
 8006672:	4642      	mov	r2, r8
 8006674:	463b      	mov	r3, r7
 8006676:	4631      	mov	r1, r6
 8006678:	4628      	mov	r0, r5
 800667a:	f7ff f9e0 	bl	8005a3e <_ZN11Screen3View14checkCollisionEiii>
 800667e:	2800      	cmp	r0, #0
 8006680:	d1c7      	bne.n	8006612 <_ZN11Screen3View15handleTickEventEv+0x66>
                    currentX += BLOCK_SIZE;
 8006682:	f8c4 6d20 	str.w	r6, [r4, #3360]	@ 0xd20
                    drawTetromino(currentShape, currentX, currentY);
 8006686:	4643      	mov	r3, r8
 8006688:	4632      	mov	r2, r6
 800668a:	4639      	mov	r1, r7
 800668c:	4628      	mov	r0, r5
 800668e:	f7ff fa61 	bl	8005b54 <_ZN11Screen3View13drawTetrominoEiii>
 8006692:	e7be      	b.n	8006612 <_ZN11Screen3View15handleTickEventEv+0x66>
                    currentY += BLOCK_SIZE;
 8006694:	f8c4 6d24 	str.w	r6, [r4, #3364]	@ 0xd24
                    drawTetromino(currentShape, currentX, currentY);
 8006698:	4633      	mov	r3, r6
 800669a:	463a      	mov	r2, r7
 800669c:	4641      	mov	r1, r8
 800669e:	4628      	mov	r0, r5
 80066a0:	f7ff fa58 	bl	8005b54 <_ZN11Screen3View13drawTetrominoEiii>
                while (!checkCollision(currentX, currentY + BLOCK_SIZE, currentShape)) 
 80066a4:	f8d4 6d24 	ldr.w	r6, [r4, #3364]	@ 0xd24
 80066a8:	f8d4 7d20 	ldr.w	r7, [r4, #3360]	@ 0xd20
 80066ac:	f8d4 8d28 	ldr.w	r8, [r4, #3368]	@ 0xd28
 80066b0:	360f      	adds	r6, #15
 80066b2:	4643      	mov	r3, r8
 80066b4:	4632      	mov	r2, r6
 80066b6:	4639      	mov	r1, r7
 80066b8:	4628      	mov	r0, r5
 80066ba:	f7ff f9c0 	bl	8005a3e <_ZN11Screen3View14checkCollisionEiii>
 80066be:	2800      	cmp	r0, #0
 80066c0:	d0e8      	beq.n	8006694 <_ZN11Screen3View15handleTickEventEv+0xe8>
                freezeTetromino();
 80066c2:	4628      	mov	r0, r5
 80066c4:	f7ff ff08 	bl	80064d8 <_ZN11Screen3View15freezeTetrominoEv>
                createNewTetromino();
 80066c8:	4628      	mov	r0, r5
 80066ca:	f7ff fd35 	bl	8006138 <_ZN11Screen3View18createNewTetrominoEv>
 80066ce:	e7a0      	b.n	8006612 <_ZN11Screen3View15handleTickEventEv+0x66>
                rotateTetromino(); // Xoay hình nếu nhận được lệnh
 80066d0:	4628      	mov	r0, r5
 80066d2:	f7ff faa3 	bl	8005c1c <_ZN11Screen3View15rotateTetrominoEv>
 80066d6:	e79c      	b.n	8006612 <_ZN11Screen3View15handleTickEventEv+0x66>
            currentY += BLOCK_SIZE;
 80066d8:	f8c4 6d24 	str.w	r6, [r4, #3364]	@ 0xd24
            drawTetromino(currentShape, currentX, currentY);
 80066dc:	4633      	mov	r3, r6
 80066de:	4642      	mov	r2, r8
 80066e0:	4639      	mov	r1, r7
 80066e2:	4628      	mov	r0, r5
 80066e4:	f7ff fa36 	bl	8005b54 <_ZN11Screen3View13drawTetrominoEiii>
 80066e8:	e7b0      	b.n	800664c <_ZN11Screen3View15handleTickEventEv+0xa0>
}
 80066ea:	b002      	add	sp, #8
 80066ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80066f0:	200003a8 	.word	0x200003a8

080066f4 <_ZN16Screen4PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen4Presenter() {}
 80066f4:	4770      	bx	lr

080066f6 <_ZThn4_N16Screen4PresenterD1Ev>:
 80066f6:	3804      	subs	r0, #4
 80066f8:	4770      	bx	lr

080066fa <_ZN16Screen4Presenter10deactivateEv>:
}

void Screen4Presenter::activate()
{

}
 80066fa:	4770      	bx	lr

080066fc <_ZN16Screen4PresenterD0Ev>:
 80066fc:	b510      	push	{r4, lr}
 80066fe:	2110      	movs	r1, #16
 8006700:	4604      	mov	r4, r0
 8006702:	f01e f912 	bl	802492a <_ZdlPvj>
 8006706:	4620      	mov	r0, r4
 8006708:	bd10      	pop	{r4, pc}

0800670a <_ZThn4_N16Screen4PresenterD0Ev>:
 800670a:	f1a0 0004 	sub.w	r0, r0, #4
 800670e:	e7f5      	b.n	80066fc <_ZN16Screen4PresenterD0Ev>

08006710 <_ZN16Screen4PresenterC1ER11Screen4View>:
 8006710:	2200      	movs	r2, #0
 8006712:	6082      	str	r2, [r0, #8]
    : view(v)
 8006714:	4a02      	ldr	r2, [pc, #8]	@ (8006720 <_ZN16Screen4PresenterC1ER11Screen4View+0x10>)
 8006716:	6002      	str	r2, [r0, #0]
 8006718:	3218      	adds	r2, #24
 800671a:	6042      	str	r2, [r0, #4]
 800671c:	60c1      	str	r1, [r0, #12]
}
 800671e:	4770      	bx	lr
 8006720:	080285a4 	.word	0x080285a4

08006724 <_ZN11Screen4View14tearDownScreenEv>:
}

void Screen4View::tearDownScreen()
{
    Screen4ViewBase::tearDownScreen();
}
 8006724:	4770      	bx	lr
	...

08006728 <_ZN11Screen4ViewD1Ev>:

class Screen4View : public Screen4ViewBase
{
public:
    Screen4View();
    virtual ~Screen4View() {}
 8006728:	4b13      	ldr	r3, [pc, #76]	@ (8006778 <_ZN11Screen4ViewD1Ev+0x50>)
 800672a:	b570      	push	{r4, r5, r6, lr}
 800672c:	4605      	mov	r5, r0
 800672e:	6003      	str	r3, [r0, #0]
 8006730:	f642 44e4 	movw	r4, #11492	@ 0x2ce4
 8006734:	f642 2624 	movw	r6, #10788	@ 0x2a24
 8006738:	42b4      	cmp	r4, r6
 800673a:	d116      	bne.n	800676a <_ZN11Screen4ViewD1Ev+0x42>
 800673c:	f240 76c4 	movw	r6, #1988	@ 0x7c4
 8006740:	592b      	ldr	r3, [r5, r4]
 8006742:	1928      	adds	r0, r5, r4
 8006744:	681b      	ldr	r3, [r3, #0]
 8006746:	3c2c      	subs	r4, #44	@ 0x2c
 8006748:	4798      	blx	r3
 800674a:	42b4      	cmp	r4, r6
 800674c:	d1f8      	bne.n	8006740 <_ZN11Screen4ViewD1Ev+0x18>
 800674e:	f240 5604 	movw	r6, #1284	@ 0x504
 8006752:	592b      	ldr	r3, [r5, r4]
 8006754:	1928      	adds	r0, r5, r4
 8006756:	681b      	ldr	r3, [r3, #0]
 8006758:	3c2c      	subs	r4, #44	@ 0x2c
 800675a:	4798      	blx	r3
 800675c:	42b4      	cmp	r4, r6
 800675e:	d1f8      	bne.n	8006752 <_ZN11Screen4ViewD1Ev+0x2a>
 8006760:	4628      	mov	r0, r5
 8006762:	f7fd fcde 	bl	8004122 <_ZN15Screen4ViewBaseD1Ev>
 8006766:	4628      	mov	r0, r5
 8006768:	bd70      	pop	{r4, r5, r6, pc}
 800676a:	592b      	ldr	r3, [r5, r4]
 800676c:	1928      	adds	r0, r5, r4
 800676e:	681b      	ldr	r3, [r3, #0]
 8006770:	4798      	blx	r3
 8006772:	3c2c      	subs	r4, #44	@ 0x2c
 8006774:	e7e0      	b.n	8006738 <_ZN11Screen4ViewD1Ev+0x10>
 8006776:	bf00      	nop
 8006778:	080285cc 	.word	0x080285cc

0800677c <_ZN11Screen4ViewD0Ev>:
 800677c:	b510      	push	{r4, lr}
 800677e:	4604      	mov	r4, r0
 8006780:	f7ff ffd2 	bl	8006728 <_ZN11Screen4ViewD1Ev>
 8006784:	4620      	mov	r0, r4
 8006786:	f642 518c 	movw	r1, #11660	@ 0x2d8c
 800678a:	f01e f8ce 	bl	802492a <_ZdlPvj>
 800678e:	4620      	mov	r0, r4
 8006790:	bd10      	pop	{r4, pc}

08006792 <_ZN11Screen4View14checkCollisionEiii>:
bool Screen4View::checkCollision(int newX, int newY, int shape)
{
    for(int y = 0; y < 4; y++) {
        for(int x = 0; x < 4; x++) {
            if(currentTetromino[y][x]) {
                int boardX = (newX - 20) / BLOCK_SIZE + x;
 8006792:	230f      	movs	r3, #15
{
 8006794:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006798:	f500 5434 	add.w	r4, r0, #11520	@ 0x2d00
                int boardX = (newX - 20) / BLOCK_SIZE + x;
 800679c:	3914      	subs	r1, #20
                int boardY = (newY - 10) / BLOCK_SIZE + y;
 800679e:	3a0a      	subs	r2, #10
                int boardX = (newX - 20) / BLOCK_SIZE + x;
 80067a0:	fb91 f1f3 	sdiv	r1, r1, r3
                int boardY = (newY - 10) / BLOCK_SIZE + y;
 80067a4:	fb92 f2f3 	sdiv	r2, r2, r3
 80067a8:	441c      	add	r4, r3
 80067aa:	f102 0804 	add.w	r8, r2, #4
 80067ae:	f101 0e04 	add.w	lr, r1, #4
 80067b2:	f500 638d 	add.w	r3, r0, #1128	@ 0x468
 80067b6:	f04f 0c0a 	mov.w	ip, #10
        for(int x = 0; x < 4; x++) {
 80067ba:	460d      	mov	r5, r1
 80067bc:	fb0c 3702 	mla	r7, ip, r2, r3
{
 80067c0:	4626      	mov	r6, r4
            if(currentTetromino[y][x]) {
 80067c2:	f816 0f01 	ldrb.w	r0, [r6, #1]!
 80067c6:	b128      	cbz	r0, 80067d4 <_ZN11Screen4View14checkCollisionEiii+0x42>
                
                // Kiểm tra chạm đáy
                if(boardY >= BOARD_HEIGHT) return true;
 80067c8:	2a13      	cmp	r2, #19
 80067ca:	dc0d      	bgt.n	80067e8 <_ZN11Screen4View14checkCollisionEiii+0x56>
                
                // Kiểm tra chạm biên
                if(boardX < 0 || boardX >= BOARD_WIDTH) return true;
 80067cc:	2d09      	cmp	r5, #9
 80067ce:	d80b      	bhi.n	80067e8 <_ZN11Screen4View14checkCollisionEiii+0x56>
                
                // Kiểm tra chạm khối khác
                if(board[boardY][boardX]) return true;
 80067d0:	5d78      	ldrb	r0, [r7, r5]
 80067d2:	b950      	cbnz	r0, 80067ea <_ZN11Screen4View14checkCollisionEiii+0x58>
        for(int x = 0; x < 4; x++) {
 80067d4:	3501      	adds	r5, #1
 80067d6:	4575      	cmp	r5, lr
 80067d8:	d1f3      	bne.n	80067c2 <_ZN11Screen4View14checkCollisionEiii+0x30>
    for(int y = 0; y < 4; y++) {
 80067da:	3201      	adds	r2, #1
 80067dc:	4542      	cmp	r2, r8
 80067de:	f104 0404 	add.w	r4, r4, #4
 80067e2:	d1ea      	bne.n	80067ba <_ZN11Screen4View14checkCollisionEiii+0x28>
            }
        }
    }
    return false;
 80067e4:	2000      	movs	r0, #0
 80067e6:	e000      	b.n	80067ea <_ZN11Screen4View14checkCollisionEiii+0x58>
                if(boardY >= BOARD_HEIGHT) return true;
 80067e8:	2001      	movs	r0, #1
}
 80067ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080067f0 <_ZN11Screen4View12simpleRandomEv>:
uint32_t Screen4View::simpleRandom()
{
    // Linear Congruential Generator (LCG)
    // Sử dụng công thức: next = (a * seed + c) % m
    // a = 1664525, c = 1013904223, m = 2^32
    randomSeed = randomSeed * 1664525 + 1013904223 + score - 2611;
 80067f0:	f500 5200 	add.w	r2, r0, #8192	@ 0x2000
 80067f4:	4b05      	ldr	r3, [pc, #20]	@ (800680c <_ZN11Screen4View12simpleRandomEv+0x1c>)
 80067f6:	f8d2 0d34 	ldr.w	r0, [r2, #3380]	@ 0xd34
 80067fa:	f8d2 1d4c 	ldr.w	r1, [r2, #3404]	@ 0xd4c
 80067fe:	4403      	add	r3, r0
 8006800:	4803      	ldr	r0, [pc, #12]	@ (8006810 <_ZN11Screen4View12simpleRandomEv+0x20>)
 8006802:	fb00 3001 	mla	r0, r0, r1, r3
 8006806:	f8c2 0d4c 	str.w	r0, [r2, #3404]	@ 0xd4c
    return randomSeed;
 800680a:	4770      	bx	lr
 800680c:	3c6ee92c 	.word	0x3c6ee92c
 8006810:	0019660d 	.word	0x0019660d

08006814 <_ZN11Screen4View10shuffleBagEv>:
{
 8006814:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006816:	f500 5535 	add.w	r5, r0, #11584	@ 0x2d40
 800681a:	4606      	mov	r6, r0
 800681c:	3505      	adds	r5, #5
 800681e:	2407      	movs	r4, #7
        bag[i] = bag[j];
 8006820:	f642 573e 	movw	r7, #11582	@ 0x2d3e
        int j = simpleRandom() % (i + 1);
 8006824:	4630      	mov	r0, r6
 8006826:	f7ff ffe3 	bl	80067f0 <_ZN11Screen4View12simpleRandomEv>
 800682a:	fbb0 f3f4 	udiv	r3, r0, r4
 800682e:	fb03 0314 	mls	r3, r3, r4, r0
        bag[i] = bag[j];
 8006832:	4433      	add	r3, r6
    for(int i = BAG_SIZE - 1; i > 0; i--) {
 8006834:	3c01      	subs	r4, #1
        uint8_t temp = bag[i];
 8006836:	f815 2d01 	ldrb.w	r2, [r5, #-1]!
        bag[i] = bag[j];
 800683a:	5dd9      	ldrb	r1, [r3, r7]
 800683c:	7029      	strb	r1, [r5, #0]
    for(int i = BAG_SIZE - 1; i > 0; i--) {
 800683e:	2c01      	cmp	r4, #1
        bag[j] = temp;
 8006840:	55da      	strb	r2, [r3, r7]
    for(int i = BAG_SIZE - 1; i > 0; i--) {
 8006842:	d1ef      	bne.n	8006824 <_ZN11Screen4View10shuffleBagEv+0x10>
}
 8006844:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08006848 <_ZN11Screen4View13initializeBagEv>:
{
 8006848:	b510      	push	{r4, lr}
        bag[i] = i;
 800684a:	f500 5400 	add.w	r4, r0, #8192	@ 0x2000
 800684e:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8006852:	f8a4 3d3e 	strh.w	r3, [r4, #3390]	@ 0xd3e
 8006856:	4b06      	ldr	r3, [pc, #24]	@ (8006870 <_ZN11Screen4View13initializeBagEv+0x28>)
 8006858:	f8c4 3d40 	str.w	r3, [r4, #3392]	@ 0xd40
 800685c:	2306      	movs	r3, #6
 800685e:	f884 3d44 	strb.w	r3, [r4, #3396]	@ 0xd44
    shuffleBag();
 8006862:	f7ff ffd7 	bl	8006814 <_ZN11Screen4View10shuffleBagEv>
    bagIndex = 0;
 8006866:	2300      	movs	r3, #0
 8006868:	f8c4 3d48 	str.w	r3, [r4, #3400]	@ 0xd48
}
 800686c:	bd10      	pop	{r4, pc}
 800686e:	bf00      	nop
 8006870:	05040302 	.word	0x05040302

08006874 <_ZN11Screen4View12getNextShapeEv>:
{
 8006874:	b538      	push	{r3, r4, r5, lr}
    if(bagIndex >= BAG_SIZE) {
 8006876:	f500 5500 	add.w	r5, r0, #8192	@ 0x2000
{
 800687a:	4604      	mov	r4, r0
    if(bagIndex >= BAG_SIZE) {
 800687c:	f8d5 3d48 	ldr.w	r3, [r5, #3400]	@ 0xd48
 8006880:	2b06      	cmp	r3, #6
 8006882:	dd04      	ble.n	800688e <_ZN11Screen4View12getNextShapeEv+0x1a>
        shuffleBag();
 8006884:	f7ff ffc6 	bl	8006814 <_ZN11Screen4View10shuffleBagEv>
        bagIndex = 0;
 8006888:	2300      	movs	r3, #0
 800688a:	f8c5 3d48 	str.w	r3, [r5, #3400]	@ 0xd48
    return bag[bagIndex++];
 800688e:	f8d5 3d48 	ldr.w	r3, [r5, #3400]	@ 0xd48
 8006892:	1c5a      	adds	r2, r3, #1
 8006894:	441c      	add	r4, r3
}
 8006896:	f642 533e 	movw	r3, #11582	@ 0x2d3e
    return bag[bagIndex++];
 800689a:	f8c5 2d48 	str.w	r2, [r5, #3400]	@ 0xd48
}
 800689e:	5ce0      	ldrb	r0, [r4, r3]
 80068a0:	bd38      	pop	{r3, r4, r5, pc}

080068a2 <_ZN11Screen4View11setupScreenEv>:
    Screen4ViewBase::setupScreen();
 80068a2:	f7fd bc3f 	b.w	8004124 <_ZN15Screen4ViewBase11setupScreenEv>
	...

080068a8 <_ZN11Screen4View13drawTetrominoEiii>:
{
 80068a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80068ac:	b087      	sub	sp, #28
 80068ae:	461c      	mov	r4, r3
        container.remove(d);
 80068b0:	1d03      	adds	r3, r0, #4
 80068b2:	4605      	mov	r5, r0
 80068b4:	4617      	mov	r7, r2
        for(int x = 0; x < 4; x++) {
 80068b6:	2600      	movs	r6, #0
 80068b8:	f500 6aa6 	add.w	sl, r0, #1328	@ 0x530
 80068bc:	9300      	str	r3, [sp, #0]
 80068be:	eb0a 0906 	add.w	r9, sl, r6
 80068c2:	f04f 0800 	mov.w	r8, #0
 80068c6:	4649      	mov	r1, r9
 80068c8:	9800      	ldr	r0, [sp, #0]
 80068ca:	f108 0801 	add.w	r8, r8, #1
 80068ce:	f005 fda8 	bl	800c422 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80068d2:	f1b8 0f04 	cmp.w	r8, #4
 80068d6:	f109 092c 	add.w	r9, r9, #44	@ 0x2c
 80068da:	d1f4      	bne.n	80068c6 <_ZN11Screen4View13drawTetrominoEiii+0x1e>
    for(int y = 0; y < 4; y++) {
 80068dc:	36b0      	adds	r6, #176	@ 0xb0
 80068de:	f5b6 7f30 	cmp.w	r6, #704	@ 0x2c0
 80068e2:	d1ec      	bne.n	80068be <_ZN11Screen4View13drawTetrominoEiii+0x16>
 80068e4:	b2bf      	uxth	r7, r7
 80068e6:	f107 023c 	add.w	r2, r7, #60	@ 0x3c
 80068ea:	f505 5834 	add.w	r8, r5, #11520	@ 0x2d00
 80068ee:	b292      	uxth	r2, r2
 80068f0:	f108 080f 	add.w	r8, r8, #15
 80068f4:	b2a4      	uxth	r4, r4
 80068f6:	2300      	movs	r3, #0
 80068f8:	9202      	str	r2, [sp, #8]
                blocks[y][x].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 80068fa:	f505 5b00 	add.w	fp, r5, #8192	@ 0x2000
        for(int x = 0; x < 4; x++) {
 80068fe:	eb05 0a03 	add.w	sl, r5, r3
 8006902:	463e      	mov	r6, r7
        for(int x = 0; x < 4; x++) {
 8006904:	f8cd 8004 	str.w	r8, [sp, #4]
            if(currentTetromino[y][x] == 1) {
 8006908:	9901      	ldr	r1, [sp, #4]
 800690a:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800690e:	9101      	str	r1, [sp, #4]
 8006910:	2a01      	cmp	r2, #1
 8006912:	d119      	bne.n	8006948 <_ZN11Screen4View13drawTetrominoEiii+0xa0>
                blocks[y][x].setXY(
 8006914:	f50a 69a6 	add.w	r9, sl, #1328	@ 0x530
 8006918:	b222      	sxth	r2, r4
 800691a:	b231      	sxth	r1, r6
 800691c:	4648      	mov	r0, r9
 800691e:	9303      	str	r3, [sp, #12]
 8006920:	f7fc fd3f 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
                blocks[y][x].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 8006924:	4b11      	ldr	r3, [pc, #68]	@ (800696c <_ZN11Screen4View13drawTetrominoEiii+0xc4>)
 8006926:	f8db 1d28 	ldr.w	r1, [fp, #3368]	@ 0xd28
 800692a:	f8da 2530 	ldr.w	r2, [sl, #1328]	@ 0x530
 800692e:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8006932:	6e12      	ldr	r2, [r2, #96]	@ 0x60
 8006934:	f8ad 1014 	strh.w	r1, [sp, #20]
 8006938:	4648      	mov	r0, r9
 800693a:	a905      	add	r1, sp, #20
 800693c:	4790      	blx	r2
        container.add(d);
 800693e:	9800      	ldr	r0, [sp, #0]
 8006940:	4649      	mov	r1, r9
 8006942:	f005 fd2d 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006946:	9b03      	ldr	r3, [sp, #12]
        for(int x = 0; x < 4; x++) {
 8006948:	9a02      	ldr	r2, [sp, #8]
 800694a:	360f      	adds	r6, #15
 800694c:	b2b6      	uxth	r6, r6
 800694e:	4296      	cmp	r6, r2
 8006950:	f10a 0a2c 	add.w	sl, sl, #44	@ 0x2c
 8006954:	d1d8      	bne.n	8006908 <_ZN11Screen4View13drawTetrominoEiii+0x60>
    for(int y = 0; y < 4; y++) {
 8006956:	33b0      	adds	r3, #176	@ 0xb0
 8006958:	340f      	adds	r4, #15
 800695a:	f5b3 7f30 	cmp.w	r3, #704	@ 0x2c0
 800695e:	f108 0804 	add.w	r8, r8, #4
 8006962:	b2a4      	uxth	r4, r4
 8006964:	d1cb      	bne.n	80068fe <_ZN11Screen4View13drawTetrominoEiii+0x56>
}
 8006966:	b007      	add	sp, #28
 8006968:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800696c:	080287aa 	.word	0x080287aa

08006970 <_ZN11Screen4View15rotateTetrominoEv>:
{
 8006970:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    if (currentShape == 3) return;
 8006974:	f500 5400 	add.w	r4, r0, #8192	@ 0x2000
{
 8006978:	b089      	sub	sp, #36	@ 0x24
    if (currentShape == 3) return;
 800697a:	f8d4 7d28 	ldr.w	r7, [r4, #3368]	@ 0xd28
 800697e:	2f03      	cmp	r7, #3
{
 8006980:	4606      	mov	r6, r0
    if (currentShape == 3) return;
 8006982:	d066      	beq.n	8006a52 <_ZN11Screen4View15rotateTetrominoEv+0xe2>
    uint8_t rotated[4][4] = {0};
 8006984:	ad04      	add	r5, sp, #16
 8006986:	2210      	movs	r2, #16
 8006988:	2100      	movs	r1, #0
 800698a:	4628      	mov	r0, r5
 800698c:	f01f f911 	bl	8025bb2 <memset>
    memcpy(temp, currentTetromino, sizeof(temp));
 8006990:	46ec      	mov	ip, sp
 8006992:	f504 6251 	add.w	r2, r4, #3344	@ 0xd10
 8006996:	f504 6852 	add.w	r8, r4, #3360	@ 0xd20
 800699a:	4663      	mov	r3, ip
 800699c:	6810      	ldr	r0, [r2, #0]
 800699e:	6851      	ldr	r1, [r2, #4]
 80069a0:	46e6      	mov	lr, ip
 80069a2:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80069a6:	3208      	adds	r2, #8
 80069a8:	4542      	cmp	r2, r8
 80069aa:	46f4      	mov	ip, lr
 80069ac:	d1f6      	bne.n	800699c <_ZN11Screen4View15rotateTetrominoEv+0x2c>
        centerX = 2;
 80069ae:	2f00      	cmp	r7, #0
 80069b0:	bf14      	ite	ne
 80069b2:	f04f 0801 	movne.w	r8, #1
 80069b6:	f04f 0802 	moveq.w	r8, #2
    for(int y = 0; y < 4; y++) {
 80069ba:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 80069be:	2200      	movs	r2, #0
        for(int x = 0; x < 4; x++) {
 80069c0:	4628      	mov	r0, r5
 80069c2:	eba5 0c02 	sub.w	ip, r5, r2
 80069c6:	ebaa 0902 	sub.w	r9, sl, r2
        centerX = 1;
 80069ca:	4619      	mov	r1, r3
        for(int x = 0; x < 4; x++) {
 80069cc:	f04f 0e00 	mov.w	lr, #0
            if (currentShape == 0) { // Xử lý đặc biệt cho hình I
 80069d0:	2f00      	cmp	r7, #0
 80069d2:	d141      	bne.n	8006a58 <_ZN11Screen4View15rotateTetrominoEv+0xe8>
                rotated[x][3-y] = temp[y][x];
 80069d4:	f891 b000 	ldrb.w	fp, [r1]
 80069d8:	f88c b003 	strb.w	fp, [ip, #3]
        for(int x = 0; x < 4; x++) {
 80069dc:	f10e 0e01 	add.w	lr, lr, #1
 80069e0:	f1be 0f04 	cmp.w	lr, #4
 80069e4:	f101 0101 	add.w	r1, r1, #1
 80069e8:	f10c 0c04 	add.w	ip, ip, #4
 80069ec:	d1f0      	bne.n	80069d0 <_ZN11Screen4View15rotateTetrominoEv+0x60>
    for(int y = 0; y < 4; y++) {
 80069ee:	3201      	adds	r2, #1
 80069f0:	2a04      	cmp	r2, #4
 80069f2:	f103 0304 	add.w	r3, r3, #4
 80069f6:	d1e3      	bne.n	80069c0 <_ZN11Screen4View15rotateTetrominoEv+0x50>
    for(int y = 0; y < 4 && canRotate; y++) {
 80069f8:	2100      	movs	r1, #0
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 80069fa:	f04f 0e0f 	mov.w	lr, #15
                   board[boardY][boardX]) {
 80069fe:	f04f 080a 	mov.w	r8, #10
    for(int y = 0; y < 4; y++) {
 8006a02:	4684      	mov	ip, r0
        for(int x = 0; x < 4; x++) {
 8006a04:	2200      	movs	r2, #0
            if(rotated[y][x]) {
 8006a06:	f81c 3b01 	ldrb.w	r3, [ip], #1
 8006a0a:	b1c3      	cbz	r3, 8006a3e <_ZN11Screen4View15rotateTetrominoEv+0xce>
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8006a0c:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8006a10:	f1a3 0914 	sub.w	r9, r3, #20
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8006a14:	f8d4 3d24 	ldr.w	r3, [r4, #3364]	@ 0xd24
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8006a18:	fb99 f9fe 	sdiv	r9, r9, lr
 8006a1c:	4491      	add	r9, r2
                if(boardX < 0 || boardX >= BOARD_WIDTH || 
 8006a1e:	f1b9 0f09 	cmp.w	r9, #9
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8006a22:	f1a3 030a 	sub.w	r3, r3, #10
 8006a26:	fb93 f3fe 	sdiv	r3, r3, lr
 8006a2a:	440b      	add	r3, r1
                if(boardX < 0 || boardX >= BOARD_WIDTH || 
 8006a2c:	d81c      	bhi.n	8006a68 <_ZN11Screen4View15rotateTetrominoEv+0xf8>
 8006a2e:	2b13      	cmp	r3, #19
 8006a30:	d81a      	bhi.n	8006a68 <_ZN11Screen4View15rotateTetrominoEv+0xf8>
                   board[boardY][boardX]) {
 8006a32:	fb08 6303 	mla	r3, r8, r3, r6
 8006a36:	444b      	add	r3, r9
                   boardY < 0 || boardY >= BOARD_HEIGHT ||
 8006a38:	f893 3468 	ldrb.w	r3, [r3, #1128]	@ 0x468
 8006a3c:	b9a3      	cbnz	r3, 8006a68 <_ZN11Screen4View15rotateTetrominoEv+0xf8>
        for(int x = 0; x < 4; x++) {
 8006a3e:	3201      	adds	r2, #1
 8006a40:	2a04      	cmp	r2, #4
 8006a42:	d1e0      	bne.n	8006a06 <_ZN11Screen4View15rotateTetrominoEv+0x96>
 8006a44:	2301      	movs	r3, #1
    for(int y = 0; y < 4 && canRotate; y++) {
 8006a46:	3101      	adds	r1, #1
 8006a48:	2904      	cmp	r1, #4
 8006a4a:	d00f      	beq.n	8006a6c <_ZN11Screen4View15rotateTetrominoEv+0xfc>
 8006a4c:	3004      	adds	r0, #4
 8006a4e:	2b00      	cmp	r3, #0
 8006a50:	d1d7      	bne.n	8006a02 <_ZN11Screen4View15rotateTetrominoEv+0x92>
}
 8006a52:	b009      	add	sp, #36	@ 0x24
 8006a54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                if(newX >= 0 && newX < 4 && newY >= 0 && newY < 4) {
 8006a58:	f1b9 0f03 	cmp.w	r9, #3
                    rotated[newY][newX] = temp[y][x];
 8006a5c:	bf9c      	itt	ls
 8006a5e:	f891 b000 	ldrbls.w	fp, [r1]
 8006a62:	f80c b018 	strbls.w	fp, [ip, r8, lsl #1]
 8006a66:	e7b9      	b.n	80069dc <_ZN11Screen4View15rotateTetrominoEv+0x6c>
                    canRotate = false;
 8006a68:	2300      	movs	r3, #0
 8006a6a:	e7ec      	b.n	8006a46 <_ZN11Screen4View15rotateTetrominoEv+0xd6>
    if(canRotate) {
 8006a6c:	2b00      	cmp	r3, #0
 8006a6e:	d0f0      	beq.n	8006a52 <_ZN11Screen4View15rotateTetrominoEv+0xe2>
        memcpy(currentTetromino, rotated, sizeof(currentTetromino));
 8006a70:	f504 6251 	add.w	r2, r4, #3344	@ 0xd10
 8006a74:	f10d 0c20 	add.w	ip, sp, #32
 8006a78:	462b      	mov	r3, r5
 8006a7a:	cb03      	ldmia	r3!, {r0, r1}
 8006a7c:	4563      	cmp	r3, ip
 8006a7e:	6010      	str	r0, [r2, #0]
 8006a80:	6051      	str	r1, [r2, #4]
 8006a82:	461d      	mov	r5, r3
 8006a84:	f102 0208 	add.w	r2, r2, #8
 8006a88:	d1f6      	bne.n	8006a78 <_ZN11Screen4View15rotateTetrominoEv+0x108>
        drawTetromino(currentShape, currentX, currentY);
 8006a8a:	4630      	mov	r0, r6
 8006a8c:	f8d4 3d24 	ldr.w	r3, [r4, #3364]	@ 0xd24
 8006a90:	f8d4 2d20 	ldr.w	r2, [r4, #3360]	@ 0xd20
 8006a94:	4639      	mov	r1, r7
 8006a96:	f7ff ff07 	bl	80068a8 <_ZN11Screen4View13drawTetrominoEiii>
        container.invalidate();
 8006a9a:	1d30      	adds	r0, r6, #4
}
 8006a9c:	b009      	add	sp, #36	@ 0x24
 8006a9e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006aa2:	f00c bb23 	b.w	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
	...

08006aa8 <_ZN11Screen4View17drawNextTetrominoEv>:
{
 8006aa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    switch(nextShape) {
 8006aac:	f500 5b00 	add.w	fp, r0, #8192	@ 0x2000
{
 8006ab0:	b085      	sub	sp, #20
    switch(nextShape) {
 8006ab2:	f8db 2d2c 	ldr.w	r2, [fp, #3372]	@ 0xd2c
{
 8006ab6:	4605      	mov	r5, r0
    switch(nextShape) {
 8006ab8:	2a00      	cmp	r2, #0
 8006aba:	d057      	beq.n	8006b6c <_ZN11Screen4View17drawNextTetrominoEv+0xc4>
            NEXT_START_Y = 123;
 8006abc:	2a03      	cmp	r2, #3
 8006abe:	f04f 0a7b 	mov.w	sl, #123	@ 0x7b
 8006ac2:	bf0c      	ite	eq
 8006ac4:	f04f 09c3 	moveq.w	r9, #195	@ 0xc3
 8006ac8:	f04f 09c0 	movne.w	r9, #192	@ 0xc0
    for(int y = 0; y < 4; y++) {
 8006acc:	f505 5829 	add.w	r8, r5, #10816	@ 0x2a40
        container.remove(d);
 8006ad0:	1d2b      	adds	r3, r5, #4
        for(int x = 0; x < 4; x++) {
 8006ad2:	2400      	movs	r4, #0
 8006ad4:	f108 0810 	add.w	r8, r8, #16
 8006ad8:	9301      	str	r3, [sp, #4]
 8006ada:	eb08 0704 	add.w	r7, r8, r4
 8006ade:	2600      	movs	r6, #0
 8006ae0:	4639      	mov	r1, r7
 8006ae2:	9801      	ldr	r0, [sp, #4]
 8006ae4:	3601      	adds	r6, #1
 8006ae6:	f005 fc9c 	bl	800c422 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8006aea:	2e04      	cmp	r6, #4
 8006aec:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 8006af0:	d1f6      	bne.n	8006ae0 <_ZN11Screen4View17drawNextTetrominoEv+0x38>
    for(int y = 0; y < 4; y++) {
 8006af2:	34b0      	adds	r4, #176	@ 0xb0
 8006af4:	f5b4 7f30 	cmp.w	r4, #704	@ 0x2c0
 8006af8:	d1ef      	bne.n	8006ada <_ZN11Screen4View17drawNextTetrominoEv+0x32>
    for(int y = 0; y < 4; y++) {
 8006afa:	2400      	movs	r4, #0
        for(int x = 0; x < 4; x++) {
 8006afc:	f642 2750 	movw	r7, #10832	@ 0x2a50
 8006b00:	23b0      	movs	r3, #176	@ 0xb0
 8006b02:	fb03 7704 	mla	r7, r3, r4, r7
 8006b06:	2600      	movs	r6, #0
            if(TETROMINOS[nextShape][y][x] == 1) {
 8006b08:	f8db 2d2c 	ldr.w	r2, [fp, #3372]	@ 0xd2c
 8006b0c:	4b1a      	ldr	r3, [pc, #104]	@ (8006b78 <_ZN11Screen4View17drawNextTetrominoEv+0xd0>)
 8006b0e:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8006b12:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 8006b16:	5d92      	ldrb	r2, [r2, r6]
 8006b18:	2a01      	cmp	r2, #1
 8006b1a:	d11c      	bne.n	8006b56 <_ZN11Screen4View17drawNextTetrominoEv+0xae>
                nextBlocks[y][x].setXY(
 8006b1c:	eb04 02c4 	add.w	r2, r4, r4, lsl #3
 8006b20:	eb06 01c6 	add.w	r1, r6, r6, lsl #3
 8006b24:	eb05 0807 	add.w	r8, r5, r7
 8006b28:	4452      	add	r2, sl
 8006b2a:	4449      	add	r1, r9
 8006b2c:	b212      	sxth	r2, r2
 8006b2e:	b209      	sxth	r1, r1
 8006b30:	4640      	mov	r0, r8
 8006b32:	f7fc fc36 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
                nextBlocks[y][x].setBitmap(Bitmap(TETROMINO_NEXT_IMAGES[nextShape]));
 8006b36:	f8db 1d2c 	ldr.w	r1, [fp, #3372]	@ 0xd2c
 8006b3a:	4b10      	ldr	r3, [pc, #64]	@ (8006b7c <_ZN11Screen4View17drawNextTetrominoEv+0xd4>)
 8006b3c:	59ea      	ldr	r2, [r5, r7]
 8006b3e:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8006b42:	f8ad 100c 	strh.w	r1, [sp, #12]
 8006b46:	4640      	mov	r0, r8
 8006b48:	a903      	add	r1, sp, #12
 8006b4a:	6e12      	ldr	r2, [r2, #96]	@ 0x60
 8006b4c:	4790      	blx	r2
        container.add(d);
 8006b4e:	9801      	ldr	r0, [sp, #4]
 8006b50:	4641      	mov	r1, r8
 8006b52:	f005 fc25 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        for(int x = 0; x < 4; x++) {
 8006b56:	3601      	adds	r6, #1
 8006b58:	2e04      	cmp	r6, #4
 8006b5a:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 8006b5e:	d1d3      	bne.n	8006b08 <_ZN11Screen4View17drawNextTetrominoEv+0x60>
    for(int y = 0; y < 4; y++) {
 8006b60:	3401      	adds	r4, #1
 8006b62:	2c04      	cmp	r4, #4
 8006b64:	d1ca      	bne.n	8006afc <_ZN11Screen4View17drawNextTetrominoEv+0x54>
}
 8006b66:	b005      	add	sp, #20
 8006b68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            NEXT_START_Y = 127;
 8006b6c:	f04f 0a7f 	mov.w	sl, #127	@ 0x7f
            NEXT_START_X = 187;
 8006b70:	f04f 09bb 	mov.w	r9, #187	@ 0xbb
 8006b74:	e7aa      	b.n	8006acc <_ZN11Screen4View17drawNextTetrominoEv+0x24>
 8006b76:	bf00      	nop
 8006b78:	080287b8 	.word	0x080287b8
 8006b7c:	0802879c 	.word	0x0802879c

08006b80 <_ZN11Screen4ViewC1Ev>:
Screen4View::Screen4View() : 
 8006b80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006b84:	4604      	mov	r4, r0
 8006b86:	b08d      	sub	sp, #52	@ 0x34
    randomSeed(1324)
 8006b88:	f7fd fb24 	bl	80041d4 <_ZN15Screen4ViewBaseC1Ev>
 8006b8c:	4b90      	ldr	r3, [pc, #576]	@ (8006dd0 <_ZN11Screen4ViewC1Ev+0x250>)
 8006b8e:	6023      	str	r3, [r4, #0]
 8006b90:	f504 65a6 	add.w	r5, r4, #1328	@ 0x530
 8006b94:	f504 66fe 	add.w	r6, r4, #2032	@ 0x7f0
 8006b98:	f64f 78ff 	movw	r8, #65535	@ 0xffff
 8006b9c:	f105 07b0 	add.w	r7, r5, #176	@ 0xb0
 8006ba0:	4628      	mov	r0, r5
 8006ba2:	a90a      	add	r1, sp, #40	@ 0x28
 8006ba4:	352c      	adds	r5, #44	@ 0x2c
 8006ba6:	f8ad 8028 	strh.w	r8, [sp, #40]	@ 0x28
 8006baa:	f7fc fc41 	bl	8003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8006bae:	42bd      	cmp	r5, r7
 8006bb0:	d1f6      	bne.n	8006ba0 <_ZN11Screen4ViewC1Ev+0x20>
 8006bb2:	42b5      	cmp	r5, r6
 8006bb4:	d1f2      	bne.n	8006b9c <_ZN11Screen4ViewC1Ev+0x1c>
 8006bb6:	f504 5529 	add.w	r5, r4, #10816	@ 0x2a40
 8006bba:	3510      	adds	r5, #16
 8006bbc:	f64f 78ff 	movw	r8, #65535	@ 0xffff
 8006bc0:	f506 77dc 	add.w	r7, r6, #440	@ 0x1b8
 8006bc4:	4630      	mov	r0, r6
 8006bc6:	a90a      	add	r1, sp, #40	@ 0x28
 8006bc8:	362c      	adds	r6, #44	@ 0x2c
 8006bca:	f8ad 8028 	strh.w	r8, [sp, #40]	@ 0x28
 8006bce:	f7fc fc2f 	bl	8003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8006bd2:	42be      	cmp	r6, r7
 8006bd4:	d1f6      	bne.n	8006bc4 <_ZN11Screen4ViewC1Ev+0x44>
 8006bd6:	42ae      	cmp	r6, r5
 8006bd8:	d1f2      	bne.n	8006bc0 <_ZN11Screen4ViewC1Ev+0x40>
 8006bda:	f504 5634 	add.w	r6, r4, #11520	@ 0x2d00
 8006bde:	3610      	adds	r6, #16
 8006be0:	f64f 78ff 	movw	r8, #65535	@ 0xffff
 8006be4:	f105 07b0 	add.w	r7, r5, #176	@ 0xb0
 8006be8:	4628      	mov	r0, r5
 8006bea:	a90a      	add	r1, sp, #40	@ 0x28
 8006bec:	352c      	adds	r5, #44	@ 0x2c
 8006bee:	f8ad 8028 	strh.w	r8, [sp, #40]	@ 0x28
 8006bf2:	f7fc fc1d 	bl	8003430 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8006bf6:	42bd      	cmp	r5, r7
 8006bf8:	d1f6      	bne.n	8006be8 <_ZN11Screen4ViewC1Ev+0x68>
 8006bfa:	42b5      	cmp	r5, r6
 8006bfc:	d1f2      	bne.n	8006be4 <_ZN11Screen4ViewC1Ev+0x64>
    currentX(80),
 8006bfe:	f504 5500 	add.w	r5, r4, #8192	@ 0x2000
 8006c02:	2350      	movs	r3, #80	@ 0x50
 8006c04:	f8c5 3d20 	str.w	r3, [r5, #3360]	@ 0xd20
    currentY(10),
 8006c08:	230a      	movs	r3, #10
    currentShape(0),
 8006c0a:	2600      	movs	r6, #0
    currentY(10),
 8006c0c:	f8c5 3d24 	str.w	r3, [r5, #3364]	@ 0xd24
    randomSeed(1324)
 8006c10:	f240 532c 	movw	r3, #1324	@ 0x52c
 8006c14:	f8c5 3d4c 	str.w	r3, [r5, #3404]	@ 0xd4c
    initializeBag();
 8006c18:	4620      	mov	r0, r4
    currentShape(0),
 8006c1a:	f8c5 6d28 	str.w	r6, [r5, #3368]	@ 0xd28
    tickCount(0),
 8006c1e:	f8c5 6d30 	str.w	r6, [r5, #3376]	@ 0xd30
    isGameOver(false),
 8006c22:	f8a5 6d3c 	strh.w	r6, [r5, #3388]	@ 0xd3c
    initializeBag();
 8006c26:	f7ff fe0f 	bl	8006848 <_ZN11Screen4View13initializeBagEv>
    nextShape = getNextShape();
 8006c2a:	4620      	mov	r0, r4
 8006c2c:	f7ff fe22 	bl	8006874 <_ZN11Screen4View12getNextShapeEv>
    memset(board, 0, sizeof(board));
 8006c30:	22c8      	movs	r2, #200	@ 0xc8
    nextShape = getNextShape();
 8006c32:	f8c5 0d2c 	str.w	r0, [r5, #3372]	@ 0xd2c
    memset(board, 0, sizeof(board));
 8006c36:	4631      	mov	r1, r6
 8006c38:	f504 608d 	add.w	r0, r4, #1128	@ 0x468
 8006c3c:	f01e ffb9 	bl	8025bb2 <memset>
    memcpy(currentTetromino, TETROMINOS[currentShape], sizeof(currentTetromino));
 8006c40:	4b64      	ldr	r3, [pc, #400]	@ (8006dd4 <_ZN11Screen4ViewC1Ev+0x254>)
 8006c42:	f505 6251 	add.w	r2, r5, #3344	@ 0xd10
 8006c46:	f103 0110 	add.w	r1, r3, #16
 8006c4a:	f853 0b04 	ldr.w	r0, [r3], #4
 8006c4e:	f842 0b04 	str.w	r0, [r2], #4
 8006c52:	428b      	cmp	r3, r1
 8006c54:	d1f9      	bne.n	8006c4a <_ZN11Screen4ViewC1Ev+0xca>
    drawTetromino(currentShape, currentX, currentY);
 8006c56:	230a      	movs	r3, #10
 8006c58:	2250      	movs	r2, #80	@ 0x50
 8006c5a:	2100      	movs	r1, #0
 8006c5c:	4620      	mov	r0, r4
 8006c5e:	f7ff fe23 	bl	80068a8 <_ZN11Screen4View13drawTetrominoEiii>
    drawNextTetromino();
 8006c62:	4620      	mov	r0, r4
 8006c64:	f7ff ff20 	bl	8006aa8 <_ZN11Screen4View17drawNextTetrominoEv>
    for(int i = 0; i < NUM_FIXED_BLOCKS; i++) {
 8006c68:	f8df a180 	ldr.w	sl, [pc, #384]	@ 8006dec <_ZN11Screen4ViewC1Ev+0x26c>
    drawNextTetromino();
 8006c6c:	f04f 0908 	mov.w	r9, #8
        int blockY = INIT_BLOCKS[i][1];
 8006c70:	e9da 0600 	ldrd	r0, r6, [sl]
        int shape = INIT_BLOCKS[i][2];
 8006c74:	f8da 3008 	ldr.w	r3, [sl, #8]
 8006c78:	9303      	str	r3, [sp, #12]
        for(int y = 0; y < 4; y++) {
 8006c7a:	f44f 73dc 	mov.w	r3, #440	@ 0x1b8
                    int boardY = (blockY - 10) / BLOCK_SIZE + y;
 8006c7e:	210f      	movs	r1, #15
 8006c80:	f1a6 020a 	sub.w	r2, r6, #10
 8006c84:	fb92 f2f1 	sdiv	r2, r2, r1
 8006c88:	4353      	muls	r3, r2
 8006c8a:	9f03      	ldr	r7, [sp, #12]
 8006c8c:	9300      	str	r3, [sp, #0]
 8006c8e:	4b52      	ldr	r3, [pc, #328]	@ (8006dd8 <_ZN11Screen4ViewC1Ev+0x258>)
 8006c90:	eb03 1307 	add.w	r3, r3, r7, lsl #4
 8006c94:	9301      	str	r3, [sp, #4]
 8006c96:	270a      	movs	r7, #10
                    int boardX = (blockX - 20) / BLOCK_SIZE + x;
 8006c98:	f1a0 0314 	sub.w	r3, r0, #20
 8006c9c:	fb93 f3f1 	sdiv	r3, r3, r1
 8006ca0:	f503 618d 	add.w	r1, r3, #1128	@ 0x468
 8006ca4:	fb07 1202 	mla	r2, r7, r2, r1
 8006ca8:	18a2      	adds	r2, r4, r2
 8006caa:	b2b6      	uxth	r6, r6
 8006cac:	9202      	str	r2, [sp, #8]
 8006cae:	f106 023c 	add.w	r2, r6, #60	@ 0x3c
 8006cb2:	b292      	uxth	r2, r2
 8006cb4:	9207      	str	r2, [sp, #28]
 8006cb6:	222c      	movs	r2, #44	@ 0x2c
 8006cb8:	fb02 4303 	mla	r3, r2, r3, r4
 8006cbc:	9308      	str	r3, [sp, #32]
 8006cbe:	b283      	uxth	r3, r0
 8006cc0:	9304      	str	r3, [sp, #16]
 8006cc2:	333c      	adds	r3, #60	@ 0x3c
 8006cc4:	b29b      	uxth	r3, r3
 8006cc6:	9306      	str	r3, [sp, #24]
                    staticBlocks[boardY][boardX].setXY(
 8006cc8:	b233      	sxth	r3, r6
 8006cca:	9305      	str	r3, [sp, #20]
 8006ccc:	9b08      	ldr	r3, [sp, #32]
 8006cce:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8006cd2:	f503 67fe 	add.w	r7, r3, #2032	@ 0x7f0
 8006cd6:	9b00      	ldr	r3, [sp, #0]
 8006cd8:	441f      	add	r7, r3
 8006cda:	e9dd 3b01 	ldrd	r3, fp, [sp, #4]
                if(TETROMINOS_INIT[shape][y][x]) {
 8006cde:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006ce2:	b1e2      	cbz	r2, 8006d1e <_ZN11Screen4ViewC1Ev+0x19e>
 8006ce4:	9309      	str	r3, [sp, #36]	@ 0x24
                    board[boardY][boardX] = true;
 8006ce6:	f04f 0301 	mov.w	r3, #1
                    staticBlocks[boardY][boardX].setXY(
 8006cea:	9a05      	ldr	r2, [sp, #20]
                    board[boardY][boardX] = true;
 8006cec:	f88b 3000 	strb.w	r3, [fp]
                    staticBlocks[boardY][boardX].setXY(
 8006cf0:	fa0f f188 	sxth.w	r1, r8
 8006cf4:	4638      	mov	r0, r7
 8006cf6:	f7fc fb54 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
                    staticBlocks[boardY][boardX].setBitmap(Bitmap(TETROMINO_IMAGES[INIT_BLOCKS_TYPE[shape]]));
 8006cfa:	4b38      	ldr	r3, [pc, #224]	@ (8006ddc <_ZN11Screen4ViewC1Ev+0x25c>)
 8006cfc:	9903      	ldr	r1, [sp, #12]
 8006cfe:	683a      	ldr	r2, [r7, #0]
 8006d00:	5c59      	ldrb	r1, [r3, r1]
 8006d02:	4b37      	ldr	r3, [pc, #220]	@ (8006de0 <_ZN11Screen4ViewC1Ev+0x260>)
 8006d04:	6e12      	ldr	r2, [r2, #96]	@ 0x60
 8006d06:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8006d0a:	f8ad 1028 	strh.w	r1, [sp, #40]	@ 0x28
 8006d0e:	4638      	mov	r0, r7
 8006d10:	a90a      	add	r1, sp, #40	@ 0x28
 8006d12:	4790      	blx	r2
 8006d14:	4639      	mov	r1, r7
 8006d16:	1d20      	adds	r0, r4, #4
 8006d18:	f005 fb42 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006d1c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
            for(int x = 0; x < 4; x++) {
 8006d1e:	9a06      	ldr	r2, [sp, #24]
 8006d20:	f108 080f 	add.w	r8, r8, #15
 8006d24:	fa1f f888 	uxth.w	r8, r8
 8006d28:	4590      	cmp	r8, r2
 8006d2a:	f10b 0b01 	add.w	fp, fp, #1
 8006d2e:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 8006d32:	d1d4      	bne.n	8006cde <_ZN11Screen4ViewC1Ev+0x15e>
        for(int y = 0; y < 4; y++) {
 8006d34:	9b00      	ldr	r3, [sp, #0]
 8006d36:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 8006d3a:	9300      	str	r3, [sp, #0]
 8006d3c:	9b01      	ldr	r3, [sp, #4]
 8006d3e:	3304      	adds	r3, #4
 8006d40:	9301      	str	r3, [sp, #4]
 8006d42:	9b02      	ldr	r3, [sp, #8]
 8006d44:	330a      	adds	r3, #10
 8006d46:	360f      	adds	r6, #15
 8006d48:	9302      	str	r3, [sp, #8]
 8006d4a:	9b07      	ldr	r3, [sp, #28]
 8006d4c:	b2b6      	uxth	r6, r6
 8006d4e:	429e      	cmp	r6, r3
 8006d50:	d1ba      	bne.n	8006cc8 <_ZN11Screen4ViewC1Ev+0x148>
    for(int i = 0; i < NUM_FIXED_BLOCKS; i++) {
 8006d52:	f1b9 0901 	subs.w	r9, r9, #1
 8006d56:	f10a 0a0c 	add.w	sl, sl, #12
 8006d5a:	d189      	bne.n	8006c70 <_ZN11Screen4ViewC1Ev+0xf0>
    Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 8006d5c:	f504 5635 	add.w	r6, r4, #11584	@ 0x2d40
 8006d60:	3610      	adds	r6, #16
 8006d62:	4a20      	ldr	r2, [pc, #128]	@ (8006de4 <_ZN11Screen4ViewC1Ev+0x264>)
    score = 0;
 8006d64:	f8c5 9d34 	str.w	r9, [r5, #3380]	@ 0xd34
    Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 8006d68:	464b      	mov	r3, r9
    textArea1.setTypedText(touchgfx::TypedText(T_TOADOX));
 8006d6a:	f504 7788 	add.w	r7, r4, #272	@ 0x110
    Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 8006d6e:	2114      	movs	r1, #20
 8006d70:	4630      	mov	r0, r6
 8006d72:	f00e fca1 	bl	80156b8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8006d76:	2310      	movs	r3, #16
    textArea1.setTypedText(touchgfx::TypedText(T_TOADOX));
 8006d78:	a90a      	add	r1, sp, #40	@ 0x28
 8006d7a:	f8c4 6158 	str.w	r6, [r4, #344]	@ 0x158
 8006d7e:	4638      	mov	r0, r7
 8006d80:	4e19      	ldr	r6, [pc, #100]	@ (8006de8 <_ZN11Screen4ViewC1Ev+0x268>)
 8006d82:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8006d86:	960a      	str	r6, [sp, #40]	@ 0x28
 8006d88:	f008 faa6 	bl	800f2d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea1.invalidate();
 8006d8c:	4638      	mov	r0, r7
 8006d8e:	f00c f9ad 	bl	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
    targetScore = 300;
 8006d92:	f44f 7396 	mov.w	r3, #300	@ 0x12c
 8006d96:	f8c5 3d38 	str.w	r3, [r5, #3384]	@ 0xd38
    Unicode::snprintf(textArea3Buffer, sizeof(textArea3Buffer), "%d", targetScore);
 8006d9a:	f504 5535 	add.w	r5, r4, #11584	@ 0x2d40
 8006d9e:	3538      	adds	r5, #56	@ 0x38
 8006da0:	4a10      	ldr	r2, [pc, #64]	@ (8006de4 <_ZN11Screen4ViewC1Ev+0x264>)
 8006da2:	2114      	movs	r1, #20
 8006da4:	4628      	mov	r0, r5
 8006da6:	f00e fc87 	bl	80156b8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8006daa:	f8c4 51d0 	str.w	r5, [r4, #464]	@ 0x1d0
    textArea3.setTypedText(touchgfx::TypedText(T_TARGET4));
 8006dae:	f504 75c4 	add.w	r5, r4, #392	@ 0x188
 8006db2:	2301      	movs	r3, #1
 8006db4:	a90a      	add	r1, sp, #40	@ 0x28
 8006db6:	4628      	mov	r0, r5
 8006db8:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8006dbc:	960a      	str	r6, [sp, #40]	@ 0x28
 8006dbe:	f008 fa8b 	bl	800f2d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea3.invalidate();
 8006dc2:	4628      	mov	r0, r5
 8006dc4:	f00c f992 	bl	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8006dc8:	4620      	mov	r0, r4
 8006dca:	b00d      	add	sp, #52	@ 0x34
 8006dcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006dd0:	080285cc 	.word	0x080285cc
 8006dd4:	080287b8 	.word	0x080287b8
 8006dd8:	0802866c 	.word	0x0802866c
 8006ddc:	080285f8 	.word	0x080285f8
 8006de0:	080287aa 	.word	0x080287aa
 8006de4:	0802772d 	.word	0x0802772d
 8006de8:	08027d58 	.word	0x08027d58
 8006dec:	0802860c 	.word	0x0802860c

08006df0 <_ZN11Screen4View11clearScreenEv>:
{
 8006df0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006df4:	4604      	mov	r4, r0
        for(int x = 0; x < 4; x++) {
 8006df6:	2500      	movs	r5, #0
 8006df8:	f500 69a6 	add.w	r9, r0, #1328	@ 0x530
        container.remove(d);
 8006dfc:	f100 0804 	add.w	r8, r0, #4
 8006e00:	eb09 0705 	add.w	r7, r9, r5
 8006e04:	2600      	movs	r6, #0
 8006e06:	4639      	mov	r1, r7
 8006e08:	4640      	mov	r0, r8
 8006e0a:	3601      	adds	r6, #1
 8006e0c:	f005 fb09 	bl	800c422 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8006e10:	2e04      	cmp	r6, #4
 8006e12:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 8006e16:	d1f6      	bne.n	8006e06 <_ZN11Screen4View11clearScreenEv+0x16>
    for(int y = 0; y < 4; y++) {
 8006e18:	35b0      	adds	r5, #176	@ 0xb0
 8006e1a:	f5b5 7f30 	cmp.w	r5, #704	@ 0x2c0
 8006e1e:	d1ef      	bne.n	8006e00 <_ZN11Screen4View11clearScreenEv+0x10>
 8006e20:	f06f 0a2a 	mvn.w	sl, #42	@ 0x2a
 8006e24:	f204 4967 	addw	r9, r4, #1127	@ 0x467
 8006e28:	fb04 fa0a 	mul.w	sl, r4, sl
 8006e2c:	2700      	movs	r7, #0
                remove(staticBlocks[y][x]);
 8006e2e:	f04f 0b2c 	mov.w	fp, #44	@ 0x2c
        for(int x = 0; x < 4; x++) {
 8006e32:	464e      	mov	r6, r9
 8006e34:	250a      	movs	r5, #10
            if(board[y][x]) {
 8006e36:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 8006e3a:	b14a      	cbz	r2, 8006e50 <_ZN11Screen4View11clearScreenEv+0x60>
                remove(staticBlocks[y][x]);
 8006e3c:	fb0b a106 	mla	r1, fp, r6, sl
 8006e40:	f5a1 4139 	sub.w	r1, r1, #47360	@ 0xb900
 8006e44:	39f0      	subs	r1, #240	@ 0xf0
 8006e46:	4640      	mov	r0, r8
 8006e48:	f005 faeb 	bl	800c422 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
                board[y][x] = false;
 8006e4c:	2300      	movs	r3, #0
 8006e4e:	7033      	strb	r3, [r6, #0]
        for(int x = 0; x < BOARD_WIDTH; x++) {
 8006e50:	3d01      	subs	r5, #1
 8006e52:	d1f0      	bne.n	8006e36 <_ZN11Screen4View11clearScreenEv+0x46>
    for(int y = 0; y < BOARD_HEIGHT; y++) {
 8006e54:	f507 77dc 	add.w	r7, r7, #440	@ 0x1b8
 8006e58:	f242 2260 	movw	r2, #8800	@ 0x2260
 8006e5c:	4297      	cmp	r7, r2
 8006e5e:	f109 090a 	add.w	r9, r9, #10
 8006e62:	d1e6      	bne.n	8006e32 <_ZN11Screen4View11clearScreenEv+0x42>
 8006e64:	f504 5429 	add.w	r4, r4, #10816	@ 0x2a40
 8006e68:	3410      	adds	r4, #16
        for(int x = 0; x < 4; x++) {
 8006e6a:	1967      	adds	r7, r4, r5
 8006e6c:	2600      	movs	r6, #0
 8006e6e:	4639      	mov	r1, r7
 8006e70:	4640      	mov	r0, r8
 8006e72:	3601      	adds	r6, #1
 8006e74:	f005 fad5 	bl	800c422 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8006e78:	2e04      	cmp	r6, #4
 8006e7a:	f107 072c 	add.w	r7, r7, #44	@ 0x2c
 8006e7e:	d1f6      	bne.n	8006e6e <_ZN11Screen4View11clearScreenEv+0x7e>
    for(int y = 0; y < 4; y++) {
 8006e80:	35b0      	adds	r5, #176	@ 0xb0
 8006e82:	f5b5 7f30 	cmp.w	r5, #704	@ 0x2c0
 8006e86:	d1f0      	bne.n	8006e6a <_ZN11Screen4View11clearScreenEv+0x7a>
}
 8006e88:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08006e8c <_ZN11Screen4View18createNewTetrominoEv>:
{
 8006e8c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    if (isGameOver || isWin) {
 8006e8e:	f500 5500 	add.w	r5, r0, #8192	@ 0x2000
{
 8006e92:	4604      	mov	r4, r0
    if (isGameOver || isWin) {
 8006e94:	f895 3d3c 	ldrb.w	r3, [r5, #3388]	@ 0xd3c
 8006e98:	2b00      	cmp	r3, #0
 8006e9a:	f040 8093 	bne.w	8006fc4 <_ZN11Screen4View18createNewTetrominoEv+0x138>
 8006e9e:	f895 3d3d 	ldrb.w	r3, [r5, #3389]	@ 0xd3d
 8006ea2:	2b00      	cmp	r3, #0
 8006ea4:	f040 808e 	bne.w	8006fc4 <_ZN11Screen4View18createNewTetrominoEv+0x138>
    currentY = 10;
 8006ea8:	230a      	movs	r3, #10
    currentShape = nextShape;
 8006eaa:	f8d5 6d2c 	ldr.w	r6, [r5, #3372]	@ 0xd2c
    currentY = 10;
 8006eae:	f8c5 3d24 	str.w	r3, [r5, #3364]	@ 0xd24
    currentX = 80;
 8006eb2:	2350      	movs	r3, #80	@ 0x50
 8006eb4:	f8c5 3d20 	str.w	r3, [r5, #3360]	@ 0xd20
    currentShape = nextShape;
 8006eb8:	f8c5 6d28 	str.w	r6, [r5, #3368]	@ 0xd28
    nextShape = getNextShape();
 8006ebc:	f7ff fcda 	bl	8006874 <_ZN11Screen4View12getNextShapeEv>
    memcpy(currentTetromino, TETROMINOS[currentShape], sizeof(currentTetromino));
 8006ec0:	4b41      	ldr	r3, [pc, #260]	@ (8006fc8 <_ZN11Screen4View18createNewTetrominoEv+0x13c>)
    nextShape = getNextShape();
 8006ec2:	f8c5 0d2c 	str.w	r0, [r5, #3372]	@ 0xd2c
    memcpy(currentTetromino, TETROMINOS[currentShape], sizeof(currentTetromino));
 8006ec6:	eb03 1306 	add.w	r3, r3, r6, lsl #4
 8006eca:	f504 5234 	add.w	r2, r4, #11520	@ 0x2d00
 8006ece:	3210      	adds	r2, #16
 8006ed0:	f103 0110 	add.w	r1, r3, #16
 8006ed4:	f853 0b04 	ldr.w	r0, [r3], #4
 8006ed8:	f842 0b04 	str.w	r0, [r2], #4
 8006edc:	428b      	cmp	r3, r1
 8006ede:	d1f9      	bne.n	8006ed4 <_ZN11Screen4View18createNewTetrominoEv+0x48>
    drawNextTetromino();
 8006ee0:	4620      	mov	r0, r4
 8006ee2:	f7ff fde1 	bl	8006aa8 <_ZN11Screen4View17drawNextTetrominoEv>
    for(int y = 0; y < 4 && canCreate; y++) {
 8006ee6:	f504 5134 	add.w	r1, r4, #11520	@ 0x2d00
 8006eea:	310f      	adds	r1, #15
 8006eec:	2600      	movs	r6, #0
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8006eee:	f04f 0c0f 	mov.w	ip, #15
{
 8006ef2:	460f      	mov	r7, r1
        for(int x = 0; x < 4; x++) {
 8006ef4:	2000      	movs	r0, #0
            if(currentTetromino[y][x]) { 
 8006ef6:	f817 3f01 	ldrb.w	r3, [r7, #1]!
 8006efa:	b1c3      	cbz	r3, 8006f2e <_ZN11Screen4View18createNewTetrominoEv+0xa2>
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8006efc:	f8d5 2d20 	ldr.w	r2, [r5, #3360]	@ 0xd20
 8006f00:	3a14      	subs	r2, #20
 8006f02:	fb92 f2fc 	sdiv	r2, r2, ip
 8006f06:	4402      	add	r2, r0
                if(boardX >= 0 && boardX < BOARD_WIDTH && 
 8006f08:	2a09      	cmp	r2, #9
 8006f0a:	d810      	bhi.n	8006f2e <_ZN11Screen4View18createNewTetrominoEv+0xa2>
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8006f0c:	f8d5 3d24 	ldr.w	r3, [r5, #3364]	@ 0xd24
 8006f10:	3b0a      	subs	r3, #10
 8006f12:	fb93 f3fc 	sdiv	r3, r3, ip
 8006f16:	4433      	add	r3, r6
                if(boardX >= 0 && boardX < BOARD_WIDTH && 
 8006f18:	2b13      	cmp	r3, #19
 8006f1a:	d808      	bhi.n	8006f2e <_ZN11Screen4View18createNewTetrominoEv+0xa2>
                   board[boardY][boardX]) {
 8006f1c:	f04f 0e0a 	mov.w	lr, #10
 8006f20:	fb0e 4303 	mla	r3, lr, r3, r4
 8006f24:	4413      	add	r3, r2
                   boardY >= 0 && boardY < BOARD_HEIGHT && 
 8006f26:	f893 3468 	ldrb.w	r3, [r3, #1128]	@ 0x468
 8006f2a:	2b00      	cmp	r3, #0
 8006f2c:	d13a      	bne.n	8006fa4 <_ZN11Screen4View18createNewTetrominoEv+0x118>
        for(int x = 0; x < 4; x++) {
 8006f2e:	3001      	adds	r0, #1
 8006f30:	2804      	cmp	r0, #4
 8006f32:	d1e0      	bne.n	8006ef6 <_ZN11Screen4View18createNewTetrominoEv+0x6a>
 8006f34:	2301      	movs	r3, #1
    for(int y = 0; y < 4 && canCreate; y++) {
 8006f36:	3601      	adds	r6, #1
 8006f38:	2e04      	cmp	r6, #4
 8006f3a:	d035      	beq.n	8006fa8 <_ZN11Screen4View18createNewTetrominoEv+0x11c>
 8006f3c:	3104      	adds	r1, #4
 8006f3e:	2b00      	cmp	r3, #0
 8006f40:	d1d7      	bne.n	8006ef2 <_ZN11Screen4View18createNewTetrominoEv+0x66>
        isGameOver = true;
 8006f42:	2601      	movs	r6, #1
 8006f44:	f885 6d3c 	strb.w	r6, [r5, #3388]	@ 0xd3c
        clearScreen();
 8006f48:	4620      	mov	r0, r4
        Unicode::snprintf(textArea2Buffer, sizeof(textArea2Buffer), "%d", score);
 8006f4a:	f504 5735 	add.w	r7, r4, #11584	@ 0x2d40
        clearScreen();
 8006f4e:	f7ff ff4f 	bl	8006df0 <_ZN11Screen4View11clearScreenEv>
        Unicode::snprintf(textArea2Buffer, sizeof(textArea2Buffer), "%d", score);
 8006f52:	3724      	adds	r7, #36	@ 0x24
        visible = vis;
 8006f54:	2300      	movs	r3, #0
 8006f56:	4a1d      	ldr	r2, [pc, #116]	@ (8006fcc <_ZN11Screen4View18createNewTetrominoEv+0x140>)
 8006f58:	f884 30bd 	strb.w	r3, [r4, #189]	@ 0xbd
 8006f5c:	f884 61f9 	strb.w	r6, [r4, #505]	@ 0x1f9
 8006f60:	f8d5 3d34 	ldr.w	r3, [r5, #3380]	@ 0xd34
 8006f64:	f884 6251 	strb.w	r6, [r4, #593]	@ 0x251
 8006f68:	f884 62c9 	strb.w	r6, [r4, #713]	@ 0x2c9
 8006f6c:	2114      	movs	r1, #20
 8006f6e:	4638      	mov	r0, r7
 8006f70:	f00e fba2 	bl	80156b8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        textArea2.setTypedText(touchgfx::TypedText(T_MAN3SCORE));
 8006f74:	f204 450c 	addw	r5, r4, #1036	@ 0x40c
 8006f78:	4b15      	ldr	r3, [pc, #84]	@ (8006fd0 <_ZN11Screen4View18createNewTetrominoEv+0x144>)
 8006f7a:	9300      	str	r3, [sp, #0]
 8006f7c:	4669      	mov	r1, sp
 8006f7e:	230a      	movs	r3, #10
 8006f80:	4628      	mov	r0, r5
 8006f82:	f884 6431 	strb.w	r6, [r4, #1073]	@ 0x431
 8006f86:	f8c4 7454 	str.w	r7, [r4, #1108]	@ 0x454
 8006f8a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8006f8e:	f008 f9a3 	bl	800f2d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        textArea2.invalidate();
 8006f92:	4628      	mov	r0, r5
 8006f94:	f00c f8aa 	bl	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
        container.invalidate();
 8006f98:	1d20      	adds	r0, r4, #4
}
 8006f9a:	b003      	add	sp, #12
 8006f9c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8006fa0:	f00c b8a4 	b.w	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
                    canCreate = false;
 8006fa4:	2300      	movs	r3, #0
 8006fa6:	e7c6      	b.n	8006f36 <_ZN11Screen4View18createNewTetrominoEv+0xaa>
    if (!canCreate) {
 8006fa8:	2b00      	cmp	r3, #0
 8006faa:	d0ca      	beq.n	8006f42 <_ZN11Screen4View18createNewTetrominoEv+0xb6>
        drawTetromino(currentShape, currentX, currentY);
 8006fac:	f8d5 3d24 	ldr.w	r3, [r5, #3364]	@ 0xd24
 8006fb0:	f8d5 2d20 	ldr.w	r2, [r5, #3360]	@ 0xd20
 8006fb4:	f8d5 1d28 	ldr.w	r1, [r5, #3368]	@ 0xd28
 8006fb8:	4620      	mov	r0, r4
}
 8006fba:	b003      	add	sp, #12
 8006fbc:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
        drawTetromino(currentShape, currentX, currentY);
 8006fc0:	f7ff bc72 	b.w	80068a8 <_ZN11Screen4View13drawTetrominoEiii>
}
 8006fc4:	b003      	add	sp, #12
 8006fc6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006fc8:	080287b8 	.word	0x080287b8
 8006fcc:	0802772d 	.word	0x0802772d
 8006fd0:	08027d58 	.word	0x08027d58

08006fd4 <_ZN11Screen4View18checkAndClearLinesEv>:
{
 8006fd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006fd8:	b09d      	sub	sp, #116	@ 0x74
 8006fda:	4604      	mov	r4, r0
    int fullLines[BOARD_HEIGHT] = {0};
 8006fdc:	2250      	movs	r2, #80	@ 0x50
 8006fde:	2100      	movs	r1, #0
 8006fe0:	a808      	add	r0, sp, #32
 8006fe2:	f01e fde6 	bl	8025bb2 <memset>
    int numFullLines = 0;
 8006fe6:	2500      	movs	r5, #0
 8006fe8:	f204 5225 	addw	r2, r4, #1317	@ 0x525
    for(int y = BOARD_HEIGHT - 1; y >= 0; y--) {
 8006fec:	2313      	movs	r3, #19
{
 8006fee:	4610      	mov	r0, r2
        for(int x = 0; x < BOARD_WIDTH; x++) {
 8006ff0:	2100      	movs	r1, #0
            if(!board[y][x]) {
 8006ff2:	f810 6f01 	ldrb.w	r6, [r0, #1]!
 8006ff6:	b146      	cbz	r6, 800700a <_ZN11Screen4View18checkAndClearLinesEv+0x36>
        for(int x = 0; x < BOARD_WIDTH; x++) {
 8006ff8:	3101      	adds	r1, #1
 8006ffa:	290a      	cmp	r1, #10
 8006ffc:	d1f9      	bne.n	8006ff2 <_ZN11Screen4View18checkAndClearLinesEv+0x1e>
            fullLines[numFullLines++] = y;
 8006ffe:	a91c      	add	r1, sp, #112	@ 0x70
 8007000:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8007004:	3501      	adds	r5, #1
 8007006:	f841 3c50 	str.w	r3, [r1, #-80]
    for(int y = BOARD_HEIGHT - 1; y >= 0; y--) {
 800700a:	3b01      	subs	r3, #1
 800700c:	1c59      	adds	r1, r3, #1
 800700e:	f1a2 020a 	sub.w	r2, r2, #10
 8007012:	d1ec      	bne.n	8006fee <_ZN11Screen4View18checkAndClearLinesEv+0x1a>
    if(numFullLines > 0) {
 8007014:	2d00      	cmp	r5, #0
 8007016:	dd50      	ble.n	80070ba <_ZN11Screen4View18checkAndClearLinesEv+0xe6>
            score += 10;
 8007018:	f504 5200 	add.w	r2, r4, #8192	@ 0x2000
        if (numFullLines == 1) {
 800701c:	2d01      	cmp	r5, #1
            score += 10;
 800701e:	f8d2 3d34 	ldr.w	r3, [r2, #3380]	@ 0xd34
        if (numFullLines == 1) {
 8007022:	d168      	bne.n	80070f6 <_ZN11Screen4View18checkAndClearLinesEv+0x122>
            score += 10;
 8007024:	330a      	adds	r3, #10
        Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 8007026:	f504 5635 	add.w	r6, r4, #11584	@ 0x2d40
 800702a:	3610      	adds	r6, #16
            score += 10;
 800702c:	f8c2 3d34 	str.w	r3, [r2, #3380]	@ 0xd34
        Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", score);
 8007030:	2114      	movs	r1, #20
 8007032:	4a7c      	ldr	r2, [pc, #496]	@ (8007224 <_ZN11Screen4View18checkAndClearLinesEv+0x250>)
 8007034:	4630      	mov	r0, r6
 8007036:	f00e fb3f 	bl	80156b8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800703a:	4b7b      	ldr	r3, [pc, #492]	@ (8007228 <_ZN11Screen4View18checkAndClearLinesEv+0x254>)
 800703c:	f8c4 6158 	str.w	r6, [r4, #344]	@ 0x158
        textArea1.setTypedText(touchgfx::TypedText(T_TOADOX));
 8007040:	f504 7688 	add.w	r6, r4, #272	@ 0x110
 8007044:	4630      	mov	r0, r6
 8007046:	9306      	str	r3, [sp, #24]
 8007048:	a906      	add	r1, sp, #24
 800704a:	2310      	movs	r3, #16
 800704c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8007050:	f008 f942 	bl	800f2d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        textArea1.invalidate();
 8007054:	4630      	mov	r0, r6
 8007056:	f06f 062a 	mvn.w	r6, #42	@ 0x2a
 800705a:	4366      	muls	r6, r4
 800705c:	f00c f846 	bl	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
                remove(staticBlocks[lineY][x]);
 8007060:	f5a6 4639 	sub.w	r6, r6, #47360	@ 0xb900
        for(int i = 0; i < numFullLines; i++) {
 8007064:	2300      	movs	r3, #0
        textArea1.invalidate();
 8007066:	f10d 0920 	add.w	r9, sp, #32
        for(int i = 0; i < numFullLines; i++) {
 800706a:	9301      	str	r3, [sp, #4]
 800706c:	f04f 0b0a 	mov.w	fp, #10
        container.remove(d);
 8007070:	f104 0a04 	add.w	sl, r4, #4
                remove(staticBlocks[lineY][x]);
 8007074:	3ec4      	subs	r6, #196	@ 0xc4
            int lineY = fullLines[i];
 8007076:	f859 7b04 	ldr.w	r7, [r9], #4
            for(int x = 0; x < BOARD_WIDTH; x++) {
 800707a:	fb0b 4707 	mla	r7, fp, r7, r4
 800707e:	f207 4767 	addw	r7, r7, #1127	@ 0x467
 8007082:	f04f 0800 	mov.w	r8, #0
                remove(staticBlocks[lineY][x]);
 8007086:	222c      	movs	r2, #44	@ 0x2c
 8007088:	fb02 6107 	mla	r1, r2, r7, r6
 800708c:	4650      	mov	r0, sl
            for(int x = 0; x < BOARD_WIDTH; x++) {
 800708e:	f108 0801 	add.w	r8, r8, #1
 8007092:	f005 f9c6 	bl	800c422 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
                board[lineY][x] = false;
 8007096:	2300      	movs	r3, #0
            for(int x = 0; x < BOARD_WIDTH; x++) {
 8007098:	f1b8 0f0a 	cmp.w	r8, #10
                board[lineY][x] = false;
 800709c:	f807 3f01 	strb.w	r3, [r7, #1]!
            for(int x = 0; x < BOARD_WIDTH; x++) {
 80070a0:	f04f 022c 	mov.w	r2, #44	@ 0x2c
 80070a4:	d1f0      	bne.n	8007088 <_ZN11Screen4View18checkAndClearLinesEv+0xb4>
        for(int i = 0; i < numFullLines; i++) {
 80070a6:	9a01      	ldr	r2, [sp, #4]
 80070a8:	3201      	adds	r2, #1
 80070aa:	4295      	cmp	r5, r2
 80070ac:	d12c      	bne.n	8007108 <_ZN11Screen4View18checkAndClearLinesEv+0x134>
        for(int y = fullLines[0]; y >= 0; y--) {
 80070ae:	9f08      	ldr	r7, [sp, #32]
 80070b0:	2f00      	cmp	r7, #0
 80070b2:	da3a      	bge.n	800712a <_ZN11Screen4View18checkAndClearLinesEv+0x156>
        container.invalidate();
 80070b4:	4650      	mov	r0, sl
 80070b6:	f00c f819 	bl	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
    if (score >= targetScore) {
 80070ba:	f504 5300 	add.w	r3, r4, #8192	@ 0x2000
 80070be:	f8d3 1d34 	ldr.w	r1, [r3, #3380]	@ 0xd34
 80070c2:	f8d3 2d38 	ldr.w	r2, [r3, #3384]	@ 0xd38
 80070c6:	4291      	cmp	r1, r2
 80070c8:	f0c0 80a9 	bcc.w	800721e <_ZN11Screen4View18checkAndClearLinesEv+0x24a>
        isWin = true;
 80070cc:	2501      	movs	r5, #1
 80070ce:	f883 5d3d 	strb.w	r5, [r3, #3389]	@ 0xd3d
        clearScreen();
 80070d2:	4620      	mov	r0, r4
 80070d4:	f7ff fe8c 	bl	8006df0 <_ZN11Screen4View11clearScreenEv>
 80070d8:	2300      	movs	r3, #0
 80070da:	1d20      	adds	r0, r4, #4
 80070dc:	f884 5225 	strb.w	r5, [r4, #549]	@ 0x225
 80070e0:	f884 30bd 	strb.w	r3, [r4, #189]	@ 0xbd
 80070e4:	f884 5341 	strb.w	r5, [r4, #833]	@ 0x341
 80070e8:	f884 53b9 	strb.w	r5, [r4, #953]	@ 0x3b9
}
 80070ec:	b01d      	add	sp, #116	@ 0x74
 80070ee:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80070f2:	f00b bffb 	b.w	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
        } else if (numFullLines == 2) {
 80070f6:	2d02      	cmp	r5, #2
 80070f8:	d101      	bne.n	80070fe <_ZN11Screen4View18checkAndClearLinesEv+0x12a>
            score += 30; 
 80070fa:	331e      	adds	r3, #30
 80070fc:	e793      	b.n	8007026 <_ZN11Screen4View18checkAndClearLinesEv+0x52>
        } else if (numFullLines == 3) {
 80070fe:	2d03      	cmp	r5, #3
            score += 50;
 8007100:	bf0c      	ite	eq
 8007102:	3332      	addeq	r3, #50	@ 0x32
            score += 100; 
 8007104:	3364      	addne	r3, #100	@ 0x64
 8007106:	e78e      	b.n	8007026 <_ZN11Screen4View18checkAndClearLinesEv+0x52>
 8007108:	9201      	str	r2, [sp, #4]
 800710a:	e7b4      	b.n	8007076 <_ZN11Screen4View18checkAndClearLinesEv+0xa2>
 800710c:	462a      	mov	r2, r5
                if(fullLines[i] > y) shiftDown++;
 800710e:	f850 5b04 	ldr.w	r5, [r0], #4
            for(int i = 0; i < numFullLines; i++) {
 8007112:	9e01      	ldr	r6, [sp, #4]
                if(fullLines[i] > y) shiftDown++;
 8007114:	42bd      	cmp	r5, r7
 8007116:	bfc8      	it	gt
 8007118:	3101      	addgt	r1, #1
            for(int i = 0; i < numFullLines; i++) {
 800711a:	4296      	cmp	r6, r2
 800711c:	f102 0501 	add.w	r5, r2, #1
 8007120:	d1f4      	bne.n	800710c <_ZN11Screen4View18checkAndClearLinesEv+0x138>
            if(shiftDown > 0) {
 8007122:	2900      	cmp	r1, #0
 8007124:	dc05      	bgt.n	8007132 <_ZN11Screen4View18checkAndClearLinesEv+0x15e>
        for(int y = fullLines[0]; y >= 0; y--) {
 8007126:	3f01      	subs	r7, #1
 8007128:	e7c2      	b.n	80070b0 <_ZN11Screen4View18checkAndClearLinesEv+0xdc>
            for(int i = 0; i < numFullLines; i++) {
 800712a:	2200      	movs	r2, #0
 800712c:	a808      	add	r0, sp, #32
            int shiftDown = 0;
 800712e:	4611      	mov	r1, r2
 8007130:	e7ed      	b.n	800710e <_ZN11Screen4View18checkAndClearLinesEv+0x13a>
                        board[y + shiftDown][x] = true;
 8007132:	4439      	add	r1, r7
 8007134:	200a      	movs	r0, #10
 8007136:	fb00 f507 	mul.w	r5, r0, r7
                            10 + ((y + shiftDown) * BLOCK_SIZE)
 800713a:	ebc1 1201 	rsb	r2, r1, r1, lsl #4
 800713e:	f44f 7cdc 	mov.w	ip, #440	@ 0x1b8
 8007142:	f204 4967 	addw	r9, r4, #1127	@ 0x467
 8007146:	fb0c 4601 	mla	r6, ip, r1, r4
 800714a:	320a      	adds	r2, #10
 800714c:	9502      	str	r5, [sp, #8]
 800714e:	44a9      	add	r9, r5
 8007150:	4341      	muls	r1, r0
 8007152:	f504 65fe 	add.w	r5, r4, #2032	@ 0x7f0
                        staticBlocks[y + shiftDown][x].setXY(
 8007156:	b212      	sxth	r2, r2
 8007158:	fb0c 5507 	mla	r5, ip, r7, r5
 800715c:	9103      	str	r1, [sp, #12]
 800715e:	46b3      	mov	fp, r6
 8007160:	f04f 0814 	mov.w	r8, #20
                    if(board[y][x]) {
 8007164:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8007168:	2900      	cmp	r1, #0
 800716a:	d04a      	beq.n	8007202 <_ZN11Screen4View18checkAndClearLinesEv+0x22e>
                        board[y + shiftDown][x] = true;
 800716c:	9902      	ldr	r1, [sp, #8]
 800716e:	9803      	ldr	r0, [sp, #12]
                        staticBlocks[y + shiftDown][x].setXY(
 8007170:	9205      	str	r2, [sp, #20]
                        board[y + shiftDown][x] = true;
 8007172:	eba9 0101 	sub.w	r1, r9, r1
 8007176:	f04f 0c01 	mov.w	ip, #1
 800717a:	f801 c000 	strb.w	ip, [r1, r0]
class Drawable
 800717e:	e9d5 0101 	ldrd	r0, r1, [r5, #4]
 8007182:	f206 7ef4 	addw	lr, r6, #2036	@ 0x7f4
                        board[y][x] = false;
 8007186:	f889 3000 	strb.w	r3, [r9]
 800718a:	e88e 0003 	stmia.w	lr, {r0, r1}
 800718e:	e9d5 0103 	ldrd	r0, r1, [r5, #12]
 8007192:	f206 7efc 	addw	lr, r6, #2044	@ 0x7fc
 8007196:	e88e 0003 	stmia.w	lr, {r0, r1}
 800719a:	6969      	ldr	r1, [r5, #20]
 800719c:	f8c6 1804 	str.w	r1, [r6, #2052]	@ 0x804
 80071a0:	69a9      	ldr	r1, [r5, #24]
 80071a2:	f8c6 1808 	str.w	r1, [r6, #2056]	@ 0x808
 80071a6:	69e9      	ldr	r1, [r5, #28]
 80071a8:	f8c6 180c 	str.w	r1, [r6, #2060]	@ 0x80c
 80071ac:	f9b5 1020 	ldrsh.w	r1, [r5, #32]
 80071b0:	f8a6 1810 	strh.w	r1, [r6, #2064]	@ 0x810
 80071b4:	f9b5 1022 	ldrsh.w	r1, [r5, #34]	@ 0x22
 80071b8:	f8a6 1812 	strh.w	r1, [r6, #2066]	@ 0x812
 80071bc:	f895 1024 	ldrb.w	r1, [r5, #36]	@ 0x24
 80071c0:	f886 1814 	strb.w	r1, [r6, #2068]	@ 0x814
 80071c4:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 80071c8:	f886 1815 	strb.w	r1, [r6, #2069]	@ 0x815
 80071cc:	8ce9      	ldrh	r1, [r5, #38]	@ 0x26
 80071ce:	f8ab 1816 	strh.w	r1, [fp, #2070]	@ 0x816
                        staticBlocks[y + shiftDown][x] = staticBlocks[y][x];
 80071d2:	f506 6cfe 	add.w	ip, r6, #2032	@ 0x7f0
 80071d6:	f895 1028 	ldrb.w	r1, [r5, #40]	@ 0x28
 80071da:	f88b 1818 	strb.w	r1, [fp, #2072]	@ 0x818
                        staticBlocks[y + shiftDown][x].setXY(
 80071de:	4660      	mov	r0, ip
 80071e0:	fa0f f188 	sxth.w	r1, r8
 80071e4:	f8cd c010 	str.w	ip, [sp, #16]
 80071e8:	f7fc f8db 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
        container.add(d);
 80071ec:	9804      	ldr	r0, [sp, #16]
 80071ee:	4601      	mov	r1, r0
 80071f0:	4650      	mov	r0, sl
 80071f2:	f005 f8d5 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        container.remove(d);
 80071f6:	4629      	mov	r1, r5
 80071f8:	4650      	mov	r0, sl
 80071fa:	f005 f912 	bl	800c422 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80071fe:	9a05      	ldr	r2, [sp, #20]
 8007200:	2300      	movs	r3, #0
                for(int x = 0; x < BOARD_WIDTH; x++) {
 8007202:	f108 080f 	add.w	r8, r8, #15
 8007206:	fa1f f888 	uxth.w	r8, r8
 800720a:	f1b8 0faa 	cmp.w	r8, #170	@ 0xaa
 800720e:	f106 062c 	add.w	r6, r6, #44	@ 0x2c
 8007212:	f10b 0b2c 	add.w	fp, fp, #44	@ 0x2c
 8007216:	f105 052c 	add.w	r5, r5, #44	@ 0x2c
 800721a:	d1a3      	bne.n	8007164 <_ZN11Screen4View18checkAndClearLinesEv+0x190>
 800721c:	e783      	b.n	8007126 <_ZN11Screen4View18checkAndClearLinesEv+0x152>
}
 800721e:	b01d      	add	sp, #116	@ 0x74
 8007220:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007224:	0802772d 	.word	0x0802772d
 8007228:	08027d58 	.word	0x08027d58

0800722c <_ZN11Screen4View15freezeTetrominoEv>:
{
 800722c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007230:	f500 5a34 	add.w	sl, r0, #11520	@ 0x2d00
 8007234:	b085      	sub	sp, #20
 8007236:	4605      	mov	r5, r0
 8007238:	f10a 0a0f 	add.w	sl, sl, #15
    for(int y = 0; y < 4; y++) {
 800723c:	f04f 0900 	mov.w	r9, #0
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8007240:	f500 5b00 	add.w	fp, r0, #8192	@ 0x2000
        for(int x = 0; x < 4; x++) {
 8007244:	ebc9 1309 	rsb	r3, r9, r9, lsl #4
 8007248:	b29b      	uxth	r3, r3
 800724a:	9300      	str	r3, [sp, #0]
 800724c:	f04f 0800 	mov.w	r8, #0
{
 8007250:	4653      	mov	r3, sl
            if(currentTetromino[y][x]) {
 8007252:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8007256:	2a00      	cmp	r2, #0
 8007258:	d03d      	beq.n	80072d6 <_ZN11Screen4View15freezeTetrominoEv+0xaa>
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 800725a:	f8db 2d24 	ldr.w	r2, [fp, #3364]	@ 0xd24
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 800725e:	f8db 1d20 	ldr.w	r1, [fp, #3360]	@ 0xd20
 8007262:	9301      	str	r3, [sp, #4]
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 8007264:	f1a2 060a 	sub.w	r6, r2, #10
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8007268:	230f      	movs	r3, #15
                board[boardY][boardX] = true;
 800726a:	200a      	movs	r0, #10
                int boardY = (currentY - 10) / BLOCK_SIZE + y;
 800726c:	fb96 f6f3 	sdiv	r6, r6, r3
 8007270:	444e      	add	r6, r9
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 8007272:	f1a1 0414 	sub.w	r4, r1, #20
                board[boardY][boardX] = true;
 8007276:	fb00 5006 	mla	r0, r0, r6, r5
                int boardX = (currentX - 20) / BLOCK_SIZE + x;
 800727a:	fb94 f4f3 	sdiv	r4, r4, r3
 800727e:	4444      	add	r4, r8
                board[boardY][boardX] = true;
 8007280:	4420      	add	r0, r4
 8007282:	2701      	movs	r7, #1
 8007284:	f880 7468 	strb.w	r7, [r0, #1128]	@ 0x468
                staticBlocks[boardY][boardX].setXY(
 8007288:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 800728c:	4346      	muls	r6, r0
 800728e:	202c      	movs	r0, #44	@ 0x2c
                    currentY + (y * BLOCK_SIZE)
 8007290:	9b00      	ldr	r3, [sp, #0]
                staticBlocks[boardY][boardX].setXY(
 8007292:	4344      	muls	r4, r0
 8007294:	f506 67fe 	add.w	r7, r6, #2032	@ 0x7f0
 8007298:	4427      	add	r7, r4
                    currentX + (x * BLOCK_SIZE),
 800729a:	ebc8 1008 	rsb	r0, r8, r8, lsl #4
                staticBlocks[boardY][boardX].setXY(
 800729e:	442f      	add	r7, r5
                    currentY + (y * BLOCK_SIZE)
 80072a0:	441a      	add	r2, r3
                    currentX + (x * BLOCK_SIZE),
 80072a2:	4401      	add	r1, r0
                staticBlocks[boardY][boardX].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 80072a4:	4434      	add	r4, r6
                staticBlocks[boardY][boardX].setXY(
 80072a6:	b212      	sxth	r2, r2
 80072a8:	b209      	sxth	r1, r1
 80072aa:	4638      	mov	r0, r7
                staticBlocks[boardY][boardX].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 80072ac:	442c      	add	r4, r5
                staticBlocks[boardY][boardX].setXY(
 80072ae:	f7fc f878 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
                staticBlocks[boardY][boardX].setBitmap(Bitmap(TETROMINO_IMAGES[currentShape]));
 80072b2:	4b12      	ldr	r3, [pc, #72]	@ (80072fc <_ZN11Screen4View15freezeTetrominoEv+0xd0>)
 80072b4:	f8db 1d28 	ldr.w	r1, [fp, #3368]	@ 0xd28
 80072b8:	f8d4 27f0 	ldr.w	r2, [r4, #2032]	@ 0x7f0
 80072bc:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 80072c0:	6e12      	ldr	r2, [r2, #96]	@ 0x60
 80072c2:	f8ad 100c 	strh.w	r1, [sp, #12]
 80072c6:	4638      	mov	r0, r7
 80072c8:	a903      	add	r1, sp, #12
 80072ca:	4790      	blx	r2
        container.add(d);
 80072cc:	4639      	mov	r1, r7
 80072ce:	1d28      	adds	r0, r5, #4
 80072d0:	f005 f866 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80072d4:	9b01      	ldr	r3, [sp, #4]
        for(int x = 0; x < 4; x++) {
 80072d6:	f108 0801 	add.w	r8, r8, #1
 80072da:	f1b8 0f04 	cmp.w	r8, #4
 80072de:	d1b8      	bne.n	8007252 <_ZN11Screen4View15freezeTetrominoEv+0x26>
    for(int y = 0; y < 4; y++) {
 80072e0:	f109 0901 	add.w	r9, r9, #1
 80072e4:	f1b9 0f04 	cmp.w	r9, #4
 80072e8:	f10a 0a04 	add.w	sl, sl, #4
 80072ec:	d1aa      	bne.n	8007244 <_ZN11Screen4View15freezeTetrominoEv+0x18>
    checkAndClearLines();
 80072ee:	4628      	mov	r0, r5
}
 80072f0:	b005      	add	sp, #20
 80072f2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    checkAndClearLines();
 80072f6:	f7ff be6d 	b.w	8006fd4 <_ZN11Screen4View18checkAndClearLinesEv>
 80072fa:	bf00      	nop
 80072fc:	080287aa 	.word	0x080287aa

08007300 <_ZN11Screen4View15handleTickEventEv>:
{
 8007300:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    if (isGameOver || isWin) {
 8007304:	f500 5400 	add.w	r4, r0, #8192	@ 0x2000
{
 8007308:	4605      	mov	r5, r0
    if (isGameOver || isWin) {
 800730a:	f894 3d3c 	ldrb.w	r3, [r4, #3388]	@ 0xd3c
 800730e:	2b00      	cmp	r3, #0
 8007310:	f040 8095 	bne.w	800743e <_ZN11Screen4View15handleTickEventEv+0x13e>
 8007314:	f894 6d3d 	ldrb.w	r6, [r4, #3389]	@ 0xd3d
 8007318:	2e00      	cmp	r6, #0
 800731a:	f040 8090 	bne.w	800743e <_ZN11Screen4View15handleTickEventEv+0x13e>
    tickCount++;
 800731e:	f8d4 3d30 	ldr.w	r3, [r4, #3376]	@ 0xd30
 8007322:	2219      	movs	r2, #25
 8007324:	3301      	adds	r3, #1
 8007326:	f8c4 3d30 	str.w	r3, [r4, #3376]	@ 0xd30
 800732a:	fbb3 f1f2 	udiv	r1, r3, r2
 800732e:	fb02 3311 	mls	r3, r2, r1, r3
    if (tickCount % 25 == 12) {
 8007332:	2b0c      	cmp	r3, #12
 8007334:	d117      	bne.n	8007366 <_ZN11Screen4View15handleTickEventEv+0x66>
        uint32_t count = osMessageQueueGetCount(Queue1Handle);
 8007336:	4f43      	ldr	r7, [pc, #268]	@ (8007444 <_ZN11Screen4View15handleTickEventEv+0x144>)
        uint8_t res = 0;
 8007338:	f88d 6007 	strb.w	r6, [sp, #7]
        uint32_t count = osMessageQueueGetCount(Queue1Handle);
 800733c:	6838      	ldr	r0, [r7, #0]
 800733e:	f002 ffdb 	bl	800a2f8 <osMessageQueueGetCount>
        if (count > 0)
 8007342:	b180      	cbz	r0, 8007366 <_ZN11Screen4View15handleTickEventEv+0x66>
            osMessageQueueGet(Queue1Handle, &res, NULL, osWaitForever);
 8007344:	f04f 33ff 	mov.w	r3, #4294967295
 8007348:	6838      	ldr	r0, [r7, #0]
 800734a:	4632      	mov	r2, r6
 800734c:	f10d 0107 	add.w	r1, sp, #7
 8007350:	f002 ffa2 	bl	800a298 <osMessageQueueGet>
            if (res == 'L') 
 8007354:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8007358:	2b4c      	cmp	r3, #76	@ 0x4c
 800735a:	d02d      	beq.n	80073b8 <_ZN11Screen4View15handleTickEventEv+0xb8>
 800735c:	d826      	bhi.n	80073ac <_ZN11Screen4View15handleTickEventEv+0xac>
 800735e:	2b43      	cmp	r3, #67	@ 0x43
 8007360:	d060      	beq.n	8007424 <_ZN11Screen4View15handleTickEventEv+0x124>
 8007362:	2b44      	cmp	r3, #68	@ 0x44
 8007364:	d048      	beq.n	80073f8 <_ZN11Screen4View15handleTickEventEv+0xf8>
    if (tickCount % 50 == 0) 
 8007366:	f8d4 3d30 	ldr.w	r3, [r4, #3376]	@ 0xd30
 800736a:	2232      	movs	r2, #50	@ 0x32
 800736c:	fbb3 f1f2 	udiv	r1, r3, r2
 8007370:	fb02 3311 	mls	r3, r2, r1, r3
 8007374:	b9a3      	cbnz	r3, 80073a0 <_ZN11Screen4View15handleTickEventEv+0xa0>
        if (checkCollision(currentX, currentY + BLOCK_SIZE, currentShape))
 8007376:	f8d4 6d24 	ldr.w	r6, [r4, #3364]	@ 0xd24
 800737a:	f8d4 8d20 	ldr.w	r8, [r4, #3360]	@ 0xd20
 800737e:	f8d4 7d28 	ldr.w	r7, [r4, #3368]	@ 0xd28
 8007382:	360f      	adds	r6, #15
 8007384:	463b      	mov	r3, r7
 8007386:	4632      	mov	r2, r6
 8007388:	4641      	mov	r1, r8
 800738a:	4628      	mov	r0, r5
 800738c:	f7ff fa01 	bl	8006792 <_ZN11Screen4View14checkCollisionEiii>
 8007390:	2800      	cmp	r0, #0
 8007392:	d04b      	beq.n	800742c <_ZN11Screen4View15handleTickEventEv+0x12c>
            freezeTetromino();
 8007394:	4628      	mov	r0, r5
 8007396:	f7ff ff49 	bl	800722c <_ZN11Screen4View15freezeTetrominoEv>
            createNewTetromino();
 800739a:	4628      	mov	r0, r5
 800739c:	f7ff fd76 	bl	8006e8c <_ZN11Screen4View18createNewTetrominoEv>
        container.invalidate();
 80073a0:	1d28      	adds	r0, r5, #4
}
 80073a2:	b002      	add	sp, #8
 80073a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80073a8:	f00b bea0 	b.w	80130ec <_ZNK8touchgfx8Drawable10invalidateEv>
 80073ac:	2b52      	cmp	r3, #82	@ 0x52
 80073ae:	d1da      	bne.n	8007366 <_ZN11Screen4View15handleTickEventEv+0x66>
                if (!checkCollision(currentX + BLOCK_SIZE, currentY, currentShape)) 
 80073b0:	f8d4 6d20 	ldr.w	r6, [r4, #3360]	@ 0xd20
 80073b4:	360f      	adds	r6, #15
 80073b6:	e002      	b.n	80073be <_ZN11Screen4View15handleTickEventEv+0xbe>
                if (!checkCollision(currentX - BLOCK_SIZE, currentY, currentShape)) 
 80073b8:	f8d4 6d20 	ldr.w	r6, [r4, #3360]	@ 0xd20
 80073bc:	3e0f      	subs	r6, #15
                if (!checkCollision(currentX + BLOCK_SIZE, currentY, currentShape)) 
 80073be:	f8d4 8d24 	ldr.w	r8, [r4, #3364]	@ 0xd24
 80073c2:	f8d4 7d28 	ldr.w	r7, [r4, #3368]	@ 0xd28
 80073c6:	4642      	mov	r2, r8
 80073c8:	463b      	mov	r3, r7
 80073ca:	4631      	mov	r1, r6
 80073cc:	4628      	mov	r0, r5
 80073ce:	f7ff f9e0 	bl	8006792 <_ZN11Screen4View14checkCollisionEiii>
 80073d2:	2800      	cmp	r0, #0
 80073d4:	d1c7      	bne.n	8007366 <_ZN11Screen4View15handleTickEventEv+0x66>
                    currentX += BLOCK_SIZE;
 80073d6:	f8c4 6d20 	str.w	r6, [r4, #3360]	@ 0xd20
                    drawTetromino(currentShape, currentX, currentY);
 80073da:	4643      	mov	r3, r8
 80073dc:	4632      	mov	r2, r6
 80073de:	4639      	mov	r1, r7
 80073e0:	4628      	mov	r0, r5
 80073e2:	f7ff fa61 	bl	80068a8 <_ZN11Screen4View13drawTetrominoEiii>
 80073e6:	e7be      	b.n	8007366 <_ZN11Screen4View15handleTickEventEv+0x66>
                    currentY += BLOCK_SIZE;
 80073e8:	f8c4 6d24 	str.w	r6, [r4, #3364]	@ 0xd24
                    drawTetromino(currentShape, currentX, currentY);
 80073ec:	4633      	mov	r3, r6
 80073ee:	463a      	mov	r2, r7
 80073f0:	4641      	mov	r1, r8
 80073f2:	4628      	mov	r0, r5
 80073f4:	f7ff fa58 	bl	80068a8 <_ZN11Screen4View13drawTetrominoEiii>
                while (!checkCollision(currentX, currentY + BLOCK_SIZE, currentShape)) 
 80073f8:	f8d4 6d24 	ldr.w	r6, [r4, #3364]	@ 0xd24
 80073fc:	f8d4 7d20 	ldr.w	r7, [r4, #3360]	@ 0xd20
 8007400:	f8d4 8d28 	ldr.w	r8, [r4, #3368]	@ 0xd28
 8007404:	360f      	adds	r6, #15
 8007406:	4643      	mov	r3, r8
 8007408:	4632      	mov	r2, r6
 800740a:	4639      	mov	r1, r7
 800740c:	4628      	mov	r0, r5
 800740e:	f7ff f9c0 	bl	8006792 <_ZN11Screen4View14checkCollisionEiii>
 8007412:	2800      	cmp	r0, #0
 8007414:	d0e8      	beq.n	80073e8 <_ZN11Screen4View15handleTickEventEv+0xe8>
                freezeTetromino();
 8007416:	4628      	mov	r0, r5
 8007418:	f7ff ff08 	bl	800722c <_ZN11Screen4View15freezeTetrominoEv>
                createNewTetromino();
 800741c:	4628      	mov	r0, r5
 800741e:	f7ff fd35 	bl	8006e8c <_ZN11Screen4View18createNewTetrominoEv>
 8007422:	e7a0      	b.n	8007366 <_ZN11Screen4View15handleTickEventEv+0x66>
                rotateTetromino();
 8007424:	4628      	mov	r0, r5
 8007426:	f7ff faa3 	bl	8006970 <_ZN11Screen4View15rotateTetrominoEv>
 800742a:	e79c      	b.n	8007366 <_ZN11Screen4View15handleTickEventEv+0x66>
            currentY += BLOCK_SIZE;
 800742c:	f8c4 6d24 	str.w	r6, [r4, #3364]	@ 0xd24
            drawTetromino(currentShape, currentX, currentY);
 8007430:	4633      	mov	r3, r6
 8007432:	4642      	mov	r2, r8
 8007434:	4639      	mov	r1, r7
 8007436:	4628      	mov	r0, r5
 8007438:	f7ff fa36 	bl	80068a8 <_ZN11Screen4View13drawTetrominoEiii>
 800743c:	e7b0      	b.n	80073a0 <_ZN11Screen4View15handleTickEventEv+0xa0>
}
 800743e:	b002      	add	sp, #8
 8007440:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007444:	200003a8 	.word	0x200003a8

08007448 <_ZN19ScreenWaitPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ScreenWaitPresenter() {}
 8007448:	4770      	bx	lr

0800744a <_ZThn4_N19ScreenWaitPresenterD1Ev>:
 800744a:	3804      	subs	r0, #4
 800744c:	4770      	bx	lr

0800744e <_ZN19ScreenWaitPresenter10deactivateEv>:
}

void ScreenWaitPresenter::activate()
{

}
 800744e:	4770      	bx	lr

08007450 <_ZN19ScreenWaitPresenterD0Ev>:
 8007450:	b510      	push	{r4, lr}
 8007452:	2110      	movs	r1, #16
 8007454:	4604      	mov	r4, r0
 8007456:	f01d fa68 	bl	802492a <_ZdlPvj>
 800745a:	4620      	mov	r0, r4
 800745c:	bd10      	pop	{r4, pc}

0800745e <_ZThn4_N19ScreenWaitPresenterD0Ev>:
 800745e:	f1a0 0004 	sub.w	r0, r0, #4
 8007462:	e7f5      	b.n	8007450 <_ZN19ScreenWaitPresenterD0Ev>

08007464 <_ZN19ScreenWaitPresenterC1ER14ScreenWaitView>:
 8007464:	2200      	movs	r2, #0
 8007466:	6082      	str	r2, [r0, #8]
    : view(v)
 8007468:	4a02      	ldr	r2, [pc, #8]	@ (8007474 <_ZN19ScreenWaitPresenterC1ER14ScreenWaitView+0x10>)
 800746a:	6002      	str	r2, [r0, #0]
 800746c:	3218      	adds	r2, #24
 800746e:	6042      	str	r2, [r0, #4]
 8007470:	60c1      	str	r1, [r0, #12]
}
 8007472:	4770      	bx	lr
 8007474:	08028830 	.word	0x08028830

08007478 <_ZN14ScreenWaitView14tearDownScreenEv>:
}

void ScreenWaitView::tearDownScreen()
{
    ScreenWaitViewBase::tearDownScreen();
}
 8007478:	4770      	bx	lr
	...

0800747c <_ZN14ScreenWaitViewD1Ev>:

class ScreenWaitView : public ScreenWaitViewBase
{
public:
    ScreenWaitView();
    virtual ~ScreenWaitView() {}
 800747c:	b510      	push	{r4, lr}
 800747e:	4b03      	ldr	r3, [pc, #12]	@ (800748c <_ZN14ScreenWaitViewD1Ev+0x10>)
 8007480:	6003      	str	r3, [r0, #0]
 8007482:	4604      	mov	r4, r0
 8007484:	f7fd f915 	bl	80046b2 <_ZN18ScreenWaitViewBaseD1Ev>
 8007488:	4620      	mov	r0, r4
 800748a:	bd10      	pop	{r4, pc}
 800748c:	08028858 	.word	0x08028858

08007490 <_ZN14ScreenWaitViewD0Ev>:
 8007490:	b510      	push	{r4, lr}
 8007492:	4604      	mov	r4, r0
 8007494:	f7ff fff2 	bl	800747c <_ZN14ScreenWaitViewD1Ev>
 8007498:	4620      	mov	r0, r4
 800749a:	f44f 71cc 	mov.w	r1, #408	@ 0x198
 800749e:	f01d fa44 	bl	802492a <_ZdlPvj>
 80074a2:	4620      	mov	r0, r4
 80074a4:	bd10      	pop	{r4, pc}
	...

080074a8 <_ZN14ScreenWaitViewC1Ev>:
ScreenWaitView::ScreenWaitView()
 80074a8:	b510      	push	{r4, lr}
 80074aa:	4604      	mov	r4, r0
 80074ac:	f7fd f942 	bl	8004734 <_ZN18ScreenWaitViewBaseC1Ev>
 80074b0:	4b01      	ldr	r3, [pc, #4]	@ (80074b8 <_ZN14ScreenWaitViewC1Ev+0x10>)
 80074b2:	6023      	str	r3, [r4, #0]
}
 80074b4:	4620      	mov	r0, r4
 80074b6:	bd10      	pop	{r4, pc}
 80074b8:	08028858 	.word	0x08028858

080074bc <_ZN14ScreenWaitView11setupScreenEv>:
    ScreenWaitViewBase::setupScreen();
 80074bc:	f7fd b8fa 	b.w	80046b4 <_ZN18ScreenWaitViewBase11setupScreenEv>

080074c0 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 80074c0:	20f0      	movs	r0, #240	@ 0xf0
 80074c2:	4770      	bx	lr

080074c4 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 80074c4:	f44f 70a0 	mov.w	r0, #320	@ 0x140
 80074c8:	4770      	bx	lr

080074ca <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 80074ca:	2029      	movs	r0, #41	@ 0x29
 80074cc:	f7f9 bdaa 	b.w	8001024 <LCD_IO_WriteReg>

080074d0 <ili9341_DisplayOff>:
 80074d0:	2028      	movs	r0, #40	@ 0x28
 80074d2:	f7f9 bda7 	b.w	8001024 <LCD_IO_WriteReg>

080074d6 <ili9341_Init>:
{
 80074d6:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80074d8:	f7f9 fd78 	bl	8000fcc <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 80074dc:	20ca      	movs	r0, #202	@ 0xca
 80074de:	f7f9 fda1 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80074e2:	20c3      	movs	r0, #195	@ 0xc3
 80074e4:	f7f9 fd82 	bl	8000fec <LCD_IO_WriteData>
 80074e8:	2008      	movs	r0, #8
 80074ea:	f7f9 fd7f 	bl	8000fec <LCD_IO_WriteData>
 80074ee:	2050      	movs	r0, #80	@ 0x50
 80074f0:	f7f9 fd7c 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80074f4:	20cf      	movs	r0, #207	@ 0xcf
 80074f6:	f7f9 fd95 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80074fa:	2000      	movs	r0, #0
 80074fc:	f7f9 fd76 	bl	8000fec <LCD_IO_WriteData>
 8007500:	20c1      	movs	r0, #193	@ 0xc1
 8007502:	f7f9 fd73 	bl	8000fec <LCD_IO_WriteData>
 8007506:	2030      	movs	r0, #48	@ 0x30
 8007508:	f7f9 fd70 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800750c:	20ed      	movs	r0, #237	@ 0xed
 800750e:	f7f9 fd89 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007512:	2064      	movs	r0, #100	@ 0x64
 8007514:	f7f9 fd6a 	bl	8000fec <LCD_IO_WriteData>
 8007518:	2003      	movs	r0, #3
 800751a:	f7f9 fd67 	bl	8000fec <LCD_IO_WriteData>
 800751e:	2012      	movs	r0, #18
 8007520:	f7f9 fd64 	bl	8000fec <LCD_IO_WriteData>
 8007524:	2081      	movs	r0, #129	@ 0x81
 8007526:	f7f9 fd61 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800752a:	20e8      	movs	r0, #232	@ 0xe8
 800752c:	f7f9 fd7a 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007530:	2085      	movs	r0, #133	@ 0x85
 8007532:	f7f9 fd5b 	bl	8000fec <LCD_IO_WriteData>
 8007536:	2000      	movs	r0, #0
 8007538:	f7f9 fd58 	bl	8000fec <LCD_IO_WriteData>
 800753c:	2078      	movs	r0, #120	@ 0x78
 800753e:	f7f9 fd55 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007542:	20cb      	movs	r0, #203	@ 0xcb
 8007544:	f7f9 fd6e 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007548:	2039      	movs	r0, #57	@ 0x39
 800754a:	f7f9 fd4f 	bl	8000fec <LCD_IO_WriteData>
 800754e:	202c      	movs	r0, #44	@ 0x2c
 8007550:	f7f9 fd4c 	bl	8000fec <LCD_IO_WriteData>
 8007554:	2000      	movs	r0, #0
 8007556:	f7f9 fd49 	bl	8000fec <LCD_IO_WriteData>
 800755a:	2034      	movs	r0, #52	@ 0x34
 800755c:	f7f9 fd46 	bl	8000fec <LCD_IO_WriteData>
 8007560:	2002      	movs	r0, #2
 8007562:	f7f9 fd43 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007566:	20f7      	movs	r0, #247	@ 0xf7
 8007568:	f7f9 fd5c 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800756c:	2020      	movs	r0, #32
 800756e:	f7f9 fd3d 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007572:	20ea      	movs	r0, #234	@ 0xea
 8007574:	f7f9 fd56 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007578:	2000      	movs	r0, #0
 800757a:	f7f9 fd37 	bl	8000fec <LCD_IO_WriteData>
 800757e:	2000      	movs	r0, #0
 8007580:	f7f9 fd34 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007584:	20b1      	movs	r0, #177	@ 0xb1
 8007586:	f7f9 fd4d 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800758a:	2000      	movs	r0, #0
 800758c:	f7f9 fd2e 	bl	8000fec <LCD_IO_WriteData>
 8007590:	201b      	movs	r0, #27
 8007592:	f7f9 fd2b 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007596:	20b6      	movs	r0, #182	@ 0xb6
 8007598:	f7f9 fd44 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800759c:	200a      	movs	r0, #10
 800759e:	f7f9 fd25 	bl	8000fec <LCD_IO_WriteData>
 80075a2:	20a2      	movs	r0, #162	@ 0xa2
 80075a4:	f7f9 fd22 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80075a8:	20c0      	movs	r0, #192	@ 0xc0
 80075aa:	f7f9 fd3b 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80075ae:	2010      	movs	r0, #16
 80075b0:	f7f9 fd1c 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80075b4:	20c1      	movs	r0, #193	@ 0xc1
 80075b6:	f7f9 fd35 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80075ba:	2010      	movs	r0, #16
 80075bc:	f7f9 fd16 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80075c0:	20c5      	movs	r0, #197	@ 0xc5
 80075c2:	f7f9 fd2f 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80075c6:	2045      	movs	r0, #69	@ 0x45
 80075c8:	f7f9 fd10 	bl	8000fec <LCD_IO_WriteData>
 80075cc:	2015      	movs	r0, #21
 80075ce:	f7f9 fd0d 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80075d2:	20c7      	movs	r0, #199	@ 0xc7
 80075d4:	f7f9 fd26 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80075d8:	2090      	movs	r0, #144	@ 0x90
 80075da:	f7f9 fd07 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80075de:	2036      	movs	r0, #54	@ 0x36
 80075e0:	f7f9 fd20 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80075e4:	20c8      	movs	r0, #200	@ 0xc8
 80075e6:	f7f9 fd01 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80075ea:	20f2      	movs	r0, #242	@ 0xf2
 80075ec:	f7f9 fd1a 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80075f0:	2000      	movs	r0, #0
 80075f2:	f7f9 fcfb 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80075f6:	20b0      	movs	r0, #176	@ 0xb0
 80075f8:	f7f9 fd14 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80075fc:	20c2      	movs	r0, #194	@ 0xc2
 80075fe:	f7f9 fcf5 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007602:	20b6      	movs	r0, #182	@ 0xb6
 8007604:	f7f9 fd0e 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007608:	200a      	movs	r0, #10
 800760a:	f7f9 fcef 	bl	8000fec <LCD_IO_WriteData>
 800760e:	20a7      	movs	r0, #167	@ 0xa7
 8007610:	f7f9 fcec 	bl	8000fec <LCD_IO_WriteData>
 8007614:	2027      	movs	r0, #39	@ 0x27
 8007616:	f7f9 fce9 	bl	8000fec <LCD_IO_WriteData>
 800761a:	2004      	movs	r0, #4
 800761c:	f7f9 fce6 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007620:	202a      	movs	r0, #42	@ 0x2a
 8007622:	f7f9 fcff 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007626:	2000      	movs	r0, #0
 8007628:	f7f9 fce0 	bl	8000fec <LCD_IO_WriteData>
 800762c:	2000      	movs	r0, #0
 800762e:	f7f9 fcdd 	bl	8000fec <LCD_IO_WriteData>
 8007632:	2000      	movs	r0, #0
 8007634:	f7f9 fcda 	bl	8000fec <LCD_IO_WriteData>
 8007638:	20ef      	movs	r0, #239	@ 0xef
 800763a:	f7f9 fcd7 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800763e:	202b      	movs	r0, #43	@ 0x2b
 8007640:	f7f9 fcf0 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007644:	2000      	movs	r0, #0
 8007646:	f7f9 fcd1 	bl	8000fec <LCD_IO_WriteData>
 800764a:	2000      	movs	r0, #0
 800764c:	f7f9 fcce 	bl	8000fec <LCD_IO_WriteData>
 8007650:	2001      	movs	r0, #1
 8007652:	f7f9 fccb 	bl	8000fec <LCD_IO_WriteData>
 8007656:	203f      	movs	r0, #63	@ 0x3f
 8007658:	f7f9 fcc8 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800765c:	20f6      	movs	r0, #246	@ 0xf6
 800765e:	f7f9 fce1 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007662:	2001      	movs	r0, #1
 8007664:	f7f9 fcc2 	bl	8000fec <LCD_IO_WriteData>
 8007668:	2000      	movs	r0, #0
 800766a:	f7f9 fcbf 	bl	8000fec <LCD_IO_WriteData>
 800766e:	2006      	movs	r0, #6
 8007670:	f7f9 fcbc 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007674:	202c      	movs	r0, #44	@ 0x2c
 8007676:	f7f9 fcd5 	bl	8001024 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800767a:	20c8      	movs	r0, #200	@ 0xc8
 800767c:	f7f9 fd20 	bl	80010c0 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8007680:	2026      	movs	r0, #38	@ 0x26
 8007682:	f7f9 fccf 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007686:	2001      	movs	r0, #1
 8007688:	f7f9 fcb0 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800768c:	20e0      	movs	r0, #224	@ 0xe0
 800768e:	f7f9 fcc9 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007692:	200f      	movs	r0, #15
 8007694:	f7f9 fcaa 	bl	8000fec <LCD_IO_WriteData>
 8007698:	2029      	movs	r0, #41	@ 0x29
 800769a:	f7f9 fca7 	bl	8000fec <LCD_IO_WriteData>
 800769e:	2024      	movs	r0, #36	@ 0x24
 80076a0:	f7f9 fca4 	bl	8000fec <LCD_IO_WriteData>
 80076a4:	200c      	movs	r0, #12
 80076a6:	f7f9 fca1 	bl	8000fec <LCD_IO_WriteData>
 80076aa:	200e      	movs	r0, #14
 80076ac:	f7f9 fc9e 	bl	8000fec <LCD_IO_WriteData>
 80076b0:	2009      	movs	r0, #9
 80076b2:	f7f9 fc9b 	bl	8000fec <LCD_IO_WriteData>
 80076b6:	204e      	movs	r0, #78	@ 0x4e
 80076b8:	f7f9 fc98 	bl	8000fec <LCD_IO_WriteData>
 80076bc:	2078      	movs	r0, #120	@ 0x78
 80076be:	f7f9 fc95 	bl	8000fec <LCD_IO_WriteData>
 80076c2:	203c      	movs	r0, #60	@ 0x3c
 80076c4:	f7f9 fc92 	bl	8000fec <LCD_IO_WriteData>
 80076c8:	2009      	movs	r0, #9
 80076ca:	f7f9 fc8f 	bl	8000fec <LCD_IO_WriteData>
 80076ce:	2013      	movs	r0, #19
 80076d0:	f7f9 fc8c 	bl	8000fec <LCD_IO_WriteData>
 80076d4:	2005      	movs	r0, #5
 80076d6:	f7f9 fc89 	bl	8000fec <LCD_IO_WriteData>
 80076da:	2017      	movs	r0, #23
 80076dc:	f7f9 fc86 	bl	8000fec <LCD_IO_WriteData>
 80076e0:	2011      	movs	r0, #17
 80076e2:	f7f9 fc83 	bl	8000fec <LCD_IO_WriteData>
 80076e6:	2000      	movs	r0, #0
 80076e8:	f7f9 fc80 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80076ec:	20e1      	movs	r0, #225	@ 0xe1
 80076ee:	f7f9 fc99 	bl	8001024 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80076f2:	2000      	movs	r0, #0
 80076f4:	f7f9 fc7a 	bl	8000fec <LCD_IO_WriteData>
 80076f8:	2016      	movs	r0, #22
 80076fa:	f7f9 fc77 	bl	8000fec <LCD_IO_WriteData>
 80076fe:	201b      	movs	r0, #27
 8007700:	f7f9 fc74 	bl	8000fec <LCD_IO_WriteData>
 8007704:	2004      	movs	r0, #4
 8007706:	f7f9 fc71 	bl	8000fec <LCD_IO_WriteData>
 800770a:	2011      	movs	r0, #17
 800770c:	f7f9 fc6e 	bl	8000fec <LCD_IO_WriteData>
 8007710:	2007      	movs	r0, #7
 8007712:	f7f9 fc6b 	bl	8000fec <LCD_IO_WriteData>
 8007716:	2031      	movs	r0, #49	@ 0x31
 8007718:	f7f9 fc68 	bl	8000fec <LCD_IO_WriteData>
 800771c:	2033      	movs	r0, #51	@ 0x33
 800771e:	f7f9 fc65 	bl	8000fec <LCD_IO_WriteData>
 8007722:	2042      	movs	r0, #66	@ 0x42
 8007724:	f7f9 fc62 	bl	8000fec <LCD_IO_WriteData>
 8007728:	2005      	movs	r0, #5
 800772a:	f7f9 fc5f 	bl	8000fec <LCD_IO_WriteData>
 800772e:	200c      	movs	r0, #12
 8007730:	f7f9 fc5c 	bl	8000fec <LCD_IO_WriteData>
 8007734:	200a      	movs	r0, #10
 8007736:	f7f9 fc59 	bl	8000fec <LCD_IO_WriteData>
 800773a:	2028      	movs	r0, #40	@ 0x28
 800773c:	f7f9 fc56 	bl	8000fec <LCD_IO_WriteData>
 8007740:	202f      	movs	r0, #47	@ 0x2f
 8007742:	f7f9 fc53 	bl	8000fec <LCD_IO_WriteData>
 8007746:	200f      	movs	r0, #15
 8007748:	f7f9 fc50 	bl	8000fec <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800774c:	2011      	movs	r0, #17
 800774e:	f7f9 fc69 	bl	8001024 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8007752:	20c8      	movs	r0, #200	@ 0xc8
 8007754:	f7f9 fcb4 	bl	80010c0 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8007758:	2029      	movs	r0, #41	@ 0x29
 800775a:	f7f9 fc63 	bl	8001024 <LCD_IO_WriteReg>
}
 800775e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8007762:	202c      	movs	r0, #44	@ 0x2c
 8007764:	f7f9 bc5e 	b.w	8001024 <LCD_IO_WriteReg>

08007768 <ili9341_ReadID>:
{
 8007768:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800776a:	f7f9 fc2f 	bl	8000fcc <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 800776e:	2103      	movs	r1, #3
 8007770:	20d3      	movs	r0, #211	@ 0xd3
 8007772:	f7f9 fc73 	bl	800105c <LCD_IO_ReadData>
}
 8007776:	b280      	uxth	r0, r0
 8007778:	bd08      	pop	{r3, pc}

0800777a <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 800777a:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800777c:	b2c4      	uxtb	r4, r0
 800777e:	2202      	movs	r2, #2
 8007780:	2103      	movs	r1, #3
 8007782:	4620      	mov	r0, r4
 8007784:	f7f9 fbd8 	bl	8000f38 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8007788:	200a      	movs	r0, #10
 800778a:	f7f9 fc1d 	bl	8000fc8 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800778e:	4620      	mov	r0, r4
 8007790:	2200      	movs	r2, #0
 8007792:	2103      	movs	r1, #3
 8007794:	f7f9 fbd0 	bl	8000f38 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8007798:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800779c:	2002      	movs	r0, #2
 800779e:	f7f9 bc13 	b.w	8000fc8 <IOE_Delay>

080077a2 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 80077a2:	b538      	push	{r3, r4, r5, lr}
 80077a4:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80077a6:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 80077a8:	f7f9 fbc4 	bl	8000f34 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80077ac:	2100      	movs	r1, #0
 80077ae:	4620      	mov	r0, r4
 80077b0:	f7f9 fbda 	bl	8000f68 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80077b4:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80077b6:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80077b8:	4620      	mov	r0, r4
 80077ba:	f7f9 fbd5 	bl	8000f68 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80077be:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 80077c2:	b280      	uxth	r0, r0
 80077c4:	bd38      	pop	{r3, r4, r5, pc}

080077c6 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 80077c6:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 80077c8:	b2c4      	uxtb	r4, r0
 80077ca:	2140      	movs	r1, #64	@ 0x40
 80077cc:	4620      	mov	r0, r4
 80077ce:	f7f9 fbcb 	bl	8000f68 <IOE_Read>
  
  if(state > 0)
 80077d2:	0603      	lsls	r3, r0, #24
 80077d4:	d507      	bpl.n	80077e6 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 80077d6:	214c      	movs	r1, #76	@ 0x4c
 80077d8:	4620      	mov	r0, r4
 80077da:	f7f9 fbc5 	bl	8000f68 <IOE_Read>
 80077de:	3800      	subs	r0, #0
 80077e0:	bf18      	it	ne
 80077e2:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 80077e4:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80077e6:	2201      	movs	r2, #1
 80077e8:	214b      	movs	r1, #75	@ 0x4b
 80077ea:	4620      	mov	r0, r4
 80077ec:	f7f9 fba4 	bl	8000f38 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80077f0:	4620      	mov	r0, r4
 80077f2:	2200      	movs	r2, #0
 80077f4:	214b      	movs	r1, #75	@ 0x4b
 80077f6:	f7f9 fb9f 	bl	8000f38 <IOE_Write>
  uint8_t ret = 0;
 80077fa:	2000      	movs	r0, #0
 80077fc:	e7f2      	b.n	80077e4 <stmpe811_TS_DetectTouch+0x1e>

080077fe <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 80077fe:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8007800:	2304      	movs	r3, #4
 8007802:	b2c4      	uxtb	r4, r0
{
 8007804:	460e      	mov	r6, r1
 8007806:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8007808:	21d7      	movs	r1, #215	@ 0xd7
 800780a:	eb0d 0203 	add.w	r2, sp, r3
 800780e:	4620      	mov	r0, r4
 8007810:	f7f9 fbc4 	bl	8000f9c <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8007814:	9b01      	ldr	r3, [sp, #4]
 8007816:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8007818:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800781a:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800781e:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8007820:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8007822:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8007824:	2201      	movs	r2, #1
 8007826:	214b      	movs	r1, #75	@ 0x4b
 8007828:	f7f9 fb86 	bl	8000f38 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800782c:	2200      	movs	r2, #0
 800782e:	214b      	movs	r1, #75	@ 0x4b
 8007830:	4620      	mov	r0, r4
 8007832:	f7f9 fb81 	bl	8000f38 <IOE_Write>
}
 8007836:	b002      	add	sp, #8
 8007838:	bd70      	pop	{r4, r5, r6, pc}
	...

0800783c <stmpe811_Init>:
{
 800783c:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800783e:	4a0a      	ldr	r2, [pc, #40]	@ (8007868 <stmpe811_Init+0x2c>)
 8007840:	7813      	ldrb	r3, [r2, #0]
 8007842:	4298      	cmp	r0, r3
{
 8007844:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8007846:	d00d      	beq.n	8007864 <stmpe811_Init+0x28>
 8007848:	7851      	ldrb	r1, [r2, #1]
 800784a:	4288      	cmp	r0, r1
 800784c:	d00a      	beq.n	8007864 <stmpe811_Init+0x28>
 800784e:	b10b      	cbz	r3, 8007854 <stmpe811_Init+0x18>
 8007850:	b941      	cbnz	r1, 8007864 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8007852:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 8007854:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8007856:	f7f9 fb6d 	bl	8000f34 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 800785a:	4620      	mov	r0, r4
}
 800785c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8007860:	f7ff bf8b 	b.w	800777a <stmpe811_Reset>
}
 8007864:	bd10      	pop	{r4, pc}
 8007866:	bf00      	nop
 8007868:	20004584 	.word	0x20004584

0800786c <stmpe811_EnableGlobalIT>:
{
 800786c:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800786e:	b2c4      	uxtb	r4, r0
 8007870:	2109      	movs	r1, #9
 8007872:	4620      	mov	r0, r4
 8007874:	f7f9 fb78 	bl	8000f68 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8007878:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800787c:	b2d2      	uxtb	r2, r2
 800787e:	4620      	mov	r0, r4
 8007880:	2109      	movs	r1, #9
}
 8007882:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8007886:	f7f9 bb57 	b.w	8000f38 <IOE_Write>

0800788a <stmpe811_DisableGlobalIT>:
{
 800788a:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800788c:	b2c4      	uxtb	r4, r0
 800788e:	2109      	movs	r1, #9
 8007890:	4620      	mov	r0, r4
 8007892:	f7f9 fb69 	bl	8000f68 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8007896:	2109      	movs	r1, #9
 8007898:	f000 02fe 	and.w	r2, r0, #254	@ 0xfe
 800789c:	4620      	mov	r0, r4
}
 800789e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80078a2:	f7f9 bb49 	b.w	8000f38 <IOE_Write>

080078a6 <stmpe811_EnableITSource>:
{
 80078a6:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80078a8:	b2c4      	uxtb	r4, r0
{
 80078aa:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80078ac:	4620      	mov	r0, r4
 80078ae:	210a      	movs	r1, #10
 80078b0:	f7f9 fb5a 	bl	8000f68 <IOE_Read>
  tmp |= Source; 
 80078b4:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80078b8:	b2d2      	uxtb	r2, r2
 80078ba:	4620      	mov	r0, r4
 80078bc:	210a      	movs	r1, #10
}
 80078be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80078c2:	f7f9 bb39 	b.w	8000f38 <IOE_Write>

080078c6 <stmpe811_TS_EnableIT>:
{
 80078c6:	b510      	push	{r4, lr}
 80078c8:	4604      	mov	r4, r0
  IOE_ITConfig();
 80078ca:	f7f9 fb34 	bl	8000f36 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 80078ce:	4620      	mov	r0, r4
 80078d0:	211f      	movs	r1, #31
 80078d2:	f7ff ffe8 	bl	80078a6 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 80078d6:	4620      	mov	r0, r4
}
 80078d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 80078dc:	f7ff bfc6 	b.w	800786c <stmpe811_EnableGlobalIT>

080078e0 <stmpe811_DisableITSource>:
{
 80078e0:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80078e2:	b2c4      	uxtb	r4, r0
{
 80078e4:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80078e6:	4620      	mov	r0, r4
 80078e8:	210a      	movs	r1, #10
 80078ea:	f7f9 fb3d 	bl	8000f68 <IOE_Read>
  tmp &= ~Source; 
 80078ee:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80078f2:	b2d2      	uxtb	r2, r2
 80078f4:	4620      	mov	r0, r4
 80078f6:	210a      	movs	r1, #10
}
 80078f8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80078fc:	f7f9 bb1c 	b.w	8000f38 <IOE_Write>

08007900 <stmpe811_TS_DisableIT>:
{
 8007900:	b510      	push	{r4, lr}
 8007902:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8007904:	f7ff ffc1 	bl	800788a <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8007908:	4620      	mov	r0, r4
 800790a:	211f      	movs	r1, #31
}
 800790c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8007910:	f7ff bfe6 	b.w	80078e0 <stmpe811_DisableITSource>

08007914 <stmpe811_ReadGITStatus>:
{
 8007914:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8007916:	b2c0      	uxtb	r0, r0
{
 8007918:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800791a:	210b      	movs	r1, #11
 800791c:	f7f9 fb24 	bl	8000f68 <IOE_Read>
}
 8007920:	4020      	ands	r0, r4
 8007922:	bd10      	pop	{r4, pc}

08007924 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8007924:	211f      	movs	r1, #31
 8007926:	f7ff bff5 	b.w	8007914 <stmpe811_ReadGITStatus>

0800792a <stmpe811_ClearGlobalIT>:
{
 800792a:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 800792c:	b2c0      	uxtb	r0, r0
 800792e:	210b      	movs	r1, #11
 8007930:	f7f9 bb02 	b.w	8000f38 <IOE_Write>

08007934 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8007934:	211f      	movs	r1, #31
 8007936:	f7ff bff8 	b.w	800792a <stmpe811_ClearGlobalIT>

0800793a <stmpe811_IO_EnableAF>:
{
 800793a:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800793c:	b2c4      	uxtb	r4, r0
{
 800793e:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8007940:	4620      	mov	r0, r4
 8007942:	2117      	movs	r1, #23
 8007944:	f7f9 fb10 	bl	8000f68 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8007948:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800794c:	b2d2      	uxtb	r2, r2
 800794e:	4620      	mov	r0, r4
 8007950:	2117      	movs	r1, #23
}
 8007952:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8007956:	f7f9 baef 	b.w	8000f38 <IOE_Write>

0800795a <stmpe811_TS_Start>:
{
 800795a:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800795c:	b2c4      	uxtb	r4, r0
{
 800795e:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8007960:	2104      	movs	r1, #4
 8007962:	4620      	mov	r0, r4
 8007964:	f7f9 fb00 	bl	8000f68 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8007968:	2104      	movs	r1, #4
 800796a:	f000 02fb 	and.w	r2, r0, #251	@ 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800796e:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8007970:	4620      	mov	r0, r4
 8007972:	f7f9 fae1 	bl	8000f38 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8007976:	4630      	mov	r0, r6
 8007978:	21f0      	movs	r1, #240	@ 0xf0
 800797a:	f7ff ffde 	bl	800793a <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800797e:	f005 02f8 	and.w	r2, r5, #248	@ 0xf8
 8007982:	4620      	mov	r0, r4
 8007984:	2104      	movs	r1, #4
 8007986:	f7f9 fad7 	bl	8000f38 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800798a:	2249      	movs	r2, #73	@ 0x49
 800798c:	2120      	movs	r1, #32
 800798e:	4620      	mov	r0, r4
 8007990:	f7f9 fad2 	bl	8000f38 <IOE_Write>
  IOE_Delay(2); 
 8007994:	2002      	movs	r0, #2
 8007996:	f7f9 fb17 	bl	8000fc8 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800799a:	4620      	mov	r0, r4
 800799c:	2201      	movs	r2, #1
 800799e:	2121      	movs	r1, #33	@ 0x21
 80079a0:	f7f9 faca 	bl	8000f38 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 80079a4:	4620      	mov	r0, r4
 80079a6:	229a      	movs	r2, #154	@ 0x9a
 80079a8:	2141      	movs	r1, #65	@ 0x41
 80079aa:	f7f9 fac5 	bl	8000f38 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 80079ae:	4620      	mov	r0, r4
 80079b0:	2201      	movs	r2, #1
 80079b2:	214a      	movs	r1, #74	@ 0x4a
 80079b4:	f7f9 fac0 	bl	8000f38 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80079b8:	4620      	mov	r0, r4
 80079ba:	2201      	movs	r2, #1
 80079bc:	214b      	movs	r1, #75	@ 0x4b
 80079be:	f7f9 fabb 	bl	8000f38 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80079c2:	4620      	mov	r0, r4
 80079c4:	2200      	movs	r2, #0
 80079c6:	214b      	movs	r1, #75	@ 0x4b
 80079c8:	f7f9 fab6 	bl	8000f38 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 80079cc:	4620      	mov	r0, r4
 80079ce:	2201      	movs	r2, #1
 80079d0:	2156      	movs	r1, #86	@ 0x56
 80079d2:	f7f9 fab1 	bl	8000f38 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 80079d6:	4620      	mov	r0, r4
 80079d8:	2201      	movs	r2, #1
 80079da:	2158      	movs	r1, #88	@ 0x58
 80079dc:	f7f9 faac 	bl	8000f38 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 80079e0:	4620      	mov	r0, r4
 80079e2:	2201      	movs	r2, #1
 80079e4:	2140      	movs	r1, #64	@ 0x40
 80079e6:	f7f9 faa7 	bl	8000f38 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 80079ea:	4620      	mov	r0, r4
 80079ec:	22ff      	movs	r2, #255	@ 0xff
 80079ee:	210b      	movs	r1, #11
 80079f0:	f7f9 faa2 	bl	8000f38 <IOE_Write>
}
 80079f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 80079f8:	2002      	movs	r0, #2
 80079fa:	f7f9 bae5 	b.w	8000fc8 <IOE_Delay>
	...

08007a00 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8007a00:	4b05      	ldr	r3, [pc, #20]	@ (8007a18 <SystemInit+0x18>)
 8007a02:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8007a06:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 8007a0a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8007a0e:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8007a12:	609a      	str	r2, [r3, #8]
#endif
}
 8007a14:	4770      	bx	lr
 8007a16:	bf00      	nop
 8007a18:	e000ed00 	.word	0xe000ed00

08007a1c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8007a1c:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8007a1e:	4b0b      	ldr	r3, [pc, #44]	@ (8007a4c <HAL_Init+0x30>)
 8007a20:	681a      	ldr	r2, [r3, #0]
 8007a22:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8007a26:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8007a28:	681a      	ldr	r2, [r3, #0]
 8007a2a:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8007a2e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8007a30:	681a      	ldr	r2, [r3, #0]
 8007a32:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8007a36:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8007a38:	2003      	movs	r0, #3
 8007a3a:	f000 f82f 	bl	8007a9c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8007a3e:	2000      	movs	r0, #0
 8007a40:	f7f9 fde4 	bl	800160c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8007a44:	f7f9 fbae 	bl	80011a4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8007a48:	2000      	movs	r0, #0
 8007a4a:	bd08      	pop	{r3, pc}
 8007a4c:	40023c00 	.word	0x40023c00

08007a50 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8007a50:	4a03      	ldr	r2, [pc, #12]	@ (8007a60 <HAL_IncTick+0x10>)
 8007a52:	4b04      	ldr	r3, [pc, #16]	@ (8007a64 <HAL_IncTick+0x14>)
 8007a54:	6811      	ldr	r1, [r2, #0]
 8007a56:	781b      	ldrb	r3, [r3, #0]
 8007a58:	440b      	add	r3, r1
 8007a5a:	6013      	str	r3, [r2, #0]
}
 8007a5c:	4770      	bx	lr
 8007a5e:	bf00      	nop
 8007a60:	20004588 	.word	0x20004588
 8007a64:	20000078 	.word	0x20000078

08007a68 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8007a68:	4b01      	ldr	r3, [pc, #4]	@ (8007a70 <HAL_GetTick+0x8>)
 8007a6a:	6818      	ldr	r0, [r3, #0]
}
 8007a6c:	4770      	bx	lr
 8007a6e:	bf00      	nop
 8007a70:	20004588 	.word	0x20004588

08007a74 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8007a74:	b538      	push	{r3, r4, r5, lr}
 8007a76:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8007a78:	f7ff fff6 	bl	8007a68 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8007a7c:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8007a7e:	bf1c      	itt	ne
 8007a80:	4b05      	ldrne	r3, [pc, #20]	@ (8007a98 <HAL_Delay+0x24>)
 8007a82:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8007a84:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8007a86:	bf18      	it	ne
 8007a88:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8007a8a:	f7ff ffed 	bl	8007a68 <HAL_GetTick>
 8007a8e:	1b43      	subs	r3, r0, r5
 8007a90:	42a3      	cmp	r3, r4
 8007a92:	d3fa      	bcc.n	8007a8a <HAL_Delay+0x16>
  {
  }
}
 8007a94:	bd38      	pop	{r3, r4, r5, pc}
 8007a96:	bf00      	nop
 8007a98:	20000078 	.word	0x20000078

08007a9c <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8007a9c:	4907      	ldr	r1, [pc, #28]	@ (8007abc <HAL_NVIC_SetPriorityGrouping+0x20>)
 8007a9e:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8007aa0:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8007aa4:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8007aa6:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8007aa8:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8007aac:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8007aae:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8007ab0:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8007ab4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 8007ab8:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8007aba:	4770      	bx	lr
 8007abc:	e000ed00 	.word	0xe000ed00

08007ac0 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8007ac0:	4b16      	ldr	r3, [pc, #88]	@ (8007b1c <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8007ac2:	b530      	push	{r4, r5, lr}
 8007ac4:	68dc      	ldr	r4, [r3, #12]
 8007ac6:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8007aca:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8007ace:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8007ad0:	2b04      	cmp	r3, #4
 8007ad2:	bf28      	it	cs
 8007ad4:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8007ad6:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8007ad8:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8007adc:	bf8c      	ite	hi
 8007ade:	3c03      	subhi	r4, #3
 8007ae0:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8007ae2:	fa05 f303 	lsl.w	r3, r5, r3
 8007ae6:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8007aea:	40a5      	lsls	r5, r4
 8007aec:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8007af0:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 8007af2:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8007af4:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007af8:	bfac      	ite	ge
 8007afa:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007afe:	4a08      	ldrlt	r2, [pc, #32]	@ (8007b20 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007b00:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007b04:	bfb8      	it	lt
 8007b06:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007b0a:	b2db      	uxtb	r3, r3
 8007b0c:	bfaa      	itet	ge
 8007b0e:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007b12:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007b14:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8007b18:	bd30      	pop	{r4, r5, pc}
 8007b1a:	bf00      	nop
 8007b1c:	e000ed00 	.word	0xe000ed00
 8007b20:	e000ed14 	.word	0xe000ed14

08007b24 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8007b24:	2800      	cmp	r0, #0
 8007b26:	db07      	blt.n	8007b38 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8007b28:	4a04      	ldr	r2, [pc, #16]	@ (8007b3c <HAL_NVIC_EnableIRQ+0x18>)
 8007b2a:	0941      	lsrs	r1, r0, #5
 8007b2c:	2301      	movs	r3, #1
 8007b2e:	f000 001f 	and.w	r0, r0, #31
 8007b32:	4083      	lsls	r3, r0
 8007b34:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8007b38:	4770      	bx	lr
 8007b3a:	bf00      	nop
 8007b3c:	e000e100 	.word	0xe000e100

08007b40 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8007b40:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8007b42:	4604      	mov	r4, r0
 8007b44:	b150      	cbz	r0, 8007b5c <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8007b46:	7943      	ldrb	r3, [r0, #5]
 8007b48:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8007b4c:	b913      	cbnz	r3, 8007b54 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8007b4e:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8007b50:	f7f9 fb48 	bl	80011e4 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8007b54:	2301      	movs	r3, #1
 8007b56:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8007b58:	2000      	movs	r0, #0
}
 8007b5a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007b5c:	2001      	movs	r0, #1
 8007b5e:	e7fc      	b.n	8007b5a <HAL_CRC_Init+0x1a>

08007b60 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8007b60:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8007b62:	4604      	mov	r4, r0
 8007b64:	b320      	cbz	r0, 8007bb0 <HAL_DMA2D_Init+0x50>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8007b66:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 8007b6a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8007b6e:	b91b      	cbnz	r3, 8007b78 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8007b70:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8007b74:	f7f9 fb4e 	bl	8001214 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8007b78:	2302      	movs	r3, #2
 8007b7a:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8007b7e:	6823      	ldr	r3, [r4, #0]
 8007b80:	6861      	ldr	r1, [r4, #4]
 8007b82:	681a      	ldr	r2, [r3, #0]
 8007b84:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8007b88:	430a      	orrs	r2, r1
 8007b8a:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8007b8c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8007b8e:	68a1      	ldr	r1, [r4, #8]
 8007b90:	f022 0207 	bic.w	r2, r2, #7
 8007b94:	430a      	orrs	r2, r1
 8007b96:	635a      	str	r2, [r3, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8007b98:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8007b9a:	68e1      	ldr	r1, [r4, #12]
 8007b9c:	f36f 020d 	bfc	r2, #0, #14
 8007ba0:	430a      	orrs	r2, r1
 8007ba2:	641a      	str	r2, [r3, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8007ba4:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8007ba6:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8007ba8:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8007baa:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 8007bae:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007bb0:	2001      	movs	r0, #1
 8007bb2:	e7fc      	b.n	8007bae <HAL_DMA2D_Init+0x4e>

08007bb4 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 8007bb4:	4770      	bx	lr

08007bb6 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 8007bb6:	4770      	bx	lr

08007bb8 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8007bb8:	6803      	ldr	r3, [r0, #0]
{
 8007bba:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8007bbc:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8007bbe:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8007bc0:	07f2      	lsls	r2, r6, #31
{
 8007bc2:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8007bc4:	d514      	bpl.n	8007bf0 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 8007bc6:	05e9      	lsls	r1, r5, #23
 8007bc8:	d512      	bpl.n	8007bf0 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8007bca:	681a      	ldr	r2, [r3, #0]
 8007bcc:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8007bd0:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8007bd2:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8007bd4:	f042 0201 	orr.w	r2, r2, #1
 8007bd8:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8007bda:	2201      	movs	r2, #1
 8007bdc:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007bde:	2304      	movs	r3, #4
 8007be0:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8007be4:	2300      	movs	r3, #0
 8007be6:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8007bea:	6943      	ldr	r3, [r0, #20]
 8007bec:	b103      	cbz	r3, 8007bf0 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 8007bee:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8007bf0:	06b2      	lsls	r2, r6, #26
 8007bf2:	d516      	bpl.n	8007c22 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 8007bf4:	04ab      	lsls	r3, r5, #18
 8007bf6:	d514      	bpl.n	8007c22 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8007bf8:	6823      	ldr	r3, [r4, #0]
 8007bfa:	681a      	ldr	r2, [r3, #0]
 8007bfc:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8007c00:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8007c02:	2220      	movs	r2, #32
 8007c04:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8007c06:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007c08:	f043 0302 	orr.w	r3, r3, #2
 8007c0c:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007c0e:	2304      	movs	r3, #4
 8007c10:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8007c14:	2300      	movs	r3, #0
 8007c16:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8007c1a:	6963      	ldr	r3, [r4, #20]
 8007c1c:	b10b      	cbz	r3, 8007c22 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8007c1e:	4620      	mov	r0, r4
 8007c20:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8007c22:	0730      	lsls	r0, r6, #28
 8007c24:	d516      	bpl.n	8007c54 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8007c26:	0529      	lsls	r1, r5, #20
 8007c28:	d514      	bpl.n	8007c54 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8007c2a:	6823      	ldr	r3, [r4, #0]
 8007c2c:	681a      	ldr	r2, [r3, #0]
 8007c2e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8007c32:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8007c34:	2208      	movs	r2, #8
 8007c36:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8007c38:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007c3a:	f043 0304 	orr.w	r3, r3, #4
 8007c3e:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007c40:	2304      	movs	r3, #4
 8007c42:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8007c46:	2300      	movs	r3, #0
 8007c48:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8007c4c:	6963      	ldr	r3, [r4, #20]
 8007c4e:	b10b      	cbz	r3, 8007c54 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8007c50:	4620      	mov	r0, r4
 8007c52:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8007c54:	0772      	lsls	r2, r6, #29
 8007c56:	d50b      	bpl.n	8007c70 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 8007c58:	056b      	lsls	r3, r5, #21
 8007c5a:	d509      	bpl.n	8007c70 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8007c5c:	6823      	ldr	r3, [r4, #0]
 8007c5e:	681a      	ldr	r2, [r3, #0]
 8007c60:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8007c64:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8007c66:	2204      	movs	r2, #4
 8007c68:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8007c6a:	4620      	mov	r0, r4
 8007c6c:	f7ff ffa2 	bl	8007bb4 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8007c70:	07b0      	lsls	r0, r6, #30
 8007c72:	d514      	bpl.n	8007c9e <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8007c74:	05a9      	lsls	r1, r5, #22
 8007c76:	d512      	bpl.n	8007c9e <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8007c78:	6823      	ldr	r3, [r4, #0]
 8007c7a:	681a      	ldr	r2, [r3, #0]
 8007c7c:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8007c80:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8007c82:	2202      	movs	r2, #2
 8007c84:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8007c86:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007c88:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8007c8a:	2301      	movs	r3, #1
 8007c8c:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8007c90:	2300      	movs	r3, #0
 8007c92:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8007c96:	6923      	ldr	r3, [r4, #16]
 8007c98:	b10b      	cbz	r3, 8007c9e <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8007c9a:	4620      	mov	r0, r4
 8007c9c:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8007c9e:	06f2      	lsls	r2, r6, #27
 8007ca0:	d513      	bpl.n	8007cca <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8007ca2:	04eb      	lsls	r3, r5, #19
 8007ca4:	d511      	bpl.n	8007cca <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8007ca6:	6823      	ldr	r3, [r4, #0]
 8007ca8:	681a      	ldr	r2, [r3, #0]
 8007caa:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8007cae:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8007cb0:	2210      	movs	r2, #16
 8007cb2:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8007cb4:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007cb6:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8007cb8:	2301      	movs	r3, #1
 8007cba:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8007cbe:	2300      	movs	r3, #0
 8007cc0:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8007cc4:	4620      	mov	r0, r4
 8007cc6:	f7ff ff76 	bl	8007bb6 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8007cca:	bd70      	pop	{r4, r5, r6, pc}

08007ccc <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8007ccc:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8007cce:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 8007cd2:	2a01      	cmp	r2, #1
{
 8007cd4:	4603      	mov	r3, r0
 8007cd6:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hdma2d);
 8007cda:	d02b      	beq.n	8007d34 <HAL_DMA2D_ConfigLayer+0x68>
 8007cdc:	2201      	movs	r2, #1
 8007cde:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8007ce2:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8007ce6:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 8007cea:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 8007cee:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 8007cf0:	4f17      	ldr	r7, [pc, #92]	@ (8007d50 <HAL_DMA2D_ConfigLayer+0x84>)
 8007cf2:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007cf6:	3c09      	subs	r4, #9
 8007cf8:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8007cfa:	bf9c      	itt	ls
 8007cfc:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
 8007d00:	4310      	orrls	r0, r2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8007d02:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8007d06:	681a      	ldr	r2, [r3, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8007d08:	bf88      	it	hi
 8007d0a:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8007d0e:	b991      	cbnz	r1, 8007d36 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8007d10:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8007d12:	4039      	ands	r1, r7
 8007d14:	4301      	orrs	r1, r0
 8007d16:	6251      	str	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007d18:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8007d1a:	6999      	ldr	r1, [r3, #24]
 8007d1c:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007d1e:	d803      	bhi.n	8007d28 <HAL_DMA2D_ConfigLayer+0x5c>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8007d20:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8007d22:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8007d26:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8007d28:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8007d2a:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8007d2c:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 8007d30:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 8007d34:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8007d36:	69d1      	ldr	r1, [r2, #28]
 8007d38:	4039      	ands	r1, r7
 8007d3a:	4301      	orrs	r1, r0
 8007d3c:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8007d3e:	1999      	adds	r1, r3, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007d40:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8007d42:	6989      	ldr	r1, [r1, #24]
 8007d44:	6111      	str	r1, [r2, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8007d46:	bf9c      	itt	ls
 8007d48:	f025 457f 	bicls.w	r5, r5, #4278190080	@ 0xff000000
 8007d4c:	6215      	strls	r5, [r2, #32]
 8007d4e:	e7eb      	b.n	8007d28 <HAL_DMA2D_ConfigLayer+0x5c>
 8007d50:	00fcfff0 	.word	0x00fcfff0

08007d54 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8007d54:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8007d58:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 8007f18 <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8007d5c:	4a6c      	ldr	r2, [pc, #432]	@ (8007f10 <HAL_GPIO_Init+0x1bc>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8007d5e:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8007d60:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8007d62:	2401      	movs	r4, #1
 8007d64:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8007d66:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8007d6a:	43ac      	bics	r4, r5
 8007d6c:	f040 80b7 	bne.w	8007ede <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8007d70:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8007d72:	2703      	movs	r7, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8007d74:	f005 0403 	and.w	r4, r5, #3
 8007d78:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8007d7c:	fa07 fc08 	lsl.w	ip, r7, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8007d80:	1e67      	subs	r7, r4, #1
 8007d82:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8007d84:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8007d88:	d834      	bhi.n	8007df4 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8007d8a:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8007d8c:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 8007d90:	68cf      	ldr	r7, [r1, #12]
 8007d92:	fa07 f708 	lsl.w	r7, r7, r8
 8007d96:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8007d9a:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8007d9c:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8007d9e:	ea27 0e06 	bic.w	lr, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8007da2:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8007da6:	409f      	lsls	r7, r3
 8007da8:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8007dac:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8007dae:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8007db0:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8007db4:	688f      	ldr	r7, [r1, #8]
 8007db6:	fa07 f708 	lsl.w	r7, r7, r8
 8007dba:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8007dbe:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8007dc0:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8007dc2:	d119      	bne.n	8007df8 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8007dc4:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8007dc8:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8007dcc:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8007dd0:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8007dd4:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8007dd8:	f04f 0e0f 	mov.w	lr, #15
 8007ddc:	fa0e fe0b 	lsl.w	lr, lr, fp
 8007de0:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8007de4:	690f      	ldr	r7, [r1, #16]
 8007de6:	fa07 f70b 	lsl.w	r7, r7, fp
 8007dea:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8007dee:	f8ca 7020 	str.w	r7, [sl, #32]
 8007df2:	e001      	b.n	8007df8 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8007df4:	2c03      	cmp	r4, #3
 8007df6:	d1da      	bne.n	8007dae <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8007df8:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8007dfa:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8007dfe:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8007e02:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8007e04:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 8007e08:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8007e0a:	d068      	beq.n	8007ede <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8007e0c:	2400      	movs	r4, #0
 8007e0e:	9401      	str	r4, [sp, #4]
 8007e10:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8007e14:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 8007e18:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 8007e1c:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8007e20:	f023 0703 	bic.w	r7, r3, #3
 8007e24:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8007e28:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 8007e2c:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 8007e30:	9401      	str	r4, [sp, #4]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8007e32:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8007e36:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8007e38:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8007e3c:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8007e40:	240f      	movs	r4, #15
 8007e42:	fa04 f40c 	lsl.w	r4, r4, ip
 8007e46:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8007e4a:	4c32      	ldr	r4, [pc, #200]	@ (8007f14 <HAL_GPIO_Init+0x1c0>)
 8007e4c:	42a0      	cmp	r0, r4
 8007e4e:	d04d      	beq.n	8007eec <HAL_GPIO_Init+0x198>
 8007e50:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8007e54:	42a0      	cmp	r0, r4
 8007e56:	d04b      	beq.n	8007ef0 <HAL_GPIO_Init+0x19c>
 8007e58:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8007e5c:	42a0      	cmp	r0, r4
 8007e5e:	d049      	beq.n	8007ef4 <HAL_GPIO_Init+0x1a0>
 8007e60:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8007e64:	42a0      	cmp	r0, r4
 8007e66:	d047      	beq.n	8007ef8 <HAL_GPIO_Init+0x1a4>
 8007e68:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8007e6c:	42a0      	cmp	r0, r4
 8007e6e:	d045      	beq.n	8007efc <HAL_GPIO_Init+0x1a8>
 8007e70:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8007e74:	42a0      	cmp	r0, r4
 8007e76:	d043      	beq.n	8007f00 <HAL_GPIO_Init+0x1ac>
 8007e78:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8007e7c:	42a0      	cmp	r0, r4
 8007e7e:	d041      	beq.n	8007f04 <HAL_GPIO_Init+0x1b0>
 8007e80:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8007e84:	42a0      	cmp	r0, r4
 8007e86:	d03f      	beq.n	8007f08 <HAL_GPIO_Init+0x1b4>
 8007e88:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8007e8c:	42a0      	cmp	r0, r4
 8007e8e:	d03d      	beq.n	8007f0c <HAL_GPIO_Init+0x1b8>
 8007e90:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8007e94:	42a0      	cmp	r0, r4
 8007e96:	bf14      	ite	ne
 8007e98:	240a      	movne	r4, #10
 8007e9a:	2409      	moveq	r4, #9
 8007e9c:	fa04 f40c 	lsl.w	r4, r4, ip
 8007ea0:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 8007ea4:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR;
 8007ea6:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 8007ea8:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8007eaa:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~((uint32_t)iocurrent);
 8007eae:	bf0c      	ite	eq
 8007eb0:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8007eb2:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;
 8007eb4:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 8007eb6:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8007eb8:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~((uint32_t)iocurrent);
 8007ebc:	bf0c      	ite	eq
 8007ebe:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8007ec0:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;
 8007ec2:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8007ec4:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8007ec6:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~((uint32_t)iocurrent);
 8007eca:	bf0c      	ite	eq
 8007ecc:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8007ece:	4334      	orrne	r4, r6
        }
        EXTI->EMR = temp;
 8007ed0:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8007ed2:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8007ed4:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 8007ed6:	bf54      	ite	pl
 8007ed8:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 8007eda:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 8007edc:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8007ede:	3301      	adds	r3, #1
 8007ee0:	2b10      	cmp	r3, #16
 8007ee2:	f47f af3d 	bne.w	8007d60 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8007ee6:	b003      	add	sp, #12
 8007ee8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8007eec:	2400      	movs	r4, #0
 8007eee:	e7d5      	b.n	8007e9c <HAL_GPIO_Init+0x148>
 8007ef0:	2401      	movs	r4, #1
 8007ef2:	e7d3      	b.n	8007e9c <HAL_GPIO_Init+0x148>
 8007ef4:	2402      	movs	r4, #2
 8007ef6:	e7d1      	b.n	8007e9c <HAL_GPIO_Init+0x148>
 8007ef8:	2403      	movs	r4, #3
 8007efa:	e7cf      	b.n	8007e9c <HAL_GPIO_Init+0x148>
 8007efc:	2404      	movs	r4, #4
 8007efe:	e7cd      	b.n	8007e9c <HAL_GPIO_Init+0x148>
 8007f00:	2405      	movs	r4, #5
 8007f02:	e7cb      	b.n	8007e9c <HAL_GPIO_Init+0x148>
 8007f04:	2406      	movs	r4, #6
 8007f06:	e7c9      	b.n	8007e9c <HAL_GPIO_Init+0x148>
 8007f08:	2407      	movs	r4, #7
 8007f0a:	e7c7      	b.n	8007e9c <HAL_GPIO_Init+0x148>
 8007f0c:	2408      	movs	r4, #8
 8007f0e:	e7c5      	b.n	8007e9c <HAL_GPIO_Init+0x148>
 8007f10:	40013c00 	.word	0x40013c00
 8007f14:	40020000 	.word	0x40020000
 8007f18:	40023800 	.word	0x40023800

08007f1c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8007f1c:	6903      	ldr	r3, [r0, #16]
 8007f1e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8007f20:	bf14      	ite	ne
 8007f22:	2001      	movne	r0, #1
 8007f24:	2000      	moveq	r0, #0
 8007f26:	4770      	bx	lr

08007f28 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8007f28:	b10a      	cbz	r2, 8007f2e <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8007f2a:	6181      	str	r1, [r0, #24]
  }
}
 8007f2c:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8007f2e:	0409      	lsls	r1, r1, #16
 8007f30:	e7fb      	b.n	8007f2a <HAL_GPIO_WritePin+0x2>

08007f32 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8007f32:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8007f34:	ea01 0203 	and.w	r2, r1, r3
 8007f38:	ea21 0103 	bic.w	r1, r1, r3
 8007f3c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8007f40:	6181      	str	r1, [r0, #24]
}
 8007f42:	4770      	bx	lr

08007f44 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8007f44:	6801      	ldr	r1, [r0, #0]
 8007f46:	694b      	ldr	r3, [r1, #20]
 8007f48:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 8007f4c:	f04f 0200 	mov.w	r2, #0
 8007f50:	d010      	beq.n	8007f74 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8007f52:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 8007f56:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8007f58:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8007f5a:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8007f5c:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007f60:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8007f64:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8007f66:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8007f6a:	f043 0304 	orr.w	r3, r3, #4
 8007f6e:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 8007f70:	2001      	movs	r0, #1
 8007f72:	4770      	bx	lr
  }
  return HAL_OK;
 8007f74:	4618      	mov	r0, r3
}
 8007f76:	4770      	bx	lr

08007f78 <I2C_WaitOnFlagUntilTimeout>:
{
 8007f78:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8007f7c:	4606      	mov	r6, r0
 8007f7e:	460f      	mov	r7, r1
 8007f80:	4691      	mov	r9, r2
 8007f82:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8007f84:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8007f88:	6833      	ldr	r3, [r6, #0]
 8007f8a:	f1ba 0f01 	cmp.w	sl, #1
 8007f8e:	bf0c      	ite	eq
 8007f90:	695c      	ldreq	r4, [r3, #20]
 8007f92:	699c      	ldrne	r4, [r3, #24]
 8007f94:	ea27 0404 	bic.w	r4, r7, r4
 8007f98:	b2a4      	uxth	r4, r4
 8007f9a:	fab4 f484 	clz	r4, r4
 8007f9e:	0964      	lsrs	r4, r4, #5
 8007fa0:	45a1      	cmp	r9, r4
 8007fa2:	d001      	beq.n	8007fa8 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8007fa4:	2000      	movs	r0, #0
 8007fa6:	e025      	b.n	8007ff4 <I2C_WaitOnFlagUntilTimeout+0x7c>
    if (Timeout != HAL_MAX_DELAY)
 8007fa8:	1c6a      	adds	r2, r5, #1
 8007faa:	d0ee      	beq.n	8007f8a <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007fac:	f7ff fd5c 	bl	8007a68 <HAL_GetTick>
 8007fb0:	9b08      	ldr	r3, [sp, #32]
 8007fb2:	1ac0      	subs	r0, r0, r3
 8007fb4:	42a8      	cmp	r0, r5
 8007fb6:	d801      	bhi.n	8007fbc <I2C_WaitOnFlagUntilTimeout+0x44>
 8007fb8:	2d00      	cmp	r5, #0
 8007fba:	d1e5      	bne.n	8007f88 <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8007fbc:	6833      	ldr	r3, [r6, #0]
 8007fbe:	f1ba 0f01 	cmp.w	sl, #1
 8007fc2:	bf0c      	ite	eq
 8007fc4:	695b      	ldreq	r3, [r3, #20]
 8007fc6:	699b      	ldrne	r3, [r3, #24]
 8007fc8:	ea27 0303 	bic.w	r3, r7, r3
 8007fcc:	b29b      	uxth	r3, r3
 8007fce:	fab3 f383 	clz	r3, r3
 8007fd2:	095b      	lsrs	r3, r3, #5
 8007fd4:	4599      	cmp	r9, r3
 8007fd6:	d1d7      	bne.n	8007f88 <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->PreviousState     = I2C_STATE_NONE;
 8007fd8:	2300      	movs	r3, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 8007fda:	2220      	movs	r2, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 8007fdc:	6333      	str	r3, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 8007fde:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 8007fe2:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8007fe6:	6c32      	ldr	r2, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8007fe8:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8007fec:	f042 0220 	orr.w	r2, r2, #32
 8007ff0:	6432      	str	r2, [r6, #64]	@ 0x40
          return HAL_ERROR;
 8007ff2:	2001      	movs	r0, #1
}
 8007ff4:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08007ff8 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8007ff8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007ffc:	4604      	mov	r4, r0
 8007ffe:	460f      	mov	r7, r1
 8008000:	4616      	mov	r6, r2
 8008002:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8008004:	6825      	ldr	r5, [r4, #0]
 8008006:	6968      	ldr	r0, [r5, #20]
 8008008:	ea27 0000 	bic.w	r0, r7, r0
 800800c:	b280      	uxth	r0, r0
 800800e:	b1c0      	cbz	r0, 8008042 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008010:	696b      	ldr	r3, [r5, #20]
 8008012:	055a      	lsls	r2, r3, #21
 8008014:	d517      	bpl.n	8008046 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008016:	682b      	ldr	r3, [r5, #0]
 8008018:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800801c:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800801e:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 8008022:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8008024:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8008026:	2300      	movs	r3, #0
 8008028:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800802a:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800802e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008032:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008034:	f043 0304 	orr.w	r3, r3, #4
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8008038:	6423      	str	r3, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800803a:	2300      	movs	r3, #0
 800803c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8008040:	2001      	movs	r0, #1
}
 8008042:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8008046:	1c73      	adds	r3, r6, #1
 8008048:	d0dd      	beq.n	8008006 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800804a:	f7ff fd0d 	bl	8007a68 <HAL_GetTick>
 800804e:	eba0 0008 	sub.w	r0, r0, r8
 8008052:	42b0      	cmp	r0, r6
 8008054:	d801      	bhi.n	800805a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x62>
 8008056:	2e00      	cmp	r6, #0
 8008058:	d1d4      	bne.n	8008004 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 800805a:	6823      	ldr	r3, [r4, #0]
 800805c:	695a      	ldr	r2, [r3, #20]
 800805e:	ea27 0202 	bic.w	r2, r7, r2
 8008062:	b292      	uxth	r2, r2
 8008064:	2a00      	cmp	r2, #0
 8008066:	d0cd      	beq.n	8008004 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
          hi2c->PreviousState       = I2C_STATE_NONE;
 8008068:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 800806a:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 800806c:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 800806e:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008072:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8008076:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008078:	4313      	orrs	r3, r2
 800807a:	e7dd      	b.n	8008038 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0800807c <I2C_WaitOnTXEFlagUntilTimeout>:
{
 800807c:	b570      	push	{r4, r5, r6, lr}
 800807e:	4604      	mov	r4, r0
 8008080:	460d      	mov	r5, r1
 8008082:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008084:	6823      	ldr	r3, [r4, #0]
 8008086:	695b      	ldr	r3, [r3, #20]
 8008088:	061b      	lsls	r3, r3, #24
 800808a:	d501      	bpl.n	8008090 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800808c:	2000      	movs	r0, #0
 800808e:	e01e      	b.n	80080ce <I2C_WaitOnTXEFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8008090:	4620      	mov	r0, r4
 8008092:	f7ff ff57 	bl	8007f44 <I2C_IsAcknowledgeFailed>
 8008096:	b9c8      	cbnz	r0, 80080cc <I2C_WaitOnTXEFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8008098:	1c6a      	adds	r2, r5, #1
 800809a:	d0f3      	beq.n	8008084 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800809c:	f7ff fce4 	bl	8007a68 <HAL_GetTick>
 80080a0:	1b80      	subs	r0, r0, r6
 80080a2:	42a8      	cmp	r0, r5
 80080a4:	d801      	bhi.n	80080aa <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 80080a6:	2d00      	cmp	r5, #0
 80080a8:	d1ec      	bne.n	8008084 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 80080aa:	6823      	ldr	r3, [r4, #0]
 80080ac:	695b      	ldr	r3, [r3, #20]
 80080ae:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
 80080b2:	d1e7      	bne.n	8008084 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 80080b4:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 80080b6:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 80080b8:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 80080bc:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80080c0:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 80080c2:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80080c6:	f042 0220 	orr.w	r2, r2, #32
 80080ca:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 80080cc:	2001      	movs	r0, #1
}
 80080ce:	bd70      	pop	{r4, r5, r6, pc}

080080d0 <I2C_RequestMemoryWrite>:
{
 80080d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80080d4:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80080d6:	6802      	ldr	r2, [r0, #0]
{
 80080d8:	b085      	sub	sp, #20
 80080da:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
 80080de:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80080e0:	6813      	ldr	r3, [r2, #0]
 80080e2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80080e6:	6013      	str	r3, [r2, #0]
{
 80080e8:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80080ea:	463b      	mov	r3, r7
 80080ec:	f8cd 8000 	str.w	r8, [sp]
 80080f0:	2200      	movs	r2, #0
 80080f2:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 80080f6:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80080f8:	f7ff ff3e 	bl	8007f78 <I2C_WaitOnFlagUntilTimeout>
 80080fc:	6823      	ldr	r3, [r4, #0]
 80080fe:	b138      	cbz	r0, 8008110 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8008100:	681b      	ldr	r3, [r3, #0]
 8008102:	05db      	lsls	r3, r3, #23
 8008104:	d502      	bpl.n	800810c <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8008106:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800810a:	6423      	str	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 800810c:	2603      	movs	r6, #3
 800810e:	e020      	b.n	8008152 <I2C_RequestMemoryWrite+0x82>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8008110:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8008114:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8008116:	491a      	ldr	r1, [pc, #104]	@ (8008180 <I2C_RequestMemoryWrite+0xb0>)
 8008118:	4643      	mov	r3, r8
 800811a:	463a      	mov	r2, r7
 800811c:	4620      	mov	r0, r4
 800811e:	f7ff ff6b 	bl	8007ff8 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8008122:	b9a8      	cbnz	r0, 8008150 <I2C_RequestMemoryWrite+0x80>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008124:	6823      	ldr	r3, [r4, #0]
 8008126:	9003      	str	r0, [sp, #12]
 8008128:	695a      	ldr	r2, [r3, #20]
 800812a:	9203      	str	r2, [sp, #12]
 800812c:	699b      	ldr	r3, [r3, #24]
 800812e:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8008130:	4642      	mov	r2, r8
 8008132:	4639      	mov	r1, r7
 8008134:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008136:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8008138:	f7ff ffa0 	bl	800807c <I2C_WaitOnTXEFlagUntilTimeout>
 800813c:	4606      	mov	r6, r0
 800813e:	b160      	cbz	r0, 800815a <I2C_RequestMemoryWrite+0x8a>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8008140:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008142:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008144:	bf01      	itttt	eq
 8008146:	6822      	ldreq	r2, [r4, #0]
 8008148:	6813      	ldreq	r3, [r2, #0]
 800814a:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800814e:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8008150:	2601      	movs	r6, #1
}
 8008152:	4630      	mov	r0, r6
 8008154:	b005      	add	sp, #20
 8008156:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800815a:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800815e:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8008160:	d102      	bne.n	8008168 <I2C_RequestMemoryWrite+0x98>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8008162:	b2ed      	uxtb	r5, r5
 8008164:	611d      	str	r5, [r3, #16]
 8008166:	e7f4      	b.n	8008152 <I2C_RequestMemoryWrite+0x82>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8008168:	0a2a      	lsrs	r2, r5, #8
 800816a:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800816c:	4639      	mov	r1, r7
 800816e:	4642      	mov	r2, r8
 8008170:	4620      	mov	r0, r4
 8008172:	f7ff ff83 	bl	800807c <I2C_WaitOnTXEFlagUntilTimeout>
 8008176:	2800      	cmp	r0, #0
 8008178:	d1e2      	bne.n	8008140 <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800817a:	6823      	ldr	r3, [r4, #0]
 800817c:	e7f1      	b.n	8008162 <I2C_RequestMemoryWrite+0x92>
 800817e:	bf00      	nop
 8008180:	00010002 	.word	0x00010002

08008184 <I2C_RequestMemoryRead>:
{
 8008184:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8008188:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800818a:	6803      	ldr	r3, [r0, #0]
{
 800818c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800818e:	681a      	ldr	r2, [r3, #0]
 8008190:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8008194:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008196:	681a      	ldr	r2, [r3, #0]
{
 8008198:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800819c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80081a0:	601a      	str	r2, [r3, #0]
{
 80081a2:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80081a4:	463b      	mov	r3, r7
 80081a6:	f8cd 8000 	str.w	r8, [sp]
 80081aa:	2200      	movs	r2, #0
 80081ac:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 80081b0:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80081b2:	f7ff fee1 	bl	8007f78 <I2C_WaitOnFlagUntilTimeout>
 80081b6:	6823      	ldr	r3, [r4, #0]
 80081b8:	b138      	cbz	r0, 80081ca <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80081ba:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80081bc:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80081be:	bf44      	itt	mi
 80081c0:	f44f 7300 	movmi.w	r3, #512	@ 0x200
 80081c4:	6423      	strmi	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 80081c6:	2003      	movs	r0, #3
 80081c8:	e021      	b.n	800820e <I2C_RequestMemoryRead+0x8a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80081ca:	fa5f f986 	uxtb.w	r9, r6
 80081ce:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 80081d2:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80081d4:	492b      	ldr	r1, [pc, #172]	@ (8008284 <I2C_RequestMemoryRead+0x100>)
 80081d6:	4643      	mov	r3, r8
 80081d8:	463a      	mov	r2, r7
 80081da:	4620      	mov	r0, r4
 80081dc:	f7ff ff0c 	bl	8007ff8 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80081e0:	b9a0      	cbnz	r0, 800820c <I2C_RequestMemoryRead+0x88>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80081e2:	6823      	ldr	r3, [r4, #0]
 80081e4:	9003      	str	r0, [sp, #12]
 80081e6:	695a      	ldr	r2, [r3, #20]
 80081e8:	9203      	str	r2, [sp, #12]
 80081ea:	699b      	ldr	r3, [r3, #24]
 80081ec:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80081ee:	4642      	mov	r2, r8
 80081f0:	4639      	mov	r1, r7
 80081f2:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80081f4:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80081f6:	f7ff ff41 	bl	800807c <I2C_WaitOnTXEFlagUntilTimeout>
 80081fa:	b158      	cbz	r0, 8008214 <I2C_RequestMemoryRead+0x90>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80081fc:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80081fe:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008200:	bf01      	itttt	eq
 8008202:	6822      	ldreq	r2, [r4, #0]
 8008204:	6813      	ldreq	r3, [r2, #0]
 8008206:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800820a:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 800820c:	2001      	movs	r0, #1
}
 800820e:	b004      	add	sp, #16
 8008210:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8008214:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008218:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800821a:	d11a      	bne.n	8008252 <I2C_RequestMemoryRead+0xce>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800821c:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800821e:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8008220:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8008222:	4639      	mov	r1, r7
 8008224:	4620      	mov	r0, r4
 8008226:	f7ff ff29 	bl	800807c <I2C_WaitOnTXEFlagUntilTimeout>
 800822a:	4602      	mov	r2, r0
 800822c:	2800      	cmp	r0, #0
 800822e:	d1e5      	bne.n	80081fc <I2C_RequestMemoryRead+0x78>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008230:	6821      	ldr	r1, [r4, #0]
 8008232:	680b      	ldr	r3, [r1, #0]
 8008234:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8008238:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800823a:	4620      	mov	r0, r4
 800823c:	f8cd 8000 	str.w	r8, [sp]
 8008240:	463b      	mov	r3, r7
 8008242:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8008246:	f7ff fe97 	bl	8007f78 <I2C_WaitOnFlagUntilTimeout>
 800824a:	6822      	ldr	r2, [r4, #0]
 800824c:	b160      	cbz	r0, 8008268 <I2C_RequestMemoryRead+0xe4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800824e:	6813      	ldr	r3, [r2, #0]
 8008250:	e7b4      	b.n	80081bc <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8008252:	0a2a      	lsrs	r2, r5, #8
 8008254:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8008256:	4639      	mov	r1, r7
 8008258:	4642      	mov	r2, r8
 800825a:	4620      	mov	r0, r4
 800825c:	f7ff ff0e 	bl	800807c <I2C_WaitOnTXEFlagUntilTimeout>
 8008260:	2800      	cmp	r0, #0
 8008262:	d1cb      	bne.n	80081fc <I2C_RequestMemoryRead+0x78>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8008264:	6823      	ldr	r3, [r4, #0]
 8008266:	e7d9      	b.n	800821c <I2C_RequestMemoryRead+0x98>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8008268:	f049 0301 	orr.w	r3, r9, #1
 800826c:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800826e:	4905      	ldr	r1, [pc, #20]	@ (8008284 <I2C_RequestMemoryRead+0x100>)
 8008270:	4643      	mov	r3, r8
 8008272:	463a      	mov	r2, r7
 8008274:	4620      	mov	r0, r4
 8008276:	f7ff febf 	bl	8007ff8 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800827a:	3800      	subs	r0, #0
 800827c:	bf18      	it	ne
 800827e:	2001      	movne	r0, #1
 8008280:	e7c5      	b.n	800820e <I2C_RequestMemoryRead+0x8a>
 8008282:	bf00      	nop
 8008284:	00010002 	.word	0x00010002

08008288 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8008288:	b570      	push	{r4, r5, r6, lr}
 800828a:	4604      	mov	r4, r0
 800828c:	460d      	mov	r5, r1
 800828e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8008290:	6823      	ldr	r3, [r4, #0]
 8008292:	695b      	ldr	r3, [r3, #20]
 8008294:	075b      	lsls	r3, r3, #29
 8008296:	d501      	bpl.n	800829c <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8008298:	2000      	movs	r0, #0
 800829a:	e01e      	b.n	80082da <I2C_WaitOnBTFFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800829c:	4620      	mov	r0, r4
 800829e:	f7ff fe51 	bl	8007f44 <I2C_IsAcknowledgeFailed>
 80082a2:	b9c8      	cbnz	r0, 80082d8 <I2C_WaitOnBTFFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 80082a4:	1c6a      	adds	r2, r5, #1
 80082a6:	d0f3      	beq.n	8008290 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80082a8:	f7ff fbde 	bl	8007a68 <HAL_GetTick>
 80082ac:	1b80      	subs	r0, r0, r6
 80082ae:	42a8      	cmp	r0, r5
 80082b0:	d801      	bhi.n	80082b6 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 80082b2:	2d00      	cmp	r5, #0
 80082b4:	d1ec      	bne.n	8008290 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 80082b6:	6823      	ldr	r3, [r4, #0]
 80082b8:	695b      	ldr	r3, [r3, #20]
 80082ba:	f013 0304 	ands.w	r3, r3, #4
 80082be:	d1e7      	bne.n	8008290 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 80082c0:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 80082c2:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 80082c4:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 80082c8:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80082cc:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 80082ce:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80082d2:	f042 0220 	orr.w	r2, r2, #32
 80082d6:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 80082d8:	2001      	movs	r0, #1
}
 80082da:	bd70      	pop	{r4, r5, r6, pc}

080082dc <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 80082dc:	b570      	push	{r4, r5, r6, lr}
 80082de:	4604      	mov	r4, r0
 80082e0:	460d      	mov	r5, r1
 80082e2:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80082e4:	6821      	ldr	r1, [r4, #0]
 80082e6:	694b      	ldr	r3, [r1, #20]
 80082e8:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 80082ec:	d001      	beq.n	80082f2 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 80082ee:	2000      	movs	r0, #0
 80082f0:	e011      	b.n	8008316 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 80082f2:	694a      	ldr	r2, [r1, #20]
 80082f4:	06d2      	lsls	r2, r2, #27
 80082f6:	d50f      	bpl.n	8008318 <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80082f8:	f06f 0210 	mvn.w	r2, #16
 80082fc:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80082fe:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8008300:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8008302:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008306:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800830a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800830c:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 800830e:	2300      	movs	r3, #0
 8008310:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8008314:	2001      	movs	r0, #1
}
 8008316:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008318:	f7ff fba6 	bl	8007a68 <HAL_GetTick>
 800831c:	1b80      	subs	r0, r0, r6
 800831e:	42a8      	cmp	r0, r5
 8008320:	d801      	bhi.n	8008326 <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 8008322:	2d00      	cmp	r5, #0
 8008324:	d1de      	bne.n	80082e4 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 8008326:	6823      	ldr	r3, [r4, #0]
 8008328:	695b      	ldr	r3, [r3, #20]
 800832a:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 800832e:	d1d9      	bne.n	80082e4 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->State               = HAL_I2C_STATE_READY;
 8008330:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8008332:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8008334:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008338:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800833c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800833e:	4313      	orrs	r3, r2
 8008340:	e7e4      	b.n	800830c <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
	...

08008344 <HAL_I2C_Init>:
{
 8008344:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8008346:	4604      	mov	r4, r0
 8008348:	b908      	cbnz	r0, 800834e <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800834a:	2001      	movs	r0, #1
}
 800834c:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800834e:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8008352:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8008356:	b91b      	cbnz	r3, 8008360 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8008358:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 800835c:	f7f8 ff7c 	bl	8001258 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8008360:	2324      	movs	r3, #36	@ 0x24
 8008362:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8008366:	6823      	ldr	r3, [r4, #0]
 8008368:	681a      	ldr	r2, [r3, #0]
 800836a:	f022 0201 	bic.w	r2, r2, #1
 800836e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8008370:	681a      	ldr	r2, [r3, #0]
 8008372:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8008376:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8008378:	681a      	ldr	r2, [r3, #0]
 800837a:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800837e:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8008380:	f000 fea8 	bl	80090d4 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8008384:	4b3f      	ldr	r3, [pc, #252]	@ (8008484 <HAL_I2C_Init+0x140>)
 8008386:	6865      	ldr	r5, [r4, #4]
 8008388:	429d      	cmp	r5, r3
 800838a:	bf94      	ite	ls
 800838c:	4b3e      	ldrls	r3, [pc, #248]	@ (8008488 <HAL_I2C_Init+0x144>)
 800838e:	4b3f      	ldrhi	r3, [pc, #252]	@ (800848c <HAL_I2C_Init+0x148>)
 8008390:	4298      	cmp	r0, r3
 8008392:	bf8c      	ite	hi
 8008394:	2300      	movhi	r3, #0
 8008396:	2301      	movls	r3, #1
 8008398:	2b00      	cmp	r3, #0
 800839a:	d1d6      	bne.n	800834a <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800839c:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800839e:	4e39      	ldr	r6, [pc, #228]	@ (8008484 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80083a0:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 80083a2:	4b3b      	ldr	r3, [pc, #236]	@ (8008490 <HAL_I2C_Init+0x14c>)
 80083a4:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80083a8:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 80083ac:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80083ae:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80083b0:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80083b2:	bf88      	it	hi
 80083b4:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
 80083b8:	6a11      	ldr	r1, [r2, #32]
 80083ba:	bf88      	it	hi
 80083bc:	4373      	mulhi	r3, r6
 80083be:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 80083c2:	bf84      	itt	hi
 80083c4:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 80083c8:	fbb3 f3f6 	udivhi	r3, r3, r6
 80083cc:	3301      	adds	r3, #1
 80083ce:	430b      	orrs	r3, r1
 80083d0:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80083d2:	69d1      	ldr	r1, [r2, #28]
 80083d4:	1e43      	subs	r3, r0, #1
 80083d6:	482b      	ldr	r0, [pc, #172]	@ (8008484 <HAL_I2C_Init+0x140>)
 80083d8:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 80083dc:	4285      	cmp	r5, r0
 80083de:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 80083e2:	d832      	bhi.n	800844a <HAL_I2C_Init+0x106>
 80083e4:	006d      	lsls	r5, r5, #1
 80083e6:	f640 70fc 	movw	r0, #4092	@ 0xffc
 80083ea:	fbb3 f3f5 	udiv	r3, r3, r5
 80083ee:	3301      	adds	r3, #1
 80083f0:	4203      	tst	r3, r0
 80083f2:	d042      	beq.n	800847a <HAL_I2C_Init+0x136>
 80083f4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80083f8:	4319      	orrs	r1, r3
 80083fa:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80083fc:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8008400:	6811      	ldr	r1, [r2, #0]
 8008402:	4303      	orrs	r3, r0
 8008404:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 8008408:	430b      	orrs	r3, r1
 800840a:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800840c:	6891      	ldr	r1, [r2, #8]
 800840e:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8008412:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 8008416:	4303      	orrs	r3, r0
 8008418:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 800841c:	430b      	orrs	r3, r1
 800841e:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8008420:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8008424:	68d1      	ldr	r1, [r2, #12]
 8008426:	4303      	orrs	r3, r0
 8008428:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 800842c:	430b      	orrs	r3, r1
 800842e:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8008430:	6813      	ldr	r3, [r2, #0]
 8008432:	f043 0301 	orr.w	r3, r3, #1
 8008436:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8008438:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800843a:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800843c:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800843e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8008442:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8008444:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 8008448:	e780      	b.n	800834c <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800844a:	68a0      	ldr	r0, [r4, #8]
 800844c:	b950      	cbnz	r0, 8008464 <HAL_I2C_Init+0x120>
 800844e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8008452:	fbb3 f3f5 	udiv	r3, r3, r5
 8008456:	3301      	adds	r3, #1
 8008458:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800845c:	b17b      	cbz	r3, 800847e <HAL_I2C_Init+0x13a>
 800845e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8008462:	e7c9      	b.n	80083f8 <HAL_I2C_Init+0xb4>
 8008464:	2019      	movs	r0, #25
 8008466:	4368      	muls	r0, r5
 8008468:	fbb3 f3f0 	udiv	r3, r3, r0
 800846c:	3301      	adds	r3, #1
 800846e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008472:	b123      	cbz	r3, 800847e <HAL_I2C_Init+0x13a>
 8008474:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8008478:	e7be      	b.n	80083f8 <HAL_I2C_Init+0xb4>
 800847a:	2304      	movs	r3, #4
 800847c:	e7bc      	b.n	80083f8 <HAL_I2C_Init+0xb4>
 800847e:	2301      	movs	r3, #1
 8008480:	e7ba      	b.n	80083f8 <HAL_I2C_Init+0xb4>
 8008482:	bf00      	nop
 8008484:	000186a0 	.word	0x000186a0
 8008488:	001e847f 	.word	0x001e847f
 800848c:	003d08ff 	.word	0x003d08ff
 8008490:	000f4240 	.word	0x000f4240

08008494 <HAL_I2C_Mem_Write>:
{
 8008494:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008498:	4604      	mov	r4, r0
 800849a:	4699      	mov	r9, r3
 800849c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800849e:	460f      	mov	r7, r1
 80084a0:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80084a2:	f7ff fae1 	bl	8007a68 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80084a6:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 80084aa:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80084ac:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80084ae:	d003      	beq.n	80084b8 <HAL_I2C_Mem_Write+0x24>
      return HAL_BUSY;
 80084b0:	2002      	movs	r0, #2
}
 80084b2:	b003      	add	sp, #12
 80084b4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80084b8:	9000      	str	r0, [sp, #0]
 80084ba:	493c      	ldr	r1, [pc, #240]	@ (80085ac <HAL_I2C_Mem_Write+0x118>)
 80084bc:	2319      	movs	r3, #25
 80084be:	2201      	movs	r2, #1
 80084c0:	4620      	mov	r0, r4
 80084c2:	f7ff fd59 	bl	8007f78 <I2C_WaitOnFlagUntilTimeout>
 80084c6:	2800      	cmp	r0, #0
 80084c8:	d1f2      	bne.n	80084b0 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 80084ca:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 80084ce:	2b01      	cmp	r3, #1
 80084d0:	d0ee      	beq.n	80084b0 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80084d2:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80084d4:	2301      	movs	r3, #1
 80084d6:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80084da:	6803      	ldr	r3, [r0, #0]
 80084dc:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80084de:	bf5e      	ittt	pl
 80084e0:	6803      	ldrpl	r3, [r0, #0]
 80084e2:	f043 0301 	orrpl.w	r3, r3, #1
 80084e6:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80084e8:	6803      	ldr	r3, [r0, #0]
 80084ea:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80084ee:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80084f0:	2321      	movs	r3, #33	@ 0x21
 80084f2:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80084f6:	2340      	movs	r3, #64	@ 0x40
 80084f8:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80084fc:	2300      	movs	r3, #0
 80084fe:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8008500:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8008502:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8008504:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8008508:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800850a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800850c:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800850e:	4b28      	ldr	r3, [pc, #160]	@ (80085b0 <HAL_I2C_Mem_Write+0x11c>)
 8008510:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8008512:	4642      	mov	r2, r8
 8008514:	e9cd 6500 	strd	r6, r5, [sp]
 8008518:	464b      	mov	r3, r9
 800851a:	4639      	mov	r1, r7
 800851c:	4620      	mov	r0, r4
 800851e:	f7ff fdd7 	bl	80080d0 <I2C_RequestMemoryWrite>
 8008522:	2800      	cmp	r0, #0
 8008524:	d02a      	beq.n	800857c <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8008526:	2001      	movs	r0, #1
 8008528:	e7c3      	b.n	80084b2 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800852a:	f7ff fda7 	bl	800807c <I2C_WaitOnTXEFlagUntilTimeout>
 800852e:	b140      	cbz	r0, 8008542 <HAL_I2C_Mem_Write+0xae>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8008530:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008532:	2b04      	cmp	r3, #4
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008534:	bf01      	itttt	eq
 8008536:	6822      	ldreq	r2, [r4, #0]
 8008538:	6813      	ldreq	r3, [r2, #0]
 800853a:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800853e:	6013      	streq	r3, [r2, #0]
 8008540:	e7f1      	b.n	8008526 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8008542:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008544:	6827      	ldr	r7, [r4, #0]
 8008546:	461a      	mov	r2, r3
 8008548:	f812 1b01 	ldrb.w	r1, [r2], #1
 800854c:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800854e:	6262      	str	r2, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8008550:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8008552:	8d21      	ldrh	r1, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8008554:	3a01      	subs	r2, #1
 8008556:	b292      	uxth	r2, r2
 8008558:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800855a:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 800855c:	1e48      	subs	r0, r1, #1
 800855e:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8008560:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8008562:	8520      	strh	r0, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8008564:	d50a      	bpl.n	800857c <HAL_I2C_Mem_Write+0xe8>
 8008566:	b148      	cbz	r0, 800857c <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8008568:	785a      	ldrb	r2, [r3, #1]
 800856a:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 800856c:	3302      	adds	r3, #2
 800856e:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8008570:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8008572:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8008574:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8008576:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8008578:	8521      	strh	r1, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 800857a:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 800857c:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800857e:	462a      	mov	r2, r5
 8008580:	4631      	mov	r1, r6
 8008582:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8008584:	2b00      	cmp	r3, #0
 8008586:	d1d0      	bne.n	800852a <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8008588:	f7ff fe7e 	bl	8008288 <I2C_WaitOnBTFFlagUntilTimeout>
 800858c:	2800      	cmp	r0, #0
 800858e:	d1cf      	bne.n	8008530 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008590:	6822      	ldr	r2, [r4, #0]
 8008592:	6813      	ldr	r3, [r2, #0]
 8008594:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8008598:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800859a:	2320      	movs	r3, #32
 800859c:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 80085a0:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80085a4:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    return HAL_OK;
 80085a8:	e783      	b.n	80084b2 <HAL_I2C_Mem_Write+0x1e>
 80085aa:	bf00      	nop
 80085ac:	00100002 	.word	0x00100002
 80085b0:	ffff0000 	.word	0xffff0000

080085b4 <HAL_I2C_Mem_Read>:
{
 80085b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80085b8:	4604      	mov	r4, r0
 80085ba:	b087      	sub	sp, #28
 80085bc:	4699      	mov	r9, r3
 80085be:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 80085c0:	460d      	mov	r5, r1
 80085c2:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80085c4:	f7ff fa50 	bl	8007a68 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80085c8:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 80085cc:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80085ce:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80085d0:	d004      	beq.n	80085dc <HAL_I2C_Mem_Read+0x28>
      return HAL_BUSY;
 80085d2:	2502      	movs	r5, #2
}
 80085d4:	4628      	mov	r0, r5
 80085d6:	b007      	add	sp, #28
 80085d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80085dc:	9000      	str	r0, [sp, #0]
 80085de:	497a      	ldr	r1, [pc, #488]	@ (80087c8 <HAL_I2C_Mem_Read+0x214>)
 80085e0:	2319      	movs	r3, #25
 80085e2:	2201      	movs	r2, #1
 80085e4:	4620      	mov	r0, r4
 80085e6:	f7ff fcc7 	bl	8007f78 <I2C_WaitOnFlagUntilTimeout>
 80085ea:	2800      	cmp	r0, #0
 80085ec:	d1f1      	bne.n	80085d2 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 80085ee:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 80085f2:	2b01      	cmp	r3, #1
 80085f4:	d0ed      	beq.n	80085d2 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80085f6:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80085f8:	2301      	movs	r3, #1
 80085fa:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80085fe:	6803      	ldr	r3, [r0, #0]
 8008600:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8008602:	bf5e      	ittt	pl
 8008604:	6803      	ldrpl	r3, [r0, #0]
 8008606:	f043 0301 	orrpl.w	r3, r3, #1
 800860a:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800860c:	6803      	ldr	r3, [r0, #0]
 800860e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8008612:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8008614:	2322      	movs	r3, #34	@ 0x22
 8008616:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800861a:	2340      	movs	r3, #64	@ 0x40
 800861c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8008620:	2300      	movs	r3, #0
 8008622:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8008624:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008626:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8008628:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800862c:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800862e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8008630:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8008632:	4b66      	ldr	r3, [pc, #408]	@ (80087cc <HAL_I2C_Mem_Read+0x218>)
 8008634:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8008636:	4629      	mov	r1, r5
 8008638:	e9cd 7600 	strd	r7, r6, [sp]
 800863c:	464b      	mov	r3, r9
 800863e:	4642      	mov	r2, r8
 8008640:	4620      	mov	r0, r4
 8008642:	f7ff fd9f 	bl	8008184 <I2C_RequestMemoryRead>
 8008646:	4605      	mov	r5, r0
 8008648:	b108      	cbz	r0, 800864e <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800864a:	2501      	movs	r5, #1
 800864c:	e7c2      	b.n	80085d4 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800864e:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008650:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8008652:	b9b2      	cbnz	r2, 8008682 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008654:	9002      	str	r0, [sp, #8]
 8008656:	695a      	ldr	r2, [r3, #20]
 8008658:	9202      	str	r2, [sp, #8]
 800865a:	699a      	ldr	r2, [r3, #24]
 800865c:	9202      	str	r2, [sp, #8]
 800865e:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008660:	681a      	ldr	r2, [r3, #0]
 8008662:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8008666:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8008668:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 80087d0 <HAL_I2C_Mem_Read+0x21c>
    while (hi2c->XferSize > 0U)
 800866c:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800866e:	2b00      	cmp	r3, #0
 8008670:	d12c      	bne.n	80086cc <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8008672:	2220      	movs	r2, #32
 8008674:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8008678:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800867c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 8008680:	e7a8      	b.n	80085d4 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8008682:	2a01      	cmp	r2, #1
 8008684:	d10a      	bne.n	800869c <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008686:	681a      	ldr	r2, [r3, #0]
 8008688:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800868c:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800868e:	9003      	str	r0, [sp, #12]
 8008690:	695a      	ldr	r2, [r3, #20]
 8008692:	9203      	str	r2, [sp, #12]
 8008694:	699a      	ldr	r2, [r3, #24]
 8008696:	9203      	str	r2, [sp, #12]
 8008698:	9a03      	ldr	r2, [sp, #12]
 800869a:	e7e1      	b.n	8008660 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 800869c:	2a02      	cmp	r2, #2
 800869e:	d10e      	bne.n	80086be <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80086a0:	681a      	ldr	r2, [r3, #0]
 80086a2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80086a6:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80086a8:	681a      	ldr	r2, [r3, #0]
 80086aa:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80086ae:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80086b0:	9004      	str	r0, [sp, #16]
 80086b2:	695a      	ldr	r2, [r3, #20]
 80086b4:	9204      	str	r2, [sp, #16]
 80086b6:	699b      	ldr	r3, [r3, #24]
 80086b8:	9304      	str	r3, [sp, #16]
 80086ba:	9b04      	ldr	r3, [sp, #16]
 80086bc:	e7d4      	b.n	8008668 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80086be:	9005      	str	r0, [sp, #20]
 80086c0:	695a      	ldr	r2, [r3, #20]
 80086c2:	9205      	str	r2, [sp, #20]
 80086c4:	699b      	ldr	r3, [r3, #24]
 80086c6:	9305      	str	r3, [sp, #20]
 80086c8:	9b05      	ldr	r3, [sp, #20]
 80086ca:	e7cd      	b.n	8008668 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 80086cc:	2b03      	cmp	r3, #3
 80086ce:	d856      	bhi.n	800877e <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 80086d0:	2b01      	cmp	r3, #1
 80086d2:	d115      	bne.n	8008700 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80086d4:	4632      	mov	r2, r6
 80086d6:	4639      	mov	r1, r7
 80086d8:	4620      	mov	r0, r4
 80086da:	f7ff fdff 	bl	80082dc <I2C_WaitOnRXNEFlagUntilTimeout>
 80086de:	2800      	cmp	r0, #0
 80086e0:	d1b3      	bne.n	800864a <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80086e2:	6823      	ldr	r3, [r4, #0]
 80086e4:	691a      	ldr	r2, [r3, #16]
 80086e6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80086e8:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80086ea:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80086ec:	3301      	adds	r3, #1
 80086ee:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 80086f0:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 80086f2:	3b01      	subs	r3, #1
 80086f4:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 80086f6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80086f8:	3b01      	subs	r3, #1
 80086fa:	b29b      	uxth	r3, r3
 80086fc:	8563      	strh	r3, [r4, #42]	@ 0x2a
 80086fe:	e7b5      	b.n	800866c <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8008700:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8008702:	9600      	str	r6, [sp, #0]
 8008704:	463b      	mov	r3, r7
 8008706:	f04f 0200 	mov.w	r2, #0
 800870a:	4641      	mov	r1, r8
 800870c:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800870e:	d119      	bne.n	8008744 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8008710:	f7ff fc32 	bl	8007f78 <I2C_WaitOnFlagUntilTimeout>
 8008714:	2800      	cmp	r0, #0
 8008716:	d198      	bne.n	800864a <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008718:	6823      	ldr	r3, [r4, #0]
 800871a:	681a      	ldr	r2, [r3, #0]
 800871c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8008720:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008722:	691a      	ldr	r2, [r3, #16]
 8008724:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008726:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8008728:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800872a:	1c53      	adds	r3, r2, #1
 800872c:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800872e:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8008730:	3b01      	subs	r3, #1
 8008732:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8008734:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8008736:	3b01      	subs	r3, #1
 8008738:	b29b      	uxth	r3, r3
 800873a:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800873c:	6823      	ldr	r3, [r4, #0]
 800873e:	691b      	ldr	r3, [r3, #16]
 8008740:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8008742:	e7d2      	b.n	80086ea <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8008744:	f7ff fc18 	bl	8007f78 <I2C_WaitOnFlagUntilTimeout>
 8008748:	4602      	mov	r2, r0
 800874a:	2800      	cmp	r0, #0
 800874c:	f47f af7d 	bne.w	800864a <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008750:	6823      	ldr	r3, [r4, #0]
 8008752:	6819      	ldr	r1, [r3, #0]
 8008754:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 8008758:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800875a:	6919      	ldr	r1, [r3, #16]
 800875c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800875e:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 8008760:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008762:	3301      	adds	r3, #1
 8008764:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8008766:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8008768:	3b01      	subs	r3, #1
 800876a:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 800876c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800876e:	3b01      	subs	r3, #1
 8008770:	b29b      	uxth	r3, r3
 8008772:	8563      	strh	r3, [r4, #42]	@ 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8008774:	4641      	mov	r1, r8
 8008776:	9600      	str	r6, [sp, #0]
 8008778:	463b      	mov	r3, r7
 800877a:	4620      	mov	r0, r4
 800877c:	e7c8      	b.n	8008710 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800877e:	4632      	mov	r2, r6
 8008780:	4639      	mov	r1, r7
 8008782:	4620      	mov	r0, r4
 8008784:	f7ff fdaa 	bl	80082dc <I2C_WaitOnRXNEFlagUntilTimeout>
 8008788:	2800      	cmp	r0, #0
 800878a:	f47f af5e 	bne.w	800864a <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800878e:	6823      	ldr	r3, [r4, #0]
 8008790:	691a      	ldr	r2, [r3, #16]
 8008792:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008794:	701a      	strb	r2, [r3, #0]
        hi2c->XferCount--;
 8008796:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
        hi2c->pBuffPtr++;
 8008798:	6a61      	ldr	r1, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 800879a:	3a01      	subs	r2, #1
 800879c:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800879e:	1c4b      	adds	r3, r1, #1
        hi2c->XferCount--;
 80087a0:	8562      	strh	r2, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80087a2:	6822      	ldr	r2, [r4, #0]
        hi2c->pBuffPtr++;
 80087a4:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 80087a6:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80087a8:	6950      	ldr	r0, [r2, #20]
        hi2c->XferSize--;
 80087aa:	3b01      	subs	r3, #1
 80087ac:	b29b      	uxth	r3, r3
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80087ae:	0740      	lsls	r0, r0, #29
        hi2c->XferSize--;
 80087b0:	8523      	strh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80087b2:	f57f af5b 	bpl.w	800866c <HAL_I2C_Mem_Read+0xb8>
          if (hi2c->XferSize == 3U)
 80087b6:	2b03      	cmp	r3, #3
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80087b8:	bf02      	ittt	eq
 80087ba:	6813      	ldreq	r3, [r2, #0]
 80087bc:	f423 6380 	biceq.w	r3, r3, #1024	@ 0x400
 80087c0:	6013      	streq	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80087c2:	6913      	ldr	r3, [r2, #16]
 80087c4:	704b      	strb	r3, [r1, #1]
 80087c6:	e790      	b.n	80086ea <HAL_I2C_Mem_Read+0x136>
 80087c8:	00100002 	.word	0x00100002
 80087cc:	ffff0000 	.word	0xffff0000
 80087d0:	00010004 	.word	0x00010004

080087d4 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 80087d4:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80087d6:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80087da:	2b20      	cmp	r3, #32
 80087dc:	b2dc      	uxtb	r4, r3
 80087de:	d116      	bne.n	800880e <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 80087e0:	2324      	movs	r3, #36	@ 0x24
 80087e2:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80087e6:	6803      	ldr	r3, [r0, #0]
 80087e8:	681a      	ldr	r2, [r3, #0]
 80087ea:	f022 0201 	bic.w	r2, r2, #1
 80087ee:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 80087f0:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80087f2:	f022 0210 	bic.w	r2, r2, #16
 80087f6:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 80087f8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80087fa:	4311      	orrs	r1, r2
 80087fc:	6259      	str	r1, [r3, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 80087fe:	681a      	ldr	r2, [r3, #0]
 8008800:	f042 0201 	orr.w	r2, r2, #1
 8008804:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8008806:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 800880a:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 800880c:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 800880e:	2002      	movs	r0, #2
 8008810:	e7fc      	b.n	800880c <HAL_I2CEx_ConfigAnalogFilter+0x38>

08008812 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8008812:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8008814:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8008818:	2b20      	cmp	r3, #32
 800881a:	b2dc      	uxtb	r4, r3
 800881c:	d116      	bne.n	800884c <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800881e:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8008820:	2324      	movs	r3, #36	@ 0x24
 8008822:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8008826:	6813      	ldr	r3, [r2, #0]
 8008828:	f023 0301 	bic.w	r3, r3, #1
 800882c:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 800882e:	6a55      	ldr	r5, [r2, #36]	@ 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8008830:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 8008834:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8008836:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8008838:	b29b      	uxth	r3, r3
 800883a:	6253      	str	r3, [r2, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 800883c:	6813      	ldr	r3, [r2, #0]
 800883e:	f043 0301 	orr.w	r3, r3, #1
 8008842:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8008844:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 8008848:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 800884a:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 800884c:	2002      	movs	r0, #2
 800884e:	e7fc      	b.n	800884a <HAL_I2CEx_ConfigDigitalFilter+0x38>

08008850 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8008850:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8008852:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8008856:	01d2      	lsls	r2, r2, #7
 8008858:	3284      	adds	r2, #132	@ 0x84
 800885a:	1883      	adds	r3, r0, r2
{
 800885c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8008860:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8008862:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8008864:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8008866:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800886a:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 800886e:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8008870:	68c5      	ldr	r5, [r0, #12]
 8008872:	f10c 0701 	add.w	r7, ip, #1
 8008876:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800887a:	f3c6 460b 	ubfx	r6, r6, #16, #12
 800887e:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8008880:	443d      	add	r5, r7
 8008882:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8008886:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8008888:	68c6      	ldr	r6, [r0, #12]
 800888a:	68cd      	ldr	r5, [r1, #12]
 800888c:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8008890:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8008892:	689d      	ldr	r5, [r3, #8]
 8008894:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8008898:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800889a:	68c7      	ldr	r7, [r0, #12]
 800889c:	688d      	ldr	r5, [r1, #8]
 800889e:	f3c7 070a 	ubfx	r7, r7, #0, #11
 80088a2:	3501      	adds	r5, #1
 80088a4:	443d      	add	r5, r7
 80088a6:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 80088aa:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80088ac:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80088ae:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80088b0:	f025 0507 	bic.w	r5, r5, #7
 80088b4:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80088b6:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80088ba:	611e      	str	r6, [r3, #16]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80088bc:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80088c0:	699d      	ldr	r5, [r3, #24]
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80088c2:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80088c6:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 80088ca:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 80088ce:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 80088d2:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 80088d6:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 80088da:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80088dc:	695d      	ldr	r5, [r3, #20]
 80088de:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 80088e2:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80088e4:	694d      	ldr	r5, [r1, #20]
 80088e6:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80088e8:	69dd      	ldr	r5, [r3, #28]
 80088ea:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 80088ee:	f025 0507 	bic.w	r5, r5, #7
 80088f2:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80088f4:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 80088f8:	433d      	orrs	r5, r7
 80088fa:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80088fc:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80088fe:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8008900:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8008904:	2e07      	cmp	r6, #7
 8008906:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8008908:	bf9c      	itt	ls
 800890a:	4d0e      	ldrls	r5, [pc, #56]	@ (8008944 <LTDC_SetConfig+0xf4>)
 800890c:	5dae      	ldrbls	r6, [r5, r6]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800890e:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8008910:	f005 25e0 	and.w	r5, r5, #3758153728	@ 0xe000e000
 8008914:	62dd      	str	r5, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8008916:	bf88      	it	hi
 8008918:	2601      	movhi	r6, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800891a:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800891c:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800891e:	eba4 040c 	sub.w	r4, r4, ip
 8008922:	4374      	muls	r4, r6
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8008924:	4375      	muls	r5, r6
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8008926:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8008928:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 800892c:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800892e:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 8008930:	f36f 040a 	bfc	r4, #0, #11
 8008934:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8008936:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8008938:	5883      	ldr	r3, [r0, r2]
 800893a:	f043 0301 	orr.w	r3, r3, #1
 800893e:	5083      	str	r3, [r0, r2]
}
 8008940:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008944:	0802889c 	.word	0x0802889c

08008948 <HAL_LTDC_Init>:
{
 8008948:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800894a:	4604      	mov	r4, r0
 800894c:	2800      	cmp	r0, #0
 800894e:	d063      	beq.n	8008a18 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8008950:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8008954:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8008958:	b91b      	cbnz	r3, 8008962 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800895a:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 800895e:	f7f8 fcd7 	bl	8001310 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8008962:	2302      	movs	r3, #2
 8008964:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8008968:	6823      	ldr	r3, [r4, #0]
 800896a:	699a      	ldr	r2, [r3, #24]
 800896c:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8008970:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8008972:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8008976:	4302      	orrs	r2, r0
 8008978:	68e0      	ldr	r0, [r4, #12]
 800897a:	6999      	ldr	r1, [r3, #24]
 800897c:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800897e:	6920      	ldr	r0, [r4, #16]
 8008980:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8008982:	430a      	orrs	r2, r1
 8008984:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8008986:	689a      	ldr	r2, [r3, #8]
 8008988:	4924      	ldr	r1, [pc, #144]	@ (8008a1c <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800898a:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800898c:	400a      	ands	r2, r1
 800898e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8008990:	689a      	ldr	r2, [r3, #8]
 8008992:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8008996:	69a0      	ldr	r0, [r4, #24]
 8008998:	4302      	orrs	r2, r0
 800899a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800899c:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800899e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80089a0:	400a      	ands	r2, r1
 80089a2:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80089a4:	68da      	ldr	r2, [r3, #12]
 80089a6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80089aa:	6a20      	ldr	r0, [r4, #32]
 80089ac:	4302      	orrs	r2, r0
 80089ae:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80089b0:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80089b2:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80089b4:	400a      	ands	r2, r1
 80089b6:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80089b8:	691a      	ldr	r2, [r3, #16]
 80089ba:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80089be:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 80089c0:	4302      	orrs	r2, r0
 80089c2:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80089c4:	695a      	ldr	r2, [r3, #20]
 80089c6:	400a      	ands	r2, r1
 80089c8:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80089ca:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80089cc:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80089ce:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80089d2:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80089d4:	430a      	orrs	r2, r1
 80089d6:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80089d8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80089da:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80089de:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80089e2:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 80089e6:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80089e8:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 80089ea:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 80089ee:	432a      	orrs	r2, r5
 80089f0:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80089f4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80089f8:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80089fa:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80089fc:	f042 0206 	orr.w	r2, r2, #6
 8008a00:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8008a02:	699a      	ldr	r2, [r3, #24]
 8008a04:	f042 0201 	orr.w	r2, r2, #1
 8008a08:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8008a0a:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8008a0c:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8008a0e:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8008a12:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 8008a16:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8008a18:	2001      	movs	r0, #1
 8008a1a:	e7fc      	b.n	8008a16 <HAL_LTDC_Init+0xce>
 8008a1c:	f000f800 	.word	0xf000f800

08008a20 <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 8008a20:	4770      	bx	lr

08008a22 <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 8008a22:	4770      	bx	lr

08008a24 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8008a24:	6803      	ldr	r3, [r0, #0]
{
 8008a26:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8008a28:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8008a2a:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8008a2c:	0772      	lsls	r2, r6, #29
{
 8008a2e:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8008a30:	d514      	bpl.n	8008a5c <HAL_LTDC_IRQHandler+0x38>
 8008a32:	0769      	lsls	r1, r5, #29
 8008a34:	d512      	bpl.n	8008a5c <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8008a36:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8008a38:	f022 0204 	bic.w	r2, r2, #4
 8008a3c:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8008a3e:	2204      	movs	r2, #4
 8008a40:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8008a42:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8008a46:	f043 0301 	orr.w	r3, r3, #1
 8008a4a:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 8008a4e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8008a50:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8008a54:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8008a58:	f7ff ffe2 	bl	8008a20 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8008a5c:	07b2      	lsls	r2, r6, #30
 8008a5e:	d516      	bpl.n	8008a8e <HAL_LTDC_IRQHandler+0x6a>
 8008a60:	07ab      	lsls	r3, r5, #30
 8008a62:	d514      	bpl.n	8008a8e <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8008a64:	6823      	ldr	r3, [r4, #0]
 8008a66:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8008a68:	f022 0202 	bic.w	r2, r2, #2
 8008a6c:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8008a6e:	2202      	movs	r2, #2
 8008a70:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8008a72:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 8008a76:	4313      	orrs	r3, r2
 8008a78:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8008a7c:	2304      	movs	r3, #4
 8008a7e:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8008a82:	2300      	movs	r3, #0
 8008a84:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8008a88:	4620      	mov	r0, r4
 8008a8a:	f7ff ffc9 	bl	8008a20 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8008a8e:	07f0      	lsls	r0, r6, #31
 8008a90:	d510      	bpl.n	8008ab4 <HAL_LTDC_IRQHandler+0x90>
 8008a92:	07e9      	lsls	r1, r5, #31
 8008a94:	d50e      	bpl.n	8008ab4 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8008a96:	6823      	ldr	r3, [r4, #0]
 8008a98:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8008a9a:	f022 0201 	bic.w	r2, r2, #1
 8008a9e:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8008aa0:	2201      	movs	r2, #1
 8008aa2:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 8008aa4:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8008aa6:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8008aaa:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8008aae:	4620      	mov	r0, r4
 8008ab0:	f7f9 fe1c 	bl	80026ec <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8008ab4:	0732      	lsls	r2, r6, #28
 8008ab6:	d511      	bpl.n	8008adc <HAL_LTDC_IRQHandler+0xb8>
 8008ab8:	072b      	lsls	r3, r5, #28
 8008aba:	d50f      	bpl.n	8008adc <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8008abc:	6823      	ldr	r3, [r4, #0]
 8008abe:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8008ac0:	f022 0208 	bic.w	r2, r2, #8
 8008ac4:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8008ac6:	2208      	movs	r2, #8
 8008ac8:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8008aca:	2301      	movs	r3, #1
 8008acc:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8008ad0:	2300      	movs	r3, #0
 8008ad2:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8008ad6:	4620      	mov	r0, r4
 8008ad8:	f7ff ffa3 	bl	8008a22 <HAL_LTDC_ReloadEventCallback>
}
 8008adc:	bd70      	pop	{r4, r5, r6, pc}

08008ade <HAL_LTDC_ConfigLayer>:
{
 8008ade:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8008ae2:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 8008ae6:	2b01      	cmp	r3, #1
{
 8008ae8:	4606      	mov	r6, r0
 8008aea:	460f      	mov	r7, r1
 8008aec:	4694      	mov	ip, r2
 8008aee:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8008af2:	d01f      	beq.n	8008b34 <HAL_LTDC_ConfigLayer+0x56>
 8008af4:	f04f 0801 	mov.w	r8, #1
 8008af8:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8008afc:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8008b00:	2434      	movs	r4, #52	@ 0x34
 8008b02:	460d      	mov	r5, r1
 8008b04:	fb04 6402 	mla	r4, r4, r2, r6
 8008b08:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008b0a:	3438      	adds	r4, #56	@ 0x38
 8008b0c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008b0e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008b10:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008b12:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008b14:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008b16:	682b      	ldr	r3, [r5, #0]
 8008b18:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8008b1a:	4630      	mov	r0, r6
 8008b1c:	4662      	mov	r2, ip
 8008b1e:	4639      	mov	r1, r7
 8008b20:	f7ff fe96 	bl	8008850 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8008b24:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8008b26:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8008b28:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8008b2c:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8008b30:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 8008b34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008b38 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8008b38:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
 8008b3c:	2a01      	cmp	r2, #1
{
 8008b3e:	4603      	mov	r3, r0
 8008b40:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8008b44:	d012      	beq.n	8008b6c <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8008b46:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8008b48:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8008b4c:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 8008b4e:	f020 0001 	bic.w	r0, r0, #1
 8008b52:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8008b54:	4806      	ldr	r0, [pc, #24]	@ (8008b70 <HAL_LTDC_ProgramLineEvent+0x38>)
 8008b56:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8008b58:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8008b5a:	f041 0101 	orr.w	r1, r1, #1
 8008b5e:	6351      	str	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 8008b60:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8008b62:	2201      	movs	r2, #1
 8008b64:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8008b68:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
}
 8008b6c:	4770      	bx	lr
 8008b6e:	bf00      	nop
 8008b70:	40016800 	.word	0x40016800

08008b74 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8008b74:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 8008b76:	2300      	movs	r3, #0
 8008b78:	9301      	str	r3, [sp, #4]
 8008b7a:	4b18      	ldr	r3, [pc, #96]	@ (8008bdc <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8008b7c:	4d18      	ldr	r5, [pc, #96]	@ (8008be0 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8008b7e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8008b80:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8008b84:	641a      	str	r2, [r3, #64]	@ 0x40
 8008b86:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008b88:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8008b8c:	9301      	str	r3, [sp, #4]
 8008b8e:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 8008b90:	4b14      	ldr	r3, [pc, #80]	@ (8008be4 <HAL_PWREx_EnableOverDrive+0x70>)
 8008b92:	2201      	movs	r2, #1
 8008b94:	641a      	str	r2, [r3, #64]	@ 0x40
  tickstart = HAL_GetTick();
 8008b96:	f7fe ff67 	bl	8007a68 <HAL_GetTick>
 8008b9a:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8008b9c:	686b      	ldr	r3, [r5, #4]
 8008b9e:	03da      	lsls	r2, r3, #15
 8008ba0:	d50b      	bpl.n	8008bba <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8008ba2:	4b10      	ldr	r3, [pc, #64]	@ (8008be4 <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8008ba4:	4d0e      	ldr	r5, [pc, #56]	@ (8008be0 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8008ba6:	2201      	movs	r2, #1
 8008ba8:	645a      	str	r2, [r3, #68]	@ 0x44
  tickstart = HAL_GetTick();
 8008baa:	f7fe ff5d 	bl	8007a68 <HAL_GetTick>
 8008bae:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8008bb0:	686b      	ldr	r3, [r5, #4]
 8008bb2:	039b      	lsls	r3, r3, #14
 8008bb4:	d50a      	bpl.n	8008bcc <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 8008bb6:	2000      	movs	r0, #0
 8008bb8:	e006      	b.n	8008bc8 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8008bba:	f7fe ff55 	bl	8007a68 <HAL_GetTick>
 8008bbe:	1b00      	subs	r0, r0, r4
 8008bc0:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 8008bc4:	d9ea      	bls.n	8008b9c <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 8008bc6:	2003      	movs	r0, #3
}
 8008bc8:	b003      	add	sp, #12
 8008bca:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8008bcc:	f7fe ff4c 	bl	8007a68 <HAL_GetTick>
 8008bd0:	1b00      	subs	r0, r0, r4
 8008bd2:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 8008bd6:	d9eb      	bls.n	8008bb0 <HAL_PWREx_EnableOverDrive+0x3c>
 8008bd8:	e7f5      	b.n	8008bc6 <HAL_PWREx_EnableOverDrive+0x52>
 8008bda:	bf00      	nop
 8008bdc:	40023800 	.word	0x40023800
 8008be0:	40007000 	.word	0x40007000
 8008be4:	420e0000 	.word	0x420e0000

08008be8 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8008be8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8008bec:	4604      	mov	r4, r0
 8008bee:	b340      	cbz	r0, 8008c42 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8008bf0:	6803      	ldr	r3, [r0, #0]
 8008bf2:	07de      	lsls	r6, r3, #31
 8008bf4:	d410      	bmi.n	8008c18 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8008bf6:	6823      	ldr	r3, [r4, #0]
 8008bf8:	079d      	lsls	r5, r3, #30
 8008bfa:	d45b      	bmi.n	8008cb4 <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8008bfc:	6823      	ldr	r3, [r4, #0]
 8008bfe:	0719      	lsls	r1, r3, #28
 8008c00:	f100 809d 	bmi.w	8008d3e <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8008c04:	6823      	ldr	r3, [r4, #0]
 8008c06:	075a      	lsls	r2, r3, #29
 8008c08:	f100 80bd 	bmi.w	8008d86 <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8008c0c:	69a3      	ldr	r3, [r4, #24]
 8008c0e:	2b00      	cmp	r3, #0
 8008c10:	f040 8124 	bne.w	8008e5c <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8008c14:	2000      	movs	r0, #0
 8008c16:	e02c      	b.n	8008c72 <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 8008c18:	4b8d      	ldr	r3, [pc, #564]	@ (8008e50 <HAL_RCC_OscConfig+0x268>)
 8008c1a:	689a      	ldr	r2, [r3, #8]
 8008c1c:	f002 020c 	and.w	r2, r2, #12
 8008c20:	2a04      	cmp	r2, #4
 8008c22:	d007      	beq.n	8008c34 <HAL_RCC_OscConfig+0x4c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8008c24:	689a      	ldr	r2, [r3, #8]
 8008c26:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 8008c2a:	2a08      	cmp	r2, #8
 8008c2c:	d10b      	bne.n	8008c46 <HAL_RCC_OscConfig+0x5e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8008c2e:	685b      	ldr	r3, [r3, #4]
 8008c30:	0259      	lsls	r1, r3, #9
 8008c32:	d508      	bpl.n	8008c46 <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8008c34:	4b86      	ldr	r3, [pc, #536]	@ (8008e50 <HAL_RCC_OscConfig+0x268>)
 8008c36:	681b      	ldr	r3, [r3, #0]
 8008c38:	039a      	lsls	r2, r3, #14
 8008c3a:	d5dc      	bpl.n	8008bf6 <HAL_RCC_OscConfig+0xe>
 8008c3c:	6863      	ldr	r3, [r4, #4]
 8008c3e:	2b00      	cmp	r3, #0
 8008c40:	d1d9      	bne.n	8008bf6 <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 8008c42:	2001      	movs	r0, #1
 8008c44:	e015      	b.n	8008c72 <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8008c46:	6863      	ldr	r3, [r4, #4]
 8008c48:	4d81      	ldr	r5, [pc, #516]	@ (8008e50 <HAL_RCC_OscConfig+0x268>)
 8008c4a:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8008c4e:	d113      	bne.n	8008c78 <HAL_RCC_OscConfig+0x90>
 8008c50:	682b      	ldr	r3, [r5, #0]
 8008c52:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8008c56:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8008c58:	f7fe ff06 	bl	8007a68 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8008c5c:	4e7c      	ldr	r6, [pc, #496]	@ (8008e50 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8008c5e:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8008c60:	6833      	ldr	r3, [r6, #0]
 8008c62:	039b      	lsls	r3, r3, #14
 8008c64:	d4c7      	bmi.n	8008bf6 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8008c66:	f7fe feff 	bl	8007a68 <HAL_GetTick>
 8008c6a:	1b40      	subs	r0, r0, r5
 8008c6c:	2864      	cmp	r0, #100	@ 0x64
 8008c6e:	d9f7      	bls.n	8008c60 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 8008c70:	2003      	movs	r0, #3
}
 8008c72:	b002      	add	sp, #8
 8008c74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8008c78:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8008c7c:	d104      	bne.n	8008c88 <HAL_RCC_OscConfig+0xa0>
 8008c7e:	682b      	ldr	r3, [r5, #0]
 8008c80:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8008c84:	602b      	str	r3, [r5, #0]
 8008c86:	e7e3      	b.n	8008c50 <HAL_RCC_OscConfig+0x68>
 8008c88:	682a      	ldr	r2, [r5, #0]
 8008c8a:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8008c8e:	602a      	str	r2, [r5, #0]
 8008c90:	682a      	ldr	r2, [r5, #0]
 8008c92:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8008c96:	602a      	str	r2, [r5, #0]
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8008c98:	2b00      	cmp	r3, #0
 8008c9a:	d1dd      	bne.n	8008c58 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 8008c9c:	f7fe fee4 	bl	8007a68 <HAL_GetTick>
 8008ca0:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8008ca2:	682b      	ldr	r3, [r5, #0]
 8008ca4:	039f      	lsls	r7, r3, #14
 8008ca6:	d5a6      	bpl.n	8008bf6 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8008ca8:	f7fe fede 	bl	8007a68 <HAL_GetTick>
 8008cac:	1b80      	subs	r0, r0, r6
 8008cae:	2864      	cmp	r0, #100	@ 0x64
 8008cb0:	d9f7      	bls.n	8008ca2 <HAL_RCC_OscConfig+0xba>
 8008cb2:	e7dd      	b.n	8008c70 <HAL_RCC_OscConfig+0x88>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 8008cb4:	4b66      	ldr	r3, [pc, #408]	@ (8008e50 <HAL_RCC_OscConfig+0x268>)
 8008cb6:	689a      	ldr	r2, [r3, #8]
 8008cb8:	f012 0f0c 	tst.w	r2, #12
 8008cbc:	d007      	beq.n	8008cce <HAL_RCC_OscConfig+0xe6>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8008cbe:	689a      	ldr	r2, [r3, #8]
 8008cc0:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 8008cc4:	2a08      	cmp	r2, #8
 8008cc6:	d111      	bne.n	8008cec <HAL_RCC_OscConfig+0x104>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8008cc8:	685b      	ldr	r3, [r3, #4]
 8008cca:	025d      	lsls	r5, r3, #9
 8008ccc:	d40e      	bmi.n	8008cec <HAL_RCC_OscConfig+0x104>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8008cce:	4a60      	ldr	r2, [pc, #384]	@ (8008e50 <HAL_RCC_OscConfig+0x268>)
 8008cd0:	6813      	ldr	r3, [r2, #0]
 8008cd2:	0799      	lsls	r1, r3, #30
 8008cd4:	d502      	bpl.n	8008cdc <HAL_RCC_OscConfig+0xf4>
 8008cd6:	68e3      	ldr	r3, [r4, #12]
 8008cd8:	2b01      	cmp	r3, #1
 8008cda:	d1b2      	bne.n	8008c42 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8008cdc:	6813      	ldr	r3, [r2, #0]
 8008cde:	6921      	ldr	r1, [r4, #16]
 8008ce0:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8008ce4:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8008ce8:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8008cea:	e787      	b.n	8008bfc <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8008cec:	68e2      	ldr	r2, [r4, #12]
 8008cee:	4b59      	ldr	r3, [pc, #356]	@ (8008e54 <HAL_RCC_OscConfig+0x26c>)
 8008cf0:	b1b2      	cbz	r2, 8008d20 <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 8008cf2:	2201      	movs	r2, #1
 8008cf4:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8008cf6:	f7fe feb7 	bl	8007a68 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008cfa:	4d55      	ldr	r5, [pc, #340]	@ (8008e50 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8008cfc:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008cfe:	682b      	ldr	r3, [r5, #0]
 8008d00:	079b      	lsls	r3, r3, #30
 8008d02:	d507      	bpl.n	8008d14 <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8008d04:	682b      	ldr	r3, [r5, #0]
 8008d06:	6922      	ldr	r2, [r4, #16]
 8008d08:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8008d0c:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8008d10:	602b      	str	r3, [r5, #0]
 8008d12:	e773      	b.n	8008bfc <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8008d14:	f7fe fea8 	bl	8007a68 <HAL_GetTick>
 8008d18:	1b80      	subs	r0, r0, r6
 8008d1a:	2802      	cmp	r0, #2
 8008d1c:	d9ef      	bls.n	8008cfe <HAL_RCC_OscConfig+0x116>
 8008d1e:	e7a7      	b.n	8008c70 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 8008d20:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8008d22:	f7fe fea1 	bl	8007a68 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8008d26:	4e4a      	ldr	r6, [pc, #296]	@ (8008e50 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8008d28:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8008d2a:	6833      	ldr	r3, [r6, #0]
 8008d2c:	079f      	lsls	r7, r3, #30
 8008d2e:	f57f af65 	bpl.w	8008bfc <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8008d32:	f7fe fe99 	bl	8007a68 <HAL_GetTick>
 8008d36:	1b40      	subs	r0, r0, r5
 8008d38:	2802      	cmp	r0, #2
 8008d3a:	d9f6      	bls.n	8008d2a <HAL_RCC_OscConfig+0x142>
 8008d3c:	e798      	b.n	8008c70 <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8008d3e:	6962      	ldr	r2, [r4, #20]
 8008d40:	4b44      	ldr	r3, [pc, #272]	@ (8008e54 <HAL_RCC_OscConfig+0x26c>)
 8008d42:	b182      	cbz	r2, 8008d66 <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 8008d44:	2201      	movs	r2, #1
 8008d46:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 8008d4a:	f7fe fe8d 	bl	8007a68 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8008d4e:	4e40      	ldr	r6, [pc, #256]	@ (8008e50 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8008d50:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8008d52:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8008d54:	079b      	lsls	r3, r3, #30
 8008d56:	f53f af55 	bmi.w	8008c04 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8008d5a:	f7fe fe85 	bl	8007a68 <HAL_GetTick>
 8008d5e:	1b40      	subs	r0, r0, r5
 8008d60:	2802      	cmp	r0, #2
 8008d62:	d9f6      	bls.n	8008d52 <HAL_RCC_OscConfig+0x16a>
 8008d64:	e784      	b.n	8008c70 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 8008d66:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 8008d6a:	f7fe fe7d 	bl	8007a68 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8008d6e:	4e38      	ldr	r6, [pc, #224]	@ (8008e50 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8008d70:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8008d72:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8008d74:	079f      	lsls	r7, r3, #30
 8008d76:	f57f af45 	bpl.w	8008c04 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8008d7a:	f7fe fe75 	bl	8007a68 <HAL_GetTick>
 8008d7e:	1b40      	subs	r0, r0, r5
 8008d80:	2802      	cmp	r0, #2
 8008d82:	d9f6      	bls.n	8008d72 <HAL_RCC_OscConfig+0x18a>
 8008d84:	e774      	b.n	8008c70 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8008d86:	4b32      	ldr	r3, [pc, #200]	@ (8008e50 <HAL_RCC_OscConfig+0x268>)
 8008d88:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8008d8a:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 8008d8e:	d128      	bne.n	8008de2 <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 8008d90:	9201      	str	r2, [sp, #4]
 8008d92:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8008d94:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8008d98:	641a      	str	r2, [r3, #64]	@ 0x40
 8008d9a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008d9c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8008da0:	9301      	str	r3, [sp, #4]
 8008da2:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8008da4:	2701      	movs	r7, #1
    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8008da6:	4d2c      	ldr	r5, [pc, #176]	@ (8008e58 <HAL_RCC_OscConfig+0x270>)
 8008da8:	682b      	ldr	r3, [r5, #0]
 8008daa:	05d8      	lsls	r0, r3, #23
 8008dac:	d51b      	bpl.n	8008de6 <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8008dae:	68a3      	ldr	r3, [r4, #8]
 8008db0:	4d27      	ldr	r5, [pc, #156]	@ (8008e50 <HAL_RCC_OscConfig+0x268>)
 8008db2:	2b01      	cmp	r3, #1
 8008db4:	d127      	bne.n	8008e06 <HAL_RCC_OscConfig+0x21e>
 8008db6:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8008db8:	f043 0301 	orr.w	r3, r3, #1
 8008dbc:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 8008dbe:	f7fe fe53 	bl	8007a68 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8008dc2:	4e23      	ldr	r6, [pc, #140]	@ (8008e50 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8008dc4:	4605      	mov	r5, r0
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8008dc6:	f241 3888 	movw	r8, #5000	@ 0x1388
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8008dca:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 8008dcc:	079a      	lsls	r2, r3, #30
 8008dce:	d539      	bpl.n	8008e44 <HAL_RCC_OscConfig+0x25c>
    if (pwrclkchanged == SET)
 8008dd0:	2f00      	cmp	r7, #0
 8008dd2:	f43f af1b 	beq.w	8008c0c <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8008dd6:	4a1e      	ldr	r2, [pc, #120]	@ (8008e50 <HAL_RCC_OscConfig+0x268>)
 8008dd8:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8008dda:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8008dde:	6413      	str	r3, [r2, #64]	@ 0x40
 8008de0:	e714      	b.n	8008c0c <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8008de2:	2700      	movs	r7, #0
 8008de4:	e7df      	b.n	8008da6 <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8008de6:	682b      	ldr	r3, [r5, #0]
 8008de8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8008dec:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8008dee:	f7fe fe3b 	bl	8007a68 <HAL_GetTick>
 8008df2:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8008df4:	682b      	ldr	r3, [r5, #0]
 8008df6:	05d9      	lsls	r1, r3, #23
 8008df8:	d4d9      	bmi.n	8008dae <HAL_RCC_OscConfig+0x1c6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8008dfa:	f7fe fe35 	bl	8007a68 <HAL_GetTick>
 8008dfe:	1b80      	subs	r0, r0, r6
 8008e00:	2802      	cmp	r0, #2
 8008e02:	d9f7      	bls.n	8008df4 <HAL_RCC_OscConfig+0x20c>
 8008e04:	e734      	b.n	8008c70 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8008e06:	2b05      	cmp	r3, #5
 8008e08:	d104      	bne.n	8008e14 <HAL_RCC_OscConfig+0x22c>
 8008e0a:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8008e0c:	f043 0304 	orr.w	r3, r3, #4
 8008e10:	672b      	str	r3, [r5, #112]	@ 0x70
 8008e12:	e7d0      	b.n	8008db6 <HAL_RCC_OscConfig+0x1ce>
 8008e14:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 8008e16:	f022 0201 	bic.w	r2, r2, #1
 8008e1a:	672a      	str	r2, [r5, #112]	@ 0x70
 8008e1c:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 8008e1e:	f022 0204 	bic.w	r2, r2, #4
 8008e22:	672a      	str	r2, [r5, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8008e24:	2b00      	cmp	r3, #0
 8008e26:	d1ca      	bne.n	8008dbe <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 8008e28:	f7fe fe1e 	bl	8007a68 <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8008e2c:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8008e30:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8008e32:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8008e34:	079b      	lsls	r3, r3, #30
 8008e36:	d5cb      	bpl.n	8008dd0 <HAL_RCC_OscConfig+0x1e8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8008e38:	f7fe fe16 	bl	8007a68 <HAL_GetTick>
 8008e3c:	1b80      	subs	r0, r0, r6
 8008e3e:	4540      	cmp	r0, r8
 8008e40:	d9f7      	bls.n	8008e32 <HAL_RCC_OscConfig+0x24a>
 8008e42:	e715      	b.n	8008c70 <HAL_RCC_OscConfig+0x88>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8008e44:	f7fe fe10 	bl	8007a68 <HAL_GetTick>
 8008e48:	1b40      	subs	r0, r0, r5
 8008e4a:	4540      	cmp	r0, r8
 8008e4c:	d9bd      	bls.n	8008dca <HAL_RCC_OscConfig+0x1e2>
 8008e4e:	e70f      	b.n	8008c70 <HAL_RCC_OscConfig+0x88>
 8008e50:	40023800 	.word	0x40023800
 8008e54:	42470000 	.word	0x42470000
 8008e58:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8008e5c:	4d37      	ldr	r5, [pc, #220]	@ (8008f3c <HAL_RCC_OscConfig+0x354>)
 8008e5e:	68aa      	ldr	r2, [r5, #8]
 8008e60:	f002 020c 	and.w	r2, r2, #12
 8008e64:	2a08      	cmp	r2, #8
 8008e66:	d03e      	beq.n	8008ee6 <HAL_RCC_OscConfig+0x2fe>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8008e68:	2b02      	cmp	r3, #2
 8008e6a:	4b35      	ldr	r3, [pc, #212]	@ (8008f40 <HAL_RCC_OscConfig+0x358>)
 8008e6c:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 8008e70:	661a      	str	r2, [r3, #96]	@ 0x60
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8008e72:	d12b      	bne.n	8008ecc <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 8008e74:	f7fe fdf8 	bl	8007a68 <HAL_GetTick>
 8008e78:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8008e7a:	682b      	ldr	r3, [r5, #0]
 8008e7c:	0199      	lsls	r1, r3, #6
 8008e7e:	d41f      	bmi.n	8008ec0 <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8008e80:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8008e84:	4313      	orrs	r3, r2
 8008e86:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8008e88:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8008e8c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8008e8e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8008e92:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8008e94:	0852      	lsrs	r2, r2, #1
 8008e96:	3a01      	subs	r2, #1
 8008e98:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8008e9c:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8008e9e:	4b28      	ldr	r3, [pc, #160]	@ (8008f40 <HAL_RCC_OscConfig+0x358>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8008ea0:	4d26      	ldr	r5, [pc, #152]	@ (8008f3c <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 8008ea2:	2201      	movs	r2, #1
 8008ea4:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 8008ea6:	f7fe fddf 	bl	8007a68 <HAL_GetTick>
 8008eaa:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8008eac:	682b      	ldr	r3, [r5, #0]
 8008eae:	019a      	lsls	r2, r3, #6
 8008eb0:	f53f aeb0 	bmi.w	8008c14 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8008eb4:	f7fe fdd8 	bl	8007a68 <HAL_GetTick>
 8008eb8:	1b00      	subs	r0, r0, r4
 8008eba:	2802      	cmp	r0, #2
 8008ebc:	d9f6      	bls.n	8008eac <HAL_RCC_OscConfig+0x2c4>
 8008ebe:	e6d7      	b.n	8008c70 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8008ec0:	f7fe fdd2 	bl	8007a68 <HAL_GetTick>
 8008ec4:	1b80      	subs	r0, r0, r6
 8008ec6:	2802      	cmp	r0, #2
 8008ec8:	d9d7      	bls.n	8008e7a <HAL_RCC_OscConfig+0x292>
 8008eca:	e6d1      	b.n	8008c70 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 8008ecc:	f7fe fdcc 	bl	8007a68 <HAL_GetTick>
 8008ed0:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8008ed2:	682b      	ldr	r3, [r5, #0]
 8008ed4:	019b      	lsls	r3, r3, #6
 8008ed6:	f57f ae9d 	bpl.w	8008c14 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8008eda:	f7fe fdc5 	bl	8007a68 <HAL_GetTick>
 8008ede:	1b00      	subs	r0, r0, r4
 8008ee0:	2802      	cmp	r0, #2
 8008ee2:	d9f6      	bls.n	8008ed2 <HAL_RCC_OscConfig+0x2ea>
 8008ee4:	e6c4      	b.n	8008c70 <HAL_RCC_OscConfig+0x88>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8008ee6:	2b01      	cmp	r3, #1
 8008ee8:	f43f aeab 	beq.w	8008c42 <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 8008eec:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8008eee:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8008ef0:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8008ef4:	4291      	cmp	r1, r2
 8008ef6:	f47f aea4 	bne.w	8008c42 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8008efa:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8008efc:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8008f00:	428a      	cmp	r2, r1
 8008f02:	f47f ae9e 	bne.w	8008c42 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8008f06:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8008f08:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 8008f0c:	401a      	ands	r2, r3
 8008f0e:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8008f12:	f47f ae96 	bne.w	8008c42 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8008f16:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8008f18:	0852      	lsrs	r2, r2, #1
 8008f1a:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 8008f1e:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8008f20:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8008f24:	f47f ae8d 	bne.w	8008c42 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8008f28:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8008f2a:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8008f2e:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 8008f32:	bf14      	ite	ne
 8008f34:	2001      	movne	r0, #1
 8008f36:	2000      	moveq	r0, #0
 8008f38:	e69b      	b.n	8008c72 <HAL_RCC_OscConfig+0x8a>
 8008f3a:	bf00      	nop
 8008f3c:	40023800 	.word	0x40023800
 8008f40:	42470000 	.word	0x42470000

08008f44 <HAL_RCC_GetSysClockFreq>:
  uint32_t pllvco = 0U;
  uint32_t pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8008f44:	4913      	ldr	r1, [pc, #76]	@ (8008f94 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8008f46:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8008f48:	688b      	ldr	r3, [r1, #8]
 8008f4a:	f003 030c 	and.w	r3, r3, #12
 8008f4e:	2b04      	cmp	r3, #4
 8008f50:	d01c      	beq.n	8008f8c <HAL_RCC_GetSysClockFreq+0x48>
 8008f52:	2b08      	cmp	r3, #8
 8008f54:	d11c      	bne.n	8008f90 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8008f56:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8008f58:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008f5a:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8008f5c:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008f60:	bf14      	ite	ne
 8008f62:	480d      	ldrne	r0, [pc, #52]	@ (8008f98 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008f64:	480d      	ldreq	r0, [pc, #52]	@ (8008f9c <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008f66:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8008f6a:	bf18      	it	ne
 8008f6c:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8008f6e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008f72:	fba1 0100 	umull	r0, r1, r1, r0
 8008f76:	f7f7 f9db 	bl	8000330 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 8008f7a:	4b06      	ldr	r3, [pc, #24]	@ (8008f94 <HAL_RCC_GetSysClockFreq+0x50>)
 8008f7c:	685b      	ldr	r3, [r3, #4]
 8008f7e:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8008f82:	3301      	adds	r3, #1
 8008f84:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 8008f86:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8008f8a:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8008f8c:	4802      	ldr	r0, [pc, #8]	@ (8008f98 <HAL_RCC_GetSysClockFreq+0x54>)
 8008f8e:	e7fc      	b.n	8008f8a <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8008f90:	4802      	ldr	r0, [pc, #8]	@ (8008f9c <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8008f92:	e7fa      	b.n	8008f8a <HAL_RCC_GetSysClockFreq+0x46>
 8008f94:	40023800 	.word	0x40023800
 8008f98:	007a1200 	.word	0x007a1200
 8008f9c:	00f42400 	.word	0x00f42400

08008fa0 <HAL_RCC_ClockConfig>:
{
 8008fa0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008fa4:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 8008fa6:	4604      	mov	r4, r0
 8008fa8:	b910      	cbnz	r0, 8008fb0 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8008faa:	2001      	movs	r0, #1
}
 8008fac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8008fb0:	4b43      	ldr	r3, [pc, #268]	@ (80090c0 <HAL_RCC_ClockConfig+0x120>)
 8008fb2:	681a      	ldr	r2, [r3, #0]
 8008fb4:	f002 020f 	and.w	r2, r2, #15
 8008fb8:	428a      	cmp	r2, r1
 8008fba:	d328      	bcc.n	800900e <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8008fbc:	6821      	ldr	r1, [r4, #0]
 8008fbe:	078f      	lsls	r7, r1, #30
 8008fc0:	d42d      	bmi.n	800901e <HAL_RCC_ClockConfig+0x7e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8008fc2:	07c8      	lsls	r0, r1, #31
 8008fc4:	d440      	bmi.n	8009048 <HAL_RCC_ClockConfig+0xa8>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8008fc6:	4b3e      	ldr	r3, [pc, #248]	@ (80090c0 <HAL_RCC_ClockConfig+0x120>)
 8008fc8:	681a      	ldr	r2, [r3, #0]
 8008fca:	f002 020f 	and.w	r2, r2, #15
 8008fce:	42aa      	cmp	r2, r5
 8008fd0:	d865      	bhi.n	800909e <HAL_RCC_ClockConfig+0xfe>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8008fd2:	6822      	ldr	r2, [r4, #0]
 8008fd4:	0751      	lsls	r1, r2, #29
 8008fd6:	d46b      	bmi.n	80090b0 <HAL_RCC_ClockConfig+0x110>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8008fd8:	0713      	lsls	r3, r2, #28
 8008fda:	d507      	bpl.n	8008fec <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8008fdc:	4a39      	ldr	r2, [pc, #228]	@ (80090c4 <HAL_RCC_ClockConfig+0x124>)
 8008fde:	6921      	ldr	r1, [r4, #16]
 8008fe0:	6893      	ldr	r3, [r2, #8]
 8008fe2:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 8008fe6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8008fea:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8008fec:	f7ff ffaa 	bl	8008f44 <HAL_RCC_GetSysClockFreq>
 8008ff0:	4b34      	ldr	r3, [pc, #208]	@ (80090c4 <HAL_RCC_ClockConfig+0x124>)
 8008ff2:	4a35      	ldr	r2, [pc, #212]	@ (80090c8 <HAL_RCC_ClockConfig+0x128>)
 8008ff4:	689b      	ldr	r3, [r3, #8]
 8008ff6:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8008ffa:	5cd3      	ldrb	r3, [r2, r3]
 8008ffc:	40d8      	lsrs	r0, r3
 8008ffe:	4b33      	ldr	r3, [pc, #204]	@ (80090cc <HAL_RCC_ClockConfig+0x12c>)
 8009000:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 8009002:	4b33      	ldr	r3, [pc, #204]	@ (80090d0 <HAL_RCC_ClockConfig+0x130>)
 8009004:	6818      	ldr	r0, [r3, #0]
 8009006:	f7f8 fb01 	bl	800160c <HAL_InitTick>
  return HAL_OK;
 800900a:	2000      	movs	r0, #0
 800900c:	e7ce      	b.n	8008fac <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800900e:	b2ca      	uxtb	r2, r1
 8009010:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8009012:	681b      	ldr	r3, [r3, #0]
 8009014:	f003 030f 	and.w	r3, r3, #15
 8009018:	428b      	cmp	r3, r1
 800901a:	d1c6      	bne.n	8008faa <HAL_RCC_ClockConfig+0xa>
 800901c:	e7ce      	b.n	8008fbc <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800901e:	4b29      	ldr	r3, [pc, #164]	@ (80090c4 <HAL_RCC_ClockConfig+0x124>)
 8009020:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8009024:	bf1e      	ittt	ne
 8009026:	689a      	ldrne	r2, [r3, #8]
 8009028:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 800902c:	609a      	strne	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800902e:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8009030:	bf42      	ittt	mi
 8009032:	689a      	ldrmi	r2, [r3, #8]
 8009034:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 8009038:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800903a:	689a      	ldr	r2, [r3, #8]
 800903c:	68a0      	ldr	r0, [r4, #8]
 800903e:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 8009042:	4302      	orrs	r2, r0
 8009044:	609a      	str	r2, [r3, #8]
 8009046:	e7bc      	b.n	8008fc2 <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8009048:	6862      	ldr	r2, [r4, #4]
 800904a:	4b1e      	ldr	r3, [pc, #120]	@ (80090c4 <HAL_RCC_ClockConfig+0x124>)
 800904c:	2a01      	cmp	r2, #1
 800904e:	d11c      	bne.n	800908a <HAL_RCC_ClockConfig+0xea>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8009050:	681b      	ldr	r3, [r3, #0]
 8009052:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8009056:	d0a8      	beq.n	8008faa <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8009058:	4e1a      	ldr	r6, [pc, #104]	@ (80090c4 <HAL_RCC_ClockConfig+0x124>)
 800905a:	68b3      	ldr	r3, [r6, #8]
 800905c:	f023 0303 	bic.w	r3, r3, #3
 8009060:	4313      	orrs	r3, r2
 8009062:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8009064:	f7fe fd00 	bl	8007a68 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8009068:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 800906c:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800906e:	68b3      	ldr	r3, [r6, #8]
 8009070:	6862      	ldr	r2, [r4, #4]
 8009072:	f003 030c 	and.w	r3, r3, #12
 8009076:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800907a:	d0a4      	beq.n	8008fc6 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800907c:	f7fe fcf4 	bl	8007a68 <HAL_GetTick>
 8009080:	1bc0      	subs	r0, r0, r7
 8009082:	4540      	cmp	r0, r8
 8009084:	d9f3      	bls.n	800906e <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 8009086:	2003      	movs	r0, #3
 8009088:	e790      	b.n	8008fac <HAL_RCC_ClockConfig+0xc>
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800908a:	1e91      	subs	r1, r2, #2
 800908c:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800908e:	681b      	ldr	r3, [r3, #0]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8009090:	d802      	bhi.n	8009098 <HAL_RCC_ClockConfig+0xf8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8009092:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 8009096:	e7de      	b.n	8009056 <HAL_RCC_ClockConfig+0xb6>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8009098:	f013 0f02 	tst.w	r3, #2
 800909c:	e7db      	b.n	8009056 <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800909e:	b2ea      	uxtb	r2, r5
 80090a0:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80090a2:	681b      	ldr	r3, [r3, #0]
 80090a4:	f003 030f 	and.w	r3, r3, #15
 80090a8:	42ab      	cmp	r3, r5
 80090aa:	f47f af7e 	bne.w	8008faa <HAL_RCC_ClockConfig+0xa>
 80090ae:	e790      	b.n	8008fd2 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80090b0:	4904      	ldr	r1, [pc, #16]	@ (80090c4 <HAL_RCC_ClockConfig+0x124>)
 80090b2:	68e0      	ldr	r0, [r4, #12]
 80090b4:	688b      	ldr	r3, [r1, #8]
 80090b6:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 80090ba:	4303      	orrs	r3, r0
 80090bc:	608b      	str	r3, [r1, #8]
 80090be:	e78b      	b.n	8008fd8 <HAL_RCC_ClockConfig+0x38>
 80090c0:	40023c00 	.word	0x40023c00
 80090c4:	40023800 	.word	0x40023800
 80090c8:	0802888c 	.word	0x0802888c
 80090cc:	20000074 	.word	0x20000074
 80090d0:	2000007c 	.word	0x2000007c

080090d4 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 80090d4:	4b04      	ldr	r3, [pc, #16]	@ (80090e8 <HAL_RCC_GetPCLK1Freq+0x14>)
 80090d6:	4a05      	ldr	r2, [pc, #20]	@ (80090ec <HAL_RCC_GetPCLK1Freq+0x18>)
 80090d8:	689b      	ldr	r3, [r3, #8]
 80090da:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80090de:	5cd3      	ldrb	r3, [r2, r3]
 80090e0:	4a03      	ldr	r2, [pc, #12]	@ (80090f0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80090e2:	6810      	ldr	r0, [r2, #0]
}
 80090e4:	40d8      	lsrs	r0, r3
 80090e6:	4770      	bx	lr
 80090e8:	40023800 	.word	0x40023800
 80090ec:	08028884 	.word	0x08028884
 80090f0:	20000074 	.word	0x20000074

080090f4 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 80090f4:	230f      	movs	r3, #15
 80090f6:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80090f8:	4b0b      	ldr	r3, [pc, #44]	@ (8009128 <HAL_RCC_GetClockConfig+0x34>)
 80090fa:	689a      	ldr	r2, [r3, #8]
 80090fc:	f002 0203 	and.w	r2, r2, #3
 8009100:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8009102:	689a      	ldr	r2, [r3, #8]
 8009104:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 8009108:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800910a:	689a      	ldr	r2, [r3, #8]
 800910c:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 8009110:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8009112:	689b      	ldr	r3, [r3, #8]
 8009114:	08db      	lsrs	r3, r3, #3
 8009116:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 800911a:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800911c:	4b03      	ldr	r3, [pc, #12]	@ (800912c <HAL_RCC_GetClockConfig+0x38>)
 800911e:	681b      	ldr	r3, [r3, #0]
 8009120:	f003 030f 	and.w	r3, r3, #15
 8009124:	600b      	str	r3, [r1, #0]
}
 8009126:	4770      	bx	lr
 8009128:	40023800 	.word	0x40023800
 800912c:	40023c00 	.word	0x40023c00

08009130 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8009130:	6803      	ldr	r3, [r0, #0]
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8009132:	f013 0f43 	tst.w	r3, #67	@ 0x43
{
 8009136:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009138:	4604      	mov	r4, r0
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800913a:	f040 8088 	bne.w	800924e <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800913e:	6823      	ldr	r3, [r4, #0]
 8009140:	f013 0f0c 	tst.w	r3, #12
 8009144:	d045      	beq.n	80091d2 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8009146:	4b8c      	ldr	r3, [pc, #560]	@ (8009378 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8009148:	4d8c      	ldr	r5, [pc, #560]	@ (800937c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_DISABLE();
 800914a:	2200      	movs	r2, #0
 800914c:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 800914e:	f7fe fc8b 	bl	8007a68 <HAL_GetTick>
 8009152:	4606      	mov	r6, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8009154:	682b      	ldr	r3, [r5, #0]
 8009156:	0099      	lsls	r1, r3, #2
 8009158:	f100 80cb 	bmi.w	80092f2 <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800915c:	6821      	ldr	r1, [r4, #0]
 800915e:	074a      	lsls	r2, r1, #29
 8009160:	d515      	bpl.n	800918e <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8009162:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8009166:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800916a:	061b      	lsls	r3, r3, #24
 800916c:	f002 42e0 	and.w	r2, r2, #1879048192	@ 0x70000000
 8009170:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8009174:	4313      	orrs	r3, r2
 8009176:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800917a:	f8d5 308c 	ldr.w	r3, [r5, #140]	@ 0x8c
 800917e:	6a22      	ldr	r2, [r4, #32]
 8009180:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 8009184:	3a01      	subs	r2, #1
 8009186:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800918a:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800918e:	070b      	lsls	r3, r1, #28
 8009190:	d514      	bpl.n	80091bc <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8009192:	4a7a      	ldr	r2, [pc, #488]	@ (800937c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8009194:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8009196:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800919a:	6920      	ldr	r0, [r4, #16]
 800919c:	071b      	lsls	r3, r3, #28
 800919e:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 80091a2:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80091a6:	430b      	orrs	r3, r1
 80091a8:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80091ac:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 80091b0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80091b2:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 80091b6:	430b      	orrs	r3, r1
 80091b8:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80091bc:	4b6e      	ldr	r3, [pc, #440]	@ (8009378 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80091be:	4e6f      	ldr	r6, [pc, #444]	@ (800937c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_ENABLE();
 80091c0:	2201      	movs	r2, #1
 80091c2:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 80091c4:	f7fe fc50 	bl	8007a68 <HAL_GetTick>
 80091c8:	4605      	mov	r5, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80091ca:	6833      	ldr	r3, [r6, #0]
 80091cc:	009f      	lsls	r7, r3, #2
 80091ce:	f140 8097 	bpl.w	8009300 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80091d2:	6823      	ldr	r3, [r4, #0]
 80091d4:	0698      	lsls	r0, r3, #26
 80091d6:	d534      	bpl.n	8009242 <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80091d8:	2300      	movs	r3, #0
 80091da:	9301      	str	r3, [sp, #4]
 80091dc:	4b67      	ldr	r3, [pc, #412]	@ (800937c <HAL_RCCEx_PeriphCLKConfig+0x24c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 80091de:	4d68      	ldr	r5, [pc, #416]	@ (8009380 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PWR_CLK_ENABLE();
 80091e0:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80091e2:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80091e6:	641a      	str	r2, [r3, #64]	@ 0x40
 80091e8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80091ea:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80091ee:	9301      	str	r3, [sp, #4]
 80091f0:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 80091f2:	682b      	ldr	r3, [r5, #0]
 80091f4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80091f8:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 80091fa:	f7fe fc35 	bl	8007a68 <HAL_GetTick>
 80091fe:	4606      	mov	r6, r0

    while ((PWR->CR & PWR_CR_DBP) == RESET)
 8009200:	682b      	ldr	r3, [r5, #0]
 8009202:	05d8      	lsls	r0, r3, #23
 8009204:	f140 8083 	bpl.w	800930e <HAL_RCCEx_PeriphCLKConfig+0x1de>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8009208:	4d5c      	ldr	r5, [pc, #368]	@ (800937c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800920a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800920c:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800920e:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 8009212:	f040 8083 	bne.w	800931c <HAL_RCCEx_PeriphCLKConfig+0x1ec>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8009216:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8009218:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 800921c:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 8009220:	4a56      	ldr	r2, [pc, #344]	@ (800937c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 8009222:	f040 809e 	bne.w	8009362 <HAL_RCCEx_PeriphCLKConfig+0x232>
 8009226:	6891      	ldr	r1, [r2, #8]
 8009228:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 800922c:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8009230:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 8009234:	4301      	orrs	r1, r0
 8009236:	6091      	str	r1, [r2, #8]
 8009238:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 800923a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800923e:	430b      	orrs	r3, r1
 8009240:	6713      	str	r3, [r2, #112]	@ 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8009242:	6823      	ldr	r3, [r4, #0]
 8009244:	06db      	lsls	r3, r3, #27
 8009246:	f100 8090 	bmi.w	800936a <HAL_RCCEx_PeriphCLKConfig+0x23a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
 800924a:	2000      	movs	r0, #0
 800924c:	e04f      	b.n	80092ee <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 800924e:	4b4a      	ldr	r3, [pc, #296]	@ (8009378 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8009250:	4e4a      	ldr	r6, [pc, #296]	@ (800937c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_DISABLE();
 8009252:	2200      	movs	r2, #0
 8009254:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8009256:	f7fe fc07 	bl	8007a68 <HAL_GetTick>
 800925a:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800925c:	6833      	ldr	r3, [r6, #0]
 800925e:	011f      	lsls	r7, r3, #4
 8009260:	d43f      	bmi.n	80092e2 <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8009262:	6821      	ldr	r1, [r4, #0]
 8009264:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SR);
 8009266:	bf41      	itttt	mi
 8009268:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800926c:	071b      	lslmi	r3, r3, #28
 800926e:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8009272:	f8c6 3084 	strmi.w	r3, [r6, #132]	@ 0x84
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8009276:	078a      	lsls	r2, r1, #30
 8009278:	d515      	bpl.n	80092a6 <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800927a:	4a40      	ldr	r2, [pc, #256]	@ (800937c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800927c:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800927e:	f8d2 0084 	ldr.w	r0, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8009282:	6865      	ldr	r5, [r4, #4]
 8009284:	061b      	lsls	r3, r3, #24
 8009286:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 800928a:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 800928e:	4303      	orrs	r3, r0
 8009290:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8009294:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 8009298:	69e3      	ldr	r3, [r4, #28]
 800929a:	f020 001f 	bic.w	r0, r0, #31
 800929e:	3b01      	subs	r3, #1
 80092a0:	4303      	orrs	r3, r0
 80092a2:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80092a6:	064b      	lsls	r3, r1, #25
 80092a8:	d50a      	bpl.n	80092c0 <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ,
 80092aa:	68e3      	ldr	r3, [r4, #12]
 80092ac:	6862      	ldr	r2, [r4, #4]
 80092ae:	061b      	lsls	r3, r3, #24
 80092b0:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80092b4:	68a2      	ldr	r2, [r4, #8]
 80092b6:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80092ba:	4a30      	ldr	r2, [pc, #192]	@ (800937c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 80092bc:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80092c0:	4b2d      	ldr	r3, [pc, #180]	@ (8009378 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80092c2:	4e2e      	ldr	r6, [pc, #184]	@ (800937c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_ENABLE();
 80092c4:	2201      	movs	r2, #1
 80092c6:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 80092c8:	f7fe fbce 	bl	8007a68 <HAL_GetTick>
 80092cc:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80092ce:	6833      	ldr	r3, [r6, #0]
 80092d0:	011f      	lsls	r7, r3, #4
 80092d2:	f53f af34 	bmi.w	800913e <HAL_RCCEx_PeriphCLKConfig+0xe>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 80092d6:	f7fe fbc7 	bl	8007a68 <HAL_GetTick>
 80092da:	1b40      	subs	r0, r0, r5
 80092dc:	2802      	cmp	r0, #2
 80092de:	d9f6      	bls.n	80092ce <HAL_RCCEx_PeriphCLKConfig+0x19e>
 80092e0:	e004      	b.n	80092ec <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 80092e2:	f7fe fbc1 	bl	8007a68 <HAL_GetTick>
 80092e6:	1b40      	subs	r0, r0, r5
 80092e8:	2802      	cmp	r0, #2
 80092ea:	d9b7      	bls.n	800925c <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 80092ec:	2003      	movs	r0, #3
}
 80092ee:	b003      	add	sp, #12
 80092f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 80092f2:	f7fe fbb9 	bl	8007a68 <HAL_GetTick>
 80092f6:	1b80      	subs	r0, r0, r6
 80092f8:	2802      	cmp	r0, #2
 80092fa:	f67f af2b 	bls.w	8009154 <HAL_RCCEx_PeriphCLKConfig+0x24>
 80092fe:	e7f5      	b.n	80092ec <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8009300:	f7fe fbb2 	bl	8007a68 <HAL_GetTick>
 8009304:	1b40      	subs	r0, r0, r5
 8009306:	2802      	cmp	r0, #2
 8009308:	f67f af5f 	bls.w	80091ca <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800930c:	e7ee      	b.n	80092ec <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800930e:	f7fe fbab 	bl	8007a68 <HAL_GetTick>
 8009312:	1b80      	subs	r0, r0, r6
 8009314:	2802      	cmp	r0, #2
 8009316:	f67f af73 	bls.w	8009200 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 800931a:	e7e7      	b.n	80092ec <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800931c:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 8009320:	4293      	cmp	r3, r2
 8009322:	f43f af78 	beq.w	8009216 <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8009326:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8009328:	4a13      	ldr	r2, [pc, #76]	@ (8009378 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800932a:	2101      	movs	r1, #1
 800932c:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8009330:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8009334:	2100      	movs	r1, #0
 8009336:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 800933a:	672b      	str	r3, [r5, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800933c:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800933e:	07d9      	lsls	r1, r3, #31
 8009340:	f57f af69 	bpl.w	8009216 <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 8009344:	f7fe fb90 	bl	8007a68 <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8009348:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 800934c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800934e:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8009350:	079a      	lsls	r2, r3, #30
 8009352:	f53f af60 	bmi.w	8009216 <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8009356:	f7fe fb87 	bl	8007a68 <HAL_GetTick>
 800935a:	1b80      	subs	r0, r0, r6
 800935c:	42b8      	cmp	r0, r7
 800935e:	d9f6      	bls.n	800934e <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8009360:	e7c4      	b.n	80092ec <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8009362:	6891      	ldr	r1, [r2, #8]
 8009364:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8009368:	e765      	b.n	8009236 <HAL_RCCEx_PeriphCLKConfig+0x106>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800936a:	4b06      	ldr	r3, [pc, #24]	@ (8009384 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 800936c:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 8009370:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
 8009374:	e769      	b.n	800924a <HAL_RCCEx_PeriphCLKConfig+0x11a>
 8009376:	bf00      	nop
 8009378:	42470000 	.word	0x42470000
 800937c:	40023800 	.word	0x40023800
 8009380:	40007000 	.word	0x40007000
 8009384:	42471000 	.word	0x42471000

08009388 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8009388:	b538      	push	{r3, r4, r5, lr}
 800938a:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800938c:	4604      	mov	r4, r0
 800938e:	b1c8      	cbz	r0, 80093c4 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8009390:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8009394:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8009398:	b91b      	cbnz	r3, 80093a2 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800939a:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800939e:	f7f8 f8c9 	bl	8001534 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80093a2:	2302      	movs	r3, #2
 80093a4:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80093a8:	1d21      	adds	r1, r4, #4
 80093aa:	6820      	ldr	r0, [r4, #0]
 80093ac:	f000 fd0e 	bl	8009dcc <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 80093b0:	6862      	ldr	r2, [r4, #4]
 80093b2:	6820      	ldr	r0, [r4, #0]
 80093b4:	4629      	mov	r1, r5
 80093b6:	f000 fd3f 	bl	8009e38 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80093ba:	2301      	movs	r3, #1
 80093bc:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 80093c0:	2000      	movs	r0, #0
}
 80093c2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80093c4:	2001      	movs	r0, #1
 80093c6:	e7fc      	b.n	80093c2 <HAL_SDRAM_Init+0x3a>

080093c8 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 80093c8:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 80093ca:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 80093ce:	2b02      	cmp	r3, #2
{
 80093d0:	4605      	mov	r5, r0
 80093d2:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 80093d4:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 80093d6:	d012      	beq.n	80093fe <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 80093d8:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 80093dc:	2c01      	cmp	r4, #1
 80093de:	d10f      	bne.n	8009400 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80093e0:	2302      	movs	r3, #2
 80093e2:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80093e6:	6828      	ldr	r0, [r5, #0]
 80093e8:	f000 fd5c 	bl	8009ea4 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80093ec:	6833      	ldr	r3, [r6, #0]
 80093ee:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80093f0:	bf06      	itte	eq
 80093f2:	2305      	moveq	r3, #5
 80093f4:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 80093f8:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 80093fc:	2000      	movs	r0, #0
}
 80093fe:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 8009400:	2001      	movs	r0, #1
 8009402:	e7fc      	b.n	80093fe <HAL_SDRAM_SendCommand+0x36>

08009404 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8009404:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8009406:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800940a:	2b02      	cmp	r3, #2
{
 800940c:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800940e:	b2d8      	uxtb	r0, r3
 8009410:	d00d      	beq.n	800942e <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8009412:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8009416:	2b01      	cmp	r3, #1
 8009418:	b2dd      	uxtb	r5, r3
 800941a:	d109      	bne.n	8009430 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800941c:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800941e:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8009420:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8009424:	f000 fd62 	bl	8009eec <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8009428:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800942c:	2000      	movs	r0, #0
}
 800942e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8009430:	2001      	movs	r0, #1
 8009432:	e7fc      	b.n	800942e <HAL_SDRAM_ProgramRefreshRate+0x2a>

08009434 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8009434:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8009438:	461f      	mov	r7, r3
 800943a:	4689      	mov	r9, r1
 800943c:	4690      	mov	r8, r2
 800943e:	4604      	mov	r4, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8009440:	f7fe fb12 	bl	8007a68 <HAL_GetTick>
 8009444:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8009446:	443d      	add	r5, r7
 8009448:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800944a:	f7fe fb0d 	bl	8007a68 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800944e:	4b26      	ldr	r3, [pc, #152]	@ (80094e8 <SPI_WaitFlagStateUntilTimeout+0xb4>)
 8009450:	681e      	ldr	r6, [r3, #0]
 8009452:	f3c6 36cb 	ubfx	r6, r6, #15, #12
 8009456:	436e      	muls	r6, r5
  tmp_tickstart = HAL_GetTick();
 8009458:	4682      	mov	sl, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800945a:	9601      	str	r6, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800945c:	6822      	ldr	r2, [r4, #0]
 800945e:	6893      	ldr	r3, [r2, #8]
 8009460:	ea39 0303 	bics.w	r3, r9, r3
 8009464:	bf0c      	ite	eq
 8009466:	2301      	moveq	r3, #1
 8009468:	2300      	movne	r3, #0
 800946a:	4543      	cmp	r3, r8
 800946c:	d101      	bne.n	8009472 <SPI_WaitFlagStateUntilTimeout+0x3e>
      }
      count--;
    }
  }

  return HAL_OK;
 800946e:	2000      	movs	r0, #0
 8009470:	e02e      	b.n	80094d0 <SPI_WaitFlagStateUntilTimeout+0x9c>
    if (Timeout != HAL_MAX_DELAY)
 8009472:	1c7b      	adds	r3, r7, #1
 8009474:	d0f3      	beq.n	800945e <SPI_WaitFlagStateUntilTimeout+0x2a>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8009476:	f7fe faf7 	bl	8007a68 <HAL_GetTick>
 800947a:	eba0 000a 	sub.w	r0, r0, sl
 800947e:	42a8      	cmp	r0, r5
 8009480:	d329      	bcc.n	80094d6 <SPI_WaitFlagStateUntilTimeout+0xa2>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8009482:	6823      	ldr	r3, [r4, #0]
 8009484:	685a      	ldr	r2, [r3, #4]
 8009486:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 800948a:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800948c:	6862      	ldr	r2, [r4, #4]
 800948e:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8009492:	d10a      	bne.n	80094aa <SPI_WaitFlagStateUntilTimeout+0x76>
 8009494:	68a2      	ldr	r2, [r4, #8]
 8009496:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 800949a:	d002      	beq.n	80094a2 <SPI_WaitFlagStateUntilTimeout+0x6e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800949c:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80094a0:	d103      	bne.n	80094aa <SPI_WaitFlagStateUntilTimeout+0x76>
          __HAL_SPI_DISABLE(hspi);
 80094a2:	681a      	ldr	r2, [r3, #0]
 80094a4:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80094a8:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 80094aa:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80094ac:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 80094b0:	d107      	bne.n	80094c2 <SPI_WaitFlagStateUntilTimeout+0x8e>
          SPI_RESET_CRC(hspi);
 80094b2:	681a      	ldr	r2, [r3, #0]
 80094b4:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80094b8:	601a      	str	r2, [r3, #0]
 80094ba:	681a      	ldr	r2, [r3, #0]
 80094bc:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80094c0:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 80094c2:	2301      	movs	r3, #1
 80094c4:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 80094c8:	2300      	movs	r3, #0
 80094ca:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 80094ce:	2003      	movs	r0, #3
}
 80094d0:	b002      	add	sp, #8
 80094d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (count == 0U)
 80094d6:	9a01      	ldr	r2, [sp, #4]
      count--;
 80094d8:	9b01      	ldr	r3, [sp, #4]
      if (count == 0U)
 80094da:	2a00      	cmp	r2, #0
      count--;
 80094dc:	f103 33ff 	add.w	r3, r3, #4294967295
 80094e0:	9301      	str	r3, [sp, #4]
 80094e2:	bf08      	it	eq
 80094e4:	4615      	moveq	r5, r2
 80094e6:	e7b9      	b.n	800945c <SPI_WaitFlagStateUntilTimeout+0x28>
 80094e8:	20000074 	.word	0x20000074

080094ec <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 80094ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80094ee:	b085      	sub	sp, #20
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 80094f0:	460b      	mov	r3, r1
 80094f2:	9200      	str	r2, [sp, #0]
{
 80094f4:	460e      	mov	r6, r1
 80094f6:	4617      	mov	r7, r2
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 80094f8:	2102      	movs	r1, #2
 80094fa:	2201      	movs	r2, #1
{
 80094fc:	4604      	mov	r4, r0
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 80094fe:	f7ff ff99 	bl	8009434 <SPI_WaitFlagStateUntilTimeout>
 8009502:	4605      	mov	r5, r0
 8009504:	b128      	cbz	r0, 8009512 <SPI_EndRxTxTransaction+0x26>
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8009506:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8009508:	f043 0320 	orr.w	r3, r3, #32
 800950c:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_TIMEOUT;
 800950e:	2503      	movs	r5, #3
 8009510:	e015      	b.n	800953e <SPI_EndRxTxTransaction+0x52>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8009512:	4b12      	ldr	r3, [pc, #72]	@ (800955c <SPI_EndRxTxTransaction+0x70>)
 8009514:	6818      	ldr	r0, [r3, #0]
 8009516:	4b12      	ldr	r3, [pc, #72]	@ (8009560 <SPI_EndRxTxTransaction+0x74>)
 8009518:	fbb0 f0f3 	udiv	r0, r0, r3
 800951c:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8009520:	4358      	muls	r0, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8009522:	6863      	ldr	r3, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8009524:	9003      	str	r0, [sp, #12]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8009526:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800952a:	d10b      	bne.n	8009544 <SPI_EndRxTxTransaction+0x58>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800952c:	9700      	str	r7, [sp, #0]
 800952e:	4633      	mov	r3, r6
 8009530:	462a      	mov	r2, r5
 8009532:	2180      	movs	r1, #128	@ 0x80
 8009534:	4620      	mov	r0, r4
 8009536:	f7ff ff7d 	bl	8009434 <SPI_WaitFlagStateUntilTimeout>
 800953a:	2800      	cmp	r0, #0
 800953c:	d1e3      	bne.n	8009506 <SPI_EndRxTxTransaction+0x1a>
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 800953e:	4628      	mov	r0, r5
 8009540:	b005      	add	sp, #20
 8009542:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 8009544:	9b03      	ldr	r3, [sp, #12]
 8009546:	2b00      	cmp	r3, #0
 8009548:	d0f9      	beq.n	800953e <SPI_EndRxTxTransaction+0x52>
      count--;
 800954a:	9b03      	ldr	r3, [sp, #12]
 800954c:	3b01      	subs	r3, #1
 800954e:	9303      	str	r3, [sp, #12]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8009550:	6823      	ldr	r3, [r4, #0]
 8009552:	689b      	ldr	r3, [r3, #8]
 8009554:	061b      	lsls	r3, r3, #24
 8009556:	d4f5      	bmi.n	8009544 <SPI_EndRxTxTransaction+0x58>
 8009558:	e7f1      	b.n	800953e <SPI_EndRxTxTransaction+0x52>
 800955a:	bf00      	nop
 800955c:	20000074 	.word	0x20000074
 8009560:	016e3600 	.word	0x016e3600

08009564 <SPI_EndRxTransaction>:
{
 8009564:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009566:	460b      	mov	r3, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8009568:	6841      	ldr	r1, [r0, #4]
 800956a:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
{
 800956e:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8009570:	d008      	beq.n	8009584 <SPI_EndRxTransaction+0x20>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8009572:	9200      	str	r2, [sp, #0]
 8009574:	2101      	movs	r1, #1
 8009576:	2200      	movs	r2, #0
 8009578:	f7ff ff5c 	bl	8009434 <SPI_WaitFlagStateUntilTimeout>
 800957c:	b9d0      	cbnz	r0, 80095b4 <SPI_EndRxTransaction+0x50>
  return HAL_OK;
 800957e:	2000      	movs	r0, #0
}
 8009580:	b003      	add	sp, #12
 8009582:	bd30      	pop	{r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8009584:	6881      	ldr	r1, [r0, #8]
 8009586:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 800958a:	d002      	beq.n	8009592 <SPI_EndRxTransaction+0x2e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800958c:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8009590:	d107      	bne.n	80095a2 <SPI_EndRxTransaction+0x3e>
    __HAL_SPI_DISABLE(hspi);
 8009592:	6825      	ldr	r5, [r4, #0]
 8009594:	6828      	ldr	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8009596:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
    __HAL_SPI_DISABLE(hspi);
 800959a:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 800959e:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80095a0:	d004      	beq.n	80095ac <SPI_EndRxTransaction+0x48>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80095a2:	9200      	str	r2, [sp, #0]
 80095a4:	2180      	movs	r1, #128	@ 0x80
 80095a6:	2200      	movs	r2, #0
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80095a8:	4620      	mov	r0, r4
 80095aa:	e7e5      	b.n	8009578 <SPI_EndRxTransaction+0x14>
 80095ac:	9200      	str	r2, [sp, #0]
 80095ae:	2101      	movs	r1, #1
 80095b0:	2200      	movs	r2, #0
 80095b2:	e7f9      	b.n	80095a8 <SPI_EndRxTransaction+0x44>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80095b4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80095b6:	f043 0320 	orr.w	r3, r3, #32
 80095ba:	6563      	str	r3, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 80095bc:	2003      	movs	r0, #3
 80095be:	e7df      	b.n	8009580 <SPI_EndRxTransaction+0x1c>

080095c0 <HAL_SPI_Init>:
{
 80095c0:	b510      	push	{r4, lr}
  if (hspi == NULL)
 80095c2:	4604      	mov	r4, r0
 80095c4:	2800      	cmp	r0, #0
 80095c6:	d055      	beq.n	8009674 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 80095c8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80095ca:	2b00      	cmp	r3, #0
 80095cc:	d14e      	bne.n	800966c <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 80095ce:	6842      	ldr	r2, [r0, #4]
 80095d0:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 80095d4:	d000      	beq.n	80095d8 <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80095d6:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80095d8:	2300      	movs	r3, #0
 80095da:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 80095dc:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 80095e0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80095e4:	b923      	cbnz	r3, 80095f0 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 80095e6:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 80095ea:	4620      	mov	r0, r4
 80095ec:	f7f7 ff6c 	bl	80014c8 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 80095f0:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80095f2:	68a0      	ldr	r0, [r4, #8]
 80095f4:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 80095f6:	2302      	movs	r3, #2
 80095f8:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 80095fc:	680b      	ldr	r3, [r1, #0]
 80095fe:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8009602:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8009604:	6863      	ldr	r3, [r4, #4]
 8009606:	f400 4004 	and.w	r0, r0, #33792	@ 0x8400
 800960a:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 800960e:	4303      	orrs	r3, r0
 8009610:	68e0      	ldr	r0, [r4, #12]
 8009612:	f400 6000 	and.w	r0, r0, #2048	@ 0x800
 8009616:	4303      	orrs	r3, r0
 8009618:	6920      	ldr	r0, [r4, #16]
 800961a:	f000 0002 	and.w	r0, r0, #2
 800961e:	4303      	orrs	r3, r0
 8009620:	6960      	ldr	r0, [r4, #20]
 8009622:	f000 0001 	and.w	r0, r0, #1
 8009626:	4303      	orrs	r3, r0
 8009628:	f402 7000 	and.w	r0, r2, #512	@ 0x200
 800962c:	4303      	orrs	r3, r0
 800962e:	69e0      	ldr	r0, [r4, #28]
 8009630:	f000 0038 	and.w	r0, r0, #56	@ 0x38
 8009634:	4303      	orrs	r3, r0
 8009636:	6a20      	ldr	r0, [r4, #32]
 8009638:	f000 0080 	and.w	r0, r0, #128	@ 0x80
 800963c:	4303      	orrs	r3, r0
 800963e:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8009640:	f400 5000 	and.w	r0, r0, #8192	@ 0x2000
 8009644:	4303      	orrs	r3, r0
 8009646:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8009648:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800964a:	0c12      	lsrs	r2, r2, #16
 800964c:	f003 0310 	and.w	r3, r3, #16
 8009650:	f002 0204 	and.w	r2, r2, #4
 8009654:	431a      	orrs	r2, r3
 8009656:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8009658:	69cb      	ldr	r3, [r1, #28]
 800965a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800965e:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8009660:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8009662:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8009664:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8009666:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
}
 800966a:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800966c:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800966e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8009672:	e7b1      	b.n	80095d8 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 8009674:	2001      	movs	r0, #1
 8009676:	e7f8      	b.n	800966a <HAL_SPI_Init+0xaa>

08009678 <HAL_SPI_Transmit>:
{
 8009678:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800967c:	4604      	mov	r4, r0
 800967e:	461f      	mov	r7, r3
 8009680:	460d      	mov	r5, r1
 8009682:	4690      	mov	r8, r2
  tickstart = HAL_GetTick();
 8009684:	f7fe f9f0 	bl	8007a68 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8009688:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 800968c:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800968e:	4681      	mov	r9, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8009690:	b2d8      	uxtb	r0, r3
 8009692:	f040 809f 	bne.w	80097d4 <HAL_SPI_Transmit+0x15c>
  if ((pData == NULL) || (Size == 0U))
 8009696:	2d00      	cmp	r5, #0
 8009698:	d074      	beq.n	8009784 <HAL_SPI_Transmit+0x10c>
 800969a:	f1b8 0f00 	cmp.w	r8, #0
 800969e:	d071      	beq.n	8009784 <HAL_SPI_Transmit+0x10c>
  __HAL_LOCK(hspi);
 80096a0:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 80096a4:	2b01      	cmp	r3, #1
 80096a6:	f000 8095 	beq.w	80097d4 <HAL_SPI_Transmit+0x15c>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80096aa:	2303      	movs	r3, #3
 80096ac:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80096b0:	2300      	movs	r3, #0
 80096b2:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 80096b4:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->TxXferCount = Size;
 80096b8:	f8a4 8036 	strh.w	r8, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80096bc:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 80096be:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 80096c0:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80096c2:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 80096c4:	6826      	ldr	r6, [r4, #0]
  __HAL_LOCK(hspi);
 80096c6:	f884 0050 	strb.w	r0, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80096ca:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 80096ce:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 80096d0:	f8a4 8034 	strh.w	r8, [r4, #52]	@ 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80096d4:	d107      	bne.n	80096e6 <HAL_SPI_Transmit+0x6e>
    __HAL_SPI_DISABLE(hspi);
 80096d6:	6833      	ldr	r3, [r6, #0]
 80096d8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80096dc:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 80096de:	6833      	ldr	r3, [r6, #0]
 80096e0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80096e4:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80096e6:	6833      	ldr	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80096e8:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80096ea:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 80096ec:	bf5e      	ittt	pl
 80096ee:	6833      	ldrpl	r3, [r6, #0]
 80096f0:	f043 0340 	orrpl.w	r3, r3, #64	@ 0x40
 80096f4:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80096f6:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80096fa:	6863      	ldr	r3, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80096fc:	d145      	bne.n	800978a <HAL_SPI_Transmit+0x112>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80096fe:	b113      	cbz	r3, 8009706 <HAL_SPI_Transmit+0x8e>
 8009700:	f1b8 0f01 	cmp.w	r8, #1
 8009704:	d107      	bne.n	8009716 <HAL_SPI_Transmit+0x9e>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8009706:	f835 3b02 	ldrh.w	r3, [r5], #2
 800970a:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800970c:	6325      	str	r5, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800970e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8009710:	3b01      	subs	r3, #1
 8009712:	b29b      	uxth	r3, r3
 8009714:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 8009716:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8009718:	b29b      	uxth	r3, r3
 800971a:	b9d3      	cbnz	r3, 8009752 <HAL_SPI_Transmit+0xda>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800971c:	464a      	mov	r2, r9
 800971e:	4639      	mov	r1, r7
 8009720:	4620      	mov	r0, r4
 8009722:	f7ff fee3 	bl	80094ec <SPI_EndRxTxTransaction>
 8009726:	2800      	cmp	r0, #0
 8009728:	d151      	bne.n	80097ce <HAL_SPI_Transmit+0x156>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800972a:	68a3      	ldr	r3, [r4, #8]
 800972c:	b933      	cbnz	r3, 800973c <HAL_SPI_Transmit+0xc4>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800972e:	9301      	str	r3, [sp, #4]
 8009730:	6823      	ldr	r3, [r4, #0]
 8009732:	68da      	ldr	r2, [r3, #12]
 8009734:	9201      	str	r2, [sp, #4]
 8009736:	689b      	ldr	r3, [r3, #8]
 8009738:	9301      	str	r3, [sp, #4]
 800973a:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 800973c:	2301      	movs	r3, #1
 800973e:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8009742:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8009744:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8009746:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 8009748:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800974c:	bf18      	it	ne
 800974e:	2001      	movne	r0, #1
 8009750:	e018      	b.n	8009784 <HAL_SPI_Transmit+0x10c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8009752:	6822      	ldr	r2, [r4, #0]
 8009754:	6893      	ldr	r3, [r2, #8]
 8009756:	0798      	lsls	r0, r3, #30
 8009758:	d505      	bpl.n	8009766 <HAL_SPI_Transmit+0xee>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800975a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800975c:	f833 1b02 	ldrh.w	r1, [r3], #2
 8009760:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8009762:	6323      	str	r3, [r4, #48]	@ 0x30
 8009764:	e7d3      	b.n	800970e <HAL_SPI_Transmit+0x96>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8009766:	f7fe f97f 	bl	8007a68 <HAL_GetTick>
 800976a:	eba0 0009 	sub.w	r0, r0, r9
 800976e:	42b8      	cmp	r0, r7
 8009770:	d3d1      	bcc.n	8009716 <HAL_SPI_Transmit+0x9e>
 8009772:	1c79      	adds	r1, r7, #1
 8009774:	d0cf      	beq.n	8009716 <HAL_SPI_Transmit+0x9e>
          hspi->State = HAL_SPI_STATE_READY;
 8009776:	2301      	movs	r3, #1
 8009778:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800977c:	2300      	movs	r3, #0
 800977e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 8009782:	2003      	movs	r0, #3
}
 8009784:	b003      	add	sp, #12
 8009786:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800978a:	b113      	cbz	r3, 8009792 <HAL_SPI_Transmit+0x11a>
 800978c:	f1b8 0f01 	cmp.w	r8, #1
 8009790:	d108      	bne.n	80097a4 <HAL_SPI_Transmit+0x12c>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8009792:	782b      	ldrb	r3, [r5, #0]
 8009794:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8009796:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8009798:	3301      	adds	r3, #1
 800979a:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800979c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800979e:	3b01      	subs	r3, #1
 80097a0:	b29b      	uxth	r3, r3
 80097a2:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 80097a4:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80097a6:	b29b      	uxth	r3, r3
 80097a8:	2b00      	cmp	r3, #0
 80097aa:	d0b7      	beq.n	800971c <HAL_SPI_Transmit+0xa4>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80097ac:	6823      	ldr	r3, [r4, #0]
 80097ae:	689a      	ldr	r2, [r3, #8]
 80097b0:	0792      	lsls	r2, r2, #30
 80097b2:	d503      	bpl.n	80097bc <HAL_SPI_Transmit+0x144>
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80097b4:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 80097b6:	7812      	ldrb	r2, [r2, #0]
 80097b8:	731a      	strb	r2, [r3, #12]
 80097ba:	e7ec      	b.n	8009796 <HAL_SPI_Transmit+0x11e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80097bc:	f7fe f954 	bl	8007a68 <HAL_GetTick>
 80097c0:	eba0 0009 	sub.w	r0, r0, r9
 80097c4:	42b8      	cmp	r0, r7
 80097c6:	d3ed      	bcc.n	80097a4 <HAL_SPI_Transmit+0x12c>
 80097c8:	1c7b      	adds	r3, r7, #1
 80097ca:	d0eb      	beq.n	80097a4 <HAL_SPI_Transmit+0x12c>
 80097cc:	e7d3      	b.n	8009776 <HAL_SPI_Transmit+0xfe>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80097ce:	2320      	movs	r3, #32
 80097d0:	6563      	str	r3, [r4, #84]	@ 0x54
 80097d2:	e7aa      	b.n	800972a <HAL_SPI_Transmit+0xb2>
    return HAL_BUSY;
 80097d4:	2002      	movs	r0, #2
 80097d6:	e7d5      	b.n	8009784 <HAL_SPI_Transmit+0x10c>

080097d8 <HAL_SPI_TransmitReceive>:
{
 80097d8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80097dc:	4604      	mov	r4, r0
 80097de:	460d      	mov	r5, r1
 80097e0:	4691      	mov	r9, r2
 80097e2:	461e      	mov	r6, r3
 80097e4:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
  tickstart = HAL_GetTick();
 80097e8:	f7fe f93e 	bl	8007a68 <HAL_GetTick>
  tmp_state           = hspi->State;
 80097ec:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 80097f0:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80097f2:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80097f4:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 80097f6:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80097f8:	d00a      	beq.n	8009810 <HAL_SPI_TransmitReceive+0x38>
 80097fa:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 80097fe:	f040 80e5 	bne.w	80099cc <HAL_SPI_TransmitReceive+0x1f4>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8009802:	68a3      	ldr	r3, [r4, #8]
 8009804:	2b00      	cmp	r3, #0
 8009806:	f040 80e1 	bne.w	80099cc <HAL_SPI_TransmitReceive+0x1f4>
 800980a:	2904      	cmp	r1, #4
 800980c:	f040 80de 	bne.w	80099cc <HAL_SPI_TransmitReceive+0x1f4>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8009810:	2d00      	cmp	r5, #0
 8009812:	d04b      	beq.n	80098ac <HAL_SPI_TransmitReceive+0xd4>
 8009814:	f1b9 0f00 	cmp.w	r9, #0
 8009818:	d048      	beq.n	80098ac <HAL_SPI_TransmitReceive+0xd4>
 800981a:	2e00      	cmp	r6, #0
 800981c:	d046      	beq.n	80098ac <HAL_SPI_TransmitReceive+0xd4>
  __HAL_LOCK(hspi);
 800981e:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8009822:	2b01      	cmp	r3, #1
 8009824:	f000 80d2 	beq.w	80099cc <HAL_SPI_TransmitReceive+0x1f4>
 8009828:	2301      	movs	r3, #1
 800982a:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800982e:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8009832:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8009836:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8009838:	bf1c      	itt	ne
 800983a:	2305      	movne	r3, #5
 800983c:	f884 3051 	strbne.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8009840:	2300      	movs	r3, #0
 8009842:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->TxISR       = NULL;
 8009844:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8009848:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800984a:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferCount = Size;
 800984c:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800984e:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8009850:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8009852:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8009854:	bf58      	it	pl
 8009856:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 8009858:	6325      	str	r5, [r4, #48]	@ 0x30
    __HAL_SPI_ENABLE(hspi);
 800985a:	bf58      	it	pl
 800985c:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
  hspi->TxXferSize  = Size;
 8009860:	86a6      	strh	r6, [r4, #52]	@ 0x34
    __HAL_SPI_ENABLE(hspi);
 8009862:	bf58      	it	pl
 8009864:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8009866:	68e1      	ldr	r1, [r4, #12]
 8009868:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 800986c:	d155      	bne.n	800991a <HAL_SPI_TransmitReceive+0x142>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800986e:	b10a      	cbz	r2, 8009874 <HAL_SPI_TransmitReceive+0x9c>
 8009870:	2e01      	cmp	r6, #1
 8009872:	d107      	bne.n	8009884 <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8009874:	f835 2b02 	ldrh.w	r2, [r5], #2
 8009878:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 800987a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800987c:	6325      	str	r5, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 800987e:	3b01      	subs	r3, #1
 8009880:	b29b      	uxth	r3, r3
 8009882:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8009884:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8009886:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8009888:	b29b      	uxth	r3, r3
 800988a:	b98b      	cbnz	r3, 80098b0 <HAL_SPI_TransmitReceive+0xd8>
 800988c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800988e:	b29b      	uxth	r3, r3
 8009890:	b973      	cbnz	r3, 80098b0 <HAL_SPI_TransmitReceive+0xd8>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8009892:	463a      	mov	r2, r7
 8009894:	4641      	mov	r1, r8
 8009896:	4620      	mov	r0, r4
 8009898:	f7ff fe28 	bl	80094ec <SPI_EndRxTxTransaction>
 800989c:	2800      	cmp	r0, #0
 800989e:	f000 8081 	beq.w	80099a4 <HAL_SPI_TransmitReceive+0x1cc>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80098a2:	2320      	movs	r3, #32
 80098a4:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 80098a6:	2300      	movs	r3, #0
 80098a8:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
 80098ac:	2001      	movs	r0, #1
 80098ae:	e031      	b.n	8009914 <HAL_SPI_TransmitReceive+0x13c>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80098b0:	6821      	ldr	r1, [r4, #0]
 80098b2:	688b      	ldr	r3, [r1, #8]
 80098b4:	079a      	lsls	r2, r3, #30
 80098b6:	d50d      	bpl.n	80098d4 <HAL_SPI_TransmitReceive+0xfc>
 80098b8:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80098ba:	b29b      	uxth	r3, r3
 80098bc:	b153      	cbz	r3, 80098d4 <HAL_SPI_TransmitReceive+0xfc>
 80098be:	b145      	cbz	r5, 80098d2 <HAL_SPI_TransmitReceive+0xfa>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80098c0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80098c2:	f833 2b02 	ldrh.w	r2, [r3], #2
 80098c6:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80098c8:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 80098ca:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80098cc:	3b01      	subs	r3, #1
 80098ce:	b29b      	uxth	r3, r3
 80098d0:	86e3      	strh	r3, [r4, #54]	@ 0x36
{
 80098d2:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80098d4:	688a      	ldr	r2, [r1, #8]
 80098d6:	f012 0201 	ands.w	r2, r2, #1
 80098da:	d00c      	beq.n	80098f6 <HAL_SPI_TransmitReceive+0x11e>
 80098dc:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80098de:	b29b      	uxth	r3, r3
 80098e0:	b14b      	cbz	r3, 80098f6 <HAL_SPI_TransmitReceive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80098e2:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80098e4:	68c9      	ldr	r1, [r1, #12]
 80098e6:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80098ea:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 80098ec:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80098ee:	3b01      	subs	r3, #1
 80098f0:	b29b      	uxth	r3, r3
 80098f2:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 80098f4:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 80098f6:	f7fe f8b7 	bl	8007a68 <HAL_GetTick>
 80098fa:	1bc0      	subs	r0, r0, r7
 80098fc:	4540      	cmp	r0, r8
 80098fe:	d3c2      	bcc.n	8009886 <HAL_SPI_TransmitReceive+0xae>
 8009900:	f1b8 3fff 	cmp.w	r8, #4294967295
 8009904:	d0bf      	beq.n	8009886 <HAL_SPI_TransmitReceive+0xae>
        hspi->State = HAL_SPI_STATE_READY;
 8009906:	2301      	movs	r3, #1
 8009908:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 800990c:	2300      	movs	r3, #0
 800990e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 8009912:	2003      	movs	r0, #3
}
 8009914:	b003      	add	sp, #12
 8009916:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800991a:	b10a      	cbz	r2, 8009920 <HAL_SPI_TransmitReceive+0x148>
 800991c:	2e01      	cmp	r6, #1
 800991e:	d108      	bne.n	8009932 <HAL_SPI_TransmitReceive+0x15a>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8009920:	782a      	ldrb	r2, [r5, #0]
 8009922:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8009924:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8009926:	3301      	adds	r3, #1
 8009928:	6323      	str	r3, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 800992a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800992c:	3b01      	subs	r3, #1
 800992e:	b29b      	uxth	r3, r3
 8009930:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8009932:	2501      	movs	r5, #1
 8009934:	e02d      	b.n	8009992 <HAL_SPI_TransmitReceive+0x1ba>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8009936:	6822      	ldr	r2, [r4, #0]
 8009938:	6893      	ldr	r3, [r2, #8]
 800993a:	079b      	lsls	r3, r3, #30
 800993c:	d50e      	bpl.n	800995c <HAL_SPI_TransmitReceive+0x184>
 800993e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8009940:	b29b      	uxth	r3, r3
 8009942:	b15b      	cbz	r3, 800995c <HAL_SPI_TransmitReceive+0x184>
 8009944:	b14d      	cbz	r5, 800995a <HAL_SPI_TransmitReceive+0x182>
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 8009946:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8009948:	781b      	ldrb	r3, [r3, #0]
 800994a:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 800994c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800994e:	3301      	adds	r3, #1
 8009950:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8009952:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8009954:	3b01      	subs	r3, #1
 8009956:	b29b      	uxth	r3, r3
 8009958:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800995a:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800995c:	6822      	ldr	r2, [r4, #0]
 800995e:	6891      	ldr	r1, [r2, #8]
 8009960:	f011 0101 	ands.w	r1, r1, #1
 8009964:	d00d      	beq.n	8009982 <HAL_SPI_TransmitReceive+0x1aa>
 8009966:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009968:	b29b      	uxth	r3, r3
 800996a:	b153      	cbz	r3, 8009982 <HAL_SPI_TransmitReceive+0x1aa>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800996c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800996e:	68d2      	ldr	r2, [r2, #12]
 8009970:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8009972:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8009974:	3301      	adds	r3, #1
 8009976:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8009978:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800997a:	3b01      	subs	r3, #1
 800997c:	b29b      	uxth	r3, r3
 800997e:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8009980:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8009982:	f7fe f871 	bl	8007a68 <HAL_GetTick>
 8009986:	1bc0      	subs	r0, r0, r7
 8009988:	4540      	cmp	r0, r8
 800998a:	d302      	bcc.n	8009992 <HAL_SPI_TransmitReceive+0x1ba>
 800998c:	f1b8 3fff 	cmp.w	r8, #4294967295
 8009990:	d1b9      	bne.n	8009906 <HAL_SPI_TransmitReceive+0x12e>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8009992:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8009994:	b29b      	uxth	r3, r3
 8009996:	2b00      	cmp	r3, #0
 8009998:	d1cd      	bne.n	8009936 <HAL_SPI_TransmitReceive+0x15e>
 800999a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800999c:	b29b      	uxth	r3, r3
 800999e:	2b00      	cmp	r3, #0
 80099a0:	d1c9      	bne.n	8009936 <HAL_SPI_TransmitReceive+0x15e>
 80099a2:	e776      	b.n	8009892 <HAL_SPI_TransmitReceive+0xba>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80099a4:	68a3      	ldr	r3, [r4, #8]
 80099a6:	b933      	cbnz	r3, 80099b6 <HAL_SPI_TransmitReceive+0x1de>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80099a8:	9301      	str	r3, [sp, #4]
 80099aa:	6823      	ldr	r3, [r4, #0]
 80099ac:	68da      	ldr	r2, [r3, #12]
 80099ae:	9201      	str	r2, [sp, #4]
 80099b0:	689b      	ldr	r3, [r3, #8]
 80099b2:	9301      	str	r3, [sp, #4]
 80099b4:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 80099b6:	2301      	movs	r3, #1
 80099b8:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80099bc:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 80099be:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80099c0:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 80099c2:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80099c6:	bf18      	it	ne
 80099c8:	2001      	movne	r0, #1
 80099ca:	e7a3      	b.n	8009914 <HAL_SPI_TransmitReceive+0x13c>
    return HAL_BUSY;
 80099cc:	2002      	movs	r0, #2
 80099ce:	e7a1      	b.n	8009914 <HAL_SPI_TransmitReceive+0x13c>

080099d0 <HAL_SPI_Receive>:
{
 80099d0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80099d4:	461e      	mov	r6, r3
  if (hspi->State != HAL_SPI_STATE_READY)
 80099d6:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 80099da:	2b01      	cmp	r3, #1
{
 80099dc:	4604      	mov	r4, r0
 80099de:	4689      	mov	r9, r1
 80099e0:	4617      	mov	r7, r2
  if (hspi->State != HAL_SPI_STATE_READY)
 80099e2:	b2dd      	uxtb	r5, r3
 80099e4:	d004      	beq.n	80099f0 <HAL_SPI_Receive+0x20>
    return HAL_BUSY;
 80099e6:	2502      	movs	r5, #2
}
 80099e8:	4628      	mov	r0, r5
 80099ea:	b003      	add	sp, #12
 80099ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 80099f0:	6843      	ldr	r3, [r0, #4]
 80099f2:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80099f6:	d10b      	bne.n	8009a10 <HAL_SPI_Receive+0x40>
 80099f8:	6883      	ldr	r3, [r0, #8]
 80099fa:	b94b      	cbnz	r3, 8009a10 <HAL_SPI_Receive+0x40>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 80099fc:	2304      	movs	r3, #4
 80099fe:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8009a02:	4613      	mov	r3, r2
 8009a04:	9600      	str	r6, [sp, #0]
 8009a06:	460a      	mov	r2, r1
 8009a08:	f7ff fee6 	bl	80097d8 <HAL_SPI_TransmitReceive>
 8009a0c:	4605      	mov	r5, r0
 8009a0e:	e7eb      	b.n	80099e8 <HAL_SPI_Receive+0x18>
  tickstart = HAL_GetTick();
 8009a10:	f7fe f82a 	bl	8007a68 <HAL_GetTick>
 8009a14:	4680      	mov	r8, r0
  if ((pData == NULL) || (Size == 0U))
 8009a16:	f1b9 0f00 	cmp.w	r9, #0
 8009a1a:	d0e5      	beq.n	80099e8 <HAL_SPI_Receive+0x18>
 8009a1c:	2f00      	cmp	r7, #0
 8009a1e:	d0e3      	beq.n	80099e8 <HAL_SPI_Receive+0x18>
  __HAL_LOCK(hspi);
 8009a20:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8009a24:	2b01      	cmp	r3, #1
 8009a26:	d0de      	beq.n	80099e6 <HAL_SPI_Receive+0x16>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8009a28:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8009a2a:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  __HAL_LOCK(hspi);
 8009a2e:	2301      	movs	r3, #1
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8009a30:	2500      	movs	r5, #0
  __HAL_LOCK(hspi);
 8009a32:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8009a36:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8009a3a:	f04f 0304 	mov.w	r3, #4
 8009a3e:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->TxISR       = NULL;
 8009a42:	e9c4 5510 	strd	r5, r5, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8009a46:	6565      	str	r5, [r4, #84]	@ 0x54
    __HAL_SPI_DISABLE(hspi);
 8009a48:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8009a4a:	87e7      	strh	r7, [r4, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 8009a4c:	87a7      	strh	r7, [r4, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8009a4e:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 8009a50:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 8009a52:	86e5      	strh	r5, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8009a54:	d107      	bne.n	8009a66 <HAL_SPI_Receive+0x96>
    __HAL_SPI_DISABLE(hspi);
 8009a56:	681a      	ldr	r2, [r3, #0]
 8009a58:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8009a5c:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8009a5e:	681a      	ldr	r2, [r3, #0]
 8009a60:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8009a64:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8009a66:	681a      	ldr	r2, [r3, #0]
 8009a68:	0655      	lsls	r5, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8009a6a:	bf5e      	ittt	pl
 8009a6c:	681a      	ldrpl	r2, [r3, #0]
 8009a6e:	f042 0240 	orrpl.w	r2, r2, #64	@ 0x40
 8009a72:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8009a74:	68e3      	ldr	r3, [r4, #12]
 8009a76:	b1f3      	cbz	r3, 8009ab6 <HAL_SPI_Receive+0xe6>
    while (hspi->RxXferCount > 0U)
 8009a78:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009a7a:	b29b      	uxth	r3, r3
 8009a7c:	b1fb      	cbz	r3, 8009abe <HAL_SPI_Receive+0xee>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8009a7e:	6823      	ldr	r3, [r4, #0]
 8009a80:	689a      	ldr	r2, [r3, #8]
 8009a82:	07d2      	lsls	r2, r2, #31
 8009a84:	d53c      	bpl.n	8009b00 <HAL_SPI_Receive+0x130>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8009a86:	68da      	ldr	r2, [r3, #12]
 8009a88:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8009a8a:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8009a8e:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8009a90:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009a92:	3b01      	subs	r3, #1
 8009a94:	b29b      	uxth	r3, r3
 8009a96:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009a98:	e7ee      	b.n	8009a78 <HAL_SPI_Receive+0xa8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8009a9a:	6823      	ldr	r3, [r4, #0]
 8009a9c:	689a      	ldr	r2, [r3, #8]
 8009a9e:	07d0      	lsls	r0, r2, #31
 8009aa0:	d51e      	bpl.n	8009ae0 <HAL_SPI_Receive+0x110>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8009aa2:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009aa4:	7b1b      	ldrb	r3, [r3, #12]
 8009aa6:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8009aa8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8009aaa:	3301      	adds	r3, #1
 8009aac:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8009aae:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009ab0:	3b01      	subs	r3, #1
 8009ab2:	b29b      	uxth	r3, r3
 8009ab4:	87e3      	strh	r3, [r4, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 8009ab6:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009ab8:	b29b      	uxth	r3, r3
 8009aba:	2b00      	cmp	r3, #0
 8009abc:	d1ed      	bne.n	8009a9a <HAL_SPI_Receive+0xca>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8009abe:	4642      	mov	r2, r8
 8009ac0:	4631      	mov	r1, r6
 8009ac2:	4620      	mov	r0, r4
 8009ac4:	f7ff fd4e 	bl	8009564 <SPI_EndRxTransaction>
 8009ac8:	bb18      	cbnz	r0, 8009b12 <HAL_SPI_Receive+0x142>
  hspi->State = HAL_SPI_STATE_READY;
 8009aca:	2301      	movs	r3, #1
 8009acc:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8009ad0:	6d65      	ldr	r5, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8009ad2:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8009ad4:	1aed      	subs	r5, r5, r3
  __HAL_UNLOCK(hspi);
 8009ad6:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8009ada:	bf18      	it	ne
 8009adc:	2501      	movne	r5, #1
 8009ade:	e783      	b.n	80099e8 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8009ae0:	f7fd ffc2 	bl	8007a68 <HAL_GetTick>
 8009ae4:	eba0 0008 	sub.w	r0, r0, r8
 8009ae8:	42b0      	cmp	r0, r6
 8009aea:	d3e4      	bcc.n	8009ab6 <HAL_SPI_Receive+0xe6>
 8009aec:	1c71      	adds	r1, r6, #1
 8009aee:	d0e2      	beq.n	8009ab6 <HAL_SPI_Receive+0xe6>
          hspi->State = HAL_SPI_STATE_READY;
 8009af0:	2301      	movs	r3, #1
 8009af2:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8009af6:	2300      	movs	r3, #0
 8009af8:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 8009afc:	2503      	movs	r5, #3
 8009afe:	e773      	b.n	80099e8 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8009b00:	f7fd ffb2 	bl	8007a68 <HAL_GetTick>
 8009b04:	eba0 0008 	sub.w	r0, r0, r8
 8009b08:	42b0      	cmp	r0, r6
 8009b0a:	d3b5      	bcc.n	8009a78 <HAL_SPI_Receive+0xa8>
 8009b0c:	1c73      	adds	r3, r6, #1
 8009b0e:	d0b3      	beq.n	8009a78 <HAL_SPI_Receive+0xa8>
 8009b10:	e7ee      	b.n	8009af0 <HAL_SPI_Receive+0x120>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8009b12:	2320      	movs	r3, #32
 8009b14:	6563      	str	r3, [r4, #84]	@ 0x54
 8009b16:	e7d8      	b.n	8009aca <HAL_SPI_Receive+0xfa>

08009b18 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8009b18:	4770      	bx	lr
	...

08009b1c <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8009b1c:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8009b20:	2b01      	cmp	r3, #1
 8009b22:	d130      	bne.n	8009b86 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8009b24:	2302      	movs	r3, #2
 8009b26:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8009b2a:	6803      	ldr	r3, [r0, #0]
 8009b2c:	68da      	ldr	r2, [r3, #12]
 8009b2e:	f042 0201 	orr.w	r2, r2, #1
 8009b32:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8009b34:	4a15      	ldr	r2, [pc, #84]	@ (8009b8c <HAL_TIM_Base_Start_IT+0x70>)
 8009b36:	4293      	cmp	r3, r2
 8009b38:	d01a      	beq.n	8009b70 <HAL_TIM_Base_Start_IT+0x54>
 8009b3a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8009b3e:	d017      	beq.n	8009b70 <HAL_TIM_Base_Start_IT+0x54>
 8009b40:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8009b44:	4293      	cmp	r3, r2
 8009b46:	d013      	beq.n	8009b70 <HAL_TIM_Base_Start_IT+0x54>
 8009b48:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8009b4c:	4293      	cmp	r3, r2
 8009b4e:	d00f      	beq.n	8009b70 <HAL_TIM_Base_Start_IT+0x54>
 8009b50:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8009b54:	4293      	cmp	r3, r2
 8009b56:	d00b      	beq.n	8009b70 <HAL_TIM_Base_Start_IT+0x54>
 8009b58:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8009b5c:	4293      	cmp	r3, r2
 8009b5e:	d007      	beq.n	8009b70 <HAL_TIM_Base_Start_IT+0x54>
 8009b60:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 8009b64:	4293      	cmp	r3, r2
 8009b66:	d003      	beq.n	8009b70 <HAL_TIM_Base_Start_IT+0x54>
 8009b68:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 8009b6c:	4293      	cmp	r3, r2
 8009b6e:	d104      	bne.n	8009b7a <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8009b70:	689a      	ldr	r2, [r3, #8]
 8009b72:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8009b76:	2a06      	cmp	r2, #6
 8009b78:	d003      	beq.n	8009b82 <HAL_TIM_Base_Start_IT+0x66>
    {
      __HAL_TIM_ENABLE(htim);
 8009b7a:	681a      	ldr	r2, [r3, #0]
 8009b7c:	f042 0201 	orr.w	r2, r2, #1
 8009b80:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8009b82:	2000      	movs	r0, #0
 8009b84:	4770      	bx	lr
    return HAL_ERROR;
 8009b86:	2001      	movs	r0, #1
}
 8009b88:	4770      	bx	lr
 8009b8a:	bf00      	nop
 8009b8c:	40010000 	.word	0x40010000

08009b90 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8009b90:	4770      	bx	lr

08009b92 <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8009b92:	4770      	bx	lr

08009b94 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8009b94:	4770      	bx	lr

08009b96 <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 8009b96:	4770      	bx	lr

08009b98 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 8009b98:	6803      	ldr	r3, [r0, #0]
{
 8009b9a:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 8009b9c:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 8009b9e:	691e      	ldr	r6, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8009ba0:	07b1      	lsls	r1, r6, #30
{
 8009ba2:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8009ba4:	d50d      	bpl.n	8009bc2 <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 8009ba6:	07aa      	lsls	r2, r5, #30
 8009ba8:	d50b      	bpl.n	8009bc2 <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 8009baa:	f06f 0202 	mvn.w	r2, #2
 8009bae:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8009bb0:	2201      	movs	r2, #1
 8009bb2:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8009bb4:	699b      	ldr	r3, [r3, #24]
 8009bb6:	079b      	lsls	r3, r3, #30
 8009bb8:	d069      	beq.n	8009c8e <HAL_TIM_IRQHandler+0xf6>
          HAL_TIM_IC_CaptureCallback(htim);
 8009bba:	f7ff ffea 	bl	8009b92 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8009bbe:	2300      	movs	r3, #0
 8009bc0:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8009bc2:	0771      	lsls	r1, r6, #29
 8009bc4:	d510      	bpl.n	8009be8 <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8009bc6:	076a      	lsls	r2, r5, #29
 8009bc8:	d50e      	bpl.n	8009be8 <HAL_TIM_IRQHandler+0x50>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8009bca:	6823      	ldr	r3, [r4, #0]
 8009bcc:	f06f 0204 	mvn.w	r2, #4
 8009bd0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8009bd2:	2202      	movs	r2, #2
 8009bd4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8009bd6:	699b      	ldr	r3, [r3, #24]
 8009bd8:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 8009bdc:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8009bde:	d05c      	beq.n	8009c9a <HAL_TIM_IRQHandler+0x102>
        HAL_TIM_IC_CaptureCallback(htim);
 8009be0:	f7ff ffd7 	bl	8009b92 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8009be4:	2300      	movs	r3, #0
 8009be6:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8009be8:	0733      	lsls	r3, r6, #28
 8009bea:	d50f      	bpl.n	8009c0c <HAL_TIM_IRQHandler+0x74>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8009bec:	0728      	lsls	r0, r5, #28
 8009bee:	d50d      	bpl.n	8009c0c <HAL_TIM_IRQHandler+0x74>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8009bf0:	6823      	ldr	r3, [r4, #0]
 8009bf2:	f06f 0208 	mvn.w	r2, #8
 8009bf6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8009bf8:	2204      	movs	r2, #4
 8009bfa:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8009bfc:	69db      	ldr	r3, [r3, #28]
 8009bfe:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 8009c00:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8009c02:	d050      	beq.n	8009ca6 <HAL_TIM_IRQHandler+0x10e>
        HAL_TIM_IC_CaptureCallback(htim);
 8009c04:	f7ff ffc5 	bl	8009b92 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8009c08:	2300      	movs	r3, #0
 8009c0a:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 8009c0c:	06f2      	lsls	r2, r6, #27
 8009c0e:	d510      	bpl.n	8009c32 <HAL_TIM_IRQHandler+0x9a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8009c10:	06eb      	lsls	r3, r5, #27
 8009c12:	d50e      	bpl.n	8009c32 <HAL_TIM_IRQHandler+0x9a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8009c14:	6823      	ldr	r3, [r4, #0]
 8009c16:	f06f 0210 	mvn.w	r2, #16
 8009c1a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8009c1c:	2208      	movs	r2, #8
 8009c1e:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8009c20:	69db      	ldr	r3, [r3, #28]
 8009c22:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 8009c26:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8009c28:	d043      	beq.n	8009cb2 <HAL_TIM_IRQHandler+0x11a>
        HAL_TIM_IC_CaptureCallback(htim);
 8009c2a:	f7ff ffb2 	bl	8009b92 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8009c2e:	2300      	movs	r3, #0
 8009c30:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 8009c32:	07f0      	lsls	r0, r6, #31
 8009c34:	d508      	bpl.n	8009c48 <HAL_TIM_IRQHandler+0xb0>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 8009c36:	07e9      	lsls	r1, r5, #31
 8009c38:	d506      	bpl.n	8009c48 <HAL_TIM_IRQHandler+0xb0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8009c3a:	6823      	ldr	r3, [r4, #0]
 8009c3c:	f06f 0201 	mvn.w	r2, #1
 8009c40:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8009c42:	4620      	mov	r0, r4
 8009c44:	f7f7 faa2 	bl	800118c <HAL_TIM_PeriodElapsedCallback>
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 8009c48:	0632      	lsls	r2, r6, #24
 8009c4a:	d508      	bpl.n	8009c5e <HAL_TIM_IRQHandler+0xc6>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8009c4c:	062b      	lsls	r3, r5, #24
 8009c4e:	d506      	bpl.n	8009c5e <HAL_TIM_IRQHandler+0xc6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 8009c50:	6823      	ldr	r3, [r4, #0]
 8009c52:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8009c56:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8009c58:	4620      	mov	r0, r4
 8009c5a:	f000 f8b6 	bl	8009dca <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8009c5e:	0670      	lsls	r0, r6, #25
 8009c60:	d508      	bpl.n	8009c74 <HAL_TIM_IRQHandler+0xdc>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8009c62:	0669      	lsls	r1, r5, #25
 8009c64:	d506      	bpl.n	8009c74 <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8009c66:	6823      	ldr	r3, [r4, #0]
 8009c68:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8009c6c:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8009c6e:	4620      	mov	r0, r4
 8009c70:	f7ff ff91 	bl	8009b96 <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8009c74:	06b2      	lsls	r2, r6, #26
 8009c76:	d522      	bpl.n	8009cbe <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8009c78:	06ab      	lsls	r3, r5, #26
 8009c7a:	d520      	bpl.n	8009cbe <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8009c7c:	6823      	ldr	r3, [r4, #0]
 8009c7e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 8009c82:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8009c84:	611a      	str	r2, [r3, #16]
}
 8009c86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
 8009c8a:	f000 b89d 	b.w	8009dc8 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8009c8e:	f7ff ff7f 	bl	8009b90 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8009c92:	4620      	mov	r0, r4
 8009c94:	f7ff ff7e 	bl	8009b94 <HAL_TIM_PWM_PulseFinishedCallback>
 8009c98:	e791      	b.n	8009bbe <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8009c9a:	f7ff ff79 	bl	8009b90 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8009c9e:	4620      	mov	r0, r4
 8009ca0:	f7ff ff78 	bl	8009b94 <HAL_TIM_PWM_PulseFinishedCallback>
 8009ca4:	e79e      	b.n	8009be4 <HAL_TIM_IRQHandler+0x4c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8009ca6:	f7ff ff73 	bl	8009b90 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8009caa:	4620      	mov	r0, r4
 8009cac:	f7ff ff72 	bl	8009b94 <HAL_TIM_PWM_PulseFinishedCallback>
 8009cb0:	e7aa      	b.n	8009c08 <HAL_TIM_IRQHandler+0x70>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8009cb2:	f7ff ff6d 	bl	8009b90 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8009cb6:	4620      	mov	r0, r4
 8009cb8:	f7ff ff6c 	bl	8009b94 <HAL_TIM_PWM_PulseFinishedCallback>
 8009cbc:	e7b7      	b.n	8009c2e <HAL_TIM_IRQHandler+0x96>
}
 8009cbe:	bd70      	pop	{r4, r5, r6, pc}

08009cc0 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8009cc0:	4a29      	ldr	r2, [pc, #164]	@ (8009d68 <TIM_Base_SetConfig+0xa8>)
  tmpcr1 = TIMx->CR1;
 8009cc2:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8009cc4:	4290      	cmp	r0, r2
 8009cc6:	d012      	beq.n	8009cee <TIM_Base_SetConfig+0x2e>
 8009cc8:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8009ccc:	d00f      	beq.n	8009cee <TIM_Base_SetConfig+0x2e>
 8009cce:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8009cd2:	4290      	cmp	r0, r2
 8009cd4:	d00b      	beq.n	8009cee <TIM_Base_SetConfig+0x2e>
 8009cd6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8009cda:	4290      	cmp	r0, r2
 8009cdc:	d007      	beq.n	8009cee <TIM_Base_SetConfig+0x2e>
 8009cde:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8009ce2:	4290      	cmp	r0, r2
 8009ce4:	d003      	beq.n	8009cee <TIM_Base_SetConfig+0x2e>
 8009ce6:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8009cea:	4290      	cmp	r0, r2
 8009cec:	d108      	bne.n	8009d00 <TIM_Base_SetConfig+0x40>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8009cee:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8009cf0:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 8009cf4:	4313      	orrs	r3, r2

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8009cf6:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8009cf8:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8009cfc:	4313      	orrs	r3, r2
 8009cfe:	e016      	b.n	8009d2e <TIM_Base_SetConfig+0x6e>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8009d00:	4a1a      	ldr	r2, [pc, #104]	@ (8009d6c <TIM_Base_SetConfig+0xac>)
 8009d02:	4290      	cmp	r0, r2
 8009d04:	d0f7      	beq.n	8009cf6 <TIM_Base_SetConfig+0x36>
 8009d06:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8009d0a:	4290      	cmp	r0, r2
 8009d0c:	d0f3      	beq.n	8009cf6 <TIM_Base_SetConfig+0x36>
 8009d0e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8009d12:	4290      	cmp	r0, r2
 8009d14:	d0ef      	beq.n	8009cf6 <TIM_Base_SetConfig+0x36>
 8009d16:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 8009d1a:	4290      	cmp	r0, r2
 8009d1c:	d0eb      	beq.n	8009cf6 <TIM_Base_SetConfig+0x36>
 8009d1e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8009d22:	4290      	cmp	r0, r2
 8009d24:	d0e7      	beq.n	8009cf6 <TIM_Base_SetConfig+0x36>
 8009d26:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8009d2a:	4290      	cmp	r0, r2
 8009d2c:	d0e3      	beq.n	8009cf6 <TIM_Base_SetConfig+0x36>
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8009d2e:	694a      	ldr	r2, [r1, #20]
 8009d30:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8009d34:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8009d36:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8009d38:	688b      	ldr	r3, [r1, #8]
 8009d3a:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8009d3c:	680b      	ldr	r3, [r1, #0]
 8009d3e:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8009d40:	4b09      	ldr	r3, [pc, #36]	@ (8009d68 <TIM_Base_SetConfig+0xa8>)
 8009d42:	4298      	cmp	r0, r3
 8009d44:	d003      	beq.n	8009d4e <TIM_Base_SetConfig+0x8e>
 8009d46:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8009d4a:	4298      	cmp	r0, r3
 8009d4c:	d101      	bne.n	8009d52 <TIM_Base_SetConfig+0x92>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8009d4e:	690b      	ldr	r3, [r1, #16]
 8009d50:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8009d52:	2301      	movs	r3, #1
 8009d54:	6143      	str	r3, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 8009d56:	6903      	ldr	r3, [r0, #16]
 8009d58:	07db      	lsls	r3, r3, #31
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 8009d5a:	bf42      	ittt	mi
 8009d5c:	6903      	ldrmi	r3, [r0, #16]
 8009d5e:	f023 0301 	bicmi.w	r3, r3, #1
 8009d62:	6103      	strmi	r3, [r0, #16]
  }
}
 8009d64:	4770      	bx	lr
 8009d66:	bf00      	nop
 8009d68:	40010000 	.word	0x40010000
 8009d6c:	40014000 	.word	0x40014000

08009d70 <HAL_TIM_Base_Init>:
{
 8009d70:	b510      	push	{r4, lr}
  if (htim == NULL)
 8009d72:	4604      	mov	r4, r0
 8009d74:	b330      	cbz	r0, 8009dc4 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8009d76:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8009d7a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8009d7e:	b91b      	cbnz	r3, 8009d88 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8009d80:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 8009d84:	f7ff fec8 	bl	8009b18 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8009d88:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8009d8a:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8009d8c:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8009d90:	1d21      	adds	r1, r4, #4
 8009d92:	f7ff ff95 	bl	8009cc0 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8009d96:	2301      	movs	r3, #1
 8009d98:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 8009d9c:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8009d9e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 8009da2:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 8009da6:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8009daa:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8009dae:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8009db2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8009db6:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 8009dba:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 8009dbe:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 8009dc2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009dc4:	2001      	movs	r0, #1
 8009dc6:	e7fc      	b.n	8009dc2 <HAL_TIM_Base_Init+0x52>

08009dc8 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 8009dc8:	4770      	bx	lr

08009dca <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 8009dca:	4770      	bx	lr

08009dcc <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8009dcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8009dd0:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 8009dd4:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 8009dd8:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 8009ddc:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 8009de0:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8009de4:	6809      	ldr	r1, [r1, #0]
 8009de6:	ea43 0308 	orr.w	r3, r3, r8
 8009dea:	b981      	cbnz	r1, 8009e0e <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8009dec:	ea43 030e 	orr.w	r3, r3, lr
 8009df0:	4313      	orrs	r3, r2
 8009df2:	ea43 030c 	orr.w	r3, r3, ip
 8009df6:	433b      	orrs	r3, r7
 8009df8:	6801      	ldr	r1, [r0, #0]
 8009dfa:	4333      	orrs	r3, r6
 8009dfc:	432b      	orrs	r3, r5
 8009dfe:	4323      	orrs	r3, r4
 8009e00:	f36f 010e 	bfc	r1, #0, #15
 8009e04:	430b      	orrs	r3, r1
 8009e06:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8009e08:	2000      	movs	r0, #0
 8009e0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8009e0e:	6801      	ldr	r1, [r0, #0]
 8009e10:	ea43 030e 	orr.w	r3, r3, lr
 8009e14:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 8009e18:	430b      	orrs	r3, r1
 8009e1a:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8009e1c:	ea42 030c 	orr.w	r3, r2, ip
 8009e20:	6841      	ldr	r1, [r0, #4]
 8009e22:	433b      	orrs	r3, r7
 8009e24:	4333      	orrs	r3, r6
 8009e26:	432b      	orrs	r3, r5
 8009e28:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 8009e2c:	4323      	orrs	r3, r4
 8009e2e:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 8009e32:	4313      	orrs	r3, r2
 8009e34:	6043      	str	r3, [r0, #4]
 8009e36:	e7e7      	b.n	8009e08 <FMC_SDRAM_Init+0x3c>

08009e38 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8009e38:	68cb      	ldr	r3, [r1, #12]
 8009e3a:	f103 3cff 	add.w	ip, r3, #4294967295
 8009e3e:	694b      	ldr	r3, [r1, #20]
{
 8009e40:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8009e42:	684c      	ldr	r4, [r1, #4]
 8009e44:	688f      	ldr	r7, [r1, #8]
 8009e46:	690e      	ldr	r6, [r1, #16]
 8009e48:	698d      	ldr	r5, [r1, #24]
 8009e4a:	6809      	ldr	r1, [r1, #0]
 8009e4c:	3b01      	subs	r3, #1
 8009e4e:	051b      	lsls	r3, r3, #20
 8009e50:	3c01      	subs	r4, #1
 8009e52:	3f01      	subs	r7, #1
 8009e54:	3e01      	subs	r6, #1
 8009e56:	3d01      	subs	r5, #1
 8009e58:	0124      	lsls	r4, r4, #4
 8009e5a:	023f      	lsls	r7, r7, #8
 8009e5c:	0436      	lsls	r6, r6, #16
 8009e5e:	062d      	lsls	r5, r5, #24
 8009e60:	3901      	subs	r1, #1
 8009e62:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8009e66:	b95a      	cbnz	r2, 8009e80 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8009e68:	430b      	orrs	r3, r1
 8009e6a:	4323      	orrs	r3, r4
 8009e6c:	6882      	ldr	r2, [r0, #8]
 8009e6e:	433b      	orrs	r3, r7
 8009e70:	4333      	orrs	r3, r6
 8009e72:	432b      	orrs	r3, r5
 8009e74:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8009e78:	4313      	orrs	r3, r2
 8009e7a:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 8009e7c:	2000      	movs	r0, #0
 8009e7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8009e80:	6882      	ldr	r2, [r0, #8]
 8009e82:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8009e86:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 8009e8a:	4313      	orrs	r3, r2
 8009e8c:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8009e8e:	ea44 0307 	orr.w	r3, r4, r7
 8009e92:	68c2      	ldr	r2, [r0, #12]
 8009e94:	430b      	orrs	r3, r1
 8009e96:	4333      	orrs	r3, r6
 8009e98:	432b      	orrs	r3, r5
 8009e9a:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8009e9e:	4313      	orrs	r3, r2
 8009ea0:	60c3      	str	r3, [r0, #12]
 8009ea2:	e7eb      	b.n	8009e7c <FMC_SDRAM_Timing_Init+0x44>

08009ea4 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8009ea4:	b570      	push	{r4, r5, r6, lr}
 8009ea6:	4604      	mov	r4, r0
 8009ea8:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8009eaa:	6902      	ldr	r2, [r0, #16]
 8009eac:	e9d1 3000 	ldrd	r3, r0, [r1]
 8009eb0:	4303      	orrs	r3, r0
 8009eb2:	68c8      	ldr	r0, [r1, #12]
 8009eb4:	f36f 0215 	bfc	r2, #0, #22
 8009eb8:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 8009ebc:	4313      	orrs	r3, r2
 8009ebe:	688a      	ldr	r2, [r1, #8]
 8009ec0:	3a01      	subs	r2, #1
 8009ec2:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8009ec6:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 8009ec8:	f7fd fdce 	bl	8007a68 <HAL_GetTick>
 8009ecc:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8009ece:	69a0      	ldr	r0, [r4, #24]
 8009ed0:	f010 0020 	ands.w	r0, r0, #32
 8009ed4:	d003      	beq.n	8009ede <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8009ed6:	1c6b      	adds	r3, r5, #1
 8009ed8:	d0f9      	beq.n	8009ece <FMC_SDRAM_SendCommand+0x2a>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8009eda:	b90d      	cbnz	r5, 8009ee0 <FMC_SDRAM_SendCommand+0x3c>
      {
        return HAL_TIMEOUT;
 8009edc:	2003      	movs	r0, #3
      }
    }
  }
  return HAL_OK;
}
 8009ede:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8009ee0:	f7fd fdc2 	bl	8007a68 <HAL_GetTick>
 8009ee4:	1b80      	subs	r0, r0, r6
 8009ee6:	42a8      	cmp	r0, r5
 8009ee8:	d9f1      	bls.n	8009ece <FMC_SDRAM_SendCommand+0x2a>
 8009eea:	e7f7      	b.n	8009edc <FMC_SDRAM_SendCommand+0x38>

08009eec <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8009eec:	6943      	ldr	r3, [r0, #20]
 8009eee:	f36f 034d 	bfc	r3, #1, #13
 8009ef2:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 8009ef6:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 8009ef8:	2000      	movs	r0, #0
 8009efa:	4770      	bx	lr

08009efc <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8009efc:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8009efe:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009f02:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8009f04:	f001 ff44 	bl	800bd90 <xTaskGetSchedulerState>
 8009f08:	2801      	cmp	r0, #1
 8009f0a:	d003      	beq.n	8009f14 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8009f0c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8009f10:	f000 bc18 	b.w	800a744 <xPortSysTickHandler>
}
 8009f14:	bd08      	pop	{r3, pc}
	...

08009f18 <osKernelInitialize>:
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8009f18:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8009f1c:	b92b      	cbnz	r3, 8009f2a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8009f1e:	4b06      	ldr	r3, [pc, #24]	@ (8009f38 <osKernelInitialize+0x20>)
 8009f20:	6818      	ldr	r0, [r3, #0]
 8009f22:	b928      	cbnz	r0, 8009f30 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8009f24:	2201      	movs	r2, #1
 8009f26:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8009f28:	4770      	bx	lr
    stat = osErrorISR;
 8009f2a:	f06f 0005 	mvn.w	r0, #5
 8009f2e:	4770      	bx	lr
    } else {
      stat = osError;
 8009f30:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8009f34:	4770      	bx	lr
 8009f36:	bf00      	nop
 8009f38:	20004c4c 	.word	0x20004c4c

08009f3c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8009f3c:	b510      	push	{r4, lr}
 8009f3e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8009f42:	b95c      	cbnz	r4, 8009f5c <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8009f44:	4b08      	ldr	r3, [pc, #32]	@ (8009f68 <osKernelStart+0x2c>)
 8009f46:	681a      	ldr	r2, [r3, #0]
 8009f48:	2a01      	cmp	r2, #1
 8009f4a:	d10a      	bne.n	8009f62 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009f4c:	4a07      	ldr	r2, [pc, #28]	@ (8009f6c <osKernelStart+0x30>)
 8009f4e:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8009f50:	2202      	movs	r2, #2
 8009f52:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8009f54:	f001 fc40 	bl	800b7d8 <vTaskStartScheduler>
      stat = osOK;
 8009f58:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8009f5a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8009f5c:	f06f 0005 	mvn.w	r0, #5
 8009f60:	e7fb      	b.n	8009f5a <osKernelStart+0x1e>
      stat = osError;
 8009f62:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8009f66:	e7f8      	b.n	8009f5a <osKernelStart+0x1e>
 8009f68:	20004c4c 	.word	0x20004c4c
 8009f6c:	e000ed00 	.word	0xe000ed00

08009f70 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8009f70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009f72:	b087      	sub	sp, #28
 8009f74:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8009f76:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8009f78:	460b      	mov	r3, r1
  hTask = NULL;
 8009f7a:	9205      	str	r2, [sp, #20]
 8009f7c:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8009f80:	b9fa      	cbnz	r2, 8009fc2 <osThreadNew+0x52>
 8009f82:	b1f0      	cbz	r0, 8009fc2 <osThreadNew+0x52>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8009f84:	b354      	cbz	r4, 8009fdc <osThreadNew+0x6c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8009f86:	69a5      	ldr	r5, [r4, #24]
 8009f88:	b125      	cbz	r5, 8009f94 <osThreadNew+0x24>
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8009f8a:	1e69      	subs	r1, r5, #1
 8009f8c:	2937      	cmp	r1, #55	@ 0x37
 8009f8e:	d902      	bls.n	8009f96 <osThreadNew+0x26>
        return (NULL);
 8009f90:	2000      	movs	r0, #0
 8009f92:	e017      	b.n	8009fc4 <osThreadNew+0x54>
    prio  = (UBaseType_t)osPriorityNormal;
 8009f94:	2518      	movs	r5, #24
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8009f96:	6862      	ldr	r2, [r4, #4]
 8009f98:	07d2      	lsls	r2, r2, #31
 8009f9a:	d4f9      	bmi.n	8009f90 <osThreadNew+0x20>
      }

      if (attr->stack_size > 0U) {
 8009f9c:	6966      	ldr	r6, [r4, #20]
 8009f9e:	b19e      	cbz	r6, 8009fc8 <osThreadNew+0x58>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8009fa0:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8009fa2:	e9d4 7c02 	ldrd	r7, ip, [r4, #8]
      if (attr->name != NULL) {
 8009fa6:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8009fa8:	b187      	cbz	r7, 8009fcc <osThreadNew+0x5c>
 8009faa:	f1bc 0f5f 	cmp.w	ip, #95	@ 0x5f
 8009fae:	d908      	bls.n	8009fc2 <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8009fb0:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8009fb2:	b134      	cbz	r4, 8009fc2 <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8009fb4:	b12e      	cbz	r6, 8009fc2 <osThreadNew+0x52>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8009fb6:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8009fba:	9500      	str	r5, [sp, #0]
 8009fbc:	f001 fb21 	bl	800b602 <xTaskCreateStatic>
 8009fc0:	9005      	str	r0, [sp, #20]
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8009fc2:	9805      	ldr	r0, [sp, #20]
}
 8009fc4:	b007      	add	sp, #28
 8009fc6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8009fc8:	2280      	movs	r2, #128	@ 0x80
 8009fca:	e7ea      	b.n	8009fa2 <osThreadNew+0x32>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8009fcc:	f1bc 0f00 	cmp.w	ip, #0
 8009fd0:	d1f7      	bne.n	8009fc2 <osThreadNew+0x52>
 8009fd2:	6924      	ldr	r4, [r4, #16]
 8009fd4:	2c00      	cmp	r4, #0
 8009fd6:	d1f4      	bne.n	8009fc2 <osThreadNew+0x52>
 8009fd8:	460c      	mov	r4, r1
 8009fda:	e001      	b.n	8009fe0 <osThreadNew+0x70>
    prio  = (UBaseType_t)osPriorityNormal;
 8009fdc:	2518      	movs	r5, #24
    stack = configMINIMAL_STACK_SIZE;
 8009fde:	2280      	movs	r2, #128	@ 0x80
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8009fe0:	a905      	add	r1, sp, #20
 8009fe2:	e9cd 5100 	strd	r5, r1, [sp]
 8009fe6:	b292      	uxth	r2, r2
 8009fe8:	4621      	mov	r1, r4
 8009fea:	f001 fb42 	bl	800b672 <xTaskCreate>
 8009fee:	2801      	cmp	r0, #1
            hTask = NULL;
 8009ff0:	bf1c      	itt	ne
 8009ff2:	2300      	movne	r3, #0
 8009ff4:	9305      	strne	r3, [sp, #20]
 8009ff6:	e7e4      	b.n	8009fc2 <osThreadNew+0x52>

08009ff8 <osThreadGetState>:
  id = (osThreadId_t)xTaskGetCurrentTaskHandle();

  return (id);
}

osThreadState_t osThreadGetState (osThreadId_t thread_id) {
 8009ff8:	b508      	push	{r3, lr}
 8009ffa:	f3ef 8205 	mrs	r2, IPSR
  TaskHandle_t hTask = (TaskHandle_t)thread_id;
  osThreadState_t state;

  if (IS_IRQ() || (hTask == NULL)) {
 8009ffe:	b112      	cbz	r2, 800a006 <osThreadGetState+0xe>
    state = osThreadError;
 800a000:	f04f 30ff 	mov.w	r0, #4294967295
      default:         state = osThreadError;      break;
    }
  }

  return (state);
}
 800a004:	bd08      	pop	{r3, pc}
  if (IS_IRQ() || (hTask == NULL)) {
 800a006:	2800      	cmp	r0, #0
 800a008:	d0fa      	beq.n	800a000 <osThreadGetState+0x8>
    switch (eTaskGetState (hTask)) {
 800a00a:	f001 fb61 	bl	800b6d0 <eTaskGetState>
 800a00e:	2804      	cmp	r0, #4
 800a010:	d8f6      	bhi.n	800a000 <osThreadGetState+0x8>
 800a012:	4b01      	ldr	r3, [pc, #4]	@ (800a018 <osThreadGetState+0x20>)
 800a014:	5618      	ldrsb	r0, [r3, r0]
  return (state);
 800a016:	e7f5      	b.n	800a004 <osThreadGetState+0xc>
 800a018:	080288a4 	.word	0x080288a4

0800a01c <osThreadSuspend>:

  return (stat);
}

#if (configUSE_OS2_THREAD_SUSPEND_RESUME == 1)
osStatus_t osThreadSuspend (osThreadId_t thread_id) {
 800a01c:	b510      	push	{r4, lr}
 800a01e:	f3ef 8405 	mrs	r4, IPSR
  TaskHandle_t hTask = (TaskHandle_t)thread_id;
  osStatus_t stat;

  if (IS_IRQ()) {
 800a022:	b924      	cbnz	r4, 800a02e <osThreadSuspend+0x12>
    stat = osErrorISR;
  }
  else if (hTask == NULL) {
 800a024:	b130      	cbz	r0, 800a034 <osThreadSuspend+0x18>
    stat = osErrorParameter;
  }
  else {
    stat = osOK;
    vTaskSuspend (hTask);
 800a026:	f001 fd93 	bl	800bb50 <vTaskSuspend>
    stat = osOK;
 800a02a:	4620      	mov	r0, r4
  }

  return (stat);
}
 800a02c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800a02e:	f06f 0005 	mvn.w	r0, #5
 800a032:	e7fb      	b.n	800a02c <osThreadSuspend+0x10>
    stat = osErrorParameter;
 800a034:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800a038:	e7f8      	b.n	800a02c <osThreadSuspend+0x10>

0800a03a <osThreadResume>:

osStatus_t osThreadResume (osThreadId_t thread_id) {
 800a03a:	b510      	push	{r4, lr}
 800a03c:	f3ef 8405 	mrs	r4, IPSR
  TaskHandle_t hTask = (TaskHandle_t)thread_id;
  osStatus_t stat;

  if (IS_IRQ()) {
 800a040:	b924      	cbnz	r4, 800a04c <osThreadResume+0x12>
    stat = osErrorISR;
  }
  else if (hTask == NULL) {
 800a042:	b130      	cbz	r0, 800a052 <osThreadResume+0x18>
    stat = osErrorParameter;
  }
  else {
    stat = osOK;
    vTaskResume (hTask);
 800a044:	f001 fb86 	bl	800b754 <vTaskResume>
    stat = osOK;
 800a048:	4620      	mov	r0, r4
  }

  return (stat);
}
 800a04a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800a04c:	f06f 0005 	mvn.w	r0, #5
 800a050:	e7fb      	b.n	800a04a <osThreadResume+0x10>
    stat = osErrorParameter;
 800a052:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800a056:	e7f8      	b.n	800a04a <osThreadResume+0x10>

0800a058 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800a058:	b508      	push	{r3, lr}
 800a05a:	f3ef 8205 	mrs	r2, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800a05e:	b922      	cbnz	r2, 800a06a <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800a060:	b108      	cbz	r0, 800a066 <osDelay+0xe>
      vTaskDelay(ticks);
 800a062:	f001 fd17 	bl	800ba94 <vTaskDelay>
    stat = osOK;
 800a066:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 800a068:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 800a06a:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 800a06e:	e7fb      	b.n	800a068 <osDelay+0x10>

0800a070 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800a070:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a072:	4604      	mov	r4, r0
 800a074:	460e      	mov	r6, r1
 800a076:	4615      	mov	r5, r2
 800a078:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800a07c:	b942      	cbnz	r2, 800a090 <osSemaphoreNew+0x20>
 800a07e:	b138      	cbz	r0, 800a090 <osSemaphoreNew+0x20>
 800a080:	4288      	cmp	r0, r1
 800a082:	d305      	bcc.n	800a090 <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 800a084:	b155      	cbz	r5, 800a09c <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800a086:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 800a08a:	b12b      	cbz	r3, 800a098 <osSemaphoreNew+0x28>
 800a08c:	2f4f      	cmp	r7, #79	@ 0x4f
 800a08e:	d822      	bhi.n	800a0d6 <osSemaphoreNew+0x66>
  hSemaphore = NULL;
 800a090:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800a092:	4620      	mov	r0, r4
 800a094:	b003      	add	sp, #12
 800a096:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800a098:	2f00      	cmp	r7, #0
 800a09a:	d1f9      	bne.n	800a090 <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 800a09c:	2c01      	cmp	r4, #1
 800a09e:	d00c      	beq.n	800a0ba <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800a0a0:	4620      	mov	r0, r4
 800a0a2:	4631      	mov	r1, r6
 800a0a4:	f000 fd86 	bl	800abb4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800a0a8:	4604      	mov	r4, r0
 800a0aa:	2800      	cmp	r0, #0
 800a0ac:	d0f0      	beq.n	800a090 <osSemaphoreNew+0x20>
        if (attr != NULL) {
 800a0ae:	b985      	cbnz	r5, 800a0d2 <osSemaphoreNew+0x62>
        vQueueAddToRegistry (hSemaphore, name);
 800a0b0:	4629      	mov	r1, r5
 800a0b2:	4620      	mov	r0, r4
 800a0b4:	f001 f8c4 	bl	800b240 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800a0b8:	e7eb      	b.n	800a092 <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 800a0ba:	2203      	movs	r2, #3
 800a0bc:	2100      	movs	r1, #0
 800a0be:	2001      	movs	r0, #1
 800a0c0:	f000 fd2f 	bl	800ab22 <xQueueGenericCreate>
 800a0c4:	e00e      	b.n	800a0e4 <osSemaphoreNew+0x74>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800a0c6:	461a      	mov	r2, r3
 800a0c8:	f000 fd52 	bl	800ab70 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800a0cc:	4604      	mov	r4, r0
 800a0ce:	2800      	cmp	r0, #0
 800a0d0:	d0de      	beq.n	800a090 <osSemaphoreNew+0x20>
          name = attr->name;
 800a0d2:	682d      	ldr	r5, [r5, #0]
 800a0d4:	e7ec      	b.n	800a0b0 <osSemaphoreNew+0x40>
      if (max_count == 1U) {
 800a0d6:	2801      	cmp	r0, #1
 800a0d8:	d1f5      	bne.n	800a0c6 <osSemaphoreNew+0x56>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800a0da:	2103      	movs	r1, #3
 800a0dc:	9100      	str	r1, [sp, #0]
 800a0de:	4611      	mov	r1, r2
 800a0e0:	f000 fcd1 	bl	800aa86 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 800a0e4:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800a0e6:	2800      	cmp	r0, #0
 800a0e8:	d0d2      	beq.n	800a090 <osSemaphoreNew+0x20>
 800a0ea:	2e00      	cmp	r6, #0
 800a0ec:	d0df      	beq.n	800a0ae <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800a0ee:	2300      	movs	r3, #0
 800a0f0:	461a      	mov	r2, r3
 800a0f2:	4619      	mov	r1, r3
 800a0f4:	f000 fd7c 	bl	800abf0 <xQueueGenericSend>
 800a0f8:	2801      	cmp	r0, #1
 800a0fa:	d0d8      	beq.n	800a0ae <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 800a0fc:	4620      	mov	r0, r4
 800a0fe:	f001 f8c9 	bl	800b294 <vQueueDelete>
      if (hSemaphore != NULL) {
 800a102:	e7c5      	b.n	800a090 <osSemaphoreNew+0x20>

0800a104 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800a104:	b513      	push	{r0, r1, r4, lr}
 800a106:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800a108:	b328      	cbz	r0, 800a156 <osSemaphoreAcquire+0x52>
 800a10a:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800a10e:	b1cb      	cbz	r3, 800a144 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800a110:	bb09      	cbnz	r1, 800a156 <osSemaphoreAcquire+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800a112:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800a114:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800a116:	f001 f826 	bl	800b166 <xQueueReceiveFromISR>
 800a11a:	2801      	cmp	r0, #1
 800a11c:	d003      	beq.n	800a126 <osSemaphoreAcquire+0x22>
        stat = osErrorResource;
 800a11e:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800a122:	b002      	add	sp, #8
 800a124:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800a126:	9b01      	ldr	r3, [sp, #4]
 800a128:	b90b      	cbnz	r3, 800a12e <osSemaphoreAcquire+0x2a>
  stat = osOK;
 800a12a:	2000      	movs	r0, #0
 800a12c:	e7f9      	b.n	800a122 <osSemaphoreAcquire+0x1e>
        portYIELD_FROM_ISR (yield);
 800a12e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800a132:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a136:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800a13a:	f3bf 8f4f 	dsb	sy
 800a13e:	f3bf 8f6f 	isb	sy
 800a142:	e7f2      	b.n	800a12a <osSemaphoreAcquire+0x26>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800a144:	f000 ff52 	bl	800afec <xQueueSemaphoreTake>
 800a148:	2801      	cmp	r0, #1
 800a14a:	d0ee      	beq.n	800a12a <osSemaphoreAcquire+0x26>
      if (timeout != 0U) {
 800a14c:	2c00      	cmp	r4, #0
 800a14e:	d0e6      	beq.n	800a11e <osSemaphoreAcquire+0x1a>
        stat = osErrorTimeout;
 800a150:	f06f 0001 	mvn.w	r0, #1
 800a154:	e7e5      	b.n	800a122 <osSemaphoreAcquire+0x1e>
    stat = osErrorParameter;
 800a156:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800a15a:	e7e2      	b.n	800a122 <osSemaphoreAcquire+0x1e>

0800a15c <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800a15c:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800a15e:	b318      	cbz	r0, 800a1a8 <osSemaphoreRelease+0x4c>
 800a160:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800a164:	b1cb      	cbz	r3, 800a19a <osSemaphoreRelease+0x3e>
    yield = pdFALSE;
 800a166:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800a168:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800a16a:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800a16c:	f000 fe4f 	bl	800ae0e <xQueueGiveFromISR>
 800a170:	2801      	cmp	r0, #1
 800a172:	d004      	beq.n	800a17e <osSemaphoreRelease+0x22>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 800a174:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 800a178:	b003      	add	sp, #12
 800a17a:	f85d fb04 	ldr.w	pc, [sp], #4
      portYIELD_FROM_ISR (yield);
 800a17e:	9b01      	ldr	r3, [sp, #4]
 800a180:	b14b      	cbz	r3, 800a196 <osSemaphoreRelease+0x3a>
 800a182:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800a186:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a18a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800a18e:	f3bf 8f4f 	dsb	sy
 800a192:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800a196:	2000      	movs	r0, #0
 800a198:	e7ee      	b.n	800a178 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800a19a:	461a      	mov	r2, r3
 800a19c:	4619      	mov	r1, r3
 800a19e:	f000 fd27 	bl	800abf0 <xQueueGenericSend>
 800a1a2:	2801      	cmp	r0, #1
 800a1a4:	d0f7      	beq.n	800a196 <osSemaphoreRelease+0x3a>
 800a1a6:	e7e5      	b.n	800a174 <osSemaphoreRelease+0x18>
    stat = osErrorParameter;
 800a1a8:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800a1ac:	e7e4      	b.n	800a178 <osSemaphoreRelease+0x1c>

0800a1ae <osSemaphoreGetCount>:

uint32_t osSemaphoreGetCount (osSemaphoreId_t semaphore_id) {
  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;
  uint32_t count;

  if (hSemaphore == NULL) {
 800a1ae:	b130      	cbz	r0, 800a1be <osSemaphoreGetCount+0x10>
 800a1b0:	f3ef 8305 	mrs	r3, IPSR
    count = 0U;
  }
  else if (IS_IRQ()) {
 800a1b4:	b10b      	cbz	r3, 800a1ba <osSemaphoreGetCount+0xc>
    count = uxQueueMessagesWaitingFromISR (hSemaphore);
 800a1b6:	f001 b836 	b.w	800b226 <uxQueueMessagesWaitingFromISR>
  } else {
    count = (uint32_t)uxSemaphoreGetCount (hSemaphore);
 800a1ba:	f001 b821 	b.w	800b200 <uxQueueMessagesWaiting>
  }

  return (count);
}
 800a1be:	4770      	bx	lr

0800a1c0 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800a1c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a1c2:	4605      	mov	r5, r0
 800a1c4:	460e      	mov	r6, r1
 800a1c6:	4614      	mov	r4, r2
 800a1c8:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800a1cc:	b11f      	cbz	r7, 800a1d6 <osMessageQueueNew+0x16>
  hQueue = NULL;
 800a1ce:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800a1d0:	4628      	mov	r0, r5
 800a1d2:	b003      	add	sp, #12
 800a1d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800a1d6:	2800      	cmp	r0, #0
 800a1d8:	d0f9      	beq.n	800a1ce <osMessageQueueNew+0xe>
 800a1da:	2900      	cmp	r1, #0
 800a1dc:	d0f7      	beq.n	800a1ce <osMessageQueueNew+0xe>
    if (attr != NULL) {
 800a1de:	b1da      	cbz	r2, 800a218 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800a1e0:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 800a1e4:	b183      	cbz	r3, 800a208 <osMessageQueueNew+0x48>
 800a1e6:	2a4f      	cmp	r2, #79	@ 0x4f
 800a1e8:	d9f1      	bls.n	800a1ce <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800a1ea:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800a1ec:	2a00      	cmp	r2, #0
 800a1ee:	d0ee      	beq.n	800a1ce <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800a1f0:	6966      	ldr	r6, [r4, #20]
 800a1f2:	434d      	muls	r5, r1
 800a1f4:	42ae      	cmp	r6, r5
 800a1f6:	d3ea      	bcc.n	800a1ce <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800a1f8:	9700      	str	r7, [sp, #0]
 800a1fa:	f000 fc44 	bl	800aa86 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800a1fe:	4605      	mov	r5, r0
 800a200:	2800      	cmp	r0, #0
 800a202:	d0e4      	beq.n	800a1ce <osMessageQueueNew+0xe>
        name = attr->name;
 800a204:	6824      	ldr	r4, [r4, #0]
 800a206:	e011      	b.n	800a22c <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800a208:	2a00      	cmp	r2, #0
 800a20a:	d1e0      	bne.n	800a1ce <osMessageQueueNew+0xe>
 800a20c:	6923      	ldr	r3, [r4, #16]
 800a20e:	2b00      	cmp	r3, #0
 800a210:	d1dd      	bne.n	800a1ce <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800a212:	6963      	ldr	r3, [r4, #20]
 800a214:	2b00      	cmp	r3, #0
 800a216:	d1da      	bne.n	800a1ce <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 800a218:	4628      	mov	r0, r5
 800a21a:	2200      	movs	r2, #0
 800a21c:	4631      	mov	r1, r6
 800a21e:	f000 fc80 	bl	800ab22 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800a222:	4605      	mov	r5, r0
 800a224:	2800      	cmp	r0, #0
 800a226:	d0d2      	beq.n	800a1ce <osMessageQueueNew+0xe>
      if (attr != NULL) {
 800a228:	2c00      	cmp	r4, #0
 800a22a:	d1eb      	bne.n	800a204 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 800a22c:	4621      	mov	r1, r4
 800a22e:	4628      	mov	r0, r5
 800a230:	f001 f806 	bl	800b240 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800a234:	e7cc      	b.n	800a1d0 <osMessageQueueNew+0x10>

0800a236 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800a236:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a238:	461c      	mov	r4, r3
 800a23a:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800a23e:	b1de      	cbz	r6, 800a278 <osMessageQueuePut+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800a240:	b338      	cbz	r0, 800a292 <osMessageQueuePut+0x5c>
 800a242:	b331      	cbz	r1, 800a292 <osMessageQueuePut+0x5c>
 800a244:	bb2b      	cbnz	r3, 800a292 <osMessageQueuePut+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800a246:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800a248:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800a24a:	f000 fd83 	bl	800ad54 <xQueueGenericSendFromISR>
 800a24e:	2801      	cmp	r0, #1
 800a250:	d003      	beq.n	800a25a <osMessageQueuePut+0x24>
        stat = osErrorResource;
 800a252:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800a256:	b002      	add	sp, #8
 800a258:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 800a25a:	9b01      	ldr	r3, [sp, #4]
 800a25c:	b90b      	cbnz	r3, 800a262 <osMessageQueuePut+0x2c>
  stat = osOK;
 800a25e:	2000      	movs	r0, #0
 800a260:	e7f9      	b.n	800a256 <osMessageQueuePut+0x20>
        portYIELD_FROM_ISR (yield);
 800a262:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800a266:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a26a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800a26e:	f3bf 8f4f 	dsb	sy
 800a272:	f3bf 8f6f 	isb	sy
 800a276:	e7f2      	b.n	800a25e <osMessageQueuePut+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800a278:	b158      	cbz	r0, 800a292 <osMessageQueuePut+0x5c>
 800a27a:	b151      	cbz	r1, 800a292 <osMessageQueuePut+0x5c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800a27c:	4633      	mov	r3, r6
 800a27e:	4622      	mov	r2, r4
 800a280:	f000 fcb6 	bl	800abf0 <xQueueGenericSend>
 800a284:	2801      	cmp	r0, #1
 800a286:	d0ea      	beq.n	800a25e <osMessageQueuePut+0x28>
        if (timeout != 0U) {
 800a288:	2c00      	cmp	r4, #0
 800a28a:	d0e2      	beq.n	800a252 <osMessageQueuePut+0x1c>
          stat = osErrorTimeout;
 800a28c:	f06f 0001 	mvn.w	r0, #1
 800a290:	e7e1      	b.n	800a256 <osMessageQueuePut+0x20>
      stat = osErrorParameter;
 800a292:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800a296:	e7de      	b.n	800a256 <osMessageQueuePut+0x20>

0800a298 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800a298:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a29a:	461c      	mov	r4, r3
 800a29c:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800a2a0:	b1db      	cbz	r3, 800a2da <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800a2a2:	b330      	cbz	r0, 800a2f2 <osMessageQueueGet+0x5a>
 800a2a4:	b329      	cbz	r1, 800a2f2 <osMessageQueueGet+0x5a>
 800a2a6:	bb24      	cbnz	r4, 800a2f2 <osMessageQueueGet+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800a2a8:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800a2aa:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800a2ac:	f000 ff5b 	bl	800b166 <xQueueReceiveFromISR>
 800a2b0:	2801      	cmp	r0, #1
 800a2b2:	d003      	beq.n	800a2bc <osMessageQueueGet+0x24>
        stat = osErrorResource;
 800a2b4:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800a2b8:	b003      	add	sp, #12
 800a2ba:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 800a2bc:	9b01      	ldr	r3, [sp, #4]
 800a2be:	b90b      	cbnz	r3, 800a2c4 <osMessageQueueGet+0x2c>
  stat = osOK;
 800a2c0:	2000      	movs	r0, #0
 800a2c2:	e7f9      	b.n	800a2b8 <osMessageQueueGet+0x20>
        portYIELD_FROM_ISR (yield);
 800a2c4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800a2c8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a2cc:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800a2d0:	f3bf 8f4f 	dsb	sy
 800a2d4:	f3bf 8f6f 	isb	sy
 800a2d8:	e7f2      	b.n	800a2c0 <osMessageQueueGet+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800a2da:	b150      	cbz	r0, 800a2f2 <osMessageQueueGet+0x5a>
 800a2dc:	b149      	cbz	r1, 800a2f2 <osMessageQueueGet+0x5a>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800a2de:	4622      	mov	r2, r4
 800a2e0:	f000 fde6 	bl	800aeb0 <xQueueReceive>
 800a2e4:	2801      	cmp	r0, #1
 800a2e6:	d0eb      	beq.n	800a2c0 <osMessageQueueGet+0x28>
        if (timeout != 0U) {
 800a2e8:	2c00      	cmp	r4, #0
 800a2ea:	d0e3      	beq.n	800a2b4 <osMessageQueueGet+0x1c>
          stat = osErrorTimeout;
 800a2ec:	f06f 0001 	mvn.w	r0, #1
 800a2f0:	e7e2      	b.n	800a2b8 <osMessageQueueGet+0x20>
      stat = osErrorParameter;
 800a2f2:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800a2f6:	e7df      	b.n	800a2b8 <osMessageQueueGet+0x20>

0800a2f8 <osMessageQueueGetCount>:
  }

  return (size);
}

uint32_t osMessageQueueGetCount (osMessageQueueId_t mq_id) {
 800a2f8:	f7ff bf59 	b.w	800a1ae <osSemaphoreGetCount>

0800a2fc <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800a2fc:	4b03      	ldr	r3, [pc, #12]	@ (800a30c <vApplicationGetIdleTaskMemory+0x10>)
 800a2fe:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800a300:	4b03      	ldr	r3, [pc, #12]	@ (800a310 <vApplicationGetIdleTaskMemory+0x14>)
 800a302:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800a304:	2380      	movs	r3, #128	@ 0x80
 800a306:	6013      	str	r3, [r2, #0]
}
 800a308:	4770      	bx	lr
 800a30a:	bf00      	nop
 800a30c:	20004bec 	.word	0x20004bec
 800a310:	200049ec 	.word	0x200049ec

0800a314 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800a314:	4b03      	ldr	r3, [pc, #12]	@ (800a324 <vApplicationGetTimerTaskMemory+0x10>)
 800a316:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800a318:	4b03      	ldr	r3, [pc, #12]	@ (800a328 <vApplicationGetTimerTaskMemory+0x14>)
 800a31a:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800a31c:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800a320:	6013      	str	r3, [r2, #0]
}
 800a322:	4770      	bx	lr
 800a324:	2000498c 	.word	0x2000498c
 800a328:	2000458c 	.word	0x2000458c

0800a32c <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800a32c:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800a32e:	4b10      	ldr	r3, [pc, #64]	@ (800a370 <prvInsertBlockIntoFreeList+0x44>)
 800a330:	461a      	mov	r2, r3
 800a332:	681b      	ldr	r3, [r3, #0]
 800a334:	4283      	cmp	r3, r0
 800a336:	d3fb      	bcc.n	800a330 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800a338:	6854      	ldr	r4, [r2, #4]
 800a33a:	1911      	adds	r1, r2, r4
 800a33c:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800a33e:	bf01      	itttt	eq
 800a340:	6841      	ldreq	r1, [r0, #4]
		pxBlockToInsert = pxIterator;
 800a342:	4610      	moveq	r0, r2
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800a344:	1909      	addeq	r1, r1, r4
 800a346:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800a348:	6844      	ldr	r4, [r0, #4]
 800a34a:	1901      	adds	r1, r0, r4
 800a34c:	428b      	cmp	r3, r1
 800a34e:	d10c      	bne.n	800a36a <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800a350:	4908      	ldr	r1, [pc, #32]	@ (800a374 <prvInsertBlockIntoFreeList+0x48>)
 800a352:	6809      	ldr	r1, [r1, #0]
 800a354:	428b      	cmp	r3, r1
 800a356:	d003      	beq.n	800a360 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800a358:	6859      	ldr	r1, [r3, #4]
 800a35a:	4421      	add	r1, r4
 800a35c:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800a35e:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 800a360:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800a362:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800a364:	bf18      	it	ne
 800a366:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800a368:	bd10      	pop	{r4, pc}
 800a36a:	4619      	mov	r1, r3
 800a36c:	e7f8      	b.n	800a360 <prvInsertBlockIntoFreeList+0x34>
 800a36e:	bf00      	nop
 800a370:	20004c68 	.word	0x20004c68
 800a374:	20004c64 	.word	0x20004c64

0800a378 <pvPortMalloc>:
{
 800a378:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a37c:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800a37e:	f001 fa71 	bl	800b864 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800a382:	4942      	ldr	r1, [pc, #264]	@ (800a48c <pvPortMalloc+0x114>)
 800a384:	4d42      	ldr	r5, [pc, #264]	@ (800a490 <pvPortMalloc+0x118>)
 800a386:	680b      	ldr	r3, [r1, #0]
 800a388:	bb0b      	cbnz	r3, 800a3ce <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800a38a:	4a42      	ldr	r2, [pc, #264]	@ (800a494 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800a38c:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800a38e:	bf1f      	itttt	ne
 800a390:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800a392:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800a396:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
 800a39a:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800a39c:	bf0c      	ite	eq
 800a39e:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800a3a2:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800a3a4:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800a3a6:	4e3c      	ldr	r6, [pc, #240]	@ (800a498 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 800a3a8:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800a3aa:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 800a3ae:	2000      	movs	r0, #0
 800a3b0:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800a3b2:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800a3b4:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800a3b8:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800a3ba:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 800a3be:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800a3c0:	4b36      	ldr	r3, [pc, #216]	@ (800a49c <pvPortMalloc+0x124>)
 800a3c2:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800a3c4:	4b36      	ldr	r3, [pc, #216]	@ (800a4a0 <pvPortMalloc+0x128>)
 800a3c6:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800a3c8:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 800a3cc:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800a3ce:	682e      	ldr	r6, [r5, #0]
 800a3d0:	4226      	tst	r6, r4
 800a3d2:	d155      	bne.n	800a480 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 800a3d4:	2c00      	cmp	r4, #0
 800a3d6:	d046      	beq.n	800a466 <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 800a3d8:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800a3dc:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800a3de:	bf1c      	itt	ne
 800a3e0:	f023 0307 	bicne.w	r3, r3, #7
 800a3e4:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800a3e6:	2b00      	cmp	r3, #0
 800a3e8:	d04a      	beq.n	800a480 <pvPortMalloc+0x108>
 800a3ea:	4f2d      	ldr	r7, [pc, #180]	@ (800a4a0 <pvPortMalloc+0x128>)
 800a3ec:	683c      	ldr	r4, [r7, #0]
 800a3ee:	429c      	cmp	r4, r3
 800a3f0:	d346      	bcc.n	800a480 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 800a3f2:	4a29      	ldr	r2, [pc, #164]	@ (800a498 <pvPortMalloc+0x120>)
 800a3f4:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800a3f6:	6868      	ldr	r0, [r5, #4]
 800a3f8:	4298      	cmp	r0, r3
 800a3fa:	d204      	bcs.n	800a406 <pvPortMalloc+0x8e>
 800a3fc:	f8d5 c000 	ldr.w	ip, [r5]
 800a400:	f1bc 0f00 	cmp.w	ip, #0
 800a404:	d115      	bne.n	800a432 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 800a406:	6809      	ldr	r1, [r1, #0]
 800a408:	42a9      	cmp	r1, r5
 800a40a:	d039      	beq.n	800a480 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800a40c:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800a40e:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800a412:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800a414:	1ac2      	subs	r2, r0, r3
 800a416:	2a10      	cmp	r2, #16
 800a418:	d912      	bls.n	800a440 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800a41a:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800a41c:	0741      	lsls	r1, r0, #29
 800a41e:	d00b      	beq.n	800a438 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800a420:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a424:	f383 8811 	msr	BASEPRI, r3
 800a428:	f3bf 8f6f 	isb	sy
 800a42c:	f3bf 8f4f 	dsb	sy
 800a430:	e7fe      	b.n	800a430 <pvPortMalloc+0xb8>
					pxPreviousBlock = pxBlock;
 800a432:	462a      	mov	r2, r5
					pxBlock = pxBlock->pxNextFreeBlock;
 800a434:	4665      	mov	r5, ip
 800a436:	e7de      	b.n	800a3f6 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800a438:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800a43a:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800a43c:	f7ff ff76 	bl	800a32c <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a440:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a442:	4916      	ldr	r1, [pc, #88]	@ (800a49c <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a444:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800a446:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 800a448:	4a16      	ldr	r2, [pc, #88]	@ (800a4a4 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a44a:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a44c:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 800a44e:	2300      	movs	r3, #0
 800a450:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 800a452:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800a454:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a456:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 800a458:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800a45c:	bf38      	it	cc
 800a45e:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 800a460:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800a462:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 800a466:	f001 faa1 	bl	800b9ac <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800a46a:	0763      	lsls	r3, r4, #29
 800a46c:	d00a      	beq.n	800a484 <pvPortMalloc+0x10c>
 800a46e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a472:	f383 8811 	msr	BASEPRI, r3
 800a476:	f3bf 8f6f 	isb	sy
 800a47a:	f3bf 8f4f 	dsb	sy
 800a47e:	e7fe      	b.n	800a47e <pvPortMalloc+0x106>
void *pvReturn = NULL;
 800a480:	2400      	movs	r4, #0
 800a482:	e7f0      	b.n	800a466 <pvPortMalloc+0xee>
}
 800a484:	4620      	mov	r0, r4
 800a486:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a48a:	bf00      	nop
 800a48c:	20004c64 	.word	0x20004c64
 800a490:	20004c50 	.word	0x20004c50
 800a494:	20004c70 	.word	0x20004c70
 800a498:	20004c68 	.word	0x20004c68
 800a49c:	20004c5c 	.word	0x20004c5c
 800a4a0:	20004c60 	.word	0x20004c60
 800a4a4:	20004c58 	.word	0x20004c58

0800a4a8 <vPortFree>:
{
 800a4a8:	b510      	push	{r4, lr}
	if( pv != NULL )
 800a4aa:	4604      	mov	r4, r0
 800a4ac:	b390      	cbz	r0, 800a514 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800a4ae:	4a1a      	ldr	r2, [pc, #104]	@ (800a518 <vPortFree+0x70>)
 800a4b0:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800a4b4:	6812      	ldr	r2, [r2, #0]
 800a4b6:	4213      	tst	r3, r2
 800a4b8:	d108      	bne.n	800a4cc <vPortFree+0x24>
 800a4ba:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a4be:	f383 8811 	msr	BASEPRI, r3
 800a4c2:	f3bf 8f6f 	isb	sy
 800a4c6:	f3bf 8f4f 	dsb	sy
 800a4ca:	e7fe      	b.n	800a4ca <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800a4cc:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800a4d0:	b141      	cbz	r1, 800a4e4 <vPortFree+0x3c>
 800a4d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a4d6:	f383 8811 	msr	BASEPRI, r3
 800a4da:	f3bf 8f6f 	isb	sy
 800a4de:	f3bf 8f4f 	dsb	sy
 800a4e2:	e7fe      	b.n	800a4e2 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800a4e4:	ea23 0302 	bic.w	r3, r3, r2
 800a4e8:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800a4ec:	f001 f9ba 	bl	800b864 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800a4f0:	4a0a      	ldr	r2, [pc, #40]	@ (800a51c <vPortFree+0x74>)
 800a4f2:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a4f6:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800a4f8:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800a4fc:	440b      	add	r3, r1
 800a4fe:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800a500:	f7ff ff14 	bl	800a32c <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 800a504:	4a06      	ldr	r2, [pc, #24]	@ (800a520 <vPortFree+0x78>)
 800a506:	6813      	ldr	r3, [r2, #0]
}
 800a508:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 800a50c:	3301      	adds	r3, #1
 800a50e:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 800a510:	f001 ba4c 	b.w	800b9ac <xTaskResumeAll>
}
 800a514:	bd10      	pop	{r4, pc}
 800a516:	bf00      	nop
 800a518:	20004c50 	.word	0x20004c50
 800a51c:	20004c60 	.word	0x20004c60
 800a520:	20004c54 	.word	0x20004c54

0800a524 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a524:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800a528:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a52c:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a530:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a532:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800a534:	2300      	movs	r3, #0
 800a536:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800a538:	4770      	bx	lr

0800a53a <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800a53a:	2300      	movs	r3, #0
 800a53c:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800a53e:	4770      	bx	lr

0800a540 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800a540:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800a542:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800a544:	689a      	ldr	r2, [r3, #8]
 800a546:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800a548:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800a54a:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800a54c:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800a54e:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800a550:	3301      	adds	r3, #1
 800a552:	6003      	str	r3, [r0, #0]
}
 800a554:	4770      	bx	lr

0800a556 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800a556:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800a558:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800a55a:	1c63      	adds	r3, r4, #1
 800a55c:	d10a      	bne.n	800a574 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800a55e:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800a560:	685a      	ldr	r2, [r3, #4]
 800a562:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800a564:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800a566:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800a568:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800a56a:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800a56c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800a56e:	3301      	adds	r3, #1
 800a570:	6003      	str	r3, [r0, #0]
}
 800a572:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800a574:	f100 0208 	add.w	r2, r0, #8
 800a578:	4613      	mov	r3, r2
 800a57a:	6852      	ldr	r2, [r2, #4]
 800a57c:	6815      	ldr	r5, [r2, #0]
 800a57e:	42a5      	cmp	r5, r4
 800a580:	d9fa      	bls.n	800a578 <vListInsert+0x22>
 800a582:	e7ed      	b.n	800a560 <vListInsert+0xa>

0800a584 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800a584:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800a588:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800a58a:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800a58c:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800a58e:	6859      	ldr	r1, [r3, #4]
 800a590:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800a592:	bf08      	it	eq
 800a594:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800a596:	2200      	movs	r2, #0
 800a598:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800a59a:	681a      	ldr	r2, [r3, #0]
 800a59c:	3a01      	subs	r2, #1
 800a59e:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800a5a0:	6818      	ldr	r0, [r3, #0]
}
 800a5a2:	4770      	bx	lr

0800a5a4 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800a5a4:	4808      	ldr	r0, [pc, #32]	@ (800a5c8 <prvPortStartFirstTask+0x24>)
 800a5a6:	6800      	ldr	r0, [r0, #0]
 800a5a8:	6800      	ldr	r0, [r0, #0]
 800a5aa:	f380 8808 	msr	MSP, r0
 800a5ae:	f04f 0000 	mov.w	r0, #0
 800a5b2:	f380 8814 	msr	CONTROL, r0
 800a5b6:	b662      	cpsie	i
 800a5b8:	b661      	cpsie	f
 800a5ba:	f3bf 8f4f 	dsb	sy
 800a5be:	f3bf 8f6f 	isb	sy
 800a5c2:	df00      	svc	0
 800a5c4:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800a5c6:	0000      	.short	0x0000
 800a5c8:	e000ed08 	.word	0xe000ed08

0800a5cc <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800a5cc:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 800a5dc <vPortEnableVFP+0x10>
 800a5d0:	6801      	ldr	r1, [r0, #0]
 800a5d2:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800a5d6:	6001      	str	r1, [r0, #0]
 800a5d8:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800a5da:	0000      	.short	0x0000
 800a5dc:	e000ed88 	.word	0xe000ed88

0800a5e0 <prvTaskExitError>:
{
 800a5e0:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800a5e2:	2300      	movs	r3, #0
 800a5e4:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800a5e6:	4b0d      	ldr	r3, [pc, #52]	@ (800a61c <prvTaskExitError+0x3c>)
 800a5e8:	681b      	ldr	r3, [r3, #0]
 800a5ea:	3301      	adds	r3, #1
 800a5ec:	d008      	beq.n	800a600 <prvTaskExitError+0x20>
 800a5ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a5f2:	f383 8811 	msr	BASEPRI, r3
 800a5f6:	f3bf 8f6f 	isb	sy
 800a5fa:	f3bf 8f4f 	dsb	sy
 800a5fe:	e7fe      	b.n	800a5fe <prvTaskExitError+0x1e>
 800a600:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a604:	f383 8811 	msr	BASEPRI, r3
 800a608:	f3bf 8f6f 	isb	sy
 800a60c:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800a610:	9b01      	ldr	r3, [sp, #4]
 800a612:	2b00      	cmp	r3, #0
 800a614:	d0fc      	beq.n	800a610 <prvTaskExitError+0x30>
}
 800a616:	b002      	add	sp, #8
 800a618:	4770      	bx	lr
 800a61a:	bf00      	nop
 800a61c:	20000080 	.word	0x20000080

0800a620 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800a620:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 800a624:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800a628:	4b07      	ldr	r3, [pc, #28]	@ (800a648 <pxPortInitialiseStack+0x28>)
 800a62a:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800a62e:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800a632:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800a636:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800a63a:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800a63e:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800a642:	3844      	subs	r0, #68	@ 0x44
 800a644:	4770      	bx	lr
 800a646:	bf00      	nop
 800a648:	0800a5e1 	.word	0x0800a5e1
 800a64c:	00000000 	.word	0x00000000

0800a650 <SVC_Handler>:
	__asm volatile (
 800a650:	4b07      	ldr	r3, [pc, #28]	@ (800a670 <pxCurrentTCBConst2>)
 800a652:	6819      	ldr	r1, [r3, #0]
 800a654:	6808      	ldr	r0, [r1, #0]
 800a656:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a65a:	f380 8809 	msr	PSP, r0
 800a65e:	f3bf 8f6f 	isb	sy
 800a662:	f04f 0000 	mov.w	r0, #0
 800a666:	f380 8811 	msr	BASEPRI, r0
 800a66a:	4770      	bx	lr
 800a66c:	f3af 8000 	nop.w

0800a670 <pxCurrentTCBConst2>:
 800a670:	200151b0 	.word	0x200151b0

0800a674 <vPortEnterCritical>:
 800a674:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a678:	f383 8811 	msr	BASEPRI, r3
 800a67c:	f3bf 8f6f 	isb	sy
 800a680:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800a684:	4a0a      	ldr	r2, [pc, #40]	@ (800a6b0 <vPortEnterCritical+0x3c>)
 800a686:	6813      	ldr	r3, [r2, #0]
 800a688:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800a68a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800a68c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800a68e:	d10e      	bne.n	800a6ae <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800a690:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800a694:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 800a698:	b2db      	uxtb	r3, r3
 800a69a:	b143      	cbz	r3, 800a6ae <vPortEnterCritical+0x3a>
 800a69c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a6a0:	f383 8811 	msr	BASEPRI, r3
 800a6a4:	f3bf 8f6f 	isb	sy
 800a6a8:	f3bf 8f4f 	dsb	sy
 800a6ac:	e7fe      	b.n	800a6ac <vPortEnterCritical+0x38>
}
 800a6ae:	4770      	bx	lr
 800a6b0:	20000080 	.word	0x20000080

0800a6b4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800a6b4:	4a08      	ldr	r2, [pc, #32]	@ (800a6d8 <vPortExitCritical+0x24>)
 800a6b6:	6813      	ldr	r3, [r2, #0]
 800a6b8:	b943      	cbnz	r3, 800a6cc <vPortExitCritical+0x18>
 800a6ba:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a6be:	f383 8811 	msr	BASEPRI, r3
 800a6c2:	f3bf 8f6f 	isb	sy
 800a6c6:	f3bf 8f4f 	dsb	sy
 800a6ca:	e7fe      	b.n	800a6ca <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800a6cc:	3b01      	subs	r3, #1
 800a6ce:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800a6d0:	b90b      	cbnz	r3, 800a6d6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800a6d2:	f383 8811 	msr	BASEPRI, r3
}
 800a6d6:	4770      	bx	lr
 800a6d8:	20000080 	.word	0x20000080
 800a6dc:	00000000 	.word	0x00000000

0800a6e0 <PendSV_Handler>:
	__asm volatile
 800a6e0:	f3ef 8009 	mrs	r0, PSP
 800a6e4:	f3bf 8f6f 	isb	sy
 800a6e8:	4b15      	ldr	r3, [pc, #84]	@ (800a740 <pxCurrentTCBConst>)
 800a6ea:	681a      	ldr	r2, [r3, #0]
 800a6ec:	f01e 0f10 	tst.w	lr, #16
 800a6f0:	bf08      	it	eq
 800a6f2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800a6f6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a6fa:	6010      	str	r0, [r2, #0]
 800a6fc:	e92d 0009 	stmdb	sp!, {r0, r3}
 800a700:	f04f 0050 	mov.w	r0, #80	@ 0x50
 800a704:	f380 8811 	msr	BASEPRI, r0
 800a708:	f3bf 8f4f 	dsb	sy
 800a70c:	f3bf 8f6f 	isb	sy
 800a710:	f001 f9e4 	bl	800badc <vTaskSwitchContext>
 800a714:	f04f 0000 	mov.w	r0, #0
 800a718:	f380 8811 	msr	BASEPRI, r0
 800a71c:	bc09      	pop	{r0, r3}
 800a71e:	6819      	ldr	r1, [r3, #0]
 800a720:	6808      	ldr	r0, [r1, #0]
 800a722:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a726:	f01e 0f10 	tst.w	lr, #16
 800a72a:	bf08      	it	eq
 800a72c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800a730:	f380 8809 	msr	PSP, r0
 800a734:	f3bf 8f6f 	isb	sy
 800a738:	4770      	bx	lr
 800a73a:	bf00      	nop
 800a73c:	f3af 8000 	nop.w

0800a740 <pxCurrentTCBConst>:
 800a740:	200151b0 	.word	0x200151b0

0800a744 <xPortSysTickHandler>:
{
 800a744:	b508      	push	{r3, lr}
	__asm volatile
 800a746:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a74a:	f383 8811 	msr	BASEPRI, r3
 800a74e:	f3bf 8f6f 	isb	sy
 800a752:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800a756:	f001 f893 	bl	800b880 <xTaskIncrementTick>
 800a75a:	b128      	cbz	r0, 800a768 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800a75c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800a760:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a764:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 800a768:	2300      	movs	r3, #0
 800a76a:	f383 8811 	msr	BASEPRI, r3
}
 800a76e:	bd08      	pop	{r3, pc}

0800a770 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800a770:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 800a774:	2300      	movs	r3, #0
 800a776:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800a778:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800a77a:	4b05      	ldr	r3, [pc, #20]	@ (800a790 <vPortSetupTimerInterrupt+0x20>)
 800a77c:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800a780:	681b      	ldr	r3, [r3, #0]
 800a782:	fbb3 f3f1 	udiv	r3, r3, r1
 800a786:	3b01      	subs	r3, #1
 800a788:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800a78a:	2307      	movs	r3, #7
 800a78c:	6113      	str	r3, [r2, #16]
}
 800a78e:	4770      	bx	lr
 800a790:	20000074 	.word	0x20000074

0800a794 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800a794:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 800a798:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800a79a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 800a79e:	4a38      	ldr	r2, [pc, #224]	@ (800a880 <xPortStartScheduler+0xec>)
 800a7a0:	4291      	cmp	r1, r2
 800a7a2:	d108      	bne.n	800a7b6 <xPortStartScheduler+0x22>
	__asm volatile
 800a7a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a7a8:	f383 8811 	msr	BASEPRI, r3
 800a7ac:	f3bf 8f6f 	isb	sy
 800a7b0:	f3bf 8f4f 	dsb	sy
 800a7b4:	e7fe      	b.n	800a7b4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800a7b6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 800a7ba:	4b32      	ldr	r3, [pc, #200]	@ (800a884 <xPortStartScheduler+0xf0>)
 800a7bc:	429a      	cmp	r2, r3
 800a7be:	d108      	bne.n	800a7d2 <xPortStartScheduler+0x3e>
 800a7c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a7c4:	f383 8811 	msr	BASEPRI, r3
 800a7c8:	f3bf 8f6f 	isb	sy
 800a7cc:	f3bf 8f4f 	dsb	sy
 800a7d0:	e7fe      	b.n	800a7d0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800a7d2:	4b2d      	ldr	r3, [pc, #180]	@ (800a888 <xPortStartScheduler+0xf4>)
 800a7d4:	781a      	ldrb	r2, [r3, #0]
 800a7d6:	b2d2      	uxtb	r2, r2
 800a7d8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800a7da:	22ff      	movs	r2, #255	@ 0xff
 800a7dc:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800a7de:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800a7e0:	4a2a      	ldr	r2, [pc, #168]	@ (800a88c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800a7e2:	b2db      	uxtb	r3, r3
 800a7e4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800a7e8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800a7ec:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 800a7f0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800a7f2:	4a27      	ldr	r2, [pc, #156]	@ (800a890 <xPortStartScheduler+0xfc>)
 800a7f4:	2307      	movs	r3, #7
 800a7f6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800a7f8:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 800a7fc:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800a7fe:	0609      	lsls	r1, r1, #24
 800a800:	d40a      	bmi.n	800a818 <xPortStartScheduler+0x84>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800a802:	2b03      	cmp	r3, #3
 800a804:	d011      	beq.n	800a82a <xPortStartScheduler+0x96>
 800a806:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a80a:	f383 8811 	msr	BASEPRI, r3
 800a80e:	f3bf 8f6f 	isb	sy
 800a812:	f3bf 8f4f 	dsb	sy
 800a816:	e7fe      	b.n	800a816 <xPortStartScheduler+0x82>
			ulMaxPRIGROUPValue--;
 800a818:	3b01      	subs	r3, #1
 800a81a:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800a81c:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800a820:	005b      	lsls	r3, r3, #1
 800a822:	b2db      	uxtb	r3, r3
 800a824:	f88d 3003 	strb.w	r3, [sp, #3]
 800a828:	e7e6      	b.n	800a7f8 <xPortStartScheduler+0x64>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800a82a:	f44f 7340 	mov.w	r3, #768	@ 0x300
 800a82e:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800a830:	9b01      	ldr	r3, [sp, #4]
 800a832:	4a15      	ldr	r2, [pc, #84]	@ (800a888 <xPortStartScheduler+0xf4>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800a834:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800a838:	b2db      	uxtb	r3, r3
 800a83a:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800a83c:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800a840:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800a844:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800a848:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800a84c:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 800a850:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 800a854:	f7ff ff8c 	bl	800a770 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800a858:	4b0e      	ldr	r3, [pc, #56]	@ (800a894 <xPortStartScheduler+0x100>)
 800a85a:	2500      	movs	r5, #0
 800a85c:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800a85e:	f7ff feb5 	bl	800a5cc <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800a862:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 800a866:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 800a86a:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 800a86e:	f7ff fe99 	bl	800a5a4 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800a872:	f001 f933 	bl	800badc <vTaskSwitchContext>
	prvTaskExitError();
 800a876:	f7ff feb3 	bl	800a5e0 <prvTaskExitError>
}
 800a87a:	4628      	mov	r0, r5
 800a87c:	b003      	add	sp, #12
 800a87e:	bd30      	pop	{r4, r5, pc}
 800a880:	410fc271 	.word	0x410fc271
 800a884:	410fc270 	.word	0x410fc270
 800a888:	e000e400 	.word	0xe000e400
 800a88c:	20014c74 	.word	0x20014c74
 800a890:	20014c70 	.word	0x20014c70
 800a894:	20000080 	.word	0x20000080

0800a898 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800a898:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800a89c:	2b0f      	cmp	r3, #15
 800a89e:	d90e      	bls.n	800a8be <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800a8a0:	4a11      	ldr	r2, [pc, #68]	@ (800a8e8 <vPortValidateInterruptPriority+0x50>)
 800a8a2:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800a8a4:	4a11      	ldr	r2, [pc, #68]	@ (800a8ec <vPortValidateInterruptPriority+0x54>)
 800a8a6:	7812      	ldrb	r2, [r2, #0]
 800a8a8:	429a      	cmp	r2, r3
 800a8aa:	d908      	bls.n	800a8be <vPortValidateInterruptPriority+0x26>
 800a8ac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a8b0:	f383 8811 	msr	BASEPRI, r3
 800a8b4:	f3bf 8f6f 	isb	sy
 800a8b8:	f3bf 8f4f 	dsb	sy
 800a8bc:	e7fe      	b.n	800a8bc <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800a8be:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800a8c2:	4a0b      	ldr	r2, [pc, #44]	@ (800a8f0 <vPortValidateInterruptPriority+0x58>)
 800a8c4:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 800a8c8:	6812      	ldr	r2, [r2, #0]
 800a8ca:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800a8ce:	4293      	cmp	r3, r2
 800a8d0:	d908      	bls.n	800a8e4 <vPortValidateInterruptPriority+0x4c>
 800a8d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a8d6:	f383 8811 	msr	BASEPRI, r3
 800a8da:	f3bf 8f6f 	isb	sy
 800a8de:	f3bf 8f4f 	dsb	sy
 800a8e2:	e7fe      	b.n	800a8e2 <vPortValidateInterruptPriority+0x4a>
	}
 800a8e4:	4770      	bx	lr
 800a8e6:	bf00      	nop
 800a8e8:	e000e3f0 	.word	0xe000e3f0
 800a8ec:	20014c74 	.word	0x20014c74
 800a8f0:	20014c70 	.word	0x20014c70

0800a8f4 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800a8f4:	b510      	push	{r4, lr}
 800a8f6:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800a8f8:	f7ff febc 	bl	800a674 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800a8fc:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800a8fe:	f7ff fed9 	bl	800a6b4 <vPortExitCritical>

	return xReturn;
}
 800a902:	fab4 f084 	clz	r0, r4
 800a906:	0940      	lsrs	r0, r0, #5
 800a908:	bd10      	pop	{r4, pc}

0800a90a <prvCopyDataToQueue>:
{
 800a90a:	b570      	push	{r4, r5, r6, lr}
 800a90c:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800a90e:	6c02      	ldr	r2, [r0, #64]	@ 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a910:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 800a912:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800a914:	b942      	cbnz	r2, 800a928 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800a916:	6806      	ldr	r6, [r0, #0]
 800a918:	b99e      	cbnz	r6, 800a942 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800a91a:	6880      	ldr	r0, [r0, #8]
 800a91c:	f001 fa86 	bl	800be2c <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800a920:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800a922:	3501      	adds	r5, #1
 800a924:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 800a926:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800a928:	b96e      	cbnz	r6, 800a946 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800a92a:	6840      	ldr	r0, [r0, #4]
 800a92c:	f01b fa11 	bl	8025d52 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a930:	6863      	ldr	r3, [r4, #4]
 800a932:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800a934:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a936:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a938:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a93a:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800a93c:	bf24      	itt	cs
 800a93e:	6823      	ldrcs	r3, [r4, #0]
 800a940:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 800a942:	2000      	movs	r0, #0
 800a944:	e7ed      	b.n	800a922 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800a946:	68c0      	ldr	r0, [r0, #12]
 800a948:	f01b fa03 	bl	8025d52 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800a94c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800a94e:	68e3      	ldr	r3, [r4, #12]
 800a950:	4251      	negs	r1, r2
 800a952:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a954:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800a956:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a958:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800a95a:	bf3e      	ittt	cc
 800a95c:	68a3      	ldrcc	r3, [r4, #8]
 800a95e:	185b      	addcc	r3, r3, r1
 800a960:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800a962:	2e02      	cmp	r6, #2
 800a964:	d1ed      	bne.n	800a942 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800a966:	b10d      	cbz	r5, 800a96c <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 800a968:	3d01      	subs	r5, #1
 800a96a:	e7ea      	b.n	800a942 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 800a96c:	4628      	mov	r0, r5
 800a96e:	e7d8      	b.n	800a922 <prvCopyDataToQueue+0x18>

0800a970 <prvCopyDataFromQueue>:
{
 800a970:	4603      	mov	r3, r0
 800a972:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800a974:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 800a976:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800a978:	b16a      	cbz	r2, 800a996 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a97a:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800a97c:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a97e:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800a980:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800a982:	bf28      	it	cs
 800a984:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a986:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800a988:	bf28      	it	cs
 800a98a:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800a98c:	68d9      	ldr	r1, [r3, #12]
}
 800a98e:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800a992:	f01b b9de 	b.w	8025d52 <memcpy>
}
 800a996:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a99a:	4770      	bx	lr

0800a99c <prvUnlockQueue>:
{
 800a99c:	b570      	push	{r4, r5, r6, lr}
 800a99e:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800a9a0:	f7ff fe68 	bl	800a674 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800a9a4:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a9a8:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800a9ac:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800a9ae:	2d00      	cmp	r5, #0
 800a9b0:	dd01      	ble.n	800a9b6 <prvUnlockQueue+0x1a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800a9b2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800a9b4:	b9b3      	cbnz	r3, 800a9e4 <prvUnlockQueue+0x48>
		pxQueue->cTxLock = queueUNLOCKED;
 800a9b6:	23ff      	movs	r3, #255	@ 0xff
 800a9b8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 800a9bc:	f7ff fe7a 	bl	800a6b4 <vPortExitCritical>
	taskENTER_CRITICAL();
 800a9c0:	f7ff fe58 	bl	800a674 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800a9c4:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a9c8:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800a9cc:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800a9ce:	2d00      	cmp	r5, #0
 800a9d0:	dd01      	ble.n	800a9d6 <prvUnlockQueue+0x3a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a9d2:	6923      	ldr	r3, [r4, #16]
 800a9d4:	b97b      	cbnz	r3, 800a9f6 <prvUnlockQueue+0x5a>
		pxQueue->cRxLock = queueUNLOCKED;
 800a9d6:	23ff      	movs	r3, #255	@ 0xff
 800a9d8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 800a9dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800a9e0:	f7ff be68 	b.w	800a6b4 <vPortExitCritical>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a9e4:	4630      	mov	r0, r6
 800a9e6:	f001 f945 	bl	800bc74 <xTaskRemoveFromEventList>
 800a9ea:	b108      	cbz	r0, 800a9f0 <prvUnlockQueue+0x54>
						vTaskMissedYield();
 800a9ec:	f001 f9ca 	bl	800bd84 <vTaskMissedYield>
			--cTxLock;
 800a9f0:	3d01      	subs	r5, #1
 800a9f2:	b26d      	sxtb	r5, r5
 800a9f4:	e7db      	b.n	800a9ae <prvUnlockQueue+0x12>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a9f6:	4630      	mov	r0, r6
 800a9f8:	f001 f93c 	bl	800bc74 <xTaskRemoveFromEventList>
 800a9fc:	b108      	cbz	r0, 800aa02 <prvUnlockQueue+0x66>
					vTaskMissedYield();
 800a9fe:	f001 f9c1 	bl	800bd84 <vTaskMissedYield>
				--cRxLock;
 800aa02:	3d01      	subs	r5, #1
 800aa04:	b26d      	sxtb	r5, r5
 800aa06:	e7e2      	b.n	800a9ce <prvUnlockQueue+0x32>

0800aa08 <xQueueGenericReset>:
{
 800aa08:	b538      	push	{r3, r4, r5, lr}
 800aa0a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800aa0c:	4604      	mov	r4, r0
 800aa0e:	b940      	cbnz	r0, 800aa22 <xQueueGenericReset+0x1a>
 800aa10:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800aa14:	f383 8811 	msr	BASEPRI, r3
 800aa18:	f3bf 8f6f 	isb	sy
 800aa1c:	f3bf 8f4f 	dsb	sy
 800aa20:	e7fe      	b.n	800aa20 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800aa22:	f7ff fe27 	bl	800a674 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800aa26:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 800aa2a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800aa2c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800aa2e:	434b      	muls	r3, r1
 800aa30:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800aa32:	1a5b      	subs	r3, r3, r1
 800aa34:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800aa36:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800aa38:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800aa3a:	2000      	movs	r0, #0
 800aa3c:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800aa3e:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 800aa40:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800aa44:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 800aa48:	b9a5      	cbnz	r5, 800aa74 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800aa4a:	6923      	ldr	r3, [r4, #16]
 800aa4c:	b173      	cbz	r3, 800aa6c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800aa4e:	f104 0010 	add.w	r0, r4, #16
 800aa52:	f001 f90f 	bl	800bc74 <xTaskRemoveFromEventList>
 800aa56:	b148      	cbz	r0, 800aa6c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 800aa58:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800aa5c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800aa60:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800aa64:	f3bf 8f4f 	dsb	sy
 800aa68:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800aa6c:	f7ff fe22 	bl	800a6b4 <vPortExitCritical>
}
 800aa70:	2001      	movs	r0, #1
 800aa72:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800aa74:	f104 0010 	add.w	r0, r4, #16
 800aa78:	f7ff fd54 	bl	800a524 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800aa7c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800aa80:	f7ff fd50 	bl	800a524 <vListInitialise>
 800aa84:	e7f2      	b.n	800aa6c <xQueueGenericReset+0x64>

0800aa86 <xQueueGenericCreateStatic>:
	{
 800aa86:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800aa88:	460d      	mov	r5, r1
 800aa8a:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800aa8c:	b940      	cbnz	r0, 800aaa0 <xQueueGenericCreateStatic+0x1a>
 800aa8e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800aa92:	f383 8811 	msr	BASEPRI, r3
 800aa96:	f3bf 8f6f 	isb	sy
 800aa9a:	f3bf 8f4f 	dsb	sy
 800aa9e:	e7fe      	b.n	800aa9e <xQueueGenericCreateStatic+0x18>
		configASSERT( pxStaticQueue != NULL );
 800aaa0:	b943      	cbnz	r3, 800aab4 <xQueueGenericCreateStatic+0x2e>
 800aaa2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800aaa6:	f383 8811 	msr	BASEPRI, r3
 800aaaa:	f3bf 8f6f 	isb	sy
 800aaae:	f3bf 8f4f 	dsb	sy
 800aab2:	e7fe      	b.n	800aab2 <xQueueGenericCreateStatic+0x2c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800aab4:	b14a      	cbz	r2, 800aaca <xQueueGenericCreateStatic+0x44>
 800aab6:	b991      	cbnz	r1, 800aade <xQueueGenericCreateStatic+0x58>
 800aab8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800aabc:	f383 8811 	msr	BASEPRI, r3
 800aac0:	f3bf 8f6f 	isb	sy
 800aac4:	f3bf 8f4f 	dsb	sy
 800aac8:	e7fe      	b.n	800aac8 <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800aaca:	b141      	cbz	r1, 800aade <xQueueGenericCreateStatic+0x58>
 800aacc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800aad0:	f383 8811 	msr	BASEPRI, r3
 800aad4:	f3bf 8f6f 	isb	sy
 800aad8:	f3bf 8f4f 	dsb	sy
 800aadc:	e7fe      	b.n	800aadc <xQueueGenericCreateStatic+0x56>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800aade:	2350      	movs	r3, #80	@ 0x50
 800aae0:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800aae2:	9b01      	ldr	r3, [sp, #4]
 800aae4:	2b50      	cmp	r3, #80	@ 0x50
 800aae6:	d008      	beq.n	800aafa <xQueueGenericCreateStatic+0x74>
 800aae8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800aaec:	f383 8811 	msr	BASEPRI, r3
 800aaf0:	f3bf 8f6f 	isb	sy
 800aaf4:	f3bf 8f4f 	dsb	sy
 800aaf8:	e7fe      	b.n	800aaf8 <xQueueGenericCreateStatic+0x72>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800aafa:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800aafc:	2d00      	cmp	r5, #0
 800aafe:	bf08      	it	eq
 800ab00:	4622      	moveq	r2, r4
	pxNewQueue->uxItemSize = uxItemSize;
 800ab02:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800ab06:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
 800ab0a:	6022      	str	r2, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800ab0c:	4620      	mov	r0, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800ab0e:	9b01      	ldr	r3, [sp, #4]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800ab10:	f7ff ff7a 	bl	800aa08 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800ab14:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800ab18:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 800ab1c:	4620      	mov	r0, r4
 800ab1e:	b003      	add	sp, #12
 800ab20:	bd30      	pop	{r4, r5, pc}

0800ab22 <xQueueGenericCreate>:
	{
 800ab22:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ab24:	460d      	mov	r5, r1
 800ab26:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800ab28:	4606      	mov	r6, r0
 800ab2a:	b940      	cbnz	r0, 800ab3e <xQueueGenericCreate+0x1c>
 800ab2c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ab30:	f383 8811 	msr	BASEPRI, r3
 800ab34:	f3bf 8f6f 	isb	sy
 800ab38:	f3bf 8f4f 	dsb	sy
 800ab3c:	e7fe      	b.n	800ab3c <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ab3e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800ab40:	3050      	adds	r0, #80	@ 0x50
 800ab42:	f7ff fc19 	bl	800a378 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800ab46:	4604      	mov	r4, r0
 800ab48:	b170      	cbz	r0, 800ab68 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800ab4a:	2300      	movs	r3, #0
 800ab4c:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800ab50:	b165      	cbz	r5, 800ab6c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800ab52:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 800ab56:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 800ab5a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800ab5c:	2101      	movs	r1, #1
 800ab5e:	4620      	mov	r0, r4
 800ab60:	f7ff ff52 	bl	800aa08 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800ab64:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 800ab68:	4620      	mov	r0, r4
 800ab6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800ab6c:	4603      	mov	r3, r0
 800ab6e:	e7f2      	b.n	800ab56 <xQueueGenericCreate+0x34>

0800ab70 <xQueueCreateCountingSemaphoreStatic>:
	{
 800ab70:	b513      	push	{r0, r1, r4, lr}
 800ab72:	4613      	mov	r3, r2
 800ab74:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800ab76:	b940      	cbnz	r0, 800ab8a <xQueueCreateCountingSemaphoreStatic+0x1a>
 800ab78:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ab7c:	f383 8811 	msr	BASEPRI, r3
 800ab80:	f3bf 8f6f 	isb	sy
 800ab84:	f3bf 8f4f 	dsb	sy
 800ab88:	e7fe      	b.n	800ab88 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800ab8a:	4288      	cmp	r0, r1
 800ab8c:	d208      	bcs.n	800aba0 <xQueueCreateCountingSemaphoreStatic+0x30>
 800ab8e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ab92:	f383 8811 	msr	BASEPRI, r3
 800ab96:	f3bf 8f6f 	isb	sy
 800ab9a:	f3bf 8f4f 	dsb	sy
 800ab9e:	e7fe      	b.n	800ab9e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800aba0:	2202      	movs	r2, #2
 800aba2:	9200      	str	r2, [sp, #0]
 800aba4:	2200      	movs	r2, #0
 800aba6:	4611      	mov	r1, r2
 800aba8:	f7ff ff6d 	bl	800aa86 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800abac:	b100      	cbz	r0, 800abb0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800abae:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 800abb0:	b002      	add	sp, #8
 800abb2:	bd10      	pop	{r4, pc}

0800abb4 <xQueueCreateCountingSemaphore>:
	{
 800abb4:	b510      	push	{r4, lr}
 800abb6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800abb8:	b940      	cbnz	r0, 800abcc <xQueueCreateCountingSemaphore+0x18>
 800abba:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800abbe:	f383 8811 	msr	BASEPRI, r3
 800abc2:	f3bf 8f6f 	isb	sy
 800abc6:	f3bf 8f4f 	dsb	sy
 800abca:	e7fe      	b.n	800abca <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800abcc:	4288      	cmp	r0, r1
 800abce:	d208      	bcs.n	800abe2 <xQueueCreateCountingSemaphore+0x2e>
 800abd0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800abd4:	f383 8811 	msr	BASEPRI, r3
 800abd8:	f3bf 8f6f 	isb	sy
 800abdc:	f3bf 8f4f 	dsb	sy
 800abe0:	e7fe      	b.n	800abe0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800abe2:	2202      	movs	r2, #2
 800abe4:	2100      	movs	r1, #0
 800abe6:	f7ff ff9c 	bl	800ab22 <xQueueGenericCreate>
		if( xHandle != NULL )
 800abea:	b100      	cbz	r0, 800abee <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800abec:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 800abee:	bd10      	pop	{r4, pc}

0800abf0 <xQueueGenericSend>:
{
 800abf0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800abf4:	460f      	mov	r7, r1
 800abf6:	9201      	str	r2, [sp, #4]
 800abf8:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800abfa:	4604      	mov	r4, r0
 800abfc:	b940      	cbnz	r0, 800ac10 <xQueueGenericSend+0x20>
 800abfe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ac02:	f383 8811 	msr	BASEPRI, r3
 800ac06:	f3bf 8f6f 	isb	sy
 800ac0a:	f3bf 8f4f 	dsb	sy
 800ac0e:	e7fe      	b.n	800ac0e <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ac10:	b951      	cbnz	r1, 800ac28 <xQueueGenericSend+0x38>
 800ac12:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800ac14:	b143      	cbz	r3, 800ac28 <xQueueGenericSend+0x38>
 800ac16:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ac1a:	f383 8811 	msr	BASEPRI, r3
 800ac1e:	f3bf 8f6f 	isb	sy
 800ac22:	f3bf 8f4f 	dsb	sy
 800ac26:	e7fe      	b.n	800ac26 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800ac28:	2e02      	cmp	r6, #2
 800ac2a:	d10b      	bne.n	800ac44 <xQueueGenericSend+0x54>
 800ac2c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800ac2e:	2b01      	cmp	r3, #1
 800ac30:	d008      	beq.n	800ac44 <xQueueGenericSend+0x54>
 800ac32:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ac36:	f383 8811 	msr	BASEPRI, r3
 800ac3a:	f3bf 8f6f 	isb	sy
 800ac3e:	f3bf 8f4f 	dsb	sy
 800ac42:	e7fe      	b.n	800ac42 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ac44:	f001 f8a4 	bl	800bd90 <xTaskGetSchedulerState>
 800ac48:	4605      	mov	r5, r0
 800ac4a:	b320      	cbz	r0, 800ac96 <xQueueGenericSend+0xa6>
 800ac4c:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 800ac4e:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 800ac52:	f7ff fd0f 	bl	800a674 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800ac56:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800ac58:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800ac5a:	429a      	cmp	r2, r3
 800ac5c:	d227      	bcs.n	800acae <xQueueGenericSend+0xbe>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800ac5e:	4632      	mov	r2, r6
 800ac60:	4639      	mov	r1, r7
 800ac62:	4620      	mov	r0, r4
 800ac64:	f7ff fe51 	bl	800a90a <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ac68:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800ac6a:	b11b      	cbz	r3, 800ac74 <xQueueGenericSend+0x84>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ac6c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800ac70:	f001 f800 	bl	800bc74 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800ac74:	b148      	cbz	r0, 800ac8a <xQueueGenericSend+0x9a>
						queueYIELD_IF_USING_PREEMPTION();
 800ac76:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800ac7a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800ac7e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800ac82:	f3bf 8f4f 	dsb	sy
 800ac86:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800ac8a:	f7ff fd13 	bl	800a6b4 <vPortExitCritical>
				return pdPASS;
 800ac8e:	2001      	movs	r0, #1
}
 800ac90:	b004      	add	sp, #16
 800ac92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ac96:	9b01      	ldr	r3, [sp, #4]
 800ac98:	2b00      	cmp	r3, #0
 800ac9a:	d0d8      	beq.n	800ac4e <xQueueGenericSend+0x5e>
 800ac9c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800aca0:	f383 8811 	msr	BASEPRI, r3
 800aca4:	f3bf 8f6f 	isb	sy
 800aca8:	f3bf 8f4f 	dsb	sy
 800acac:	e7fe      	b.n	800acac <xQueueGenericSend+0xbc>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800acae:	2e02      	cmp	r6, #2
 800acb0:	d0d5      	beq.n	800ac5e <xQueueGenericSend+0x6e>
				if( xTicksToWait == ( TickType_t ) 0 )
 800acb2:	9b01      	ldr	r3, [sp, #4]
 800acb4:	b91b      	cbnz	r3, 800acbe <xQueueGenericSend+0xce>
					taskEXIT_CRITICAL();
 800acb6:	f7ff fcfd 	bl	800a6b4 <vPortExitCritical>
					return errQUEUE_FULL;
 800acba:	2000      	movs	r0, #0
 800acbc:	e7e8      	b.n	800ac90 <xQueueGenericSend+0xa0>
				else if( xEntryTimeSet == pdFALSE )
 800acbe:	b915      	cbnz	r5, 800acc6 <xQueueGenericSend+0xd6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800acc0:	a802      	add	r0, sp, #8
 800acc2:	f001 f817 	bl	800bcf4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800acc6:	f7ff fcf5 	bl	800a6b4 <vPortExitCritical>
		vTaskSuspendAll();
 800acca:	f000 fdcb 	bl	800b864 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800acce:	f7ff fcd1 	bl	800a674 <vPortEnterCritical>
 800acd2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800acd6:	2bff      	cmp	r3, #255	@ 0xff
 800acd8:	bf08      	it	eq
 800acda:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800acde:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800ace2:	2bff      	cmp	r3, #255	@ 0xff
 800ace4:	bf08      	it	eq
 800ace6:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 800acea:	f7ff fce3 	bl	800a6b4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800acee:	a901      	add	r1, sp, #4
 800acf0:	a802      	add	r0, sp, #8
 800acf2:	f001 f80b 	bl	800bd0c <xTaskCheckForTimeOut>
 800acf6:	bb38      	cbnz	r0, 800ad48 <xQueueGenericSend+0x158>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800acf8:	f7ff fcbc 	bl	800a674 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800acfc:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800acfe:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800ad00:	429a      	cmp	r2, r3
 800ad02:	d10e      	bne.n	800ad22 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800ad04:	f7ff fcd6 	bl	800a6b4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800ad08:	9901      	ldr	r1, [sp, #4]
 800ad0a:	f104 0010 	add.w	r0, r4, #16
 800ad0e:	f000 ff79 	bl	800bc04 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800ad12:	4620      	mov	r0, r4
 800ad14:	f7ff fe42 	bl	800a99c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800ad18:	f000 fe48 	bl	800b9ac <xTaskResumeAll>
 800ad1c:	b148      	cbz	r0, 800ad32 <xQueueGenericSend+0x142>
 800ad1e:	2501      	movs	r5, #1
 800ad20:	e797      	b.n	800ac52 <xQueueGenericSend+0x62>
	taskEXIT_CRITICAL();
 800ad22:	f7ff fcc7 	bl	800a6b4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800ad26:	4620      	mov	r0, r4
 800ad28:	f7ff fe38 	bl	800a99c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800ad2c:	f000 fe3e 	bl	800b9ac <xTaskResumeAll>
 800ad30:	e7f5      	b.n	800ad1e <xQueueGenericSend+0x12e>
					portYIELD_WITHIN_API();
 800ad32:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800ad36:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800ad3a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800ad3e:	f3bf 8f4f 	dsb	sy
 800ad42:	f3bf 8f6f 	isb	sy
 800ad46:	e7ea      	b.n	800ad1e <xQueueGenericSend+0x12e>
			prvUnlockQueue( pxQueue );
 800ad48:	4620      	mov	r0, r4
 800ad4a:	f7ff fe27 	bl	800a99c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800ad4e:	f000 fe2d 	bl	800b9ac <xTaskResumeAll>
			return errQUEUE_FULL;
 800ad52:	e7b2      	b.n	800acba <xQueueGenericSend+0xca>

0800ad54 <xQueueGenericSendFromISR>:
{
 800ad54:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ad58:	4689      	mov	r9, r1
 800ad5a:	4617      	mov	r7, r2
 800ad5c:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800ad5e:	4604      	mov	r4, r0
 800ad60:	b940      	cbnz	r0, 800ad74 <xQueueGenericSendFromISR+0x20>
 800ad62:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ad66:	f383 8811 	msr	BASEPRI, r3
 800ad6a:	f3bf 8f6f 	isb	sy
 800ad6e:	f3bf 8f4f 	dsb	sy
 800ad72:	e7fe      	b.n	800ad72 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ad74:	b951      	cbnz	r1, 800ad8c <xQueueGenericSendFromISR+0x38>
 800ad76:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800ad78:	b143      	cbz	r3, 800ad8c <xQueueGenericSendFromISR+0x38>
 800ad7a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ad7e:	f383 8811 	msr	BASEPRI, r3
 800ad82:	f3bf 8f6f 	isb	sy
 800ad86:	f3bf 8f4f 	dsb	sy
 800ad8a:	e7fe      	b.n	800ad8a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800ad8c:	2e02      	cmp	r6, #2
 800ad8e:	d10b      	bne.n	800ada8 <xQueueGenericSendFromISR+0x54>
 800ad90:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800ad92:	2b01      	cmp	r3, #1
 800ad94:	d008      	beq.n	800ada8 <xQueueGenericSendFromISR+0x54>
 800ad96:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ad9a:	f383 8811 	msr	BASEPRI, r3
 800ad9e:	f3bf 8f6f 	isb	sy
 800ada2:	f3bf 8f4f 	dsb	sy
 800ada6:	e7fe      	b.n	800ada6 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ada8:	f7ff fd76 	bl	800a898 <vPortValidateInterruptPriority>
	__asm volatile
 800adac:	f3ef 8811 	mrs	r8, BASEPRI
 800adb0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800adb4:	f383 8811 	msr	BASEPRI, r3
 800adb8:	f3bf 8f6f 	isb	sy
 800adbc:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800adc0:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800adc2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800adc4:	429a      	cmp	r2, r3
 800adc6:	d301      	bcc.n	800adcc <xQueueGenericSendFromISR+0x78>
 800adc8:	2e02      	cmp	r6, #2
 800adca:	d11e      	bne.n	800ae0a <xQueueGenericSendFromISR+0xb6>
			const int8_t cTxLock = pxQueue->cTxLock;
 800adcc:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800add0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800add2:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800add4:	4632      	mov	r2, r6
 800add6:	4649      	mov	r1, r9
 800add8:	4620      	mov	r0, r4
 800adda:	f7ff fd96 	bl	800a90a <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800adde:	1c6b      	adds	r3, r5, #1
 800ade0:	d10e      	bne.n	800ae00 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ade2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800ade4:	b13b      	cbz	r3, 800adf6 <xQueueGenericSendFromISR+0xa2>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ade6:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800adea:	f000 ff43 	bl	800bc74 <xTaskRemoveFromEventList>
 800adee:	b110      	cbz	r0, 800adf6 <xQueueGenericSendFromISR+0xa2>
							if( pxHigherPriorityTaskWoken != NULL )
 800adf0:	b10f      	cbz	r7, 800adf6 <xQueueGenericSendFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800adf2:	2301      	movs	r3, #1
 800adf4:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 800adf6:	2001      	movs	r0, #1
	__asm volatile
 800adf8:	f388 8811 	msr	BASEPRI, r8
}
 800adfc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800ae00:	3501      	adds	r5, #1
 800ae02:	b26d      	sxtb	r5, r5
 800ae04:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 800ae08:	e7f5      	b.n	800adf6 <xQueueGenericSendFromISR+0xa2>
			xReturn = errQUEUE_FULL;
 800ae0a:	2000      	movs	r0, #0
 800ae0c:	e7f4      	b.n	800adf8 <xQueueGenericSendFromISR+0xa4>

0800ae0e <xQueueGiveFromISR>:
{
 800ae0e:	b570      	push	{r4, r5, r6, lr}
 800ae10:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800ae12:	4604      	mov	r4, r0
 800ae14:	b940      	cbnz	r0, 800ae28 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800ae16:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ae1a:	f383 8811 	msr	BASEPRI, r3
 800ae1e:	f3bf 8f6f 	isb	sy
 800ae22:	f3bf 8f4f 	dsb	sy
 800ae26:	e7fe      	b.n	800ae26 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800ae28:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800ae2a:	b143      	cbz	r3, 800ae3e <xQueueGiveFromISR+0x30>
 800ae2c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ae30:	f383 8811 	msr	BASEPRI, r3
 800ae34:	f3bf 8f6f 	isb	sy
 800ae38:	f3bf 8f4f 	dsb	sy
 800ae3c:	e7fe      	b.n	800ae3c <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800ae3e:	6803      	ldr	r3, [r0, #0]
 800ae40:	b953      	cbnz	r3, 800ae58 <xQueueGiveFromISR+0x4a>
 800ae42:	6883      	ldr	r3, [r0, #8]
 800ae44:	b143      	cbz	r3, 800ae58 <xQueueGiveFromISR+0x4a>
 800ae46:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ae4a:	f383 8811 	msr	BASEPRI, r3
 800ae4e:	f3bf 8f6f 	isb	sy
 800ae52:	f3bf 8f4f 	dsb	sy
 800ae56:	e7fe      	b.n	800ae56 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ae58:	f7ff fd1e 	bl	800a898 <vPortValidateInterruptPriority>
	__asm volatile
 800ae5c:	f3ef 8611 	mrs	r6, BASEPRI
 800ae60:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ae64:	f383 8811 	msr	BASEPRI, r3
 800ae68:	f3bf 8f6f 	isb	sy
 800ae6c:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ae70:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800ae72:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800ae74:	4293      	cmp	r3, r2
 800ae76:	d919      	bls.n	800aeac <xQueueGiveFromISR+0x9e>
			const int8_t cTxLock = pxQueue->cTxLock;
 800ae78:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800ae7c:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800ae7e:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800ae80:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800ae82:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 800ae84:	d10d      	bne.n	800aea2 <xQueueGiveFromISR+0x94>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ae86:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800ae88:	b13b      	cbz	r3, 800ae9a <xQueueGiveFromISR+0x8c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ae8a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800ae8e:	f000 fef1 	bl	800bc74 <xTaskRemoveFromEventList>
 800ae92:	b110      	cbz	r0, 800ae9a <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 800ae94:	b10d      	cbz	r5, 800ae9a <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800ae96:	2301      	movs	r3, #1
 800ae98:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 800ae9a:	2001      	movs	r0, #1
	__asm volatile
 800ae9c:	f386 8811 	msr	BASEPRI, r6
}
 800aea0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800aea2:	3301      	adds	r3, #1
 800aea4:	b25b      	sxtb	r3, r3
 800aea6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800aeaa:	e7f6      	b.n	800ae9a <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 800aeac:	2000      	movs	r0, #0
 800aeae:	e7f5      	b.n	800ae9c <xQueueGiveFromISR+0x8e>

0800aeb0 <xQueueReceive>:
{
 800aeb0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800aeb4:	460e      	mov	r6, r1
 800aeb6:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800aeb8:	4604      	mov	r4, r0
 800aeba:	b940      	cbnz	r0, 800aece <xQueueReceive+0x1e>
	__asm volatile
 800aebc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800aec0:	f383 8811 	msr	BASEPRI, r3
 800aec4:	f3bf 8f6f 	isb	sy
 800aec8:	f3bf 8f4f 	dsb	sy
 800aecc:	e7fe      	b.n	800aecc <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800aece:	b951      	cbnz	r1, 800aee6 <xQueueReceive+0x36>
 800aed0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800aed2:	b143      	cbz	r3, 800aee6 <xQueueReceive+0x36>
 800aed4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800aed8:	f383 8811 	msr	BASEPRI, r3
 800aedc:	f3bf 8f6f 	isb	sy
 800aee0:	f3bf 8f4f 	dsb	sy
 800aee4:	e7fe      	b.n	800aee4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800aee6:	f000 ff53 	bl	800bd90 <xTaskGetSchedulerState>
 800aeea:	4605      	mov	r5, r0
 800aeec:	b318      	cbz	r0, 800af36 <xQueueReceive+0x86>
 800aeee:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 800aef0:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 800aef4:	f7ff fbbe 	bl	800a674 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800aef8:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800aefa:	b347      	cbz	r7, 800af4e <xQueueReceive+0x9e>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800aefc:	4631      	mov	r1, r6
 800aefe:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800af00:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800af02:	f7ff fd35 	bl	800a970 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800af06:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800af08:	6923      	ldr	r3, [r4, #16]
 800af0a:	b173      	cbz	r3, 800af2a <xQueueReceive+0x7a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800af0c:	f104 0010 	add.w	r0, r4, #16
 800af10:	f000 feb0 	bl	800bc74 <xTaskRemoveFromEventList>
 800af14:	b148      	cbz	r0, 800af2a <xQueueReceive+0x7a>
						queueYIELD_IF_USING_PREEMPTION();
 800af16:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800af1a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800af1e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800af22:	f3bf 8f4f 	dsb	sy
 800af26:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800af2a:	f7ff fbc3 	bl	800a6b4 <vPortExitCritical>
				return pdPASS;
 800af2e:	2001      	movs	r0, #1
}
 800af30:	b004      	add	sp, #16
 800af32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800af36:	9b01      	ldr	r3, [sp, #4]
 800af38:	2b00      	cmp	r3, #0
 800af3a:	d0d9      	beq.n	800aef0 <xQueueReceive+0x40>
 800af3c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800af40:	f383 8811 	msr	BASEPRI, r3
 800af44:	f3bf 8f6f 	isb	sy
 800af48:	f3bf 8f4f 	dsb	sy
 800af4c:	e7fe      	b.n	800af4c <xQueueReceive+0x9c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800af4e:	9b01      	ldr	r3, [sp, #4]
 800af50:	b91b      	cbnz	r3, 800af5a <xQueueReceive+0xaa>
					taskEXIT_CRITICAL();
 800af52:	f7ff fbaf 	bl	800a6b4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800af56:	2000      	movs	r0, #0
 800af58:	e7ea      	b.n	800af30 <xQueueReceive+0x80>
				else if( xEntryTimeSet == pdFALSE )
 800af5a:	b915      	cbnz	r5, 800af62 <xQueueReceive+0xb2>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800af5c:	a802      	add	r0, sp, #8
 800af5e:	f000 fec9 	bl	800bcf4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800af62:	f7ff fba7 	bl	800a6b4 <vPortExitCritical>
		vTaskSuspendAll();
 800af66:	f000 fc7d 	bl	800b864 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800af6a:	f7ff fb83 	bl	800a674 <vPortEnterCritical>
 800af6e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800af72:	2bff      	cmp	r3, #255	@ 0xff
 800af74:	bf08      	it	eq
 800af76:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800af7a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800af7e:	2bff      	cmp	r3, #255	@ 0xff
 800af80:	bf08      	it	eq
 800af82:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 800af86:	f7ff fb95 	bl	800a6b4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800af8a:	a901      	add	r1, sp, #4
 800af8c:	a802      	add	r0, sp, #8
 800af8e:	f000 febd 	bl	800bd0c <xTaskCheckForTimeOut>
 800af92:	bb00      	cbnz	r0, 800afd6 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800af94:	4620      	mov	r0, r4
 800af96:	f7ff fcad 	bl	800a8f4 <prvIsQueueEmpty>
 800af9a:	b1b0      	cbz	r0, 800afca <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800af9c:	9901      	ldr	r1, [sp, #4]
 800af9e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800afa2:	f000 fe2f 	bl	800bc04 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800afa6:	4620      	mov	r0, r4
 800afa8:	f7ff fcf8 	bl	800a99c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800afac:	f000 fcfe 	bl	800b9ac <xTaskResumeAll>
 800afb0:	b948      	cbnz	r0, 800afc6 <xQueueReceive+0x116>
					portYIELD_WITHIN_API();
 800afb2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800afb6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800afba:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800afbe:	f3bf 8f4f 	dsb	sy
 800afc2:	f3bf 8f6f 	isb	sy
 800afc6:	2501      	movs	r5, #1
 800afc8:	e794      	b.n	800aef4 <xQueueReceive+0x44>
				prvUnlockQueue( pxQueue );
 800afca:	4620      	mov	r0, r4
 800afcc:	f7ff fce6 	bl	800a99c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800afd0:	f000 fcec 	bl	800b9ac <xTaskResumeAll>
 800afd4:	e7f7      	b.n	800afc6 <xQueueReceive+0x116>
			prvUnlockQueue( pxQueue );
 800afd6:	4620      	mov	r0, r4
 800afd8:	f7ff fce0 	bl	800a99c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800afdc:	f000 fce6 	bl	800b9ac <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800afe0:	4620      	mov	r0, r4
 800afe2:	f7ff fc87 	bl	800a8f4 <prvIsQueueEmpty>
 800afe6:	2800      	cmp	r0, #0
 800afe8:	d0ed      	beq.n	800afc6 <xQueueReceive+0x116>
 800afea:	e7b4      	b.n	800af56 <xQueueReceive+0xa6>

0800afec <xQueueSemaphoreTake>:
{
 800afec:	b5f0      	push	{r4, r5, r6, r7, lr}
 800afee:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 800aff0:	4604      	mov	r4, r0
{
 800aff2:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800aff4:	b940      	cbnz	r0, 800b008 <xQueueSemaphoreTake+0x1c>
 800aff6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800affa:	f383 8811 	msr	BASEPRI, r3
 800affe:	f3bf 8f6f 	isb	sy
 800b002:	f3bf 8f4f 	dsb	sy
 800b006:	e7fe      	b.n	800b006 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800b008:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 800b00a:	b145      	cbz	r5, 800b01e <xQueueSemaphoreTake+0x32>
 800b00c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b010:	f383 8811 	msr	BASEPRI, r3
 800b014:	f3bf 8f6f 	isb	sy
 800b018:	f3bf 8f4f 	dsb	sy
 800b01c:	e7fe      	b.n	800b01c <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800b01e:	f000 feb7 	bl	800bd90 <xTaskGetSchedulerState>
 800b022:	4606      	mov	r6, r0
 800b024:	b320      	cbz	r0, 800b070 <xQueueSemaphoreTake+0x84>
 800b026:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 800b028:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 800b02a:	f7ff fb23 	bl	800a674 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800b02e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800b030:	b353      	cbz	r3, 800b088 <xQueueSemaphoreTake+0x9c>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800b032:	3b01      	subs	r3, #1
 800b034:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800b036:	6823      	ldr	r3, [r4, #0]
 800b038:	b913      	cbnz	r3, 800b040 <xQueueSemaphoreTake+0x54>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800b03a:	f000 ff87 	bl	800bf4c <pvTaskIncrementMutexHeldCount>
 800b03e:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800b040:	6923      	ldr	r3, [r4, #16]
 800b042:	b173      	cbz	r3, 800b062 <xQueueSemaphoreTake+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800b044:	f104 0010 	add.w	r0, r4, #16
 800b048:	f000 fe14 	bl	800bc74 <xTaskRemoveFromEventList>
 800b04c:	b148      	cbz	r0, 800b062 <xQueueSemaphoreTake+0x76>
						queueYIELD_IF_USING_PREEMPTION();
 800b04e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800b052:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800b056:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800b05a:	f3bf 8f4f 	dsb	sy
 800b05e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800b062:	f7ff fb27 	bl	800a6b4 <vPortExitCritical>
				return pdPASS;
 800b066:	2001      	movs	r0, #1
}
 800b068:	b005      	add	sp, #20
 800b06a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b06c:	4635      	mov	r5, r6
 800b06e:	e7db      	b.n	800b028 <xQueueSemaphoreTake+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800b070:	9b01      	ldr	r3, [sp, #4]
 800b072:	2b00      	cmp	r3, #0
 800b074:	d0fa      	beq.n	800b06c <xQueueSemaphoreTake+0x80>
 800b076:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b07a:	f383 8811 	msr	BASEPRI, r3
 800b07e:	f3bf 8f6f 	isb	sy
 800b082:	f3bf 8f4f 	dsb	sy
 800b086:	e7fe      	b.n	800b086 <xQueueSemaphoreTake+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
 800b088:	9b01      	ldr	r3, [sp, #4]
 800b08a:	b953      	cbnz	r3, 800b0a2 <xQueueSemaphoreTake+0xb6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800b08c:	2d00      	cmp	r5, #0
 800b08e:	d066      	beq.n	800b15e <xQueueSemaphoreTake+0x172>
 800b090:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b094:	f383 8811 	msr	BASEPRI, r3
 800b098:	f3bf 8f6f 	isb	sy
 800b09c:	f3bf 8f4f 	dsb	sy
 800b0a0:	e7fe      	b.n	800b0a0 <xQueueSemaphoreTake+0xb4>
				else if( xEntryTimeSet == pdFALSE )
 800b0a2:	b916      	cbnz	r6, 800b0aa <xQueueSemaphoreTake+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800b0a4:	a802      	add	r0, sp, #8
 800b0a6:	f000 fe25 	bl	800bcf4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800b0aa:	f7ff fb03 	bl	800a6b4 <vPortExitCritical>
		vTaskSuspendAll();
 800b0ae:	f000 fbd9 	bl	800b864 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800b0b2:	f7ff fadf 	bl	800a674 <vPortEnterCritical>
 800b0b6:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800b0ba:	2bff      	cmp	r3, #255	@ 0xff
 800b0bc:	bf08      	it	eq
 800b0be:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 800b0c2:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800b0c6:	2bff      	cmp	r3, #255	@ 0xff
 800b0c8:	bf08      	it	eq
 800b0ca:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 800b0ce:	f7ff faf1 	bl	800a6b4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800b0d2:	a901      	add	r1, sp, #4
 800b0d4:	a802      	add	r0, sp, #8
 800b0d6:	f000 fe19 	bl	800bd0c <xTaskCheckForTimeOut>
 800b0da:	bb50      	cbnz	r0, 800b132 <xQueueSemaphoreTake+0x146>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800b0dc:	4620      	mov	r0, r4
 800b0de:	f7ff fc09 	bl	800a8f4 <prvIsQueueEmpty>
 800b0e2:	b300      	cbz	r0, 800b126 <xQueueSemaphoreTake+0x13a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800b0e4:	6823      	ldr	r3, [r4, #0]
 800b0e6:	b93b      	cbnz	r3, 800b0f8 <xQueueSemaphoreTake+0x10c>
						taskENTER_CRITICAL();
 800b0e8:	f7ff fac4 	bl	800a674 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800b0ec:	68a0      	ldr	r0, [r4, #8]
 800b0ee:	f000 fe5f 	bl	800bdb0 <xTaskPriorityInherit>
 800b0f2:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800b0f4:	f7ff fade 	bl	800a6b4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800b0f8:	9901      	ldr	r1, [sp, #4]
 800b0fa:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800b0fe:	f000 fd81 	bl	800bc04 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800b102:	4620      	mov	r0, r4
 800b104:	f7ff fc4a 	bl	800a99c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800b108:	f000 fc50 	bl	800b9ac <xTaskResumeAll>
 800b10c:	b948      	cbnz	r0, 800b122 <xQueueSemaphoreTake+0x136>
					portYIELD_WITHIN_API();
 800b10e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800b112:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800b116:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800b11a:	f3bf 8f4f 	dsb	sy
 800b11e:	f3bf 8f6f 	isb	sy
 800b122:	2601      	movs	r6, #1
 800b124:	e781      	b.n	800b02a <xQueueSemaphoreTake+0x3e>
				prvUnlockQueue( pxQueue );
 800b126:	4620      	mov	r0, r4
 800b128:	f7ff fc38 	bl	800a99c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800b12c:	f000 fc3e 	bl	800b9ac <xTaskResumeAll>
 800b130:	e7f7      	b.n	800b122 <xQueueSemaphoreTake+0x136>
			prvUnlockQueue( pxQueue );
 800b132:	4620      	mov	r0, r4
 800b134:	f7ff fc32 	bl	800a99c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800b138:	f000 fc38 	bl	800b9ac <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800b13c:	4620      	mov	r0, r4
 800b13e:	f7ff fbd9 	bl	800a8f4 <prvIsQueueEmpty>
 800b142:	2800      	cmp	r0, #0
 800b144:	d0ed      	beq.n	800b122 <xQueueSemaphoreTake+0x136>
					if( xInheritanceOccurred != pdFALSE )
 800b146:	b165      	cbz	r5, 800b162 <xQueueSemaphoreTake+0x176>
						taskENTER_CRITICAL();
 800b148:	f7ff fa94 	bl	800a674 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800b14c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800b14e:	b119      	cbz	r1, 800b158 <xQueueSemaphoreTake+0x16c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800b150:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800b152:	6819      	ldr	r1, [r3, #0]
 800b154:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800b158:	68a0      	ldr	r0, [r4, #8]
 800b15a:	f000 fea9 	bl	800beb0 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 800b15e:	f7ff faa9 	bl	800a6b4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800b162:	2000      	movs	r0, #0
 800b164:	e780      	b.n	800b068 <xQueueSemaphoreTake+0x7c>

0800b166 <xQueueReceiveFromISR>:
{
 800b166:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b16a:	4689      	mov	r9, r1
 800b16c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800b16e:	4604      	mov	r4, r0
 800b170:	b940      	cbnz	r0, 800b184 <xQueueReceiveFromISR+0x1e>
 800b172:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b176:	f383 8811 	msr	BASEPRI, r3
 800b17a:	f3bf 8f6f 	isb	sy
 800b17e:	f3bf 8f4f 	dsb	sy
 800b182:	e7fe      	b.n	800b182 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800b184:	b951      	cbnz	r1, 800b19c <xQueueReceiveFromISR+0x36>
 800b186:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800b188:	b143      	cbz	r3, 800b19c <xQueueReceiveFromISR+0x36>
 800b18a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b18e:	f383 8811 	msr	BASEPRI, r3
 800b192:	f3bf 8f6f 	isb	sy
 800b196:	f3bf 8f4f 	dsb	sy
 800b19a:	e7fe      	b.n	800b19a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800b19c:	f7ff fb7c 	bl	800a898 <vPortValidateInterruptPriority>
	__asm volatile
 800b1a0:	f3ef 8711 	mrs	r7, BASEPRI
 800b1a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b1a8:	f383 8811 	msr	BASEPRI, r3
 800b1ac:	f3bf 8f6f 	isb	sy
 800b1b0:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800b1b4:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800b1b6:	b30d      	cbz	r5, 800b1fc <xQueueReceiveFromISR+0x96>
			const int8_t cRxLock = pxQueue->cRxLock;
 800b1b8:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800b1bc:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800b1be:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800b1c0:	4620      	mov	r0, r4
 800b1c2:	f7ff fbd5 	bl	800a970 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800b1c6:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800b1c8:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800b1ca:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 800b1cc:	d111      	bne.n	800b1f2 <xQueueReceiveFromISR+0x8c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800b1ce:	6923      	ldr	r3, [r4, #16]
 800b1d0:	b153      	cbz	r3, 800b1e8 <xQueueReceiveFromISR+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800b1d2:	f104 0010 	add.w	r0, r4, #16
 800b1d6:	f000 fd4d 	bl	800bc74 <xTaskRemoveFromEventList>
 800b1da:	b128      	cbz	r0, 800b1e8 <xQueueReceiveFromISR+0x82>
						if( pxHigherPriorityTaskWoken != NULL )
 800b1dc:	f1b8 0f00 	cmp.w	r8, #0
 800b1e0:	d002      	beq.n	800b1e8 <xQueueReceiveFromISR+0x82>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800b1e2:	2301      	movs	r3, #1
 800b1e4:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 800b1e8:	2001      	movs	r0, #1
	__asm volatile
 800b1ea:	f387 8811 	msr	BASEPRI, r7
}
 800b1ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800b1f2:	3601      	adds	r6, #1
 800b1f4:	b276      	sxtb	r6, r6
 800b1f6:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 800b1fa:	e7f5      	b.n	800b1e8 <xQueueReceiveFromISR+0x82>
			xReturn = pdFAIL;
 800b1fc:	4628      	mov	r0, r5
 800b1fe:	e7f4      	b.n	800b1ea <xQueueReceiveFromISR+0x84>

0800b200 <uxQueueMessagesWaiting>:
{
 800b200:	b510      	push	{r4, lr}
	configASSERT( xQueue );
 800b202:	4604      	mov	r4, r0
 800b204:	b940      	cbnz	r0, 800b218 <uxQueueMessagesWaiting+0x18>
	__asm volatile
 800b206:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b20a:	f383 8811 	msr	BASEPRI, r3
 800b20e:	f3bf 8f6f 	isb	sy
 800b212:	f3bf 8f4f 	dsb	sy
 800b216:	e7fe      	b.n	800b216 <uxQueueMessagesWaiting+0x16>
	taskENTER_CRITICAL();
 800b218:	f7ff fa2c 	bl	800a674 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800b21c:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
	taskEXIT_CRITICAL();
 800b21e:	f7ff fa49 	bl	800a6b4 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800b222:	4620      	mov	r0, r4
 800b224:	bd10      	pop	{r4, pc}

0800b226 <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800b226:	b940      	cbnz	r0, 800b23a <uxQueueMessagesWaitingFromISR+0x14>
 800b228:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b22c:	f383 8811 	msr	BASEPRI, r3
 800b230:	f3bf 8f6f 	isb	sy
 800b234:	f3bf 8f4f 	dsb	sy
 800b238:	e7fe      	b.n	800b238 <uxQueueMessagesWaitingFromISR+0x12>
	uxReturn = pxQueue->uxMessagesWaiting;
 800b23a:	6b80      	ldr	r0, [r0, #56]	@ 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800b23c:	4770      	bx	lr
	...

0800b240 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 800b240:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800b242:	4a07      	ldr	r2, [pc, #28]	@ (800b260 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800b244:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800b246:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800b24a:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 800b24e:	b91d      	cbnz	r5, 800b258 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800b250:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800b254:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800b256:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800b258:	3301      	adds	r3, #1
 800b25a:	2b08      	cmp	r3, #8
 800b25c:	d1f3      	bne.n	800b246 <vQueueAddToRegistry+0x6>
 800b25e:	e7fa      	b.n	800b256 <vQueueAddToRegistry+0x16>
 800b260:	20014c78 	.word	0x20014c78

0800b264 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800b264:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800b266:	4a09      	ldr	r2, [pc, #36]	@ (800b28c <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800b268:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800b26a:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 800b26e:	4281      	cmp	r1, r0
 800b270:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 800b274:	d106      	bne.n	800b284 <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800b276:	4a06      	ldr	r2, [pc, #24]	@ (800b290 <vQueueUnregisterQueue+0x2c>)
 800b278:	2100      	movs	r1, #0
 800b27a:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800b27e:	4422      	add	r2, r4
 800b280:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800b282:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800b284:	3301      	adds	r3, #1
 800b286:	2b08      	cmp	r3, #8
 800b288:	d1ef      	bne.n	800b26a <vQueueUnregisterQueue+0x6>
 800b28a:	e7fa      	b.n	800b282 <vQueueUnregisterQueue+0x1e>
 800b28c:	20014c7c 	.word	0x20014c7c
 800b290:	20014c78 	.word	0x20014c78

0800b294 <vQueueDelete>:
{
 800b294:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800b296:	b940      	cbnz	r0, 800b2aa <vQueueDelete+0x16>
 800b298:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b29c:	f383 8811 	msr	BASEPRI, r3
 800b2a0:	f3bf 8f6f 	isb	sy
 800b2a4:	f3bf 8f4f 	dsb	sy
 800b2a8:	e7fe      	b.n	800b2a8 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 800b2aa:	f7ff ffdb 	bl	800b264 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800b2ae:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 800b2b2:	b91b      	cbnz	r3, 800b2bc <vQueueDelete+0x28>
}
 800b2b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800b2b8:	f7ff b8f6 	b.w	800a4a8 <vPortFree>
}
 800b2bc:	bd10      	pop	{r4, pc}

0800b2be <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800b2be:	b570      	push	{r4, r5, r6, lr}
 800b2c0:	4604      	mov	r4, r0
 800b2c2:	460d      	mov	r5, r1
 800b2c4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800b2c6:	f7ff f9d5 	bl	800a674 <vPortEnterCritical>
 800b2ca:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800b2ce:	2bff      	cmp	r3, #255	@ 0xff
 800b2d0:	bf04      	itt	eq
 800b2d2:	2300      	moveq	r3, #0
 800b2d4:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 800b2d8:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800b2dc:	2bff      	cmp	r3, #255	@ 0xff
 800b2de:	bf04      	itt	eq
 800b2e0:	2300      	moveq	r3, #0
 800b2e2:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 800b2e6:	f7ff f9e5 	bl	800a6b4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800b2ea:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800b2ec:	b92b      	cbnz	r3, 800b2fa <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800b2ee:	4632      	mov	r2, r6
 800b2f0:	4629      	mov	r1, r5
 800b2f2:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800b2f6:	f000 fc9f 	bl	800bc38 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800b2fa:	4620      	mov	r0, r4
	}
 800b2fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800b300:	f7ff bb4c 	b.w	800a99c <prvUnlockQueue>

0800b304 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800b304:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b308:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800b30a:	f7ff f9b3 	bl	800a674 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800b30e:	4b30      	ldr	r3, [pc, #192]	@ (800b3d0 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 800b310:	4e30      	ldr	r6, [pc, #192]	@ (800b3d4 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 800b312:	681a      	ldr	r2, [r3, #0]
 800b314:	4f30      	ldr	r7, [pc, #192]	@ (800b3d8 <prvAddNewTaskToReadyList+0xd4>)
 800b316:	3201      	adds	r2, #1
 800b318:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800b31a:	6835      	ldr	r5, [r6, #0]
 800b31c:	2d00      	cmp	r5, #0
 800b31e:	d14b      	bne.n	800b3b8 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800b320:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800b322:	681b      	ldr	r3, [r3, #0]
 800b324:	2b01      	cmp	r3, #1
 800b326:	d11f      	bne.n	800b368 <prvAddNewTaskToReadyList+0x64>
 800b328:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800b32a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800b32c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800b32e:	f7ff f8f9 	bl	800a524 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800b332:	2d38      	cmp	r5, #56	@ 0x38
 800b334:	f108 0814 	add.w	r8, r8, #20
 800b338:	d1f7      	bne.n	800b32a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800b33a:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 800b400 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800b33e:	4d27      	ldr	r5, [pc, #156]	@ (800b3dc <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 800b340:	4640      	mov	r0, r8
 800b342:	f7ff f8ef 	bl	800a524 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800b346:	4628      	mov	r0, r5
 800b348:	f7ff f8ec 	bl	800a524 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800b34c:	4824      	ldr	r0, [pc, #144]	@ (800b3e0 <prvAddNewTaskToReadyList+0xdc>)
 800b34e:	f7ff f8e9 	bl	800a524 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800b352:	4824      	ldr	r0, [pc, #144]	@ (800b3e4 <prvAddNewTaskToReadyList+0xe0>)
 800b354:	f7ff f8e6 	bl	800a524 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800b358:	4823      	ldr	r0, [pc, #140]	@ (800b3e8 <prvAddNewTaskToReadyList+0xe4>)
 800b35a:	f7ff f8e3 	bl	800a524 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800b35e:	4b23      	ldr	r3, [pc, #140]	@ (800b3ec <prvAddNewTaskToReadyList+0xe8>)
 800b360:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800b364:	4b22      	ldr	r3, [pc, #136]	@ (800b3f0 <prvAddNewTaskToReadyList+0xec>)
 800b366:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 800b368:	4a22      	ldr	r2, [pc, #136]	@ (800b3f4 <prvAddNewTaskToReadyList+0xf0>)
 800b36a:	6813      	ldr	r3, [r2, #0]
 800b36c:	3301      	adds	r3, #1
 800b36e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800b370:	4a21      	ldr	r2, [pc, #132]	@ (800b3f8 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800b372:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800b374:	6811      	ldr	r1, [r2, #0]
 800b376:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800b378:	2014      	movs	r0, #20
 800b37a:	428b      	cmp	r3, r1
 800b37c:	fb00 7003 	mla	r0, r0, r3, r7
 800b380:	f104 0104 	add.w	r1, r4, #4
 800b384:	bf88      	it	hi
 800b386:	6013      	strhi	r3, [r2, #0]
 800b388:	f7ff f8da 	bl	800a540 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800b38c:	f7ff f992 	bl	800a6b4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800b390:	4b1a      	ldr	r3, [pc, #104]	@ (800b3fc <prvAddNewTaskToReadyList+0xf8>)
 800b392:	681b      	ldr	r3, [r3, #0]
 800b394:	b173      	cbz	r3, 800b3b4 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800b396:	6833      	ldr	r3, [r6, #0]
 800b398:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800b39a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800b39c:	429a      	cmp	r2, r3
 800b39e:	d209      	bcs.n	800b3b4 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 800b3a0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800b3a4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800b3a8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800b3ac:	f3bf 8f4f 	dsb	sy
 800b3b0:	f3bf 8f6f 	isb	sy
}
 800b3b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800b3b8:	4b10      	ldr	r3, [pc, #64]	@ (800b3fc <prvAddNewTaskToReadyList+0xf8>)
 800b3ba:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800b3bc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 800b3be:	2a00      	cmp	r2, #0
 800b3c0:	d1d2      	bne.n	800b368 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800b3c2:	6832      	ldr	r2, [r6, #0]
 800b3c4:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800b3c6:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800b3c8:	bf98      	it	ls
 800b3ca:	6034      	strls	r4, [r6, #0]
 800b3cc:	e7cc      	b.n	800b368 <prvAddNewTaskToReadyList+0x64>
 800b3ce:	bf00      	nop
 800b3d0:	20014cdc 	.word	0x20014cdc
 800b3d4:	200151b0 	.word	0x200151b0
 800b3d8:	20014d50 	.word	0x20014d50
 800b3dc:	20014d28 	.word	0x20014d28
 800b3e0:	20014d0c 	.word	0x20014d0c
 800b3e4:	20014cf8 	.word	0x20014cf8
 800b3e8:	20014ce0 	.word	0x20014ce0
 800b3ec:	20014d24 	.word	0x20014d24
 800b3f0:	20014d20 	.word	0x20014d20
 800b3f4:	20014cc0 	.word	0x20014cc0
 800b3f8:	20014cd4 	.word	0x20014cd4
 800b3fc:	20014cd0 	.word	0x20014cd0
 800b400:	20014d3c 	.word	0x20014d3c

0800b404 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800b404:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800b406:	4b15      	ldr	r3, [pc, #84]	@ (800b45c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b408:	4d15      	ldr	r5, [pc, #84]	@ (800b460 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800b40a:	681c      	ldr	r4, [r3, #0]
{
 800b40c:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b40e:	6828      	ldr	r0, [r5, #0]
 800b410:	3004      	adds	r0, #4
{
 800b412:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b414:	f7ff f8b6 	bl	800a584 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800b418:	1c73      	adds	r3, r6, #1
 800b41a:	d107      	bne.n	800b42c <prvAddCurrentTaskToDelayedList+0x28>
 800b41c:	b137      	cbz	r7, 800b42c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800b41e:	6829      	ldr	r1, [r5, #0]
 800b420:	4810      	ldr	r0, [pc, #64]	@ (800b464 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800b422:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800b426:	3104      	adds	r1, #4
 800b428:	f7ff b88a 	b.w	800a540 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800b42c:	682b      	ldr	r3, [r5, #0]
 800b42e:	19a4      	adds	r4, r4, r6
 800b430:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800b432:	d307      	bcc.n	800b444 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800b434:	4b0c      	ldr	r3, [pc, #48]	@ (800b468 <prvAddCurrentTaskToDelayedList+0x64>)
 800b436:	6818      	ldr	r0, [r3, #0]
 800b438:	6829      	ldr	r1, [r5, #0]
}
 800b43a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800b43e:	3104      	adds	r1, #4
 800b440:	f7ff b889 	b.w	800a556 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800b444:	4b09      	ldr	r3, [pc, #36]	@ (800b46c <prvAddCurrentTaskToDelayedList+0x68>)
 800b446:	6818      	ldr	r0, [r3, #0]
 800b448:	6829      	ldr	r1, [r5, #0]
 800b44a:	3104      	adds	r1, #4
 800b44c:	f7ff f883 	bl	800a556 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800b450:	4b07      	ldr	r3, [pc, #28]	@ (800b470 <prvAddCurrentTaskToDelayedList+0x6c>)
 800b452:	681a      	ldr	r2, [r3, #0]
 800b454:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800b456:	bf88      	it	hi
 800b458:	601c      	strhi	r4, [r3, #0]
}
 800b45a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b45c:	20014cd8 	.word	0x20014cd8
 800b460:	200151b0 	.word	0x200151b0
 800b464:	20014ce0 	.word	0x20014ce0
 800b468:	20014d20 	.word	0x20014d20
 800b46c:	20014d24 	.word	0x20014d24
 800b470:	20014cbc 	.word	0x20014cbc

0800b474 <prvTaskIsTaskSuspended>:
		configASSERT( xTask );
 800b474:	b940      	cbnz	r0, 800b488 <prvTaskIsTaskSuspended+0x14>
 800b476:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b47a:	f383 8811 	msr	BASEPRI, r3
 800b47e:	f3bf 8f6f 	isb	sy
 800b482:	f3bf 8f4f 	dsb	sy
 800b486:	e7fe      	b.n	800b486 <prvTaskIsTaskSuspended+0x12>
		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
 800b488:	6942      	ldr	r2, [r0, #20]
 800b48a:	4b06      	ldr	r3, [pc, #24]	@ (800b4a4 <prvTaskIsTaskSuspended+0x30>)
 800b48c:	429a      	cmp	r2, r3
 800b48e:	d107      	bne.n	800b4a0 <prvTaskIsTaskSuspended+0x2c>
			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
 800b490:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800b492:	4b05      	ldr	r3, [pc, #20]	@ (800b4a8 <prvTaskIsTaskSuspended+0x34>)
 800b494:	4298      	cmp	r0, r3
 800b496:	d003      	beq.n	800b4a0 <prvTaskIsTaskSuspended+0x2c>
				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The cast is only redundant when NULL is used. */
 800b498:	fab0 f080 	clz	r0, r0
 800b49c:	0940      	lsrs	r0, r0, #5
 800b49e:	4770      	bx	lr
	BaseType_t xReturn = pdFALSE;
 800b4a0:	2000      	movs	r0, #0
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 800b4a2:	4770      	bx	lr
 800b4a4:	20014ce0 	.word	0x20014ce0
 800b4a8:	20014d0c 	.word	0x20014d0c

0800b4ac <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800b4ac:	4a06      	ldr	r2, [pc, #24]	@ (800b4c8 <prvResetNextTaskUnblockTime+0x1c>)
 800b4ae:	6813      	ldr	r3, [r2, #0]
 800b4b0:	6819      	ldr	r1, [r3, #0]
 800b4b2:	4b06      	ldr	r3, [pc, #24]	@ (800b4cc <prvResetNextTaskUnblockTime+0x20>)
 800b4b4:	b919      	cbnz	r1, 800b4be <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800b4b6:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800b4ba:	601a      	str	r2, [r3, #0]
}
 800b4bc:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b4be:	6812      	ldr	r2, [r2, #0]
 800b4c0:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800b4c2:	68d2      	ldr	r2, [r2, #12]
 800b4c4:	6852      	ldr	r2, [r2, #4]
 800b4c6:	e7f8      	b.n	800b4ba <prvResetNextTaskUnblockTime+0xe>
 800b4c8:	20014d24 	.word	0x20014d24
 800b4cc:	20014cbc 	.word	0x20014cbc

0800b4d0 <prvDeleteTCB>:
	{
 800b4d0:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800b4d2:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
 800b4d6:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800b4d8:	b93b      	cbnz	r3, 800b4ea <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800b4da:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 800b4dc:	f7fe ffe4 	bl	800a4a8 <vPortFree>
				vPortFree( pxTCB );
 800b4e0:	4620      	mov	r0, r4
	}
 800b4e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800b4e6:	f7fe bfdf 	b.w	800a4a8 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800b4ea:	2b01      	cmp	r3, #1
 800b4ec:	d0f9      	beq.n	800b4e2 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800b4ee:	2b02      	cmp	r3, #2
 800b4f0:	d008      	beq.n	800b504 <prvDeleteTCB+0x34>
 800b4f2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b4f6:	f383 8811 	msr	BASEPRI, r3
 800b4fa:	f3bf 8f6f 	isb	sy
 800b4fe:	f3bf 8f4f 	dsb	sy
 800b502:	e7fe      	b.n	800b502 <prvDeleteTCB+0x32>
	}
 800b504:	bd10      	pop	{r4, pc}
	...

0800b508 <prvIdleTask>:
{
 800b508:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800b50a:	4c13      	ldr	r4, [pc, #76]	@ (800b558 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b50c:	4f13      	ldr	r7, [pc, #76]	@ (800b55c <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 800b50e:	4d14      	ldr	r5, [pc, #80]	@ (800b560 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800b510:	6823      	ldr	r3, [r4, #0]
 800b512:	b973      	cbnz	r3, 800b532 <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800b514:	4b13      	ldr	r3, [pc, #76]	@ (800b564 <prvIdleTask+0x5c>)
 800b516:	681b      	ldr	r3, [r3, #0]
 800b518:	2b01      	cmp	r3, #1
 800b51a:	d9f8      	bls.n	800b50e <prvIdleTask+0x6>
				taskYIELD();
 800b51c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800b520:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800b524:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800b528:	f3bf 8f4f 	dsb	sy
 800b52c:	f3bf 8f6f 	isb	sy
 800b530:	e7ed      	b.n	800b50e <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800b532:	f7ff f89f 	bl	800a674 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b536:	68fb      	ldr	r3, [r7, #12]
 800b538:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800b53a:	1d30      	adds	r0, r6, #4
 800b53c:	f7ff f822 	bl	800a584 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800b540:	682b      	ldr	r3, [r5, #0]
 800b542:	3b01      	subs	r3, #1
 800b544:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800b546:	6823      	ldr	r3, [r4, #0]
 800b548:	3b01      	subs	r3, #1
 800b54a:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800b54c:	f7ff f8b2 	bl	800a6b4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800b550:	4630      	mov	r0, r6
 800b552:	f7ff ffbd 	bl	800b4d0 <prvDeleteTCB>
 800b556:	e7db      	b.n	800b510 <prvIdleTask+0x8>
 800b558:	20014cf4 	.word	0x20014cf4
 800b55c:	20014cf8 	.word	0x20014cf8
 800b560:	20014cdc 	.word	0x20014cdc
 800b564:	20014d50 	.word	0x20014d50

0800b568 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800b568:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b56c:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800b570:	0096      	lsls	r6, r2, #2
 800b572:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800b574:	4607      	mov	r7, r0
 800b576:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800b578:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800b57a:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800b57c:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800b57e:	f01a fb18 	bl	8025bb2 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800b582:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800b584:	3e04      	subs	r6, #4
 800b586:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800b588:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 800b58c:	b3b5      	cbz	r5, 800b5fc <prvInitialiseNewTask.constprop.0+0x94>
 800b58e:	1e6b      	subs	r3, r5, #1
 800b590:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 800b594:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800b596:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800b59a:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 800b59e:	b109      	cbz	r1, 800b5a4 <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800b5a0:	42ab      	cmp	r3, r5
 800b5a2:	d1f8      	bne.n	800b596 <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800b5a4:	2300      	movs	r3, #0
 800b5a6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800b5aa:	9d08      	ldr	r5, [sp, #32]
 800b5ac:	2d37      	cmp	r5, #55	@ 0x37
 800b5ae:	bf28      	it	cs
 800b5b0:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800b5b2:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800b5b6:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800b5b8:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800b5ba:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800b5bc:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800b5c0:	f7fe ffbb 	bl	800a53a <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b5c4:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800b5c8:	f104 0018 	add.w	r0, r4, #24
 800b5cc:	f7fe ffb5 	bl	800a53a <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800b5d0:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800b5d4:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b5d6:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800b5d8:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 800b5da:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800b5de:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800b5e2:	4642      	mov	r2, r8
 800b5e4:	4639      	mov	r1, r7
 800b5e6:	4630      	mov	r0, r6
 800b5e8:	f7ff f81a 	bl	800a620 <pxPortInitialiseStack>
 800b5ec:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800b5ee:	f1b9 0f00 	cmp.w	r9, #0
 800b5f2:	d001      	beq.n	800b5f8 <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800b5f4:	f8c9 4000 	str.w	r4, [r9]
}
 800b5f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800b5fc:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 800b600:	e7d3      	b.n	800b5aa <prvInitialiseNewTask.constprop.0+0x42>

0800b602 <xTaskCreateStatic>:
	{
 800b602:	b570      	push	{r4, r5, r6, lr}
 800b604:	b086      	sub	sp, #24
 800b606:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 800b60a:	b945      	cbnz	r5, 800b61e <xTaskCreateStatic+0x1c>
 800b60c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b610:	f383 8811 	msr	BASEPRI, r3
 800b614:	f3bf 8f6f 	isb	sy
 800b618:	f3bf 8f4f 	dsb	sy
 800b61c:	e7fe      	b.n	800b61c <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800b61e:	b944      	cbnz	r4, 800b632 <xTaskCreateStatic+0x30>
 800b620:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b624:	f383 8811 	msr	BASEPRI, r3
 800b628:	f3bf 8f6f 	isb	sy
 800b62c:	f3bf 8f4f 	dsb	sy
 800b630:	e7fe      	b.n	800b630 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800b632:	2660      	movs	r6, #96	@ 0x60
 800b634:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800b636:	9e05      	ldr	r6, [sp, #20]
 800b638:	2e60      	cmp	r6, #96	@ 0x60
 800b63a:	d008      	beq.n	800b64e <xTaskCreateStatic+0x4c>
 800b63c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b640:	f383 8811 	msr	BASEPRI, r3
 800b644:	f3bf 8f6f 	isb	sy
 800b648:	f3bf 8f4f 	dsb	sy
 800b64c:	e7fe      	b.n	800b64c <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800b64e:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800b650:	2502      	movs	r5, #2
 800b652:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800b656:	ad04      	add	r5, sp, #16
 800b658:	9501      	str	r5, [sp, #4]
 800b65a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 800b65c:	9402      	str	r4, [sp, #8]
 800b65e:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800b660:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800b662:	f7ff ff81 	bl	800b568 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800b666:	4620      	mov	r0, r4
 800b668:	f7ff fe4c 	bl	800b304 <prvAddNewTaskToReadyList>
	}
 800b66c:	9804      	ldr	r0, [sp, #16]
 800b66e:	b006      	add	sp, #24
 800b670:	bd70      	pop	{r4, r5, r6, pc}

0800b672 <xTaskCreate>:
	{
 800b672:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b676:	4607      	mov	r7, r0
 800b678:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800b67a:	0090      	lsls	r0, r2, #2
	{
 800b67c:	4688      	mov	r8, r1
 800b67e:	4616      	mov	r6, r2
 800b680:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800b682:	f7fe fe79 	bl	800a378 <pvPortMalloc>
			if( pxStack != NULL )
 800b686:	4605      	mov	r5, r0
 800b688:	b920      	cbnz	r0, 800b694 <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800b68a:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800b68e:	b005      	add	sp, #20
 800b690:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800b694:	2060      	movs	r0, #96	@ 0x60
 800b696:	f7fe fe6f 	bl	800a378 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800b69a:	4604      	mov	r4, r0
 800b69c:	b198      	cbz	r0, 800b6c6 <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800b69e:	2300      	movs	r3, #0
 800b6a0:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800b6a4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
					pxNewTCB->pxStack = pxStack;
 800b6a6:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800b6a8:	9301      	str	r3, [sp, #4]
 800b6aa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800b6ac:	9002      	str	r0, [sp, #8]
 800b6ae:	9300      	str	r3, [sp, #0]
 800b6b0:	4632      	mov	r2, r6
 800b6b2:	464b      	mov	r3, r9
 800b6b4:	4641      	mov	r1, r8
 800b6b6:	4638      	mov	r0, r7
 800b6b8:	f7ff ff56 	bl	800b568 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800b6bc:	4620      	mov	r0, r4
 800b6be:	f7ff fe21 	bl	800b304 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800b6c2:	2001      	movs	r0, #1
 800b6c4:	e7e3      	b.n	800b68e <xTaskCreate+0x1c>
					vPortFree( pxStack );
 800b6c6:	4628      	mov	r0, r5
 800b6c8:	f7fe feee 	bl	800a4a8 <vPortFree>
		if( pxNewTCB != NULL )
 800b6cc:	e7dd      	b.n	800b68a <xTaskCreate+0x18>
	...

0800b6d0 <eTaskGetState>:
	{
 800b6d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( pxTCB );
 800b6d2:	4604      	mov	r4, r0
 800b6d4:	b940      	cbnz	r0, 800b6e8 <eTaskGetState+0x18>
 800b6d6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b6da:	f383 8811 	msr	BASEPRI, r3
 800b6de:	f3bf 8f6f 	isb	sy
 800b6e2:	f3bf 8f4f 	dsb	sy
 800b6e6:	e7fe      	b.n	800b6e6 <eTaskGetState+0x16>
		if( pxTCB == pxCurrentTCB )
 800b6e8:	4b15      	ldr	r3, [pc, #84]	@ (800b740 <eTaskGetState+0x70>)
 800b6ea:	681b      	ldr	r3, [r3, #0]
 800b6ec:	4283      	cmp	r3, r0
 800b6ee:	d020      	beq.n	800b732 <eTaskGetState+0x62>
			taskENTER_CRITICAL();
 800b6f0:	f7fe ffc0 	bl	800a674 <vPortEnterCritical>
				pxDelayedList = pxDelayedTaskList;
 800b6f4:	4b13      	ldr	r3, [pc, #76]	@ (800b744 <eTaskGetState+0x74>)
				pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
 800b6f6:	6965      	ldr	r5, [r4, #20]
				pxDelayedList = pxDelayedTaskList;
 800b6f8:	681f      	ldr	r7, [r3, #0]
				pxOverflowedDelayedList = pxOverflowDelayedTaskList;
 800b6fa:	4b13      	ldr	r3, [pc, #76]	@ (800b748 <eTaskGetState+0x78>)
 800b6fc:	681e      	ldr	r6, [r3, #0]
			taskEXIT_CRITICAL();
 800b6fe:	f7fe ffd9 	bl	800a6b4 <vPortExitCritical>
			if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
 800b702:	42bd      	cmp	r5, r7
 800b704:	d017      	beq.n	800b736 <eTaskGetState+0x66>
 800b706:	42b5      	cmp	r5, r6
 800b708:	d015      	beq.n	800b736 <eTaskGetState+0x66>
				else if( pxStateList == &xSuspendedTaskList )
 800b70a:	4b10      	ldr	r3, [pc, #64]	@ (800b74c <eTaskGetState+0x7c>)
 800b70c:	429d      	cmp	r5, r3
 800b70e:	d108      	bne.n	800b722 <eTaskGetState+0x52>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
 800b710:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800b712:	b983      	cbnz	r3, 800b736 <eTaskGetState+0x66>
							if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
 800b714:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
								eReturn = eSuspended;
 800b718:	2b01      	cmp	r3, #1
 800b71a:	bf0c      	ite	eq
 800b71c:	2002      	moveq	r0, #2
 800b71e:	2003      	movne	r0, #3
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 800b720:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
 800b722:	4b0b      	ldr	r3, [pc, #44]	@ (800b750 <eTaskGetState+0x80>)
 800b724:	429d      	cmp	r5, r3
 800b726:	d008      	beq.n	800b73a <eTaskGetState+0x6a>
				eReturn = eReady;
 800b728:	2d00      	cmp	r5, #0
 800b72a:	bf0c      	ite	eq
 800b72c:	2004      	moveq	r0, #4
 800b72e:	2001      	movne	r0, #1
 800b730:	e7f6      	b.n	800b720 <eTaskGetState+0x50>
			eReturn = eRunning;
 800b732:	2000      	movs	r0, #0
 800b734:	e7f4      	b.n	800b720 <eTaskGetState+0x50>
				eReturn = eBlocked;
 800b736:	2002      	movs	r0, #2
 800b738:	e7f2      	b.n	800b720 <eTaskGetState+0x50>
					eReturn = eDeleted;
 800b73a:	2004      	movs	r0, #4
 800b73c:	e7f0      	b.n	800b720 <eTaskGetState+0x50>
 800b73e:	bf00      	nop
 800b740:	200151b0 	.word	0x200151b0
 800b744:	20014d24 	.word	0x20014d24
 800b748:	20014d20 	.word	0x20014d20
 800b74c:	20014ce0 	.word	0x20014ce0
 800b750:	20014cf8 	.word	0x20014cf8

0800b754 <vTaskResume>:
	{
 800b754:	b570      	push	{r4, r5, r6, lr}
		configASSERT( xTaskToResume );
 800b756:	4604      	mov	r4, r0
 800b758:	b940      	cbnz	r0, 800b76c <vTaskResume+0x18>
 800b75a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b75e:	f383 8811 	msr	BASEPRI, r3
 800b762:	f3bf 8f6f 	isb	sy
 800b766:	f3bf 8f4f 	dsb	sy
 800b76a:	e7fe      	b.n	800b76a <vTaskResume+0x16>
		if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
 800b76c:	4d17      	ldr	r5, [pc, #92]	@ (800b7cc <vTaskResume+0x78>)
 800b76e:	682b      	ldr	r3, [r5, #0]
 800b770:	4283      	cmp	r3, r0
 800b772:	d029      	beq.n	800b7c8 <vTaskResume+0x74>
			taskENTER_CRITICAL();
 800b774:	f7fe ff7e 	bl	800a674 <vPortEnterCritical>
				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
 800b778:	4620      	mov	r0, r4
 800b77a:	f7ff fe7b 	bl	800b474 <prvTaskIsTaskSuspended>
 800b77e:	b1f8      	cbz	r0, 800b7c0 <vTaskResume+0x6c>
					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
 800b780:	1d26      	adds	r6, r4, #4
 800b782:	4630      	mov	r0, r6
 800b784:	f7fe fefe 	bl	800a584 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800b788:	4a11      	ldr	r2, [pc, #68]	@ (800b7d0 <vTaskResume+0x7c>)
 800b78a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800b78c:	6811      	ldr	r1, [r2, #0]
 800b78e:	428b      	cmp	r3, r1
 800b790:	bf88      	it	hi
 800b792:	6013      	strhi	r3, [r2, #0]
 800b794:	4a0f      	ldr	r2, [pc, #60]	@ (800b7d4 <vTaskResume+0x80>)
 800b796:	2014      	movs	r0, #20
 800b798:	fb00 2003 	mla	r0, r0, r3, r2
 800b79c:	4631      	mov	r1, r6
 800b79e:	f7fe fecf 	bl	800a540 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800b7a2:	682b      	ldr	r3, [r5, #0]
 800b7a4:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800b7a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b7a8:	429a      	cmp	r2, r3
 800b7aa:	d309      	bcc.n	800b7c0 <vTaskResume+0x6c>
						taskYIELD_IF_USING_PREEMPTION();
 800b7ac:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800b7b0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800b7b4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800b7b8:	f3bf 8f4f 	dsb	sy
 800b7bc:	f3bf 8f6f 	isb	sy
	}
 800b7c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			taskEXIT_CRITICAL();
 800b7c4:	f7fe bf76 	b.w	800a6b4 <vPortExitCritical>
	}
 800b7c8:	bd70      	pop	{r4, r5, r6, pc}
 800b7ca:	bf00      	nop
 800b7cc:	200151b0 	.word	0x200151b0
 800b7d0:	20014cd4 	.word	0x20014cd4
 800b7d4:	20014d50 	.word	0x20014d50

0800b7d8 <vTaskStartScheduler>:
{
 800b7d8:	b510      	push	{r4, lr}
 800b7da:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800b7dc:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800b7de:	aa07      	add	r2, sp, #28
 800b7e0:	a906      	add	r1, sp, #24
 800b7e2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800b7e4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800b7e8:	f7fe fd88 	bl	800a2fc <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800b7ec:	9b05      	ldr	r3, [sp, #20]
 800b7ee:	9302      	str	r3, [sp, #8]
 800b7f0:	9b06      	ldr	r3, [sp, #24]
 800b7f2:	9a07      	ldr	r2, [sp, #28]
 800b7f4:	4916      	ldr	r1, [pc, #88]	@ (800b850 <vTaskStartScheduler+0x78>)
 800b7f6:	4817      	ldr	r0, [pc, #92]	@ (800b854 <vTaskStartScheduler+0x7c>)
 800b7f8:	e9cd 4300 	strd	r4, r3, [sp]
 800b7fc:	4623      	mov	r3, r4
 800b7fe:	f7ff ff00 	bl	800b602 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800b802:	b318      	cbz	r0, 800b84c <vTaskStartScheduler+0x74>
			xReturn = xTimerCreateTimerTask();
 800b804:	f000 fc00 	bl	800c008 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800b808:	2801      	cmp	r0, #1
 800b80a:	d114      	bne.n	800b836 <vTaskStartScheduler+0x5e>
 800b80c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b810:	f383 8811 	msr	BASEPRI, r3
 800b814:	f3bf 8f6f 	isb	sy
 800b818:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 800b81c:	4b0e      	ldr	r3, [pc, #56]	@ (800b858 <vTaskStartScheduler+0x80>)
 800b81e:	f04f 32ff 	mov.w	r2, #4294967295
 800b822:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800b824:	4b0d      	ldr	r3, [pc, #52]	@ (800b85c <vTaskStartScheduler+0x84>)
 800b826:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800b828:	4b0d      	ldr	r3, [pc, #52]	@ (800b860 <vTaskStartScheduler+0x88>)
 800b82a:	601c      	str	r4, [r3, #0]
}
 800b82c:	b008      	add	sp, #32
 800b82e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800b832:	f7fe bfaf 	b.w	800a794 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800b836:	3001      	adds	r0, #1
 800b838:	d108      	bne.n	800b84c <vTaskStartScheduler+0x74>
 800b83a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b83e:	f383 8811 	msr	BASEPRI, r3
 800b842:	f3bf 8f6f 	isb	sy
 800b846:	f3bf 8f4f 	dsb	sy
 800b84a:	e7fe      	b.n	800b84a <vTaskStartScheduler+0x72>
}
 800b84c:	b008      	add	sp, #32
 800b84e:	bd10      	pop	{r4, pc}
 800b850:	08027730 	.word	0x08027730
 800b854:	0800b509 	.word	0x0800b509
 800b858:	20014cbc 	.word	0x20014cbc
 800b85c:	20014cd0 	.word	0x20014cd0
 800b860:	20014cd8 	.word	0x20014cd8

0800b864 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800b864:	4a02      	ldr	r2, [pc, #8]	@ (800b870 <vTaskSuspendAll+0xc>)
 800b866:	6813      	ldr	r3, [r2, #0]
 800b868:	3301      	adds	r3, #1
 800b86a:	6013      	str	r3, [r2, #0]
}
 800b86c:	4770      	bx	lr
 800b86e:	bf00      	nop
 800b870:	20014cb8 	.word	0x20014cb8

0800b874 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800b874:	4b01      	ldr	r3, [pc, #4]	@ (800b87c <xTaskGetTickCount+0x8>)
 800b876:	6818      	ldr	r0, [r3, #0]
}
 800b878:	4770      	bx	lr
 800b87a:	bf00      	nop
 800b87c:	20014cd8 	.word	0x20014cd8

0800b880 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b880:	4b3f      	ldr	r3, [pc, #252]	@ (800b980 <xTaskIncrementTick+0x100>)
 800b882:	681b      	ldr	r3, [r3, #0]
{
 800b884:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b888:	2b00      	cmp	r3, #0
 800b88a:	d172      	bne.n	800b972 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800b88c:	4b3d      	ldr	r3, [pc, #244]	@ (800b984 <xTaskIncrementTick+0x104>)
 800b88e:	681c      	ldr	r4, [r3, #0]
 800b890:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 800b892:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800b894:	b9bc      	cbnz	r4, 800b8c6 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800b896:	4b3c      	ldr	r3, [pc, #240]	@ (800b988 <xTaskIncrementTick+0x108>)
 800b898:	681a      	ldr	r2, [r3, #0]
 800b89a:	6812      	ldr	r2, [r2, #0]
 800b89c:	b142      	cbz	r2, 800b8b0 <xTaskIncrementTick+0x30>
 800b89e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b8a2:	f383 8811 	msr	BASEPRI, r3
 800b8a6:	f3bf 8f6f 	isb	sy
 800b8aa:	f3bf 8f4f 	dsb	sy
 800b8ae:	e7fe      	b.n	800b8ae <xTaskIncrementTick+0x2e>
 800b8b0:	4a36      	ldr	r2, [pc, #216]	@ (800b98c <xTaskIncrementTick+0x10c>)
 800b8b2:	6819      	ldr	r1, [r3, #0]
 800b8b4:	6810      	ldr	r0, [r2, #0]
 800b8b6:	6018      	str	r0, [r3, #0]
 800b8b8:	6011      	str	r1, [r2, #0]
 800b8ba:	4a35      	ldr	r2, [pc, #212]	@ (800b990 <xTaskIncrementTick+0x110>)
 800b8bc:	6813      	ldr	r3, [r2, #0]
 800b8be:	3301      	adds	r3, #1
 800b8c0:	6013      	str	r3, [r2, #0]
 800b8c2:	f7ff fdf3 	bl	800b4ac <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800b8c6:	4d33      	ldr	r5, [pc, #204]	@ (800b994 <xTaskIncrementTick+0x114>)
 800b8c8:	4e33      	ldr	r6, [pc, #204]	@ (800b998 <xTaskIncrementTick+0x118>)
 800b8ca:	682b      	ldr	r3, [r5, #0]
 800b8cc:	4f33      	ldr	r7, [pc, #204]	@ (800b99c <xTaskIncrementTick+0x11c>)
 800b8ce:	429c      	cmp	r4, r3
BaseType_t xSwitchRequired = pdFALSE;
 800b8d0:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800b8d4:	d212      	bcs.n	800b8fc <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800b8d6:	683a      	ldr	r2, [r7, #0]
 800b8d8:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800b8da:	2114      	movs	r1, #20
 800b8dc:	434a      	muls	r2, r1
 800b8de:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 800b8e0:	2a02      	cmp	r2, #2
			if( xYieldPending != pdFALSE )
 800b8e2:	4a2f      	ldr	r2, [pc, #188]	@ (800b9a0 <xTaskIncrementTick+0x120>)
 800b8e4:	6812      	ldr	r2, [r2, #0]
				xSwitchRequired = pdTRUE;
 800b8e6:	bf28      	it	cs
 800b8e8:	f04f 0b01 	movcs.w	fp, #1
				xSwitchRequired = pdTRUE;
 800b8ec:	2a00      	cmp	r2, #0
 800b8ee:	bf18      	it	ne
 800b8f0:	f04f 0b01 	movne.w	fp, #1
}
 800b8f4:	4658      	mov	r0, fp
 800b8f6:	b003      	add	sp, #12
 800b8f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800b8fc:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 800b988 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800b900:	f8df a0a4 	ldr.w	sl, [pc, #164]	@ 800b9a8 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800b904:	f8d9 2000 	ldr.w	r2, [r9]
 800b908:	6812      	ldr	r2, [r2, #0]
 800b90a:	b91a      	cbnz	r2, 800b914 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b90c:	f04f 32ff 	mov.w	r2, #4294967295
 800b910:	602a      	str	r2, [r5, #0]
					break;
 800b912:	e7e0      	b.n	800b8d6 <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b914:	f8d9 2000 	ldr.w	r2, [r9]
 800b918:	68d2      	ldr	r2, [r2, #12]
 800b91a:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800b91e:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 800b922:	428c      	cmp	r4, r1
 800b924:	d201      	bcs.n	800b92a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800b926:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800b928:	e7d5      	b.n	800b8d6 <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800b92a:	f108 0304 	add.w	r3, r8, #4
 800b92e:	4618      	mov	r0, r3
 800b930:	9301      	str	r3, [sp, #4]
 800b932:	f7fe fe27 	bl	800a584 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800b936:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 800b93a:	b119      	cbz	r1, 800b944 <xTaskIncrementTick+0xc4>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800b93c:	f108 0018 	add.w	r0, r8, #24
 800b940:	f7fe fe20 	bl	800a584 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800b944:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 800b948:	f8da 1000 	ldr.w	r1, [sl]
 800b94c:	2314      	movs	r3, #20
 800b94e:	4288      	cmp	r0, r1
 800b950:	bf88      	it	hi
 800b952:	f8ca 0000 	strhi.w	r0, [sl]
 800b956:	9901      	ldr	r1, [sp, #4]
 800b958:	fb03 6000 	mla	r0, r3, r0, r6
 800b95c:	f7fe fdf0 	bl	800a540 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800b960:	6838      	ldr	r0, [r7, #0]
 800b962:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 800b966:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 800b968:	4291      	cmp	r1, r2
 800b96a:	bf28      	it	cs
 800b96c:	f04f 0b01 	movcs.w	fp, #1
 800b970:	e7c8      	b.n	800b904 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800b972:	4a0c      	ldr	r2, [pc, #48]	@ (800b9a4 <xTaskIncrementTick+0x124>)
 800b974:	6813      	ldr	r3, [r2, #0]
 800b976:	3301      	adds	r3, #1
 800b978:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800b97a:	f04f 0b00 	mov.w	fp, #0
 800b97e:	e7b9      	b.n	800b8f4 <xTaskIncrementTick+0x74>
 800b980:	20014cb8 	.word	0x20014cb8
 800b984:	20014cd8 	.word	0x20014cd8
 800b988:	20014d24 	.word	0x20014d24
 800b98c:	20014d20 	.word	0x20014d20
 800b990:	20014cc4 	.word	0x20014cc4
 800b994:	20014cbc 	.word	0x20014cbc
 800b998:	20014d50 	.word	0x20014d50
 800b99c:	200151b0 	.word	0x200151b0
 800b9a0:	20014cc8 	.word	0x20014cc8
 800b9a4:	20014ccc 	.word	0x20014ccc
 800b9a8:	20014cd4 	.word	0x20014cd4

0800b9ac <xTaskResumeAll>:
{
 800b9ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 800b9b0:	4c30      	ldr	r4, [pc, #192]	@ (800ba74 <xTaskResumeAll+0xc8>)
 800b9b2:	6823      	ldr	r3, [r4, #0]
 800b9b4:	b943      	cbnz	r3, 800b9c8 <xTaskResumeAll+0x1c>
 800b9b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b9ba:	f383 8811 	msr	BASEPRI, r3
 800b9be:	f3bf 8f6f 	isb	sy
 800b9c2:	f3bf 8f4f 	dsb	sy
 800b9c6:	e7fe      	b.n	800b9c6 <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 800b9c8:	f7fe fe54 	bl	800a674 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800b9cc:	6823      	ldr	r3, [r4, #0]
 800b9ce:	3b01      	subs	r3, #1
 800b9d0:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b9d2:	6824      	ldr	r4, [r4, #0]
 800b9d4:	b12c      	cbz	r4, 800b9e2 <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 800b9d6:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800b9d8:	f7fe fe6c 	bl	800a6b4 <vPortExitCritical>
}
 800b9dc:	4620      	mov	r0, r4
 800b9de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800b9e2:	4b25      	ldr	r3, [pc, #148]	@ (800ba78 <xTaskResumeAll+0xcc>)
 800b9e4:	681b      	ldr	r3, [r3, #0]
 800b9e6:	2b00      	cmp	r3, #0
 800b9e8:	d0f5      	beq.n	800b9d6 <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800b9ea:	4d24      	ldr	r5, [pc, #144]	@ (800ba7c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800b9ec:	4e24      	ldr	r6, [pc, #144]	@ (800ba80 <xTaskResumeAll+0xd4>)
 800b9ee:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 800ba90 <xTaskResumeAll+0xe4>
 800b9f2:	e01d      	b.n	800ba30 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b9f4:	68eb      	ldr	r3, [r5, #12]
 800b9f6:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800b9f8:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800b9fa:	f104 0018 	add.w	r0, r4, #24
 800b9fe:	f7fe fdc1 	bl	800a584 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ba02:	4638      	mov	r0, r7
 800ba04:	f7fe fdbe 	bl	800a584 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800ba08:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800ba0a:	6832      	ldr	r2, [r6, #0]
 800ba0c:	2014      	movs	r0, #20
 800ba0e:	4293      	cmp	r3, r2
 800ba10:	fb00 8003 	mla	r0, r0, r3, r8
 800ba14:	4639      	mov	r1, r7
 800ba16:	bf88      	it	hi
 800ba18:	6033      	strhi	r3, [r6, #0]
 800ba1a:	f7fe fd91 	bl	800a540 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800ba1e:	4b19      	ldr	r3, [pc, #100]	@ (800ba84 <xTaskResumeAll+0xd8>)
 800ba20:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800ba22:	681b      	ldr	r3, [r3, #0]
 800ba24:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ba26:	429a      	cmp	r2, r3
 800ba28:	d302      	bcc.n	800ba30 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 800ba2a:	4b17      	ldr	r3, [pc, #92]	@ (800ba88 <xTaskResumeAll+0xdc>)
 800ba2c:	2201      	movs	r2, #1
 800ba2e:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800ba30:	682b      	ldr	r3, [r5, #0]
 800ba32:	2b00      	cmp	r3, #0
 800ba34:	d1de      	bne.n	800b9f4 <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 800ba36:	b10c      	cbz	r4, 800ba3c <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 800ba38:	f7ff fd38 	bl	800b4ac <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800ba3c:	4d13      	ldr	r5, [pc, #76]	@ (800ba8c <xTaskResumeAll+0xe0>)
 800ba3e:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800ba40:	b144      	cbz	r4, 800ba54 <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 800ba42:	4e11      	ldr	r6, [pc, #68]	@ (800ba88 <xTaskResumeAll+0xdc>)
 800ba44:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800ba46:	f7ff ff1b 	bl	800b880 <xTaskIncrementTick>
 800ba4a:	b100      	cbz	r0, 800ba4e <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 800ba4c:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800ba4e:	3c01      	subs	r4, #1
 800ba50:	d1f9      	bne.n	800ba46 <xTaskResumeAll+0x9a>
						xPendedTicks = 0;
 800ba52:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800ba54:	4b0c      	ldr	r3, [pc, #48]	@ (800ba88 <xTaskResumeAll+0xdc>)
 800ba56:	681b      	ldr	r3, [r3, #0]
 800ba58:	2b00      	cmp	r3, #0
 800ba5a:	d0bc      	beq.n	800b9d6 <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 800ba5c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800ba60:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800ba64:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800ba68:	f3bf 8f4f 	dsb	sy
 800ba6c:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800ba70:	2401      	movs	r4, #1
 800ba72:	e7b1      	b.n	800b9d8 <xTaskResumeAll+0x2c>
 800ba74:	20014cb8 	.word	0x20014cb8
 800ba78:	20014cdc 	.word	0x20014cdc
 800ba7c:	20014d0c 	.word	0x20014d0c
 800ba80:	20014cd4 	.word	0x20014cd4
 800ba84:	200151b0 	.word	0x200151b0
 800ba88:	20014cc8 	.word	0x20014cc8
 800ba8c:	20014ccc 	.word	0x20014ccc
 800ba90:	20014d50 	.word	0x20014d50

0800ba94 <vTaskDelay>:
	{
 800ba94:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800ba96:	b950      	cbnz	r0, 800baae <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800ba98:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800ba9c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800baa0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800baa4:	f3bf 8f4f 	dsb	sy
 800baa8:	f3bf 8f6f 	isb	sy
	}
 800baac:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800baae:	4b0a      	ldr	r3, [pc, #40]	@ (800bad8 <vTaskDelay+0x44>)
 800bab0:	6819      	ldr	r1, [r3, #0]
 800bab2:	b141      	cbz	r1, 800bac6 <vTaskDelay+0x32>
 800bab4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bab8:	f383 8811 	msr	BASEPRI, r3
 800babc:	f3bf 8f6f 	isb	sy
 800bac0:	f3bf 8f4f 	dsb	sy
 800bac4:	e7fe      	b.n	800bac4 <vTaskDelay+0x30>
			vTaskSuspendAll();
 800bac6:	f7ff fecd 	bl	800b864 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800baca:	f7ff fc9b 	bl	800b404 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800bace:	f7ff ff6d 	bl	800b9ac <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800bad2:	2800      	cmp	r0, #0
 800bad4:	d0e0      	beq.n	800ba98 <vTaskDelay+0x4>
 800bad6:	e7e9      	b.n	800baac <vTaskDelay+0x18>
 800bad8:	20014cb8 	.word	0x20014cb8

0800badc <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800badc:	4b17      	ldr	r3, [pc, #92]	@ (800bb3c <vTaskSwitchContext+0x60>)
 800bade:	681a      	ldr	r2, [r3, #0]
 800bae0:	4b17      	ldr	r3, [pc, #92]	@ (800bb40 <vTaskSwitchContext+0x64>)
{
 800bae2:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800bae4:	b112      	cbz	r2, 800baec <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800bae6:	2201      	movs	r2, #1
 800bae8:	601a      	str	r2, [r3, #0]
}
 800baea:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800baec:	4d15      	ldr	r5, [pc, #84]	@ (800bb44 <vTaskSwitchContext+0x68>)
		xYieldPending = pdFALSE;
 800baee:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800baf0:	682a      	ldr	r2, [r5, #0]
 800baf2:	4915      	ldr	r1, [pc, #84]	@ (800bb48 <vTaskSwitchContext+0x6c>)
 800baf4:	2614      	movs	r6, #20
 800baf6:	fb06 f302 	mul.w	r3, r6, r2
 800bafa:	18c8      	adds	r0, r1, r3
 800bafc:	58cc      	ldr	r4, [r1, r3]
 800bafe:	b18c      	cbz	r4, 800bb24 <vTaskSwitchContext+0x48>
 800bb00:	6844      	ldr	r4, [r0, #4]
 800bb02:	3308      	adds	r3, #8
 800bb04:	6864      	ldr	r4, [r4, #4]
 800bb06:	6044      	str	r4, [r0, #4]
 800bb08:	440b      	add	r3, r1
 800bb0a:	429c      	cmp	r4, r3
 800bb0c:	bf04      	itt	eq
 800bb0e:	6863      	ldreq	r3, [r4, #4]
 800bb10:	6043      	streq	r3, [r0, #4]
 800bb12:	2314      	movs	r3, #20
 800bb14:	fb03 1102 	mla	r1, r3, r2, r1
 800bb18:	684b      	ldr	r3, [r1, #4]
 800bb1a:	68d9      	ldr	r1, [r3, #12]
 800bb1c:	4b0b      	ldr	r3, [pc, #44]	@ (800bb4c <vTaskSwitchContext+0x70>)
 800bb1e:	6019      	str	r1, [r3, #0]
 800bb20:	602a      	str	r2, [r5, #0]
}
 800bb22:	e7e2      	b.n	800baea <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800bb24:	b942      	cbnz	r2, 800bb38 <vTaskSwitchContext+0x5c>
 800bb26:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bb2a:	f383 8811 	msr	BASEPRI, r3
 800bb2e:	f3bf 8f6f 	isb	sy
 800bb32:	f3bf 8f4f 	dsb	sy
 800bb36:	e7fe      	b.n	800bb36 <vTaskSwitchContext+0x5a>
 800bb38:	3a01      	subs	r2, #1
 800bb3a:	e7dc      	b.n	800baf6 <vTaskSwitchContext+0x1a>
 800bb3c:	20014cb8 	.word	0x20014cb8
 800bb40:	20014cc8 	.word	0x20014cc8
 800bb44:	20014cd4 	.word	0x20014cd4
 800bb48:	20014d50 	.word	0x20014d50
 800bb4c:	200151b0 	.word	0x200151b0

0800bb50 <vTaskSuspend>:
	{
 800bb50:	b570      	push	{r4, r5, r6, lr}
 800bb52:	4604      	mov	r4, r0
 800bb54:	4d26      	ldr	r5, [pc, #152]	@ (800bbf0 <vTaskSuspend+0xa0>)
		taskENTER_CRITICAL();
 800bb56:	f7fe fd8d 	bl	800a674 <vPortEnterCritical>
			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
 800bb5a:	b904      	cbnz	r4, 800bb5e <vTaskSuspend+0xe>
 800bb5c:	682c      	ldr	r4, [r5, #0]
			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800bb5e:	1d26      	adds	r6, r4, #4
 800bb60:	4630      	mov	r0, r6
 800bb62:	f7fe fd0f 	bl	800a584 <uxListRemove>
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800bb66:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800bb68:	b11b      	cbz	r3, 800bb72 <vTaskSuspend+0x22>
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800bb6a:	f104 0018 	add.w	r0, r4, #24
 800bb6e:	f7fe fd09 	bl	800a584 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
 800bb72:	4631      	mov	r1, r6
 800bb74:	481f      	ldr	r0, [pc, #124]	@ (800bbf4 <vTaskSuspend+0xa4>)
		if( xSchedulerRunning != pdFALSE )
 800bb76:	4e20      	ldr	r6, [pc, #128]	@ (800bbf8 <vTaskSuspend+0xa8>)
			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
 800bb78:	f7fe fce2 	bl	800a540 <vListInsertEnd>
				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
 800bb7c:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 800bb80:	2b01      	cmp	r3, #1
					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800bb82:	bf04      	itt	eq
 800bb84:	2300      	moveq	r3, #0
 800bb86:	f884 305c 	strbeq.w	r3, [r4, #92]	@ 0x5c
		taskEXIT_CRITICAL();
 800bb8a:	f7fe fd93 	bl	800a6b4 <vPortExitCritical>
		if( xSchedulerRunning != pdFALSE )
 800bb8e:	6833      	ldr	r3, [r6, #0]
 800bb90:	b12b      	cbz	r3, 800bb9e <vTaskSuspend+0x4e>
			taskENTER_CRITICAL();
 800bb92:	f7fe fd6f 	bl	800a674 <vPortEnterCritical>
				prvResetNextTaskUnblockTime();
 800bb96:	f7ff fc89 	bl	800b4ac <prvResetNextTaskUnblockTime>
			taskEXIT_CRITICAL();
 800bb9a:	f7fe fd8b 	bl	800a6b4 <vPortExitCritical>
		if( pxTCB == pxCurrentTCB )
 800bb9e:	682b      	ldr	r3, [r5, #0]
 800bba0:	42a3      	cmp	r3, r4
 800bba2:	d117      	bne.n	800bbd4 <vTaskSuspend+0x84>
			if( xSchedulerRunning != pdFALSE )
 800bba4:	6833      	ldr	r3, [r6, #0]
 800bba6:	b1b3      	cbz	r3, 800bbd6 <vTaskSuspend+0x86>
				configASSERT( uxSchedulerSuspended == 0 );
 800bba8:	4b14      	ldr	r3, [pc, #80]	@ (800bbfc <vTaskSuspend+0xac>)
 800bbaa:	681b      	ldr	r3, [r3, #0]
 800bbac:	b143      	cbz	r3, 800bbc0 <vTaskSuspend+0x70>
 800bbae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bbb2:	f383 8811 	msr	BASEPRI, r3
 800bbb6:	f3bf 8f6f 	isb	sy
 800bbba:	f3bf 8f4f 	dsb	sy
 800bbbe:	e7fe      	b.n	800bbbe <vTaskSuspend+0x6e>
				portYIELD_WITHIN_API();
 800bbc0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800bbc4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800bbc8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800bbcc:	f3bf 8f4f 	dsb	sy
 800bbd0:	f3bf 8f6f 	isb	sy
	}
 800bbd4:	bd70      	pop	{r4, r5, r6, pc}
				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*lint !e931 Right has no side effect, just volatile. */
 800bbd6:	4a07      	ldr	r2, [pc, #28]	@ (800bbf4 <vTaskSuspend+0xa4>)
 800bbd8:	6811      	ldr	r1, [r2, #0]
 800bbda:	4a09      	ldr	r2, [pc, #36]	@ (800bc00 <vTaskSuspend+0xb0>)
 800bbdc:	6812      	ldr	r2, [r2, #0]
 800bbde:	4291      	cmp	r1, r2
 800bbe0:	d101      	bne.n	800bbe6 <vTaskSuspend+0x96>
					pxCurrentTCB = NULL;
 800bbe2:	602b      	str	r3, [r5, #0]
 800bbe4:	e7f6      	b.n	800bbd4 <vTaskSuspend+0x84>
	}
 800bbe6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
					vTaskSwitchContext();
 800bbea:	f7ff bf77 	b.w	800badc <vTaskSwitchContext>
 800bbee:	bf00      	nop
 800bbf0:	200151b0 	.word	0x200151b0
 800bbf4:	20014ce0 	.word	0x20014ce0
 800bbf8:	20014cd0 	.word	0x20014cd0
 800bbfc:	20014cb8 	.word	0x20014cb8
 800bc00:	20014cdc 	.word	0x20014cdc

0800bc04 <vTaskPlaceOnEventList>:
{
 800bc04:	b510      	push	{r4, lr}
 800bc06:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800bc08:	b940      	cbnz	r0, 800bc1c <vTaskPlaceOnEventList+0x18>
 800bc0a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bc0e:	f383 8811 	msr	BASEPRI, r3
 800bc12:	f3bf 8f6f 	isb	sy
 800bc16:	f3bf 8f4f 	dsb	sy
 800bc1a:	e7fe      	b.n	800bc1a <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800bc1c:	4b05      	ldr	r3, [pc, #20]	@ (800bc34 <vTaskPlaceOnEventList+0x30>)
 800bc1e:	6819      	ldr	r1, [r3, #0]
 800bc20:	3118      	adds	r1, #24
 800bc22:	f7fe fc98 	bl	800a556 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800bc26:	4620      	mov	r0, r4
 800bc28:	2101      	movs	r1, #1
}
 800bc2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800bc2e:	f7ff bbe9 	b.w	800b404 <prvAddCurrentTaskToDelayedList>
 800bc32:	bf00      	nop
 800bc34:	200151b0 	.word	0x200151b0

0800bc38 <vTaskPlaceOnEventListRestricted>:
	{
 800bc38:	b538      	push	{r3, r4, r5, lr}
 800bc3a:	460d      	mov	r5, r1
 800bc3c:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800bc3e:	b940      	cbnz	r0, 800bc52 <vTaskPlaceOnEventListRestricted+0x1a>
 800bc40:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bc44:	f383 8811 	msr	BASEPRI, r3
 800bc48:	f3bf 8f6f 	isb	sy
 800bc4c:	f3bf 8f4f 	dsb	sy
 800bc50:	e7fe      	b.n	800bc50 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800bc52:	4b07      	ldr	r3, [pc, #28]	@ (800bc70 <vTaskPlaceOnEventListRestricted+0x38>)
 800bc54:	6819      	ldr	r1, [r3, #0]
 800bc56:	3118      	adds	r1, #24
 800bc58:	f7fe fc72 	bl	800a540 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800bc5c:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800bc5e:	4621      	mov	r1, r4
 800bc60:	bf0c      	ite	eq
 800bc62:	4628      	moveq	r0, r5
 800bc64:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800bc68:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800bc6c:	f7ff bbca 	b.w	800b404 <prvAddCurrentTaskToDelayedList>
 800bc70:	200151b0 	.word	0x200151b0

0800bc74 <xTaskRemoveFromEventList>:
{
 800bc74:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800bc76:	68c3      	ldr	r3, [r0, #12]
 800bc78:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800bc7a:	b944      	cbnz	r4, 800bc8e <xTaskRemoveFromEventList+0x1a>
 800bc7c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bc80:	f383 8811 	msr	BASEPRI, r3
 800bc84:	f3bf 8f6f 	isb	sy
 800bc88:	f3bf 8f4f 	dsb	sy
 800bc8c:	e7fe      	b.n	800bc8c <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800bc8e:	f104 0518 	add.w	r5, r4, #24
 800bc92:	4628      	mov	r0, r5
 800bc94:	f7fe fc76 	bl	800a584 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800bc98:	4b10      	ldr	r3, [pc, #64]	@ (800bcdc <xTaskRemoveFromEventList+0x68>)
 800bc9a:	681b      	ldr	r3, [r3, #0]
 800bc9c:	b9db      	cbnz	r3, 800bcd6 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800bc9e:	1d25      	adds	r5, r4, #4
 800bca0:	4628      	mov	r0, r5
 800bca2:	f7fe fc6f 	bl	800a584 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800bca6:	4a0e      	ldr	r2, [pc, #56]	@ (800bce0 <xTaskRemoveFromEventList+0x6c>)
 800bca8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800bcaa:	6811      	ldr	r1, [r2, #0]
 800bcac:	428b      	cmp	r3, r1
 800bcae:	bf88      	it	hi
 800bcb0:	6013      	strhi	r3, [r2, #0]
 800bcb2:	4a0c      	ldr	r2, [pc, #48]	@ (800bce4 <xTaskRemoveFromEventList+0x70>)
 800bcb4:	2014      	movs	r0, #20
 800bcb6:	4629      	mov	r1, r5
 800bcb8:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800bcbc:	f7fe fc40 	bl	800a540 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800bcc0:	4b09      	ldr	r3, [pc, #36]	@ (800bce8 <xTaskRemoveFromEventList+0x74>)
 800bcc2:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800bcc4:	681b      	ldr	r3, [r3, #0]
 800bcc6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bcc8:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800bcca:	bf83      	ittte	hi
 800bccc:	4b07      	ldrhi	r3, [pc, #28]	@ (800bcec <xTaskRemoveFromEventList+0x78>)
 800bcce:	2001      	movhi	r0, #1
 800bcd0:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 800bcd2:	2000      	movls	r0, #0
}
 800bcd4:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800bcd6:	4806      	ldr	r0, [pc, #24]	@ (800bcf0 <xTaskRemoveFromEventList+0x7c>)
 800bcd8:	4629      	mov	r1, r5
 800bcda:	e7ef      	b.n	800bcbc <xTaskRemoveFromEventList+0x48>
 800bcdc:	20014cb8 	.word	0x20014cb8
 800bce0:	20014cd4 	.word	0x20014cd4
 800bce4:	20014d50 	.word	0x20014d50
 800bce8:	200151b0 	.word	0x200151b0
 800bcec:	20014cc8 	.word	0x20014cc8
 800bcf0:	20014d0c 	.word	0x20014d0c

0800bcf4 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800bcf4:	4b03      	ldr	r3, [pc, #12]	@ (800bd04 <vTaskInternalSetTimeOutState+0x10>)
 800bcf6:	681b      	ldr	r3, [r3, #0]
 800bcf8:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800bcfa:	4b03      	ldr	r3, [pc, #12]	@ (800bd08 <vTaskInternalSetTimeOutState+0x14>)
 800bcfc:	681b      	ldr	r3, [r3, #0]
 800bcfe:	6043      	str	r3, [r0, #4]
}
 800bd00:	4770      	bx	lr
 800bd02:	bf00      	nop
 800bd04:	20014cc4 	.word	0x20014cc4
 800bd08:	20014cd8 	.word	0x20014cd8

0800bd0c <xTaskCheckForTimeOut>:
{
 800bd0c:	b570      	push	{r4, r5, r6, lr}
 800bd0e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800bd10:	4605      	mov	r5, r0
 800bd12:	b940      	cbnz	r0, 800bd26 <xTaskCheckForTimeOut+0x1a>
 800bd14:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bd18:	f383 8811 	msr	BASEPRI, r3
 800bd1c:	f3bf 8f6f 	isb	sy
 800bd20:	f3bf 8f4f 	dsb	sy
 800bd24:	e7fe      	b.n	800bd24 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800bd26:	b941      	cbnz	r1, 800bd3a <xTaskCheckForTimeOut+0x2e>
 800bd28:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bd2c:	f383 8811 	msr	BASEPRI, r3
 800bd30:	f3bf 8f6f 	isb	sy
 800bd34:	f3bf 8f4f 	dsb	sy
 800bd38:	e7fe      	b.n	800bd38 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800bd3a:	f7fe fc9b 	bl	800a674 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800bd3e:	4b0f      	ldr	r3, [pc, #60]	@ (800bd7c <xTaskCheckForTimeOut+0x70>)
 800bd40:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800bd42:	6823      	ldr	r3, [r4, #0]
 800bd44:	1c5a      	adds	r2, r3, #1
 800bd46:	d010      	beq.n	800bd6a <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800bd48:	480d      	ldr	r0, [pc, #52]	@ (800bd80 <xTaskCheckForTimeOut+0x74>)
 800bd4a:	682e      	ldr	r6, [r5, #0]
 800bd4c:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800bd4e:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800bd50:	4286      	cmp	r6, r0
 800bd52:	d001      	beq.n	800bd58 <xTaskCheckForTimeOut+0x4c>
 800bd54:	428a      	cmp	r2, r1
 800bd56:	d90f      	bls.n	800bd78 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800bd58:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800bd5a:	4283      	cmp	r3, r0
 800bd5c:	d90a      	bls.n	800bd74 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800bd5e:	1a5b      	subs	r3, r3, r1
 800bd60:	4413      	add	r3, r2
 800bd62:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800bd64:	4628      	mov	r0, r5
 800bd66:	f7ff ffc5 	bl	800bcf4 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800bd6a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800bd6c:	f7fe fca2 	bl	800a6b4 <vPortExitCritical>
}
 800bd70:	4620      	mov	r0, r4
 800bd72:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800bd74:	2300      	movs	r3, #0
 800bd76:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800bd78:	2401      	movs	r4, #1
 800bd7a:	e7f7      	b.n	800bd6c <xTaskCheckForTimeOut+0x60>
 800bd7c:	20014cd8 	.word	0x20014cd8
 800bd80:	20014cc4 	.word	0x20014cc4

0800bd84 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800bd84:	4b01      	ldr	r3, [pc, #4]	@ (800bd8c <vTaskMissedYield+0x8>)
 800bd86:	2201      	movs	r2, #1
 800bd88:	601a      	str	r2, [r3, #0]
}
 800bd8a:	4770      	bx	lr
 800bd8c:	20014cc8 	.word	0x20014cc8

0800bd90 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800bd90:	4b05      	ldr	r3, [pc, #20]	@ (800bda8 <xTaskGetSchedulerState+0x18>)
 800bd92:	681b      	ldr	r3, [r3, #0]
 800bd94:	b133      	cbz	r3, 800bda4 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800bd96:	4b05      	ldr	r3, [pc, #20]	@ (800bdac <xTaskGetSchedulerState+0x1c>)
 800bd98:	6818      	ldr	r0, [r3, #0]
 800bd9a:	fab0 f080 	clz	r0, r0
 800bd9e:	0940      	lsrs	r0, r0, #5
 800bda0:	0040      	lsls	r0, r0, #1
 800bda2:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800bda4:	2001      	movs	r0, #1
	}
 800bda6:	4770      	bx	lr
 800bda8:	20014cd0 	.word	0x20014cd0
 800bdac:	20014cb8 	.word	0x20014cb8

0800bdb0 <xTaskPriorityInherit>:
	{
 800bdb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 800bdb2:	4604      	mov	r4, r0
 800bdb4:	b338      	cbz	r0, 800be06 <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800bdb6:	4d1a      	ldr	r5, [pc, #104]	@ (800be20 <xTaskPriorityInherit+0x70>)
 800bdb8:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800bdba:	682a      	ldr	r2, [r5, #0]
 800bdbc:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800bdbe:	4293      	cmp	r3, r2
 800bdc0:	d226      	bcs.n	800be10 <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800bdc2:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800bdc4:	4e17      	ldr	r6, [pc, #92]	@ (800be24 <xTaskPriorityInherit+0x74>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800bdc6:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800bdc8:	bfa1      	itttt	ge
 800bdca:	682a      	ldrge	r2, [r5, #0]
 800bdcc:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 800bdce:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 800bdd2:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800bdd4:	2214      	movs	r2, #20
 800bdd6:	fb02 6303 	mla	r3, r2, r3, r6
 800bdda:	6942      	ldr	r2, [r0, #20]
 800bddc:	429a      	cmp	r2, r3
 800bdde:	d113      	bne.n	800be08 <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800bde0:	1d07      	adds	r7, r0, #4
 800bde2:	4638      	mov	r0, r7
 800bde4:	f7fe fbce 	bl	800a584 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800bde8:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800bdea:	4a0f      	ldr	r2, [pc, #60]	@ (800be28 <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800bdec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800bdee:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800bdf0:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800bdf2:	2014      	movs	r0, #20
 800bdf4:	428b      	cmp	r3, r1
 800bdf6:	fb00 6003 	mla	r0, r0, r3, r6
 800bdfa:	4639      	mov	r1, r7
 800bdfc:	bf88      	it	hi
 800bdfe:	6013      	strhi	r3, [r2, #0]
 800be00:	f7fe fb9e 	bl	800a540 <vListInsertEnd>
				xReturn = pdTRUE;
 800be04:	2001      	movs	r0, #1
	}
 800be06:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800be08:	682b      	ldr	r3, [r5, #0]
 800be0a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800be0c:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800be0e:	e7f9      	b.n	800be04 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800be10:	682b      	ldr	r3, [r5, #0]
 800be12:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 800be14:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800be16:	4298      	cmp	r0, r3
 800be18:	bf2c      	ite	cs
 800be1a:	2000      	movcs	r0, #0
 800be1c:	2001      	movcc	r0, #1
 800be1e:	e7f2      	b.n	800be06 <xTaskPriorityInherit+0x56>
 800be20:	200151b0 	.word	0x200151b0
 800be24:	20014d50 	.word	0x20014d50
 800be28:	20014cd4 	.word	0x20014cd4

0800be2c <xTaskPriorityDisinherit>:
	{
 800be2c:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800be2e:	b908      	cbnz	r0, 800be34 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 800be30:	2000      	movs	r0, #0
	}
 800be32:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800be34:	4b1b      	ldr	r3, [pc, #108]	@ (800bea4 <xTaskPriorityDisinherit+0x78>)
 800be36:	681c      	ldr	r4, [r3, #0]
 800be38:	4284      	cmp	r4, r0
 800be3a:	d008      	beq.n	800be4e <xTaskPriorityDisinherit+0x22>
 800be3c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800be40:	f383 8811 	msr	BASEPRI, r3
 800be44:	f3bf 8f6f 	isb	sy
 800be48:	f3bf 8f4f 	dsb	sy
 800be4c:	e7fe      	b.n	800be4c <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 800be4e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 800be50:	b943      	cbnz	r3, 800be64 <xTaskPriorityDisinherit+0x38>
 800be52:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800be56:	f383 8811 	msr	BASEPRI, r3
 800be5a:	f3bf 8f6f 	isb	sy
 800be5e:	f3bf 8f4f 	dsb	sy
 800be62:	e7fe      	b.n	800be62 <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800be64:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800be66:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 800be68:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800be6a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800be6c:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800be6e:	d0df      	beq.n	800be30 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800be70:	2b00      	cmp	r3, #0
 800be72:	d1dd      	bne.n	800be30 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800be74:	1d25      	adds	r5, r4, #4
 800be76:	4628      	mov	r0, r5
 800be78:	f7fe fb84 	bl	800a584 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800be7c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800be7e:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800be80:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 800be84:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800be86:	4a08      	ldr	r2, [pc, #32]	@ (800bea8 <xTaskPriorityDisinherit+0x7c>)
 800be88:	6811      	ldr	r1, [r2, #0]
 800be8a:	428b      	cmp	r3, r1
 800be8c:	bf88      	it	hi
 800be8e:	6013      	strhi	r3, [r2, #0]
 800be90:	4a06      	ldr	r2, [pc, #24]	@ (800beac <xTaskPriorityDisinherit+0x80>)
 800be92:	2014      	movs	r0, #20
 800be94:	fb00 2003 	mla	r0, r0, r3, r2
 800be98:	4629      	mov	r1, r5
 800be9a:	f7fe fb51 	bl	800a540 <vListInsertEnd>
					xReturn = pdTRUE;
 800be9e:	2001      	movs	r0, #1
		return xReturn;
 800bea0:	e7c7      	b.n	800be32 <xTaskPriorityDisinherit+0x6>
 800bea2:	bf00      	nop
 800bea4:	200151b0 	.word	0x200151b0
 800bea8:	20014cd4 	.word	0x20014cd4
 800beac:	20014d50 	.word	0x20014d50

0800beb0 <vTaskPriorityDisinheritAfterTimeout>:
	{
 800beb0:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800beb2:	4604      	mov	r4, r0
 800beb4:	2800      	cmp	r0, #0
 800beb6:	d041      	beq.n	800bf3c <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 800beb8:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 800beba:	b942      	cbnz	r2, 800bece <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800bebc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bec0:	f383 8811 	msr	BASEPRI, r3
 800bec4:	f3bf 8f6f 	isb	sy
 800bec8:	f3bf 8f4f 	dsb	sy
 800becc:	e7fe      	b.n	800becc <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800bece:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 800bed0:	4299      	cmp	r1, r3
 800bed2:	bf38      	it	cc
 800bed4:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800bed6:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800bed8:	428b      	cmp	r3, r1
 800beda:	d02f      	beq.n	800bf3c <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800bedc:	2a01      	cmp	r2, #1
 800bede:	d12d      	bne.n	800bf3c <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 800bee0:	4a17      	ldr	r2, [pc, #92]	@ (800bf40 <vTaskPriorityDisinheritAfterTimeout+0x90>)
 800bee2:	6812      	ldr	r2, [r2, #0]
 800bee4:	4282      	cmp	r2, r0
 800bee6:	d108      	bne.n	800befa <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800bee8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800beec:	f383 8811 	msr	BASEPRI, r3
 800bef0:	f3bf 8f6f 	isb	sy
 800bef4:	f3bf 8f4f 	dsb	sy
 800bef8:	e7fe      	b.n	800bef8 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800befa:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800befc:	4d11      	ldr	r5, [pc, #68]	@ (800bf44 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 800befe:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800bf00:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800bf02:	f04f 0214 	mov.w	r2, #20
 800bf06:	fb02 5303 	mla	r3, r2, r3, r5
 800bf0a:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800bf0c:	bfa4      	itt	ge
 800bf0e:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 800bf12:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800bf14:	429a      	cmp	r2, r3
 800bf16:	d111      	bne.n	800bf3c <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800bf18:	1d06      	adds	r6, r0, #4
 800bf1a:	4630      	mov	r0, r6
 800bf1c:	f7fe fb32 	bl	800a584 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800bf20:	4a09      	ldr	r2, [pc, #36]	@ (800bf48 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800bf22:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800bf24:	6811      	ldr	r1, [r2, #0]
 800bf26:	2014      	movs	r0, #20
 800bf28:	428b      	cmp	r3, r1
 800bf2a:	fb00 5003 	mla	r0, r0, r3, r5
 800bf2e:	4631      	mov	r1, r6
	}
 800bf30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 800bf34:	bf88      	it	hi
 800bf36:	6013      	strhi	r3, [r2, #0]
 800bf38:	f7fe bb02 	b.w	800a540 <vListInsertEnd>
	}
 800bf3c:	bd70      	pop	{r4, r5, r6, pc}
 800bf3e:	bf00      	nop
 800bf40:	200151b0 	.word	0x200151b0
 800bf44:	20014d50 	.word	0x20014d50
 800bf48:	20014cd4 	.word	0x20014cd4

0800bf4c <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800bf4c:	4b04      	ldr	r3, [pc, #16]	@ (800bf60 <pvTaskIncrementMutexHeldCount+0x14>)
 800bf4e:	681a      	ldr	r2, [r3, #0]
 800bf50:	b11a      	cbz	r2, 800bf5a <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800bf52:	6819      	ldr	r1, [r3, #0]
 800bf54:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 800bf56:	3201      	adds	r2, #1
 800bf58:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 800bf5a:	6818      	ldr	r0, [r3, #0]
	}
 800bf5c:	4770      	bx	lr
 800bf5e:	bf00      	nop
 800bf60:	200151b0 	.word	0x200151b0

0800bf64 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 800bf64:	4291      	cmp	r1, r2
{
 800bf66:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800bf68:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800bf6a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800bf6c:	d80a      	bhi.n	800bf84 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800bf6e:	1ad2      	subs	r2, r2, r3
 800bf70:	6983      	ldr	r3, [r0, #24]
 800bf72:	429a      	cmp	r2, r3
 800bf74:	d20d      	bcs.n	800bf92 <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800bf76:	4b08      	ldr	r3, [pc, #32]	@ (800bf98 <prvInsertTimerInActiveList+0x34>)
 800bf78:	1d01      	adds	r1, r0, #4
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800bf7a:	6818      	ldr	r0, [r3, #0]
 800bf7c:	f7fe faeb 	bl	800a556 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800bf80:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 800bf82:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800bf84:	429a      	cmp	r2, r3
 800bf86:	d201      	bcs.n	800bf8c <prvInsertTimerInActiveList+0x28>
 800bf88:	4299      	cmp	r1, r3
 800bf8a:	d202      	bcs.n	800bf92 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800bf8c:	4b03      	ldr	r3, [pc, #12]	@ (800bf9c <prvInsertTimerInActiveList+0x38>)
 800bf8e:	1d01      	adds	r1, r0, #4
 800bf90:	e7f3      	b.n	800bf7a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800bf92:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800bf94:	e7f5      	b.n	800bf82 <prvInsertTimerInActiveList+0x1e>
 800bf96:	bf00      	nop
 800bf98:	200152b0 	.word	0x200152b0
 800bf9c:	200152b4 	.word	0x200152b4

0800bfa0 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800bfa0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800bfa2:	4c11      	ldr	r4, [pc, #68]	@ (800bfe8 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800bfa4:	f7fe fb66 	bl	800a674 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800bfa8:	6825      	ldr	r5, [r4, #0]
 800bfaa:	b9bd      	cbnz	r5, 800bfdc <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800bfac:	4f0f      	ldr	r7, [pc, #60]	@ (800bfec <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800bfae:	4e10      	ldr	r6, [pc, #64]	@ (800bff0 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800bfb0:	4638      	mov	r0, r7
 800bfb2:	f7fe fab7 	bl	800a524 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800bfb6:	4630      	mov	r0, r6
 800bfb8:	f7fe fab4 	bl	800a524 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800bfbc:	4b0d      	ldr	r3, [pc, #52]	@ (800bff4 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800bfbe:	4a0e      	ldr	r2, [pc, #56]	@ (800bff8 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800bfc0:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800bfc2:	4b0e      	ldr	r3, [pc, #56]	@ (800bffc <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800bfc4:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800bfc6:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800bfc8:	200a      	movs	r0, #10
 800bfca:	4b0d      	ldr	r3, [pc, #52]	@ (800c000 <prvCheckForValidListAndQueue+0x60>)
 800bfcc:	9500      	str	r5, [sp, #0]
 800bfce:	f7fe fd5a 	bl	800aa86 <xQueueGenericCreateStatic>
 800bfd2:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800bfd4:	b110      	cbz	r0, 800bfdc <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800bfd6:	490b      	ldr	r1, [pc, #44]	@ (800c004 <prvCheckForValidListAndQueue+0x64>)
 800bfd8:	f7ff f932 	bl	800b240 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800bfdc:	b003      	add	sp, #12
 800bfde:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800bfe2:	f7fe bb67 	b.w	800a6b4 <vPortExitCritical>
 800bfe6:	bf00      	nop
 800bfe8:	200152ac 	.word	0x200152ac
 800bfec:	200152cc 	.word	0x200152cc
 800bff0:	200152b8 	.word	0x200152b8
 800bff4:	200152b4 	.word	0x200152b4
 800bff8:	20015204 	.word	0x20015204
 800bffc:	200152b0 	.word	0x200152b0
 800c000:	200151b4 	.word	0x200151b4
 800c004:	08027735 	.word	0x08027735

0800c008 <xTimerCreateTimerTask>:
{
 800c008:	b510      	push	{r4, lr}
 800c00a:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800c00c:	f7ff ffc8 	bl	800bfa0 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800c010:	4b12      	ldr	r3, [pc, #72]	@ (800c05c <xTimerCreateTimerTask+0x54>)
 800c012:	681b      	ldr	r3, [r3, #0]
 800c014:	b1b3      	cbz	r3, 800c044 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800c016:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800c018:	aa07      	add	r2, sp, #28
 800c01a:	a906      	add	r1, sp, #24
 800c01c:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800c01e:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800c022:	f7fe f977 	bl	800a314 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800c026:	9b05      	ldr	r3, [sp, #20]
 800c028:	9302      	str	r3, [sp, #8]
 800c02a:	9b06      	ldr	r3, [sp, #24]
 800c02c:	9301      	str	r3, [sp, #4]
 800c02e:	2302      	movs	r3, #2
 800c030:	9300      	str	r3, [sp, #0]
 800c032:	9a07      	ldr	r2, [sp, #28]
 800c034:	490a      	ldr	r1, [pc, #40]	@ (800c060 <xTimerCreateTimerTask+0x58>)
 800c036:	480b      	ldr	r0, [pc, #44]	@ (800c064 <xTimerCreateTimerTask+0x5c>)
 800c038:	4623      	mov	r3, r4
 800c03a:	f7ff fae2 	bl	800b602 <xTaskCreateStatic>
 800c03e:	4b0a      	ldr	r3, [pc, #40]	@ (800c068 <xTimerCreateTimerTask+0x60>)
 800c040:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800c042:	b940      	cbnz	r0, 800c056 <xTimerCreateTimerTask+0x4e>
 800c044:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c048:	f383 8811 	msr	BASEPRI, r3
 800c04c:	f3bf 8f6f 	isb	sy
 800c050:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800c054:	e7fe      	b.n	800c054 <xTimerCreateTimerTask+0x4c>
}
 800c056:	2001      	movs	r0, #1
 800c058:	b008      	add	sp, #32
 800c05a:	bd10      	pop	{r4, pc}
 800c05c:	200152ac 	.word	0x200152ac
 800c060:	0802773a 	.word	0x0802773a
 800c064:	0800c169 	.word	0x0800c169
 800c068:	200152a8 	.word	0x200152a8

0800c06c <xTimerGenericCommand>:
{
 800c06c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c06e:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800c070:	4604      	mov	r4, r0
{
 800c072:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800c074:	b940      	cbnz	r0, 800c088 <xTimerGenericCommand+0x1c>
 800c076:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c07a:	f383 8811 	msr	BASEPRI, r3
 800c07e:	f3bf 8f6f 	isb	sy
 800c082:	f3bf 8f4f 	dsb	sy
 800c086:	e7fe      	b.n	800c086 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800c088:	4d0d      	ldr	r5, [pc, #52]	@ (800c0c0 <xTimerGenericCommand+0x54>)
 800c08a:	6828      	ldr	r0, [r5, #0]
 800c08c:	b180      	cbz	r0, 800c0b0 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800c08e:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800c090:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800c094:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800c096:	dc0d      	bgt.n	800c0b4 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800c098:	f7ff fe7a 	bl	800bd90 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800c09c:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800c09e:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800c0a0:	bf08      	it	eq
 800c0a2:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800c0a4:	6828      	ldr	r0, [r5, #0]
 800c0a6:	bf18      	it	ne
 800c0a8:	461a      	movne	r2, r3
 800c0aa:	4669      	mov	r1, sp
 800c0ac:	f7fe fda0 	bl	800abf0 <xQueueGenericSend>
}
 800c0b0:	b004      	add	sp, #16
 800c0b2:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800c0b4:	2300      	movs	r3, #0
 800c0b6:	4669      	mov	r1, sp
 800c0b8:	f7fe fe4c 	bl	800ad54 <xQueueGenericSendFromISR>
 800c0bc:	e7f8      	b.n	800c0b0 <xTimerGenericCommand+0x44>
 800c0be:	bf00      	nop
 800c0c0:	200152ac 	.word	0x200152ac

0800c0c4 <prvSampleTimeNow>:
{
 800c0c4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800c0c8:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 800c164 <prvSampleTimeNow+0xa0>
{
 800c0cc:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800c0ce:	f7ff fbd1 	bl	800b874 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800c0d2:	f8d8 3000 	ldr.w	r3, [r8]
 800c0d6:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800c0d8:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800c0da:	d909      	bls.n	800c0f0 <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800c0dc:	4f1f      	ldr	r7, [pc, #124]	@ (800c15c <prvSampleTimeNow+0x98>)
 800c0de:	683b      	ldr	r3, [r7, #0]
 800c0e0:	681a      	ldr	r2, [r3, #0]
 800c0e2:	b96a      	cbnz	r2, 800c100 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800c0e4:	4a1e      	ldr	r2, [pc, #120]	@ (800c160 <prvSampleTimeNow+0x9c>)
 800c0e6:	6811      	ldr	r1, [r2, #0]
 800c0e8:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800c0ea:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800c0ec:	2301      	movs	r3, #1
 800c0ee:	e000      	b.n	800c0f2 <prvSampleTimeNow+0x2e>
 800c0f0:	2300      	movs	r3, #0
}
 800c0f2:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 800c0f4:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800c0f6:	f8c8 5000 	str.w	r5, [r8]
}
 800c0fa:	b002      	add	sp, #8
 800c0fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800c100:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800c102:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800c104:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800c108:	f104 0a04 	add.w	sl, r4, #4
 800c10c:	4650      	mov	r0, sl
 800c10e:	f7fe fa39 	bl	800a584 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800c112:	6a23      	ldr	r3, [r4, #32]
 800c114:	4620      	mov	r0, r4
 800c116:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800c118:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800c11c:	075b      	lsls	r3, r3, #29
 800c11e:	d5de      	bpl.n	800c0de <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800c120:	69a3      	ldr	r3, [r4, #24]
 800c122:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 800c124:	4599      	cmp	r9, r3
 800c126:	d206      	bcs.n	800c136 <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800c128:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800c12a:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800c12c:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800c12e:	4651      	mov	r1, sl
 800c130:	f7fe fa11 	bl	800a556 <vListInsert>
 800c134:	e7d3      	b.n	800c0de <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800c136:	2300      	movs	r3, #0
 800c138:	9300      	str	r3, [sp, #0]
 800c13a:	464a      	mov	r2, r9
 800c13c:	4619      	mov	r1, r3
 800c13e:	4620      	mov	r0, r4
 800c140:	f7ff ff94 	bl	800c06c <xTimerGenericCommand>
				configASSERT( xResult );
 800c144:	2800      	cmp	r0, #0
 800c146:	d1ca      	bne.n	800c0de <prvSampleTimeNow+0x1a>
 800c148:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c14c:	f383 8811 	msr	BASEPRI, r3
 800c150:	f3bf 8f6f 	isb	sy
 800c154:	f3bf 8f4f 	dsb	sy
 800c158:	e7fe      	b.n	800c158 <prvSampleTimeNow+0x94>
 800c15a:	bf00      	nop
 800c15c:	200152b4 	.word	0x200152b4
 800c160:	200152b0 	.word	0x200152b0
 800c164:	200152a4 	.word	0x200152a4

0800c168 <prvTimerTask>:
{
 800c168:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800c16c:	4d6e      	ldr	r5, [pc, #440]	@ (800c328 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800c16e:	4e6f      	ldr	r6, [pc, #444]	@ (800c32c <prvTimerTask+0x1c4>)
{
 800c170:	b089      	sub	sp, #36	@ 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800c172:	682b      	ldr	r3, [r5, #0]
 800c174:	f8d3 8000 	ldr.w	r8, [r3]
 800c178:	f1b8 0f00 	cmp.w	r8, #0
 800c17c:	d035      	beq.n	800c1ea <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800c17e:	68db      	ldr	r3, [r3, #12]
 800c180:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800c184:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800c186:	f7ff fb6d 	bl	800b864 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800c18a:	a804      	add	r0, sp, #16
 800c18c:	f7ff ff9a 	bl	800c0c4 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800c190:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800c192:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800c194:	2b00      	cmp	r3, #0
 800c196:	d169      	bne.n	800c26c <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800c198:	2c00      	cmp	r4, #0
 800c19a:	d14c      	bne.n	800c236 <prvTimerTask+0xce>
 800c19c:	4540      	cmp	r0, r8
 800c19e:	d350      	bcc.n	800c242 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800c1a0:	f7ff fc04 	bl	800b9ac <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800c1a4:	682b      	ldr	r3, [r5, #0]
 800c1a6:	68db      	ldr	r3, [r3, #12]
 800c1a8:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800c1aa:	1d38      	adds	r0, r7, #4
 800c1ac:	f7fe f9ea 	bl	800a584 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800c1b0:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 800c1b4:	0758      	lsls	r0, r3, #29
 800c1b6:	d51a      	bpl.n	800c1ee <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800c1b8:	69b9      	ldr	r1, [r7, #24]
 800c1ba:	4643      	mov	r3, r8
 800c1bc:	464a      	mov	r2, r9
 800c1be:	4441      	add	r1, r8
 800c1c0:	4638      	mov	r0, r7
 800c1c2:	f7ff fecf 	bl	800bf64 <prvInsertTimerInActiveList>
 800c1c6:	b1b0      	cbz	r0, 800c1f6 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800c1c8:	9400      	str	r4, [sp, #0]
 800c1ca:	4623      	mov	r3, r4
 800c1cc:	4642      	mov	r2, r8
 800c1ce:	4621      	mov	r1, r4
 800c1d0:	4638      	mov	r0, r7
 800c1d2:	f7ff ff4b 	bl	800c06c <xTimerGenericCommand>
			configASSERT( xResult );
 800c1d6:	b970      	cbnz	r0, 800c1f6 <prvTimerTask+0x8e>
 800c1d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c1dc:	f383 8811 	msr	BASEPRI, r3
 800c1e0:	f3bf 8f6f 	isb	sy
 800c1e4:	f3bf 8f4f 	dsb	sy
 800c1e8:	e7fe      	b.n	800c1e8 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800c1ea:	2401      	movs	r4, #1
 800c1ec:	e7cb      	b.n	800c186 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800c1ee:	f023 0301 	bic.w	r3, r3, #1
 800c1f2:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800c1f6:	6a3b      	ldr	r3, [r7, #32]
 800c1f8:	4638      	mov	r0, r7
 800c1fa:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800c1fc:	6830      	ldr	r0, [r6, #0]
 800c1fe:	2200      	movs	r2, #0
 800c200:	a904      	add	r1, sp, #16
 800c202:	f7fe fe55 	bl	800aeb0 <xQueueReceive>
 800c206:	2800      	cmp	r0, #0
 800c208:	d0b3      	beq.n	800c172 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800c20a:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800c20c:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800c20e:	2b00      	cmp	r3, #0
 800c210:	db2f      	blt.n	800c272 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800c212:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800c214:	6963      	ldr	r3, [r4, #20]
 800c216:	2b00      	cmp	r3, #0
 800c218:	d132      	bne.n	800c280 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800c21a:	a803      	add	r0, sp, #12
 800c21c:	f7ff ff52 	bl	800c0c4 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800c220:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800c222:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800c224:	2b09      	cmp	r3, #9
 800c226:	d8e9      	bhi.n	800c1fc <prvTimerTask+0x94>
 800c228:	e8df f003 	tbb	[pc, r3]
 800c22c:	572e2e2e 	.word	0x572e2e2e
 800c230:	2e2e765e 	.word	0x2e2e765e
 800c234:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800c236:	4b3e      	ldr	r3, [pc, #248]	@ (800c330 <prvTimerTask+0x1c8>)
 800c238:	681b      	ldr	r3, [r3, #0]
 800c23a:	681c      	ldr	r4, [r3, #0]
 800c23c:	fab4 f484 	clz	r4, r4
 800c240:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800c242:	6830      	ldr	r0, [r6, #0]
 800c244:	4622      	mov	r2, r4
 800c246:	eba8 0109 	sub.w	r1, r8, r9
 800c24a:	f7ff f838 	bl	800b2be <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800c24e:	f7ff fbad 	bl	800b9ac <xTaskResumeAll>
 800c252:	2800      	cmp	r0, #0
 800c254:	d1d2      	bne.n	800c1fc <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800c256:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800c25a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800c25e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800c262:	f3bf 8f4f 	dsb	sy
 800c266:	f3bf 8f6f 	isb	sy
 800c26a:	e7c7      	b.n	800c1fc <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800c26c:	f7ff fb9e 	bl	800b9ac <xTaskResumeAll>
}
 800c270:	e7c4      	b.n	800c1fc <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800c272:	9b05      	ldr	r3, [sp, #20]
 800c274:	9907      	ldr	r1, [sp, #28]
 800c276:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800c278:	9b04      	ldr	r3, [sp, #16]
 800c27a:	2b00      	cmp	r3, #0
 800c27c:	dbbe      	blt.n	800c1fc <prvTimerTask+0x94>
 800c27e:	e7c8      	b.n	800c212 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800c280:	1d20      	adds	r0, r4, #4
 800c282:	f7fe f97f 	bl	800a584 <uxListRemove>
 800c286:	e7c8      	b.n	800c21a <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800c288:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800c28c:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800c28e:	f043 0301 	orr.w	r3, r3, #1
 800c292:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800c296:	9b05      	ldr	r3, [sp, #20]
 800c298:	4620      	mov	r0, r4
 800c29a:	4419      	add	r1, r3
 800c29c:	f7ff fe62 	bl	800bf64 <prvInsertTimerInActiveList>
 800c2a0:	2800      	cmp	r0, #0
 800c2a2:	d0ab      	beq.n	800c1fc <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800c2a4:	6a23      	ldr	r3, [r4, #32]
 800c2a6:	4620      	mov	r0, r4
 800c2a8:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800c2aa:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800c2ae:	0759      	lsls	r1, r3, #29
 800c2b0:	d5a4      	bpl.n	800c1fc <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800c2b2:	69a2      	ldr	r2, [r4, #24]
 800c2b4:	9905      	ldr	r1, [sp, #20]
 800c2b6:	2300      	movs	r3, #0
 800c2b8:	440a      	add	r2, r1
 800c2ba:	9300      	str	r3, [sp, #0]
 800c2bc:	4619      	mov	r1, r3
 800c2be:	4620      	mov	r0, r4
 800c2c0:	f7ff fed4 	bl	800c06c <xTimerGenericCommand>
							configASSERT( xResult );
 800c2c4:	2800      	cmp	r0, #0
 800c2c6:	d199      	bne.n	800c1fc <prvTimerTask+0x94>
 800c2c8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c2cc:	f383 8811 	msr	BASEPRI, r3
 800c2d0:	f3bf 8f6f 	isb	sy
 800c2d4:	f3bf 8f4f 	dsb	sy
 800c2d8:	e7fe      	b.n	800c2d8 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800c2da:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800c2de:	f023 0301 	bic.w	r3, r3, #1
 800c2e2:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800c2e6:	e789      	b.n	800c1fc <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800c2e8:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800c2ec:	f043 0301 	orr.w	r3, r3, #1
 800c2f0:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800c2f4:	9905      	ldr	r1, [sp, #20]
 800c2f6:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800c2f8:	b941      	cbnz	r1, 800c30c <prvTimerTask+0x1a4>
 800c2fa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c2fe:	f383 8811 	msr	BASEPRI, r3
 800c302:	f3bf 8f6f 	isb	sy
 800c306:	f3bf 8f4f 	dsb	sy
 800c30a:	e7fe      	b.n	800c30a <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800c30c:	4603      	mov	r3, r0
 800c30e:	4401      	add	r1, r0
 800c310:	4620      	mov	r0, r4
 800c312:	f7ff fe27 	bl	800bf64 <prvInsertTimerInActiveList>
					break;
 800c316:	e771      	b.n	800c1fc <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800c318:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800c31c:	079a      	lsls	r2, r3, #30
 800c31e:	d4de      	bmi.n	800c2de <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800c320:	4620      	mov	r0, r4
 800c322:	f7fe f8c1 	bl	800a4a8 <vPortFree>
 800c326:	e769      	b.n	800c1fc <prvTimerTask+0x94>
 800c328:	200152b4 	.word	0x200152b4
 800c32c:	200152ac 	.word	0x200152ac
 800c330:	200152b0 	.word	0x200152b0

0800c334 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800c334:	8880      	ldrh	r0, [r0, #4]
 800c336:	4770      	bx	lr

0800c338 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800c338:	b570      	push	{r4, r5, r6, lr}
 800c33a:	6803      	ldr	r3, [r0, #0]
 800c33c:	4605      	mov	r5, r0
 800c33e:	460c      	mov	r4, r1
 800c340:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c342:	2100      	movs	r1, #0
 800c344:	4798      	blx	r3
 800c346:	682b      	ldr	r3, [r5, #0]
 800c348:	4606      	mov	r6, r0
 800c34a:	6a1b      	ldr	r3, [r3, #32]
 800c34c:	4628      	mov	r0, r5
 800c34e:	4798      	blx	r3
 800c350:	1ba4      	subs	r4, r4, r6
 800c352:	b2a4      	uxth	r4, r4
 800c354:	fbb4 f0f0 	udiv	r0, r4, r0
 800c358:	bd70      	pop	{r4, r5, r6, pc}

0800c35a <_ZN8touchgfx17AbstractPartition5clearEv>:
 800c35a:	2300      	movs	r3, #0
 800c35c:	8083      	strh	r3, [r0, #4]
 800c35e:	4770      	bx	lr

0800c360 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800c360:	b510      	push	{r4, lr}
 800c362:	6803      	ldr	r3, [r0, #0]
 800c364:	8881      	ldrh	r1, [r0, #4]
 800c366:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c368:	4604      	mov	r4, r0
 800c36a:	4798      	blx	r3
 800c36c:	88a3      	ldrh	r3, [r4, #4]
 800c36e:	3301      	adds	r3, #1
 800c370:	80a3      	strh	r3, [r4, #4]
 800c372:	bd10      	pop	{r4, pc}

0800c374 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800c374:	6803      	ldr	r3, [r0, #0]
 800c376:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c378:	4718      	bx	r3

0800c37a <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800c37a:	4770      	bx	lr

0800c37c <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800c37c:	4a02      	ldr	r2, [pc, #8]	@ (800c388 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800c37e:	6002      	str	r2, [r0, #0]
 800c380:	2200      	movs	r2, #0
 800c382:	8082      	strh	r2, [r0, #4]
 800c384:	4770      	bx	lr
 800c386:	bf00      	nop
 800c388:	080288b4 	.word	0x080288b4

0800c38c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800c38c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800c38e:	2000      	movs	r0, #0
 800c390:	b12b      	cbz	r3, 800c39e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800c392:	b920      	cbnz	r0, 800c39e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800c394:	1a5a      	subs	r2, r3, r1
 800c396:	4250      	negs	r0, r2
 800c398:	4150      	adcs	r0, r2
 800c39a:	699b      	ldr	r3, [r3, #24]
 800c39c:	e7f8      	b.n	800c390 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800c39e:	4770      	bx	lr

0800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800c3a0:	2300      	movs	r3, #0
 800c3a2:	6148      	str	r0, [r1, #20]
 800c3a4:	618b      	str	r3, [r1, #24]
 800c3a6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800c3a8:	b913      	cbnz	r3, 800c3b0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800c3aa:	6281      	str	r1, [r0, #40]	@ 0x28
 800c3ac:	4770      	bx	lr
 800c3ae:	4613      	mov	r3, r2
 800c3b0:	699a      	ldr	r2, [r3, #24]
 800c3b2:	2a00      	cmp	r2, #0
 800c3b4:	d1fb      	bne.n	800c3ae <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800c3b6:	6199      	str	r1, [r3, #24]
 800c3b8:	4770      	bx	lr

0800c3ba <_ZN8touchgfx9Container9removeAllEv>:
 800c3ba:	2200      	movs	r2, #0
 800c3bc:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800c3be:	b123      	cbz	r3, 800c3ca <_ZN8touchgfx9Container9removeAllEv+0x10>
 800c3c0:	6999      	ldr	r1, [r3, #24]
 800c3c2:	6281      	str	r1, [r0, #40]	@ 0x28
 800c3c4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800c3c8:	e7f8      	b.n	800c3bc <_ZN8touchgfx9Container9removeAllEv+0x2>
 800c3ca:	4770      	bx	lr

0800c3cc <_ZN8touchgfx9Container6unlinkEv>:
 800c3cc:	2300      	movs	r3, #0
 800c3ce:	6283      	str	r3, [r0, #40]	@ 0x28
 800c3d0:	4770      	bx	lr

0800c3d2 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800c3d2:	2200      	movs	r2, #0
 800c3d4:	8002      	strh	r2, [r0, #0]
 800c3d6:	8042      	strh	r2, [r0, #2]
 800c3d8:	8082      	strh	r2, [r0, #4]
 800c3da:	80c2      	strh	r2, [r0, #6]
 800c3dc:	4770      	bx	lr

0800c3de <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800c3de:	b570      	push	{r4, r5, r6, lr}
 800c3e0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800c3e2:	460d      	mov	r5, r1
 800c3e4:	4616      	mov	r6, r2
 800c3e6:	b13c      	cbz	r4, 800c3f8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800c3e8:	6823      	ldr	r3, [r4, #0]
 800c3ea:	4620      	mov	r0, r4
 800c3ec:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800c3ee:	4632      	mov	r2, r6
 800c3f0:	4629      	mov	r1, r5
 800c3f2:	4798      	blx	r3
 800c3f4:	69a4      	ldr	r4, [r4, #24]
 800c3f6:	e7f6      	b.n	800c3e6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800c3f8:	bd70      	pop	{r4, r5, r6, pc}

0800c3fa <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800c3fa:	b538      	push	{r3, r4, r5, lr}
 800c3fc:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800c3fe:	460d      	mov	r5, r1
 800c400:	b134      	cbz	r4, 800c410 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800c402:	682b      	ldr	r3, [r5, #0]
 800c404:	4621      	mov	r1, r4
 800c406:	689b      	ldr	r3, [r3, #8]
 800c408:	4628      	mov	r0, r5
 800c40a:	4798      	blx	r3
 800c40c:	69a4      	ldr	r4, [r4, #24]
 800c40e:	e7f7      	b.n	800c400 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800c410:	bd38      	pop	{r3, r4, r5, pc}

0800c412 <_ZN8touchgfx9ContainerD1Ev>:
 800c412:	4770      	bx	lr

0800c414 <_ZN8touchgfx9ContainerD0Ev>:
 800c414:	b510      	push	{r4, lr}
 800c416:	212c      	movs	r1, #44	@ 0x2c
 800c418:	4604      	mov	r4, r0
 800c41a:	f018 fa86 	bl	802492a <_ZdlPvj>
 800c41e:	4620      	mov	r0, r4
 800c420:	bd10      	pop	{r4, pc}

0800c422 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800c422:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800c424:	b19b      	cbz	r3, 800c44e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800c426:	428b      	cmp	r3, r1
 800c428:	d109      	bne.n	800c43e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800c42a:	699a      	ldr	r2, [r3, #24]
 800c42c:	2100      	movs	r1, #0
 800c42e:	6159      	str	r1, [r3, #20]
 800c430:	6282      	str	r2, [r0, #40]	@ 0x28
 800c432:	b902      	cbnz	r2, 800c436 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800c434:	4770      	bx	lr
 800c436:	6199      	str	r1, [r3, #24]
 800c438:	4770      	bx	lr
 800c43a:	4613      	mov	r3, r2
 800c43c:	b13a      	cbz	r2, 800c44e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800c43e:	699a      	ldr	r2, [r3, #24]
 800c440:	428a      	cmp	r2, r1
 800c442:	d1fa      	bne.n	800c43a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800c444:	698a      	ldr	r2, [r1, #24]
 800c446:	619a      	str	r2, [r3, #24]
 800c448:	2300      	movs	r3, #0
 800c44a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800c44e:	4770      	bx	lr

0800c450 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800c450:	b410      	push	{r4}
 800c452:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800c454:	4604      	mov	r4, r0
 800c456:	b92b      	cbnz	r3, 800c464 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800c458:	6803      	ldr	r3, [r0, #0]
 800c45a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c45e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800c460:	4611      	mov	r1, r2
 800c462:	4718      	bx	r3
 800c464:	b941      	cbnz	r1, 800c478 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800c466:	6193      	str	r3, [r2, #24]
 800c468:	6282      	str	r2, [r0, #40]	@ 0x28
 800c46a:	6154      	str	r4, [r2, #20]
 800c46c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c470:	4770      	bx	lr
 800c472:	4603      	mov	r3, r0
 800c474:	2800      	cmp	r0, #0
 800c476:	d0f9      	beq.n	800c46c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800c478:	4299      	cmp	r1, r3
 800c47a:	6998      	ldr	r0, [r3, #24]
 800c47c:	d1f9      	bne.n	800c472 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800c47e:	6190      	str	r0, [r2, #24]
 800c480:	618a      	str	r2, [r1, #24]
 800c482:	e7f2      	b.n	800c46a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800c484 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800c484:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c488:	461f      	mov	r7, r3
 800c48a:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800c48e:	460d      	mov	r5, r1
 800c490:	4616      	mov	r6, r2
 800c492:	b103      	cbz	r3, 800c496 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800c494:	6038      	str	r0, [r7, #0]
 800c496:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800c498:	b314      	cbz	r4, 800c4e0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800c49a:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800c49e:	b1eb      	cbz	r3, 800c4dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c4a0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800c4a4:	428d      	cmp	r5, r1
 800c4a6:	db19      	blt.n	800c4dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c4a8:	8923      	ldrh	r3, [r4, #8]
 800c4aa:	b289      	uxth	r1, r1
 800c4ac:	440b      	add	r3, r1
 800c4ae:	b21b      	sxth	r3, r3
 800c4b0:	429d      	cmp	r5, r3
 800c4b2:	da13      	bge.n	800c4dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c4b4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800c4b8:	4296      	cmp	r6, r2
 800c4ba:	db0f      	blt.n	800c4dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c4bc:	8963      	ldrh	r3, [r4, #10]
 800c4be:	b292      	uxth	r2, r2
 800c4c0:	4413      	add	r3, r2
 800c4c2:	b21b      	sxth	r3, r3
 800c4c4:	429e      	cmp	r6, r3
 800c4c6:	da09      	bge.n	800c4dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c4c8:	6823      	ldr	r3, [r4, #0]
 800c4ca:	1ab2      	subs	r2, r6, r2
 800c4cc:	1a69      	subs	r1, r5, r1
 800c4ce:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800c4d2:	b212      	sxth	r2, r2
 800c4d4:	463b      	mov	r3, r7
 800c4d6:	b209      	sxth	r1, r1
 800c4d8:	4620      	mov	r0, r4
 800c4da:	47c0      	blx	r8
 800c4dc:	69a4      	ldr	r4, [r4, #24]
 800c4de:	e7db      	b.n	800c498 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800c4e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c4e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800c4e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c4e8:	4c6e      	ldr	r4, [pc, #440]	@ (800c6a4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800c4ea:	b0a1      	sub	sp, #132	@ 0x84
 800c4ec:	6824      	ldr	r4, [r4, #0]
 800c4ee:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800c4f0:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800c4f4:	9303      	str	r3, [sp, #12]
 800c4f6:	2400      	movs	r4, #0
 800c4f8:	802c      	strh	r4, [r5, #0]
 800c4fa:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800c4fc:	802c      	strh	r4, [r5, #0]
 800c4fe:	601c      	str	r4, [r3, #0]
 800c500:	4606      	mov	r6, r0
 800c502:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800c506:	f7ff ffbd 	bl	800c484 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800c50a:	f1b9 0f03 	cmp.w	r9, #3
 800c50e:	f340 80c2 	ble.w	800c696 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800c512:	4631      	mov	r1, r6
 800c514:	a80c      	add	r0, sp, #48	@ 0x30
 800c516:	f006 fe85 	bl	8013224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c51a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800c51e:	9306      	str	r3, [sp, #24]
 800c520:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800c524:	9307      	str	r3, [sp, #28]
 800c526:	9b03      	ldr	r3, [sp, #12]
 800c528:	f8d3 a000 	ldr.w	sl, [r3]
 800c52c:	f1ba 0f00 	cmp.w	sl, #0
 800c530:	f000 80b4 	beq.w	800c69c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800c534:	4651      	mov	r1, sl
 800c536:	a810      	add	r0, sp, #64	@ 0x40
 800c538:	f006 fe74 	bl	8013224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c53c:	9b01      	ldr	r3, [sp, #4]
 800c53e:	9a06      	ldr	r2, [sp, #24]
 800c540:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800c544:	189d      	adds	r5, r3, r2
 800c546:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800c54a:	9a07      	ldr	r2, [sp, #28]
 800c54c:	2002      	movs	r0, #2
 800c54e:	fb91 f1f0 	sdiv	r1, r1, r0
 800c552:	4419      	add	r1, r3
 800c554:	1a6d      	subs	r5, r5, r1
 800c556:	9b02      	ldr	r3, [sp, #8]
 800c558:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800c55c:	4413      	add	r3, r2
 800c55e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800c562:	fb92 f2f0 	sdiv	r2, r2, r0
 800c566:	440a      	add	r2, r1
 800c568:	1a9b      	subs	r3, r3, r2
 800c56a:	435b      	muls	r3, r3
 800c56c:	fb05 3505 	mla	r5, r5, r5, r3
 800c570:	4f4d      	ldr	r7, [pc, #308]	@ (800c6a8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800c572:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800c574:	ac10      	add	r4, sp, #64	@ 0x40
 800c576:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c578:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800c57a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c57c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800c57e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c580:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800c584:	f1b9 0f0c 	cmp.w	r9, #12
 800c588:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800c58c:	f04f 0303 	mov.w	r3, #3
 800c590:	bfc8      	it	gt
 800c592:	4698      	movgt	r8, r3
 800c594:	f8cd 9000 	str.w	r9, [sp]
 800c598:	f04f 0400 	mov.w	r4, #0
 800c59c:	bfdc      	itt	le
 800c59e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800c5a2:	fb92 f8f3 	sdivle	r8, r2, r3
 800c5a6:	1c63      	adds	r3, r4, #1
 800c5a8:	aa10      	add	r2, sp, #64	@ 0x40
 800c5aa:	f004 0401 	and.w	r4, r4, #1
 800c5ae:	9308      	str	r3, [sp, #32]
 800c5b0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800c5b4:	9b00      	ldr	r3, [sp, #0]
 800c5b6:	fb93 f3f8 	sdiv	r3, r3, r8
 800c5ba:	b29b      	uxth	r3, r3
 800c5bc:	3404      	adds	r4, #4
 800c5be:	f04f 0b00 	mov.w	fp, #0
 800c5c2:	9304      	str	r3, [sp, #16]
 800c5c4:	9a04      	ldr	r2, [sp, #16]
 800c5c6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800c5ca:	fb13 f302 	smulbb	r3, r3, r2
 800c5ce:	9a01      	ldr	r2, [sp, #4]
 800c5d0:	b29b      	uxth	r3, r3
 800c5d2:	1899      	adds	r1, r3, r2
 800c5d4:	9305      	str	r3, [sp, #20]
 800c5d6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800c5da:	b209      	sxth	r1, r1
 800c5dc:	4299      	cmp	r1, r3
 800c5de:	db4d      	blt.n	800c67c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c5e0:	8932      	ldrh	r2, [r6, #8]
 800c5e2:	4413      	add	r3, r2
 800c5e4:	b21b      	sxth	r3, r3
 800c5e6:	4299      	cmp	r1, r3
 800c5e8:	da48      	bge.n	800c67c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c5ea:	9b04      	ldr	r3, [sp, #16]
 800c5ec:	6827      	ldr	r7, [r4, #0]
 800c5ee:	fb17 f703 	smulbb	r7, r7, r3
 800c5f2:	9b02      	ldr	r3, [sp, #8]
 800c5f4:	b2bf      	uxth	r7, r7
 800c5f6:	18fa      	adds	r2, r7, r3
 800c5f8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800c5fc:	b212      	sxth	r2, r2
 800c5fe:	429a      	cmp	r2, r3
 800c600:	db3c      	blt.n	800c67c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c602:	8970      	ldrh	r0, [r6, #10]
 800c604:	4403      	add	r3, r0
 800c606:	b21b      	sxth	r3, r3
 800c608:	429a      	cmp	r2, r3
 800c60a:	da37      	bge.n	800c67c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c60c:	2300      	movs	r3, #0
 800c60e:	930b      	str	r3, [sp, #44]	@ 0x2c
 800c610:	4630      	mov	r0, r6
 800c612:	ab0b      	add	r3, sp, #44	@ 0x2c
 800c614:	f7ff ff36 	bl	800c484 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800c618:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800c61a:	b37a      	cbz	r2, 800c67c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c61c:	4552      	cmp	r2, sl
 800c61e:	d02d      	beq.n	800c67c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c620:	4611      	mov	r1, r2
 800c622:	a80e      	add	r0, sp, #56	@ 0x38
 800c624:	9209      	str	r2, [sp, #36]	@ 0x24
 800c626:	f006 fdfd 	bl	8013224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c62a:	9a06      	ldr	r2, [sp, #24]
 800c62c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800c630:	9b01      	ldr	r3, [sp, #4]
 800c632:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800c636:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800c63a:	4413      	add	r3, r2
 800c63c:	f04f 0e02 	mov.w	lr, #2
 800c640:	fb91 f1fe 	sdiv	r1, r1, lr
 800c644:	4401      	add	r1, r0
 800c646:	1a58      	subs	r0, r3, r1
 800c648:	9a07      	ldr	r2, [sp, #28]
 800c64a:	9b02      	ldr	r3, [sp, #8]
 800c64c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800c650:	fb9c fcfe 	sdiv	ip, ip, lr
 800c654:	4413      	add	r3, r2
 800c656:	448c      	add	ip, r1
 800c658:	eba3 030c 	sub.w	r3, r3, ip
 800c65c:	435b      	muls	r3, r3
 800c65e:	fb00 3300 	mla	r3, r0, r0, r3
 800c662:	42ab      	cmp	r3, r5
 800c664:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800c666:	d208      	bcs.n	800c67a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800c668:	9803      	ldr	r0, [sp, #12]
 800c66a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800c66c:	6001      	str	r1, [r0, #0]
 800c66e:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800c670:	9805      	ldr	r0, [sp, #20]
 800c672:	8008      	strh	r0, [r1, #0]
 800c674:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800c676:	461d      	mov	r5, r3
 800c678:	800f      	strh	r7, [r1, #0]
 800c67a:	4692      	mov	sl, r2
 800c67c:	f10b 0b01 	add.w	fp, fp, #1
 800c680:	f1bb 0f04 	cmp.w	fp, #4
 800c684:	f104 0408 	add.w	r4, r4, #8
 800c688:	d19c      	bne.n	800c5c4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800c68a:	9b00      	ldr	r3, [sp, #0]
 800c68c:	9c08      	ldr	r4, [sp, #32]
 800c68e:	444b      	add	r3, r9
 800c690:	4544      	cmp	r4, r8
 800c692:	9300      	str	r3, [sp, #0]
 800c694:	d187      	bne.n	800c5a6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800c696:	b021      	add	sp, #132	@ 0x84
 800c698:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c69c:	f04f 35ff 	mov.w	r5, #4294967295
 800c6a0:	e766      	b.n	800c570 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800c6a2:	bf00      	nop
 800c6a4:	200152ec 	.word	0x200152ec
 800c6a8:	080267f8 	.word	0x080267f8

0800c6ac <_ZN8touchgfx4RectaNERKS0_>:
 800c6ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c6b0:	f9b1 7000 	ldrsh.w	r7, [r1]
 800c6b4:	888c      	ldrh	r4, [r1, #4]
 800c6b6:	f9b0 9000 	ldrsh.w	r9, [r0]
 800c6ba:	443c      	add	r4, r7
 800c6bc:	b2a4      	uxth	r4, r4
 800c6be:	fa0f f884 	sxth.w	r8, r4
 800c6c2:	45c1      	cmp	r9, r8
 800c6c4:	da2f      	bge.n	800c726 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c6c6:	8882      	ldrh	r2, [r0, #4]
 800c6c8:	444a      	add	r2, r9
 800c6ca:	b292      	uxth	r2, r2
 800c6cc:	fa0f fe82 	sxth.w	lr, r2
 800c6d0:	4577      	cmp	r7, lr
 800c6d2:	da28      	bge.n	800c726 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c6d4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800c6d8:	88cb      	ldrh	r3, [r1, #6]
 800c6da:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800c6de:	442b      	add	r3, r5
 800c6e0:	b21b      	sxth	r3, r3
 800c6e2:	429e      	cmp	r6, r3
 800c6e4:	da1f      	bge.n	800c726 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c6e6:	88c3      	ldrh	r3, [r0, #6]
 800c6e8:	4433      	add	r3, r6
 800c6ea:	b29b      	uxth	r3, r3
 800c6ec:	fa0f fc83 	sxth.w	ip, r3
 800c6f0:	4565      	cmp	r5, ip
 800c6f2:	da18      	bge.n	800c726 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c6f4:	454f      	cmp	r7, r9
 800c6f6:	bfb8      	it	lt
 800c6f8:	464f      	movlt	r7, r9
 800c6fa:	42b5      	cmp	r5, r6
 800c6fc:	bfb8      	it	lt
 800c6fe:	4635      	movlt	r5, r6
 800c700:	45f0      	cmp	r8, lr
 800c702:	bfd8      	it	le
 800c704:	4622      	movle	r2, r4
 800c706:	1bd2      	subs	r2, r2, r7
 800c708:	8082      	strh	r2, [r0, #4]
 800c70a:	884a      	ldrh	r2, [r1, #2]
 800c70c:	88c9      	ldrh	r1, [r1, #6]
 800c70e:	8007      	strh	r7, [r0, #0]
 800c710:	440a      	add	r2, r1
 800c712:	b292      	uxth	r2, r2
 800c714:	b211      	sxth	r1, r2
 800c716:	458c      	cmp	ip, r1
 800c718:	bfa8      	it	ge
 800c71a:	4613      	movge	r3, r2
 800c71c:	1b5b      	subs	r3, r3, r5
 800c71e:	80c3      	strh	r3, [r0, #6]
 800c720:	8045      	strh	r5, [r0, #2]
 800c722:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c726:	2300      	movs	r3, #0
 800c728:	8003      	strh	r3, [r0, #0]
 800c72a:	8043      	strh	r3, [r0, #2]
 800c72c:	8083      	strh	r3, [r0, #4]
 800c72e:	80c3      	strh	r3, [r0, #6]
 800c730:	e7f7      	b.n	800c722 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800c732 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800c732:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c736:	2b00      	cmp	r3, #0
 800c738:	dd06      	ble.n	800c748 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800c73a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800c73e:	2800      	cmp	r0, #0
 800c740:	bfcc      	ite	gt
 800c742:	2000      	movgt	r0, #0
 800c744:	2001      	movle	r0, #1
 800c746:	4770      	bx	lr
 800c748:	2001      	movs	r0, #1
 800c74a:	4770      	bx	lr

0800c74c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800c74c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c750:	2300      	movs	r3, #0
 800c752:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800c754:	8003      	strh	r3, [r0, #0]
 800c756:	4604      	mov	r4, r0
 800c758:	8043      	strh	r3, [r0, #2]
 800c75a:	8083      	strh	r3, [r0, #4]
 800c75c:	80c3      	strh	r3, [r0, #6]
 800c75e:	2d00      	cmp	r5, #0
 800c760:	d040      	beq.n	800c7e4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800c762:	1d28      	adds	r0, r5, #4
 800c764:	f7ff ffe5 	bl	800c732 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c768:	b988      	cbnz	r0, 800c78e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800c76a:	4620      	mov	r0, r4
 800c76c:	f7ff ffe1 	bl	800c732 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c770:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800c774:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c778:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800c77c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800c780:	b138      	cbz	r0, 800c792 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800c782:	8022      	strh	r2, [r4, #0]
 800c784:	8063      	strh	r3, [r4, #2]
 800c786:	f8a4 e004 	strh.w	lr, [r4, #4]
 800c78a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800c78e:	69ad      	ldr	r5, [r5, #24]
 800c790:	e7e5      	b.n	800c75e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800c792:	f9b4 0000 	ldrsh.w	r0, [r4]
 800c796:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800c79a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800c79e:	4290      	cmp	r0, r2
 800c7a0:	4607      	mov	r7, r0
 800c7a2:	bfa8      	it	ge
 800c7a4:	4617      	movge	r7, r2
 800c7a6:	4472      	add	r2, lr
 800c7a8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800c7ac:	8027      	strh	r7, [r4, #0]
 800c7ae:	4299      	cmp	r1, r3
 800c7b0:	460e      	mov	r6, r1
 800c7b2:	4440      	add	r0, r8
 800c7b4:	bfa8      	it	ge
 800c7b6:	461e      	movge	r6, r3
 800c7b8:	4471      	add	r1, lr
 800c7ba:	4463      	add	r3, ip
 800c7bc:	b200      	sxth	r0, r0
 800c7be:	b212      	sxth	r2, r2
 800c7c0:	b209      	sxth	r1, r1
 800c7c2:	b21b      	sxth	r3, r3
 800c7c4:	4290      	cmp	r0, r2
 800c7c6:	bfac      	ite	ge
 800c7c8:	ebc7 0200 	rsbge	r2, r7, r0
 800c7cc:	ebc7 0202 	rsblt	r2, r7, r2
 800c7d0:	4299      	cmp	r1, r3
 800c7d2:	bfac      	ite	ge
 800c7d4:	ebc6 0301 	rsbge	r3, r6, r1
 800c7d8:	ebc6 0303 	rsblt	r3, r6, r3
 800c7dc:	8066      	strh	r6, [r4, #2]
 800c7de:	80a2      	strh	r2, [r4, #4]
 800c7e0:	80e3      	strh	r3, [r4, #6]
 800c7e2:	e7d4      	b.n	800c78e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800c7e4:	4620      	mov	r0, r4
 800c7e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c7ea <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800c7ea:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800c7ee:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800c7f2:	b383      	cbz	r3, 800c856 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800c7f4:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800c7f6:	b374      	cbz	r4, 800c856 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800c7f8:	f9b1 5000 	ldrsh.w	r5, [r1]
 800c7fc:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800c800:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800c804:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800c808:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800c80c:	b303      	cbz	r3, 800c850 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800c80e:	4668      	mov	r0, sp
 800c810:	1d21      	adds	r1, r4, #4
 800c812:	f8ad 5000 	strh.w	r5, [sp]
 800c816:	f8ad 6002 	strh.w	r6, [sp, #2]
 800c81a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800c81e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800c822:	f7ff ff43 	bl	800c6ac <_ZN8touchgfx4RectaNERKS0_>
 800c826:	4668      	mov	r0, sp
 800c828:	f7ff ff83 	bl	800c732 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c82c:	b980      	cbnz	r0, 800c850 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800c82e:	f8bd 3000 	ldrh.w	r3, [sp]
 800c832:	88a2      	ldrh	r2, [r4, #4]
 800c834:	1a9b      	subs	r3, r3, r2
 800c836:	f8ad 3000 	strh.w	r3, [sp]
 800c83a:	88e2      	ldrh	r2, [r4, #6]
 800c83c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c840:	1a9b      	subs	r3, r3, r2
 800c842:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c846:	6823      	ldr	r3, [r4, #0]
 800c848:	4669      	mov	r1, sp
 800c84a:	689b      	ldr	r3, [r3, #8]
 800c84c:	4620      	mov	r0, r4
 800c84e:	4798      	blx	r3
 800c850:	69a4      	ldr	r4, [r4, #24]
 800c852:	2c00      	cmp	r4, #0
 800c854:	d1d8      	bne.n	800c808 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800c856:	b002      	add	sp, #8
 800c858:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c85c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800c85c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c85e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800c862:	460d      	mov	r5, r1
 800c864:	4616      	mov	r6, r2
 800c866:	b323      	cbz	r3, 800c8b2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800c868:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800c86a:	b314      	cbz	r4, 800c8b2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800c86c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800c870:	b1eb      	cbz	r3, 800c8ae <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800c872:	6828      	ldr	r0, [r5, #0]
 800c874:	6869      	ldr	r1, [r5, #4]
 800c876:	466b      	mov	r3, sp
 800c878:	c303      	stmia	r3!, {r0, r1}
 800c87a:	4668      	mov	r0, sp
 800c87c:	1d21      	adds	r1, r4, #4
 800c87e:	f7ff ff15 	bl	800c6ac <_ZN8touchgfx4RectaNERKS0_>
 800c882:	4668      	mov	r0, sp
 800c884:	f7ff ff55 	bl	800c732 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c888:	b988      	cbnz	r0, 800c8ae <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800c88a:	f8bd 3000 	ldrh.w	r3, [sp]
 800c88e:	88a2      	ldrh	r2, [r4, #4]
 800c890:	1a9b      	subs	r3, r3, r2
 800c892:	f8ad 3000 	strh.w	r3, [sp]
 800c896:	88e2      	ldrh	r2, [r4, #6]
 800c898:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c89c:	1a9b      	subs	r3, r3, r2
 800c89e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c8a2:	6823      	ldr	r3, [r4, #0]
 800c8a4:	4632      	mov	r2, r6
 800c8a6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c8a8:	4669      	mov	r1, sp
 800c8aa:	4620      	mov	r0, r4
 800c8ac:	4798      	blx	r3
 800c8ae:	69a4      	ldr	r4, [r4, #24]
 800c8b0:	e7db      	b.n	800c86a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800c8b2:	b002      	add	sp, #8
 800c8b4:	bd70      	pop	{r4, r5, r6, pc}

0800c8b6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800c8b6:	b513      	push	{r0, r1, r4, lr}
 800c8b8:	6803      	ldr	r3, [r0, #0]
 800c8ba:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
 800c8be:	2300      	movs	r3, #0
 800c8c0:	e9cd 3300 	strd	r3, r3, [sp]
 800c8c4:	466b      	mov	r3, sp
 800c8c6:	47a0      	blx	r4
 800c8c8:	b002      	add	sp, #8
 800c8ca:	bd10      	pop	{r4, pc}

0800c8cc <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800c8cc:	2301      	movs	r3, #1
 800c8ce:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800c8d2:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800c8d6:	4770      	bx	lr

0800c8d8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800c8d8:	2301      	movs	r3, #1
 800c8da:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800c8de:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800c8e2:	4770      	bx	lr

0800c8e4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800c8e4:	6843      	ldr	r3, [r0, #4]
 800c8e6:	2201      	movs	r2, #1
 800c8e8:	725a      	strb	r2, [r3, #9]
 800c8ea:	6840      	ldr	r0, [r0, #4]
 800c8ec:	6803      	ldr	r3, [r0, #0]
 800c8ee:	691b      	ldr	r3, [r3, #16]
 800c8f0:	4718      	bx	r3

0800c8f2 <_ZN8touchgfx3HAL8flushDMAEv>:
 800c8f2:	6840      	ldr	r0, [r0, #4]
 800c8f4:	6803      	ldr	r3, [r0, #0]
 800c8f6:	689b      	ldr	r3, [r3, #8]
 800c8f8:	4718      	bx	r3

0800c8fa <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800c8fa:	b530      	push	{r4, r5, lr}
 800c8fc:	b08b      	sub	sp, #44	@ 0x2c
 800c8fe:	6804      	ldr	r4, [r0, #0]
 800c900:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800c904:	9509      	str	r5, [sp, #36]	@ 0x24
 800c906:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800c90a:	9508      	str	r5, [sp, #32]
 800c90c:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800c910:	9507      	str	r5, [sp, #28]
 800c912:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800c916:	9506      	str	r5, [sp, #24]
 800c918:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800c91c:	9505      	str	r5, [sp, #20]
 800c91e:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800c922:	9504      	str	r5, [sp, #16]
 800c924:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800c928:	9503      	str	r5, [sp, #12]
 800c92a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800c92e:	9502      	str	r5, [sp, #8]
 800c930:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800c934:	e9cd 3500 	strd	r3, r5, [sp]
 800c938:	4613      	mov	r3, r2
 800c93a:	6c24      	ldr	r4, [r4, #64]	@ 0x40
 800c93c:	2200      	movs	r2, #0
 800c93e:	47a0      	blx	r4
 800c940:	b00b      	add	sp, #44	@ 0x2c
 800c942:	bd30      	pop	{r4, r5, pc}

0800c944 <_ZN8touchgfx3HAL10beginFrameEv>:
 800c944:	4b04      	ldr	r3, [pc, #16]	@ (800c958 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800c946:	781b      	ldrb	r3, [r3, #0]
 800c948:	b123      	cbz	r3, 800c954 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800c94a:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800c94e:	f080 0001 	eor.w	r0, r0, #1
 800c952:	4770      	bx	lr
 800c954:	2001      	movs	r0, #1
 800c956:	4770      	bx	lr
 800c958:	200152ea 	.word	0x200152ea

0800c95c <_ZN8touchgfx3HAL8endFrameEv>:
 800c95c:	b510      	push	{r4, lr}
 800c95e:	4604      	mov	r4, r0
 800c960:	6840      	ldr	r0, [r0, #4]
 800c962:	6803      	ldr	r3, [r0, #0]
 800c964:	689b      	ldr	r3, [r3, #8]
 800c966:	4798      	blx	r3
 800c968:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800c96c:	b113      	cbz	r3, 800c974 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800c96e:	2301      	movs	r3, #1
 800c970:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800c974:	bd10      	pop	{r4, pc}

0800c976 <_ZN8touchgfx3HAL10initializeEv>:
 800c976:	b510      	push	{r4, lr}
 800c978:	4604      	mov	r4, r0
 800c97a:	f7f5 f945 	bl	8001c08 <_ZN8touchgfx10OSWrappers10initializeEv>
 800c97e:	f7f5 f84d 	bl	8001a1c <_ZN8touchgfx4GPIO4initEv>
 800c982:	6860      	ldr	r0, [r4, #4]
 800c984:	6803      	ldr	r3, [r0, #0]
 800c986:	68db      	ldr	r3, [r3, #12]
 800c988:	4798      	blx	r3
 800c98a:	68e0      	ldr	r0, [r4, #12]
 800c98c:	6803      	ldr	r3, [r0, #0]
 800c98e:	689b      	ldr	r3, [r3, #8]
 800c990:	4798      	blx	r3
 800c992:	6823      	ldr	r3, [r4, #0]
 800c994:	4620      	mov	r0, r4
 800c996:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800c998:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c99c:	4718      	bx	r3
	...

0800c9a0 <_ZN8touchgfx3HAL4tickEv>:
 800c9a0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c9a2:	6803      	ldr	r3, [r0, #0]
 800c9a4:	4d62      	ldr	r5, [pc, #392]	@ (800cb30 <_ZN8touchgfx3HAL4tickEv+0x190>)
 800c9a6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800c9aa:	4604      	mov	r4, r0
 800c9ac:	4798      	blx	r3
 800c9ae:	2800      	cmp	r0, #0
 800c9b0:	f000 809e 	beq.w	800caf0 <_ZN8touchgfx3HAL4tickEv+0x150>
 800c9b4:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800c9b8:	2b02      	cmp	r3, #2
 800c9ba:	d002      	beq.n	800c9c2 <_ZN8touchgfx3HAL4tickEv+0x22>
 800c9bc:	2001      	movs	r0, #1
 800c9be:	f7f4 ffab 	bl	8001918 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800c9c2:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800c9c6:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800c9ca:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800c9ce:	2600      	movs	r6, #0
 800c9d0:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800c9d4:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800c9d8:	b133      	cbz	r3, 800c9e8 <_ZN8touchgfx3HAL4tickEv+0x48>
 800c9da:	6823      	ldr	r3, [r4, #0]
 800c9dc:	4620      	mov	r0, r4
 800c9de:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800c9e2:	4798      	blx	r3
 800c9e4:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800c9e8:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800c9ec:	6862      	ldr	r2, [r4, #4]
 800c9ee:	f083 0301 	eor.w	r3, r3, #1
 800c9f2:	7253      	strb	r3, [r2, #9]
 800c9f4:	2601      	movs	r6, #1
 800c9f6:	702e      	strb	r6, [r5, #0]
 800c9f8:	f005 f9c6 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
 800c9fc:	6803      	ldr	r3, [r0, #0]
 800c9fe:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800ca00:	4798      	blx	r3
 800ca02:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800ca06:	b90b      	cbnz	r3, 800ca0c <_ZN8touchgfx3HAL4tickEv+0x6c>
 800ca08:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800ca0c:	f005 f9bc 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
 800ca10:	6803      	ldr	r3, [r0, #0]
 800ca12:	695b      	ldr	r3, [r3, #20]
 800ca14:	4798      	blx	r3
 800ca16:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800ca18:	6803      	ldr	r3, [r0, #0]
 800ca1a:	691b      	ldr	r3, [r3, #16]
 800ca1c:	4798      	blx	r3
 800ca1e:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800ca22:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800ca26:	3b01      	subs	r3, #1
 800ca28:	b2db      	uxtb	r3, r3
 800ca2a:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800ca2e:	b10a      	cbz	r2, 800ca34 <_ZN8touchgfx3HAL4tickEv+0x94>
 800ca30:	2b00      	cmp	r3, #0
 800ca32:	d1eb      	bne.n	800ca0c <_ZN8touchgfx3HAL4tickEv+0x6c>
 800ca34:	4a3f      	ldr	r2, [pc, #252]	@ (800cb34 <_ZN8touchgfx3HAL4tickEv+0x194>)
 800ca36:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800ca3a:	7813      	ldrb	r3, [r2, #0]
 800ca3c:	3301      	adds	r3, #1
 800ca3e:	b25b      	sxtb	r3, r3
 800ca40:	4299      	cmp	r1, r3
 800ca42:	7013      	strb	r3, [r2, #0]
 800ca44:	dc10      	bgt.n	800ca68 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800ca46:	68e0      	ldr	r0, [r4, #12]
 800ca48:	2300      	movs	r3, #0
 800ca4a:	7013      	strb	r3, [r2, #0]
 800ca4c:	6803      	ldr	r3, [r0, #0]
 800ca4e:	aa03      	add	r2, sp, #12
 800ca50:	68db      	ldr	r3, [r3, #12]
 800ca52:	a902      	add	r1, sp, #8
 800ca54:	4798      	blx	r3
 800ca56:	6823      	ldr	r3, [r4, #0]
 800ca58:	2800      	cmp	r0, #0
 800ca5a:	d059      	beq.n	800cb10 <_ZN8touchgfx3HAL4tickEv+0x170>
 800ca5c:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800ca60:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800ca64:	4620      	mov	r0, r4
 800ca66:	4798      	blx	r3
 800ca68:	6960      	ldr	r0, [r4, #20]
 800ca6a:	2300      	movs	r3, #0
 800ca6c:	f88d 3007 	strb.w	r3, [sp, #7]
 800ca70:	b158      	cbz	r0, 800ca8a <_ZN8touchgfx3HAL4tickEv+0xea>
 800ca72:	6803      	ldr	r3, [r0, #0]
 800ca74:	f10d 0107 	add.w	r1, sp, #7
 800ca78:	68db      	ldr	r3, [r3, #12]
 800ca7a:	4798      	blx	r3
 800ca7c:	b128      	cbz	r0, 800ca8a <_ZN8touchgfx3HAL4tickEv+0xea>
 800ca7e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800ca80:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800ca84:	6803      	ldr	r3, [r0, #0]
 800ca86:	68db      	ldr	r3, [r3, #12]
 800ca88:	4798      	blx	r3
 800ca8a:	f104 001c 	add.w	r0, r4, #28
 800ca8e:	f017 f94b 	bl	8023d28 <_ZN8touchgfx8Gestures4tickEv>
 800ca92:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800ca96:	b30b      	cbz	r3, 800cadc <_ZN8touchgfx3HAL4tickEv+0x13c>
 800ca98:	6920      	ldr	r0, [r4, #16]
 800ca9a:	6803      	ldr	r3, [r0, #0]
 800ca9c:	691b      	ldr	r3, [r3, #16]
 800ca9e:	4798      	blx	r3
 800caa0:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800caa2:	4606      	mov	r6, r0
 800caa4:	b903      	cbnz	r3, 800caa8 <_ZN8touchgfx3HAL4tickEv+0x108>
 800caa6:	6760      	str	r0, [r4, #116]	@ 0x74
 800caa8:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800caaa:	4a23      	ldr	r2, [pc, #140]	@ (800cb38 <_ZN8touchgfx3HAL4tickEv+0x198>)
 800caac:	1af3      	subs	r3, r6, r3
 800caae:	4293      	cmp	r3, r2
 800cab0:	d914      	bls.n	800cadc <_ZN8touchgfx3HAL4tickEv+0x13c>
 800cab2:	6920      	ldr	r0, [r4, #16]
 800cab4:	6803      	ldr	r3, [r0, #0]
 800cab6:	699b      	ldr	r3, [r3, #24]
 800cab8:	4798      	blx	r3
 800caba:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800cabc:	2264      	movs	r2, #100	@ 0x64
 800cabe:	1af3      	subs	r3, r6, r3
 800cac0:	fbb3 f3f2 	udiv	r3, r3, r2
 800cac4:	fbb0 f0f3 	udiv	r0, r0, r3
 800cac8:	2800      	cmp	r0, #0
 800caca:	dc26      	bgt.n	800cb1a <_ZN8touchgfx3HAL4tickEv+0x17a>
 800cacc:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800cad0:	6920      	ldr	r0, [r4, #16]
 800cad2:	6803      	ldr	r3, [r0, #0]
 800cad4:	2100      	movs	r1, #0
 800cad6:	69db      	ldr	r3, [r3, #28]
 800cad8:	4798      	blx	r3
 800cada:	6766      	str	r6, [r4, #116]	@ 0x74
 800cadc:	6823      	ldr	r3, [r4, #0]
 800cade:	4620      	mov	r0, r4
 800cae0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800cae4:	4798      	blx	r3
 800cae6:	f005 f94f 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
 800caea:	6803      	ldr	r3, [r0, #0]
 800caec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800caee:	4798      	blx	r3
 800caf0:	6823      	ldr	r3, [r4, #0]
 800caf2:	4620      	mov	r0, r4
 800caf4:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800caf8:	4798      	blx	r3
 800cafa:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800cafe:	2b02      	cmp	r3, #2
 800cb00:	d002      	beq.n	800cb08 <_ZN8touchgfx3HAL4tickEv+0x168>
 800cb02:	2001      	movs	r0, #1
 800cb04:	f7f4 ff32 	bl	800196c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800cb08:	2300      	movs	r3, #0
 800cb0a:	702b      	strb	r3, [r5, #0]
 800cb0c:	b004      	add	sp, #16
 800cb0e:	bd70      	pop	{r4, r5, r6, pc}
 800cb10:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
 800cb14:	4620      	mov	r0, r4
 800cb16:	4798      	blx	r3
 800cb18:	e7a6      	b.n	800ca68 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800cb1a:	2863      	cmp	r0, #99	@ 0x63
 800cb1c:	bfcb      	itete	gt
 800cb1e:	2300      	movgt	r3, #0
 800cb20:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800cb24:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800cb28:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800cb2c:	e7d0      	b.n	800cad0 <_ZN8touchgfx3HAL4tickEv+0x130>
 800cb2e:	bf00      	nop
 800cb30:	200152f0 	.word	0x200152f0
 800cb34:	200152f1 	.word	0x200152f1
 800cb38:	05f5e100 	.word	0x05f5e100

0800cb3c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800cb3c:	b510      	push	{r4, lr}
 800cb3e:	4604      	mov	r4, r0
 800cb40:	f7f5 f892 	bl	8001c68 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800cb44:	6863      	ldr	r3, [r4, #4]
 800cb46:	2200      	movs	r2, #0
 800cb48:	729a      	strb	r2, [r3, #10]
 800cb4a:	bd10      	pop	{r4, pc}

0800cb4c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800cb4c:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800cb4e:	301c      	adds	r0, #28
 800cb50:	f017 b8e8 	b.w	8023d24 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800cb54 <_ZN8touchgfx3HAL5touchEll>:
 800cb54:	b530      	push	{r4, r5, lr}
 800cb56:	b087      	sub	sp, #28
 800cb58:	4604      	mov	r4, r0
 800cb5a:	a804      	add	r0, sp, #16
 800cb5c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800cb60:	f004 fefa 	bl	8011958 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800cb64:	9b04      	ldr	r3, [sp, #16]
 800cb66:	f8ad 300c 	strh.w	r3, [sp, #12]
 800cb6a:	a906      	add	r1, sp, #24
 800cb6c:	9b05      	ldr	r3, [sp, #20]
 800cb6e:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800cb72:	a803      	add	r0, sp, #12
 800cb74:	f004 ff42 	bl	80119fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800cb78:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800cb7c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800cb80:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800cb84:	f104 001c 	add.w	r0, r4, #28
 800cb88:	b189      	cbz	r1, 800cbae <_ZN8touchgfx3HAL5touchEll+0x5a>
 800cb8a:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800cb8e:	9300      	str	r3, [sp, #0]
 800cb90:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800cb94:	4613      	mov	r3, r2
 800cb96:	462a      	mov	r2, r5
 800cb98:	f017 f8d4 	bl	8023d44 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800cb9c:	b128      	cbz	r0, 800cbaa <_ZN8touchgfx3HAL5touchEll+0x56>
 800cb9e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800cba2:	6623      	str	r3, [r4, #96]	@ 0x60
 800cba4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800cba8:	6663      	str	r3, [r4, #100]	@ 0x64
 800cbaa:	b007      	add	sp, #28
 800cbac:	bd30      	pop	{r4, r5, pc}
 800cbae:	f017 f909 	bl	8023dc4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800cbb2:	2301      	movs	r3, #1
 800cbb4:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800cbb8:	e7f1      	b.n	800cb9e <_ZN8touchgfx3HAL5touchEll+0x4a>

0800cbba <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800cbba:	b510      	push	{r4, lr}
 800cbbc:	2b00      	cmp	r3, #0
 800cbbe:	d046      	beq.n	800cc4e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800cbc0:	ea81 0002 	eor.w	r0, r1, r2
 800cbc4:	07c4      	lsls	r4, r0, #31
 800cbc6:	d508      	bpl.n	800cbda <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800cbc8:	440b      	add	r3, r1
 800cbca:	3a01      	subs	r2, #1
 800cbcc:	428b      	cmp	r3, r1
 800cbce:	d93e      	bls.n	800cc4e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800cbd0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800cbd4:	f801 0b01 	strb.w	r0, [r1], #1
 800cbd8:	e7f8      	b.n	800cbcc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800cbda:	07d0      	lsls	r0, r2, #31
 800cbdc:	bf42      	ittt	mi
 800cbde:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800cbe2:	f801 0b01 	strbmi.w	r0, [r1], #1
 800cbe6:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800cbea:	2b01      	cmp	r3, #1
 800cbec:	d911      	bls.n	800cc12 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800cbee:	ea81 0402 	eor.w	r4, r1, r2
 800cbf2:	07a4      	lsls	r4, r4, #30
 800cbf4:	4610      	mov	r0, r2
 800cbf6:	d022      	beq.n	800cc3e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800cbf8:	f023 0401 	bic.w	r4, r3, #1
 800cbfc:	440c      	add	r4, r1
 800cbfe:	428c      	cmp	r4, r1
 800cc00:	4602      	mov	r2, r0
 800cc02:	d904      	bls.n	800cc0e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800cc04:	8812      	ldrh	r2, [r2, #0]
 800cc06:	f821 2b02 	strh.w	r2, [r1], #2
 800cc0a:	3002      	adds	r0, #2
 800cc0c:	e7f7      	b.n	800cbfe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800cc0e:	f003 0301 	and.w	r3, r3, #1
 800cc12:	f023 0003 	bic.w	r0, r3, #3
 800cc16:	4408      	add	r0, r1
 800cc18:	4288      	cmp	r0, r1
 800cc1a:	4614      	mov	r4, r2
 800cc1c:	d904      	bls.n	800cc28 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800cc1e:	6824      	ldr	r4, [r4, #0]
 800cc20:	f841 4b04 	str.w	r4, [r1], #4
 800cc24:	3204      	adds	r2, #4
 800cc26:	e7f7      	b.n	800cc18 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800cc28:	f003 0303 	and.w	r3, r3, #3
 800cc2c:	440b      	add	r3, r1
 800cc2e:	3a01      	subs	r2, #1
 800cc30:	428b      	cmp	r3, r1
 800cc32:	d90c      	bls.n	800cc4e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800cc34:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800cc38:	f801 0b01 	strb.w	r0, [r1], #1
 800cc3c:	e7f8      	b.n	800cc30 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800cc3e:	0790      	lsls	r0, r2, #30
 800cc40:	d0e7      	beq.n	800cc12 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800cc42:	f832 0b02 	ldrh.w	r0, [r2], #2
 800cc46:	f821 0b02 	strh.w	r0, [r1], #2
 800cc4a:	3b02      	subs	r3, #2
 800cc4c:	e7e1      	b.n	800cc12 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800cc4e:	2001      	movs	r0, #1
 800cc50:	bd10      	pop	{r4, pc}

0800cc52 <_ZN8touchgfx3HAL7noTouchEv>:
 800cc52:	b510      	push	{r4, lr}
 800cc54:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800cc58:	4604      	mov	r4, r0
 800cc5a:	b153      	cbz	r3, 800cc72 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800cc5c:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800cc60:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800cc64:	2101      	movs	r1, #1
 800cc66:	301c      	adds	r0, #28
 800cc68:	f017 f8ac 	bl	8023dc4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800cc6c:	2300      	movs	r3, #0
 800cc6e:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800cc72:	bd10      	pop	{r4, pc}

0800cc74 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800cc74:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cc78:	b085      	sub	sp, #20
 800cc7a:	ad04      	add	r5, sp, #16
 800cc7c:	4604      	mov	r4, r0
 800cc7e:	2000      	movs	r0, #0
 800cc80:	f845 0d04 	str.w	r0, [r5, #-4]!
 800cc84:	69a0      	ldr	r0, [r4, #24]
 800cc86:	6806      	ldr	r6, [r0, #0]
 800cc88:	9501      	str	r5, [sp, #4]
 800cc8a:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800cc8e:	9500      	str	r5, [sp, #0]
 800cc90:	6835      	ldr	r5, [r6, #0]
 800cc92:	4699      	mov	r9, r3
 800cc94:	460f      	mov	r7, r1
 800cc96:	4690      	mov	r8, r2
 800cc98:	47a8      	blx	r5
 800cc9a:	4d10      	ldr	r5, [pc, #64]	@ (800ccdc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800cc9c:	4606      	mov	r6, r0
 800cc9e:	f8a5 9000 	strh.w	r9, [r5]
 800cca2:	f7f5 fe1d 	bl	80028e0 <_ZN8touchgfx3HAL3lcdEv>
 800cca6:	6803      	ldr	r3, [r0, #0]
 800cca8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ccaa:	4798      	blx	r3
 800ccac:	b128      	cbz	r0, 800ccba <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800ccae:	2801      	cmp	r0, #1
 800ccb0:	d00b      	beq.n	800ccca <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800ccb2:	4630      	mov	r0, r6
 800ccb4:	b005      	add	sp, #20
 800ccb6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ccba:	882b      	ldrh	r3, [r5, #0]
 800ccbc:	fb08 7203 	mla	r2, r8, r3, r7
 800ccc0:	9b03      	ldr	r3, [sp, #12]
 800ccc2:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800ccc6:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800ccc8:	e7f3      	b.n	800ccb2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800ccca:	882a      	ldrh	r2, [r5, #0]
 800cccc:	9b03      	ldr	r3, [sp, #12]
 800ccce:	fb08 7202 	mla	r2, r8, r2, r7
 800ccd2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800ccd6:	1a9a      	subs	r2, r3, r2
 800ccd8:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800ccda:	e7ea      	b.n	800ccb2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800ccdc:	200152e6 	.word	0x200152e6

0800cce0 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
 800cce0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cce2:	4b15      	ldr	r3, [pc, #84]	@ (800cd38 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
 800cce4:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
 800cce8:	881b      	ldrh	r3, [r3, #0]
 800ccea:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
 800ccec:	fb93 f4f4 	sdiv	r4, r3, r4
 800ccf0:	460f      	mov	r7, r1
 800ccf2:	4606      	mov	r6, r0
 800ccf4:	f7f5 fdf4 	bl	80028e0 <_ZN8touchgfx3HAL3lcdEv>
 800ccf8:	6803      	ldr	r3, [r0, #0]
 800ccfa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ccfc:	4798      	blx	r3
 800ccfe:	2801      	cmp	r0, #1
 800cd00:	d00b      	beq.n	800cd1a <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
 800cd02:	d303      	bcc.n	800cd0c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
 800cd04:	2802      	cmp	r0, #2
 800cd06:	d010      	beq.n	800cd2a <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
 800cd08:	63f5      	str	r5, [r6, #60]	@ 0x3c
 800cd0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cd0c:	4b0b      	ldr	r3, [pc, #44]	@ (800cd3c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800cd0e:	8819      	ldrh	r1, [r3, #0]
 800cd10:	437c      	muls	r4, r7
 800cd12:	434c      	muls	r4, r1
 800cd14:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 800cd18:	e7f6      	b.n	800cd08 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800cd1a:	4b08      	ldr	r3, [pc, #32]	@ (800cd3c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800cd1c:	8819      	ldrh	r1, [r3, #0]
 800cd1e:	437c      	muls	r4, r7
 800cd20:	434c      	muls	r4, r1
 800cd22:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 800cd26:	1b2d      	subs	r5, r5, r4
 800cd28:	e7ee      	b.n	800cd08 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800cd2a:	4b04      	ldr	r3, [pc, #16]	@ (800cd3c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800cd2c:	8819      	ldrh	r1, [r3, #0]
 800cd2e:	437c      	muls	r4, r7
 800cd30:	434c      	muls	r4, r1
 800cd32:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
 800cd36:	e7e7      	b.n	800cd08 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800cd38:	200152e8 	.word	0x200152e8
 800cd3c:	200152e6 	.word	0x200152e6

0800cd40 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800cd40:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cd42:	b08b      	sub	sp, #44	@ 0x2c
 800cd44:	4617      	mov	r7, r2
 800cd46:	4604      	mov	r4, r0
 800cd48:	460e      	mov	r6, r1
 800cd4a:	461d      	mov	r5, r3
 800cd4c:	f7f5 fdc8 	bl	80028e0 <_ZN8touchgfx3HAL3lcdEv>
 800cd50:	6803      	ldr	r3, [r0, #0]
 800cd52:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cd54:	4798      	blx	r3
 800cd56:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800cd5a:	9007      	str	r0, [sp, #28]
 800cd5c:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800cd60:	4b0d      	ldr	r3, [pc, #52]	@ (800cd98 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800cd62:	6822      	ldr	r2, [r4, #0]
 800cd64:	881b      	ldrh	r3, [r3, #0]
 800cd66:	9306      	str	r3, [sp, #24]
 800cd68:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800cd6c:	9305      	str	r3, [sp, #20]
 800cd6e:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800cd72:	9304      	str	r3, [sp, #16]
 800cd74:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800cd78:	9303      	str	r3, [sp, #12]
 800cd7a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800cd7e:	9302      	str	r3, [sp, #8]
 800cd80:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800cd84:	e9cd 5300 	strd	r5, r3, [sp]
 800cd88:	4631      	mov	r1, r6
 800cd8a:	6c15      	ldr	r5, [r2, #64]	@ 0x40
 800cd8c:	463b      	mov	r3, r7
 800cd8e:	2200      	movs	r2, #0
 800cd90:	4620      	mov	r0, r4
 800cd92:	47a8      	blx	r5
 800cd94:	b00b      	add	sp, #44	@ 0x2c
 800cd96:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cd98:	200152e6 	.word	0x200152e6

0800cd9c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800cd9c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cda0:	4698      	mov	r8, r3
 800cda2:	6803      	ldr	r3, [r0, #0]
 800cda4:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
 800cda6:	4b15      	ldr	r3, [pc, #84]	@ (800cdfc <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800cda8:	b08b      	sub	sp, #44	@ 0x2c
 800cdaa:	4617      	mov	r7, r2
 800cdac:	f8b3 9000 	ldrh.w	r9, [r3]
 800cdb0:	460e      	mov	r6, r1
 800cdb2:	4604      	mov	r4, r0
 800cdb4:	f7f5 fd94 	bl	80028e0 <_ZN8touchgfx3HAL3lcdEv>
 800cdb8:	6803      	ldr	r3, [r0, #0]
 800cdba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cdbc:	4798      	blx	r3
 800cdbe:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800cdc2:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800cdc6:	2302      	movs	r3, #2
 800cdc8:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800cdcc:	2301      	movs	r3, #1
 800cdce:	9305      	str	r3, [sp, #20]
 800cdd0:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800cdd4:	9304      	str	r3, [sp, #16]
 800cdd6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800cdda:	9303      	str	r3, [sp, #12]
 800cddc:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800cde0:	9302      	str	r3, [sp, #8]
 800cde2:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800cde6:	2200      	movs	r2, #0
 800cde8:	e9cd 8300 	strd	r8, r3, [sp]
 800cdec:	4631      	mov	r1, r6
 800cdee:	463b      	mov	r3, r7
 800cdf0:	4620      	mov	r0, r4
 800cdf2:	47a8      	blx	r5
 800cdf4:	b00b      	add	sp, #44	@ 0x2c
 800cdf6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cdfa:	bf00      	nop
 800cdfc:	200152e6 	.word	0x200152e6

0800ce00 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800ce00:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ce04:	4698      	mov	r8, r3
 800ce06:	6803      	ldr	r3, [r0, #0]
 800ce08:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
 800ce0a:	4b11      	ldr	r3, [pc, #68]	@ (800ce50 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800ce0c:	b087      	sub	sp, #28
 800ce0e:	f8b3 9000 	ldrh.w	r9, [r3]
 800ce12:	460e      	mov	r6, r1
 800ce14:	4617      	mov	r7, r2
 800ce16:	4604      	mov	r4, r0
 800ce18:	f7f5 fd62 	bl	80028e0 <_ZN8touchgfx3HAL3lcdEv>
 800ce1c:	6803      	ldr	r3, [r0, #0]
 800ce1e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ce20:	4798      	blx	r3
 800ce22:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800ce26:	f8cd 900c 	str.w	r9, [sp, #12]
 800ce2a:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800ce2e:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800ce32:	9302      	str	r3, [sp, #8]
 800ce34:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800ce38:	9301      	str	r3, [sp, #4]
 800ce3a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800ce3e:	9300      	str	r3, [sp, #0]
 800ce40:	463a      	mov	r2, r7
 800ce42:	4643      	mov	r3, r8
 800ce44:	4631      	mov	r1, r6
 800ce46:	4620      	mov	r0, r4
 800ce48:	47a8      	blx	r5
 800ce4a:	b007      	add	sp, #28
 800ce4c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ce50:	200152e6 	.word	0x200152e6

0800ce54 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800ce54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce58:	4604      	mov	r4, r0
 800ce5a:	b08f      	sub	sp, #60	@ 0x3c
 800ce5c:	4610      	mov	r0, r2
 800ce5e:	460d      	mov	r5, r1
 800ce60:	4691      	mov	r9, r2
 800ce62:	461e      	mov	r6, r3
 800ce64:	f008 fc4e 	bl	8015704 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ce68:	2800      	cmp	r0, #0
 800ce6a:	f000 809d 	beq.w	800cfa8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800ce6e:	6823      	ldr	r3, [r4, #0]
 800ce70:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800d00c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800ce74:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ce76:	f8df a198 	ldr.w	sl, [pc, #408]	@ 800d010 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800ce7a:	4f61      	ldr	r7, [pc, #388]	@ (800d000 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ce7c:	4620      	mov	r0, r4
 800ce7e:	4798      	blx	r3
 800ce80:	6823      	ldr	r3, [r4, #0]
 800ce82:	4620      	mov	r0, r4
 800ce84:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800ce86:	4798      	blx	r3
 800ce88:	f8bb 3000 	ldrh.w	r3, [fp]
 800ce8c:	9301      	str	r3, [sp, #4]
 800ce8e:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800ce92:	f8ba 3000 	ldrh.w	r3, [sl]
 800ce96:	9302      	str	r3, [sp, #8]
 800ce98:	883b      	ldrh	r3, [r7, #0]
 800ce9a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800ce9e:	9303      	str	r3, [sp, #12]
 800cea0:	4b58      	ldr	r3, [pc, #352]	@ (800d004 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800cea2:	9305      	str	r3, [sp, #20]
 800cea4:	881a      	ldrh	r2, [r3, #0]
 800cea6:	9204      	str	r2, [sp, #16]
 800cea8:	4640      	mov	r0, r8
 800ceaa:	f008 fcbf 	bl	801582c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ceae:	8038      	strh	r0, [r7, #0]
 800ceb0:	4640      	mov	r0, r8
 800ceb2:	f008 fcef 	bl	8015894 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ceb6:	9b05      	ldr	r3, [sp, #20]
 800ceb8:	b280      	uxth	r0, r0
 800ceba:	8018      	strh	r0, [r3, #0]
 800cebc:	4b52      	ldr	r3, [pc, #328]	@ (800d008 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800cebe:	781b      	ldrb	r3, [r3, #0]
 800cec0:	2b00      	cmp	r3, #0
 800cec2:	d174      	bne.n	800cfae <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800cec4:	883b      	ldrh	r3, [r7, #0]
 800cec6:	f8ab 3000 	strh.w	r3, [fp]
 800ceca:	f8aa 0000 	strh.w	r0, [sl]
 800cece:	4648      	mov	r0, r9
 800ced0:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800ced4:	f008 fc16 	bl	8015704 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ced8:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800cedc:	2200      	movs	r2, #0
 800cede:	4611      	mov	r1, r2
 800cee0:	4628      	mov	r0, r5
 800cee2:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800cee6:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800ceea:	f7f6 fa5a 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
 800ceee:	2301      	movs	r3, #1
 800cef0:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800cef4:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800cef8:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800cefc:	2b00      	cmp	r3, #0
 800cefe:	dd5c      	ble.n	800cfba <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800cf00:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800cf04:	2b00      	cmp	r3, #0
 800cf06:	dd58      	ble.n	800cfba <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800cf08:	462a      	mov	r2, r5
 800cf0a:	ab0a      	add	r3, sp, #40	@ 0x28
 800cf0c:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800cf10:	6851      	ldr	r1, [r2, #4]
 800cf12:	c303      	stmia	r3!, {r0, r1}
 800cf14:	4631      	mov	r1, r6
 800cf16:	a80a      	add	r0, sp, #40	@ 0x28
 800cf18:	f7ff fbc8 	bl	800c6ac <_ZN8touchgfx4RectaNERKS0_>
 800cf1c:	4b38      	ldr	r3, [pc, #224]	@ (800d000 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800cf1e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cf22:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800cf26:	2100      	movs	r1, #0
 800cf28:	aa0a      	add	r2, sp, #40	@ 0x28
 800cf2a:	4b36      	ldr	r3, [pc, #216]	@ (800d004 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800cf2c:	910c      	str	r1, [sp, #48]	@ 0x30
 800cf2e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800cf32:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cf36:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800cf3a:	ab08      	add	r3, sp, #32
 800cf3c:	e883 0003 	stmia.w	r3, {r0, r1}
 800cf40:	4618      	mov	r0, r3
 800cf42:	a90c      	add	r1, sp, #48	@ 0x30
 800cf44:	f7ff fbb2 	bl	800c6ac <_ZN8touchgfx4RectaNERKS0_>
 800cf48:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800cf4a:	2b00      	cmp	r3, #0
 800cf4c:	d13c      	bne.n	800cfc8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800cf4e:	2000      	movs	r0, #0
 800cf50:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800cf54:	2600      	movs	r6, #0
 800cf56:	682a      	ldr	r2, [r5, #0]
 800cf58:	696b      	ldr	r3, [r5, #20]
 800cf5a:	616e      	str	r6, [r5, #20]
 800cf5c:	9305      	str	r3, [sp, #20]
 800cf5e:	6892      	ldr	r2, [r2, #8]
 800cf60:	a908      	add	r1, sp, #32
 800cf62:	4628      	mov	r0, r5
 800cf64:	4790      	blx	r2
 800cf66:	9b05      	ldr	r3, [sp, #20]
 800cf68:	616b      	str	r3, [r5, #20]
 800cf6a:	4652      	mov	r2, sl
 800cf6c:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800cf70:	4649      	mov	r1, r9
 800cf72:	4628      	mov	r0, r5
 800cf74:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800cf78:	f7f6 fa13 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
 800cf7c:	4b23      	ldr	r3, [pc, #140]	@ (800d00c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800cf7e:	9a01      	ldr	r2, [sp, #4]
 800cf80:	801a      	strh	r2, [r3, #0]
 800cf82:	4b23      	ldr	r3, [pc, #140]	@ (800d010 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800cf84:	9a02      	ldr	r2, [sp, #8]
 800cf86:	801a      	strh	r2, [r3, #0]
 800cf88:	4b1d      	ldr	r3, [pc, #116]	@ (800d000 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800cf8a:	9a03      	ldr	r2, [sp, #12]
 800cf8c:	801a      	strh	r2, [r3, #0]
 800cf8e:	4b1d      	ldr	r3, [pc, #116]	@ (800d004 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800cf90:	9a04      	ldr	r2, [sp, #16]
 800cf92:	801a      	strh	r2, [r3, #0]
 800cf94:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800cf98:	6823      	ldr	r3, [r4, #0]
 800cf9a:	4620      	mov	r0, r4
 800cf9c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cf9e:	4798      	blx	r3
 800cfa0:	6823      	ldr	r3, [r4, #0]
 800cfa2:	4620      	mov	r0, r4
 800cfa4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800cfa6:	4798      	blx	r3
 800cfa8:	b00f      	add	sp, #60	@ 0x3c
 800cfaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cfae:	883b      	ldrh	r3, [r7, #0]
 800cfb0:	f8ab 0000 	strh.w	r0, [fp]
 800cfb4:	f8aa 3000 	strh.w	r3, [sl]
 800cfb8:	e789      	b.n	800cece <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800cfba:	462a      	mov	r2, r5
 800cfbc:	ab0a      	add	r3, sp, #40	@ 0x28
 800cfbe:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800cfc2:	6851      	ldr	r1, [r2, #4]
 800cfc4:	c303      	stmia	r3!, {r0, r1}
 800cfc6:	e7a9      	b.n	800cf1c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800cfc8:	a807      	add	r0, sp, #28
 800cfca:	f008 fda5 	bl	8015b18 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800cfce:	4606      	mov	r6, r0
 800cfd0:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800cfd2:	6803      	ldr	r3, [r0, #0]
 800cfd4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cfd6:	4798      	blx	r3
 800cfd8:	4286      	cmp	r6, r0
 800cfda:	d1b8      	bne.n	800cf4e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800cfdc:	f7f5 fc80 	bl	80028e0 <_ZN8touchgfx3HAL3lcdEv>
 800cfe0:	6803      	ldr	r3, [r0, #0]
 800cfe2:	4606      	mov	r6, r0
 800cfe4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800cfe6:	9305      	str	r3, [sp, #20]
 800cfe8:	a807      	add	r0, sp, #28
 800cfea:	f008 fd95 	bl	8015b18 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800cfee:	9b05      	ldr	r3, [sp, #20]
 800cff0:	4601      	mov	r1, r0
 800cff2:	4630      	mov	r0, r6
 800cff4:	4798      	blx	r3
 800cff6:	f080 0001 	eor.w	r0, r0, #1
 800cffa:	b2c0      	uxtb	r0, r0
 800cffc:	e7a8      	b.n	800cf50 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800cffe:	bf00      	nop
 800d000:	200152e0 	.word	0x200152e0
 800d004:	200152e2 	.word	0x200152e2
 800d008:	200152e4 	.word	0x200152e4
 800d00c:	200152e6 	.word	0x200152e6
 800d010:	200152e8 	.word	0x200152e8

0800d014 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800d014:	b510      	push	{r4, lr}
 800d016:	4b07      	ldr	r3, [pc, #28]	@ (800d034 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800d018:	781b      	ldrb	r3, [r3, #0]
 800d01a:	4604      	mov	r4, r0
 800d01c:	b13b      	cbz	r3, 800d02e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800d01e:	6803      	ldr	r3, [r0, #0]
 800d020:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d022:	4798      	blx	r3
 800d024:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800d026:	4283      	cmp	r3, r0
 800d028:	d101      	bne.n	800d02e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800d02a:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800d02c:	bd10      	pop	{r4, pc}
 800d02e:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800d030:	e7fc      	b.n	800d02c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800d032:	bf00      	nop
 800d034:	200152ea 	.word	0x200152ea

0800d038 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800d038:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d03c:	b08a      	sub	sp, #40	@ 0x28
 800d03e:	461d      	mov	r5, r3
 800d040:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800d044:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800d048:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800d04c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d050:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800d054:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d058:	2400      	movs	r4, #0
 800d05a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800d05e:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800d062:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d066:	4690      	mov	r8, r2
 800d068:	4607      	mov	r7, r0
 800d06a:	9404      	str	r4, [sp, #16]
 800d06c:	f88d 4020 	strb.w	r4, [sp, #32]
 800d070:	f7ff ffd0 	bl	800d014 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d074:	fb06 8505 	mla	r5, r6, r5, r8
 800d078:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800d07c:	6878      	ldr	r0, [r7, #4]
 800d07e:	9505      	str	r5, [sp, #20]
 800d080:	f8ad 601e 	strh.w	r6, [sp, #30]
 800d084:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800d088:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800d08c:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800d090:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800d094:	6803      	ldr	r3, [r0, #0]
 800d096:	a901      	add	r1, sp, #4
 800d098:	685b      	ldr	r3, [r3, #4]
 800d09a:	4798      	blx	r3
 800d09c:	b00a      	add	sp, #40	@ 0x28
 800d09e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d0a2 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800d0a2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d0a6:	b08b      	sub	sp, #44	@ 0x2c
 800d0a8:	2400      	movs	r4, #0
 800d0aa:	461d      	mov	r5, r3
 800d0ac:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800d0b0:	4688      	mov	r8, r1
 800d0b2:	4691      	mov	r9, r2
 800d0b4:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800d0b8:	9404      	str	r4, [sp, #16]
 800d0ba:	4607      	mov	r7, r0
 800d0bc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800d0c0:	f7ff ffa8 	bl	800d014 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d0c4:	fb06 9505 	mla	r5, r6, r5, r9
 800d0c8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800d0cc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d0d0:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800d0d4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800d0d8:	6878      	ldr	r0, [r7, #4]
 800d0da:	9505      	str	r5, [sp, #20]
 800d0dc:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d0e0:	f8ad 401c 	strh.w	r4, [sp, #28]
 800d0e4:	f8ad 601e 	strh.w	r6, [sp, #30]
 800d0e8:	f8cd 8010 	str.w	r8, [sp, #16]
 800d0ec:	f8ad 4020 	strh.w	r4, [sp, #32]
 800d0f0:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800d0f4:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800d0f8:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800d0fc:	6803      	ldr	r3, [r0, #0]
 800d0fe:	a901      	add	r1, sp, #4
 800d100:	685b      	ldr	r3, [r3, #4]
 800d102:	4798      	blx	r3
 800d104:	b00b      	add	sp, #44	@ 0x2c
 800d106:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800d10c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800d10c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d110:	b08a      	sub	sp, #40	@ 0x28
 800d112:	4698      	mov	r8, r3
 800d114:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800d118:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800d11c:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800d120:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800d124:	2300      	movs	r3, #0
 800d126:	2d0b      	cmp	r5, #11
 800d128:	4606      	mov	r6, r0
 800d12a:	9304      	str	r3, [sp, #16]
 800d12c:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800d130:	d138      	bne.n	800d1a4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800d132:	2380      	movs	r3, #128	@ 0x80
 800d134:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800d138:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800d13c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d140:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800d144:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d148:	f88d 0020 	strb.w	r0, [sp, #32]
 800d14c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800d150:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d154:	4630      	mov	r0, r6
 800d156:	9203      	str	r2, [sp, #12]
 800d158:	f7ff ff5c 	bl	800d014 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d15c:	2c0b      	cmp	r4, #11
 800d15e:	bf98      	it	ls
 800d160:	4b1b      	ldrls	r3, [pc, #108]	@ (800d1d0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800d162:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800d166:	bf98      	it	ls
 800d168:	5d19      	ldrbls	r1, [r3, r4]
 800d16a:	f8ad 701e 	strh.w	r7, [sp, #30]
 800d16e:	bf88      	it	hi
 800d170:	2100      	movhi	r1, #0
 800d172:	fb02 8307 	mla	r3, r2, r7, r8
 800d176:	10c9      	asrs	r1, r1, #3
 800d178:	fb01 0003 	mla	r0, r1, r3, r0
 800d17c:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800d180:	9005      	str	r0, [sp, #20]
 800d182:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800d186:	6870      	ldr	r0, [r6, #4]
 800d188:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800d18c:	2300      	movs	r3, #0
 800d18e:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800d192:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800d196:	6803      	ldr	r3, [r0, #0]
 800d198:	a901      	add	r1, sp, #4
 800d19a:	685b      	ldr	r3, [r3, #4]
 800d19c:	4798      	blx	r3
 800d19e:	b00a      	add	sp, #40	@ 0x28
 800d1a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d1a4:	2d02      	cmp	r5, #2
 800d1a6:	d109      	bne.n	800d1bc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800d1a8:	28ff      	cmp	r0, #255	@ 0xff
 800d1aa:	d105      	bne.n	800d1b8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800d1ac:	f1bc 0f00 	cmp.w	ip, #0
 800d1b0:	bf14      	ite	ne
 800d1b2:	2340      	movne	r3, #64	@ 0x40
 800d1b4:	2320      	moveq	r3, #32
 800d1b6:	e7bd      	b.n	800d134 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800d1b8:	2340      	movs	r3, #64	@ 0x40
 800d1ba:	e7bb      	b.n	800d134 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800d1bc:	28ff      	cmp	r0, #255	@ 0xff
 800d1be:	d105      	bne.n	800d1cc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800d1c0:	f1bc 0f00 	cmp.w	ip, #0
 800d1c4:	bf14      	ite	ne
 800d1c6:	2304      	movne	r3, #4
 800d1c8:	2301      	moveq	r3, #1
 800d1ca:	e7b3      	b.n	800d134 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800d1cc:	2304      	movs	r3, #4
 800d1ce:	e7b1      	b.n	800d134 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800d1d0:	08028970 	.word	0x08028970

0800d1d4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800d1d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d1d8:	b08b      	sub	sp, #44	@ 0x2c
 800d1da:	461d      	mov	r5, r3
 800d1dc:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800d1e0:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800d1e4:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800d1e8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800d1ec:	bf14      	ite	ne
 800d1ee:	2308      	movne	r3, #8
 800d1f0:	2302      	moveq	r3, #2
 800d1f2:	2400      	movs	r4, #0
 800d1f4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800d1f8:	4688      	mov	r8, r1
 800d1fa:	4693      	mov	fp, r2
 800d1fc:	9404      	str	r4, [sp, #16]
 800d1fe:	4607      	mov	r7, r0
 800d200:	f7ff ff08 	bl	800d014 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d204:	2e0b      	cmp	r6, #11
 800d206:	bf98      	it	ls
 800d208:	4b15      	ldrls	r3, [pc, #84]	@ (800d260 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800d20a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800d20e:	bf98      	it	ls
 800d210:	5d9c      	ldrbls	r4, [r3, r6]
 800d212:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800d216:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d21a:	fb05 b50a 	mla	r5, r5, sl, fp
 800d21e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800d222:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d226:	10e4      	asrs	r4, r4, #3
 800d228:	fb04 0405 	mla	r4, r4, r5, r0
 800d22c:	2300      	movs	r3, #0
 800d22e:	6878      	ldr	r0, [r7, #4]
 800d230:	9405      	str	r4, [sp, #20]
 800d232:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d236:	f8ad a01e 	strh.w	sl, [sp, #30]
 800d23a:	f8cd 8010 	str.w	r8, [sp, #16]
 800d23e:	f88d 9020 	strb.w	r9, [sp, #32]
 800d242:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800d246:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800d24a:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800d24e:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800d252:	6803      	ldr	r3, [r0, #0]
 800d254:	a901      	add	r1, sp, #4
 800d256:	685b      	ldr	r3, [r3, #4]
 800d258:	4798      	blx	r3
 800d25a:	b00b      	add	sp, #44	@ 0x2c
 800d25c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d260:	08028970 	.word	0x08028970

0800d264 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800d264:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d268:	461e      	mov	r6, r3
 800d26a:	4b0a      	ldr	r3, [pc, #40]	@ (800d294 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800d26c:	460f      	mov	r7, r1
 800d26e:	881d      	ldrh	r5, [r3, #0]
 800d270:	4690      	mov	r8, r2
 800d272:	f7f5 fb35 	bl	80028e0 <_ZN8touchgfx3HAL3lcdEv>
 800d276:	6803      	ldr	r3, [r0, #0]
 800d278:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d27a:	4798      	blx	r3
 800d27c:	280b      	cmp	r0, #11
 800d27e:	bf9a      	itte	ls
 800d280:	4b05      	ldrls	r3, [pc, #20]	@ (800d298 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800d282:	5c1c      	ldrbls	r4, [r3, r0]
 800d284:	2400      	movhi	r4, #0
 800d286:	fb08 7005 	mla	r0, r8, r5, r7
 800d28a:	10e4      	asrs	r4, r4, #3
 800d28c:	fb04 6000 	mla	r0, r4, r0, r6
 800d290:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d294:	200152e6 	.word	0x200152e6
 800d298:	08028970 	.word	0x08028970

0800d29c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800d29c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d29e:	b08b      	sub	sp, #44	@ 0x2c
 800d2a0:	461f      	mov	r7, r3
 800d2a2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800d2a6:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800d2aa:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800d2ae:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d2b2:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800d2b6:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d2ba:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800d2be:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d2c2:	2500      	movs	r5, #0
 800d2c4:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800d2c8:	f88d 3020 	strb.w	r3, [sp, #32]
 800d2cc:	4604      	mov	r4, r0
 800d2ce:	4616      	mov	r6, r2
 800d2d0:	9504      	str	r5, [sp, #16]
 800d2d2:	f7ff fe9f 	bl	800d014 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d2d6:	463a      	mov	r2, r7
 800d2d8:	4631      	mov	r1, r6
 800d2da:	4603      	mov	r3, r0
 800d2dc:	4620      	mov	r0, r4
 800d2de:	f7ff ffc1 	bl	800d264 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d2e2:	4b0e      	ldr	r3, [pc, #56]	@ (800d31c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800d2e4:	9005      	str	r0, [sp, #20]
 800d2e6:	881b      	ldrh	r3, [r3, #0]
 800d2e8:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d2ec:	f7f5 faf8 	bl	80028e0 <_ZN8touchgfx3HAL3lcdEv>
 800d2f0:	6803      	ldr	r3, [r0, #0]
 800d2f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d2f4:	4798      	blx	r3
 800d2f6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800d2f8:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800d2fc:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800d300:	9304      	str	r3, [sp, #16]
 800d302:	6860      	ldr	r0, [r4, #4]
 800d304:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800d308:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800d30c:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800d310:	6803      	ldr	r3, [r0, #0]
 800d312:	a901      	add	r1, sp, #4
 800d314:	685b      	ldr	r3, [r3, #4]
 800d316:	4798      	blx	r3
 800d318:	b00b      	add	sp, #44	@ 0x2c
 800d31a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d31c:	200152e6 	.word	0x200152e6

0800d320 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800d320:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d322:	b08d      	sub	sp, #52	@ 0x34
 800d324:	466b      	mov	r3, sp
 800d326:	e883 0006 	stmia.w	r3, {r1, r2}
 800d32a:	2300      	movs	r3, #0
 800d32c:	9306      	str	r3, [sp, #24]
 800d32e:	6803      	ldr	r3, [r0, #0]
 800d330:	f8bd 6000 	ldrh.w	r6, [sp]
 800d334:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d336:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800d33a:	2501      	movs	r5, #1
 800d33c:	9503      	str	r5, [sp, #12]
 800d33e:	4604      	mov	r4, r0
 800d340:	4798      	blx	r3
 800d342:	463a      	mov	r2, r7
 800d344:	4631      	mov	r1, r6
 800d346:	4603      	mov	r3, r0
 800d348:	4620      	mov	r0, r4
 800d34a:	f7ff ff8b 	bl	800d264 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d34e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800d350:	9307      	str	r3, [sp, #28]
 800d352:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800d356:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d35a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800d35e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800d362:	4b0f      	ldr	r3, [pc, #60]	@ (800d3a0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800d364:	9004      	str	r0, [sp, #16]
 800d366:	881b      	ldrh	r3, [r3, #0]
 800d368:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800d36c:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800d370:	f7f5 fab6 	bl	80028e0 <_ZN8touchgfx3HAL3lcdEv>
 800d374:	6803      	ldr	r3, [r0, #0]
 800d376:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d378:	4798      	blx	r3
 800d37a:	23ff      	movs	r3, #255	@ 0xff
 800d37c:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800d380:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800d384:	6860      	ldr	r0, [r4, #4]
 800d386:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800d38a:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800d38e:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800d392:	6803      	ldr	r3, [r0, #0]
 800d394:	a903      	add	r1, sp, #12
 800d396:	685b      	ldr	r3, [r3, #4]
 800d398:	4798      	blx	r3
 800d39a:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800d39c:	b00d      	add	sp, #52	@ 0x34
 800d39e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d3a0:	200152e6 	.word	0x200152e6

0800d3a4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800d3a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d3a8:	b08c      	sub	sp, #48	@ 0x30
 800d3aa:	461e      	mov	r6, r3
 800d3ac:	466d      	mov	r5, sp
 800d3ae:	2300      	movs	r3, #0
 800d3b0:	e885 0006 	stmia.w	r5, {r1, r2}
 800d3b4:	9306      	str	r3, [sp, #24]
 800d3b6:	6803      	ldr	r3, [r0, #0]
 800d3b8:	f8bd 7000 	ldrh.w	r7, [sp]
 800d3bc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d3be:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800d3c2:	2501      	movs	r5, #1
 800d3c4:	9503      	str	r5, [sp, #12]
 800d3c6:	4604      	mov	r4, r0
 800d3c8:	4798      	blx	r3
 800d3ca:	4642      	mov	r2, r8
 800d3cc:	4639      	mov	r1, r7
 800d3ce:	4603      	mov	r3, r0
 800d3d0:	4620      	mov	r0, r4
 800d3d2:	f7ff ff47 	bl	800d264 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d3d6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800d3da:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d3de:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800d3e2:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800d3e6:	4b11      	ldr	r3, [pc, #68]	@ (800d42c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800d3e8:	9004      	str	r0, [sp, #16]
 800d3ea:	881b      	ldrh	r3, [r3, #0]
 800d3ec:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800d3f0:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800d3f2:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800d3f6:	9607      	str	r6, [sp, #28]
 800d3f8:	f7f5 fa72 	bl	80028e0 <_ZN8touchgfx3HAL3lcdEv>
 800d3fc:	6803      	ldr	r3, [r0, #0]
 800d3fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d400:	4798      	blx	r3
 800d402:	23ff      	movs	r3, #255	@ 0xff
 800d404:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800d408:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800d40c:	6860      	ldr	r0, [r4, #4]
 800d40e:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800d412:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800d416:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800d41a:	6803      	ldr	r3, [r0, #0]
 800d41c:	a903      	add	r1, sp, #12
 800d41e:	685b      	ldr	r3, [r3, #4]
 800d420:	4798      	blx	r3
 800d422:	4630      	mov	r0, r6
 800d424:	b00c      	add	sp, #48	@ 0x30
 800d426:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d42a:	bf00      	nop
 800d42c:	200152e6 	.word	0x200152e6

0800d430 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800d430:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d432:	b085      	sub	sp, #20
 800d434:	ac02      	add	r4, sp, #8
 800d436:	e884 0006 	stmia.w	r4, {r1, r2}
 800d43a:	4605      	mov	r5, r0
 800d43c:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800d440:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800d444:	f7ff fde6 	bl	800d014 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d448:	463a      	mov	r2, r7
 800d44a:	4603      	mov	r3, r0
 800d44c:	4631      	mov	r1, r6
 800d44e:	4628      	mov	r0, r5
 800d450:	f7ff ff08 	bl	800d264 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d454:	4a05      	ldr	r2, [pc, #20]	@ (800d46c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800d456:	682b      	ldr	r3, [r5, #0]
 800d458:	8812      	ldrh	r2, [r2, #0]
 800d45a:	9200      	str	r2, [sp, #0]
 800d45c:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 800d45e:	e894 0006 	ldmia.w	r4, {r1, r2}
 800d462:	4603      	mov	r3, r0
 800d464:	4628      	mov	r0, r5
 800d466:	47b0      	blx	r6
 800d468:	b005      	add	sp, #20
 800d46a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d46c:	200152e6 	.word	0x200152e6

0800d470 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800d470:	b570      	push	{r4, r5, r6, lr}
 800d472:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800d476:	4604      	mov	r4, r0
 800d478:	b19b      	cbz	r3, 800d4a2 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800d47a:	2002      	movs	r0, #2
 800d47c:	f7f4 faa0 	bl	80019c0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800d480:	2300      	movs	r3, #0
 800d482:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800d486:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800d48a:	6823      	ldr	r3, [r4, #0]
 800d48c:	4620      	mov	r0, r4
 800d48e:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
 800d492:	f7ff fdbf 	bl	800d014 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d496:	462b      	mov	r3, r5
 800d498:	4601      	mov	r1, r0
 800d49a:	4620      	mov	r0, r4
 800d49c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d4a0:	4718      	bx	r3
 800d4a2:	bd70      	pop	{r4, r5, r6, pc}

0800d4a4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800d4a4:	b538      	push	{r3, r4, r5, lr}
 800d4a6:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800d4aa:	428b      	cmp	r3, r1
 800d4ac:	4604      	mov	r4, r0
 800d4ae:	460d      	mov	r5, r1
 800d4b0:	d006      	beq.n	800d4c0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800d4b2:	6803      	ldr	r3, [r0, #0]
 800d4b4:	b929      	cbnz	r1, 800d4c2 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800d4b6:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 800d4ba:	4798      	blx	r3
 800d4bc:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800d4c0:	bd38      	pop	{r3, r4, r5, pc}
 800d4c2:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 800d4c6:	e7f8      	b.n	800d4ba <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800d4c8 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800d4c8:	b510      	push	{r4, lr}
 800d4ca:	4b0c      	ldr	r3, [pc, #48]	@ (800d4fc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
 800d4cc:	781b      	ldrb	r3, [r3, #0]
 800d4ce:	4604      	mov	r4, r0
 800d4d0:	b953      	cbnz	r3, 800d4e8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800d4d2:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800d4d6:	b93b      	cbnz	r3, 800d4e8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800d4d8:	6840      	ldr	r0, [r0, #4]
 800d4da:	f000 f92b 	bl	800d734 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800d4de:	b118      	cbz	r0, 800d4e8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800d4e0:	6862      	ldr	r2, [r4, #4]
 800d4e2:	7a53      	ldrb	r3, [r2, #9]
 800d4e4:	2b00      	cmp	r3, #0
 800d4e6:	d0fc      	beq.n	800d4e2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
 800d4e8:	f7f4 fbb6 	bl	8001c58 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800d4ec:	4620      	mov	r0, r4
 800d4ee:	2100      	movs	r1, #0
 800d4f0:	f7ff ffd8 	bl	800d4a4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800d4f4:	4620      	mov	r0, r4
 800d4f6:	f7ff fd8d 	bl	800d014 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d4fa:	bd10      	pop	{r4, pc}
 800d4fc:	200152ea 	.word	0x200152ea

0800d500 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800d500:	b570      	push	{r4, r5, r6, lr}
 800d502:	4604      	mov	r4, r0
 800d504:	6803      	ldr	r3, [r0, #0]
 800d506:	b919      	cbnz	r1, 800d510 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800d508:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d50a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d50e:	4718      	bx	r3
 800d510:	2200      	movs	r2, #0
 800d512:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 800d516:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 800d51a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d51c:	4798      	blx	r3
 800d51e:	6863      	ldr	r3, [r4, #4]
 800d520:	2101      	movs	r1, #1
 800d522:	4605      	mov	r5, r0
 800d524:	7299      	strb	r1, [r3, #10]
 800d526:	4620      	mov	r0, r4
 800d528:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 800d52c:	f7ff ffba 	bl	800d4a4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800d530:	4628      	mov	r0, r5
 800d532:	bd70      	pop	{r4, r5, r6, pc}

0800d534 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800d534:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800d538:	1a13      	subs	r3, r2, r0
 800d53a:	4258      	negs	r0, r3
 800d53c:	4158      	adcs	r0, r3
 800d53e:	4770      	bx	lr

0800d540 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800d540:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800d544:	1a9b      	subs	r3, r3, r2
 800d546:	2b00      	cmp	r3, #0
 800d548:	bfdc      	itt	le
 800d54a:	6882      	ldrle	r2, [r0, #8]
 800d54c:	189b      	addle	r3, r3, r2
 800d54e:	2b01      	cmp	r3, #1
 800d550:	bfcc      	ite	gt
 800d552:	2000      	movgt	r0, #0
 800d554:	2001      	movle	r0, #1
 800d556:	4770      	bx	lr

0800d558 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800d558:	6902      	ldr	r2, [r0, #16]
 800d55a:	6843      	ldr	r3, [r0, #4]
 800d55c:	2024      	movs	r0, #36	@ 0x24
 800d55e:	fb00 3002 	mla	r0, r0, r2, r3
 800d562:	4770      	bx	lr

0800d564 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800d564:	6803      	ldr	r3, [r0, #0]
 800d566:	691b      	ldr	r3, [r3, #16]
 800d568:	4718      	bx	r3

0800d56a <_ZN8touchgfx13DMA_Interface7executeEv>:
 800d56a:	b570      	push	{r4, r5, r6, lr}
 800d56c:	2301      	movs	r3, #1
 800d56e:	7203      	strb	r3, [r0, #8]
 800d570:	4604      	mov	r4, r0
 800d572:	6840      	ldr	r0, [r0, #4]
 800d574:	6803      	ldr	r3, [r0, #0]
 800d576:	699b      	ldr	r3, [r3, #24]
 800d578:	4798      	blx	r3
 800d57a:	6803      	ldr	r3, [r0, #0]
 800d57c:	2b40      	cmp	r3, #64	@ 0x40
 800d57e:	4605      	mov	r5, r0
 800d580:	d00c      	beq.n	800d59c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d582:	d810      	bhi.n	800d5a6 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800d584:	2b04      	cmp	r3, #4
 800d586:	d01d      	beq.n	800d5c4 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800d588:	d804      	bhi.n	800d594 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800d58a:	2b01      	cmp	r3, #1
 800d58c:	d006      	beq.n	800d59c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d58e:	2b02      	cmp	r3, #2
 800d590:	d02c      	beq.n	800d5ec <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800d592:	bd70      	pop	{r4, r5, r6, pc}
 800d594:	2b08      	cmp	r3, #8
 800d596:	d01d      	beq.n	800d5d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800d598:	2b20      	cmp	r3, #32
 800d59a:	d1fa      	bne.n	800d592 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800d59c:	6823      	ldr	r3, [r4, #0]
 800d59e:	4620      	mov	r0, r4
 800d5a0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800d5a2:	4798      	blx	r3
 800d5a4:	e013      	b.n	800d5ce <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800d5a6:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800d5aa:	d0f7      	beq.n	800d59c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d5ac:	d804      	bhi.n	800d5b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800d5ae:	2b80      	cmp	r3, #128	@ 0x80
 800d5b0:	d0f4      	beq.n	800d59c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d5b2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800d5b6:	e7f0      	b.n	800d59a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800d5b8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800d5bc:	d0ee      	beq.n	800d59c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d5be:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800d5c2:	e7e5      	b.n	800d590 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800d5c4:	6823      	ldr	r3, [r4, #0]
 800d5c6:	7f01      	ldrb	r1, [r0, #28]
 800d5c8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d5ca:	4620      	mov	r0, r4
 800d5cc:	4798      	blx	r3
 800d5ce:	6823      	ldr	r3, [r4, #0]
 800d5d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800d5d2:	e006      	b.n	800d5e2 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800d5d4:	6823      	ldr	r3, [r4, #0]
 800d5d6:	7f01      	ldrb	r1, [r0, #28]
 800d5d8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d5da:	4620      	mov	r0, r4
 800d5dc:	4798      	blx	r3
 800d5de:	6823      	ldr	r3, [r4, #0]
 800d5e0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d5e2:	4629      	mov	r1, r5
 800d5e4:	4620      	mov	r0, r4
 800d5e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d5ea:	4718      	bx	r3
 800d5ec:	6823      	ldr	r3, [r4, #0]
 800d5ee:	4620      	mov	r0, r4
 800d5f0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800d5f2:	4798      	blx	r3
 800d5f4:	e7f3      	b.n	800d5de <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800d5f6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800d5f6:	4770      	bx	lr

0800d5f8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800d5f8:	4770      	bx	lr

0800d5fa <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800d5fa:	4770      	bx	lr

0800d5fc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800d5fc:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800d600:	1ad2      	subs	r2, r2, r3
 800d602:	2a00      	cmp	r2, #0
 800d604:	b510      	push	{r4, lr}
 800d606:	bfdc      	itt	le
 800d608:	6884      	ldrle	r4, [r0, #8]
 800d60a:	1912      	addle	r2, r2, r4
 800d60c:	2a01      	cmp	r2, #1
 800d60e:	dd16      	ble.n	800d63e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800d610:	6842      	ldr	r2, [r0, #4]
 800d612:	2424      	movs	r4, #36	@ 0x24
 800d614:	fb04 2303 	mla	r3, r4, r3, r2
 800d618:	f101 0220 	add.w	r2, r1, #32
 800d61c:	f851 4b04 	ldr.w	r4, [r1], #4
 800d620:	f843 4b04 	str.w	r4, [r3], #4
 800d624:	4291      	cmp	r1, r2
 800d626:	d1f9      	bne.n	800d61c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800d628:	780a      	ldrb	r2, [r1, #0]
 800d62a:	701a      	strb	r2, [r3, #0]
 800d62c:	68c3      	ldr	r3, [r0, #12]
 800d62e:	6882      	ldr	r2, [r0, #8]
 800d630:	f3bf 8f5b 	dmb	ish
 800d634:	3301      	adds	r3, #1
 800d636:	429a      	cmp	r2, r3
 800d638:	bfd8      	it	le
 800d63a:	1a9b      	suble	r3, r3, r2
 800d63c:	60c3      	str	r3, [r0, #12]
 800d63e:	bd10      	pop	{r4, pc}

0800d640 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800d640:	6903      	ldr	r3, [r0, #16]
 800d642:	6882      	ldr	r2, [r0, #8]
 800d644:	f3bf 8f5b 	dmb	ish
 800d648:	3301      	adds	r3, #1
 800d64a:	429a      	cmp	r2, r3
 800d64c:	bfd8      	it	le
 800d64e:	1a9b      	suble	r3, r3, r2
 800d650:	6103      	str	r3, [r0, #16]
 800d652:	4770      	bx	lr

0800d654 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800d654:	b570      	push	{r4, r5, r6, lr}
 800d656:	4604      	mov	r4, r0
 800d658:	460e      	mov	r6, r1
 800d65a:	6860      	ldr	r0, [r4, #4]
 800d65c:	6803      	ldr	r3, [r0, #0]
 800d65e:	685b      	ldr	r3, [r3, #4]
 800d660:	4798      	blx	r3
 800d662:	2800      	cmp	r0, #0
 800d664:	d1f9      	bne.n	800d65a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800d666:	4d0d      	ldr	r5, [pc, #52]	@ (800d69c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800d668:	6828      	ldr	r0, [r5, #0]
 800d66a:	6803      	ldr	r3, [r0, #0]
 800d66c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800d670:	4798      	blx	r3
 800d672:	f7f4 faff 	bl	8001c74 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800d676:	6828      	ldr	r0, [r5, #0]
 800d678:	2101      	movs	r1, #1
 800d67a:	f7ff ff13 	bl	800d4a4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800d67e:	6860      	ldr	r0, [r4, #4]
 800d680:	6803      	ldr	r3, [r0, #0]
 800d682:	4631      	mov	r1, r6
 800d684:	689b      	ldr	r3, [r3, #8]
 800d686:	4798      	blx	r3
 800d688:	6823      	ldr	r3, [r4, #0]
 800d68a:	4620      	mov	r0, r4
 800d68c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d68e:	4798      	blx	r3
 800d690:	6828      	ldr	r0, [r5, #0]
 800d692:	6803      	ldr	r3, [r0, #0]
 800d694:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d698:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800d69a:	4718      	bx	r3
 800d69c:	200152ec 	.word	0x200152ec

0800d6a0 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800d6a0:	b508      	push	{r3, lr}
 800d6a2:	f7f4 fad9 	bl	8001c58 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800d6a6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d6aa:	f7f4 badd 	b.w	8001c68 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800d6ae <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800d6ae:	b510      	push	{r4, lr}
 800d6b0:	2114      	movs	r1, #20
 800d6b2:	4604      	mov	r4, r0
 800d6b4:	f017 f939 	bl	802492a <_ZdlPvj>
 800d6b8:	4620      	mov	r0, r4
 800d6ba:	bd10      	pop	{r4, pc}

0800d6bc <_ZN8touchgfx13DMA_Interface5startEv>:
 800d6bc:	b510      	push	{r4, lr}
 800d6be:	4604      	mov	r4, r0
 800d6c0:	6840      	ldr	r0, [r0, #4]
 800d6c2:	6803      	ldr	r3, [r0, #0]
 800d6c4:	681b      	ldr	r3, [r3, #0]
 800d6c6:	4798      	blx	r3
 800d6c8:	b948      	cbnz	r0, 800d6de <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d6ca:	7a63      	ldrb	r3, [r4, #9]
 800d6cc:	b13b      	cbz	r3, 800d6de <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d6ce:	7a23      	ldrb	r3, [r4, #8]
 800d6d0:	b92b      	cbnz	r3, 800d6de <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d6d2:	6823      	ldr	r3, [r4, #0]
 800d6d4:	4620      	mov	r0, r4
 800d6d6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d6d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d6dc:	4718      	bx	r3
 800d6de:	bd10      	pop	{r4, pc}

0800d6e0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800d6e0:	b570      	push	{r4, r5, r6, lr}
 800d6e2:	4604      	mov	r4, r0
 800d6e4:	6840      	ldr	r0, [r0, #4]
 800d6e6:	6803      	ldr	r3, [r0, #0]
 800d6e8:	681b      	ldr	r3, [r3, #0]
 800d6ea:	4798      	blx	r3
 800d6ec:	4605      	mov	r5, r0
 800d6ee:	b930      	cbnz	r0, 800d6fe <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800d6f0:	7a23      	ldrb	r3, [r4, #8]
 800d6f2:	b123      	cbz	r3, 800d6fe <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800d6f4:	6860      	ldr	r0, [r4, #4]
 800d6f6:	6803      	ldr	r3, [r0, #0]
 800d6f8:	695b      	ldr	r3, [r3, #20]
 800d6fa:	4798      	blx	r3
 800d6fc:	7225      	strb	r5, [r4, #8]
 800d6fe:	6860      	ldr	r0, [r4, #4]
 800d700:	6803      	ldr	r3, [r0, #0]
 800d702:	681b      	ldr	r3, [r3, #0]
 800d704:	4798      	blx	r3
 800d706:	b928      	cbnz	r0, 800d714 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800d708:	6823      	ldr	r3, [r4, #0]
 800d70a:	4620      	mov	r0, r4
 800d70c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d70e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d712:	4718      	bx	r3
 800d714:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d718:	f7f4 bab4 	b.w	8001c84 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800d71c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800d71c:	b510      	push	{r4, lr}
 800d71e:	4c04      	ldr	r4, [pc, #16]	@ (800d730 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800d720:	6082      	str	r2, [r0, #8]
 800d722:	2200      	movs	r2, #0
 800d724:	e9c0 4100 	strd	r4, r1, [r0]
 800d728:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800d72c:	bd10      	pop	{r4, pc}
 800d72e:	bf00      	nop
 800d730:	08028984 	.word	0x08028984

0800d734 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800d734:	6840      	ldr	r0, [r0, #4]
 800d736:	6803      	ldr	r3, [r0, #0]
 800d738:	681b      	ldr	r3, [r3, #0]
 800d73a:	4718      	bx	r3
 800d73c:	0000      	movs	r0, r0
	...

0800d740 <_ZN8touchgfxL10applyNoiseEiihhh>:
 800d740:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 800d744:	4f20      	ldr	r7, [pc, #128]	@ (800d7c8 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
 800d746:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800d74a:	fb80 0101 	smull	r0, r1, r0, r1
 800d74e:	fba0 bc07 	umull	fp, ip, r0, r7
 800d752:	fb07 cc01 	mla	ip, r7, r1, ip
 800d756:	fb0b f70c 	mul.w	r7, fp, ip
 800d75a:	fbab 010b 	umull	r0, r1, fp, fp
 800d75e:	461c      	mov	r4, r3
 800d760:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 800d764:	fb00 f30c 	mul.w	r3, r0, ip
 800d768:	fb0b 3301 	mla	r3, fp, r1, r3
 800d76c:	fba0 010b 	umull	r0, r1, r0, fp
 800d770:	4616      	mov	r6, r2
 800d772:	4419      	add	r1, r3
 800d774:	a312      	add	r3, pc, #72	@ (adr r3, 800d7c0 <_ZN8touchgfxL10applyNoiseEiihhh+0x80>)
 800d776:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d77a:	f7f2 fd89 	bl	8000290 <__aeabi_ldivmod>
 800d77e:	2ef7      	cmp	r6, #247	@ 0xf7
 800d780:	b290      	uxth	r0, r2
 800d782:	bf9e      	ittt	ls
 800d784:	f002 0207 	andls.w	r2, r2, #7
 800d788:	18b6      	addls	r6, r6, r2
 800d78a:	b2f6      	uxtbls	r6, r6
 800d78c:	2cfb      	cmp	r4, #251	@ 0xfb
 800d78e:	bf9e      	ittt	ls
 800d790:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
 800d794:	18e4      	addls	r4, r4, r3
 800d796:	b2e4      	uxtbls	r4, r4
 800d798:	2df7      	cmp	r5, #247	@ 0xf7
 800d79a:	bf9c      	itt	ls
 800d79c:	f3c0 1042 	ubfxls	r0, r0, #5, #3
 800d7a0:	182d      	addls	r5, r5, r0
 800d7a2:	480a      	ldr	r0, [pc, #40]	@ (800d7cc <_ZN8touchgfxL10applyNoiseEiihhh+0x8c>)
 800d7a4:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800d7a8:	ea00 2006 	and.w	r0, r0, r6, lsl #8
 800d7ac:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 800d7b0:	bf98      	it	ls
 800d7b2:	b2ed      	uxtbls	r5, r5
 800d7b4:	4304      	orrs	r4, r0
 800d7b6:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
 800d7ba:	b280      	uxth	r0, r0
 800d7bc:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 800d7c0:	797a8d77 	.word	0x797a8d77
 800d7c4:	00000000 	.word	0x00000000
 800d7c8:	00ec4ba7 	.word	0x00ec4ba7
 800d7cc:	fffff800 	.word	0xfffff800

0800d7d0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
 800d7d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d7d4:	ed2d 8b02 	vpush	{d8}
 800d7d8:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800d7dc:	b087      	sub	sp, #28
 800d7de:	7c41      	ldrb	r1, [r0, #17]
 800d7e0:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
 800d7e4:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 800d7e8:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 800d7ec:	4605      	mov	r5, r0
 800d7ee:	2900      	cmp	r1, #0
 800d7f0:	f000 809a 	beq.w	800d928 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
 800d7f4:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800d7f8:	ed90 7a08 	vldr	s14, [r0, #32]
 800d7fc:	68c0      	ldr	r0, [r0, #12]
 800d7fe:	454a      	cmp	r2, r9
 800d800:	db25      	blt.n	800d84e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
 800d802:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800d806:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d80a:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800d80e:	bfc8      	it	gt
 800d810:	2200      	movgt	r2, #0
 800d812:	5882      	ldr	r2, [r0, r2]
 800d814:	2100      	movs	r1, #0
 800d816:	7c2d      	ldrb	r5, [r5, #16]
 800d818:	ea4f 2812 	mov.w	r8, r2, lsr #8
 800d81c:	0950      	lsrs	r0, r2, #5
 800d81e:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
 800d822:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800d826:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
 800d82a:	eb04 0746 	add.w	r7, r4, r6, lsl #1
 800d82e:	2d00      	cmp	r5, #0
 800d830:	d044      	beq.n	800d8bc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800d832:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800d836:	d141      	bne.n	800d8bc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800d838:	bb61      	cbnz	r1, 800d894 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
 800d83a:	ea4e 0000 	orr.w	r0, lr, r0
 800d83e:	ea4c 0500 	orr.w	r5, ip, r0
 800d842:	42bc      	cmp	r4, r7
 800d844:	f080 8217 	bcs.w	800dc76 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800d848:	f824 5b02 	strh.w	r5, [r4], #2
 800d84c:	e7f9      	b.n	800d842 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
 800d84e:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 800d852:	454f      	cmp	r7, r9
 800d854:	dc08      	bgt.n	800d868 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
 800d856:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800d85a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d85e:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800d862:	bfd8      	it	le
 800d864:	2200      	movle	r2, #0
 800d866:	e7d4      	b.n	800d812 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
 800d868:	eba9 0202 	sub.w	r2, r9, r2
 800d86c:	ee07 2a90 	vmov	s15, r2
 800d870:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800d874:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800d878:	ee67 7a87 	vmul.f32	s15, s15, s14
 800d87c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d880:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d884:	ee17 2a90 	vmov	r2, s15
 800d888:	bfd8      	it	le
 800d88a:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
 800d88e:	0092      	lsls	r2, r2, #2
 800d890:	5882      	ldr	r2, [r0, r2]
 800d892:	e7c0      	b.n	800d816 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
 800d894:	b2d5      	uxtb	r5, r2
 800d896:	fa5f f888 	uxtb.w	r8, r8
 800d89a:	f3c2 4a07 	ubfx	sl, r2, #16, #8
 800d89e:	461e      	mov	r6, r3
 800d8a0:	42bc      	cmp	r4, r7
 800d8a2:	f080 81e8 	bcs.w	800dc76 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800d8a6:	4630      	mov	r0, r6
 800d8a8:	9500      	str	r5, [sp, #0]
 800d8aa:	4643      	mov	r3, r8
 800d8ac:	4652      	mov	r2, sl
 800d8ae:	4649      	mov	r1, r9
 800d8b0:	f7ff ff46 	bl	800d740 <_ZN8touchgfxL10applyNoiseEiihhh>
 800d8b4:	3601      	adds	r6, #1
 800d8b6:	f824 0b02 	strh.w	r0, [r4], #2
 800d8ba:	e7f1      	b.n	800d8a0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
 800d8bc:	0e12      	lsrs	r2, r2, #24
 800d8be:	fb02 f20a 	mul.w	r2, r2, sl
 800d8c2:	1c53      	adds	r3, r2, #1
 800d8c4:	eb03 2222 	add.w	r2, r3, r2, asr #8
 800d8c8:	1212      	asrs	r2, r2, #8
 800d8ca:	fb02 f50c 	mul.w	r5, r2, ip
 800d8ce:	fb02 f10e 	mul.w	r1, r2, lr
 800d8d2:	4350      	muls	r0, r2
 800d8d4:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 800dc88 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800d8d8:	43d2      	mvns	r2, r2
 800d8da:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800d8de:	26ff      	movs	r6, #255	@ 0xff
 800d8e0:	42bc      	cmp	r4, r7
 800d8e2:	f080 81c8 	bcs.w	800dc76 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800d8e6:	f8b4 e000 	ldrh.w	lr, [r4]
 800d8ea:	ea0e 030c 	and.w	r3, lr, ip
 800d8ee:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800d8f2:	fb02 1303 	mla	r3, r2, r3, r1
 800d8f6:	fb02 0808 	mla	r8, r2, r8, r0
 800d8fa:	fb93 f3f6 	sdiv	r3, r3, r6
 800d8fe:	fb98 f8f6 	sdiv	r8, r8, r6
 800d902:	ea03 030c 	and.w	r3, r3, ip
 800d906:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800d90a:	f00e 0e1f 	and.w	lr, lr, #31
 800d90e:	ea43 0308 	orr.w	r3, r3, r8
 800d912:	fb02 5e0e 	mla	lr, r2, lr, r5
 800d916:	fb9e fef6 	sdiv	lr, lr, r6
 800d91a:	f00e 0e1f 	and.w	lr, lr, #31
 800d91e:	ea43 030e 	orr.w	r3, r3, lr
 800d922:	f824 3b02 	strh.w	r3, [r4], #2
 800d926:	e7db      	b.n	800d8e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
 800d928:	7c82      	ldrb	r2, [r0, #18]
 800d92a:	2a00      	cmp	r2, #0
 800d92c:	d04f      	beq.n	800d9ce <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
 800d92e:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800d932:	ee07 2a90 	vmov	s15, r2
 800d936:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800d93a:	ee07 3a10 	vmov	s14, r3
 800d93e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d942:	461f      	mov	r7, r3
 800d944:	eef4 6ae7 	vcmpe.f32	s13, s15
 800d948:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d94c:	f200 8095 	bhi.w	800da7a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
 800d950:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800d954:	ee37 7a87 	vadd.f32	s14, s15, s14
 800d958:	f640 71fc 	movw	r1, #4092	@ 0xffc
 800d95c:	ee37 7a66 	vsub.f32	s14, s14, s13
 800d960:	ee06 6a90 	vmov	s13, r6
 800d964:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800d968:	68ea      	ldr	r2, [r5, #12]
 800d96a:	f895 c010 	ldrb.w	ip, [r5, #16]
 800d96e:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800d972:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d976:	bf4a      	itet	mi
 800d978:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
 800d97c:	9602      	strpl	r6, [sp, #8]
 800d97e:	ed8d 7a02 	vstrmi	s14, [sp, #8]
 800d982:	ed95 7a08 	vldr	s14, [r5, #32]
 800d986:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800d98a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d98e:	bfc8      	it	gt
 800d990:	2100      	movgt	r1, #0
 800d992:	5852      	ldr	r2, [r2, r1]
 800d994:	9902      	ldr	r1, [sp, #8]
 800d996:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 800d99a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800d99e:	0950      	lsrs	r0, r2, #5
 800d9a0:	9103      	str	r1, [sp, #12]
 800d9a2:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 800d9a6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800d9aa:	f3c2 01c4 	ubfx	r1, r2, #3, #5
 800d9ae:	f1bc 0f00 	cmp.w	ip, #0
 800d9b2:	d024      	beq.n	800d9fe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800d9b4:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800d9b8:	d121      	bne.n	800d9fe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800d9ba:	ea4b 0b00 	orr.w	fp, fp, r0
 800d9be:	ea41 010b 	orr.w	r1, r1, fp
 800d9c2:	9a03      	ldr	r2, [sp, #12]
 800d9c4:	4294      	cmp	r4, r2
 800d9c6:	d255      	bcs.n	800da74 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800d9c8:	f824 1b02 	strh.w	r1, [r4], #2
 800d9cc:	e7f9      	b.n	800d9c2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
 800d9ce:	ee07 9a10 	vmov	s14, r9
 800d9d2:	edd0 7a06 	vldr	s15, [r0, #24]
 800d9d6:	edd0 6a05 	vldr	s13, [r0, #20]
 800d9da:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d9de:	ee37 7a67 	vsub.f32	s14, s14, s15
 800d9e2:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800d9e6:	ed90 7a08 	vldr	s14, [r0, #32]
 800d9ea:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800d9ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d9f2:	bf44      	itt	mi
 800d9f4:	ed90 7a07 	vldrmi	s14, [r0, #28]
 800d9f8:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
 800d9fc:	e79d      	b.n	800d93a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
 800d9fe:	0e12      	lsrs	r2, r2, #24
 800da00:	fb02 f20a 	mul.w	r2, r2, sl
 800da04:	f102 0c01 	add.w	ip, r2, #1
 800da08:	eb0c 2222 	add.w	r2, ip, r2, asr #8
 800da0c:	1212      	asrs	r2, r2, #8
 800da0e:	4350      	muls	r0, r2
 800da10:	4351      	muls	r1, r2
 800da12:	fb02 fb0b 	mul.w	fp, r2, fp
 800da16:	f8df 8270 	ldr.w	r8, [pc, #624]	@ 800dc88 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800da1a:	9004      	str	r0, [sp, #16]
 800da1c:	43d2      	mvns	r2, r2
 800da1e:	9105      	str	r1, [sp, #20]
 800da20:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800da24:	f04f 0eff 	mov.w	lr, #255	@ 0xff
 800da28:	9903      	ldr	r1, [sp, #12]
 800da2a:	428c      	cmp	r4, r1
 800da2c:	d222      	bcs.n	800da74 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800da2e:	8820      	ldrh	r0, [r4, #0]
 800da30:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
 800da34:	460f      	mov	r7, r1
 800da36:	9904      	ldr	r1, [sp, #16]
 800da38:	ea00 0c08 	and.w	ip, r0, r8
 800da3c:	fb02 bc0c 	mla	ip, r2, ip, fp
 800da40:	fb02 1107 	mla	r1, r2, r7, r1
 800da44:	fb9c fcfe 	sdiv	ip, ip, lr
 800da48:	fb91 f1fe 	sdiv	r1, r1, lr
 800da4c:	ea0c 0c08 	and.w	ip, ip, r8
 800da50:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 800da54:	ea4c 0101 	orr.w	r1, ip, r1
 800da58:	f000 0c1f 	and.w	ip, r0, #31
 800da5c:	9805      	ldr	r0, [sp, #20]
 800da5e:	fb02 0c0c 	mla	ip, r2, ip, r0
 800da62:	fb9c fcfe 	sdiv	ip, ip, lr
 800da66:	f00c 0c1f 	and.w	ip, ip, #31
 800da6a:	ea41 010c 	orr.w	r1, r1, ip
 800da6e:	f824 1b02 	strh.w	r1, [r4], #2
 800da72:	e7d9      	b.n	800da28 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
 800da74:	9a02      	ldr	r2, [sp, #8]
 800da76:	441a      	add	r2, r3
 800da78:	4617      	mov	r7, r2
 800da7a:	441e      	add	r6, r3
 800da7c:	b236      	sxth	r6, r6
 800da7e:	42be      	cmp	r6, r7
 800da80:	f340 80f9 	ble.w	800dc76 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800da84:	ed95 7a07 	vldr	s14, [r5, #28]
 800da88:	ee06 7a90 	vmov	s13, r7
 800da8c:	ee37 7a87 	vadd.f32	s14, s15, s14
 800da90:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800da94:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800da98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800da9c:	f340 80b5 	ble.w	800dc0a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43a>
 800daa0:	ee06 6a10 	vmov	s12, r6
 800daa4:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 800daa8:	ed9f 8a75 	vldr	s16, [pc, #468]	@ 800dc80 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
 800daac:	7c2b      	ldrb	r3, [r5, #16]
 800daae:	eeb4 7ac6 	vcmpe.f32	s14, s12
 800dab2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dab6:	bfd8      	it	le
 800dab8:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
 800dabc:	ed9f 6a71 	vldr	s12, [pc, #452]	@ 800dc84 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
 800dac0:	bfd8      	it	le
 800dac2:	ee17 8a10 	vmovle	r8, s14
 800dac6:	ed95 7a08 	vldr	s14, [r5, #32]
 800daca:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800dace:	bfc8      	it	gt
 800dad0:	46b0      	movgt	r8, r6
 800dad2:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800dad6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dada:	eba8 0707 	sub.w	r7, r8, r7
 800dade:	bfd8      	it	le
 800dae0:	eeb0 8a46 	vmovle.f32	s16, s12
 800dae4:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 800dae8:	eea7 8a27 	vfma.f32	s16, s14, s15
 800daec:	b1db      	cbz	r3, 800db26 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800daee:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800daf2:	d118      	bne.n	800db26 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800daf4:	42bc      	cmp	r4, r7
 800daf6:	d262      	bcs.n	800dbbe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800daf8:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800dafc:	68eb      	ldr	r3, [r5, #12]
 800dafe:	ee17 0a90 	vmov	r0, s15
 800db02:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 800db06:	b2d3      	uxtb	r3, r2
 800db08:	9300      	str	r3, [sp, #0]
 800db0a:	4649      	mov	r1, r9
 800db0c:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800db10:	f3c2 4207 	ubfx	r2, r2, #16, #8
 800db14:	f7ff fe14 	bl	800d740 <_ZN8touchgfxL10applyNoiseEiihhh>
 800db18:	f824 0b02 	strh.w	r0, [r4], #2
 800db1c:	edd5 7a08 	vldr	s15, [r5, #32]
 800db20:	ee38 8a27 	vadd.f32	s16, s16, s15
 800db24:	e7e6      	b.n	800daf4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x324>
 800db26:	f8df b160 	ldr.w	fp, [pc, #352]	@ 800dc88 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800db2a:	f04f 09ff 	mov.w	r9, #255	@ 0xff
 800db2e:	42bc      	cmp	r4, r7
 800db30:	d245      	bcs.n	800dbbe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800db32:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800db36:	68eb      	ldr	r3, [r5, #12]
 800db38:	f8b4 e000 	ldrh.w	lr, [r4]
 800db3c:	ee17 2a90 	vmov	r2, s15
 800db40:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800db44:	0e13      	lsrs	r3, r2, #24
 800db46:	fb03 f30a 	mul.w	r3, r3, sl
 800db4a:	1c58      	adds	r0, r3, #1
 800db4c:	eb00 2023 	add.w	r0, r0, r3, asr #8
 800db50:	1200      	asrs	r0, r0, #8
 800db52:	ea6f 0c00 	mvn.w	ip, r0
 800db56:	fa5f fc8c 	uxtb.w	ip, ip
 800db5a:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
 800db5e:	ea0e 030b 	and.w	r3, lr, fp
 800db62:	fb0c f303 	mul.w	r3, ip, r3
 800db66:	b289      	uxth	r1, r1
 800db68:	fb00 3101 	mla	r1, r0, r1, r3
 800db6c:	fb91 f1f9 	sdiv	r1, r1, r9
 800db70:	ea01 030b 	and.w	r3, r1, fp
 800db74:	9302      	str	r3, [sp, #8]
 800db76:	0953      	lsrs	r3, r2, #5
 800db78:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800db7c:	4619      	mov	r1, r3
 800db7e:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
 800db82:	fb0c f303 	mul.w	r3, ip, r3
 800db86:	fb00 3301 	mla	r3, r0, r1, r3
 800db8a:	f00e 0e1f 	and.w	lr, lr, #31
 800db8e:	9902      	ldr	r1, [sp, #8]
 800db90:	fb93 f3f9 	sdiv	r3, r3, r9
 800db94:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 800db98:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800db9c:	fb0c fc0e 	mul.w	ip, ip, lr
 800dba0:	4319      	orrs	r1, r3
 800dba2:	fb00 c002 	mla	r0, r0, r2, ip
 800dba6:	fb90 f0f9 	sdiv	r0, r0, r9
 800dbaa:	f000 001f 	and.w	r0, r0, #31
 800dbae:	4301      	orrs	r1, r0
 800dbb0:	f824 1b02 	strh.w	r1, [r4], #2
 800dbb4:	edd5 7a08 	vldr	s15, [r5, #32]
 800dbb8:	ee38 8a27 	vadd.f32	s16, s16, s15
 800dbbc:	e7b7      	b.n	800db2e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x35e>
 800dbbe:	4546      	cmp	r6, r8
 800dbc0:	dd59      	ble.n	800dc76 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800dbc2:	edd5 7a08 	vldr	s15, [r5, #32]
 800dbc6:	68ea      	ldr	r2, [r5, #12]
 800dbc8:	7c29      	ldrb	r1, [r5, #16]
 800dbca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800dbce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dbd2:	f640 73fc 	movw	r3, #4092	@ 0xffc
 800dbd6:	bfd8      	it	le
 800dbd8:	2300      	movle	r3, #0
 800dbda:	eba6 0608 	sub.w	r6, r6, r8
 800dbde:	58d2      	ldr	r2, [r2, r3]
 800dbe0:	0a10      	lsrs	r0, r2, #8
 800dbe2:	0953      	lsrs	r3, r2, #5
 800dbe4:	eb04 0646 	add.w	r6, r4, r6, lsl #1
 800dbe8:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 800dbec:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800dbf0:	f3c2 07c4 	ubfx	r7, r2, #3, #5
 800dbf4:	b159      	cbz	r1, 800dc0e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800dbf6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800dbfa:	d108      	bne.n	800dc0e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800dbfc:	4318      	orrs	r0, r3
 800dbfe:	4338      	orrs	r0, r7
 800dc00:	42b4      	cmp	r4, r6
 800dc02:	d238      	bcs.n	800dc76 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800dc04:	f824 0b02 	strh.w	r0, [r4], #2
 800dc08:	e7fa      	b.n	800dc00 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x430>
 800dc0a:	46b8      	mov	r8, r7
 800dc0c:	e7d9      	b.n	800dbc2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3f2>
 800dc0e:	0e12      	lsrs	r2, r2, #24
 800dc10:	fb02 f10a 	mul.w	r1, r2, sl
 800dc14:	1c4a      	adds	r2, r1, #1
 800dc16:	eb02 2221 	add.w	r2, r2, r1, asr #8
 800dc1a:	1212      	asrs	r2, r2, #8
 800dc1c:	fb02 f507 	mul.w	r5, r2, r7
 800dc20:	4350      	muls	r0, r2
 800dc22:	4353      	muls	r3, r2
 800dc24:	f8df c060 	ldr.w	ip, [pc, #96]	@ 800dc88 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800dc28:	43d2      	mvns	r2, r2
 800dc2a:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800dc2e:	27ff      	movs	r7, #255	@ 0xff
 800dc30:	42b4      	cmp	r4, r6
 800dc32:	d220      	bcs.n	800dc76 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800dc34:	f8b4 e000 	ldrh.w	lr, [r4]
 800dc38:	ea0e 010c 	and.w	r1, lr, ip
 800dc3c:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800dc40:	fb02 0101 	mla	r1, r2, r1, r0
 800dc44:	fb02 3808 	mla	r8, r2, r8, r3
 800dc48:	fb91 f1f7 	sdiv	r1, r1, r7
 800dc4c:	fb98 f8f7 	sdiv	r8, r8, r7
 800dc50:	ea01 010c 	and.w	r1, r1, ip
 800dc54:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800dc58:	f00e 0e1f 	and.w	lr, lr, #31
 800dc5c:	ea41 0108 	orr.w	r1, r1, r8
 800dc60:	fb02 5e0e 	mla	lr, r2, lr, r5
 800dc64:	fb9e fef7 	sdiv	lr, lr, r7
 800dc68:	f00e 0e1f 	and.w	lr, lr, #31
 800dc6c:	ea41 010e 	orr.w	r1, r1, lr
 800dc70:	f824 1b02 	strh.w	r1, [r4], #2
 800dc74:	e7dc      	b.n	800dc30 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x460>
 800dc76:	b007      	add	sp, #28
 800dc78:	ecbd 8b02 	vpop	{d8}
 800dc7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc80:	00000000 	.word	0x00000000
 800dc84:	447ffffe 	.word	0x447ffffe
 800dc88:	fffff800 	.word	0xfffff800

0800dc8c <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
 800dc8c:	4770      	bx	lr

0800dc8e <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
 800dc8e:	4770      	bx	lr

0800dc90 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
 800dc90:	b510      	push	{r4, lr}
 800dc92:	2124      	movs	r1, #36	@ 0x24
 800dc94:	4604      	mov	r4, r0
 800dc96:	f016 fe48 	bl	802492a <_ZdlPvj>
 800dc9a:	4620      	mov	r0, r4
 800dc9c:	bd10      	pop	{r4, pc}
	...

0800dca0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800dca0:	4b06      	ldr	r3, [pc, #24]	@ (800dcbc <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800dca2:	60c1      	str	r1, [r0, #12]
 800dca4:	094a      	lsrs	r2, r1, #5
 800dca6:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800dcaa:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 800dcae:	4313      	orrs	r3, r2
 800dcb0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800dcb4:	4319      	orrs	r1, r3
 800dcb6:	8201      	strh	r1, [r0, #16]
 800dcb8:	4770      	bx	lr
 800dcba:	bf00      	nop
 800dcbc:	fffff800 	.word	0xfffff800

0800dcc0 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800dcc0:	f1a0 0008 	sub.w	r0, r0, #8
 800dcc4:	e7ec      	b.n	800dca0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800dcc6:	bf00      	nop

0800dcc8 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800dcc8:	b508      	push	{r3, lr}
 800dcca:	4b05      	ldr	r3, [pc, #20]	@ (800dce0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800dccc:	6818      	ldr	r0, [r3, #0]
 800dcce:	6803      	ldr	r3, [r0, #0]
 800dcd0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800dcd4:	4798      	blx	r3
 800dcd6:	1e43      	subs	r3, r0, #1
 800dcd8:	4258      	negs	r0, r3
 800dcda:	4158      	adcs	r0, r3
 800dcdc:	bd08      	pop	{r3, pc}
 800dcde:	bf00      	nop
 800dce0:	200152ec 	.word	0x200152ec

0800dce4 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800dce4:	4770      	bx	lr

0800dce6 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800dce6:	3808      	subs	r0, #8
 800dce8:	4770      	bx	lr

0800dcea <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800dcea:	b430      	push	{r4, r5}
 800dcec:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800dcf0:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800dcf4:	8a02      	ldrh	r2, [r0, #16]
 800dcf6:	9202      	str	r2, [sp, #8]
 800dcf8:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800dcfc:	68c2      	ldr	r2, [r0, #12]
 800dcfe:	4629      	mov	r1, r5
 800dd00:	4620      	mov	r0, r4
 800dd02:	bc30      	pop	{r4, r5}
 800dd04:	f7f4 b986 	b.w	8002014 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800dd08 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800dd08:	f7f4 b978 	b.w	8001ffc <_ZN8touchgfx5paint8tearDownEv>

0800dd0c <_ZN8touchgfx13PainterRGB565D0Ev>:
 800dd0c:	b510      	push	{r4, lr}
 800dd0e:	2114      	movs	r1, #20
 800dd10:	4604      	mov	r4, r0
 800dd12:	f016 fe0a 	bl	802492a <_ZdlPvj>
 800dd16:	4620      	mov	r0, r4
 800dd18:	bd10      	pop	{r4, pc}

0800dd1a <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800dd1a:	f1a0 0008 	sub.w	r0, r0, #8
 800dd1e:	e7f5      	b.n	800dd0c <_ZN8touchgfx13PainterRGB565D0Ev>

0800dd20 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
 800dd20:	2300      	movs	r3, #0
 800dd22:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800dd24:	8503      	strh	r3, [r0, #40]	@ 0x28
 800dd26:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800dd28:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800dd2a:	6980      	ldr	r0, [r0, #24]
 800dd2c:	b110      	cbz	r0, 800dd34 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
 800dd2e:	6803      	ldr	r3, [r0, #0]
 800dd30:	691b      	ldr	r3, [r3, #16]
 800dd32:	4718      	bx	r3
 800dd34:	4770      	bx	lr

0800dd36 <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
 800dd36:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
 800dd3a:	4770      	bx	lr

0800dd3c <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
 800dd3c:	b538      	push	{r3, r4, r5, lr}
 800dd3e:	0e0b      	lsrs	r3, r1, #24
 800dd40:	7783      	strb	r3, [r0, #30]
 800dd42:	6803      	ldr	r3, [r0, #0]
 800dd44:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800dd46:	4604      	mov	r4, r0
 800dd48:	460d      	mov	r5, r1
 800dd4a:	4798      	blx	r3
 800dd4c:	6803      	ldr	r3, [r0, #0]
 800dd4e:	4629      	mov	r1, r5
 800dd50:	689b      	ldr	r3, [r3, #8]
 800dd52:	4798      	blx	r3
 800dd54:	6823      	ldr	r3, [r4, #0]
 800dd56:	4620      	mov	r0, r4
 800dd58:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800dd5a:	4798      	blx	r3
 800dd5c:	61a0      	str	r0, [r4, #24]
 800dd5e:	bd38      	pop	{r3, r4, r5, pc}

0800dd60 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
 800dd60:	7741      	strb	r1, [r0, #29]
 800dd62:	4770      	bx	lr

0800dd64 <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 800dd64:	b530      	push	{r4, r5, lr}
 800dd66:	460d      	mov	r5, r1
 800dd68:	f100 0434 	add.w	r4, r0, #52	@ 0x34
 800dd6c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800dd6e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800dd70:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800dd72:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800dd74:	682b      	ldr	r3, [r5, #0]
 800dd76:	6023      	str	r3, [r4, #0]
 800dd78:	bd30      	pop	{r4, r5, pc}

0800dd7a <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
 800dd7a:	b538      	push	{r3, r4, r5, lr}
 800dd7c:	4604      	mov	r4, r0
 800dd7e:	1d03      	adds	r3, r0, #4
 800dd80:	6808      	ldr	r0, [r1, #0]
 800dd82:	6849      	ldr	r1, [r1, #4]
 800dd84:	c303      	stmia	r3!, {r0, r1}
 800dd86:	6813      	ldr	r3, [r2, #0]
 800dd88:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 800dd8c:	6853      	ldr	r3, [r2, #4]
 800dd8e:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
 800dd92:	2500      	movs	r5, #0
 800dd94:	61a5      	str	r5, [r4, #24]
 800dd96:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 800dd9a:	f005 fd35 	bl	8013808 <_ZN8touchgfx9Matrix3x35resetEv>
 800dd9e:	23ff      	movs	r3, #255	@ 0xff
 800dda0:	7763      	strb	r3, [r4, #29]
 800dda2:	77a3      	strb	r3, [r4, #30]
 800dda4:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800dda8:	6323      	str	r3, [r4, #48]	@ 0x30
 800ddaa:	2301      	movs	r3, #1
 800ddac:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 800ddb0:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
 800ddb4:	bd38      	pop	{r3, r4, r5, pc}
	...

0800ddb8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 800ddb8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ddbc:	ed2d 8b0a 	vpush	{d8-d12}
 800ddc0:	ee70 7a41 	vsub.f32	s15, s0, s2
 800ddc4:	b087      	sub	sp, #28
 800ddc6:	eef5 7a40 	vcmp.f32	s15, #0.0
 800ddca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ddce:	4605      	mov	r5, r0
 800ddd0:	eef0 9a40 	vmov.f32	s19, s0
 800ddd4:	eeb0 aa60 	vmov.f32	s20, s1
 800ddd8:	eeb0 9a41 	vmov.f32	s18, s2
 800dddc:	eef0 8a61 	vmov.f32	s17, s3
 800dde0:	eeb0 ca42 	vmov.f32	s24, s4
 800dde4:	eef0 ca62 	vmov.f32	s25, s5
 800dde8:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800ddec:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 800ddee:	6802      	ldr	r2, [r0, #0]
 800ddf0:	d112      	bne.n	800de18 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800ddf2:	ee70 7ae1 	vsub.f32	s15, s1, s3
 800ddf6:	eef5 7a40 	vcmp.f32	s15, #0.0
 800ddfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ddfe:	d10b      	bne.n	800de18 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800de00:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 800de04:	3901      	subs	r1, #1
 800de06:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 800de08:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 800de0c:	b007      	add	sp, #28
 800de0e:	ecbd 8b0a 	vpop	{d8-d12}
 800de12:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800de16:	4710      	bx	r2
 800de18:	23ff      	movs	r3, #255	@ 0xff
 800de1a:	77ab      	strb	r3, [r5, #30]
 800de1c:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800de1e:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 800e0e4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
 800de22:	4628      	mov	r0, r5
 800de24:	4798      	blx	r3
 800de26:	f105 0834 	add.w	r8, r5, #52	@ 0x34
 800de2a:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 800de2e:	80c3      	strh	r3, [r0, #6]
 800de30:	eef0 0a4a 	vmov.f32	s1, s20
 800de34:	eeb0 0a69 	vmov.f32	s0, s19
 800de38:	4604      	mov	r4, r0
 800de3a:	4640      	mov	r0, r8
 800de3c:	f005 fd93 	bl	8013966 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800de40:	4640      	mov	r0, r8
 800de42:	eeb0 ba40 	vmov.f32	s22, s0
 800de46:	eef0 ba60 	vmov.f32	s23, s1
 800de4a:	ed8d 0a00 	vstr	s0, [sp]
 800de4e:	edcd 0a01 	vstr	s1, [sp, #4]
 800de52:	eeb0 0a49 	vmov.f32	s0, s18
 800de56:	eef0 0a68 	vmov.f32	s1, s17
 800de5a:	f005 fd84 	bl	8013966 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800de5e:	eeb4 ba40 	vcmp.f32	s22, s0
 800de62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800de66:	eef4 ba60 	vcmp.f32	s23, s1
 800de6a:	bf0c      	ite	eq
 800de6c:	2301      	moveq	r3, #1
 800de6e:	2300      	movne	r3, #0
 800de70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800de74:	eeb4 ba40 	vcmp.f32	s22, s0
 800de78:	7463      	strb	r3, [r4, #17]
 800de7a:	bf0c      	ite	eq
 800de7c:	2301      	moveq	r3, #1
 800de7e:	2300      	movne	r3, #0
 800de80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800de84:	eeb0 8a40 	vmov.f32	s16, s0
 800de88:	eef0 aa60 	vmov.f32	s21, s1
 800de8c:	ed8d 0a02 	vstr	s0, [sp, #8]
 800de90:	edcd 0a03 	vstr	s1, [sp, #12]
 800de94:	74a3      	strb	r3, [r4, #18]
 800de96:	d030      	beq.n	800defa <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800de98:	eef4 ba60 	vcmp.f32	s23, s1
 800de9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dea0:	d02b      	beq.n	800defa <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800dea2:	ee39 9a69 	vsub.f32	s18, s18, s19
 800dea6:	ee78 8aca 	vsub.f32	s17, s17, s20
 800deaa:	ee89 7a0c 	vdiv.f32	s14, s18, s24
 800deae:	4640      	mov	r0, r8
 800deb0:	eec8 7aac 	vdiv.f32	s15, s17, s25
 800deb4:	eef0 0a4a 	vmov.f32	s1, s20
 800deb8:	eeb0 0a69 	vmov.f32	s0, s19
 800debc:	eea7 0acc 	vfms.f32	s0, s15, s24
 800dec0:	eeec 0a87 	vfma.f32	s1, s25, s14
 800dec4:	f005 fd4f 	bl	8013966 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800dec8:	f899 3000 	ldrb.w	r3, [r9]
 800decc:	edcd 0a05 	vstr	s1, [sp, #20]
 800ded0:	ee70 0aeb 	vsub.f32	s1, s1, s23
 800ded4:	2b01      	cmp	r3, #1
 800ded6:	ed8d 0a04 	vstr	s0, [sp, #16]
 800deda:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800dede:	bf02      	ittt	eq
 800dee0:	eef1 7a60 	vnegeq.f32	s15, s1
 800dee4:	eef0 0a40 	vmoveq.f32	s1, s0
 800dee8:	eeb0 0a67 	vmoveq.f32	s0, s15
 800deec:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800def0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800def4:	d134      	bne.n	800df60 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
 800def6:	2301      	movs	r3, #1
 800def8:	74a3      	strb	r3, [r4, #18]
 800defa:	f899 2000 	ldrb.w	r2, [r9]
 800defe:	7c63      	ldrb	r3, [r4, #17]
 800df00:	2a01      	cmp	r2, #1
 800df02:	f040 80a3 	bne.w	800e04c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x294>
 800df06:	2b00      	cmp	r3, #0
 800df08:	d072      	beq.n	800dff0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x238>
 800df0a:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800df0e:	eddf 6a73 	vldr	s13, [pc, #460]	@ 800e0dc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800df12:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800df16:	eef4 baea 	vcmpe.f32	s23, s21
 800df1a:	edc4 7a08 	vstr	s15, [r4, #32]
 800df1e:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800df22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800df26:	ee17 3a90 	vmov	r3, s15
 800df2a:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800df2e:	b21a      	sxth	r2, r3
 800df30:	ee17 3a90 	vmov	r3, s15
 800df34:	b21b      	sxth	r3, r3
 800df36:	bf47      	ittee	mi
 800df38:	8123      	strhmi	r3, [r4, #8]
 800df3a:	8162      	strhmi	r2, [r4, #10]
 800df3c:	8122      	strhpl	r2, [r4, #8]
 800df3e:	8163      	strhpl	r3, [r4, #10]
 800df40:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800df44:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800df48:	1a9b      	subs	r3, r3, r2
 800df4a:	ee07 3a90 	vmov	s15, r3
 800df4e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800df52:	2300      	movs	r3, #0
 800df54:	7463      	strb	r3, [r4, #17]
 800df56:	edc4 7a07 	vstr	s15, [r4, #28]
 800df5a:	2301      	movs	r3, #1
 800df5c:	74a3      	strb	r3, [r4, #18]
 800df5e:	e03f      	b.n	800dfe0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800df60:	ee80 7a80 	vdiv.f32	s14, s1, s0
 800df64:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800df68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800df6c:	ed84 7a05 	vstr	s14, [r4, #20]
 800df70:	d102      	bne.n	800df78 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c0>
 800df72:	2301      	movs	r3, #1
 800df74:	7463      	strb	r3, [r4, #17]
 800df76:	e7c0      	b.n	800defa <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800df78:	2b01      	cmp	r3, #1
 800df7a:	bf03      	ittte	eq
 800df7c:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
 800df80:	ee07 2a90 	vmoveq	s15, r2
 800df84:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
 800df88:	eef0 7a6b 	vmovne.f32	s15, s23
 800df8c:	bf0a      	itet	eq
 800df8e:	ee77 7acb 	vsubeq.f32	s15, s15, s22
 800df92:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
 800df96:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
 800df9a:	2b01      	cmp	r3, #1
 800df9c:	ee38 8a4b 	vsub.f32	s16, s16, s22
 800dfa0:	ee7a aaeb 	vsub.f32	s21, s21, s23
 800dfa4:	edc4 7a06 	vstr	s15, [r4, #24]
 800dfa8:	bf02      	ittt	eq
 800dfaa:	eef1 7a48 	vnegeq.f32	s15, s16
 800dfae:	eeb0 8a6a 	vmoveq.f32	s16, s21
 800dfb2:	eef0 aa67 	vmoveq.f32	s21, s15
 800dfb6:	eeca 7a87 	vdiv.f32	s15, s21, s14
 800dfba:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 800e0e0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
 800dfbe:	ee38 8a67 	vsub.f32	s16, s16, s15
 800dfc2:	eec7 7a08 	vdiv.f32	s15, s14, s16
 800dfc6:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800dfca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dfce:	ed84 8a07 	vstr	s16, [r4, #28]
 800dfd2:	edc4 7a08 	vstr	s15, [r4, #32]
 800dfd6:	d503      	bpl.n	800dfe0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800dfd8:	eeb1 8a48 	vneg.f32	s16, s16
 800dfdc:	ed84 8a07 	vstr	s16, [r4, #28]
 800dfe0:	60e7      	str	r7, [r4, #12]
 800dfe2:	7426      	strb	r6, [r4, #16]
 800dfe4:	61ac      	str	r4, [r5, #24]
 800dfe6:	b007      	add	sp, #28
 800dfe8:	ecbd 8b0a 	vpop	{d8-d12}
 800dfec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dff0:	7ca3      	ldrb	r3, [r4, #18]
 800dff2:	2b00      	cmp	r3, #0
 800dff4:	d0f4      	beq.n	800dfe0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800dff6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800dffa:	eddf 6a38 	vldr	s13, [pc, #224]	@ 800e0dc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800dffe:	ee00 3a10 	vmov	s0, r3
 800e002:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800e006:	ee30 8a48 	vsub.f32	s16, s0, s16
 800e00a:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800e00e:	ee38 7a40 	vsub.f32	s14, s16, s0
 800e012:	eeb4 8ac0 	vcmpe.f32	s16, s0
 800e016:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800e01a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e01e:	edc4 7a08 	vstr	s15, [r4, #32]
 800e022:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800e026:	ee17 3a90 	vmov	r3, s15
 800e02a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800e02e:	b21a      	sxth	r2, r3
 800e030:	ee17 3a90 	vmov	r3, s15
 800e034:	b21b      	sxth	r3, r3
 800e036:	bfcc      	ite	gt
 800e038:	8123      	strhgt	r3, [r4, #8]
 800e03a:	8163      	strhle	r3, [r4, #10]
 800e03c:	f04f 0301 	mov.w	r3, #1
 800e040:	7463      	strb	r3, [r4, #17]
 800e042:	bfcc      	ite	gt
 800e044:	8162      	strhgt	r2, [r4, #10]
 800e046:	8122      	strhle	r2, [r4, #8]
 800e048:	2300      	movs	r3, #0
 800e04a:	e787      	b.n	800df5c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a4>
 800e04c:	b1db      	cbz	r3, 800e086 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2ce>
 800e04e:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800e052:	eddf 6a22 	vldr	s13, [pc, #136]	@ 800e0dc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800e056:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800e05a:	eef4 baea 	vcmpe.f32	s23, s21
 800e05e:	edc4 7a08 	vstr	s15, [r4, #32]
 800e062:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800e066:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e06a:	ee17 3a90 	vmov	r3, s15
 800e06e:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800e072:	b21a      	sxth	r2, r3
 800e074:	ee17 3a90 	vmov	r3, s15
 800e078:	b21b      	sxth	r3, r3
 800e07a:	bf47      	ittee	mi
 800e07c:	8123      	strhmi	r3, [r4, #8]
 800e07e:	8162      	strhmi	r2, [r4, #10]
 800e080:	8122      	strhpl	r2, [r4, #8]
 800e082:	8163      	strhpl	r3, [r4, #10]
 800e084:	e7ac      	b.n	800dfe0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800e086:	7ca3      	ldrb	r3, [r4, #18]
 800e088:	2b00      	cmp	r3, #0
 800e08a:	d0a9      	beq.n	800dfe0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800e08c:	ee38 7a4b 	vsub.f32	s14, s16, s22
 800e090:	eddf 6a12 	vldr	s13, [pc, #72]	@ 800e0dc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800e094:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800e098:	eeb4 bac8 	vcmpe.f32	s22, s16
 800e09c:	edc4 7a08 	vstr	s15, [r4, #32]
 800e0a0:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800e0a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e0a8:	ee17 3a90 	vmov	r3, s15
 800e0ac:	eefd 7acb 	vcvt.s32.f32	s15, s22
 800e0b0:	b21a      	sxth	r2, r3
 800e0b2:	ee17 3a90 	vmov	r3, s15
 800e0b6:	b21b      	sxth	r3, r3
 800e0b8:	bf47      	ittee	mi
 800e0ba:	8123      	strhmi	r3, [r4, #8]
 800e0bc:	8162      	strhmi	r2, [r4, #10]
 800e0be:	8122      	strhpl	r2, [r4, #8]
 800e0c0:	8163      	strhpl	r3, [r4, #10]
 800e0c2:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e0c6:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800e0ca:	1a9b      	subs	r3, r3, r2
 800e0cc:	ee07 3a90 	vmov	s15, r3
 800e0d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e0d4:	edc4 7a07 	vstr	s15, [r4, #28]
 800e0d8:	e782      	b.n	800dfe0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800e0da:	bf00      	nop
 800e0dc:	447ffffe 	.word	0x447ffffe
 800e0e0:	44800000 	.word	0x44800000
 800e0e4:	200152e4 	.word	0x200152e4

0800e0e8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
 800e0e8:	b510      	push	{r4, lr}
 800e0ea:	2100      	movs	r1, #0
 800e0ec:	ed2d 8b02 	vpush	{d8}
 800e0f0:	eef0 8a62 	vmov.f32	s17, s5
 800e0f4:	4604      	mov	r4, r0
 800e0f6:	eeb0 8a42 	vmov.f32	s16, s4
 800e0fa:	f016 f9a5 	bl	8024448 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 800e0fe:	eef0 7a68 	vmov.f32	s15, s17
 800e102:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800e106:	6823      	ldr	r3, [r4, #0]
 800e108:	ee17 2a90 	vmov	r2, s15
 800e10c:	eef0 7a48 	vmov.f32	s15, s16
 800e110:	ecbd 8b02 	vpop	{d8}
 800e114:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800e118:	4620      	mov	r0, r4
 800e11a:	689b      	ldr	r3, [r3, #8]
 800e11c:	ee17 1a90 	vmov	r1, s15
 800e120:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e124:	4718      	bx	r3

0800e126 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
 800e126:	b510      	push	{r4, lr}
 800e128:	2100      	movs	r1, #0
 800e12a:	ed2d 8b02 	vpush	{d8}
 800e12e:	eef0 8a63 	vmov.f32	s17, s7
 800e132:	4604      	mov	r4, r0
 800e134:	eeb0 8a43 	vmov.f32	s16, s6
 800e138:	f016 fa48 	bl	80245cc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 800e13c:	eef0 7a68 	vmov.f32	s15, s17
 800e140:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800e144:	6823      	ldr	r3, [r4, #0]
 800e146:	ee17 2a90 	vmov	r2, s15
 800e14a:	eef0 7a48 	vmov.f32	s15, s16
 800e14e:	ecbd 8b02 	vpop	{d8}
 800e152:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800e156:	4620      	mov	r0, r4
 800e158:	689b      	ldr	r3, [r3, #8]
 800e15a:	ee17 1a90 	vmov	r1, s15
 800e15e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e162:	4718      	bx	r3

0800e164 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
 800e164:	b513      	push	{r0, r1, r4, lr}
 800e166:	4604      	mov	r4, r0
 800e168:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800e16a:	f005 fbfc 	bl	8013966 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800e16e:	eef0 7a60 	vmov.f32	s15, s1
 800e172:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800e176:	4620      	mov	r0, r4
 800e178:	ee17 2a90 	vmov	r2, s15
 800e17c:	eef0 7a40 	vmov.f32	s15, s0
 800e180:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800e184:	ee17 1a90 	vmov	r1, s15
 800e188:	b002      	add	sp, #8
 800e18a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e18e:	f016 b8b5 	b.w	80242fc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

0800e192 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
 800e192:	b513      	push	{r0, r1, r4, lr}
 800e194:	4604      	mov	r4, r0
 800e196:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800e198:	f005 fbe5 	bl	8013966 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800e19c:	eef0 7a60 	vmov.f32	s15, s1
 800e1a0:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800e1a4:	4620      	mov	r0, r4
 800e1a6:	ee17 2a90 	vmov	r2, s15
 800e1aa:	eef0 7a40 	vmov.f32	s15, s0
 800e1ae:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800e1b2:	ee17 1a90 	vmov	r1, s15
 800e1b6:	b002      	add	sp, #8
 800e1b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e1bc:	f016 b8eb 	b.w	8024396 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

0800e1c0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
 800e1c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e1c2:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
 800e1c6:	2400      	movs	r4, #0
 800e1c8:	9f07      	ldr	r7, [sp, #28]
 800e1ca:	4463      	add	r3, ip
 800e1cc:	4626      	mov	r6, r4
 800e1ce:	f04f 0e01 	mov.w	lr, #1
 800e1d2:	4563      	cmp	r3, ip
 800e1d4:	d02d      	beq.n	800e232 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
 800e1d6:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
 800e1da:	2d06      	cmp	r5, #6
 800e1dc:	d8f9      	bhi.n	800e1d2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800e1de:	fa0e f505 	lsl.w	r5, lr, r5
 800e1e2:	f015 0f66 	tst.w	r5, #102	@ 0x66
 800e1e6:	d10d      	bne.n	800e204 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
 800e1e8:	f015 0f10 	tst.w	r5, #16
 800e1ec:	d117      	bne.n	800e21e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
 800e1ee:	072d      	lsls	r5, r5, #28
 800e1f0:	d5ef      	bpl.n	800e1d2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800e1f2:	3801      	subs	r0, #1
 800e1f4:	b91e      	cbnz	r6, 800e1fe <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
 800e1f6:	eb07 0580 	add.w	r5, r7, r0, lsl #2
 800e1fa:	682d      	ldr	r5, [r5, #0]
 800e1fc:	600d      	str	r5, [r1, #0]
 800e1fe:	b96c      	cbnz	r4, 800e21c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800e200:	2601      	movs	r6, #1
 800e202:	e7e6      	b.n	800e1d2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800e204:	b926      	cbnz	r6, 800e210 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
 800e206:	eb07 0380 	add.w	r3, r7, r0, lsl #2
 800e20a:	f853 3c08 	ldr.w	r3, [r3, #-8]
 800e20e:	600b      	str	r3, [r1, #0]
 800e210:	b924      	cbnz	r4, 800e21c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800e212:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800e216:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800e21a:	6013      	str	r3, [r2, #0]
 800e21c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e21e:	3801      	subs	r0, #1
 800e220:	b91c      	cbnz	r4, 800e22a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
 800e222:	eb07 0480 	add.w	r4, r7, r0, lsl #2
 800e226:	6824      	ldr	r4, [r4, #0]
 800e228:	6014      	str	r4, [r2, #0]
 800e22a:	2e00      	cmp	r6, #0
 800e22c:	d1f6      	bne.n	800e21c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800e22e:	2401      	movs	r4, #1
 800e230:	e7cf      	b.n	800e1d2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800e232:	b90e      	cbnz	r6, 800e238 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
 800e234:	2300      	movs	r3, #0
 800e236:	600b      	str	r3, [r1, #0]
 800e238:	2c00      	cmp	r4, #0
 800e23a:	d1ef      	bne.n	800e21c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800e23c:	2300      	movs	r3, #0
 800e23e:	e7ec      	b.n	800e21a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

0800e240 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
 800e240:	b538      	push	{r3, r4, r5, lr}
 800e242:	4604      	mov	r4, r0
 800e244:	ed2d 8b0a 	vpush	{d8-d12}
 800e248:	460d      	mov	r5, r1
 800e24a:	eef0 ba40 	vmov.f32	s23, s0
 800e24e:	eeb0 ca60 	vmov.f32	s24, s1
 800e252:	eef0 aa41 	vmov.f32	s21, s2
 800e256:	eeb0 ba61 	vmov.f32	s22, s3
 800e25a:	eeb0 9a42 	vmov.f32	s18, s4
 800e25e:	eef0 9a62 	vmov.f32	s19, s5
 800e262:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
 800e266:	ee7b 8a29 	vadd.f32	s17, s22, s19
 800e26a:	ee3a 8a89 	vadd.f32	s16, s21, s18
 800e26e:	ee68 8a8a 	vmul.f32	s17, s17, s20
 800e272:	ee28 8a0a 	vmul.f32	s16, s16, s20
 800e276:	ee3c 0a68 	vsub.f32	s0, s24, s17
 800e27a:	ee7b 7ac8 	vsub.f32	s15, s23, s16
 800e27e:	ee20 0a00 	vmul.f32	s0, s0, s0
 800e282:	eea7 0aa7 	vfma.f32	s0, s15, s15
 800e286:	f016 fb7b 	bl	8024980 <sqrtf>
 800e28a:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800e28e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e292:	d12e      	bne.n	800e2f2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
 800e294:	ee79 7a6a 	vsub.f32	s15, s18, s21
 800e298:	ee39 7acb 	vsub.f32	s14, s19, s22
 800e29c:	eeb0 8a6a 	vmov.f32	s16, s21
 800e2a0:	eef0 8a4b 	vmov.f32	s17, s22
 800e2a4:	eea7 8a8a 	vfma.f32	s16, s15, s20
 800e2a8:	eee7 8a0a 	vfma.f32	s17, s14, s20
 800e2ac:	eea7 8a0a 	vfma.f32	s16, s14, s20
 800e2b0:	eee7 8aca 	vfms.f32	s17, s15, s20
 800e2b4:	2d02      	cmp	r5, #2
 800e2b6:	dc2f      	bgt.n	800e318 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
 800e2b8:	3501      	adds	r5, #1
 800e2ba:	eef0 1a4b 	vmov.f32	s3, s22
 800e2be:	eeb0 1a6a 	vmov.f32	s2, s21
 800e2c2:	4629      	mov	r1, r5
 800e2c4:	eef0 2a68 	vmov.f32	s5, s17
 800e2c8:	eeb0 2a48 	vmov.f32	s4, s16
 800e2cc:	eef0 0a4c 	vmov.f32	s1, s24
 800e2d0:	eeb0 0a6b 	vmov.f32	s0, s23
 800e2d4:	4620      	mov	r0, r4
 800e2d6:	f7ff ffb3 	bl	800e240 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800e2da:	eef0 0a68 	vmov.f32	s1, s17
 800e2de:	eeb0 0a48 	vmov.f32	s0, s16
 800e2e2:	4620      	mov	r0, r4
 800e2e4:	f7ff ff55 	bl	800e192 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e2e8:	eeb0 ba68 	vmov.f32	s22, s17
 800e2ec:	eef0 aa48 	vmov.f32	s21, s16
 800e2f0:	e7b9      	b.n	800e266 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
 800e2f2:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800e2f6:	ee38 8a6b 	vsub.f32	s16, s16, s23
 800e2fa:	ee78 8acc 	vsub.f32	s17, s17, s24
 800e2fe:	ee28 7a27 	vmul.f32	s14, s16, s15
 800e302:	ee68 7aa7 	vmul.f32	s15, s17, s15
 800e306:	ee87 8a00 	vdiv.f32	s16, s14, s0
 800e30a:	eec7 8a80 	vdiv.f32	s17, s15, s0
 800e30e:	ee3b 8a88 	vadd.f32	s16, s23, s16
 800e312:	ee7c 8a28 	vadd.f32	s17, s24, s17
 800e316:	e7cd      	b.n	800e2b4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
 800e318:	eef0 0a68 	vmov.f32	s1, s17
 800e31c:	eeb0 0a48 	vmov.f32	s0, s16
 800e320:	4620      	mov	r0, r4
 800e322:	f7ff ff36 	bl	800e192 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e326:	ecbd 8b0a 	vpop	{d8-d12}
 800e32a:	bd38      	pop	{r3, r4, r5, pc}

0800e32c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
 800e32c:	b510      	push	{r4, lr}
 800e32e:	ed2d 8b0a 	vpush	{d8-d12}
 800e332:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
 800e336:	2b02      	cmp	r3, #2
 800e338:	4604      	mov	r4, r0
 800e33a:	eeb0 ca40 	vmov.f32	s24, s0
 800e33e:	eeb0 9a60 	vmov.f32	s18, s1
 800e342:	eef0 9a41 	vmov.f32	s19, s2
 800e346:	eef0 8a61 	vmov.f32	s17, s3
 800e34a:	eeb0 ba42 	vmov.f32	s22, s4
 800e34e:	eef0 ba62 	vmov.f32	s23, s5
 800e352:	eeb0 aa43 	vmov.f32	s20, s6
 800e356:	eef0 aa63 	vmov.f32	s21, s7
 800e35a:	eeb0 8a44 	vmov.f32	s16, s8
 800e35e:	eef0 ca64 	vmov.f32	s25, s9
 800e362:	d12c      	bne.n	800e3be <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
 800e364:	eef0 0a62 	vmov.f32	s1, s5
 800e368:	eeb0 0a42 	vmov.f32	s0, s4
 800e36c:	f7ff ff11 	bl	800e192 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e370:	ee79 9acb 	vsub.f32	s19, s19, s22
 800e374:	ee7a caec 	vsub.f32	s25, s21, s25
 800e378:	ee78 8aeb 	vsub.f32	s17, s17, s23
 800e37c:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800e380:	ee69 9aac 	vmul.f32	s19, s19, s25
 800e384:	ee28 8a88 	vmul.f32	s16, s17, s16
 800e388:	eef4 9ac8 	vcmpe.f32	s19, s16
 800e38c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e390:	db0f      	blt.n	800e3b2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
 800e392:	2101      	movs	r1, #1
 800e394:	eef0 2a6a 	vmov.f32	s5, s21
 800e398:	eeb0 2a4a 	vmov.f32	s4, s20
 800e39c:	eef0 1a6b 	vmov.f32	s3, s23
 800e3a0:	eeb0 1a4b 	vmov.f32	s2, s22
 800e3a4:	eef0 0a49 	vmov.f32	s1, s18
 800e3a8:	eeb0 0a4c 	vmov.f32	s0, s24
 800e3ac:	4620      	mov	r0, r4
 800e3ae:	f7ff ff47 	bl	800e240 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800e3b2:	eef0 0a6a 	vmov.f32	s1, s21
 800e3b6:	eeb0 0a4a 	vmov.f32	s0, s20
 800e3ba:	4620      	mov	r0, r4
 800e3bc:	e035      	b.n	800e42a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
 800e3be:	2b01      	cmp	r3, #1
 800e3c0:	d138      	bne.n	800e434 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800e3c2:	ee31 4ae2 	vsub.f32	s8, s3, s5
 800e3c6:	ee33 6a48 	vsub.f32	s12, s6, s16
 800e3ca:	ee71 7a42 	vsub.f32	s15, s2, s4
 800e3ce:	ee73 6ae4 	vsub.f32	s13, s7, s9
 800e3d2:	ee26 7a44 	vnmul.f32	s14, s12, s8
 800e3d6:	eea7 7aa6 	vfma.f32	s14, s15, s13
 800e3da:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800e3de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e3e2:	d027      	beq.n	800e434 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800e3e4:	ee28 8a63 	vnmul.f32	s16, s16, s7
 800e3e8:	ee61 8ac2 	vnmul.f32	s17, s3, s4
 800e3ec:	eea4 8a83 	vfma.f32	s16, s9, s6
 800e3f0:	eee1 8a22 	vfma.f32	s17, s2, s5
 800e3f4:	ee68 7a67 	vnmul.f32	s15, s16, s15
 800e3f8:	ee28 8a44 	vnmul.f32	s16, s16, s8
 800e3fc:	eee6 7a28 	vfma.f32	s15, s12, s17
 800e400:	eea6 8aa8 	vfma.f32	s16, s13, s17
 800e404:	ee87 0a87 	vdiv.f32	s0, s15, s14
 800e408:	eec8 0a07 	vdiv.f32	s1, s16, s14
 800e40c:	ee3c ca40 	vsub.f32	s24, s24, s0
 800e410:	ee39 9a60 	vsub.f32	s18, s18, s1
 800e414:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
 800e418:	ee29 9a09 	vmul.f32	s18, s18, s18
 800e41c:	eeac 9a0c 	vfma.f32	s18, s24, s24
 800e420:	eef4 7ac9 	vcmpe.f32	s15, s18
 800e424:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e428:	db04      	blt.n	800e434 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800e42a:	f7ff feb2 	bl	800e192 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e42e:	ecbd 8b0a 	vpop	{d8-d12}
 800e432:	bd10      	pop	{r4, pc}
 800e434:	eef0 0a6b 	vmov.f32	s1, s23
 800e438:	eeb0 0a4b 	vmov.f32	s0, s22
 800e43c:	4620      	mov	r0, r4
 800e43e:	f7ff fea8 	bl	800e192 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e442:	e7b6      	b.n	800e3b2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

0800e444 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
 800e444:	b510      	push	{r4, lr}
 800e446:	ed2d 8b0c 	vpush	{d8-d13}
 800e44a:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 800e44e:	4604      	mov	r4, r0
 800e450:	eeb0 9a40 	vmov.f32	s18, s0
 800e454:	eef0 9a60 	vmov.f32	s19, s1
 800e458:	eef0 aa41 	vmov.f32	s21, s2
 800e45c:	eeb0 ba61 	vmov.f32	s22, s3
 800e460:	b933      	cbnz	r3, 800e470 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
 800e462:	f7ff fe96 	bl	800e192 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e466:	eef0 0a4b 	vmov.f32	s1, s22
 800e46a:	eeb0 0a6a 	vmov.f32	s0, s21
 800e46e:	e015      	b.n	800e49c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
 800e470:	ee71 8a40 	vsub.f32	s17, s2, s0
 800e474:	ee31 8ae0 	vsub.f32	s16, s3, s1
 800e478:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800e47c:	2b02      	cmp	r3, #2
 800e47e:	ee68 8aa7 	vmul.f32	s17, s17, s15
 800e482:	ee28 8a27 	vmul.f32	s16, s16, s15
 800e486:	d10f      	bne.n	800e4a8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
 800e488:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800e48c:	ee30 0a08 	vadd.f32	s0, s0, s16
 800e490:	f7ff fe7f 	bl	800e192 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e494:	ee7b 0a68 	vsub.f32	s1, s22, s17
 800e498:	ee3a 0a88 	vadd.f32	s0, s21, s16
 800e49c:	4620      	mov	r0, r4
 800e49e:	f7ff fe78 	bl	800e192 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e4a2:	ecbd 8b0c 	vpop	{d8-d13}
 800e4a6:	bd10      	pop	{r4, pc}
 800e4a8:	f7ff fe73 	bl	800e192 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e4ac:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 800e5e4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
 800e4b0:	eddf ba4d 	vldr	s23, [pc, #308]	@ 800e5e8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
 800e4b4:	ed9f ca4d 	vldr	s24, [pc, #308]	@ 800e5ec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
 800e4b8:	eddf ca4d 	vldr	s25, [pc, #308]	@ 800e5f0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
 800e4bc:	ed9f da4d 	vldr	s26, [pc, #308]	@ 800e5f4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
 800e4c0:	eef0 0a69 	vmov.f32	s1, s19
 800e4c4:	eeb0 0a49 	vmov.f32	s0, s18
 800e4c8:	eee8 0a27 	vfma.f32	s1, s16, s15
 800e4cc:	4620      	mov	r0, r4
 800e4ce:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800e4d2:	eeb1 aa68 	vneg.f32	s20, s17
 800e4d6:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800e4da:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800e4de:	f7ff fe58 	bl	800e192 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e4e2:	eddf 7a45 	vldr	s15, [pc, #276]	@ 800e5f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
 800e4e6:	eef0 0a69 	vmov.f32	s1, s19
 800e4ea:	eeb0 0a49 	vmov.f32	s0, s18
 800e4ee:	eee8 0a27 	vfma.f32	s1, s16, s15
 800e4f2:	4620      	mov	r0, r4
 800e4f4:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800e4f8:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800e4fc:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800e500:	f7ff fe47 	bl	800e192 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e504:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 800e5fc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
 800e508:	eef0 0a69 	vmov.f32	s1, s19
 800e50c:	eeb0 0a49 	vmov.f32	s0, s18
 800e510:	eee8 0a27 	vfma.f32	s1, s16, s15
 800e514:	4620      	mov	r0, r4
 800e516:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800e51a:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800e51e:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800e522:	f7ff fe36 	bl	800e192 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e526:	eddf 7a36 	vldr	s15, [pc, #216]	@ 800e600 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
 800e52a:	eef0 0a69 	vmov.f32	s1, s19
 800e52e:	eeb0 0a49 	vmov.f32	s0, s18
 800e532:	eee8 0a27 	vfma.f32	s1, s16, s15
 800e536:	4620      	mov	r0, r4
 800e538:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800e53c:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800e540:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800e544:	f7ff fe25 	bl	800e192 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e548:	ee79 0a88 	vadd.f32	s1, s19, s16
 800e54c:	ee39 0a28 	vadd.f32	s0, s18, s17
 800e550:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800e554:	ee30 0a08 	vadd.f32	s0, s0, s16
 800e558:	4620      	mov	r0, r4
 800e55a:	f7ff fe1a 	bl	800e192 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e55e:	eddf 7a29 	vldr	s15, [pc, #164]	@ 800e604 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
 800e562:	eef0 0a69 	vmov.f32	s1, s19
 800e566:	eeb0 0a49 	vmov.f32	s0, s18
 800e56a:	eee8 0a27 	vfma.f32	s1, s16, s15
 800e56e:	4620      	mov	r0, r4
 800e570:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800e574:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800e578:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800e57c:	f7ff fe09 	bl	800e192 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e580:	eddf 7a21 	vldr	s15, [pc, #132]	@ 800e608 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
 800e584:	eef0 0a69 	vmov.f32	s1, s19
 800e588:	eeb0 0a49 	vmov.f32	s0, s18
 800e58c:	eee8 0a27 	vfma.f32	s1, s16, s15
 800e590:	4620      	mov	r0, r4
 800e592:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800e596:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800e59a:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800e59e:	f7ff fdf8 	bl	800e192 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e5a2:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 800e60c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
 800e5a6:	eef0 0a69 	vmov.f32	s1, s19
 800e5aa:	eeb0 0a49 	vmov.f32	s0, s18
 800e5ae:	eee8 0a27 	vfma.f32	s1, s16, s15
 800e5b2:	4620      	mov	r0, r4
 800e5b4:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800e5b8:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800e5bc:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800e5c0:	f7ff fde7 	bl	800e192 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800e5c4:	eddf 7a12 	vldr	s15, [pc, #72]	@ 800e610 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
 800e5c8:	eef0 0a69 	vmov.f32	s1, s19
 800e5cc:	eeb0 0a49 	vmov.f32	s0, s18
 800e5d0:	eee8 0a27 	vfma.f32	s1, s16, s15
 800e5d4:	4620      	mov	r0, r4
 800e5d6:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800e5da:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800e5de:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800e5e2:	e73e      	b.n	800e462 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
 800e5e4:	3d23d70a 	.word	0x3d23d70a
 800e5e8:	3e8f5c29 	.word	0x3e8f5c29
 800e5ec:	3f19999a 	.word	0x3f19999a
 800e5f0:	3f4ccccd 	.word	0x3f4ccccd
 800e5f4:	3f75c28f 	.word	0x3f75c28f
 800e5f8:	3e4ccccd 	.word	0x3e4ccccd
 800e5fc:	3ecccccd 	.word	0x3ecccccd
 800e600:	3f3851ec 	.word	0x3f3851ec
 800e604:	3fa3d70a 	.word	0x3fa3d70a
 800e608:	3fcccccd 	.word	0x3fcccccd
 800e60c:	3fe66666 	.word	0x3fe66666
 800e610:	3ffae148 	.word	0x3ffae148

0800e614 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
 800e614:	b570      	push	{r4, r5, r6, lr}
 800e616:	ed2d 8b06 	vpush	{d8-d10}
 800e61a:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800e61e:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
 800e622:	ee30 8ac8 	vsub.f32	s16, s1, s16
 800e626:	ee30 9a49 	vsub.f32	s18, s0, s18
 800e62a:	eef0 aa40 	vmov.f32	s21, s0
 800e62e:	ee28 0a08 	vmul.f32	s0, s16, s16
 800e632:	4604      	mov	r4, r0
 800e634:	eea9 0a09 	vfma.f32	s0, s18, s18
 800e638:	eeb0 aa60 	vmov.f32	s20, s1
 800e63c:	f016 f9a0 	bl	8024980 <sqrtf>
 800e640:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800e644:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e648:	dd36      	ble.n	800e6b8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
 800e64a:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800e64e:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
 800e652:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
 800e656:	eec0 6a27 	vdiv.f32	s13, s0, s15
 800e65a:	2600      	movs	r6, #0
 800e65c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800e660:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
 800e664:	eec8 8a26 	vdiv.f32	s17, s16, s13
 800e668:	ee89 8a26 	vdiv.f32	s16, s18, s13
 800e66c:	ee70 9a28 	vadd.f32	s19, s0, s17
 800e670:	ee30 9ac8 	vsub.f32	s18, s1, s16
 800e674:	ee78 8aaa 	vadd.f32	s17, s17, s21
 800e678:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800e67c:	b1fd      	cbz	r5, 800e6be <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
 800e67e:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
 800e682:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
 800e686:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
 800e68a:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
 800e68e:	eef0 0a49 	vmov.f32	s1, s18
 800e692:	eeb0 0a69 	vmov.f32	s0, s19
 800e696:	4620      	mov	r0, r4
 800e698:	f7ff fd64 	bl	800e164 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800e69c:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
 800e6a0:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
 800e6a4:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
 800e6a8:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
 800e6ac:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
 800e6b0:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
 800e6b4:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
 800e6b8:	ecbd 8b06 	vpop	{d8-d10}
 800e6bc:	bd70      	pop	{r4, r5, r6, pc}
 800e6be:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
 800e6c2:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800e6c6:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800e6ca:	b16b      	cbz	r3, 800e6e8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
 800e6cc:	eef0 1a49 	vmov.f32	s3, s18
 800e6d0:	eeb0 1a69 	vmov.f32	s2, s19
 800e6d4:	eef0 0a62 	vmov.f32	s1, s5
 800e6d8:	eeb0 0a42 	vmov.f32	s0, s4
 800e6dc:	4620      	mov	r0, r4
 800e6de:	f7ff feb1 	bl	800e444 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800e6e2:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
 800e6e6:	e7db      	b.n	800e6a0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
 800e6e8:	eef0 4a48 	vmov.f32	s9, s16
 800e6ec:	eeb0 4a68 	vmov.f32	s8, s17
 800e6f0:	eef0 3a49 	vmov.f32	s7, s18
 800e6f4:	eeb0 3a69 	vmov.f32	s6, s19
 800e6f8:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800e6fc:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800e700:	4620      	mov	r0, r4
 800e702:	f7ff fe13 	bl	800e32c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800e706:	e7cb      	b.n	800e6a0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

0800e708 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
 800e708:	ee07 2a90 	vmov	s15, r2
 800e70c:	ee07 1a10 	vmov	s14, r1
 800e710:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800e714:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 800e718:	eddf 7a03 	vldr	s15, [pc, #12]	@ 800e728 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
 800e71c:	ee60 0aa7 	vmul.f32	s1, s1, s15
 800e720:	ee20 0a27 	vmul.f32	s0, s0, s15
 800e724:	f7ff bf76 	b.w	800e614 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800e728:	3d000000 	.word	0x3d000000

0800e72c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
 800e72c:	b538      	push	{r3, r4, r5, lr}
 800e72e:	ed2d 8b02 	vpush	{d8}
 800e732:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
 800e736:	4604      	mov	r4, r0
 800e738:	b31d      	cbz	r5, 800e782 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
 800e73a:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
 800e73e:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800e742:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
 800e746:	ee78 8a67 	vsub.f32	s17, s16, s15
 800e74a:	ee38 8a27 	vadd.f32	s16, s16, s15
 800e74e:	eef0 0a68 	vmov.f32	s1, s17
 800e752:	f7ff fd07 	bl	800e164 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800e756:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800e75a:	eef0 1a48 	vmov.f32	s3, s16
 800e75e:	eeb0 0a41 	vmov.f32	s0, s2
 800e762:	eef0 0a68 	vmov.f32	s1, s17
 800e766:	4620      	mov	r0, r4
 800e768:	f7ff fe6c 	bl	800e444 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800e76c:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800e770:	eef0 1a68 	vmov.f32	s3, s17
 800e774:	eef0 0a48 	vmov.f32	s1, s16
 800e778:	eeb0 0a41 	vmov.f32	s0, s2
 800e77c:	4620      	mov	r0, r4
 800e77e:	f7ff fe61 	bl	800e444 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800e782:	ecbd 8b02 	vpop	{d8}
 800e786:	4628      	mov	r0, r5
 800e788:	bd38      	pop	{r3, r4, r5, pc}

0800e78a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
 800e78a:	b510      	push	{r4, lr}
 800e78c:	ed2d 8b02 	vpush	{d8}
 800e790:	4604      	mov	r4, r0
 800e792:	eeb0 8a40 	vmov.f32	s16, s0
 800e796:	eef0 8a60 	vmov.f32	s17, s1
 800e79a:	f7ff ffc7 	bl	800e72c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800e79e:	b9d0      	cbnz	r0, 800e7d6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
 800e7a0:	4620      	mov	r0, r4
 800e7a2:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
 800e7a6:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
 800e7aa:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
 800e7ae:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
 800e7b2:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800e7b6:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800e7ba:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800e7be:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800e7c2:	eef0 0a68 	vmov.f32	s1, s17
 800e7c6:	eeb0 0a48 	vmov.f32	s0, s16
 800e7ca:	f7ff fdaf 	bl	800e32c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800e7ce:	2001      	movs	r0, #1
 800e7d0:	ecbd 8b02 	vpop	{d8}
 800e7d4:	bd10      	pop	{r4, pc}
 800e7d6:	2000      	movs	r0, #0
 800e7d8:	e7fa      	b.n	800e7d0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

0800e7da <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
 800e7da:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
 800e7de:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
 800e7e2:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
 800e7e6:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
 800e7ea:	f7ff be2b 	b.w	800e444 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

0800e7f0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
 800e7f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e7f4:	b089      	sub	sp, #36	@ 0x24
 800e7f6:	461c      	mov	r4, r3
 800e7f8:	f10d 0820 	add.w	r8, sp, #32
 800e7fc:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800e800:	9304      	str	r3, [sp, #16]
 800e802:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 800e804:	9105      	str	r1, [sp, #20]
 800e806:	2300      	movs	r3, #0
 800e808:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
 800e80c:	9306      	str	r3, [sp, #24]
 800e80e:	f848 3d04 	str.w	r3, [r8, #-4]!
 800e812:	9b04      	ldr	r3, [sp, #16]
 800e814:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
 800e818:	4682      	mov	sl, r0
 800e81a:	4615      	mov	r5, r2
 800e81c:	9b05      	ldr	r3, [sp, #20]
 800e81e:	429d      	cmp	r5, r3
 800e820:	d96d      	bls.n	800e8fe <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
 800e822:	3d01      	subs	r5, #1
 800e824:	f819 3005 	ldrb.w	r3, [r9, r5]
 800e828:	2b06      	cmp	r3, #6
 800e82a:	d8f7      	bhi.n	800e81c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800e82c:	a201      	add	r2, pc, #4	@ (adr r2, 800e834 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
 800e82e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e832:	bf00      	nop
 800e834:	0800e853 	.word	0x0800e853
 800e838:	0800e81d 	.word	0x0800e81d
 800e83c:	0800e851 	.word	0x0800e851
 800e840:	0800e875 	.word	0x0800e875
 800e844:	0800e875 	.word	0x0800e875
 800e848:	0800e879 	.word	0x0800e879
 800e84c:	0800e8b9 	.word	0x0800e8b9
 800e850:	3c02      	subs	r4, #2
 800e852:	4650      	mov	r0, sl
 800e854:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800e858:	9400      	str	r4, [sp, #0]
 800e85a:	462b      	mov	r3, r5
 800e85c:	4642      	mov	r2, r8
 800e85e:	a906      	add	r1, sp, #24
 800e860:	f7ff fcae 	bl	800e1c0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800e864:	eddd 0a07 	vldr	s1, [sp, #28]
 800e868:	ed9d 0a06 	vldr	s0, [sp, #24]
 800e86c:	4630      	mov	r0, r6
 800e86e:	f7ff fed1 	bl	800e614 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800e872:	e7d3      	b.n	800e81c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800e874:	3c01      	subs	r4, #1
 800e876:	e7ec      	b.n	800e852 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
 800e878:	f1a4 0b04 	sub.w	fp, r4, #4
 800e87c:	3c02      	subs	r4, #2
 800e87e:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800e882:	4650      	mov	r0, sl
 800e884:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800e888:	f8cd b000 	str.w	fp, [sp]
 800e88c:	462b      	mov	r3, r5
 800e88e:	4642      	mov	r2, r8
 800e890:	a906      	add	r1, sp, #24
 800e892:	f7ff fc95 	bl	800e1c0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800e896:	eddd 2a07 	vldr	s5, [sp, #28]
 800e89a:	ed9d 2a06 	vldr	s4, [sp, #24]
 800e89e:	ed54 1a01 	vldr	s3, [r4, #-4]
 800e8a2:	ed14 1a02 	vldr	s2, [r4, #-8]
 800e8a6:	edd4 0a01 	vldr	s1, [r4, #4]
 800e8aa:	ed94 0a00 	vldr	s0, [r4]
 800e8ae:	4630      	mov	r0, r6
 800e8b0:	f7ff fc1a 	bl	800e0e8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800e8b4:	465c      	mov	r4, fp
 800e8b6:	e7b1      	b.n	800e81c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800e8b8:	f1a4 0b06 	sub.w	fp, r4, #6
 800e8bc:	3c02      	subs	r4, #2
 800e8be:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800e8c2:	4650      	mov	r0, sl
 800e8c4:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800e8c8:	f8cd b000 	str.w	fp, [sp]
 800e8cc:	462b      	mov	r3, r5
 800e8ce:	4642      	mov	r2, r8
 800e8d0:	a906      	add	r1, sp, #24
 800e8d2:	f7ff fc75 	bl	800e1c0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800e8d6:	eddd 3a07 	vldr	s7, [sp, #28]
 800e8da:	ed9d 3a06 	vldr	s6, [sp, #24]
 800e8de:	ed54 2a03 	vldr	s5, [r4, #-12]
 800e8e2:	ed14 2a04 	vldr	s4, [r4, #-16]
 800e8e6:	ed54 1a01 	vldr	s3, [r4, #-4]
 800e8ea:	ed14 1a02 	vldr	s2, [r4, #-8]
 800e8ee:	edd4 0a01 	vldr	s1, [r4, #4]
 800e8f2:	ed94 0a00 	vldr	s0, [r4]
 800e8f6:	4630      	mov	r0, r6
 800e8f8:	f7ff fc15 	bl	800e126 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800e8fc:	e7da      	b.n	800e8b4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
 800e8fe:	9b04      	ldr	r3, [sp, #16]
 800e900:	b113      	cbz	r3, 800e908 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
 800e902:	4630      	mov	r0, r6
 800e904:	f7ff ff69 	bl	800e7da <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
 800e908:	b009      	add	sp, #36	@ 0x24
 800e90a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e90e:	bf00      	nop

0800e910 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
 800e910:	eef0 7a60 	vmov.f32	s15, s1
 800e914:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800e918:	6803      	ldr	r3, [r0, #0]
 800e91a:	ee17 2a90 	vmov	r2, s15
 800e91e:	eef0 7a40 	vmov.f32	s15, s0
 800e922:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800e926:	689b      	ldr	r3, [r3, #8]
 800e928:	ee17 1a90 	vmov	r1, s15
 800e92c:	4718      	bx	r3
	...

0800e930 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
 800e930:	b510      	push	{r4, lr}
 800e932:	4b04      	ldr	r3, [pc, #16]	@ (800e944 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
 800e934:	4604      	mov	r4, r0
 800e936:	f840 3b14 	str.w	r3, [r0], #20
 800e93a:	f000 fea7 	bl	800f68c <_ZN8touchgfx7OutlineD1Ev>
 800e93e:	4620      	mov	r0, r4
 800e940:	bd10      	pop	{r4, pc}
 800e942:	bf00      	nop
 800e944:	080290c0 	.word	0x080290c0

0800e948 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
 800e948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e94c:	ed2d 8b04 	vpush	{d8-d9}
 800e950:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 800e954:	b0b5      	sub	sp, #212	@ 0xd4
 800e956:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800e95a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e95e:	4605      	mov	r5, r0
 800e960:	468b      	mov	fp, r1
 800e962:	9206      	str	r2, [sp, #24]
 800e964:	461e      	mov	r6, r3
 800e966:	f04f 0400 	mov.w	r4, #0
 800e96a:	f240 814e 	bls.w	800ec0a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
 800e96e:	23ff      	movs	r3, #255	@ 0xff
 800e970:	9300      	str	r3, [sp, #0]
 800e972:	1d02      	adds	r2, r0, #4
 800e974:	6981      	ldr	r1, [r0, #24]
 800e976:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 800e978:	ed9f 9aa5 	vldr	s18, [pc, #660]	@ 800ec10 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
 800e97c:	a808      	add	r0, sp, #32
 800e97e:	f015 fb71 	bl	8024064 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800e982:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
 800e986:	4ba3      	ldr	r3, [pc, #652]	@ (800ec14 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
 800e988:	edd5 6a08 	vldr	s13, [r5, #32]
 800e98c:	9308      	str	r3, [sp, #32]
 800e98e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800e992:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e996:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800e99a:	bf48      	it	mi
 800e99c:	eef1 7a67 	vnegmi.f32	s15, s15
 800e9a0:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e9a4:	f105 0334 	add.w	r3, r5, #52	@ 0x34
 800e9a8:	2201      	movs	r2, #1
 800e9aa:	9325      	str	r3, [sp, #148]	@ 0x94
 800e9ac:	2300      	movs	r3, #0
 800e9ae:	ee26 7aa7 	vmul.f32	s14, s13, s15
 800e9b2:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
 800e9b6:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
 800e9ba:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
 800e9be:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
 800e9c2:	7f6a      	ldrb	r2, [r5, #29]
 800e9c4:	7fab      	ldrb	r3, [r5, #30]
 800e9c6:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 800e9ca:	435a      	muls	r2, r3
 800e9cc:	ee27 7a26 	vmul.f32	s14, s14, s13
 800e9d0:	1c53      	adds	r3, r2, #1
 800e9d2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 800e9d6:	ee67 7a27 	vmul.f32	s15, s14, s15
 800e9da:	f04f 0800 	mov.w	r8, #0
 800e9de:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
 800e9e2:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 800e9e6:	942a      	str	r4, [sp, #168]	@ 0xa8
 800e9e8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 800e9ec:	942b      	str	r4, [sp, #172]	@ 0xac
 800e9ee:	942c      	str	r4, [sp, #176]	@ 0xb0
 800e9f0:	942d      	str	r4, [sp, #180]	@ 0xb4
 800e9f2:	942e      	str	r4, [sp, #184]	@ 0xb8
 800e9f4:	942f      	str	r4, [sp, #188]	@ 0xbc
 800e9f6:	9430      	str	r4, [sp, #192]	@ 0xc0
 800e9f8:	9431      	str	r4, [sp, #196]	@ 0xc4
 800e9fa:	9432      	str	r4, [sp, #200]	@ 0xc8
 800e9fc:	9433      	str	r4, [sp, #204]	@ 0xcc
 800e9fe:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
 800ea02:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
 800ea06:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
 800ea0a:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
 800ea0e:	eef0 9a49 	vmov.f32	s19, s18
 800ea12:	eeb0 8a49 	vmov.f32	s16, s18
 800ea16:	eef0 8a49 	vmov.f32	s17, s18
 800ea1a:	4644      	mov	r4, r8
 800ea1c:	46c1      	mov	r9, r8
 800ea1e:	af08      	add	r7, sp, #32
 800ea20:	f04f 0a01 	mov.w	sl, #1
 800ea24:	9b06      	ldr	r3, [sp, #24]
 800ea26:	454b      	cmp	r3, r9
 800ea28:	f000 80cc 	beq.w	800ebc4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
 800ea2c:	f109 0301 	add.w	r3, r9, #1
 800ea30:	9305      	str	r3, [sp, #20]
 800ea32:	f81b 3009 	ldrb.w	r3, [fp, r9]
 800ea36:	2b06      	cmp	r3, #6
 800ea38:	d839      	bhi.n	800eaae <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800ea3a:	e8df f003 	tbb	[pc, r3]
 800ea3e:	3b04      	.short	0x3b04
 800ea40:	817c6f60 	.word	0x817c6f60
 800ea44:	a0          	.byte	0xa0
 800ea45:	00          	.byte	0x00
 800ea46:	45c1      	cmp	r9, r8
 800ea48:	d92b      	bls.n	800eaa2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800ea4a:	eef0 0a49 	vmov.f32	s1, s18
 800ea4e:	eeb0 0a69 	vmov.f32	s0, s19
 800ea52:	4638      	mov	r0, r7
 800ea54:	f7ff fdde 	bl	800e614 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800ea58:	4638      	mov	r0, r7
 800ea5a:	f7ff fe67 	bl	800e72c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800ea5e:	4681      	mov	r9, r0
 800ea60:	b9f8      	cbnz	r0, 800eaa2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800ea62:	eef0 0a49 	vmov.f32	s1, s18
 800ea66:	eeb0 0a69 	vmov.f32	s0, s19
 800ea6a:	4638      	mov	r0, r7
 800ea6c:	f7ff fe8d 	bl	800e78a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800ea70:	4628      	mov	r0, r5
 800ea72:	e9cd 9702 	strd	r9, r7, [sp, #8]
 800ea76:	e9cd b600 	strd	fp, r6, [sp]
 800ea7a:	4623      	mov	r3, r4
 800ea7c:	9a05      	ldr	r2, [sp, #20]
 800ea7e:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
 800ea82:	4641      	mov	r1, r8
 800ea84:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
 800ea88:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800ea8c:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800ea90:	f7ff feae 	bl	800e7f0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800ea94:	eef0 0a49 	vmov.f32	s1, s18
 800ea98:	eeb0 0a69 	vmov.f32	s0, s19
 800ea9c:	4638      	mov	r0, r7
 800ea9e:	f7ff fe74 	bl	800e78a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800eaa2:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800eaa6:	eeb0 8a49 	vmov.f32	s16, s18
 800eaaa:	eef0 8a69 	vmov.f32	s17, s19
 800eaae:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800eab2:	e7b7      	b.n	800ea24 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
 800eab4:	45c1      	cmp	r9, r8
 800eab6:	d90d      	bls.n	800ead4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800eab8:	4638      	mov	r0, r7
 800eaba:	f7ff fe37 	bl	800e72c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800eabe:	b948      	cbnz	r0, 800ead4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800eac0:	e9cd a702 	strd	sl, r7, [sp, #8]
 800eac4:	e9cd b600 	strd	fp, r6, [sp]
 800eac8:	4623      	mov	r3, r4
 800eaca:	464a      	mov	r2, r9
 800eacc:	4641      	mov	r1, r8
 800eace:	4628      	mov	r0, r5
 800ead0:	f7ff fe8e 	bl	800e7f0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800ead4:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800ead8:	edd3 8a00 	vldr	s17, [r3]
 800eadc:	ed93 8a01 	vldr	s16, [r3, #4]
 800eae0:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
 800eae4:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
 800eae8:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800eaec:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800eaf0:	3402      	adds	r4, #2
 800eaf2:	46c8      	mov	r8, r9
 800eaf4:	eeb0 9a48 	vmov.f32	s18, s16
 800eaf8:	eef0 9a68 	vmov.f32	s19, s17
 800eafc:	e7d7      	b.n	800eaae <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800eafe:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800eb02:	edd3 8a00 	vldr	s17, [r3]
 800eb06:	ed93 8a01 	vldr	s16, [r3, #4]
 800eb0a:	eeb0 0a68 	vmov.f32	s0, s17
 800eb0e:	eef0 0a48 	vmov.f32	s1, s16
 800eb12:	4638      	mov	r0, r7
 800eb14:	f7ff fd7e 	bl	800e614 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800eb18:	3402      	adds	r4, #2
 800eb1a:	e7c8      	b.n	800eaae <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800eb1c:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800eb20:	edd3 8a00 	vldr	s17, [r3]
 800eb24:	eef0 0a48 	vmov.f32	s1, s16
 800eb28:	eeb0 0a68 	vmov.f32	s0, s17
 800eb2c:	4638      	mov	r0, r7
 800eb2e:	f7ff fd71 	bl	800e614 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800eb32:	3401      	adds	r4, #1
 800eb34:	e7bb      	b.n	800eaae <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800eb36:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800eb3a:	ed93 8a00 	vldr	s16, [r3]
 800eb3e:	e7f1      	b.n	800eb24 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
 800eb40:	00a3      	lsls	r3, r4, #2
 800eb42:	f103 0208 	add.w	r2, r3, #8
 800eb46:	f103 090c 	add.w	r9, r3, #12
 800eb4a:	4432      	add	r2, r6
 800eb4c:	4433      	add	r3, r6
 800eb4e:	44b1      	add	r9, r6
 800eb50:	ed92 2a00 	vldr	s4, [r2]
 800eb54:	edd9 2a00 	vldr	s5, [r9]
 800eb58:	edd3 1a01 	vldr	s3, [r3, #4]
 800eb5c:	ed93 1a00 	vldr	s2, [r3]
 800eb60:	9207      	str	r2, [sp, #28]
 800eb62:	eef0 0a48 	vmov.f32	s1, s16
 800eb66:	eeb0 0a68 	vmov.f32	s0, s17
 800eb6a:	4638      	mov	r0, r7
 800eb6c:	f7ff fabc 	bl	800e0e8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800eb70:	9a07      	ldr	r2, [sp, #28]
 800eb72:	ed99 8a00 	vldr	s16, [r9]
 800eb76:	edd2 8a00 	vldr	s17, [r2]
 800eb7a:	3404      	adds	r4, #4
 800eb7c:	e797      	b.n	800eaae <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800eb7e:	00a3      	lsls	r3, r4, #2
 800eb80:	f103 0210 	add.w	r2, r3, #16
 800eb84:	f103 0914 	add.w	r9, r3, #20
 800eb88:	4432      	add	r2, r6
 800eb8a:	4433      	add	r3, r6
 800eb8c:	44b1      	add	r9, r6
 800eb8e:	ed92 3a00 	vldr	s6, [r2]
 800eb92:	edd9 3a00 	vldr	s7, [r9]
 800eb96:	edd3 2a03 	vldr	s5, [r3, #12]
 800eb9a:	ed93 2a02 	vldr	s4, [r3, #8]
 800eb9e:	edd3 1a01 	vldr	s3, [r3, #4]
 800eba2:	ed93 1a00 	vldr	s2, [r3]
 800eba6:	9207      	str	r2, [sp, #28]
 800eba8:	eef0 0a48 	vmov.f32	s1, s16
 800ebac:	eeb0 0a68 	vmov.f32	s0, s17
 800ebb0:	4638      	mov	r0, r7
 800ebb2:	f7ff fab8 	bl	800e126 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800ebb6:	9a07      	ldr	r2, [sp, #28]
 800ebb8:	ed99 8a00 	vldr	s16, [r9]
 800ebbc:	edd2 8a00 	vldr	s17, [r2]
 800ebc0:	3406      	adds	r4, #6
 800ebc2:	e774      	b.n	800eaae <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800ebc4:	9b06      	ldr	r3, [sp, #24]
 800ebc6:	4543      	cmp	r3, r8
 800ebc8:	af08      	add	r7, sp, #32
 800ebca:	d90f      	bls.n	800ebec <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800ebcc:	4638      	mov	r0, r7
 800ebce:	f7ff fdad 	bl	800e72c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800ebd2:	b958      	cbnz	r0, 800ebec <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800ebd4:	2301      	movs	r3, #1
 800ebd6:	e9cd 6301 	strd	r6, r3, [sp, #4]
 800ebda:	9703      	str	r7, [sp, #12]
 800ebdc:	f8cd b000 	str.w	fp, [sp]
 800ebe0:	4623      	mov	r3, r4
 800ebe2:	9a06      	ldr	r2, [sp, #24]
 800ebe4:	4641      	mov	r1, r8
 800ebe6:	4628      	mov	r0, r5
 800ebe8:	f7ff fe02 	bl	800e7f0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800ebec:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
 800ebf0:	4638      	mov	r0, r7
 800ebf2:	f015 facb 	bl	802418c <_ZN8touchgfx6Canvas6renderEh>
 800ebf6:	4604      	mov	r4, r0
 800ebf8:	4638      	mov	r0, r7
 800ebfa:	f7ff fe99 	bl	800e930 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800ebfe:	4620      	mov	r0, r4
 800ec00:	b035      	add	sp, #212	@ 0xd4
 800ec02:	ecbd 8b04 	vpop	{d8-d9}
 800ec06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ec0a:	2401      	movs	r4, #1
 800ec0c:	e7f7      	b.n	800ebfe <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
 800ec0e:	bf00      	nop
 800ec10:	00000000 	.word	0x00000000
 800ec14:	08028a00 	.word	0x08028a00

0800ec18 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
 800ec18:	b510      	push	{r4, lr}
 800ec1a:	4604      	mov	r4, r0
 800ec1c:	f7ff fe88 	bl	800e930 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800ec20:	4620      	mov	r0, r4
 800ec22:	21b0      	movs	r1, #176	@ 0xb0
 800ec24:	f015 fe81 	bl	802492a <_ZdlPvj>
 800ec28:	4620      	mov	r0, r4
 800ec2a:	bd10      	pop	{r4, pc}

0800ec2c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
 800ec2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ec30:	ed2d 8b06 	vpush	{d8-d10}
 800ec34:	b0aa      	sub	sp, #168	@ 0xa8
 800ec36:	4698      	mov	r8, r3
 800ec38:	23ff      	movs	r3, #255	@ 0xff
 800ec3a:	4607      	mov	r7, r0
 800ec3c:	9300      	str	r3, [sp, #0]
 800ec3e:	4689      	mov	r9, r1
 800ec40:	4692      	mov	sl, r2
 800ec42:	6981      	ldr	r1, [r0, #24]
 800ec44:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 800ec46:	ed9f 8a82 	vldr	s16, [pc, #520]	@ 800ee50 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800ec4a:	1d02      	adds	r2, r0, #4
 800ec4c:	a80d      	add	r0, sp, #52	@ 0x34
 800ec4e:	f015 fa09 	bl	8024064 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800ec52:	7f3b      	ldrb	r3, [r7, #28]
 800ec54:	eddf 0a7e 	vldr	s1, [pc, #504]	@ 800ee50 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800ec58:	1e5a      	subs	r2, r3, #1
 800ec5a:	4253      	negs	r3, r2
 800ec5c:	f107 0534 	add.w	r5, r7, #52	@ 0x34
 800ec60:	4153      	adcs	r3, r2
 800ec62:	eeb0 0a60 	vmov.f32	s0, s1
 800ec66:	4628      	mov	r0, r5
 800ec68:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
 800ec6c:	f004 fe7b 	bl	8013966 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800ec70:	44ca      	add	sl, r9
 800ec72:	eeb0 9a40 	vmov.f32	s18, s0
 800ec76:	eef0 9a60 	vmov.f32	s19, s1
 800ec7a:	eef0 8a48 	vmov.f32	s17, s16
 800ec7e:	2400      	movs	r4, #0
 800ec80:	45ca      	cmp	sl, r9
 800ec82:	f000 80cd 	beq.w	800ee20 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
 800ec86:	f819 3b01 	ldrb.w	r3, [r9], #1
 800ec8a:	2b06      	cmp	r3, #6
 800ec8c:	d8f8      	bhi.n	800ec80 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800ec8e:	e8df f003 	tbb	[pc, r3]
 800ec92:	0804      	.short	0x0804
 800ec94:	58533f2a 	.word	0x58533f2a
 800ec98:	8a          	.byte	0x8a
 800ec99:	00          	.byte	0x00
 800ec9a:	a80d      	add	r0, sp, #52	@ 0x34
 800ec9c:	f015 fa54 	bl	8024148 <_ZN8touchgfx6Canvas5closeEv>
 800eca0:	e7ee      	b.n	800ec80 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800eca2:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800eca6:	edd3 8a00 	vldr	s17, [r3]
 800ecaa:	ed93 8a01 	vldr	s16, [r3, #4]
 800ecae:	eeb0 0a68 	vmov.f32	s0, s17
 800ecb2:	eef0 0a48 	vmov.f32	s1, s16
 800ecb6:	4628      	mov	r0, r5
 800ecb8:	f004 fe55 	bl	8013966 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800ecbc:	eef0 7a60 	vmov.f32	s15, s1
 800ecc0:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800ecc4:	a80d      	add	r0, sp, #52	@ 0x34
 800ecc6:	ee17 2a90 	vmov	r2, s15
 800ecca:	eef0 7a40 	vmov.f32	s15, s0
 800ecce:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800ecd2:	eeb0 9a40 	vmov.f32	s18, s0
 800ecd6:	ee17 1a90 	vmov	r1, s15
 800ecda:	eef0 9a60 	vmov.f32	s19, s1
 800ecde:	f015 fb0d 	bl	80242fc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800ece2:	3402      	adds	r4, #2
 800ece4:	e7cc      	b.n	800ec80 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800ece6:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800ecea:	edd3 8a00 	vldr	s17, [r3]
 800ecee:	ed93 8a01 	vldr	s16, [r3, #4]
 800ecf2:	eeb0 0a68 	vmov.f32	s0, s17
 800ecf6:	eef0 0a48 	vmov.f32	s1, s16
 800ecfa:	4628      	mov	r0, r5
 800ecfc:	f004 fe33 	bl	8013966 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800ed00:	a80d      	add	r0, sp, #52	@ 0x34
 800ed02:	eeb0 9a40 	vmov.f32	s18, s0
 800ed06:	eef0 9a60 	vmov.f32	s19, s1
 800ed0a:	f7ff fe01 	bl	800e910 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800ed0e:	e7e8      	b.n	800ece2 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
 800ed10:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800ed14:	edd3 8a00 	vldr	s17, [r3]
 800ed18:	eef0 0a48 	vmov.f32	s1, s16
 800ed1c:	eeb0 0a68 	vmov.f32	s0, s17
 800ed20:	4628      	mov	r0, r5
 800ed22:	f004 fe20 	bl	8013966 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800ed26:	a80d      	add	r0, sp, #52	@ 0x34
 800ed28:	eeb0 9a40 	vmov.f32	s18, s0
 800ed2c:	eef0 9a60 	vmov.f32	s19, s1
 800ed30:	3401      	adds	r4, #1
 800ed32:	f7ff fded 	bl	800e910 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800ed36:	e7a3      	b.n	800ec80 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800ed38:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800ed3c:	ed93 8a00 	vldr	s16, [r3]
 800ed40:	e7ea      	b.n	800ed18 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
 800ed42:	1ca3      	adds	r3, r4, #2
 800ed44:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 800ed48:	ed53 0a01 	vldr	s1, [r3, #-4]
 800ed4c:	ed13 0a02 	vldr	s0, [r3, #-8]
 800ed50:	edd3 8a00 	vldr	s17, [r3]
 800ed54:	ed93 8a01 	vldr	s16, [r3, #4]
 800ed58:	4628      	mov	r0, r5
 800ed5a:	f004 fe04 	bl	8013966 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800ed5e:	4628      	mov	r0, r5
 800ed60:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800ed64:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800ed68:	eeb0 0a68 	vmov.f32	s0, s17
 800ed6c:	eef0 0a48 	vmov.f32	s1, s16
 800ed70:	f004 fdf9 	bl	8013966 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800ed74:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
 800ed78:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
 800ed7c:	eef0 2a60 	vmov.f32	s5, s1
 800ed80:	eeb0 2a40 	vmov.f32	s4, s0
 800ed84:	eeb0 aa40 	vmov.f32	s20, s0
 800ed88:	eef0 aa60 	vmov.f32	s21, s1
 800ed8c:	eeb0 0a49 	vmov.f32	s0, s18
 800ed90:	eef0 0a69 	vmov.f32	s1, s19
 800ed94:	a80d      	add	r0, sp, #52	@ 0x34
 800ed96:	f7ff f9a7 	bl	800e0e8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800ed9a:	3404      	adds	r4, #4
 800ed9c:	eef0 9a6a 	vmov.f32	s19, s21
 800eda0:	eeb0 9a4a 	vmov.f32	s18, s20
 800eda4:	e76c      	b.n	800ec80 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800eda6:	1d26      	adds	r6, r4, #4
 800eda8:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 800edac:	ed56 0a03 	vldr	s1, [r6, #-12]
 800edb0:	ed16 0a04 	vldr	s0, [r6, #-16]
 800edb4:	edd6 8a00 	vldr	s17, [r6]
 800edb8:	ed96 8a01 	vldr	s16, [r6, #4]
 800edbc:	4628      	mov	r0, r5
 800edbe:	f004 fdd2 	bl	8013966 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800edc2:	4628      	mov	r0, r5
 800edc4:	ed8d 0a07 	vstr	s0, [sp, #28]
 800edc8:	edcd 0a08 	vstr	s1, [sp, #32]
 800edcc:	ed16 0a02 	vldr	s0, [r6, #-8]
 800edd0:	ed56 0a01 	vldr	s1, [r6, #-4]
 800edd4:	f004 fdc7 	bl	8013966 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800edd8:	4628      	mov	r0, r5
 800edda:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800edde:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800ede2:	eeb0 0a68 	vmov.f32	s0, s17
 800ede6:	eef0 0a48 	vmov.f32	s1, s16
 800edea:	f004 fdbc 	bl	8013966 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800edee:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
 800edf2:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
 800edf6:	eddd 1a08 	vldr	s3, [sp, #32]
 800edfa:	ed9d 1a07 	vldr	s2, [sp, #28]
 800edfe:	eef0 3a60 	vmov.f32	s7, s1
 800ee02:	eeb0 3a40 	vmov.f32	s6, s0
 800ee06:	eeb0 aa40 	vmov.f32	s20, s0
 800ee0a:	eef0 aa60 	vmov.f32	s21, s1
 800ee0e:	eeb0 0a49 	vmov.f32	s0, s18
 800ee12:	eef0 0a69 	vmov.f32	s1, s19
 800ee16:	a80d      	add	r0, sp, #52	@ 0x34
 800ee18:	f7ff f985 	bl	800e126 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800ee1c:	3406      	adds	r4, #6
 800ee1e:	e7bd      	b.n	800ed9c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
 800ee20:	7f7b      	ldrb	r3, [r7, #29]
 800ee22:	7fb9      	ldrb	r1, [r7, #30]
 800ee24:	4359      	muls	r1, r3
 800ee26:	1c4b      	adds	r3, r1, #1
 800ee28:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 800ee2c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 800ee30:	a80d      	add	r0, sp, #52	@ 0x34
 800ee32:	f015 f9ab 	bl	802418c <_ZN8touchgfx6Canvas6renderEh>
 800ee36:	4b07      	ldr	r3, [pc, #28]	@ (800ee54 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
 800ee38:	930d      	str	r3, [sp, #52]	@ 0x34
 800ee3a:	4604      	mov	r4, r0
 800ee3c:	a812      	add	r0, sp, #72	@ 0x48
 800ee3e:	f000 fc25 	bl	800f68c <_ZN8touchgfx7OutlineD1Ev>
 800ee42:	4620      	mov	r0, r4
 800ee44:	b02a      	add	sp, #168	@ 0xa8
 800ee46:	ecbd 8b06 	vpop	{d8-d10}
 800ee4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ee4e:	bf00      	nop
 800ee50:	00000000 	.word	0x00000000
 800ee54:	080290c0 	.word	0x080290c0

0800ee58 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
 800ee58:	b410      	push	{r4}
 800ee5a:	7f04      	ldrb	r4, [r0, #28]
 800ee5c:	b11c      	cbz	r4, 800ee66 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
 800ee5e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ee62:	f7ff bee3 	b.w	800ec2c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
 800ee66:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ee6a:	f7ff bd6d 	b.w	800e948 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

0800ee70 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
 800ee70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ee74:	4691      	mov	r9, r2
 800ee76:	4602      	mov	r2, r0
 800ee78:	4605      	mov	r5, r0
 800ee7a:	f852 0f26 	ldr.w	r0, [r2, #38]!
 800ee7e:	b085      	sub	sp, #20
 800ee80:	4688      	mov	r8, r1
 800ee82:	6851      	ldr	r1, [r2, #4]
 800ee84:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
 800ee88:	469a      	mov	sl, r3
 800ee8a:	ab02      	add	r3, sp, #8
 800ee8c:	c303      	stmia	r3!, {r0, r1}
 800ee8e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800ee92:	2b00      	cmp	r3, #0
 800ee94:	af02      	add	r7, sp, #8
 800ee96:	dd08      	ble.n	800eeaa <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800ee98:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
 800ee9c:	2c00      	cmp	r4, #0
 800ee9e:	dd04      	ble.n	800eeaa <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800eea0:	4a2e      	ldr	r2, [pc, #184]	@ (800ef5c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
 800eea2:	7812      	ldrb	r2, [r2, #0]
 800eea4:	b122      	cbz	r2, 800eeb0 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
 800eea6:	2a01      	cmp	r2, #1
 800eea8:	d02d      	beq.n	800ef06 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
 800eeaa:	b005      	add	sp, #20
 800eeac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eeb0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800eeb4:	441c      	add	r4, r3
 800eeb6:	b2a4      	uxth	r4, r4
 800eeb8:	b226      	sxth	r6, r4
 800eeba:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800eebe:	42b3      	cmp	r3, r6
 800eec0:	daf3      	bge.n	800eeaa <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800eec2:	e9cd b700 	strd	fp, r7, [sp]
 800eec6:	4653      	mov	r3, sl
 800eec8:	464a      	mov	r2, r9
 800eeca:	4641      	mov	r1, r8
 800eecc:	4628      	mov	r0, r5
 800eece:	f7ff ffc3 	bl	800ee58 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800eed2:	b940      	cbnz	r0, 800eee6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800eed4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800eed8:	2b01      	cmp	r3, #1
 800eeda:	d004      	beq.n	800eee6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800eedc:	3301      	adds	r3, #1
 800eede:	105b      	asrs	r3, r3, #1
 800eee0:	f8ad 300e 	strh.w	r3, [sp, #14]
 800eee4:	e7ed      	b.n	800eec2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
 800eee6:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800eeea:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800eeee:	4413      	add	r3, r2
 800eef0:	b29b      	uxth	r3, r3
 800eef2:	441a      	add	r2, r3
 800eef4:	b212      	sxth	r2, r2
 800eef6:	4296      	cmp	r6, r2
 800eef8:	f8ad 300a 	strh.w	r3, [sp, #10]
 800eefc:	dadd      	bge.n	800eeba <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800eefe:	1ae3      	subs	r3, r4, r3
 800ef00:	f8ad 300e 	strh.w	r3, [sp, #14]
 800ef04:	e7d9      	b.n	800eeba <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800ef06:	f8bd 4008 	ldrh.w	r4, [sp, #8]
 800ef0a:	441c      	add	r4, r3
 800ef0c:	b2a4      	uxth	r4, r4
 800ef0e:	b226      	sxth	r6, r4
 800ef10:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800ef14:	42b3      	cmp	r3, r6
 800ef16:	dac8      	bge.n	800eeaa <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800ef18:	e9cd b700 	strd	fp, r7, [sp]
 800ef1c:	4653      	mov	r3, sl
 800ef1e:	464a      	mov	r2, r9
 800ef20:	4641      	mov	r1, r8
 800ef22:	4628      	mov	r0, r5
 800ef24:	f7ff ff98 	bl	800ee58 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800ef28:	b940      	cbnz	r0, 800ef3c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800ef2a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800ef2e:	2b01      	cmp	r3, #1
 800ef30:	d004      	beq.n	800ef3c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800ef32:	3301      	adds	r3, #1
 800ef34:	105b      	asrs	r3, r3, #1
 800ef36:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ef3a:	e7ed      	b.n	800ef18 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
 800ef3c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800ef40:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800ef44:	4413      	add	r3, r2
 800ef46:	b29b      	uxth	r3, r3
 800ef48:	441a      	add	r2, r3
 800ef4a:	b212      	sxth	r2, r2
 800ef4c:	4296      	cmp	r6, r2
 800ef4e:	f8ad 3008 	strh.w	r3, [sp, #8]
 800ef52:	dadd      	bge.n	800ef10 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800ef54:	1ae3      	subs	r3, r4, r3
 800ef56:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ef5a:	e7d9      	b.n	800ef10 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800ef5c:	200152e4 	.word	0x200152e4

0800ef60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800ef60:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ef62:	6803      	ldr	r3, [r0, #0]
 800ef64:	460d      	mov	r5, r1
 800ef66:	4604      	mov	r4, r0
 800ef68:	4601      	mov	r1, r0
 800ef6a:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800ef6c:	a802      	add	r0, sp, #8
 800ef6e:	4798      	blx	r3
 800ef70:	6828      	ldr	r0, [r5, #0]
 800ef72:	6869      	ldr	r1, [r5, #4]
 800ef74:	466b      	mov	r3, sp
 800ef76:	c303      	stmia	r3!, {r0, r1}
 800ef78:	4668      	mov	r0, sp
 800ef7a:	4619      	mov	r1, r3
 800ef7c:	f7fd fb96 	bl	800c6ac <_ZN8touchgfx4RectaNERKS0_>
 800ef80:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800ef82:	b188      	cbz	r0, 800efa8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800ef84:	6803      	ldr	r3, [r0, #0]
 800ef86:	1d21      	adds	r1, r4, #4
 800ef88:	68db      	ldr	r3, [r3, #12]
 800ef8a:	4798      	blx	r3
 800ef8c:	b160      	cbz	r0, 800efa8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800ef8e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800ef92:	2b00      	cmp	r3, #0
 800ef94:	dd08      	ble.n	800efa8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800ef96:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800ef9a:	2d00      	cmp	r5, #0
 800ef9c:	dd04      	ble.n	800efa8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800ef9e:	4a2b      	ldr	r2, [pc, #172]	@ (800f04c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 800efa0:	7812      	ldrb	r2, [r2, #0]
 800efa2:	b11a      	cbz	r2, 800efac <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 800efa4:	2a01      	cmp	r2, #1
 800efa6:	d029      	beq.n	800effc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 800efa8:	b004      	add	sp, #16
 800efaa:	bd70      	pop	{r4, r5, r6, pc}
 800efac:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800efb0:	441d      	add	r5, r3
 800efb2:	b2ad      	uxth	r5, r5
 800efb4:	b22e      	sxth	r6, r5
 800efb6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800efba:	42b3      	cmp	r3, r6
 800efbc:	daf4      	bge.n	800efa8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800efbe:	6823      	ldr	r3, [r4, #0]
 800efc0:	4669      	mov	r1, sp
 800efc2:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800efc4:	4620      	mov	r0, r4
 800efc6:	4798      	blx	r3
 800efc8:	b940      	cbnz	r0, 800efdc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800efca:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800efce:	2b01      	cmp	r3, #1
 800efd0:	d004      	beq.n	800efdc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800efd2:	3301      	adds	r3, #1
 800efd4:	105b      	asrs	r3, r3, #1
 800efd6:	f8ad 3006 	strh.w	r3, [sp, #6]
 800efda:	e7f0      	b.n	800efbe <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800efdc:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800efe0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800efe4:	4413      	add	r3, r2
 800efe6:	b29b      	uxth	r3, r3
 800efe8:	441a      	add	r2, r3
 800efea:	b212      	sxth	r2, r2
 800efec:	4296      	cmp	r6, r2
 800efee:	f8ad 3002 	strh.w	r3, [sp, #2]
 800eff2:	dae0      	bge.n	800efb6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800eff4:	1aeb      	subs	r3, r5, r3
 800eff6:	f8ad 3006 	strh.w	r3, [sp, #6]
 800effa:	e7dc      	b.n	800efb6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800effc:	f8bd 5000 	ldrh.w	r5, [sp]
 800f000:	441d      	add	r5, r3
 800f002:	b2ad      	uxth	r5, r5
 800f004:	b22e      	sxth	r6, r5
 800f006:	f9bd 3000 	ldrsh.w	r3, [sp]
 800f00a:	42b3      	cmp	r3, r6
 800f00c:	dacc      	bge.n	800efa8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800f00e:	6823      	ldr	r3, [r4, #0]
 800f010:	4669      	mov	r1, sp
 800f012:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800f014:	4620      	mov	r0, r4
 800f016:	4798      	blx	r3
 800f018:	b940      	cbnz	r0, 800f02c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800f01a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800f01e:	2b01      	cmp	r3, #1
 800f020:	d004      	beq.n	800f02c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800f022:	3301      	adds	r3, #1
 800f024:	105b      	asrs	r3, r3, #1
 800f026:	f8ad 3004 	strh.w	r3, [sp, #4]
 800f02a:	e7f0      	b.n	800f00e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800f02c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800f030:	f8bd 3000 	ldrh.w	r3, [sp]
 800f034:	4413      	add	r3, r2
 800f036:	b29b      	uxth	r3, r3
 800f038:	441a      	add	r2, r3
 800f03a:	b212      	sxth	r2, r2
 800f03c:	4296      	cmp	r6, r2
 800f03e:	f8ad 3000 	strh.w	r3, [sp]
 800f042:	dae0      	bge.n	800f006 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800f044:	1aeb      	subs	r3, r5, r3
 800f046:	f8ad 3004 	strh.w	r3, [sp, #4]
 800f04a:	e7dc      	b.n	800f006 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800f04c:	200152e4 	.word	0x200152e4

0800f050 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800f050:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f052:	6803      	ldr	r3, [r0, #0]
 800f054:	4604      	mov	r4, r0
 800f056:	4601      	mov	r1, r0
 800f058:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800f05a:	4668      	mov	r0, sp
 800f05c:	4798      	blx	r3
 800f05e:	2100      	movs	r1, #0
 800f060:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800f064:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800f068:	9102      	str	r1, [sp, #8]
 800f06a:	4668      	mov	r0, sp
 800f06c:	a902      	add	r1, sp, #8
 800f06e:	f8ad 200c 	strh.w	r2, [sp, #12]
 800f072:	f8ad 300e 	strh.w	r3, [sp, #14]
 800f076:	f7fd fb19 	bl	800c6ac <_ZN8touchgfx4RectaNERKS0_>
 800f07a:	6823      	ldr	r3, [r4, #0]
 800f07c:	4669      	mov	r1, sp
 800f07e:	691b      	ldr	r3, [r3, #16]
 800f080:	4620      	mov	r0, r4
 800f082:	4798      	blx	r3
 800f084:	b004      	add	sp, #16
 800f086:	bd10      	pop	{r4, pc}

0800f088 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800f088:	2101      	movs	r1, #1
 800f08a:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800f08e:	490b      	ldr	r1, [pc, #44]	@ (800f0bc <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800f090:	6001      	str	r1, [r0, #0]
 800f092:	2200      	movs	r2, #0
 800f094:	21ff      	movs	r1, #255	@ 0xff
 800f096:	8082      	strh	r2, [r0, #4]
 800f098:	80c2      	strh	r2, [r0, #6]
 800f09a:	8102      	strh	r2, [r0, #8]
 800f09c:	8142      	strh	r2, [r0, #10]
 800f09e:	8182      	strh	r2, [r0, #12]
 800f0a0:	81c2      	strh	r2, [r0, #14]
 800f0a2:	8202      	strh	r2, [r0, #16]
 800f0a4:	8242      	strh	r2, [r0, #18]
 800f0a6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800f0aa:	61c2      	str	r2, [r0, #28]
 800f0ac:	8402      	strh	r2, [r0, #32]
 800f0ae:	8442      	strh	r2, [r0, #34]	@ 0x22
 800f0b0:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 800f0b4:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 800f0b8:	6282      	str	r2, [r0, #40]	@ 0x28
 800f0ba:	4770      	bx	lr
 800f0bc:	08028a60 	.word	0x08028a60

0800f0c0 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800f0c0:	4b07      	ldr	r3, [pc, #28]	@ (800f0e0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800f0c2:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800f0c4:	881b      	ldrh	r3, [r3, #0]
 800f0c6:	4293      	cmp	r3, r2
 800f0c8:	bf81      	itttt	hi
 800f0ca:	4b06      	ldrhi	r3, [pc, #24]	@ (800f0e4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800f0cc:	681b      	ldrhi	r3, [r3, #0]
 800f0ce:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800f0d2:	7858      	ldrbhi	r0, [r3, #1]
 800f0d4:	bf8c      	ite	hi
 800f0d6:	f000 0003 	andhi.w	r0, r0, #3
 800f0da:	2000      	movls	r0, #0
 800f0dc:	4770      	bx	lr
 800f0de:	bf00      	nop
 800f0e0:	20015348 	.word	0x20015348
 800f0e4:	20015344 	.word	0x20015344

0800f0e8 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800f0e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f0ec:	4b10      	ldr	r3, [pc, #64]	@ (800f130 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800f0ee:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800f0f0:	881b      	ldrh	r3, [r3, #0]
 800f0f2:	428b      	cmp	r3, r1
 800f0f4:	4604      	mov	r4, r0
 800f0f6:	d918      	bls.n	800f12a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800f0f8:	6803      	ldr	r3, [r0, #0]
 800f0fa:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 800f0fc:	4b0d      	ldr	r3, [pc, #52]	@ (800f134 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800f0fe:	6818      	ldr	r0, [r3, #0]
 800f100:	f7f5 fd4c 	bl	8004b9c <_ZNK8touchgfx5Texts7getTextEt>
 800f104:	6823      	ldr	r3, [r4, #0]
 800f106:	4606      	mov	r6, r0
 800f108:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800f10a:	4620      	mov	r0, r4
 800f10c:	4798      	blx	r3
 800f10e:	6823      	ldr	r3, [r4, #0]
 800f110:	4607      	mov	r7, r0
 800f112:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800f116:	4620      	mov	r0, r4
 800f118:	4798      	blx	r3
 800f11a:	463a      	mov	r2, r7
 800f11c:	4603      	mov	r3, r0
 800f11e:	4631      	mov	r1, r6
 800f120:	4620      	mov	r0, r4
 800f122:	46ac      	mov	ip, r5
 800f124:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f128:	4760      	bx	ip
 800f12a:	2000      	movs	r0, #0
 800f12c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f130:	20015348 	.word	0x20015348
 800f134:	20015350 	.word	0x20015350

0800f138 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800f138:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800f13c:	4b17      	ldr	r3, [pc, #92]	@ (800f19c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800f13e:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800f140:	881b      	ldrh	r3, [r3, #0]
 800f142:	428b      	cmp	r3, r1
 800f144:	4604      	mov	r4, r0
 800f146:	d926      	bls.n	800f196 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800f148:	4b15      	ldr	r3, [pc, #84]	@ (800f1a0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800f14a:	681b      	ldr	r3, [r3, #0]
 800f14c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800f150:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800f154:	4b13      	ldr	r3, [pc, #76]	@ (800f1a4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800f156:	7855      	ldrb	r5, [r2, #1]
 800f158:	681b      	ldr	r3, [r3, #0]
 800f15a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800f15e:	6833      	ldr	r3, [r6, #0]
 800f160:	69df      	ldr	r7, [r3, #28]
 800f162:	4b11      	ldr	r3, [pc, #68]	@ (800f1a8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800f164:	6818      	ldr	r0, [r3, #0]
 800f166:	f7f5 fd19 	bl	8004b9c <_ZNK8touchgfx5Texts7getTextEt>
 800f16a:	6823      	ldr	r3, [r4, #0]
 800f16c:	4680      	mov	r8, r0
 800f16e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800f170:	4620      	mov	r0, r4
 800f172:	4798      	blx	r3
 800f174:	6823      	ldr	r3, [r4, #0]
 800f176:	4681      	mov	r9, r0
 800f178:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800f17c:	4620      	mov	r0, r4
 800f17e:	4798      	blx	r3
 800f180:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800f184:	9000      	str	r0, [sp, #0]
 800f186:	464b      	mov	r3, r9
 800f188:	4642      	mov	r2, r8
 800f18a:	4629      	mov	r1, r5
 800f18c:	4630      	mov	r0, r6
 800f18e:	47b8      	blx	r7
 800f190:	b003      	add	sp, #12
 800f192:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f196:	2000      	movs	r0, #0
 800f198:	e7fa      	b.n	800f190 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800f19a:	bf00      	nop
 800f19c:	20015348 	.word	0x20015348
 800f1a0:	20015344 	.word	0x20015344
 800f1a4:	2001534c 	.word	0x2001534c
 800f1a8:	20015350 	.word	0x20015350

0800f1ac <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800f1ac:	b40e      	push	{r1, r2, r3}
 800f1ae:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f1b2:	4b2f      	ldr	r3, [pc, #188]	@ (800f270 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800f1b4:	881a      	ldrh	r2, [r3, #0]
 800f1b6:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 800f1b8:	429a      	cmp	r2, r3
 800f1ba:	b09d      	sub	sp, #116	@ 0x74
 800f1bc:	4604      	mov	r4, r0
 800f1be:	d954      	bls.n	800f26a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800f1c0:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 800f274 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800f1c4:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 800f278 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800f1c8:	aa26      	add	r2, sp, #152	@ 0x98
 800f1ca:	9202      	str	r2, [sp, #8]
 800f1cc:	f8d9 2000 	ldr.w	r2, [r9]
 800f1d0:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800f1d4:	f8d8 3000 	ldr.w	r3, [r8]
 800f1d8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800f1dc:	682b      	ldr	r3, [r5, #0]
 800f1de:	4628      	mov	r0, r5
 800f1e0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800f1e2:	4798      	blx	r3
 800f1e4:	b207      	sxth	r7, r0
 800f1e6:	4606      	mov	r6, r0
 800f1e8:	a803      	add	r0, sp, #12
 800f1ea:	f004 ff83 	bl	80140f4 <_ZN8touchgfx12TextProviderC1Ev>
 800f1ee:	682b      	ldr	r3, [r5, #0]
 800f1f0:	4628      	mov	r0, r5
 800f1f2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800f1f4:	4798      	blx	r3
 800f1f6:	682b      	ldr	r3, [r5, #0]
 800f1f8:	4682      	mov	sl, r0
 800f1fa:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f1fc:	4628      	mov	r0, r5
 800f1fe:	4798      	blx	r3
 800f200:	4653      	mov	r3, sl
 800f202:	9000      	str	r0, [sp, #0]
 800f204:	9a02      	ldr	r2, [sp, #8]
 800f206:	9925      	ldr	r1, [sp, #148]	@ 0x94
 800f208:	a803      	add	r0, sp, #12
 800f20a:	f004 ffc6 	bl	801419a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f20e:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800f210:	f8d9 3000 	ldr.w	r3, [r9]
 800f214:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 800f218:	8925      	ldrh	r5, [r4, #8]
 800f21a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800f21e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800f222:	eba5 050c 	sub.w	r5, r5, ip
 800f226:	784a      	ldrb	r2, [r1, #1]
 800f228:	f8d8 3000 	ldr.w	r3, [r8]
 800f22c:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 800f230:	b22d      	sxth	r5, r5
 800f232:	9500      	str	r5, [sp, #0]
 800f234:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800f238:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800f23c:	a803      	add	r0, sp, #12
 800f23e:	f002 f911 	bl	8011464 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800f242:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 800f246:	18b9      	adds	r1, r7, r2
 800f248:	2900      	cmp	r1, #0
 800f24a:	b203      	sxth	r3, r0
 800f24c:	dd0b      	ble.n	800f266 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800f24e:	3b01      	subs	r3, #1
 800f250:	fb13 f302 	smulbb	r3, r3, r2
 800f254:	fb16 3300 	smlabb	r3, r6, r0, r3
 800f258:	b21f      	sxth	r7, r3
 800f25a:	4638      	mov	r0, r7
 800f25c:	b01d      	add	sp, #116	@ 0x74
 800f25e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f262:	b003      	add	sp, #12
 800f264:	4770      	bx	lr
 800f266:	2b00      	cmp	r3, #0
 800f268:	dcf7      	bgt.n	800f25a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800f26a:	2700      	movs	r7, #0
 800f26c:	e7f5      	b.n	800f25a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800f26e:	bf00      	nop
 800f270:	20015348 	.word	0x20015348
 800f274:	20015344 	.word	0x20015344
 800f278:	2001534c 	.word	0x2001534c

0800f27c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800f27c:	b570      	push	{r4, r5, r6, lr}
 800f27e:	6803      	ldr	r3, [r0, #0]
 800f280:	4604      	mov	r4, r0
 800f282:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800f284:	4615      	mov	r5, r2
 800f286:	4798      	blx	r3
 800f288:	6823      	ldr	r3, [r4, #0]
 800f28a:	4629      	mov	r1, r5
 800f28c:	4620      	mov	r0, r4
 800f28e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800f290:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f294:	4718      	bx	r3
	...

0800f298 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800f298:	b538      	push	{r3, r4, r5, lr}
 800f29a:	4b0e      	ldr	r3, [pc, #56]	@ (800f2d4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800f29c:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800f29e:	881b      	ldrh	r3, [r3, #0]
 800f2a0:	429a      	cmp	r2, r3
 800f2a2:	4604      	mov	r4, r0
 800f2a4:	d214      	bcs.n	800f2d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800f2a6:	6803      	ldr	r3, [r0, #0]
 800f2a8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800f2aa:	4798      	blx	r3
 800f2ac:	6823      	ldr	r3, [r4, #0]
 800f2ae:	4605      	mov	r5, r0
 800f2b0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800f2b2:	4620      	mov	r0, r4
 800f2b4:	4798      	blx	r3
 800f2b6:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800f2ba:	b22d      	sxth	r5, r5
 800f2bc:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800f2c0:	4601      	mov	r1, r0
 800f2c2:	bf06      	itte	eq
 800f2c4:	4602      	moveq	r2, r0
 800f2c6:	4629      	moveq	r1, r5
 800f2c8:	462a      	movne	r2, r5
 800f2ca:	4620      	mov	r0, r4
 800f2cc:	f7ff ffd6 	bl	800f27c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f2d0:	bd38      	pop	{r3, r4, r5, pc}
 800f2d2:	bf00      	nop
 800f2d4:	20015348 	.word	0x20015348

0800f2d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800f2d8:	b530      	push	{r4, r5, lr}
 800f2da:	888b      	ldrh	r3, [r1, #4]
 800f2dc:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800f2de:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800f2e2:	b085      	sub	sp, #20
 800f2e4:	4604      	mov	r4, r0
 800f2e6:	b923      	cbnz	r3, 800f2f2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800f2e8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800f2ec:	b90b      	cbnz	r3, 800f2f2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800f2ee:	f7ff ffd3 	bl	800f298 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800f2f2:	6823      	ldr	r3, [r4, #0]
 800f2f4:	466d      	mov	r5, sp
 800f2f6:	4621      	mov	r1, r4
 800f2f8:	4628      	mov	r0, r5
 800f2fa:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800f2fe:	4798      	blx	r3
 800f300:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800f304:	343c      	adds	r4, #60	@ 0x3c
 800f306:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800f30a:	b005      	add	sp, #20
 800f30c:	bd30      	pop	{r4, r5, pc}

0800f30e <_ZNK8touchgfx3Box12getSolidRectEv>:
 800f30e:	2300      	movs	r3, #0
 800f310:	8083      	strh	r3, [r0, #4]
 800f312:	80c3      	strh	r3, [r0, #6]
 800f314:	8003      	strh	r3, [r0, #0]
 800f316:	8043      	strh	r3, [r0, #2]
 800f318:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800f31c:	2bff      	cmp	r3, #255	@ 0xff
 800f31e:	bf01      	itttt	eq
 800f320:	890b      	ldrheq	r3, [r1, #8]
 800f322:	8083      	strheq	r3, [r0, #4]
 800f324:	894b      	ldrheq	r3, [r1, #10]
 800f326:	80c3      	strheq	r3, [r0, #6]
 800f328:	4770      	bx	lr
	...

0800f32c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800f32c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f32e:	4604      	mov	r4, r0
 800f330:	6808      	ldr	r0, [r1, #0]
 800f332:	6849      	ldr	r1, [r1, #4]
 800f334:	466b      	mov	r3, sp
 800f336:	c303      	stmia	r3!, {r0, r1}
 800f338:	6823      	ldr	r3, [r4, #0]
 800f33a:	4669      	mov	r1, sp
 800f33c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f33e:	4620      	mov	r0, r4
 800f340:	4798      	blx	r3
 800f342:	4b08      	ldr	r3, [pc, #32]	@ (800f364 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800f344:	681b      	ldr	r3, [r3, #0]
 800f346:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800f34a:	b10a      	cbz	r2, 800f350 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800f34c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800f34e:	b900      	cbnz	r0, 800f352 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800f350:	6898      	ldr	r0, [r3, #8]
 800f352:	6803      	ldr	r3, [r0, #0]
 800f354:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800f356:	6a1d      	ldr	r5, [r3, #32]
 800f358:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800f35c:	4669      	mov	r1, sp
 800f35e:	47a8      	blx	r5
 800f360:	b003      	add	sp, #12
 800f362:	bd30      	pop	{r4, r5, pc}
 800f364:	200152ec 	.word	0x200152ec

0800f368 <_ZN8touchgfx3BoxD1Ev>:
 800f368:	4770      	bx	lr

0800f36a <_ZN8touchgfx3BoxD0Ev>:
 800f36a:	b510      	push	{r4, lr}
 800f36c:	212c      	movs	r1, #44	@ 0x2c
 800f36e:	4604      	mov	r4, r0
 800f370:	f015 fadb 	bl	802492a <_ZdlPvj>
 800f374:	4620      	mov	r0, r4
 800f376:	bd10      	pop	{r4, pc}

0800f378 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800f378:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800f37c:	b12a      	cbz	r2, 800f38a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800f37e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800f382:	b112      	cbz	r2, 800f38a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800f384:	6803      	ldr	r3, [r0, #0]
 800f386:	695b      	ldr	r3, [r3, #20]
 800f388:	4718      	bx	r3
 800f38a:	4770      	bx	lr

0800f38c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800f38c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f390:	4b2f      	ldr	r3, [pc, #188]	@ (800f450 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800f392:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800f394:	881b      	ldrh	r3, [r3, #0]
 800f396:	4293      	cmp	r3, r2
 800f398:	b08d      	sub	sp, #52	@ 0x34
 800f39a:	4604      	mov	r4, r0
 800f39c:	460f      	mov	r7, r1
 800f39e:	d954      	bls.n	800f44a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800f3a0:	4b2c      	ldr	r3, [pc, #176]	@ (800f454 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800f3a2:	6819      	ldr	r1, [r3, #0]
 800f3a4:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800f3a8:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800f3ac:	4a2a      	ldr	r2, [pc, #168]	@ (800f458 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800f3ae:	6812      	ldr	r2, [r2, #0]
 800f3b0:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800f3b4:	2900      	cmp	r1, #0
 800f3b6:	d048      	beq.n	800f44a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800f3b8:	785a      	ldrb	r2, [r3, #1]
 800f3ba:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800f3be:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 800f3c2:	4b26      	ldr	r3, [pc, #152]	@ (800f45c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800f3c4:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 800f3c8:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 800f3cc:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 800f3d0:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 800f3d2:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 800f3d6:	9107      	str	r1, [sp, #28]
 800f3d8:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800f3dc:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800f3e0:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 800f3e4:	681a      	ldr	r2, [r3, #0]
 800f3e6:	f88d 8020 	strb.w	r8, [sp, #32]
 800f3ea:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 800f3ee:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 800f3f2:	9609      	str	r6, [sp, #36]	@ 0x24
 800f3f4:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 800f3f8:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 800f3fc:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 800f400:	b10b      	cbz	r3, 800f406 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800f402:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 800f404:	b905      	cbnz	r5, 800f408 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800f406:	6895      	ldr	r5, [r2, #8]
 800f408:	ae05      	add	r6, sp, #20
 800f40a:	4621      	mov	r1, r4
 800f40c:	4630      	mov	r0, r6
 800f40e:	f003 ff09 	bl	8013224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f412:	4b13      	ldr	r3, [pc, #76]	@ (800f460 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800f414:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800f416:	6818      	ldr	r0, [r3, #0]
 800f418:	f7f5 fbc0 	bl	8004b9c <_ZNK8touchgfx5Texts7getTextEt>
 800f41c:	6823      	ldr	r3, [r4, #0]
 800f41e:	4680      	mov	r8, r0
 800f420:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800f422:	4620      	mov	r0, r4
 800f424:	4798      	blx	r3
 800f426:	6823      	ldr	r3, [r4, #0]
 800f428:	4681      	mov	r9, r0
 800f42a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800f42e:	4620      	mov	r0, r4
 800f430:	4798      	blx	r3
 800f432:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800f436:	ab07      	add	r3, sp, #28
 800f438:	9300      	str	r3, [sp, #0]
 800f43a:	f8cd 8004 	str.w	r8, [sp, #4]
 800f43e:	463b      	mov	r3, r7
 800f440:	e896 0006 	ldmia.w	r6, {r1, r2}
 800f444:	4628      	mov	r0, r5
 800f446:	f7f5 fb5b 	bl	8004b00 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800f44a:	b00d      	add	sp, #52	@ 0x34
 800f44c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f450:	20015348 	.word	0x20015348
 800f454:	20015344 	.word	0x20015344
 800f458:	2001534c 	.word	0x2001534c
 800f45c:	200152ec 	.word	0x200152ec
 800f460:	20015350 	.word	0x20015350

0800f464 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800f464:	4770      	bx	lr

0800f466 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800f466:	b510      	push	{r4, lr}
 800f468:	2134      	movs	r1, #52	@ 0x34
 800f46a:	4604      	mov	r4, r0
 800f46c:	f015 fa5d 	bl	802492a <_ZdlPvj>
 800f470:	4620      	mov	r0, r4
 800f472:	bd10      	pop	{r4, pc}

0800f474 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800f474:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f478:	4604      	mov	r4, r0
 800f47a:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800f47c:	8962      	ldrh	r2, [r4, #10]
 800f47e:	b218      	sxth	r0, r3
 800f480:	460e      	mov	r6, r1
 800f482:	005b      	lsls	r3, r3, #1
 800f484:	8921      	ldrh	r1, [r4, #8]
 800f486:	b29b      	uxth	r3, r3
 800f488:	1ac9      	subs	r1, r1, r3
 800f48a:	b08e      	sub	sp, #56	@ 0x38
 800f48c:	b209      	sxth	r1, r1
 800f48e:	1ad3      	subs	r3, r2, r3
 800f490:	b21b      	sxth	r3, r3
 800f492:	2900      	cmp	r1, #0
 800f494:	f8ad 0000 	strh.w	r0, [sp]
 800f498:	f8ad 0002 	strh.w	r0, [sp, #2]
 800f49c:	f8ad 1004 	strh.w	r1, [sp, #4]
 800f4a0:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f4a4:	dd5e      	ble.n	800f564 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800f4a6:	2b00      	cmp	r3, #0
 800f4a8:	dd5c      	ble.n	800f564 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800f4aa:	6830      	ldr	r0, [r6, #0]
 800f4ac:	6871      	ldr	r1, [r6, #4]
 800f4ae:	ab02      	add	r3, sp, #8
 800f4b0:	c303      	stmia	r3!, {r0, r1}
 800f4b2:	4669      	mov	r1, sp
 800f4b4:	a802      	add	r0, sp, #8
 800f4b6:	f7fd f8f9 	bl	800c6ac <_ZN8touchgfx4RectaNERKS0_>
 800f4ba:	4620      	mov	r0, r4
 800f4bc:	a902      	add	r1, sp, #8
 800f4be:	f7ff ff35 	bl	800f32c <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800f4c2:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
 800f4c4:	2800      	cmp	r0, #0
 800f4c6:	d05f      	beq.n	800f588 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800f4c8:	8963      	ldrh	r3, [r4, #10]
 800f4ca:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800f4ce:	f8ad 101c 	strh.w	r1, [sp, #28]
 800f4d2:	1a1f      	subs	r7, r3, r0
 800f4d4:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800f4d8:	b202      	sxth	r2, r0
 800f4da:	2500      	movs	r5, #0
 800f4dc:	b21b      	sxth	r3, r3
 800f4de:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
 800f4e2:	1a09      	subs	r1, r1, r0
 800f4e4:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 800f4e8:	9506      	str	r5, [sp, #24]
 800f4ea:	f8ad 201e 	strh.w	r2, [sp, #30]
 800f4ee:	f8ad 5020 	strh.w	r5, [sp, #32]
 800f4f2:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
 800f4f6:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 800f4fa:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800f4fe:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800f502:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800f506:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 800f50a:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 800f50e:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800f512:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800f516:	af04      	add	r7, sp, #16
 800f518:	ab06      	add	r3, sp, #24
 800f51a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800f51e:	e893 0003 	ldmia.w	r3, {r0, r1}
 800f522:	e887 0003 	stmia.w	r7, {r0, r1}
 800f526:	4631      	mov	r1, r6
 800f528:	4638      	mov	r0, r7
 800f52a:	f7fd f8bf 	bl	800c6ac <_ZN8touchgfx4RectaNERKS0_>
 800f52e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800f532:	2b00      	cmp	r3, #0
 800f534:	dd12      	ble.n	800f55c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800f536:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800f53a:	2b00      	cmp	r3, #0
 800f53c:	dd0e      	ble.n	800f55c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800f53e:	6823      	ldr	r3, [r4, #0]
 800f540:	4639      	mov	r1, r7
 800f542:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f544:	4620      	mov	r0, r4
 800f546:	4798      	blx	r3
 800f548:	f7f3 f9ca 	bl	80028e0 <_ZN8touchgfx3HAL3lcdEv>
 800f54c:	6803      	ldr	r3, [r0, #0]
 800f54e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800f550:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800f554:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800f558:	4639      	mov	r1, r7
 800f55a:	47c0      	blx	r8
 800f55c:	3501      	adds	r5, #1
 800f55e:	2d04      	cmp	r5, #4
 800f560:	d1da      	bne.n	800f518 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800f562:	e011      	b.n	800f588 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800f564:	6830      	ldr	r0, [r6, #0]
 800f566:	6871      	ldr	r1, [r6, #4]
 800f568:	ab06      	add	r3, sp, #24
 800f56a:	c303      	stmia	r3!, {r0, r1}
 800f56c:	6823      	ldr	r3, [r4, #0]
 800f56e:	a906      	add	r1, sp, #24
 800f570:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f572:	4620      	mov	r0, r4
 800f574:	4798      	blx	r3
 800f576:	f7f3 f9b3 	bl	80028e0 <_ZN8touchgfx3HAL3lcdEv>
 800f57a:	6803      	ldr	r3, [r0, #0]
 800f57c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800f57e:	6a1d      	ldr	r5, [r3, #32]
 800f580:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800f584:	a906      	add	r1, sp, #24
 800f586:	47a8      	blx	r5
 800f588:	b00e      	add	sp, #56	@ 0x38
 800f58a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f58e <_ZN8touchgfx5ImageD1Ev>:
 800f58e:	4770      	bx	lr

0800f590 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800f590:	b570      	push	{r4, r5, r6, lr}
 800f592:	880b      	ldrh	r3, [r1, #0]
 800f594:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800f596:	4604      	mov	r4, r0
 800f598:	4608      	mov	r0, r1
 800f59a:	460d      	mov	r5, r1
 800f59c:	f006 f946 	bl	801582c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800f5a0:	4606      	mov	r6, r0
 800f5a2:	4628      	mov	r0, r5
 800f5a4:	f006 f976 	bl	8015894 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800f5a8:	6823      	ldr	r3, [r4, #0]
 800f5aa:	4605      	mov	r5, r0
 800f5ac:	4631      	mov	r1, r6
 800f5ae:	4620      	mov	r0, r4
 800f5b0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800f5b2:	4798      	blx	r3
 800f5b4:	6823      	ldr	r3, [r4, #0]
 800f5b6:	4629      	mov	r1, r5
 800f5b8:	4620      	mov	r0, r4
 800f5ba:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800f5bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f5c0:	4718      	bx	r3

0800f5c2 <_ZN8touchgfx5ImageD0Ev>:
 800f5c2:	b510      	push	{r4, lr}
 800f5c4:	212c      	movs	r1, #44	@ 0x2c
 800f5c6:	4604      	mov	r4, r0
 800f5c8:	f015 f9af 	bl	802492a <_ZdlPvj>
 800f5cc:	4620      	mov	r0, r4
 800f5ce:	bd10      	pop	{r4, pc}

0800f5d0 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800f5d0:	b510      	push	{r4, lr}
 800f5d2:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800f5d6:	2bff      	cmp	r3, #255	@ 0xff
 800f5d8:	4604      	mov	r4, r0
 800f5da:	d006      	beq.n	800f5ea <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800f5dc:	2300      	movs	r3, #0
 800f5de:	8003      	strh	r3, [r0, #0]
 800f5e0:	8043      	strh	r3, [r0, #2]
 800f5e2:	8083      	strh	r3, [r0, #4]
 800f5e4:	80c3      	strh	r3, [r0, #6]
 800f5e6:	4620      	mov	r0, r4
 800f5e8:	bd10      	pop	{r4, pc}
 800f5ea:	3126      	adds	r1, #38	@ 0x26
 800f5ec:	f006 f986 	bl	80158fc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800f5f0:	e7f9      	b.n	800f5e6 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800f5f2 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800f5f2:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 800f5f6:	b12a      	cbz	r2, 800f604 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800f5f8:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800f5fc:	b112      	cbz	r2, 800f604 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800f5fe:	6803      	ldr	r3, [r0, #0]
 800f600:	695b      	ldr	r3, [r3, #20]
 800f602:	4718      	bx	r3
 800f604:	4770      	bx	lr
	...

0800f608 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800f608:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f60c:	4604      	mov	r4, r0
 800f60e:	b088      	sub	sp, #32
 800f610:	f854 3b26 	ldr.w	r3, [r4], #38
 800f614:	2500      	movs	r5, #0
 800f616:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f618:	460f      	mov	r7, r1
 800f61a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800f61e:	a904      	add	r1, sp, #16
 800f620:	4606      	mov	r6, r0
 800f622:	4798      	blx	r3
 800f624:	4620      	mov	r0, r4
 800f626:	f006 f901 	bl	801582c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800f62a:	4680      	mov	r8, r0
 800f62c:	4620      	mov	r0, r4
 800f62e:	f006 f931 	bl	8015894 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800f632:	9506      	str	r5, [sp, #24]
 800f634:	ad06      	add	r5, sp, #24
 800f636:	f8ad 001e 	strh.w	r0, [sp, #30]
 800f63a:	4639      	mov	r1, r7
 800f63c:	4628      	mov	r0, r5
 800f63e:	f8ad 801c 	strh.w	r8, [sp, #28]
 800f642:	f7fd f833 	bl	800c6ac <_ZN8touchgfx4RectaNERKS0_>
 800f646:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800f64a:	2b00      	cmp	r3, #0
 800f64c:	dd19      	ble.n	800f682 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800f64e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800f652:	2b00      	cmp	r3, #0
 800f654:	dd15      	ble.n	800f682 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800f656:	4b0c      	ldr	r3, [pc, #48]	@ (800f688 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800f658:	681b      	ldr	r3, [r3, #0]
 800f65a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800f65e:	b10a      	cbz	r2, 800f664 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800f660:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800f662:	b900      	cbnz	r0, 800f666 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800f664:	6898      	ldr	r0, [r3, #8]
 800f666:	6801      	ldr	r1, [r0, #0]
 800f668:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800f66c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800f670:	2701      	movs	r7, #1
 800f672:	9702      	str	r7, [sp, #8]
 800f674:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 800f678:	e9cd 5600 	strd	r5, r6, [sp]
 800f67c:	688d      	ldr	r5, [r1, #8]
 800f67e:	4621      	mov	r1, r4
 800f680:	47a8      	blx	r5
 800f682:	b008      	add	sp, #32
 800f684:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f688:	200152ec 	.word	0x200152ec

0800f68c <_ZN8touchgfx7OutlineD1Ev>:
 800f68c:	4770      	bx	lr

0800f68e <_ZN8touchgfx7OutlineD0Ev>:
 800f68e:	b510      	push	{r4, lr}
 800f690:	2130      	movs	r1, #48	@ 0x30
 800f692:	4604      	mov	r4, r0
 800f694:	f015 f949 	bl	802492a <_ZdlPvj>
 800f698:	4620      	mov	r0, r4
 800f69a:	bd10      	pop	{r4, pc}

0800f69c <_ZN8touchgfx7Outline5resetEv>:
 800f69c:	b510      	push	{r4, lr}
 800f69e:	4604      	mov	r4, r0
 800f6a0:	f000 fe82 	bl	80103a8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800f6a4:	60e0      	str	r0, [r4, #12]
 800f6a6:	f000 fe85 	bl	80103b4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800f6aa:	68e3      	ldr	r3, [r4, #12]
 800f6ac:	6123      	str	r3, [r4, #16]
 800f6ae:	08c0      	lsrs	r0, r0, #3
 800f6b0:	2200      	movs	r2, #0
 800f6b2:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 800f6b6:	3801      	subs	r0, #1
 800f6b8:	6060      	str	r0, [r4, #4]
 800f6ba:	60a2      	str	r2, [r4, #8]
 800f6bc:	8019      	strh	r1, [r3, #0]
 800f6be:	8059      	strh	r1, [r3, #2]
 800f6c0:	809a      	strh	r2, [r3, #4]
 800f6c2:	80da      	strh	r2, [r3, #6]
 800f6c4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800f6c6:	f023 0301 	bic.w	r3, r3, #1
 800f6ca:	f043 0302 	orr.w	r3, r3, #2
 800f6ce:	6263      	str	r3, [r4, #36]	@ 0x24
 800f6d0:	bd10      	pop	{r4, pc}
	...

0800f6d4 <_ZN8touchgfx7OutlineC1Ev>:
 800f6d4:	b510      	push	{r4, lr}
 800f6d6:	4b0a      	ldr	r3, [pc, #40]	@ (800f700 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800f6d8:	6003      	str	r3, [r0, #0]
 800f6da:	2300      	movs	r3, #0
 800f6dc:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800f6e0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800f6e4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800f6e8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800f6ec:	6243      	str	r3, [r0, #36]	@ 0x24
 800f6ee:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 800f6f2:	4604      	mov	r4, r0
 800f6f4:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 800f6f8:	f7ff ffd0 	bl	800f69c <_ZN8touchgfx7Outline5resetEv>
 800f6fc:	4620      	mov	r0, r4
 800f6fe:	bd10      	pop	{r4, pc}
 800f700:	08028c14 	.word	0x08028c14

0800f704 <_ZN8touchgfx7Outline10renderLineEiiii>:
 800f704:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f708:	b093      	sub	sp, #76	@ 0x4c
 800f70a:	1156      	asrs	r6, r2, #5
 800f70c:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 800f70e:	9305      	str	r3, [sp, #20]
 800f710:	f004 051f 	and.w	r5, r4, #31
 800f714:	1153      	asrs	r3, r2, #5
 800f716:	9504      	str	r5, [sp, #16]
 800f718:	1165      	asrs	r5, r4, #5
 800f71a:	9303      	str	r3, [sp, #12]
 800f71c:	42ae      	cmp	r6, r5
 800f71e:	ea4f 1364 	mov.w	r3, r4, asr #5
 800f722:	9306      	str	r3, [sp, #24]
 800f724:	f002 031f 	and.w	r3, r2, #31
 800f728:	f040 80f8 	bne.w	800f91c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800f72c:	9c04      	ldr	r4, [sp, #16]
 800f72e:	9a05      	ldr	r2, [sp, #20]
 800f730:	42a3      	cmp	r3, r4
 800f732:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800f736:	6902      	ldr	r2, [r0, #16]
 800f738:	d125      	bne.n	800f786 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800f73a:	f9b2 3000 	ldrsh.w	r3, [r2]
 800f73e:	459e      	cmp	lr, r3
 800f740:	d103      	bne.n	800f74a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800f742:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800f746:	429e      	cmp	r6, r3
 800f748:	d035      	beq.n	800f7b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f74a:	88d1      	ldrh	r1, [r2, #6]
 800f74c:	8893      	ldrh	r3, [r2, #4]
 800f74e:	430b      	orrs	r3, r1
 800f750:	d010      	beq.n	800f774 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800f752:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800f756:	2b00      	cmp	r3, #0
 800f758:	db0c      	blt.n	800f774 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800f75a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800f75c:	428b      	cmp	r3, r1
 800f75e:	da09      	bge.n	800f774 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800f760:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800f764:	428b      	cmp	r3, r1
 800f766:	bf38      	it	cc
 800f768:	3208      	addcc	r2, #8
 800f76a:	f103 0301 	add.w	r3, r3, #1
 800f76e:	bf38      	it	cc
 800f770:	6102      	strcc	r2, [r0, #16]
 800f772:	6083      	str	r3, [r0, #8]
 800f774:	6903      	ldr	r3, [r0, #16]
 800f776:	9a03      	ldr	r2, [sp, #12]
 800f778:	f8a3 e000 	strh.w	lr, [r3]
 800f77c:	805a      	strh	r2, [r3, #2]
 800f77e:	2200      	movs	r2, #0
 800f780:	809a      	strh	r2, [r3, #4]
 800f782:	80da      	strh	r2, [r3, #6]
 800f784:	e017      	b.n	800f7b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f786:	9c05      	ldr	r4, [sp, #20]
 800f788:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800f78c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800f790:	f004 041f 	and.w	r4, r4, #31
 800f794:	114e      	asrs	r6, r1, #5
 800f796:	9402      	str	r4, [sp, #8]
 800f798:	9c04      	ldr	r4, [sp, #16]
 800f79a:	4576      	cmp	r6, lr
 800f79c:	f001 0c1f 	and.w	ip, r1, #31
 800f7a0:	eba4 0403 	sub.w	r4, r4, r3
 800f7a4:	d10a      	bne.n	800f7bc <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800f7a6:	9b02      	ldr	r3, [sp, #8]
 800f7a8:	449c      	add	ip, r3
 800f7aa:	44a0      	add	r8, r4
 800f7ac:	fb04 a40c 	mla	r4, r4, ip, sl
 800f7b0:	f8a2 8004 	strh.w	r8, [r2, #4]
 800f7b4:	80d4      	strh	r4, [r2, #6]
 800f7b6:	b013      	add	sp, #76	@ 0x4c
 800f7b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f7bc:	9d05      	ldr	r5, [sp, #20]
 800f7be:	1a69      	subs	r1, r5, r1
 800f7c0:	bf5b      	ittet	pl
 800f7c2:	f1cc 0520 	rsbpl	r5, ip, #32
 800f7c6:	436c      	mulpl	r4, r5
 800f7c8:	2500      	movmi	r5, #0
 800f7ca:	2520      	movpl	r5, #32
 800f7cc:	bf44      	itt	mi
 800f7ce:	fb04 f40c 	mulmi.w	r4, r4, ip
 800f7d2:	4249      	negmi	r1, r1
 800f7d4:	9501      	str	r5, [sp, #4]
 800f7d6:	9f01      	ldr	r7, [sp, #4]
 800f7d8:	fb94 f5f1 	sdiv	r5, r4, r1
 800f7dc:	fb01 4415 	mls	r4, r1, r5, r4
 800f7e0:	bf54      	ite	pl
 800f7e2:	f04f 0901 	movpl.w	r9, #1
 800f7e6:	f04f 39ff 	movmi.w	r9, #4294967295
 800f7ea:	2c00      	cmp	r4, #0
 800f7ec:	bfb8      	it	lt
 800f7ee:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800f7f2:	44bc      	add	ip, r7
 800f7f4:	44a8      	add	r8, r5
 800f7f6:	fb05 ac0c 	mla	ip, r5, ip, sl
 800f7fa:	f8a2 8004 	strh.w	r8, [r2, #4]
 800f7fe:	f8a2 c006 	strh.w	ip, [r2, #6]
 800f802:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f806:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800f80a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800f80e:	bfb8      	it	lt
 800f810:	1864      	addlt	r4, r4, r1
 800f812:	ea58 0202 	orrs.w	r2, r8, r2
 800f816:	444e      	add	r6, r9
 800f818:	d011      	beq.n	800f83e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800f81a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800f81e:	f1b8 0f00 	cmp.w	r8, #0
 800f822:	db0c      	blt.n	800f83e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800f824:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800f826:	4590      	cmp	r8, r2
 800f828:	da09      	bge.n	800f83e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800f82a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800f82e:	4590      	cmp	r8, r2
 800f830:	bf3c      	itt	cc
 800f832:	f10c 0208 	addcc.w	r2, ip, #8
 800f836:	6102      	strcc	r2, [r0, #16]
 800f838:	f108 0201 	add.w	r2, r8, #1
 800f83c:	6082      	str	r2, [r0, #8]
 800f83e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f842:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800f846:	f8ac 6000 	strh.w	r6, [ip]
 800f84a:	2700      	movs	r7, #0
 800f84c:	45b6      	cmp	lr, r6
 800f84e:	f8ac 2002 	strh.w	r2, [ip, #2]
 800f852:	f8ac 7004 	strh.w	r7, [ip, #4]
 800f856:	f8ac 7006 	strh.w	r7, [ip, #6]
 800f85a:	442b      	add	r3, r5
 800f85c:	d04d      	beq.n	800f8fa <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800f85e:	9f04      	ldr	r7, [sp, #16]
 800f860:	1aff      	subs	r7, r7, r3
 800f862:	443d      	add	r5, r7
 800f864:	016d      	lsls	r5, r5, #5
 800f866:	fb95 f8f1 	sdiv	r8, r5, r1
 800f86a:	fb01 5518 	mls	r5, r1, r8, r5
 800f86e:	2d00      	cmp	r5, #0
 800f870:	bfb8      	it	lt
 800f872:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f876:	f108 0701 	add.w	r7, r8, #1
 800f87a:	bfb8      	it	lt
 800f87c:	186d      	addlt	r5, r5, r1
 800f87e:	1a64      	subs	r4, r4, r1
 800f880:	9703      	str	r7, [sp, #12]
 800f882:	f04f 0a00 	mov.w	sl, #0
 800f886:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f88a:	1964      	adds	r4, r4, r5
 800f88c:	bf58      	it	pl
 800f88e:	9f03      	ldrpl	r7, [sp, #12]
 800f890:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800f894:	bf48      	it	mi
 800f896:	4647      	movmi	r7, r8
 800f898:	44bb      	add	fp, r7
 800f89a:	f8ac b004 	strh.w	fp, [ip, #4]
 800f89e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f8a2:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f8a6:	f8ac b006 	strh.w	fp, [ip, #6]
 800f8aa:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f8ae:	443b      	add	r3, r7
 800f8b0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f8b4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f8b8:	bf58      	it	pl
 800f8ba:	1a64      	subpl	r4, r4, r1
 800f8bc:	ea5b 0707 	orrs.w	r7, fp, r7
 800f8c0:	444e      	add	r6, r9
 800f8c2:	d011      	beq.n	800f8e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800f8c4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800f8c8:	f1bb 0f00 	cmp.w	fp, #0
 800f8cc:	db0c      	blt.n	800f8e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800f8ce:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800f8d0:	45bb      	cmp	fp, r7
 800f8d2:	da09      	bge.n	800f8e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800f8d4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f8d8:	45bb      	cmp	fp, r7
 800f8da:	bf3c      	itt	cc
 800f8dc:	f10c 0708 	addcc.w	r7, ip, #8
 800f8e0:	6107      	strcc	r7, [r0, #16]
 800f8e2:	f10b 0701 	add.w	r7, fp, #1
 800f8e6:	6087      	str	r7, [r0, #8]
 800f8e8:	6907      	ldr	r7, [r0, #16]
 800f8ea:	45b6      	cmp	lr, r6
 800f8ec:	803e      	strh	r6, [r7, #0]
 800f8ee:	807a      	strh	r2, [r7, #2]
 800f8f0:	f8a7 a004 	strh.w	sl, [r7, #4]
 800f8f4:	f8a7 a006 	strh.w	sl, [r7, #6]
 800f8f8:	d1c5      	bne.n	800f886 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800f8fa:	9a04      	ldr	r2, [sp, #16]
 800f8fc:	1ad3      	subs	r3, r2, r3
 800f8fe:	6902      	ldr	r2, [r0, #16]
 800f900:	8891      	ldrh	r1, [r2, #4]
 800f902:	88d6      	ldrh	r6, [r2, #6]
 800f904:	4419      	add	r1, r3
 800f906:	8091      	strh	r1, [r2, #4]
 800f908:	9902      	ldr	r1, [sp, #8]
 800f90a:	f101 0c20 	add.w	ip, r1, #32
 800f90e:	9901      	ldr	r1, [sp, #4]
 800f910:	ebac 0c01 	sub.w	ip, ip, r1
 800f914:	fb03 630c 	mla	r3, r3, ip, r6
 800f918:	80d3      	strh	r3, [r2, #6]
 800f91a:	e74c      	b.n	800f7b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f91c:	9d05      	ldr	r5, [sp, #20]
 800f91e:	1aa2      	subs	r2, r4, r2
 800f920:	eba5 0501 	sub.w	r5, r5, r1
 800f924:	9508      	str	r5, [sp, #32]
 800f926:	9202      	str	r2, [sp, #8]
 800f928:	f140 8128 	bpl.w	800fb7c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800f92c:	9a03      	ldr	r2, [sp, #12]
 800f92e:	2a00      	cmp	r2, #0
 800f930:	f6ff af41 	blt.w	800f7b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f934:	9a02      	ldr	r2, [sp, #8]
 800f936:	4252      	negs	r2, r2
 800f938:	9202      	str	r2, [sp, #8]
 800f93a:	9a06      	ldr	r2, [sp, #24]
 800f93c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800f940:	f04f 34ff 	mov.w	r4, #4294967295
 800f944:	9206      	str	r2, [sp, #24]
 800f946:	462a      	mov	r2, r5
 800f948:	940b      	str	r4, [sp, #44]	@ 0x2c
 800f94a:	435a      	muls	r2, r3
 800f94c:	2400      	movs	r4, #0
 800f94e:	9d02      	ldr	r5, [sp, #8]
 800f950:	9401      	str	r4, [sp, #4]
 800f952:	9c02      	ldr	r4, [sp, #8]
 800f954:	fb92 f4f4 	sdiv	r4, r2, r4
 800f958:	fb05 2214 	mls	r2, r5, r4, r2
 800f95c:	2a00      	cmp	r2, #0
 800f95e:	9207      	str	r2, [sp, #28]
 800f960:	bfbc      	itt	lt
 800f962:	1952      	addlt	r2, r2, r5
 800f964:	9207      	strlt	r2, [sp, #28]
 800f966:	9a01      	ldr	r2, [sp, #4]
 800f968:	6905      	ldr	r5, [r0, #16]
 800f96a:	bfb8      	it	lt
 800f96c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800f970:	eb04 0901 	add.w	r9, r4, r1
 800f974:	429a      	cmp	r2, r3
 800f976:	ea4f 1669 	mov.w	r6, r9, asr #5
 800f97a:	f040 8112 	bne.w	800fba2 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800f97e:	f9b5 3000 	ldrsh.w	r3, [r5]
 800f982:	429e      	cmp	r6, r3
 800f984:	d104      	bne.n	800f990 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800f986:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800f98a:	9a03      	ldr	r2, [sp, #12]
 800f98c:	429a      	cmp	r2, r3
 800f98e:	d01b      	beq.n	800f9c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f990:	88ea      	ldrh	r2, [r5, #6]
 800f992:	88ab      	ldrh	r3, [r5, #4]
 800f994:	4313      	orrs	r3, r2
 800f996:	d010      	beq.n	800f9ba <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800f998:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f99c:	2a00      	cmp	r2, #0
 800f99e:	db0c      	blt.n	800f9ba <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800f9a0:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800f9a2:	429a      	cmp	r2, r3
 800f9a4:	da09      	bge.n	800f9ba <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800f9a6:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800f9aa:	429a      	cmp	r2, r3
 800f9ac:	bf38      	it	cc
 800f9ae:	3508      	addcc	r5, #8
 800f9b0:	f102 0201 	add.w	r2, r2, #1
 800f9b4:	bf38      	it	cc
 800f9b6:	6105      	strcc	r5, [r0, #16]
 800f9b8:	6082      	str	r2, [r0, #8]
 800f9ba:	6903      	ldr	r3, [r0, #16]
 800f9bc:	9a03      	ldr	r2, [sp, #12]
 800f9be:	805a      	strh	r2, [r3, #2]
 800f9c0:	2200      	movs	r2, #0
 800f9c2:	801e      	strh	r6, [r3, #0]
 800f9c4:	809a      	strh	r2, [r3, #4]
 800f9c6:	80da      	strh	r2, [r3, #6]
 800f9c8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800f9ca:	9a03      	ldr	r2, [sp, #12]
 800f9cc:	6901      	ldr	r1, [r0, #16]
 800f9ce:	441a      	add	r2, r3
 800f9d0:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f9d4:	42b3      	cmp	r3, r6
 800f9d6:	d103      	bne.n	800f9e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800f9d8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800f9dc:	429a      	cmp	r2, r3
 800f9de:	d01a      	beq.n	800fa16 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800f9e0:	88cc      	ldrh	r4, [r1, #6]
 800f9e2:	888b      	ldrh	r3, [r1, #4]
 800f9e4:	4323      	orrs	r3, r4
 800f9e6:	d010      	beq.n	800fa0a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800f9e8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800f9ec:	2c00      	cmp	r4, #0
 800f9ee:	db0c      	blt.n	800fa0a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800f9f0:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800f9f2:	429c      	cmp	r4, r3
 800f9f4:	da09      	bge.n	800fa0a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800f9f6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800f9fa:	429c      	cmp	r4, r3
 800f9fc:	bf38      	it	cc
 800f9fe:	3108      	addcc	r1, #8
 800fa00:	f104 0401 	add.w	r4, r4, #1
 800fa04:	bf38      	it	cc
 800fa06:	6101      	strcc	r1, [r0, #16]
 800fa08:	6084      	str	r4, [r0, #8]
 800fa0a:	6903      	ldr	r3, [r0, #16]
 800fa0c:	2100      	movs	r1, #0
 800fa0e:	801e      	strh	r6, [r3, #0]
 800fa10:	805a      	strh	r2, [r3, #2]
 800fa12:	8099      	strh	r1, [r3, #4]
 800fa14:	80d9      	strh	r1, [r3, #6]
 800fa16:	9b06      	ldr	r3, [sp, #24]
 800fa18:	4293      	cmp	r3, r2
 800fa1a:	f000 8082 	beq.w	800fb22 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800fa1e:	9b08      	ldr	r3, [sp, #32]
 800fa20:	9c02      	ldr	r4, [sp, #8]
 800fa22:	9902      	ldr	r1, [sp, #8]
 800fa24:	015b      	lsls	r3, r3, #5
 800fa26:	fb93 f1f1 	sdiv	r1, r3, r1
 800fa2a:	fb04 3311 	mls	r3, r4, r1, r3
 800fa2e:	2b00      	cmp	r3, #0
 800fa30:	9103      	str	r1, [sp, #12]
 800fa32:	9308      	str	r3, [sp, #32]
 800fa34:	da04      	bge.n	800fa40 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800fa36:	1e4b      	subs	r3, r1, #1
 800fa38:	9303      	str	r3, [sp, #12]
 800fa3a:	9b08      	ldr	r3, [sp, #32]
 800fa3c:	4423      	add	r3, r4
 800fa3e:	9308      	str	r3, [sp, #32]
 800fa40:	9b07      	ldr	r3, [sp, #28]
 800fa42:	9902      	ldr	r1, [sp, #8]
 800fa44:	1a5b      	subs	r3, r3, r1
 800fa46:	9307      	str	r3, [sp, #28]
 800fa48:	9b01      	ldr	r3, [sp, #4]
 800fa4a:	f1c3 0320 	rsb	r3, r3, #32
 800fa4e:	930e      	str	r3, [sp, #56]	@ 0x38
 800fa50:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800fa52:	9b01      	ldr	r3, [sp, #4]
 800fa54:	1a5b      	subs	r3, r3, r1
 800fa56:	464f      	mov	r7, r9
 800fa58:	930a      	str	r3, [sp, #40]	@ 0x28
 800fa5a:	2600      	movs	r6, #0
 800fa5c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800fa60:	185b      	adds	r3, r3, r1
 800fa62:	bf58      	it	pl
 800fa64:	9902      	ldrpl	r1, [sp, #8]
 800fa66:	9307      	str	r3, [sp, #28]
 800fa68:	bf5d      	ittte	pl
 800fa6a:	1a5b      	subpl	r3, r3, r1
 800fa6c:	9307      	strpl	r3, [sp, #28]
 800fa6e:	9b03      	ldrpl	r3, [sp, #12]
 800fa70:	9903      	ldrmi	r1, [sp, #12]
 800fa72:	bf58      	it	pl
 800fa74:	1c59      	addpl	r1, r3, #1
 800fa76:	4489      	add	r9, r1
 800fa78:	2a00      	cmp	r2, #0
 800fa7a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800fa7e:	db2e      	blt.n	800fade <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800fa80:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800fa82:	4293      	cmp	r3, r2
 800fa84:	dd2b      	ble.n	800fade <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800fa86:	9c01      	ldr	r4, [sp, #4]
 800fa88:	6905      	ldr	r5, [r0, #16]
 800fa8a:	46a0      	mov	r8, r4
 800fa8c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 800fa8e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800fa92:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800fa96:	45a0      	cmp	r8, r4
 800fa98:	f040 814f 	bne.w	800fd3a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800fa9c:	f9b5 1000 	ldrsh.w	r1, [r5]
 800faa0:	4551      	cmp	r1, sl
 800faa2:	d103      	bne.n	800faac <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800faa4:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800faa8:	4291      	cmp	r1, r2
 800faaa:	d018      	beq.n	800fade <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800faac:	ea5c 010e 	orrs.w	r1, ip, lr
 800fab0:	d00f      	beq.n	800fad2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800fab2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800fab6:	2900      	cmp	r1, #0
 800fab8:	db0b      	blt.n	800fad2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800faba:	428b      	cmp	r3, r1
 800fabc:	dd09      	ble.n	800fad2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800fabe:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800fac2:	4299      	cmp	r1, r3
 800fac4:	bf38      	it	cc
 800fac6:	3508      	addcc	r5, #8
 800fac8:	f101 0101 	add.w	r1, r1, #1
 800facc:	bf38      	it	cc
 800face:	6105      	strcc	r5, [r0, #16]
 800fad0:	6081      	str	r1, [r0, #8]
 800fad2:	6903      	ldr	r3, [r0, #16]
 800fad4:	f8a3 a000 	strh.w	sl, [r3]
 800fad8:	805a      	strh	r2, [r3, #2]
 800fada:	809e      	strh	r6, [r3, #4]
 800fadc:	80de      	strh	r6, [r3, #6]
 800fade:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800fae0:	6901      	ldr	r1, [r0, #16]
 800fae2:	441a      	add	r2, r3
 800fae4:	88cc      	ldrh	r4, [r1, #6]
 800fae6:	888b      	ldrh	r3, [r1, #4]
 800fae8:	4323      	orrs	r3, r4
 800faea:	d010      	beq.n	800fb0e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800faec:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800faf0:	2c00      	cmp	r4, #0
 800faf2:	db0c      	blt.n	800fb0e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800faf4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800faf6:	429c      	cmp	r4, r3
 800faf8:	da09      	bge.n	800fb0e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800fafa:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800fafe:	429c      	cmp	r4, r3
 800fb00:	bf38      	it	cc
 800fb02:	3108      	addcc	r1, #8
 800fb04:	f104 0401 	add.w	r4, r4, #1
 800fb08:	bf38      	it	cc
 800fb0a:	6101      	strcc	r1, [r0, #16]
 800fb0c:	6084      	str	r4, [r0, #8]
 800fb0e:	6903      	ldr	r3, [r0, #16]
 800fb10:	f8a3 a000 	strh.w	sl, [r3]
 800fb14:	805a      	strh	r2, [r3, #2]
 800fb16:	809e      	strh	r6, [r3, #4]
 800fb18:	80de      	strh	r6, [r3, #6]
 800fb1a:	9b06      	ldr	r3, [sp, #24]
 800fb1c:	4293      	cmp	r3, r2
 800fb1e:	464f      	mov	r7, r9
 800fb20:	d19c      	bne.n	800fa5c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800fb22:	9b01      	ldr	r3, [sp, #4]
 800fb24:	6907      	ldr	r7, [r0, #16]
 800fb26:	f1c3 0620 	rsb	r6, r3, #32
 800fb2a:	9b05      	ldr	r3, [sp, #20]
 800fb2c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800fb30:	9b04      	ldr	r3, [sp, #16]
 800fb32:	429e      	cmp	r6, r3
 800fb34:	f040 81cc 	bne.w	800fed0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800fb38:	f9b7 3000 	ldrsh.w	r3, [r7]
 800fb3c:	459e      	cmp	lr, r3
 800fb3e:	d104      	bne.n	800fb4a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800fb40:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800fb44:	429a      	cmp	r2, r3
 800fb46:	f43f ae36 	beq.w	800f7b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800fb4a:	88f9      	ldrh	r1, [r7, #6]
 800fb4c:	88bb      	ldrh	r3, [r7, #4]
 800fb4e:	430b      	orrs	r3, r1
 800fb50:	d010      	beq.n	800fb74 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800fb52:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800fb56:	2b00      	cmp	r3, #0
 800fb58:	db0c      	blt.n	800fb74 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800fb5a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800fb5c:	428b      	cmp	r3, r1
 800fb5e:	da09      	bge.n	800fb74 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800fb60:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800fb64:	428b      	cmp	r3, r1
 800fb66:	bf38      	it	cc
 800fb68:	3708      	addcc	r7, #8
 800fb6a:	f103 0301 	add.w	r3, r3, #1
 800fb6e:	bf38      	it	cc
 800fb70:	6107      	strcc	r7, [r0, #16]
 800fb72:	6083      	str	r3, [r0, #8]
 800fb74:	6903      	ldr	r3, [r0, #16]
 800fb76:	f8a3 e000 	strh.w	lr, [r3]
 800fb7a:	e5ff      	b.n	800f77c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800fb7c:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800fb7e:	9c03      	ldr	r4, [sp, #12]
 800fb80:	42a2      	cmp	r2, r4
 800fb82:	f6ff ae18 	blt.w	800f7b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800fb86:	9c06      	ldr	r4, [sp, #24]
 800fb88:	42a2      	cmp	r2, r4
 800fb8a:	bfb8      	it	lt
 800fb8c:	3201      	addlt	r2, #1
 800fb8e:	9c08      	ldr	r4, [sp, #32]
 800fb90:	bfb8      	it	lt
 800fb92:	9206      	strlt	r2, [sp, #24]
 800fb94:	f1c3 0220 	rsb	r2, r3, #32
 800fb98:	4362      	muls	r2, r4
 800fb9a:	2401      	movs	r4, #1
 800fb9c:	940b      	str	r4, [sp, #44]	@ 0x2c
 800fb9e:	2420      	movs	r4, #32
 800fba0:	e6d5      	b.n	800f94e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800fba2:	f009 021f 	and.w	r2, r9, #31
 800fba6:	ea4f 1861 	mov.w	r8, r1, asr #5
 800fbaa:	920c      	str	r2, [sp, #48]	@ 0x30
 800fbac:	9a01      	ldr	r2, [sp, #4]
 800fbae:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800fbb2:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800fbb6:	45b0      	cmp	r8, r6
 800fbb8:	f001 011f 	and.w	r1, r1, #31
 800fbbc:	eba2 0203 	sub.w	r2, r2, r3
 800fbc0:	d108      	bne.n	800fbd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800fbc2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800fbc4:	4419      	add	r1, r3
 800fbc6:	4496      	add	lr, r2
 800fbc8:	fb02 a101 	mla	r1, r2, r1, sl
 800fbcc:	f8a5 e004 	strh.w	lr, [r5, #4]
 800fbd0:	80e9      	strh	r1, [r5, #6]
 800fbd2:	e6f9      	b.n	800f9c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800fbd4:	2c00      	cmp	r4, #0
 800fbd6:	f2c0 80a9 	blt.w	800fd2c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800fbda:	2701      	movs	r7, #1
 800fbdc:	f1c1 0c20 	rsb	ip, r1, #32
 800fbe0:	970a      	str	r7, [sp, #40]	@ 0x28
 800fbe2:	fb02 f20c 	mul.w	r2, r2, ip
 800fbe6:	2720      	movs	r7, #32
 800fbe8:	9709      	str	r7, [sp, #36]	@ 0x24
 800fbea:	fb92 fcf4 	sdiv	ip, r2, r4
 800fbee:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 800fbf0:	fb04 221c 	mls	r2, r4, ip, r2
 800fbf4:	2a00      	cmp	r2, #0
 800fbf6:	bfb8      	it	lt
 800fbf8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800fbfc:	4439      	add	r1, r7
 800fbfe:	fb0c a101 	mla	r1, ip, r1, sl
 800fc02:	80e9      	strh	r1, [r5, #6]
 800fc04:	44e6      	add	lr, ip
 800fc06:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800fc08:	f8a5 e004 	strh.w	lr, [r5, #4]
 800fc0c:	eb08 0501 	add.w	r5, r8, r1
 800fc10:	6901      	ldr	r1, [r0, #16]
 800fc12:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800fc16:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800fc1a:	bfb8      	it	lt
 800fc1c:	1912      	addlt	r2, r2, r4
 800fc1e:	ea58 070e 	orrs.w	r7, r8, lr
 800fc22:	d010      	beq.n	800fc46 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800fc24:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800fc28:	f1be 0f00 	cmp.w	lr, #0
 800fc2c:	db0b      	blt.n	800fc46 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800fc2e:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800fc30:	45be      	cmp	lr, r7
 800fc32:	da08      	bge.n	800fc46 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800fc34:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800fc38:	45be      	cmp	lr, r7
 800fc3a:	bf3c      	itt	cc
 800fc3c:	3108      	addcc	r1, #8
 800fc3e:	6101      	strcc	r1, [r0, #16]
 800fc40:	f10e 0101 	add.w	r1, lr, #1
 800fc44:	6081      	str	r1, [r0, #8]
 800fc46:	6901      	ldr	r1, [r0, #16]
 800fc48:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800fc4c:	800d      	strh	r5, [r1, #0]
 800fc4e:	f04f 0e00 	mov.w	lr, #0
 800fc52:	42ae      	cmp	r6, r5
 800fc54:	f8a1 8002 	strh.w	r8, [r1, #2]
 800fc58:	f8a1 e004 	strh.w	lr, [r1, #4]
 800fc5c:	f8a1 e006 	strh.w	lr, [r1, #6]
 800fc60:	4463      	add	r3, ip
 800fc62:	d054      	beq.n	800fd0e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800fc64:	9901      	ldr	r1, [sp, #4]
 800fc66:	1ac9      	subs	r1, r1, r3
 800fc68:	4461      	add	r1, ip
 800fc6a:	0149      	lsls	r1, r1, #5
 800fc6c:	fb91 fef4 	sdiv	lr, r1, r4
 800fc70:	fb04 111e 	mls	r1, r4, lr, r1
 800fc74:	2900      	cmp	r1, #0
 800fc76:	bfb8      	it	lt
 800fc78:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800fc7c:	f10e 0701 	add.w	r7, lr, #1
 800fc80:	bfb8      	it	lt
 800fc82:	1909      	addlt	r1, r1, r4
 800fc84:	1b12      	subs	r2, r2, r4
 800fc86:	970d      	str	r7, [sp, #52]	@ 0x34
 800fc88:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800fc8c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 800fc8e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800fc92:	1852      	adds	r2, r2, r1
 800fc94:	bf54      	ite	pl
 800fc96:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 800fc9a:	46f4      	movmi	ip, lr
 800fc9c:	44e3      	add	fp, ip
 800fc9e:	f8aa b004 	strh.w	fp, [sl, #4]
 800fca2:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800fca6:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800fcaa:	f8aa b006 	strh.w	fp, [sl, #6]
 800fcae:	4463      	add	r3, ip
 800fcb0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800fcb4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800fcb8:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800fcbc:	bf58      	it	pl
 800fcbe:	1b12      	subpl	r2, r2, r4
 800fcc0:	443d      	add	r5, r7
 800fcc2:	ea5b 070a 	orrs.w	r7, fp, sl
 800fcc6:	d014      	beq.n	800fcf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800fcc8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800fccc:	f1ba 0f00 	cmp.w	sl, #0
 800fcd0:	db0f      	blt.n	800fcf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800fcd2:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800fcd4:	45ba      	cmp	sl, r7
 800fcd6:	da0c      	bge.n	800fcf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800fcd8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800fcdc:	45ba      	cmp	sl, r7
 800fcde:	bf38      	it	cc
 800fce0:	f10c 0c08 	addcc.w	ip, ip, #8
 800fce4:	f10a 0a01 	add.w	sl, sl, #1
 800fce8:	bf38      	it	cc
 800fcea:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800fcee:	f8c0 a008 	str.w	sl, [r0, #8]
 800fcf2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800fcf6:	f04f 0700 	mov.w	r7, #0
 800fcfa:	42ae      	cmp	r6, r5
 800fcfc:	f8ac 5000 	strh.w	r5, [ip]
 800fd00:	f8ac 8002 	strh.w	r8, [ip, #2]
 800fd04:	f8ac 7004 	strh.w	r7, [ip, #4]
 800fd08:	f8ac 7006 	strh.w	r7, [ip, #6]
 800fd0c:	d1bc      	bne.n	800fc88 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800fd0e:	6904      	ldr	r4, [r0, #16]
 800fd10:	9a01      	ldr	r2, [sp, #4]
 800fd12:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800fd14:	1ad3      	subs	r3, r2, r3
 800fd16:	88a2      	ldrh	r2, [r4, #4]
 800fd18:	441a      	add	r2, r3
 800fd1a:	80a2      	strh	r2, [r4, #4]
 800fd1c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800fd1e:	3120      	adds	r1, #32
 800fd20:	1a89      	subs	r1, r1, r2
 800fd22:	88e2      	ldrh	r2, [r4, #6]
 800fd24:	fb03 2301 	mla	r3, r3, r1, r2
 800fd28:	80e3      	strh	r3, [r4, #6]
 800fd2a:	e64d      	b.n	800f9c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800fd2c:	f04f 37ff 	mov.w	r7, #4294967295
 800fd30:	970a      	str	r7, [sp, #40]	@ 0x28
 800fd32:	434a      	muls	r2, r1
 800fd34:	4264      	negs	r4, r4
 800fd36:	2700      	movs	r7, #0
 800fd38:	e756      	b.n	800fbe8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800fd3a:	ea4f 1867 	mov.w	r8, r7, asr #5
 800fd3e:	f009 031f 	and.w	r3, r9, #31
 800fd42:	45d0      	cmp	r8, sl
 800fd44:	f007 071f 	and.w	r7, r7, #31
 800fd48:	930f      	str	r3, [sp, #60]	@ 0x3c
 800fd4a:	fa1f fc8c 	uxth.w	ip, ip
 800fd4e:	fa1f fe8e 	uxth.w	lr, lr
 800fd52:	d10a      	bne.n	800fd6a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800fd54:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800fd56:	449c      	add	ip, r3
 800fd58:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800fd5a:	f8a5 c004 	strh.w	ip, [r5, #4]
 800fd5e:	441f      	add	r7, r3
 800fd60:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800fd62:	fb03 e707 	mla	r7, r3, r7, lr
 800fd66:	80ef      	strh	r7, [r5, #6]
 800fd68:	e6b9      	b.n	800fade <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800fd6a:	2900      	cmp	r1, #0
 800fd6c:	f2c0 80a8 	blt.w	800fec0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800fd70:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800fd72:	f1c7 0320 	rsb	r3, r7, #32
 800fd76:	4363      	muls	r3, r4
 800fd78:	2401      	movs	r4, #1
 800fd7a:	940d      	str	r4, [sp, #52]	@ 0x34
 800fd7c:	2420      	movs	r4, #32
 800fd7e:	940c      	str	r4, [sp, #48]	@ 0x30
 800fd80:	fb93 f4f1 	sdiv	r4, r3, r1
 800fd84:	fb01 3b14 	mls	fp, r1, r4, r3
 800fd88:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800fd8a:	f1bb 0f00 	cmp.w	fp, #0
 800fd8e:	bfb8      	it	lt
 800fd90:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800fd94:	441f      	add	r7, r3
 800fd96:	fb04 e707 	mla	r7, r4, r7, lr
 800fd9a:	44a4      	add	ip, r4
 800fd9c:	f8a5 c004 	strh.w	ip, [r5, #4]
 800fda0:	80ef      	strh	r7, [r5, #6]
 800fda2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800fda6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800fda8:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800fdac:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800fdb0:	bfb8      	it	lt
 800fdb2:	448b      	addlt	fp, r1
 800fdb4:	eb08 0503 	add.w	r5, r8, r3
 800fdb8:	ea5e 0307 	orrs.w	r3, lr, r7
 800fdbc:	d011      	beq.n	800fde2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800fdbe:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800fdc2:	f1be 0f00 	cmp.w	lr, #0
 800fdc6:	db0c      	blt.n	800fde2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800fdc8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800fdca:	45be      	cmp	lr, r7
 800fdcc:	da09      	bge.n	800fde2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800fdce:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800fdd2:	45be      	cmp	lr, r7
 800fdd4:	bf3c      	itt	cc
 800fdd6:	f10c 0708 	addcc.w	r7, ip, #8
 800fdda:	6107      	strcc	r7, [r0, #16]
 800fddc:	f10e 0701 	add.w	r7, lr, #1
 800fde0:	6087      	str	r7, [r0, #8]
 800fde2:	6907      	ldr	r7, [r0, #16]
 800fde4:	b213      	sxth	r3, r2
 800fde6:	9310      	str	r3, [sp, #64]	@ 0x40
 800fde8:	807b      	strh	r3, [r7, #2]
 800fdea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800fdec:	803d      	strh	r5, [r7, #0]
 800fdee:	4555      	cmp	r5, sl
 800fdf0:	80be      	strh	r6, [r7, #4]
 800fdf2:	80fe      	strh	r6, [r7, #6]
 800fdf4:	eb04 0c03 	add.w	ip, r4, r3
 800fdf8:	d051      	beq.n	800fe9e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800fdfa:	9b01      	ldr	r3, [sp, #4]
 800fdfc:	eba3 070c 	sub.w	r7, r3, ip
 800fe00:	443c      	add	r4, r7
 800fe02:	0164      	lsls	r4, r4, #5
 800fe04:	fb94 f8f1 	sdiv	r8, r4, r1
 800fe08:	fb01 4418 	mls	r4, r1, r8, r4
 800fe0c:	2c00      	cmp	r4, #0
 800fe0e:	bfb8      	it	lt
 800fe10:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800fe14:	ebab 0301 	sub.w	r3, fp, r1
 800fe18:	f108 0701 	add.w	r7, r8, #1
 800fe1c:	bfb8      	it	lt
 800fe1e:	1864      	addlt	r4, r4, r1
 800fe20:	9309      	str	r3, [sp, #36]	@ 0x24
 800fe22:	9711      	str	r7, [sp, #68]	@ 0x44
 800fe24:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800fe26:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800fe2a:	191b      	adds	r3, r3, r4
 800fe2c:	bf58      	it	pl
 800fe2e:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 800fe30:	f8be b004 	ldrh.w	fp, [lr, #4]
 800fe34:	9309      	str	r3, [sp, #36]	@ 0x24
 800fe36:	bf48      	it	mi
 800fe38:	4647      	movmi	r7, r8
 800fe3a:	44bb      	add	fp, r7
 800fe3c:	f8ae b004 	strh.w	fp, [lr, #4]
 800fe40:	f8be b006 	ldrh.w	fp, [lr, #6]
 800fe44:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800fe48:	f8ae b006 	strh.w	fp, [lr, #6]
 800fe4c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800fe50:	44bc      	add	ip, r7
 800fe52:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 800fe54:	f8be b006 	ldrh.w	fp, [lr, #6]
 800fe58:	443d      	add	r5, r7
 800fe5a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800fe5e:	bf5c      	itt	pl
 800fe60:	1a5b      	subpl	r3, r3, r1
 800fe62:	9309      	strpl	r3, [sp, #36]	@ 0x24
 800fe64:	ea5b 0307 	orrs.w	r3, fp, r7
 800fe68:	d011      	beq.n	800fe8e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800fe6a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800fe6e:	f1bb 0f00 	cmp.w	fp, #0
 800fe72:	db0c      	blt.n	800fe8e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800fe74:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800fe76:	45bb      	cmp	fp, r7
 800fe78:	da09      	bge.n	800fe8e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800fe7a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800fe7e:	45bb      	cmp	fp, r7
 800fe80:	bf3c      	itt	cc
 800fe82:	f10e 0708 	addcc.w	r7, lr, #8
 800fe86:	6107      	strcc	r7, [r0, #16]
 800fe88:	f10b 0701 	add.w	r7, fp, #1
 800fe8c:	6087      	str	r7, [r0, #8]
 800fe8e:	6907      	ldr	r7, [r0, #16]
 800fe90:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800fe92:	803d      	strh	r5, [r7, #0]
 800fe94:	4555      	cmp	r5, sl
 800fe96:	807b      	strh	r3, [r7, #2]
 800fe98:	80be      	strh	r6, [r7, #4]
 800fe9a:	80fe      	strh	r6, [r7, #6]
 800fe9c:	d1c2      	bne.n	800fe24 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800fe9e:	9b01      	ldr	r3, [sp, #4]
 800fea0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 800fea2:	eba3 0c0c 	sub.w	ip, r3, ip
 800fea6:	6903      	ldr	r3, [r0, #16]
 800fea8:	8899      	ldrh	r1, [r3, #4]
 800feaa:	4461      	add	r1, ip
 800feac:	8099      	strh	r1, [r3, #4]
 800feae:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800feb0:	3720      	adds	r7, #32
 800feb2:	1a7f      	subs	r7, r7, r1
 800feb4:	88d9      	ldrh	r1, [r3, #6]
 800feb6:	fb0c 1c07 	mla	ip, ip, r7, r1
 800feba:	f8a3 c006 	strh.w	ip, [r3, #6]
 800febe:	e60e      	b.n	800fade <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800fec0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800fec2:	f04f 34ff 	mov.w	r4, #4294967295
 800fec6:	940d      	str	r4, [sp, #52]	@ 0x34
 800fec8:	437b      	muls	r3, r7
 800feca:	4249      	negs	r1, r1
 800fecc:	2400      	movs	r4, #0
 800fece:	e756      	b.n	800fd7e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800fed0:	9905      	ldr	r1, [sp, #20]
 800fed2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800fed6:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800feda:	f001 011f 	and.w	r1, r1, #31
 800fede:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800fee2:	9102      	str	r1, [sp, #8]
 800fee4:	9904      	ldr	r1, [sp, #16]
 800fee6:	45f3      	cmp	fp, lr
 800fee8:	f009 0c1f 	and.w	ip, r9, #31
 800feec:	eba1 0406 	sub.w	r4, r1, r6
 800fef0:	d108      	bne.n	800ff04 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800fef2:	9b02      	ldr	r3, [sp, #8]
 800fef4:	449c      	add	ip, r3
 800fef6:	44a0      	add	r8, r4
 800fef8:	fb04 a40c 	mla	r4, r4, ip, sl
 800fefc:	f8a7 8004 	strh.w	r8, [r7, #4]
 800ff00:	80fc      	strh	r4, [r7, #6]
 800ff02:	e458      	b.n	800f7b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ff04:	9905      	ldr	r1, [sp, #20]
 800ff06:	ebb1 0109 	subs.w	r1, r1, r9
 800ff0a:	bf5b      	ittet	pl
 800ff0c:	f1cc 0520 	rsbpl	r5, ip, #32
 800ff10:	436c      	mulpl	r4, r5
 800ff12:	2500      	movmi	r5, #0
 800ff14:	2520      	movpl	r5, #32
 800ff16:	bf44      	itt	mi
 800ff18:	fb04 f40c 	mulmi.w	r4, r4, ip
 800ff1c:	4249      	negmi	r1, r1
 800ff1e:	9501      	str	r5, [sp, #4]
 800ff20:	9b01      	ldr	r3, [sp, #4]
 800ff22:	fb94 f5f1 	sdiv	r5, r4, r1
 800ff26:	fb01 4415 	mls	r4, r1, r5, r4
 800ff2a:	bf54      	ite	pl
 800ff2c:	f04f 0901 	movpl.w	r9, #1
 800ff30:	f04f 39ff 	movmi.w	r9, #4294967295
 800ff34:	2c00      	cmp	r4, #0
 800ff36:	bfb8      	it	lt
 800ff38:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800ff3c:	449c      	add	ip, r3
 800ff3e:	44a8      	add	r8, r5
 800ff40:	fb05 ac0c 	mla	ip, r5, ip, sl
 800ff44:	f8a7 8004 	strh.w	r8, [r7, #4]
 800ff48:	f8a7 c006 	strh.w	ip, [r7, #6]
 800ff4c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ff50:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800ff54:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800ff58:	bfb8      	it	lt
 800ff5a:	1864      	addlt	r4, r4, r1
 800ff5c:	ea58 0707 	orrs.w	r7, r8, r7
 800ff60:	eb0b 0309 	add.w	r3, fp, r9
 800ff64:	d011      	beq.n	800ff8a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800ff66:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800ff6a:	f1b8 0f00 	cmp.w	r8, #0
 800ff6e:	db0c      	blt.n	800ff8a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800ff70:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800ff72:	45b8      	cmp	r8, r7
 800ff74:	da09      	bge.n	800ff8a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800ff76:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800ff7a:	45b8      	cmp	r8, r7
 800ff7c:	bf3c      	itt	cc
 800ff7e:	f10c 0708 	addcc.w	r7, ip, #8
 800ff82:	6107      	strcc	r7, [r0, #16]
 800ff84:	f108 0701 	add.w	r7, r8, #1
 800ff88:	6087      	str	r7, [r0, #8]
 800ff8a:	6907      	ldr	r7, [r0, #16]
 800ff8c:	f04f 0c00 	mov.w	ip, #0
 800ff90:	b212      	sxth	r2, r2
 800ff92:	459e      	cmp	lr, r3
 800ff94:	803b      	strh	r3, [r7, #0]
 800ff96:	807a      	strh	r2, [r7, #2]
 800ff98:	f8a7 c004 	strh.w	ip, [r7, #4]
 800ff9c:	f8a7 c006 	strh.w	ip, [r7, #6]
 800ffa0:	442e      	add	r6, r5
 800ffa2:	d04d      	beq.n	8010040 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800ffa4:	9f04      	ldr	r7, [sp, #16]
 800ffa6:	1bbf      	subs	r7, r7, r6
 800ffa8:	443d      	add	r5, r7
 800ffaa:	016d      	lsls	r5, r5, #5
 800ffac:	fb95 f8f1 	sdiv	r8, r5, r1
 800ffb0:	fb01 5518 	mls	r5, r1, r8, r5
 800ffb4:	4565      	cmp	r5, ip
 800ffb6:	bfb8      	it	lt
 800ffb8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800ffbc:	f108 0701 	add.w	r7, r8, #1
 800ffc0:	bfb8      	it	lt
 800ffc2:	186d      	addlt	r5, r5, r1
 800ffc4:	1a64      	subs	r4, r4, r1
 800ffc6:	9703      	str	r7, [sp, #12]
 800ffc8:	f04f 0a00 	mov.w	sl, #0
 800ffcc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ffd0:	1964      	adds	r4, r4, r5
 800ffd2:	bf58      	it	pl
 800ffd4:	9f03      	ldrpl	r7, [sp, #12]
 800ffd6:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800ffda:	bf48      	it	mi
 800ffdc:	4647      	movmi	r7, r8
 800ffde:	44bb      	add	fp, r7
 800ffe0:	f8ac b004 	strh.w	fp, [ip, #4]
 800ffe4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ffe8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800ffec:	f8ac b006 	strh.w	fp, [ip, #6]
 800fff0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800fff4:	443e      	add	r6, r7
 800fff6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800fffa:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800fffe:	bf58      	it	pl
 8010000:	1a64      	subpl	r4, r4, r1
 8010002:	ea5b 0707 	orrs.w	r7, fp, r7
 8010006:	444b      	add	r3, r9
 8010008:	d011      	beq.n	801002e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801000a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 801000e:	f1bb 0f00 	cmp.w	fp, #0
 8010012:	db0c      	blt.n	801002e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8010014:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8010016:	45bb      	cmp	fp, r7
 8010018:	da09      	bge.n	801002e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801001a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801001e:	45bb      	cmp	fp, r7
 8010020:	bf3c      	itt	cc
 8010022:	f10c 0708 	addcc.w	r7, ip, #8
 8010026:	6107      	strcc	r7, [r0, #16]
 8010028:	f10b 0701 	add.w	r7, fp, #1
 801002c:	6087      	str	r7, [r0, #8]
 801002e:	6907      	ldr	r7, [r0, #16]
 8010030:	459e      	cmp	lr, r3
 8010032:	803b      	strh	r3, [r7, #0]
 8010034:	807a      	strh	r2, [r7, #2]
 8010036:	f8a7 a004 	strh.w	sl, [r7, #4]
 801003a:	f8a7 a006 	strh.w	sl, [r7, #6]
 801003e:	d1c5      	bne.n	800ffcc <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8010040:	9b04      	ldr	r3, [sp, #16]
 8010042:	1b9e      	subs	r6, r3, r6
 8010044:	6903      	ldr	r3, [r0, #16]
 8010046:	889a      	ldrh	r2, [r3, #4]
 8010048:	4432      	add	r2, r6
 801004a:	809a      	strh	r2, [r3, #4]
 801004c:	9a02      	ldr	r2, [sp, #8]
 801004e:	f102 0c20 	add.w	ip, r2, #32
 8010052:	9a01      	ldr	r2, [sp, #4]
 8010054:	ebac 0c02 	sub.w	ip, ip, r2
 8010058:	88da      	ldrh	r2, [r3, #6]
 801005a:	fb06 260c 	mla	r6, r6, ip, r2
 801005e:	80de      	strh	r6, [r3, #6]
 8010060:	f7ff bba9 	b.w	800f7b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08010064 <_ZN8touchgfx7Outline6lineToEii>:
 8010064:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8010066:	079b      	lsls	r3, r3, #30
 8010068:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801006a:	460e      	mov	r6, r1
 801006c:	4615      	mov	r5, r2
 801006e:	d511      	bpl.n	8010094 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8010070:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8010074:	ea86 0701 	eor.w	r7, r6, r1
 8010078:	ea85 0302 	eor.w	r3, r5, r2
 801007c:	433b      	orrs	r3, r7
 801007e:	d009      	beq.n	8010094 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8010080:	4633      	mov	r3, r6
 8010082:	9500      	str	r5, [sp, #0]
 8010084:	f7ff fb3e 	bl	800f704 <_ZN8touchgfx7Outline10renderLineEiiii>
 8010088:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 801008a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 801008e:	f043 0301 	orr.w	r3, r3, #1
 8010092:	6243      	str	r3, [r0, #36]	@ 0x24
 8010094:	b003      	add	sp, #12
 8010096:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010098 <_ZN8touchgfx7Outline6moveToEii>:
 8010098:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801009a:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 801009c:	4615      	mov	r5, r2
 801009e:	079a      	lsls	r2, r3, #30
 80100a0:	4604      	mov	r4, r0
 80100a2:	460e      	mov	r6, r1
 80100a4:	d401      	bmi.n	80100aa <_ZN8touchgfx7Outline6moveToEii+0x12>
 80100a6:	f7ff faf9 	bl	800f69c <_ZN8touchgfx7Outline5resetEv>
 80100aa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80100ac:	07db      	lsls	r3, r3, #31
 80100ae:	d504      	bpl.n	80100ba <_ZN8touchgfx7Outline6moveToEii+0x22>
 80100b0:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 80100b4:	4620      	mov	r0, r4
 80100b6:	f7ff ffd5 	bl	8010064 <_ZN8touchgfx7Outline6lineToEii>
 80100ba:	6923      	ldr	r3, [r4, #16]
 80100bc:	f9b3 2000 	ldrsh.w	r2, [r3]
 80100c0:	1170      	asrs	r0, r6, #5
 80100c2:	4290      	cmp	r0, r2
 80100c4:	ea4f 1165 	mov.w	r1, r5, asr #5
 80100c8:	d103      	bne.n	80100d2 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 80100ca:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80100ce:	4291      	cmp	r1, r2
 80100d0:	d01a      	beq.n	8010108 <_ZN8touchgfx7Outline6moveToEii+0x70>
 80100d2:	88df      	ldrh	r7, [r3, #6]
 80100d4:	889a      	ldrh	r2, [r3, #4]
 80100d6:	433a      	orrs	r2, r7
 80100d8:	d010      	beq.n	80100fc <_ZN8touchgfx7Outline6moveToEii+0x64>
 80100da:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80100de:	2a00      	cmp	r2, #0
 80100e0:	db0c      	blt.n	80100fc <_ZN8touchgfx7Outline6moveToEii+0x64>
 80100e2:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 80100e4:	42ba      	cmp	r2, r7
 80100e6:	da09      	bge.n	80100fc <_ZN8touchgfx7Outline6moveToEii+0x64>
 80100e8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 80100ec:	42ba      	cmp	r2, r7
 80100ee:	bf38      	it	cc
 80100f0:	3308      	addcc	r3, #8
 80100f2:	f102 0201 	add.w	r2, r2, #1
 80100f6:	bf38      	it	cc
 80100f8:	6123      	strcc	r3, [r4, #16]
 80100fa:	60a2      	str	r2, [r4, #8]
 80100fc:	6923      	ldr	r3, [r4, #16]
 80100fe:	2200      	movs	r2, #0
 8010100:	8018      	strh	r0, [r3, #0]
 8010102:	8059      	strh	r1, [r3, #2]
 8010104:	809a      	strh	r2, [r3, #4]
 8010106:	80da      	strh	r2, [r3, #6]
 8010108:	6166      	str	r6, [r4, #20]
 801010a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 801010e:	6225      	str	r5, [r4, #32]
 8010110:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08010112 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8010112:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010116:	b0d0      	sub	sp, #320	@ 0x140
 8010118:	466c      	mov	r4, sp
 801011a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801011e:	4627      	mov	r7, r4
 8010120:	1a0d      	subs	r5, r1, r0
 8010122:	2d48      	cmp	r5, #72	@ 0x48
 8010124:	f100 0308 	add.w	r3, r0, #8
 8010128:	f340 80d5 	ble.w	80102d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801012c:	112d      	asrs	r5, r5, #4
 801012e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8010132:	f9b0 9000 	ldrsh.w	r9, [r0]
 8010136:	6816      	ldr	r6, [r2, #0]
 8010138:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 801013c:	6006      	str	r6, [r0, #0]
 801013e:	6856      	ldr	r6, [r2, #4]
 8010140:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8010144:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8010148:	6046      	str	r6, [r0, #4]
 801014a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801014e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8010152:	f8a2 e004 	strh.w	lr, [r2, #4]
 8010156:	f8a2 c006 	strh.w	ip, [r2, #6]
 801015a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 801015e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8010162:	4565      	cmp	r5, ip
 8010164:	f1a1 0208 	sub.w	r2, r1, #8
 8010168:	db06      	blt.n	8010178 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 801016a:	d119      	bne.n	80101a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 801016c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8010170:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8010174:	42ae      	cmp	r6, r5
 8010176:	dd13      	ble.n	80101a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8010178:	460e      	mov	r6, r1
 801017a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 801017e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8010182:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8010186:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801018a:	601d      	str	r5, [r3, #0]
 801018c:	6875      	ldr	r5, [r6, #4]
 801018e:	605d      	str	r5, [r3, #4]
 8010190:	f821 9c08 	strh.w	r9, [r1, #-8]
 8010194:	f821 cc06 	strh.w	ip, [r1, #-6]
 8010198:	f821 8c04 	strh.w	r8, [r1, #-4]
 801019c:	f821 ec02 	strh.w	lr, [r1, #-2]
 80101a0:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80101a4:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 80101a8:	42ae      	cmp	r6, r5
 80101aa:	db06      	blt.n	80101ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 80101ac:	d116      	bne.n	80101dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80101ae:	f9b0 c000 	ldrsh.w	ip, [r0]
 80101b2:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 80101b6:	45ac      	cmp	ip, r5
 80101b8:	da10      	bge.n	80101dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80101ba:	681d      	ldr	r5, [r3, #0]
 80101bc:	f9b0 8000 	ldrsh.w	r8, [r0]
 80101c0:	6005      	str	r5, [r0, #0]
 80101c2:	685d      	ldr	r5, [r3, #4]
 80101c4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80101c8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80101cc:	f8a0 8008 	strh.w	r8, [r0, #8]
 80101d0:	6045      	str	r5, [r0, #4]
 80101d2:	8146      	strh	r6, [r0, #10]
 80101d4:	f8a0 e00c 	strh.w	lr, [r0, #12]
 80101d8:	f8a0 c00e 	strh.w	ip, [r0, #14]
 80101dc:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80101e0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80101e4:	4565      	cmp	r5, ip
 80101e6:	db06      	blt.n	80101f6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 80101e8:	d119      	bne.n	801021e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80101ea:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 80101ee:	f9b0 5000 	ldrsh.w	r5, [r0]
 80101f2:	42ae      	cmp	r6, r5
 80101f4:	da13      	bge.n	801021e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80101f6:	460e      	mov	r6, r1
 80101f8:	f9b0 9000 	ldrsh.w	r9, [r0]
 80101fc:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8010200:	6005      	str	r5, [r0, #0]
 8010202:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8010206:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 801020a:	6875      	ldr	r5, [r6, #4]
 801020c:	6045      	str	r5, [r0, #4]
 801020e:	f821 9c08 	strh.w	r9, [r1, #-8]
 8010212:	f821 cc06 	strh.w	ip, [r1, #-6]
 8010216:	f821 8c04 	strh.w	r8, [r1, #-4]
 801021a:	f821 ec02 	strh.w	lr, [r1, #-2]
 801021e:	3308      	adds	r3, #8
 8010220:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8010224:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8010228:	45e6      	cmp	lr, ip
 801022a:	dbf8      	blt.n	801021e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801022c:	d105      	bne.n	801023a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801022e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8010232:	f9b0 5000 	ldrsh.w	r5, [r0]
 8010236:	42ae      	cmp	r6, r5
 8010238:	dbf1      	blt.n	801021e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801023a:	4615      	mov	r5, r2
 801023c:	3a08      	subs	r2, #8
 801023e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8010242:	45b4      	cmp	ip, r6
 8010244:	dbf9      	blt.n	801023a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8010246:	d105      	bne.n	8010254 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8010248:	f9b0 8000 	ldrsh.w	r8, [r0]
 801024c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8010250:	45b0      	cmp	r8, r6
 8010252:	dbf2      	blt.n	801023a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8010254:	4293      	cmp	r3, r2
 8010256:	f1a5 0608 	sub.w	r6, r5, #8
 801025a:	d816      	bhi.n	801028a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 801025c:	f8d6 c000 	ldr.w	ip, [r6]
 8010260:	f9b3 a000 	ldrsh.w	sl, [r3]
 8010264:	f8c3 c000 	str.w	ip, [r3]
 8010268:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 801026c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8010270:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8010274:	f8c3 c004 	str.w	ip, [r3, #4]
 8010278:	f825 ac08 	strh.w	sl, [r5, #-8]
 801027c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8010280:	f825 9c04 	strh.w	r9, [r5, #-4]
 8010284:	f825 8c02 	strh.w	r8, [r5, #-2]
 8010288:	e7c9      	b.n	801021e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801028a:	f8d6 e000 	ldr.w	lr, [r6]
 801028e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8010292:	f8c0 e000 	str.w	lr, [r0]
 8010296:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801029a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 801029e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 80102a2:	f8c0 e004 	str.w	lr, [r0, #4]
 80102a6:	f825 ac08 	strh.w	sl, [r5, #-8]
 80102aa:	f825 cc06 	strh.w	ip, [r5, #-6]
 80102ae:	f825 9c04 	strh.w	r9, [r5, #-4]
 80102b2:	f825 8c02 	strh.w	r8, [r5, #-2]
 80102b6:	1acd      	subs	r5, r1, r3
 80102b8:	1a16      	subs	r6, r2, r0
 80102ba:	10ed      	asrs	r5, r5, #3
 80102bc:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 80102c0:	bfb5      	itete	lt
 80102c2:	e9c4 0200 	strdlt	r0, r2, [r4]
 80102c6:	e9c4 3100 	strdge	r3, r1, [r4]
 80102ca:	460a      	movlt	r2, r1
 80102cc:	4603      	movge	r3, r0
 80102ce:	3408      	adds	r4, #8
 80102d0:	4618      	mov	r0, r3
 80102d2:	4611      	mov	r1, r2
 80102d4:	e724      	b.n	8010120 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80102d6:	4299      	cmp	r1, r3
 80102d8:	d928      	bls.n	801032c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 80102da:	f1a3 0210 	sub.w	r2, r3, #16
 80102de:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 80102e2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 80102e6:	45ac      	cmp	ip, r5
 80102e8:	db06      	blt.n	80102f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80102ea:	d11d      	bne.n	8010328 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80102ec:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80102f0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 80102f4:	42ae      	cmp	r6, r5
 80102f6:	da17      	bge.n	8010328 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80102f8:	4615      	mov	r5, r2
 80102fa:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 80102fe:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8010302:	6116      	str	r6, [r2, #16]
 8010304:	686e      	ldr	r6, [r5, #4]
 8010306:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 801030a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 801030e:	f8a2 9008 	strh.w	r9, [r2, #8]
 8010312:	42a8      	cmp	r0, r5
 8010314:	6156      	str	r6, [r2, #20]
 8010316:	f8a2 c00a 	strh.w	ip, [r2, #10]
 801031a:	f8a2 800c 	strh.w	r8, [r2, #12]
 801031e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8010322:	f1a2 0208 	sub.w	r2, r2, #8
 8010326:	d1da      	bne.n	80102de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8010328:	3308      	adds	r3, #8
 801032a:	e7d4      	b.n	80102d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801032c:	42bc      	cmp	r4, r7
 801032e:	d903      	bls.n	8010338 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8010330:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8010334:	3c08      	subs	r4, #8
 8010336:	e6f3      	b.n	8010120 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8010338:	b050      	add	sp, #320	@ 0x140
 801033a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801033e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 801033e:	b510      	push	{r4, lr}
 8010340:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8010342:	07da      	lsls	r2, r3, #31
 8010344:	4604      	mov	r4, r0
 8010346:	d507      	bpl.n	8010358 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8010348:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801034c:	f7ff fe8a 	bl	8010064 <_ZN8touchgfx7Outline6lineToEii>
 8010350:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8010352:	f023 0301 	bic.w	r3, r3, #1
 8010356:	6243      	str	r3, [r0, #36]	@ 0x24
 8010358:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 801035a:	079b      	lsls	r3, r3, #30
 801035c:	d521      	bpl.n	80103a2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801035e:	6923      	ldr	r3, [r4, #16]
 8010360:	88d9      	ldrh	r1, [r3, #6]
 8010362:	889a      	ldrh	r2, [r3, #4]
 8010364:	430a      	orrs	r2, r1
 8010366:	d010      	beq.n	801038a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8010368:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801036c:	2a00      	cmp	r2, #0
 801036e:	db0c      	blt.n	801038a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8010370:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8010372:	428a      	cmp	r2, r1
 8010374:	da09      	bge.n	801038a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8010376:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801037a:	4291      	cmp	r1, r2
 801037c:	bf88      	it	hi
 801037e:	3308      	addhi	r3, #8
 8010380:	f102 0201 	add.w	r2, r2, #1
 8010384:	bf88      	it	hi
 8010386:	6123      	strhi	r3, [r4, #16]
 8010388:	60a2      	str	r2, [r4, #8]
 801038a:	68a1      	ldr	r1, [r4, #8]
 801038c:	b129      	cbz	r1, 801039a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801038e:	6863      	ldr	r3, [r4, #4]
 8010390:	4299      	cmp	r1, r3
 8010392:	d802      	bhi.n	801039a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8010394:	68e0      	ldr	r0, [r4, #12]
 8010396:	f7ff febc 	bl	8010112 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801039a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 801039c:	f023 0302 	bic.w	r3, r3, #2
 80103a0:	6263      	str	r3, [r4, #36]	@ 0x24
 80103a2:	68e0      	ldr	r0, [r4, #12]
 80103a4:	bd10      	pop	{r4, pc}
	...

080103a8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 80103a8:	4b01      	ldr	r3, [pc, #4]	@ (80103b0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 80103aa:	6818      	ldr	r0, [r3, #0]
 80103ac:	4770      	bx	lr
 80103ae:	bf00      	nop
 80103b0:	200152f4 	.word	0x200152f4

080103b4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 80103b4:	4b01      	ldr	r3, [pc, #4]	@ (80103bc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 80103b6:	6818      	ldr	r0, [r3, #0]
 80103b8:	4770      	bx	lr
 80103ba:	bf00      	nop
 80103bc:	200152f8 	.word	0x200152f8

080103c0 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80103c0:	b510      	push	{r4, lr}
 80103c2:	6803      	ldr	r3, [r0, #0]
 80103c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80103c6:	460c      	mov	r4, r1
 80103c8:	4798      	blx	r3
 80103ca:	1b03      	subs	r3, r0, r4
 80103cc:	4258      	negs	r0, r3
 80103ce:	4158      	adcs	r0, r3
 80103d0:	bd10      	pop	{r4, pc}
	...

080103d4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80103d4:	4b01      	ldr	r3, [pc, #4]	@ (80103dc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80103d6:	6019      	str	r1, [r3, #0]
 80103d8:	4770      	bx	lr
 80103da:	bf00      	nop
 80103dc:	200152fc 	.word	0x200152fc

080103e0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80103e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80103e4:	4696      	mov	lr, r2
 80103e6:	4605      	mov	r5, r0
 80103e8:	4614      	mov	r4, r2
 80103ea:	460e      	mov	r6, r1
 80103ec:	461f      	mov	r7, r3
 80103ee:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80103f2:	b097      	sub	sp, #92	@ 0x5c
 80103f4:	f10d 0c1c 	add.w	ip, sp, #28
 80103f8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80103fc:	f8de 3000 	ldr.w	r3, [lr]
 8010400:	f8cc 3000 	str.w	r3, [ip]
 8010404:	f104 0e14 	add.w	lr, r4, #20
 8010408:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801040c:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8010410:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010414:	f8de 3000 	ldr.w	r3, [lr]
 8010418:	f8cc 3000 	str.w	r3, [ip]
 801041c:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 8010420:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8010424:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 8010428:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801042c:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 8010430:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 8010434:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 8010438:	f8de 3000 	ldr.w	r3, [lr]
 801043c:	f8cc 3000 	str.w	r3, [ip]
 8010440:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8010442:	682b      	ldr	r3, [r5, #0]
 8010444:	9201      	str	r2, [sp, #4]
 8010446:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801044a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801044c:	9200      	str	r2, [sp, #0]
 801044e:	f8cd 8008 	str.w	r8, [sp, #8]
 8010452:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 8010456:	aa07      	add	r2, sp, #28
 8010458:	463b      	mov	r3, r7
 801045a:	4631      	mov	r1, r6
 801045c:	4628      	mov	r0, r5
 801045e:	47d8      	blx	fp
 8010460:	46a6      	mov	lr, r4
 8010462:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8010466:	f10d 0c1c 	add.w	ip, sp, #28
 801046a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801046e:	f8de 3000 	ldr.w	r3, [lr]
 8010472:	f8cc 3000 	str.w	r3, [ip]
 8010476:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 801047a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801047e:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8010482:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010486:	343c      	adds	r4, #60	@ 0x3c
 8010488:	f8de 3000 	ldr.w	r3, [lr]
 801048c:	f8cc 3000 	str.w	r3, [ip]
 8010490:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8010492:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 8010496:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801049a:	6823      	ldr	r3, [r4, #0]
 801049c:	f8cc 3000 	str.w	r3, [ip]
 80104a0:	682b      	ldr	r3, [r5, #0]
 80104a2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80104a6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80104a8:	9201      	str	r2, [sp, #4]
 80104aa:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80104ac:	9200      	str	r2, [sp, #0]
 80104ae:	f8cd 8008 	str.w	r8, [sp, #8]
 80104b2:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 80104b4:	aa07      	add	r2, sp, #28
 80104b6:	463b      	mov	r3, r7
 80104b8:	4631      	mov	r1, r6
 80104ba:	4628      	mov	r0, r5
 80104bc:	47a0      	blx	r4
 80104be:	b017      	add	sp, #92	@ 0x5c
 80104c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080104c4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80104c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80104c8:	b08d      	sub	sp, #52	@ 0x34
 80104ca:	4688      	mov	r8, r1
 80104cc:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80104ce:	f8d3 c000 	ldr.w	ip, [r3]
 80104d2:	680f      	ldr	r7, [r1, #0]
 80104d4:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 80104d8:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 80104dc:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 80104e0:	edd3 6a07 	vldr	s13, [r3, #28]
 80104e4:	9918      	ldr	r1, [sp, #96]	@ 0x60
 80104e6:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 80104ea:	f9b1 9000 	ldrsh.w	r9, [r1]
 80104ee:	f9ba 1000 	ldrsh.w	r1, [sl]
 80104f2:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 80104f6:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 80104fa:	eba7 070c 	sub.w	r7, r7, ip
 80104fe:	42bc      	cmp	r4, r7
 8010500:	bfa8      	it	ge
 8010502:	463c      	movge	r4, r7
 8010504:	ee07 4a90 	vmov	s15, r4
 8010508:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 801050c:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 8010510:	ee25 4a04 	vmul.f32	s8, s10, s8
 8010514:	ee65 4a24 	vmul.f32	s9, s10, s9
 8010518:	ee25 5a27 	vmul.f32	s10, s10, s15
 801051c:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8010520:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8010524:	eb09 0e0c 	add.w	lr, r9, ip
 8010528:	4571      	cmp	r1, lr
 801052a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 801052e:	ee32 1a05 	vadd.f32	s2, s4, s10
 8010532:	ee36 0a84 	vadd.f32	s0, s13, s8
 8010536:	ee61 1a87 	vmul.f32	s3, s3, s14
 801053a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801053e:	f340 808d 	ble.w	801065c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8010542:	eba1 060e 	sub.w	r6, r1, lr
 8010546:	fb96 f5f4 	sdiv	r5, r6, r4
 801054a:	ee07 5a10 	vmov	s14, r5
 801054e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010552:	2d00      	cmp	r5, #0
 8010554:	fb04 6615 	mls	r6, r4, r5, r6
 8010558:	eea7 0a04 	vfma.f32	s0, s14, s8
 801055c:	eee7 0a24 	vfma.f32	s1, s14, s9
 8010560:	eea7 1a05 	vfma.f32	s2, s14, s10
 8010564:	dd13      	ble.n	801058e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8010566:	ee70 6a44 	vsub.f32	s13, s0, s8
 801056a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 801056e:	eef5 6a40 	vcmp.f32	s13, #0.0
 8010572:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010576:	bf18      	it	ne
 8010578:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 801057c:	ee31 2a45 	vsub.f32	s4, s2, s10
 8010580:	bf08      	it	eq
 8010582:	eeb0 7a67 	vmoveq.f32	s14, s15
 8010586:	ee61 1a87 	vmul.f32	s3, s3, s14
 801058a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801058e:	fb05 f204 	mul.w	r2, r5, r4
 8010592:	1abf      	subs	r7, r7, r2
 8010594:	4494      	add	ip, r2
 8010596:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 801059a:	4411      	add	r1, r2
 801059c:	eb09 020c 	add.w	r2, r9, ip
 80105a0:	443a      	add	r2, r7
 80105a2:	b209      	sxth	r1, r1
 80105a4:	428a      	cmp	r2, r1
 80105a6:	bfc4      	itt	gt
 80105a8:	eba1 0209 	subgt.w	r2, r1, r9
 80105ac:	eba2 070c 	subgt.w	r7, r2, ip
 80105b0:	2f00      	cmp	r7, #0
 80105b2:	dd50      	ble.n	8010656 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80105b4:	fb97 f1f4 	sdiv	r1, r7, r4
 80105b8:	fb04 7211 	mls	r2, r4, r1, r7
 80105bc:	b90a      	cbnz	r2, 80105c2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80105be:	3901      	subs	r1, #1
 80105c0:	4622      	mov	r2, r4
 80105c2:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80105c6:	6840      	ldr	r0, [r0, #4]
 80105c8:	900b      	str	r0, [sp, #44]	@ 0x2c
 80105ca:	f8d0 a000 	ldr.w	sl, [r0]
 80105ce:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 80105d0:	9008      	str	r0, [sp, #32]
 80105d2:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 80105d6:	9818      	ldr	r0, [sp, #96]	@ 0x60
 80105d8:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 80105dc:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80105e0:	695b      	ldr	r3, [r3, #20]
 80105e2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80105e4:	445b      	add	r3, fp
 80105e6:	eef0 6a42 	vmov.f32	s13, s4
 80105ea:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80105ee:	ee21 3a23 	vmul.f32	s6, s2, s7
 80105f2:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80105f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80105fa:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80105fe:	9307      	str	r3, [sp, #28]
 8010600:	ee17 7a90 	vmov	r7, s15
 8010604:	ee73 7a42 	vsub.f32	s15, s6, s4
 8010608:	eeb0 7a61 	vmov.f32	s14, s3
 801060c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8010610:	ee16 3a90 	vmov	r3, s13
 8010614:	fb97 f7f4 	sdiv	r7, r7, r4
 8010618:	ee17 ca90 	vmov	ip, s15
 801061c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8010620:	fb9c fcf4 	sdiv	ip, ip, r4
 8010624:	fb0c 3306 	mla	r3, ip, r6, r3
 8010628:	9302      	str	r3, [sp, #8]
 801062a:	ee17 3a10 	vmov	r3, s14
 801062e:	44b6      	add	lr, r6
 8010630:	fb04 e505 	mla	r5, r4, r5, lr
 8010634:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8010638:	fb07 3706 	mla	r7, r7, r6, r3
 801063c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8010640:	e9cd 4700 	strd	r4, r7, [sp]
 8010644:	2900      	cmp	r1, #0
 8010646:	bfcc      	ite	gt
 8010648:	46a1      	movgt	r9, r4
 801064a:	4691      	movle	r9, r2
 801064c:	eba9 0306 	sub.w	r3, r9, r6
 8010650:	f8da 4008 	ldr.w	r4, [sl, #8]
 8010654:	47a0      	blx	r4
 8010656:	b00d      	add	sp, #52	@ 0x34
 8010658:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801065c:	2500      	movs	r5, #0
 801065e:	462e      	mov	r6, r5
 8010660:	e799      	b.n	8010596 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08010664 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8010664:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010668:	b0db      	sub	sp, #364	@ 0x16c
 801066a:	461d      	mov	r5, r3
 801066c:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 8010670:	930a      	str	r3, [sp, #40]	@ 0x28
 8010672:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 8010676:	930b      	str	r3, [sp, #44]	@ 0x2c
 8010678:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 801067c:	9310      	str	r3, [sp, #64]	@ 0x40
 801067e:	6803      	ldr	r3, [r0, #0]
 8010680:	910f      	str	r1, [sp, #60]	@ 0x3c
 8010682:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 8010684:	9009      	str	r0, [sp, #36]	@ 0x24
 8010686:	4614      	mov	r4, r2
 8010688:	4629      	mov	r1, r5
 801068a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 801068e:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 8010692:	47b8      	blx	r7
 8010694:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010696:	6058      	str	r0, [r3, #4]
 8010698:	2800      	cmp	r0, #0
 801069a:	f000 83a1 	beq.w	8010de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801069e:	682b      	ldr	r3, [r5, #0]
 80106a0:	9314      	str	r3, [sp, #80]	@ 0x50
 80106a2:	686b      	ldr	r3, [r5, #4]
 80106a4:	9315      	str	r3, [sp, #84]	@ 0x54
 80106a6:	4bc4      	ldr	r3, [pc, #784]	@ (80109b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80106a8:	ed94 7a02 	vldr	s14, [r4, #8]
 80106ac:	7819      	ldrb	r1, [r3, #0]
 80106ae:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80106b2:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 80106b6:	2900      	cmp	r1, #0
 80106b8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80106bc:	bf16      	itet	ne
 80106be:	4619      	movne	r1, r3
 80106c0:	4611      	moveq	r1, r2
 80106c2:	4613      	movne	r3, r2
 80106c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80106c8:	9116      	str	r1, [sp, #88]	@ 0x58
 80106ca:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 80106ce:	f240 8387 	bls.w	8010de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80106d2:	ed94 7a07 	vldr	s14, [r4, #28]
 80106d6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80106da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80106de:	f240 837f 	bls.w	8010de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80106e2:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 80106e6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80106ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80106ee:	f240 8377 	bls.w	8010de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80106f2:	6822      	ldr	r2, [r4, #0]
 80106f4:	4bb1      	ldr	r3, [pc, #708]	@ (80109bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80106f6:	429a      	cmp	r2, r3
 80106f8:	f2c0 8372 	blt.w	8010de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80106fc:	49b0      	ldr	r1, [pc, #704]	@ (80109c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 80106fe:	6963      	ldr	r3, [r4, #20]
 8010700:	428a      	cmp	r2, r1
 8010702:	f300 836d 	bgt.w	8010de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010706:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 801070a:	48ae      	ldr	r0, [pc, #696]	@ (80109c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 801070c:	33ff      	adds	r3, #255	@ 0xff
 801070e:	4283      	cmp	r3, r0
 8010710:	f200 8366 	bhi.w	8010de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010714:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8010716:	4dac      	ldr	r5, [pc, #688]	@ (80109c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8010718:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 801071c:	33ff      	adds	r3, #255	@ 0xff
 801071e:	42ab      	cmp	r3, r5
 8010720:	f200 835e 	bhi.w	8010de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010724:	6862      	ldr	r2, [r4, #4]
 8010726:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 801072a:	33ff      	adds	r3, #255	@ 0xff
 801072c:	4283      	cmp	r3, r0
 801072e:	f200 8357 	bhi.w	8010de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010732:	69a1      	ldr	r1, [r4, #24]
 8010734:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 8010738:	33ff      	adds	r3, #255	@ 0xff
 801073a:	4283      	cmp	r3, r0
 801073c:	f200 8350 	bhi.w	8010de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010740:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8010742:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 8010746:	30ff      	adds	r0, #255	@ 0xff
 8010748:	42a8      	cmp	r0, r5
 801074a:	f200 8349 	bhi.w	8010de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801074e:	428a      	cmp	r2, r1
 8010750:	f280 8110 	bge.w	8010974 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8010754:	429a      	cmp	r2, r3
 8010756:	f300 8119 	bgt.w	801098c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 801075a:	4299      	cmp	r1, r3
 801075c:	f280 811d 	bge.w	801099a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8010760:	2502      	movs	r5, #2
 8010762:	2701      	movs	r7, #1
 8010764:	46a9      	mov	r9, r5
 8010766:	46b8      	mov	r8, r7
 8010768:	f04f 0a00 	mov.w	sl, #0
 801076c:	4621      	mov	r1, r4
 801076e:	a849      	add	r0, sp, #292	@ 0x124
 8010770:	f004 fa18 	bl	8014ba4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8010774:	4622      	mov	r2, r4
 8010776:	4653      	mov	r3, sl
 8010778:	a949      	add	r1, sp, #292	@ 0x124
 801077a:	f8cd 9000 	str.w	r9, [sp]
 801077e:	a819      	add	r0, sp, #100	@ 0x64
 8010780:	f004 fb40 	bl	8014e04 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8010784:	4622      	mov	r2, r4
 8010786:	4653      	mov	r3, sl
 8010788:	a949      	add	r1, sp, #292	@ 0x124
 801078a:	f8cd 8000 	str.w	r8, [sp]
 801078e:	a829      	add	r0, sp, #164	@ 0xa4
 8010790:	f004 fb38 	bl	8014e04 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8010794:	4643      	mov	r3, r8
 8010796:	4622      	mov	r2, r4
 8010798:	a949      	add	r1, sp, #292	@ 0x124
 801079a:	f8cd 9000 	str.w	r9, [sp]
 801079e:	a839      	add	r0, sp, #228	@ 0xe4
 80107a0:	f004 fb30 	bl	8014e04 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80107a4:	42af      	cmp	r7, r5
 80107a6:	bfb5      	itete	lt
 80107a8:	2300      	movlt	r3, #0
 80107aa:	2301      	movge	r3, #1
 80107ac:	930e      	strlt	r3, [sp, #56]	@ 0x38
 80107ae:	930e      	strge	r3, [sp, #56]	@ 0x38
 80107b0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80107b2:	e893 0003 	ldmia.w	r3, {r0, r1}
 80107b6:	af12      	add	r7, sp, #72	@ 0x48
 80107b8:	bfb9      	ittee	lt
 80107ba:	ad29      	addlt	r5, sp, #164	@ 0xa4
 80107bc:	ac19      	addlt	r4, sp, #100	@ 0x64
 80107be:	ad19      	addge	r5, sp, #100	@ 0x64
 80107c0:	ac29      	addge	r4, sp, #164	@ 0xa4
 80107c2:	e887 0003 	stmia.w	r7, {r0, r1}
 80107c6:	b928      	cbnz	r0, 80107d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80107c8:	4b80      	ldr	r3, [pc, #512]	@ (80109cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80107ca:	6818      	ldr	r0, [r3, #0]
 80107cc:	6803      	ldr	r3, [r0, #0]
 80107ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80107d0:	4798      	blx	r3
 80107d2:	6038      	str	r0, [r7, #0]
 80107d4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 80107d6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80107da:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80107de:	930c      	str	r3, [sp, #48]	@ 0x30
 80107e0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80107e2:	6963      	ldr	r3, [r4, #20]
 80107e4:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 80107e6:	440b      	add	r3, r1
 80107e8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80107ec:	4408      	add	r0, r1
 80107ee:	b200      	sxth	r0, r0
 80107f0:	4283      	cmp	r3, r0
 80107f2:	900d      	str	r0, [sp, #52]	@ 0x34
 80107f4:	f280 80dd 	bge.w	80109b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80107f8:	428b      	cmp	r3, r1
 80107fa:	da08      	bge.n	801080e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80107fc:	2a00      	cmp	r2, #0
 80107fe:	dd06      	ble.n	801080e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8010800:	1acb      	subs	r3, r1, r3
 8010802:	429a      	cmp	r2, r3
 8010804:	f2c0 80e4 	blt.w	80109d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8010808:	2b00      	cmp	r3, #0
 801080a:	f300 80e2 	bgt.w	80109d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 801080e:	6967      	ldr	r7, [r4, #20]
 8010810:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8010812:	443b      	add	r3, r7
 8010814:	461f      	mov	r7, r3
 8010816:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010818:	1bdf      	subs	r7, r3, r7
 801081a:	4297      	cmp	r7, r2
 801081c:	bfa8      	it	ge
 801081e:	4617      	movge	r7, r2
 8010820:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8010824:	2f00      	cmp	r7, #0
 8010826:	f340 8166 	ble.w	8010af6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 801082a:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 801082c:	6829      	ldr	r1, [r5, #0]
 801082e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010832:	f9bb 3000 	ldrsh.w	r3, [fp]
 8010836:	6820      	ldr	r0, [r4, #0]
 8010838:	4411      	add	r1, r2
 801083a:	4299      	cmp	r1, r3
 801083c:	dd1a      	ble.n	8010874 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801083e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8010842:	440b      	add	r3, r1
 8010844:	4402      	add	r2, r0
 8010846:	b21b      	sxth	r3, r3
 8010848:	429a      	cmp	r2, r3
 801084a:	dc13      	bgt.n	8010874 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801084c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801084e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8010850:	681b      	ldr	r3, [r3, #0]
 8010852:	9206      	str	r2, [sp, #24]
 8010854:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8010856:	9205      	str	r2, [sp, #20]
 8010858:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801085a:	9500      	str	r5, [sp, #0]
 801085c:	e9cd b203 	strd	fp, r2, [sp, #12]
 8010860:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8010862:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8010864:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8010868:	a912      	add	r1, sp, #72	@ 0x48
 801086a:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 801086e:	aa49      	add	r2, sp, #292	@ 0x124
 8010870:	4623      	mov	r3, r4
 8010872:	47c8      	blx	r9
 8010874:	e9d4 2300 	ldrd	r2, r3, [r4]
 8010878:	441a      	add	r2, r3
 801087a:	6963      	ldr	r3, [r4, #20]
 801087c:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8010880:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8010884:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8010888:	68a1      	ldr	r1, [r4, #8]
 801088a:	ed94 6a08 	vldr	s12, [r4, #32]
 801088e:	6022      	str	r2, [r4, #0]
 8010890:	3301      	adds	r3, #1
 8010892:	6163      	str	r3, [r4, #20]
 8010894:	69a3      	ldr	r3, [r4, #24]
 8010896:	ee37 7a27 	vadd.f32	s14, s14, s15
 801089a:	3b01      	subs	r3, #1
 801089c:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 80108a0:	61a3      	str	r3, [r4, #24]
 80108a2:	6923      	ldr	r3, [r4, #16]
 80108a4:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 80108a8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80108ac:	edd4 6a07 	vldr	s13, [r4, #28]
 80108b0:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 80108b4:	440b      	add	r3, r1
 80108b6:	68e1      	ldr	r1, [r4, #12]
 80108b8:	6123      	str	r3, [r4, #16]
 80108ba:	ee76 6a86 	vadd.f32	s13, s13, s12
 80108be:	428b      	cmp	r3, r1
 80108c0:	edc4 6a07 	vstr	s13, [r4, #28]
 80108c4:	db15      	blt.n	80108f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80108c6:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 80108ca:	ee76 6a26 	vadd.f32	s13, s12, s13
 80108ce:	3201      	adds	r2, #1
 80108d0:	edc4 6a07 	vstr	s13, [r4, #28]
 80108d4:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 80108d8:	6022      	str	r2, [r4, #0]
 80108da:	ee36 7a87 	vadd.f32	s14, s13, s14
 80108de:	1a5b      	subs	r3, r3, r1
 80108e0:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 80108e4:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 80108e8:	6123      	str	r3, [r4, #16]
 80108ea:	ee77 7a27 	vadd.f32	s15, s14, s15
 80108ee:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 80108f2:	e9d5 2300 	ldrd	r2, r3, [r5]
 80108f6:	441a      	add	r2, r3
 80108f8:	696b      	ldr	r3, [r5, #20]
 80108fa:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 80108fe:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8010902:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8010906:	68a9      	ldr	r1, [r5, #8]
 8010908:	ed95 6a08 	vldr	s12, [r5, #32]
 801090c:	602a      	str	r2, [r5, #0]
 801090e:	3301      	adds	r3, #1
 8010910:	616b      	str	r3, [r5, #20]
 8010912:	69ab      	ldr	r3, [r5, #24]
 8010914:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010918:	3b01      	subs	r3, #1
 801091a:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 801091e:	61ab      	str	r3, [r5, #24]
 8010920:	692b      	ldr	r3, [r5, #16]
 8010922:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8010926:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801092a:	edd5 6a07 	vldr	s13, [r5, #28]
 801092e:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8010932:	440b      	add	r3, r1
 8010934:	68e9      	ldr	r1, [r5, #12]
 8010936:	612b      	str	r3, [r5, #16]
 8010938:	ee76 6a86 	vadd.f32	s13, s13, s12
 801093c:	428b      	cmp	r3, r1
 801093e:	edc5 6a07 	vstr	s13, [r5, #28]
 8010942:	db15      	blt.n	8010970 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8010944:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8010948:	ee76 6a26 	vadd.f32	s13, s12, s13
 801094c:	3201      	adds	r2, #1
 801094e:	edc5 6a07 	vstr	s13, [r5, #28]
 8010952:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8010956:	602a      	str	r2, [r5, #0]
 8010958:	ee36 7a87 	vadd.f32	s14, s13, s14
 801095c:	1a5b      	subs	r3, r3, r1
 801095e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8010962:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8010966:	612b      	str	r3, [r5, #16]
 8010968:	ee77 7a27 	vadd.f32	s15, s14, s15
 801096c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8010970:	3f01      	subs	r7, #1
 8010972:	e757      	b.n	8010824 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8010974:	4299      	cmp	r1, r3
 8010976:	dc13      	bgt.n	80109a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8010978:	429a      	cmp	r2, r3
 801097a:	da14      	bge.n	80109a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 801097c:	2502      	movs	r5, #2
 801097e:	2703      	movs	r7, #3
 8010980:	46a9      	mov	r9, r5
 8010982:	f04f 0800 	mov.w	r8, #0
 8010986:	f04f 0a01 	mov.w	sl, #1
 801098a:	e6ef      	b.n	801076c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801098c:	2501      	movs	r5, #1
 801098e:	2700      	movs	r7, #0
 8010990:	46a9      	mov	r9, r5
 8010992:	46b8      	mov	r8, r7
 8010994:	f04f 0a02 	mov.w	sl, #2
 8010998:	e6e8      	b.n	801076c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801099a:	2501      	movs	r5, #1
 801099c:	2702      	movs	r7, #2
 801099e:	e6e1      	b.n	8010764 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80109a0:	2500      	movs	r5, #0
 80109a2:	2701      	movs	r7, #1
 80109a4:	e7f4      	b.n	8010990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80109a6:	2702      	movs	r7, #2
 80109a8:	2503      	movs	r5, #3
 80109aa:	f04f 0900 	mov.w	r9, #0
 80109ae:	46b8      	mov	r8, r7
 80109b0:	e7e9      	b.n	8010986 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80109b2:	4613      	mov	r3, r2
 80109b4:	e728      	b.n	8010808 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80109b6:	bf00      	nop
 80109b8:	200152e4 	.word	0x200152e4
 80109bc:	fffd8f01 	.word	0xfffd8f01
 80109c0:	00027100 	.word	0x00027100
 80109c4:	0004e1ff 	.word	0x0004e1ff
 80109c8:	0004e1fe 	.word	0x0004e1fe
 80109cc:	200152ec 	.word	0x200152ec
 80109d0:	4613      	mov	r3, r2
 80109d2:	992b      	ldr	r1, [sp, #172]	@ 0xac
 80109d4:	9111      	str	r1, [sp, #68]	@ 0x44
 80109d6:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 80109da:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 80109de:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 80109e0:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 80109e4:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 80109e8:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 80109ec:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 80109f0:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 80109f4:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 80109f8:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 80109fc:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 8010a00:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 8010a04:	469e      	mov	lr, r3
 8010a06:	469c      	mov	ip, r3
 8010a08:	f04f 0900 	mov.w	r9, #0
 8010a0c:	f1bc 0f00 	cmp.w	ip, #0
 8010a10:	d147      	bne.n	8010aa2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8010a12:	eb03 0c07 	add.w	ip, r3, r7
 8010a16:	1ad7      	subs	r7, r2, r3
 8010a18:	f1b9 0f00 	cmp.w	r9, #0
 8010a1c:	d009      	beq.n	8010a32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8010a1e:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 8010a22:	9029      	str	r0, [sp, #164]	@ 0xa4
 8010a24:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 8010a28:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 8010a2c:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 8010a30:	912d      	str	r1, [sp, #180]	@ 0xb4
 8010a32:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8010a34:	9111      	str	r1, [sp, #68]	@ 0x44
 8010a36:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 8010a3a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8010a3e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 8010a42:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 8010a46:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8010a4a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 8010a4e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 8010a52:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 8010a56:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8010a5a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8010a5e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 8010a62:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 8010a66:	f04f 0800 	mov.w	r8, #0
 8010a6a:	f1be 0f00 	cmp.w	lr, #0
 8010a6e:	d031      	beq.n	8010ad4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8010a70:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8010a72:	4431      	add	r1, r6
 8010a74:	4549      	cmp	r1, r9
 8010a76:	4450      	add	r0, sl
 8010a78:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8010a7c:	ee37 7a04 	vadd.f32	s14, s14, s8
 8010a80:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8010a84:	db08      	blt.n	8010a98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8010a86:	ee77 7a85 	vadd.f32	s15, s15, s10
 8010a8a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8010a8e:	ee37 7a06 	vadd.f32	s14, s14, s12
 8010a92:	3001      	adds	r0, #1
 8010a94:	eba1 0109 	sub.w	r1, r1, r9
 8010a98:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010a9c:	f04f 0801 	mov.w	r8, #1
 8010aa0:	e7e3      	b.n	8010a6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8010aa2:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8010aa4:	4431      	add	r1, r6
 8010aa6:	4541      	cmp	r1, r8
 8010aa8:	4450      	add	r0, sl
 8010aaa:	ee37 7a24 	vadd.f32	s14, s14, s9
 8010aae:	ee77 7a84 	vadd.f32	s15, s15, s8
 8010ab2:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8010ab6:	db08      	blt.n	8010aca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8010ab8:	ee76 6a85 	vadd.f32	s13, s13, s10
 8010abc:	ee37 7a25 	vadd.f32	s14, s14, s11
 8010ac0:	ee77 7a86 	vadd.f32	s15, s15, s12
 8010ac4:	3001      	adds	r0, #1
 8010ac6:	eba1 0108 	sub.w	r1, r1, r8
 8010aca:	f10c 3cff 	add.w	ip, ip, #4294967295
 8010ace:	f04f 0901 	mov.w	r9, #1
 8010ad2:	e79b      	b.n	8010a0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8010ad4:	449c      	add	ip, r3
 8010ad6:	1aff      	subs	r7, r7, r3
 8010ad8:	f1b8 0f00 	cmp.w	r8, #0
 8010adc:	d009      	beq.n	8010af2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8010ade:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 8010ae2:	9019      	str	r0, [sp, #100]	@ 0x64
 8010ae4:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 8010ae8:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8010aec:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 8010af0:	911d      	str	r1, [sp, #116]	@ 0x74
 8010af2:	1ad2      	subs	r2, r2, r3
 8010af4:	e68b      	b.n	801080e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8010af6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010af8:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 8010afa:	2b00      	cmp	r3, #0
 8010afc:	f000 80d1 	beq.w	8010ca2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8010b00:	ad19      	add	r5, sp, #100	@ 0x64
 8010b02:	ac39      	add	r4, sp, #228	@ 0xe4
 8010b04:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8010b06:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8010b0a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8010b0e:	930c      	str	r3, [sp, #48]	@ 0x30
 8010b10:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8010b12:	6963      	ldr	r3, [r4, #20]
 8010b14:	440b      	add	r3, r1
 8010b16:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8010b1a:	4408      	add	r0, r1
 8010b1c:	b200      	sxth	r0, r0
 8010b1e:	4283      	cmp	r3, r0
 8010b20:	900d      	str	r0, [sp, #52]	@ 0x34
 8010b22:	f280 80c1 	bge.w	8010ca8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8010b26:	428b      	cmp	r3, r1
 8010b28:	da08      	bge.n	8010b3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8010b2a:	2a00      	cmp	r2, #0
 8010b2c:	dd06      	ble.n	8010b3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8010b2e:	1acb      	subs	r3, r1, r3
 8010b30:	429a      	cmp	r2, r3
 8010b32:	f2c0 80bb 	blt.w	8010cac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8010b36:	2b00      	cmp	r3, #0
 8010b38:	f300 80b9 	bgt.w	8010cae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8010b3c:	6967      	ldr	r7, [r4, #20]
 8010b3e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8010b40:	443b      	add	r3, r7
 8010b42:	461f      	mov	r7, r3
 8010b44:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010b46:	1bdf      	subs	r7, r3, r7
 8010b48:	4297      	cmp	r7, r2
 8010b4a:	bfa8      	it	ge
 8010b4c:	4617      	movge	r7, r2
 8010b4e:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8010b52:	2f00      	cmp	r7, #0
 8010b54:	f340 813c 	ble.w	8010dd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8010b58:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8010b5a:	6829      	ldr	r1, [r5, #0]
 8010b5c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010b60:	f9bb 3000 	ldrsh.w	r3, [fp]
 8010b64:	6820      	ldr	r0, [r4, #0]
 8010b66:	4411      	add	r1, r2
 8010b68:	4299      	cmp	r1, r3
 8010b6a:	dd1a      	ble.n	8010ba2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8010b6c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8010b70:	440b      	add	r3, r1
 8010b72:	4402      	add	r2, r0
 8010b74:	b21b      	sxth	r3, r3
 8010b76:	429a      	cmp	r2, r3
 8010b78:	dc13      	bgt.n	8010ba2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8010b7a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010b7c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8010b7e:	681b      	ldr	r3, [r3, #0]
 8010b80:	9206      	str	r2, [sp, #24]
 8010b82:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8010b84:	9205      	str	r2, [sp, #20]
 8010b86:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8010b88:	9500      	str	r5, [sp, #0]
 8010b8a:	e9cd b203 	strd	fp, r2, [sp, #12]
 8010b8e:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8010b90:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8010b92:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8010b96:	a912      	add	r1, sp, #72	@ 0x48
 8010b98:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 8010b9c:	aa49      	add	r2, sp, #292	@ 0x124
 8010b9e:	4623      	mov	r3, r4
 8010ba0:	47c8      	blx	r9
 8010ba2:	e9d4 2300 	ldrd	r2, r3, [r4]
 8010ba6:	441a      	add	r2, r3
 8010ba8:	6963      	ldr	r3, [r4, #20]
 8010baa:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8010bae:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8010bb2:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8010bb6:	68a1      	ldr	r1, [r4, #8]
 8010bb8:	ed94 6a08 	vldr	s12, [r4, #32]
 8010bbc:	6022      	str	r2, [r4, #0]
 8010bbe:	3301      	adds	r3, #1
 8010bc0:	6163      	str	r3, [r4, #20]
 8010bc2:	69a3      	ldr	r3, [r4, #24]
 8010bc4:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010bc8:	3b01      	subs	r3, #1
 8010bca:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 8010bce:	61a3      	str	r3, [r4, #24]
 8010bd0:	6923      	ldr	r3, [r4, #16]
 8010bd2:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8010bd6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010bda:	edd4 6a07 	vldr	s13, [r4, #28]
 8010bde:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8010be2:	440b      	add	r3, r1
 8010be4:	68e1      	ldr	r1, [r4, #12]
 8010be6:	6123      	str	r3, [r4, #16]
 8010be8:	ee76 6a86 	vadd.f32	s13, s13, s12
 8010bec:	428b      	cmp	r3, r1
 8010bee:	edc4 6a07 	vstr	s13, [r4, #28]
 8010bf2:	db15      	blt.n	8010c20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8010bf4:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 8010bf8:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010bfc:	3201      	adds	r2, #1
 8010bfe:	edc4 6a07 	vstr	s13, [r4, #28]
 8010c02:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 8010c06:	6022      	str	r2, [r4, #0]
 8010c08:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010c0c:	1a5b      	subs	r3, r3, r1
 8010c0e:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8010c12:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8010c16:	6123      	str	r3, [r4, #16]
 8010c18:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010c1c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8010c20:	e9d5 2300 	ldrd	r2, r3, [r5]
 8010c24:	441a      	add	r2, r3
 8010c26:	696b      	ldr	r3, [r5, #20]
 8010c28:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8010c2c:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8010c30:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8010c34:	68a9      	ldr	r1, [r5, #8]
 8010c36:	ed95 6a08 	vldr	s12, [r5, #32]
 8010c3a:	602a      	str	r2, [r5, #0]
 8010c3c:	3301      	adds	r3, #1
 8010c3e:	616b      	str	r3, [r5, #20]
 8010c40:	69ab      	ldr	r3, [r5, #24]
 8010c42:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010c46:	3b01      	subs	r3, #1
 8010c48:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8010c4c:	61ab      	str	r3, [r5, #24]
 8010c4e:	692b      	ldr	r3, [r5, #16]
 8010c50:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8010c54:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010c58:	edd5 6a07 	vldr	s13, [r5, #28]
 8010c5c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8010c60:	440b      	add	r3, r1
 8010c62:	68e9      	ldr	r1, [r5, #12]
 8010c64:	612b      	str	r3, [r5, #16]
 8010c66:	ee76 6a86 	vadd.f32	s13, s13, s12
 8010c6a:	428b      	cmp	r3, r1
 8010c6c:	edc5 6a07 	vstr	s13, [r5, #28]
 8010c70:	db15      	blt.n	8010c9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8010c72:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8010c76:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010c7a:	3201      	adds	r2, #1
 8010c7c:	edc5 6a07 	vstr	s13, [r5, #28]
 8010c80:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8010c84:	602a      	str	r2, [r5, #0]
 8010c86:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010c8a:	1a5b      	subs	r3, r3, r1
 8010c8c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8010c90:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8010c94:	612b      	str	r3, [r5, #16]
 8010c96:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010c9a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8010c9e:	3f01      	subs	r7, #1
 8010ca0:	e757      	b.n	8010b52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8010ca2:	ad39      	add	r5, sp, #228	@ 0xe4
 8010ca4:	ac19      	add	r4, sp, #100	@ 0x64
 8010ca6:	e72d      	b.n	8010b04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8010ca8:	4613      	mov	r3, r2
 8010caa:	e744      	b.n	8010b36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8010cac:	4613      	mov	r3, r2
 8010cae:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 8010cb2:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 8010cb4:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 8010cb8:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 8010cbc:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 8010cc0:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 8010cc4:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 8010cc8:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 8010ccc:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 8010cd0:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 8010cd2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 8010cd6:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 8010cda:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 8010cde:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 8010ce2:	960e      	str	r6, [sp, #56]	@ 0x38
 8010ce4:	469e      	mov	lr, r3
 8010ce6:	461f      	mov	r7, r3
 8010ce8:	f04f 0900 	mov.w	r9, #0
 8010cec:	2f00      	cmp	r7, #0
 8010cee:	d146      	bne.n	8010d7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8010cf0:	449c      	add	ip, r3
 8010cf2:	1ad7      	subs	r7, r2, r3
 8010cf4:	f1b9 0f00 	cmp.w	r9, #0
 8010cf8:	d009      	beq.n	8010d0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8010cfa:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 8010cfe:	9039      	str	r0, [sp, #228]	@ 0xe4
 8010d00:	913d      	str	r1, [sp, #244]	@ 0xf4
 8010d02:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 8010d06:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 8010d0a:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 8010d0e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8010d10:	910e      	str	r1, [sp, #56]	@ 0x38
 8010d12:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 8010d16:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8010d1a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 8010d1e:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 8010d22:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8010d26:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 8010d2a:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 8010d2e:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 8010d32:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8010d36:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8010d3a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 8010d3e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 8010d42:	f04f 0800 	mov.w	r8, #0
 8010d46:	f1be 0f00 	cmp.w	lr, #0
 8010d4a:	d030      	beq.n	8010dae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8010d4c:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8010d4e:	4431      	add	r1, r6
 8010d50:	4549      	cmp	r1, r9
 8010d52:	4450      	add	r0, sl
 8010d54:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8010d58:	ee37 7a04 	vadd.f32	s14, s14, s8
 8010d5c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8010d60:	db08      	blt.n	8010d74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8010d62:	ee77 7a85 	vadd.f32	s15, s15, s10
 8010d66:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8010d6a:	ee37 7a06 	vadd.f32	s14, s14, s12
 8010d6e:	3001      	adds	r0, #1
 8010d70:	eba1 0109 	sub.w	r1, r1, r9
 8010d74:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010d78:	f04f 0801 	mov.w	r8, #1
 8010d7c:	e7e3      	b.n	8010d46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8010d7e:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8010d80:	4431      	add	r1, r6
 8010d82:	4541      	cmp	r1, r8
 8010d84:	4450      	add	r0, sl
 8010d86:	ee37 7a24 	vadd.f32	s14, s14, s9
 8010d8a:	ee77 7a84 	vadd.f32	s15, s15, s8
 8010d8e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8010d92:	db08      	blt.n	8010da6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8010d94:	ee76 6a85 	vadd.f32	s13, s13, s10
 8010d98:	ee37 7a25 	vadd.f32	s14, s14, s11
 8010d9c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8010da0:	3001      	adds	r0, #1
 8010da2:	eba1 0108 	sub.w	r1, r1, r8
 8010da6:	3f01      	subs	r7, #1
 8010da8:	f04f 0901 	mov.w	r9, #1
 8010dac:	e79e      	b.n	8010cec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8010dae:	449c      	add	ip, r3
 8010db0:	1aff      	subs	r7, r7, r3
 8010db2:	f1b8 0f00 	cmp.w	r8, #0
 8010db6:	d009      	beq.n	8010dcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8010db8:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 8010dbc:	9019      	str	r0, [sp, #100]	@ 0x64
 8010dbe:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 8010dc2:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8010dc6:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 8010dca:	911d      	str	r1, [sp, #116]	@ 0x74
 8010dcc:	1ad2      	subs	r2, r2, r3
 8010dce:	e6b5      	b.n	8010b3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8010dd0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8010dd2:	681b      	ldr	r3, [r3, #0]
 8010dd4:	b923      	cbnz	r3, 8010de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010dd6:	4b04      	ldr	r3, [pc, #16]	@ (8010de8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8010dd8:	6818      	ldr	r0, [r3, #0]
 8010dda:	6803      	ldr	r3, [r0, #0]
 8010ddc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010dde:	4798      	blx	r3
 8010de0:	b05b      	add	sp, #364	@ 0x16c
 8010de2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010de6:	bf00      	nop
 8010de8:	200152ec 	.word	0x200152ec

08010dec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8010dec:	b570      	push	{r4, r5, r6, lr}
 8010dee:	4604      	mov	r4, r0
 8010df0:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8010df4:	9805      	ldr	r0, [sp, #20]
 8010df6:	6061      	str	r1, [r4, #4]
 8010df8:	2500      	movs	r5, #0
 8010dfa:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8010dfe:	8263      	strh	r3, [r4, #18]
 8010e00:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8010e04:	8025      	strh	r5, [r4, #0]
 8010e06:	7221      	strb	r1, [r4, #8]
 8010e08:	7266      	strb	r6, [r4, #9]
 8010e0a:	60e0      	str	r0, [r4, #12]
 8010e0c:	8222      	strh	r2, [r4, #16]
 8010e0e:	82a3      	strh	r3, [r4, #20]
 8010e10:	82e5      	strh	r5, [r4, #22]
 8010e12:	8325      	strh	r5, [r4, #24]
 8010e14:	8365      	strh	r5, [r4, #26]
 8010e16:	83a5      	strh	r5, [r4, #28]
 8010e18:	83e5      	strh	r5, [r4, #30]
 8010e1a:	8425      	strh	r5, [r4, #32]
 8010e1c:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 8010e20:	b32e      	cbz	r6, 8010e6e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8010e22:	6803      	ldr	r3, [r0, #0]
 8010e24:	695b      	ldr	r3, [r3, #20]
 8010e26:	4798      	blx	r3
 8010e28:	4606      	mov	r6, r0
 8010e2a:	b300      	cbz	r0, 8010e6e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8010e2c:	68e0      	ldr	r0, [r4, #12]
 8010e2e:	6803      	ldr	r3, [r0, #0]
 8010e30:	4631      	mov	r1, r6
 8010e32:	68db      	ldr	r3, [r3, #12]
 8010e34:	4798      	blx	r3
 8010e36:	4605      	mov	r5, r0
 8010e38:	b1c8      	cbz	r0, 8010e6e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8010e3a:	7b43      	ldrb	r3, [r0, #13]
 8010e3c:	7a82      	ldrb	r2, [r0, #10]
 8010e3e:	005b      	lsls	r3, r3, #1
 8010e40:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010e44:	4313      	orrs	r3, r2
 8010e46:	8423      	strh	r3, [r4, #32]
 8010e48:	7a63      	ldrb	r3, [r4, #9]
 8010e4a:	2b06      	cmp	r3, #6
 8010e4c:	d10f      	bne.n	8010e6e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8010e4e:	68e0      	ldr	r0, [r4, #12]
 8010e50:	6803      	ldr	r3, [r0, #0]
 8010e52:	462a      	mov	r2, r5
 8010e54:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010e56:	4631      	mov	r1, r6
 8010e58:	4798      	blx	r3
 8010e5a:	7b6b      	ldrb	r3, [r5, #13]
 8010e5c:	005b      	lsls	r3, r3, #1
 8010e5e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8010e62:	7aab      	ldrb	r3, [r5, #10]
 8010e64:	4313      	orrs	r3, r2
 8010e66:	4418      	add	r0, r3
 8010e68:	8c23      	ldrh	r3, [r4, #32]
 8010e6a:	4418      	add	r0, r3
 8010e6c:	8420      	strh	r0, [r4, #32]
 8010e6e:	4620      	mov	r0, r4
 8010e70:	bd70      	pop	{r4, r5, r6, pc}

08010e72 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8010e72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e76:	2400      	movs	r4, #0
 8010e78:	b085      	sub	sp, #20
 8010e7a:	4681      	mov	r9, r0
 8010e7c:	4688      	mov	r8, r1
 8010e7e:	4692      	mov	sl, r2
 8010e80:	469b      	mov	fp, r3
 8010e82:	4627      	mov	r7, r4
 8010e84:	4625      	mov	r5, r4
 8010e86:	4626      	mov	r6, r4
 8010e88:	4554      	cmp	r4, sl
 8010e8a:	da2a      	bge.n	8010ee2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010e8c:	2300      	movs	r3, #0
 8010e8e:	9303      	str	r3, [sp, #12]
 8010e90:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8010e94:	429d      	cmp	r5, r3
 8010e96:	d004      	beq.n	8010ea2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8010e98:	f242 030b 	movw	r3, #8203	@ 0x200b
 8010e9c:	429d      	cmp	r5, r3
 8010e9e:	bf18      	it	ne
 8010ea0:	462f      	movne	r7, r5
 8010ea2:	ab03      	add	r3, sp, #12
 8010ea4:	4642      	mov	r2, r8
 8010ea6:	4659      	mov	r1, fp
 8010ea8:	4648      	mov	r0, r9
 8010eaa:	f003 fc91 	bl	80147d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010eae:	4605      	mov	r5, r0
 8010eb0:	b1b8      	cbz	r0, 8010ee2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010eb2:	280a      	cmp	r0, #10
 8010eb4:	d015      	beq.n	8010ee2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010eb6:	9a03      	ldr	r2, [sp, #12]
 8010eb8:	b18a      	cbz	r2, 8010ede <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8010eba:	7b50      	ldrb	r0, [r2, #13]
 8010ebc:	7a93      	ldrb	r3, [r2, #10]
 8010ebe:	8895      	ldrh	r5, [r2, #4]
 8010ec0:	0040      	lsls	r0, r0, #1
 8010ec2:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8010ec6:	4303      	orrs	r3, r0
 8010ec8:	9301      	str	r3, [sp, #4]
 8010eca:	f8d8 3000 	ldr.w	r3, [r8]
 8010ece:	4639      	mov	r1, r7
 8010ed0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010ed2:	4640      	mov	r0, r8
 8010ed4:	4798      	blx	r3
 8010ed6:	9b01      	ldr	r3, [sp, #4]
 8010ed8:	4418      	add	r0, r3
 8010eda:	4406      	add	r6, r0
 8010edc:	b2b6      	uxth	r6, r6
 8010ede:	3401      	adds	r4, #1
 8010ee0:	e7d2      	b.n	8010e88 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8010ee2:	4630      	mov	r0, r6
 8010ee4:	b005      	add	sp, #20
 8010ee6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010eea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8010eea:	2a02      	cmp	r2, #2
 8010eec:	b530      	push	{r4, r5, lr}
 8010eee:	d011      	beq.n	8010f14 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8010ef0:	2a03      	cmp	r2, #3
 8010ef2:	d01c      	beq.n	8010f2e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8010ef4:	2a01      	cmp	r2, #1
 8010ef6:	d10c      	bne.n	8010f12 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8010ef8:	888b      	ldrh	r3, [r1, #4]
 8010efa:	8801      	ldrh	r1, [r0, #0]
 8010efc:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8010f00:	8844      	ldrh	r4, [r0, #2]
 8010f02:	8004      	strh	r4, [r0, #0]
 8010f04:	1a5b      	subs	r3, r3, r1
 8010f06:	1a9b      	subs	r3, r3, r2
 8010f08:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8010f0c:	8043      	strh	r3, [r0, #2]
 8010f0e:	8081      	strh	r1, [r0, #4]
 8010f10:	80c2      	strh	r2, [r0, #6]
 8010f12:	bd30      	pop	{r4, r5, pc}
 8010f14:	88cb      	ldrh	r3, [r1, #6]
 8010f16:	8842      	ldrh	r2, [r0, #2]
 8010f18:	1a9b      	subs	r3, r3, r2
 8010f1a:	88c2      	ldrh	r2, [r0, #6]
 8010f1c:	1a9b      	subs	r3, r3, r2
 8010f1e:	888a      	ldrh	r2, [r1, #4]
 8010f20:	8801      	ldrh	r1, [r0, #0]
 8010f22:	8043      	strh	r3, [r0, #2]
 8010f24:	1a52      	subs	r2, r2, r1
 8010f26:	8881      	ldrh	r1, [r0, #4]
 8010f28:	1a52      	subs	r2, r2, r1
 8010f2a:	8002      	strh	r2, [r0, #0]
 8010f2c:	e7f1      	b.n	8010f12 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8010f2e:	88cb      	ldrh	r3, [r1, #6]
 8010f30:	8841      	ldrh	r1, [r0, #2]
 8010f32:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8010f36:	f9b0 5000 	ldrsh.w	r5, [r0]
 8010f3a:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8010f3e:	8045      	strh	r5, [r0, #2]
 8010f40:	1a5b      	subs	r3, r3, r1
 8010f42:	1a9b      	subs	r3, r3, r2
 8010f44:	8003      	strh	r3, [r0, #0]
 8010f46:	8082      	strh	r2, [r0, #4]
 8010f48:	80c4      	strh	r4, [r0, #6]
 8010f4a:	e7e2      	b.n	8010f12 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08010f4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8010f4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f50:	b09f      	sub	sp, #124	@ 0x7c
 8010f52:	920f      	str	r2, [sp, #60]	@ 0x3c
 8010f54:	9312      	str	r3, [sp, #72]	@ 0x48
 8010f56:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8010f58:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8010f5a:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8010f5c:	8812      	ldrh	r2, [r2, #0]
 8010f5e:	889b      	ldrh	r3, [r3, #4]
 8010f60:	900e      	str	r0, [sp, #56]	@ 0x38
 8010f62:	4413      	add	r3, r2
 8010f64:	6828      	ldr	r0, [r5, #0]
 8010f66:	9117      	str	r1, [sp, #92]	@ 0x5c
 8010f68:	b21b      	sxth	r3, r3
 8010f6a:	9311      	str	r3, [sp, #68]	@ 0x44
 8010f6c:	6803      	ldr	r3, [r0, #0]
 8010f6e:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 8010f72:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010f74:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 8010f78:	4798      	blx	r3
 8010f7a:	682b      	ldr	r3, [r5, #0]
 8010f7c:	9013      	str	r0, [sp, #76]	@ 0x4c
 8010f7e:	7b1a      	ldrb	r2, [r3, #12]
 8010f80:	7adb      	ldrb	r3, [r3, #11]
 8010f82:	9215      	str	r2, [sp, #84]	@ 0x54
 8010f84:	9316      	str	r3, [sp, #88]	@ 0x58
 8010f86:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 8010f8a:	2c00      	cmp	r4, #0
 8010f8c:	d067      	beq.n	801105e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8010f8e:	7c2b      	ldrb	r3, [r5, #16]
 8010f90:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 8010f92:	2b06      	cmp	r3, #6
 8010f94:	bf14      	ite	ne
 8010f96:	2301      	movne	r3, #1
 8010f98:	2302      	moveq	r3, #2
 8010f9a:	4413      	add	r3, r2
 8010f9c:	f04f 0900 	mov.w	r9, #0
 8010fa0:	9310      	str	r3, [sp, #64]	@ 0x40
 8010fa2:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 8010fa6:	464c      	mov	r4, r9
 8010fa8:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 8010fac:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010fae:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8010fb0:	4293      	cmp	r3, r2
 8010fb2:	f280 808b 	bge.w	80110cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8010fb6:	2300      	movs	r3, #0
 8010fb8:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 8010fbc:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 8010fc0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8010fc4:	429c      	cmp	r4, r3
 8010fc6:	d006      	beq.n	8010fd6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 8010fc8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8010fca:	f242 020b 	movw	r2, #8203	@ 0x200b
 8010fce:	4294      	cmp	r4, r2
 8010fd0:	bf18      	it	ne
 8010fd2:	4623      	movne	r3, r4
 8010fd4:	930c      	str	r3, [sp, #48]	@ 0x30
 8010fd6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010fd8:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 8010fda:	682a      	ldr	r2, [r5, #0]
 8010fdc:	428b      	cmp	r3, r1
 8010fde:	db40      	blt.n	8011062 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8010fe0:	6813      	ldr	r3, [r2, #0]
 8010fe2:	4610      	mov	r0, r2
 8010fe4:	695b      	ldr	r3, [r3, #20]
 8010fe6:	4798      	blx	r3
 8010fe8:	4604      	mov	r4, r0
 8010fea:	6828      	ldr	r0, [r5, #0]
 8010fec:	6803      	ldr	r3, [r0, #0]
 8010fee:	aa1d      	add	r2, sp, #116	@ 0x74
 8010ff0:	689f      	ldr	r7, [r3, #8]
 8010ff2:	4621      	mov	r1, r4
 8010ff4:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8010ff8:	47b8      	blx	r7
 8010ffa:	901c      	str	r0, [sp, #112]	@ 0x70
 8010ffc:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8011000:	429c      	cmp	r4, r3
 8011002:	f000 80ea 	beq.w	80111da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8011006:	f242 030b 	movw	r3, #8203	@ 0x200b
 801100a:	429c      	cmp	r4, r3
 801100c:	f000 80e5 	beq.w	80111da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8011010:	2c00      	cmp	r4, #0
 8011012:	f000 810c 	beq.w	801122e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8011016:	2c0a      	cmp	r4, #10
 8011018:	d05e      	beq.n	80110d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 801101a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 801101c:	b36a      	cbz	r2, 801107a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801101e:	8894      	ldrh	r4, [r2, #4]
 8011020:	f1bb 0f00 	cmp.w	fp, #0
 8011024:	d03a      	beq.n	801109c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 8011026:	f892 900d 	ldrb.w	r9, [r2, #13]
 801102a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801102e:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 8011032:	f892 900a 	ldrb.w	r9, [r2, #10]
 8011036:	f1bb 0f01 	cmp.w	fp, #1
 801103a:	ea49 0903 	orr.w	r9, r9, r3
 801103e:	d133      	bne.n	80110a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 8011040:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8011042:	eba6 0609 	sub.w	r6, r6, r9
 8011046:	2b00      	cmp	r3, #0
 8011048:	d14d      	bne.n	80110e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 801104a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801104c:	eb09 0306 	add.w	r3, r9, r6
 8011050:	4413      	add	r3, r2
 8011052:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8011054:	f9b2 2000 	ldrsh.w	r2, [r2]
 8011058:	4293      	cmp	r3, r2
 801105a:	da4e      	bge.n	80110fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 801105c:	e036      	b.n	80110cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 801105e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 8011060:	e79c      	b.n	8010f9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 8011062:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8011066:	9301      	str	r3, [sp, #4]
 8011068:	ab1d      	add	r3, sp, #116	@ 0x74
 801106a:	9300      	str	r3, [sp, #0]
 801106c:	4659      	mov	r1, fp
 801106e:	ab1c      	add	r3, sp, #112	@ 0x70
 8011070:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8011072:	f003 fbf6 	bl	8014862 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8011076:	4604      	mov	r4, r0
 8011078:	e7c0      	b.n	8010ffc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 801107a:	6828      	ldr	r0, [r5, #0]
 801107c:	6803      	ldr	r3, [r0, #0]
 801107e:	691b      	ldr	r3, [r3, #16]
 8011080:	4798      	blx	r3
 8011082:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8011086:	4298      	cmp	r0, r3
 8011088:	f000 80a7 	beq.w	80111da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801108c:	f242 030b 	movw	r3, #8203	@ 0x200b
 8011090:	4298      	cmp	r0, r3
 8011092:	f000 80a2 	beq.w	80111da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8011096:	f1bb 0f00 	cmp.w	fp, #0
 801109a:	d100      	bne.n	801109e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 801109c:	444e      	add	r6, r9
 801109e:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80110a0:	2a00      	cmp	r2, #0
 80110a2:	d1c0      	bne.n	8011026 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 80110a4:	4691      	mov	r9, r2
 80110a6:	e098      	b.n	80111da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80110a8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80110aa:	2b00      	cmp	r3, #0
 80110ac:	f000 80c1 	beq.w	8011232 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 80110b0:	f1bb 0f00 	cmp.w	fp, #0
 80110b4:	d117      	bne.n	80110e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 80110b6:	6828      	ldr	r0, [r5, #0]
 80110b8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80110ba:	6803      	ldr	r3, [r0, #0]
 80110bc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80110be:	4798      	blx	r3
 80110c0:	4406      	add	r6, r0
 80110c2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80110c4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80110c6:	1af3      	subs	r3, r6, r3
 80110c8:	4293      	cmp	r3, r2
 80110ca:	dd16      	ble.n	80110fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 80110cc:	2c00      	cmp	r4, #0
 80110ce:	f000 80ae 	beq.w	801122e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 80110d2:	2c0a      	cmp	r4, #10
 80110d4:	f040 809c 	bne.w	8011210 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 80110d8:	240a      	movs	r4, #10
 80110da:	fab4 f084 	clz	r0, r4
 80110de:	0940      	lsrs	r0, r0, #5
 80110e0:	b01f      	add	sp, #124	@ 0x7c
 80110e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80110e6:	6828      	ldr	r0, [r5, #0]
 80110e8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80110ea:	6803      	ldr	r3, [r0, #0]
 80110ec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80110ee:	4798      	blx	r3
 80110f0:	f1bb 0f01 	cmp.w	fp, #1
 80110f4:	eba6 0600 	sub.w	r6, r6, r0
 80110f8:	d0a7      	beq.n	801104a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 80110fa:	981c      	ldr	r0, [sp, #112]	@ 0x70
 80110fc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80110fe:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8011102:	f9b3 8000 	ldrsh.w	r8, [r3]
 8011106:	7b43      	ldrb	r3, [r0, #13]
 8011108:	015b      	lsls	r3, r3, #5
 801110a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801110e:	7983      	ldrb	r3, [r0, #6]
 8011110:	4431      	add	r1, r6
 8011112:	4313      	orrs	r3, r2
 8011114:	440b      	add	r3, r1
 8011116:	4543      	cmp	r3, r8
 8011118:	db5f      	blt.n	80111da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801111a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801111c:	4299      	cmp	r1, r3
 801111e:	da5c      	bge.n	80111da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8011120:	6828      	ldr	r0, [r5, #0]
 8011122:	6803      	ldr	r3, [r0, #0]
 8011124:	45b0      	cmp	r8, r6
 8011126:	bfc8      	it	gt
 8011128:	eba8 0806 	subgt.w	r8, r8, r6
 801112c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801112e:	bfcc      	ite	gt
 8011130:	fa1f f888 	uxthgt.w	r8, r8
 8011134:	f04f 0800 	movle.w	r8, #0
 8011138:	4798      	blx	r3
 801113a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 801113c:	7b53      	ldrb	r3, [r2, #13]
 801113e:	00d9      	lsls	r1, r3, #3
 8011140:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 8011144:	7a11      	ldrb	r1, [r2, #8]
 8011146:	4339      	orrs	r1, r7
 8011148:	065f      	lsls	r7, r3, #25
 801114a:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801114c:	bf44      	itt	mi
 801114e:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 8011152:	b209      	sxthmi	r1, r1
 8011154:	19c7      	adds	r7, r0, r7
 8011156:	1a7f      	subs	r7, r7, r1
 8011158:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 801115a:	b2bf      	uxth	r7, r7
 801115c:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8011160:	fa0f fa87 	sxth.w	sl, r7
 8011164:	4551      	cmp	r1, sl
 8011166:	dd3c      	ble.n	80111e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 8011168:	011b      	lsls	r3, r3, #4
 801116a:	79d0      	ldrb	r0, [r2, #7]
 801116c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011170:	4303      	orrs	r3, r0
 8011172:	449a      	add	sl, r3
 8011174:	4551      	cmp	r1, sl
 8011176:	dc30      	bgt.n	80111da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8011178:	1bcf      	subs	r7, r1, r7
 801117a:	b23f      	sxth	r7, r7
 801117c:	468a      	mov	sl, r1
 801117e:	9219      	str	r2, [sp, #100]	@ 0x64
 8011180:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8011182:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8011184:	6828      	ldr	r0, [r5, #0]
 8011186:	2a00      	cmp	r2, #0
 8011188:	d12d      	bne.n	80111e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 801118a:	9318      	str	r3, [sp, #96]	@ 0x60
 801118c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801118e:	6819      	ldr	r1, [r3, #0]
 8011190:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 8011192:	6801      	ldr	r1, [r0, #0]
 8011194:	9314      	str	r3, [sp, #80]	@ 0x50
 8011196:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8011198:	4788      	blx	r1
 801119a:	79a9      	ldrb	r1, [r5, #6]
 801119c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801119e:	7ba9      	ldrb	r1, [r5, #14]
 80111a0:	910a      	str	r1, [sp, #40]	@ 0x28
 80111a2:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 80111a6:	9109      	str	r1, [sp, #36]	@ 0x24
 80111a8:	68a9      	ldr	r1, [r5, #8]
 80111aa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80111ac:	9306      	str	r3, [sp, #24]
 80111ae:	b2bf      	uxth	r7, r7
 80111b0:	e9cd 8702 	strd	r8, r7, [sp, #8]
 80111b4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80111b6:	9304      	str	r3, [sp, #16]
 80111b8:	44b0      	add	r8, r6
 80111ba:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80111be:	fa0f f388 	sxth.w	r3, r8
 80111c2:	9300      	str	r3, [sp, #0]
 80111c4:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80111c6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80111c8:	9205      	str	r2, [sp, #20]
 80111ca:	f8cd a004 	str.w	sl, [sp, #4]
 80111ce:	681a      	ldr	r2, [r3, #0]
 80111d0:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 80111d2:	685b      	ldr	r3, [r3, #4]
 80111d4:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80111d6:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 80111d8:	47b8      	blx	r7
 80111da:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80111dc:	3301      	adds	r3, #1
 80111de:	930d      	str	r3, [sp, #52]	@ 0x34
 80111e0:	e6e4      	b.n	8010fac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 80111e2:	2700      	movs	r7, #0
 80111e4:	e7cb      	b.n	801117e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 80111e6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80111e8:	f8d2 c008 	ldr.w	ip, [r2, #8]
 80111ec:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80111ee:	f8dc 1000 	ldr.w	r1, [ip]
 80111f2:	e9cd 6204 	strd	r6, r2, [sp, #16]
 80111f6:	79aa      	ldrb	r2, [r5, #6]
 80111f8:	9203      	str	r2, [sp, #12]
 80111fa:	7baa      	ldrb	r2, [r5, #14]
 80111fc:	9202      	str	r2, [sp, #8]
 80111fe:	68aa      	ldr	r2, [r5, #8]
 8011200:	e9cd 0200 	strd	r0, r2, [sp]
 8011204:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8011206:	688f      	ldr	r7, [r1, #8]
 8011208:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801120a:	4660      	mov	r0, ip
 801120c:	47b8      	blx	r7
 801120e:	e7e4      	b.n	80111da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8011210:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8011212:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 8011214:	3501      	adds	r5, #1
 8011216:	429d      	cmp	r5, r3
 8011218:	f6bf af5f 	bge.w	80110da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 801121c:	4659      	mov	r1, fp
 801121e:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8011220:	f7f3 fc2a 	bl	8004a78 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8011224:	4604      	mov	r4, r0
 8011226:	b110      	cbz	r0, 801122e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8011228:	280a      	cmp	r0, #10
 801122a:	d1f2      	bne.n	8011212 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 801122c:	e754      	b.n	80110d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 801122e:	2400      	movs	r4, #0
 8011230:	e753      	b.n	80110da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 8011232:	f1bb 0f00 	cmp.w	fp, #0
 8011236:	f43f af44 	beq.w	80110c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 801123a:	e75e      	b.n	80110fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0801123c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801123c:	b530      	push	{r4, r5, lr}
 801123e:	8ac4      	ldrh	r4, [r0, #22]
 8011240:	8b45      	ldrh	r5, [r0, #26]
 8011242:	8343      	strh	r3, [r0, #26]
 8011244:	442c      	add	r4, r5
 8011246:	1ae4      	subs	r4, r4, r3
 8011248:	82c4      	strh	r4, [r0, #22]
 801124a:	8b83      	ldrh	r3, [r0, #28]
 801124c:	8b04      	ldrh	r4, [r0, #24]
 801124e:	4422      	add	r2, r4
 8011250:	440c      	add	r4, r1
 8011252:	1a59      	subs	r1, r3, r1
 8011254:	83c2      	strh	r2, [r0, #30]
 8011256:	8304      	strh	r4, [r0, #24]
 8011258:	8381      	strh	r1, [r0, #28]
 801125a:	bd30      	pop	{r4, r5, pc}

0801125c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 801125c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011260:	4604      	mov	r4, r0
 8011262:	8a47      	ldrh	r7, [r0, #18]
 8011264:	68c0      	ldr	r0, [r0, #12]
 8011266:	6803      	ldr	r3, [r0, #0]
 8011268:	b085      	sub	sp, #20
 801126a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801126c:	4798      	blx	r3
 801126e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8011272:	7a63      	ldrb	r3, [r4, #9]
 8011274:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8011278:	42b7      	cmp	r7, r6
 801127a:	f103 33ff 	add.w	r3, r3, #4294967295
 801127e:	bfac      	ite	ge
 8011280:	f04f 0900 	movge.w	r9, #0
 8011284:	f04f 0901 	movlt.w	r9, #1
 8011288:	2b05      	cmp	r3, #5
 801128a:	d804      	bhi.n	8011296 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 801128c:	e8df f003 	tbb	[pc, r3]
 8011290:	470e0854 	.word	0x470e0854
 8011294:	4c4c      	.short	0x4c4c
 8011296:	2500      	movs	r5, #0
 8011298:	46a9      	mov	r9, r5
 801129a:	462e      	mov	r6, r5
 801129c:	462f      	mov	r7, r5
 801129e:	e00d      	b.n	80112bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80112a0:	42b7      	cmp	r7, r6
 80112a2:	bfb4      	ite	lt
 80112a4:	2600      	movlt	r6, #0
 80112a6:	2601      	movge	r6, #1
 80112a8:	2500      	movs	r5, #0
 80112aa:	e7f7      	b.n	801129c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80112ac:	42b7      	cmp	r7, r6
 80112ae:	464d      	mov	r5, r9
 80112b0:	f04f 0900 	mov.w	r9, #0
 80112b4:	bfb4      	ite	lt
 80112b6:	2600      	movlt	r6, #0
 80112b8:	2601      	movge	r6, #1
 80112ba:	464f      	mov	r7, r9
 80112bc:	f04f 0800 	mov.w	r8, #0
 80112c0:	f8a4 8016 	strh.w	r8, [r4, #22]
 80112c4:	f8a4 8018 	strh.w	r8, [r4, #24]
 80112c8:	f8cd 8004 	str.w	r8, [sp, #4]
 80112cc:	2300      	movs	r3, #0
 80112ce:	9303      	str	r3, [sp, #12]
 80112d0:	8823      	ldrh	r3, [r4, #0]
 80112d2:	2b20      	cmp	r3, #32
 80112d4:	d034      	beq.n	8011340 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 80112d6:	f242 010b 	movw	r1, #8203	@ 0x200b
 80112da:	1a5a      	subs	r2, r3, r1
 80112dc:	f1d2 0a00 	rsbs	sl, r2, #0
 80112e0:	eb4a 0a02 	adc.w	sl, sl, r2
 80112e4:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 80112e8:	4293      	cmp	r3, r2
 80112ea:	d009      	beq.n	8011300 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80112ec:	428b      	cmp	r3, r1
 80112ee:	9a01      	ldr	r2, [sp, #4]
 80112f0:	bf18      	it	ne
 80112f2:	461a      	movne	r2, r3
 80112f4:	9201      	str	r2, [sp, #4]
 80112f6:	bf0c      	ite	eq
 80112f8:	f04f 0a01 	moveq.w	sl, #1
 80112fc:	f04f 0a00 	movne.w	sl, #0
 8011300:	ab03      	add	r3, sp, #12
 8011302:	68e2      	ldr	r2, [r4, #12]
 8011304:	7a21      	ldrb	r1, [r4, #8]
 8011306:	6860      	ldr	r0, [r4, #4]
 8011308:	f003 fa62 	bl	80147d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801130c:	8020      	strh	r0, [r4, #0]
 801130e:	b9d8      	cbnz	r0, 8011348 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8011310:	8ba2      	ldrh	r2, [r4, #28]
 8011312:	2300      	movs	r3, #0
 8011314:	4611      	mov	r1, r2
 8011316:	4620      	mov	r0, r4
 8011318:	f7ff ff90 	bl	801123c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801131c:	e06e      	b.n	80113fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801131e:	2500      	movs	r5, #0
 8011320:	46a9      	mov	r9, r5
 8011322:	462e      	mov	r6, r5
 8011324:	2701      	movs	r7, #1
 8011326:	e7c9      	b.n	80112bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8011328:	42b7      	cmp	r7, r6
 801132a:	f04f 0500 	mov.w	r5, #0
 801132e:	bfb4      	ite	lt
 8011330:	2700      	movlt	r7, #0
 8011332:	2701      	movge	r7, #1
 8011334:	462e      	mov	r6, r5
 8011336:	e7c1      	b.n	80112bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8011338:	2500      	movs	r5, #0
 801133a:	46a9      	mov	r9, r5
 801133c:	2601      	movs	r6, #1
 801133e:	e7ad      	b.n	801129c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8011340:	9301      	str	r3, [sp, #4]
 8011342:	f04f 0a01 	mov.w	sl, #1
 8011346:	e7db      	b.n	8011300 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8011348:	8b63      	ldrh	r3, [r4, #26]
 801134a:	280a      	cmp	r0, #10
 801134c:	f103 0301 	add.w	r3, r3, #1
 8011350:	8363      	strh	r3, [r4, #26]
 8011352:	d0dd      	beq.n	8011310 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8011354:	9a03      	ldr	r2, [sp, #12]
 8011356:	bb62      	cbnz	r2, 80113b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8011358:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 801135c:	4298      	cmp	r0, r3
 801135e:	d003      	beq.n	8011368 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8011360:	f242 030b 	movw	r3, #8203	@ 0x200b
 8011364:	4298      	cmp	r0, r3
 8011366:	d1b1      	bne.n	80112cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8011368:	8823      	ldrh	r3, [r4, #0]
 801136a:	8ba1      	ldrh	r1, [r4, #28]
 801136c:	2b20      	cmp	r3, #32
 801136e:	d003      	beq.n	8011378 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8011370:	f242 000b 	movw	r0, #8203	@ 0x200b
 8011374:	4283      	cmp	r3, r0
 8011376:	d131      	bne.n	80113dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8011378:	f1ba 0f00 	cmp.w	sl, #0
 801137c:	bf0a      	itet	eq
 801137e:	4688      	moveq	r8, r1
 8011380:	4650      	movne	r0, sl
 8011382:	2001      	moveq	r0, #1
 8011384:	440a      	add	r2, r1
 8011386:	8b23      	ldrh	r3, [r4, #24]
 8011388:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801138c:	b292      	uxth	r2, r2
 801138e:	83a2      	strh	r2, [r4, #28]
 8011390:	4413      	add	r3, r2
 8011392:	f1b9 0f00 	cmp.w	r9, #0
 8011396:	d102      	bne.n	801139e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8011398:	2d00      	cmp	r5, #0
 801139a:	d042      	beq.n	8011422 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801139c:	b300      	cbz	r0, 80113e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801139e:	8c21      	ldrh	r1, [r4, #32]
 80113a0:	4419      	add	r1, r3
 80113a2:	458c      	cmp	ip, r1
 80113a4:	da37      	bge.n	8011416 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80113a6:	8ae1      	ldrh	r1, [r4, #22]
 80113a8:	2900      	cmp	r1, #0
 80113aa:	d034      	beq.n	8011416 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80113ac:	4563      	cmp	r3, ip
 80113ae:	dd8d      	ble.n	80112cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80113b0:	e01d      	b.n	80113ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 80113b2:	8893      	ldrh	r3, [r2, #4]
 80113b4:	8023      	strh	r3, [r4, #0]
 80113b6:	f892 b00d 	ldrb.w	fp, [r2, #13]
 80113ba:	9901      	ldr	r1, [sp, #4]
 80113bc:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 80113c0:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 80113c4:	f892 b00a 	ldrb.w	fp, [r2, #10]
 80113c8:	ea4b 0b00 	orr.w	fp, fp, r0
 80113cc:	68e0      	ldr	r0, [r4, #12]
 80113ce:	6803      	ldr	r3, [r0, #0]
 80113d0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80113d2:	4798      	blx	r3
 80113d4:	eb0b 0200 	add.w	r2, fp, r0
 80113d8:	b292      	uxth	r2, r2
 80113da:	e7c5      	b.n	8011368 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80113dc:	2000      	movs	r0, #0
 80113de:	e7d1      	b.n	8011384 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80113e0:	4563      	cmp	r3, ip
 80113e2:	f77f af73 	ble.w	80112cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80113e6:	8ae3      	ldrh	r3, [r4, #22]
 80113e8:	2b00      	cmp	r3, #0
 80113ea:	f43f af6f 	beq.w	80112cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80113ee:	2301      	movs	r3, #1
 80113f0:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 80113f4:	8c22      	ldrh	r2, [r4, #32]
 80113f6:	8be3      	ldrh	r3, [r4, #30]
 80113f8:	4413      	add	r3, r2
 80113fa:	83e3      	strh	r3, [r4, #30]
 80113fc:	68e0      	ldr	r0, [r4, #12]
 80113fe:	6803      	ldr	r3, [r0, #0]
 8011400:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011402:	4798      	blx	r3
 8011404:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8011408:	4418      	add	r0, r3
 801140a:	8a63      	ldrh	r3, [r4, #18]
 801140c:	1a18      	subs	r0, r3, r0
 801140e:	8260      	strh	r0, [r4, #18]
 8011410:	b005      	add	sp, #20
 8011412:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011416:	2300      	movs	r3, #0
 8011418:	4611      	mov	r1, r2
 801141a:	4620      	mov	r0, r4
 801141c:	f7ff ff0e 	bl	801123c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8011420:	e754      	b.n	80112cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8011422:	4563      	cmp	r3, ip
 8011424:	dd14      	ble.n	8011450 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8011426:	b117      	cbz	r7, 801142e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8011428:	2301      	movs	r3, #1
 801142a:	460a      	mov	r2, r1
 801142c:	e772      	b.n	8011314 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801142e:	2e00      	cmp	r6, #0
 8011430:	f43f af4c 	beq.w	80112cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8011434:	2800      	cmp	r0, #0
 8011436:	f47f af49 	bne.w	80112cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801143a:	f1ba 0f00 	cmp.w	sl, #0
 801143e:	d002      	beq.n	8011446 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8011440:	2301      	movs	r3, #1
 8011442:	4642      	mov	r2, r8
 8011444:	e767      	b.n	8011316 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8011446:	8ae3      	ldrh	r3, [r4, #22]
 8011448:	2b00      	cmp	r3, #0
 801144a:	f43f af3f 	beq.w	80112cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801144e:	e7d5      	b.n	80113fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8011450:	2800      	cmp	r0, #0
 8011452:	f47f af3b 	bne.w	80112cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8011456:	f1ba 0f00 	cmp.w	sl, #0
 801145a:	f43f af37 	beq.w	80112cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801145e:	2301      	movs	r3, #1
 8011460:	4642      	mov	r2, r8
 8011462:	e7da      	b.n	801141a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08011464 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8011464:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011466:	4605      	mov	r5, r0
 8011468:	b08f      	sub	sp, #60	@ 0x3c
 801146a:	4617      	mov	r7, r2
 801146c:	461c      	mov	r4, r3
 801146e:	460e      	mov	r6, r1
 8011470:	b1d1      	cbz	r1, 80114a8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8011472:	681b      	ldr	r3, [r3, #0]
 8011474:	4620      	mov	r0, r4
 8011476:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011478:	4798      	blx	r3
 801147a:	4240      	negs	r0, r0
 801147c:	b200      	sxth	r0, r0
 801147e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8011482:	9603      	str	r6, [sp, #12]
 8011484:	9700      	str	r7, [sp, #0]
 8011486:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 801148a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 801148e:	4629      	mov	r1, r5
 8011490:	a805      	add	r0, sp, #20
 8011492:	f7ff fcab 	bl	8010dec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8011496:	2401      	movs	r4, #1
 8011498:	a805      	add	r0, sp, #20
 801149a:	f7ff fedf 	bl	801125c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801149e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80114a2:	b163      	cbz	r3, 80114be <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 80114a4:	3401      	adds	r4, #1
 80114a6:	e7f7      	b.n	8011498 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 80114a8:	f003 fa60 	bl	801496c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80114ac:	2401      	movs	r4, #1
 80114ae:	280a      	cmp	r0, #10
 80114b0:	4628      	mov	r0, r5
 80114b2:	bf08      	it	eq
 80114b4:	3401      	addeq	r4, #1
 80114b6:	f003 fa59 	bl	801496c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80114ba:	2800      	cmp	r0, #0
 80114bc:	d1f7      	bne.n	80114ae <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 80114be:	b2a0      	uxth	r0, r4
 80114c0:	b00f      	add	sp, #60	@ 0x3c
 80114c2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080114c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80114c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80114c8:	b0e3      	sub	sp, #396	@ 0x18c
 80114ca:	461c      	mov	r4, r3
 80114cc:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 80114ce:	4683      	mov	fp, r0
 80114d0:	4688      	mov	r8, r1
 80114d2:	2b00      	cmp	r3, #0
 80114d4:	f000 8112 	beq.w	80116fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80114d8:	6823      	ldr	r3, [r4, #0]
 80114da:	2b00      	cmp	r3, #0
 80114dc:	f000 810e 	beq.w	80116fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80114e0:	7ba3      	ldrb	r3, [r4, #14]
 80114e2:	2b00      	cmp	r3, #0
 80114e4:	f000 810a 	beq.w	80116fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80114e8:	6810      	ldr	r0, [r2, #0]
 80114ea:	6851      	ldr	r1, [r2, #4]
 80114ec:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80114f0:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 80114f4:	ad0a      	add	r5, sp, #40	@ 0x28
 80114f6:	462b      	mov	r3, r5
 80114f8:	c303      	stmia	r3!, {r0, r1}
 80114fa:	2100      	movs	r1, #0
 80114fc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8011500:	910c      	str	r1, [sp, #48]	@ 0x30
 8011502:	79a2      	ldrb	r2, [r4, #6]
 8011504:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8011508:	a90c      	add	r1, sp, #48	@ 0x30
 801150a:	4628      	mov	r0, r5
 801150c:	f7ff fced 	bl	8010eea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8011510:	a90c      	add	r1, sp, #48	@ 0x30
 8011512:	4608      	mov	r0, r1
 8011514:	79a2      	ldrb	r2, [r4, #6]
 8011516:	f7ff fce8 	bl	8010eea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801151a:	a817      	add	r0, sp, #92	@ 0x5c
 801151c:	f002 fdea 	bl	80140f4 <_ZN8touchgfx12TextProviderC1Ev>
 8011520:	6820      	ldr	r0, [r4, #0]
 8011522:	6803      	ldr	r3, [r0, #0]
 8011524:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011526:	4798      	blx	r3
 8011528:	4606      	mov	r6, r0
 801152a:	6820      	ldr	r0, [r4, #0]
 801152c:	6803      	ldr	r3, [r0, #0]
 801152e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011530:	4798      	blx	r3
 8011532:	4633      	mov	r3, r6
 8011534:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 8011536:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 8011538:	9000      	str	r0, [sp, #0]
 801153a:	a817      	add	r0, sp, #92	@ 0x5c
 801153c:	f002 fe2d 	bl	801419a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011540:	6820      	ldr	r0, [r4, #0]
 8011542:	f894 a004 	ldrb.w	sl, [r4, #4]
 8011546:	6803      	ldr	r3, [r0, #0]
 8011548:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801154a:	4798      	blx	r3
 801154c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8011550:	6823      	ldr	r3, [r4, #0]
 8011552:	4607      	mov	r7, r0
 8011554:	4406      	add	r6, r0
 8011556:	a830      	add	r0, sp, #192	@ 0xc0
 8011558:	f893 9009 	ldrb.w	r9, [r3, #9]
 801155c:	f002 fdca 	bl	80140f4 <_ZN8touchgfx12TextProviderC1Ev>
 8011560:	7c23      	ldrb	r3, [r4, #16]
 8011562:	b17b      	cbz	r3, 8011584 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8011564:	6820      	ldr	r0, [r4, #0]
 8011566:	6803      	ldr	r3, [r0, #0]
 8011568:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801156a:	4798      	blx	r3
 801156c:	9009      	str	r0, [sp, #36]	@ 0x24
 801156e:	6820      	ldr	r0, [r4, #0]
 8011570:	6802      	ldr	r2, [r0, #0]
 8011572:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8011574:	4790      	blx	r2
 8011576:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011578:	9000      	str	r0, [sp, #0]
 801157a:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 801157c:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 801157e:	a830      	add	r0, sp, #192	@ 0xc0
 8011580:	f002 fe0b 	bl	801419a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011584:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8011588:	7be2      	ldrb	r2, [r4, #15]
 801158a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 801158e:	1a8a      	subs	r2, r1, r2
 8011590:	7c21      	ldrb	r1, [r4, #16]
 8011592:	9103      	str	r1, [sp, #12]
 8011594:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8011598:	9102      	str	r1, [sp, #8]
 801159a:	6821      	ldr	r1, [r4, #0]
 801159c:	9101      	str	r1, [sp, #4]
 801159e:	7961      	ldrb	r1, [r4, #5]
 80115a0:	9100      	str	r1, [sp, #0]
 80115a2:	b292      	uxth	r2, r2
 80115a4:	a930      	add	r1, sp, #192	@ 0xc0
 80115a6:	a80e      	add	r0, sp, #56	@ 0x38
 80115a8:	f7ff fc20 	bl	8010dec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80115ac:	2e00      	cmp	r6, #0
 80115ae:	dc5b      	bgt.n	8011668 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 80115b0:	af17      	add	r7, sp, #92	@ 0x5c
 80115b2:	f04f 0900 	mov.w	r9, #0
 80115b6:	7c23      	ldrb	r3, [r4, #16]
 80115b8:	2b00      	cmp	r3, #0
 80115ba:	f000 80b1 	beq.w	8011720 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 80115be:	a80e      	add	r0, sp, #56	@ 0x38
 80115c0:	f7ff fe4c 	bl	801125c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80115c4:	f1ba 0f00 	cmp.w	sl, #0
 80115c8:	f000 80a5 	beq.w	8011716 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80115cc:	7c23      	ldrb	r3, [r4, #16]
 80115ce:	9309      	str	r3, [sp, #36]	@ 0x24
 80115d0:	2264      	movs	r2, #100	@ 0x64
 80115d2:	4639      	mov	r1, r7
 80115d4:	a849      	add	r0, sp, #292	@ 0x124
 80115d6:	f014 fbbc 	bl	8025d52 <memcpy>
 80115da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80115dc:	2b00      	cmp	r3, #0
 80115de:	f000 80a7 	beq.w	8011730 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80115e2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 80115e6:	7922      	ldrb	r2, [r4, #4]
 80115e8:	2a01      	cmp	r2, #1
 80115ea:	f040 808a 	bne.w	8011702 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80115ee:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 80115f2:	1ac0      	subs	r0, r0, r3
 80115f4:	2302      	movs	r3, #2
 80115f6:	fb90 f0f3 	sdiv	r0, r0, r3
 80115fa:	b200      	sxth	r0, r0
 80115fc:	7c23      	ldrb	r3, [r4, #16]
 80115fe:	2b00      	cmp	r3, #0
 8011600:	f000 808b 	beq.w	801171a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8011604:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 8011608:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 801160c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8011610:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8011614:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8011618:	4410      	add	r0, r2
 801161a:	b200      	sxth	r0, r0
 801161c:	9000      	str	r0, [sp, #0]
 801161e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8011622:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8011626:	4642      	mov	r2, r8
 8011628:	2100      	movs	r1, #0
 801162a:	4658      	mov	r0, fp
 801162c:	f7ff fc8e 	bl	8010f4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8011630:	2800      	cmp	r0, #0
 8011632:	d163      	bne.n	80116fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8011634:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8011638:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 801163c:	b2b2      	uxth	r2, r6
 801163e:	4413      	add	r3, r2
 8011640:	1a8a      	subs	r2, r1, r2
 8011642:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 8011646:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 801164a:	b21b      	sxth	r3, r3
 801164c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8011650:	2a00      	cmp	r2, #0
 8011652:	d153      	bne.n	80116fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8011654:	6822      	ldr	r2, [r4, #0]
 8011656:	8869      	ldrh	r1, [r5, #2]
 8011658:	7a12      	ldrb	r2, [r2, #8]
 801165a:	1a9b      	subs	r3, r3, r2
 801165c:	88ea      	ldrh	r2, [r5, #6]
 801165e:	440a      	add	r2, r1
 8011660:	b212      	sxth	r2, r2
 8011662:	4293      	cmp	r3, r2
 8011664:	dda7      	ble.n	80115b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8011666:	e049      	b.n	80116fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8011668:	7c23      	ldrb	r3, [r4, #16]
 801166a:	444f      	add	r7, r9
 801166c:	b1c3      	cbz	r3, 80116a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801166e:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 8011672:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8011676:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801167a:	443b      	add	r3, r7
 801167c:	4293      	cmp	r3, r2
 801167e:	da97      	bge.n	80115b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8011680:	a80e      	add	r0, sp, #56	@ 0x38
 8011682:	f7ff fdeb 	bl	801125c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011686:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 801168a:	3b01      	subs	r3, #1
 801168c:	b29b      	uxth	r3, r3
 801168e:	454b      	cmp	r3, r9
 8011690:	9309      	str	r3, [sp, #36]	@ 0x24
 8011692:	d021      	beq.n	80116d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8011694:	7961      	ldrb	r1, [r4, #5]
 8011696:	a817      	add	r0, sp, #92	@ 0x5c
 8011698:	f7f3 f9ee 	bl	8004a78 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801169c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801169e:	e7f4      	b.n	801168a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 80116a0:	fa1f f986 	uxth.w	r9, r6
 80116a4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80116a8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80116ac:	443b      	add	r3, r7
 80116ae:	4293      	cmp	r3, r2
 80116b0:	f6bf af7e 	bge.w	80115b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80116b4:	a817      	add	r0, sp, #92	@ 0x5c
 80116b6:	f003 f959 	bl	801496c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80116ba:	b1f8      	cbz	r0, 80116fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80116bc:	280a      	cmp	r0, #10
 80116be:	d1f1      	bne.n	80116a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80116c0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 80116c4:	444b      	add	r3, r9
 80116c6:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80116ca:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 80116ce:	eba3 0309 	sub.w	r3, r3, r9
 80116d2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80116d6:	e7e5      	b.n	80116a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80116d8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 80116dc:	b2b3      	uxth	r3, r6
 80116de:	441a      	add	r2, r3
 80116e0:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80116e4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 80116e8:	1ad3      	subs	r3, r2, r3
 80116ea:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80116ee:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 80116f2:	b11b      	cbz	r3, 80116fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80116f4:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 80116f8:	2b00      	cmp	r3, #0
 80116fa:	d0ba      	beq.n	8011672 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80116fc:	b063      	add	sp, #396	@ 0x18c
 80116fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011702:	2a02      	cmp	r2, #2
 8011704:	d105      	bne.n	8011712 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8011706:	7be2      	ldrb	r2, [r4, #15]
 8011708:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 801170c:	1a80      	subs	r0, r0, r2
 801170e:	1ac0      	subs	r0, r0, r3
 8011710:	e773      	b.n	80115fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8011712:	2000      	movs	r0, #0
 8011714:	e772      	b.n	80115fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8011716:	7be0      	ldrb	r0, [r4, #15]
 8011718:	e770      	b.n	80115fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801171a:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 801171e:	e773      	b.n	8011608 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8011720:	f1ba 0f00 	cmp.w	sl, #0
 8011724:	d0f7      	beq.n	8011716 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8011726:	2264      	movs	r2, #100	@ 0x64
 8011728:	4639      	mov	r1, r7
 801172a:	a849      	add	r0, sp, #292	@ 0x124
 801172c:	f014 fb11 	bl	8025d52 <memcpy>
 8011730:	2300      	movs	r3, #0
 8011732:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8011736:	6821      	ldr	r1, [r4, #0]
 8011738:	a849      	add	r0, sp, #292	@ 0x124
 801173a:	f7ff fb9a 	bl	8010e72 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801173e:	b203      	sxth	r3, r0
 8011740:	e751      	b.n	80115e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08011742 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8011742:	2b03      	cmp	r3, #3
 8011744:	d818      	bhi.n	8011778 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8011746:	e8df f003 	tbb	[pc, r3]
 801174a:	0602      	.short	0x0602
 801174c:	130d      	.short	0x130d
 801174e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8011752:	1850      	adds	r0, r2, r1
 8011754:	4770      	bx	lr
 8011756:	8803      	ldrh	r3, [r0, #0]
 8011758:	8880      	ldrh	r0, [r0, #4]
 801175a:	4418      	add	r0, r3
 801175c:	b200      	sxth	r0, r0
 801175e:	1a80      	subs	r0, r0, r2
 8011760:	3801      	subs	r0, #1
 8011762:	4770      	bx	lr
 8011764:	8803      	ldrh	r3, [r0, #0]
 8011766:	8880      	ldrh	r0, [r0, #4]
 8011768:	4418      	add	r0, r3
 801176a:	b200      	sxth	r0, r0
 801176c:	1a40      	subs	r0, r0, r1
 801176e:	e7f7      	b.n	8011760 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8011770:	f9b0 0000 	ldrsh.w	r0, [r0]
 8011774:	4410      	add	r0, r2
 8011776:	4770      	bx	lr
 8011778:	2000      	movs	r0, #0
 801177a:	4770      	bx	lr

0801177c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801177c:	2b03      	cmp	r3, #3
 801177e:	d817      	bhi.n	80117b0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8011780:	e8df f003 	tbb	[pc, r3]
 8011784:	10090602 	.word	0x10090602
 8011788:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801178c:	1850      	adds	r0, r2, r1
 801178e:	4770      	bx	lr
 8011790:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8011794:	e7fa      	b.n	801178c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8011796:	8843      	ldrh	r3, [r0, #2]
 8011798:	88c0      	ldrh	r0, [r0, #6]
 801179a:	4418      	add	r0, r3
 801179c:	b200      	sxth	r0, r0
 801179e:	1a80      	subs	r0, r0, r2
 80117a0:	3801      	subs	r0, #1
 80117a2:	4770      	bx	lr
 80117a4:	8843      	ldrh	r3, [r0, #2]
 80117a6:	88c0      	ldrh	r0, [r0, #6]
 80117a8:	4418      	add	r0, r3
 80117aa:	b200      	sxth	r0, r0
 80117ac:	1a40      	subs	r0, r0, r1
 80117ae:	e7f7      	b.n	80117a0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 80117b0:	2000      	movs	r0, #0
 80117b2:	4770      	bx	lr

080117b4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 80117b4:	4b01      	ldr	r3, [pc, #4]	@ (80117bc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 80117b6:	2200      	movs	r2, #0
 80117b8:	601a      	str	r2, [r3, #0]
 80117ba:	4770      	bx	lr
 80117bc:	200152fc 	.word	0x200152fc

080117c0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80117c0:	4603      	mov	r3, r0
 80117c2:	b1c8      	cbz	r0, 80117f8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80117c4:	0c02      	lsrs	r2, r0, #16
 80117c6:	0412      	lsls	r2, r2, #16
 80117c8:	b9a2      	cbnz	r2, 80117f4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80117ca:	0403      	lsls	r3, r0, #16
 80117cc:	2010      	movs	r0, #16
 80117ce:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 80117d2:	bf04      	itt	eq
 80117d4:	021b      	lsleq	r3, r3, #8
 80117d6:	3008      	addeq	r0, #8
 80117d8:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 80117dc:	bf04      	itt	eq
 80117de:	011b      	lsleq	r3, r3, #4
 80117e0:	3004      	addeq	r0, #4
 80117e2:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 80117e6:	bf04      	itt	eq
 80117e8:	009b      	lsleq	r3, r3, #2
 80117ea:	3002      	addeq	r0, #2
 80117ec:	2b00      	cmp	r3, #0
 80117ee:	db04      	blt.n	80117fa <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80117f0:	3001      	adds	r0, #1
 80117f2:	4770      	bx	lr
 80117f4:	2000      	movs	r0, #0
 80117f6:	e7ea      	b.n	80117ce <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80117f8:	2020      	movs	r0, #32
 80117fa:	4770      	bx	lr

080117fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80117fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011800:	b087      	sub	sp, #28
 8011802:	460d      	mov	r5, r1
 8011804:	4616      	mov	r6, r2
 8011806:	4698      	mov	r8, r3
 8011808:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 801180c:	4601      	mov	r1, r0
 801180e:	b120      	cbz	r0, 801181a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8011810:	b11a      	cbz	r2, 801181a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8011812:	2d1f      	cmp	r5, #31
 8011814:	d801      	bhi.n	801181a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8011816:	2b1f      	cmp	r3, #31
 8011818:	d904      	bls.n	8011824 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801181a:	2000      	movs	r0, #0
 801181c:	6038      	str	r0, [r7, #0]
 801181e:	b007      	add	sp, #28
 8011820:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011824:	b97d      	cbnz	r5, 8011846 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8011826:	b143      	cbz	r3, 801183a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8011828:	4602      	mov	r2, r0
 801182a:	e9cd 4700 	strd	r4, r7, [sp]
 801182e:	462b      	mov	r3, r5
 8011830:	4641      	mov	r1, r8
 8011832:	4630      	mov	r0, r6
 8011834:	f7ff ffe2 	bl	80117fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8011838:	e7f1      	b.n	801181e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801183a:	f04f 33ff 	mov.w	r3, #4294967295
 801183e:	603b      	str	r3, [r7, #0]
 8011840:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8011844:	e7eb      	b.n	801181e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8011846:	fa32 fa05 	lsrs.w	sl, r2, r5
 801184a:	d106      	bne.n	801185a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801184c:	4346      	muls	r6, r0
 801184e:	fbb6 f0f4 	udiv	r0, r6, r4
 8011852:	fb04 6610 	mls	r6, r4, r0, r6
 8011856:	603e      	str	r6, [r7, #0]
 8011858:	e7e1      	b.n	801181e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801185a:	2201      	movs	r2, #1
 801185c:	40aa      	lsls	r2, r5
 801185e:	3a01      	subs	r2, #1
 8011860:	4016      	ands	r6, r2
 8011862:	fa00 fb05 	lsl.w	fp, r0, r5
 8011866:	4630      	mov	r0, r6
 8011868:	fbbb f9f4 	udiv	r9, fp, r4
 801186c:	fb0a f309 	mul.w	r3, sl, r9
 8011870:	9303      	str	r3, [sp, #12]
 8011872:	f7ff ffa5 	bl	80117c0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8011876:	462b      	mov	r3, r5
 8011878:	460a      	mov	r2, r1
 801187a:	e9cd 4700 	strd	r4, r7, [sp]
 801187e:	4601      	mov	r1, r0
 8011880:	4630      	mov	r0, r6
 8011882:	f7ff ffbb 	bl	80117fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8011886:	fb04 b919 	mls	r9, r4, r9, fp
 801188a:	4606      	mov	r6, r0
 801188c:	4648      	mov	r0, r9
 801188e:	eb05 0108 	add.w	r1, r5, r8
 8011892:	f7ff ff95 	bl	80117c0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8011896:	ab05      	add	r3, sp, #20
 8011898:	e9cd 4300 	strd	r4, r3, [sp]
 801189c:	464a      	mov	r2, r9
 801189e:	4603      	mov	r3, r0
 80118a0:	4650      	mov	r0, sl
 80118a2:	f7ff ffab 	bl	80117fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80118a6:	6839      	ldr	r1, [r7, #0]
 80118a8:	9a05      	ldr	r2, [sp, #20]
 80118aa:	9b03      	ldr	r3, [sp, #12]
 80118ac:	4411      	add	r1, r2
 80118ae:	fbb1 f2f4 	udiv	r2, r1, r4
 80118b2:	18d3      	adds	r3, r2, r3
 80118b4:	441e      	add	r6, r3
 80118b6:	fb04 1412 	mls	r4, r4, r2, r1
 80118ba:	4430      	add	r0, r6
 80118bc:	603c      	str	r4, [r7, #0]
 80118be:	e7ae      	b.n	801181e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080118c0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80118c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80118c4:	b085      	sub	sp, #20
 80118c6:	f1b0 0900 	subs.w	r9, r0, #0
 80118ca:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80118cc:	461d      	mov	r5, r3
 80118ce:	bfbf      	itttt	lt
 80118d0:	6823      	ldrlt	r3, [r4, #0]
 80118d2:	425b      	neglt	r3, r3
 80118d4:	f1c9 0900 	rsblt	r9, r9, #0
 80118d8:	6023      	strlt	r3, [r4, #0]
 80118da:	bfb4      	ite	lt
 80118dc:	f04f 36ff 	movlt.w	r6, #4294967295
 80118e0:	2601      	movge	r6, #1
 80118e2:	2a00      	cmp	r2, #0
 80118e4:	4617      	mov	r7, r2
 80118e6:	da04      	bge.n	80118f2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80118e8:	6823      	ldr	r3, [r4, #0]
 80118ea:	425b      	negs	r3, r3
 80118ec:	4257      	negs	r7, r2
 80118ee:	4276      	negs	r6, r6
 80118f0:	6023      	str	r3, [r4, #0]
 80118f2:	2d00      	cmp	r5, #0
 80118f4:	4638      	mov	r0, r7
 80118f6:	bfba      	itte	lt
 80118f8:	426d      	neglt	r5, r5
 80118fa:	f04f 38ff 	movlt.w	r8, #4294967295
 80118fe:	f04f 0801 	movge.w	r8, #1
 8011902:	f7ff ff5d 	bl	80117c0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8011906:	ab03      	add	r3, sp, #12
 8011908:	e9cd 5300 	strd	r5, r3, [sp]
 801190c:	463a      	mov	r2, r7
 801190e:	4603      	mov	r3, r0
 8011910:	4648      	mov	r0, r9
 8011912:	f7ff ff73 	bl	80117fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8011916:	6823      	ldr	r3, [r4, #0]
 8011918:	9a03      	ldr	r2, [sp, #12]
 801191a:	4546      	cmp	r6, r8
 801191c:	441a      	add	r2, r3
 801191e:	fb92 f3f5 	sdiv	r3, r2, r5
 8011922:	4418      	add	r0, r3
 8011924:	bf18      	it	ne
 8011926:	4240      	negne	r0, r0
 8011928:	fb05 2313 	mls	r3, r5, r3, r2
 801192c:	1c72      	adds	r2, r6, #1
 801192e:	6023      	str	r3, [r4, #0]
 8011930:	d105      	bne.n	801193e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8011932:	2b00      	cmp	r3, #0
 8011934:	f1c3 0200 	rsb	r2, r3, #0
 8011938:	db0b      	blt.n	8011952 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801193a:	6022      	str	r2, [r4, #0]
 801193c:	e006      	b.n	801194c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801193e:	2e01      	cmp	r6, #1
 8011940:	d104      	bne.n	801194c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8011942:	2b00      	cmp	r3, #0
 8011944:	da02      	bge.n	801194c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8011946:	442b      	add	r3, r5
 8011948:	3801      	subs	r0, #1
 801194a:	6023      	str	r3, [r4, #0]
 801194c:	b005      	add	sp, #20
 801194e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011952:	3801      	subs	r0, #1
 8011954:	1b52      	subs	r2, r2, r5
 8011956:	e7f0      	b.n	801193a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08011958 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8011958:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801195c:	4c1c      	ldr	r4, [pc, #112]	@ (80119d0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801195e:	6807      	ldr	r7, [r0, #0]
 8011960:	69a3      	ldr	r3, [r4, #24]
 8011962:	4605      	mov	r5, r0
 8011964:	b92b      	cbnz	r3, 8011972 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8011966:	6840      	ldr	r0, [r0, #4]
 8011968:	e9c5 7000 	strd	r7, r0, [r5]
 801196c:	b004      	add	sp, #16
 801196e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011972:	68a2      	ldr	r2, [r4, #8]
 8011974:	6820      	ldr	r0, [r4, #0]
 8011976:	ae04      	add	r6, sp, #16
 8011978:	f04f 0802 	mov.w	r8, #2
 801197c:	fb93 f1f8 	sdiv	r1, r3, r8
 8011980:	440a      	add	r2, r1
 8011982:	f846 2d04 	str.w	r2, [r6, #-4]!
 8011986:	69e1      	ldr	r1, [r4, #28]
 8011988:	9600      	str	r6, [sp, #0]
 801198a:	463a      	mov	r2, r7
 801198c:	f7ff ff98 	bl	80118c0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8011990:	69a3      	ldr	r3, [r4, #24]
 8011992:	686a      	ldr	r2, [r5, #4]
 8011994:	6a21      	ldr	r1, [r4, #32]
 8011996:	9600      	str	r6, [sp, #0]
 8011998:	4607      	mov	r7, r0
 801199a:	6860      	ldr	r0, [r4, #4]
 801199c:	f7ff ff90 	bl	80118c0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80119a0:	6962      	ldr	r2, [r4, #20]
 80119a2:	69a3      	ldr	r3, [r4, #24]
 80119a4:	fb93 f8f8 	sdiv	r8, r3, r8
 80119a8:	4442      	add	r2, r8
 80119aa:	9203      	str	r2, [sp, #12]
 80119ac:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80119ae:	682a      	ldr	r2, [r5, #0]
 80119b0:	9600      	str	r6, [sp, #0]
 80119b2:	4407      	add	r7, r0
 80119b4:	68e0      	ldr	r0, [r4, #12]
 80119b6:	f7ff ff83 	bl	80118c0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80119ba:	9600      	str	r6, [sp, #0]
 80119bc:	4680      	mov	r8, r0
 80119be:	69a3      	ldr	r3, [r4, #24]
 80119c0:	686a      	ldr	r2, [r5, #4]
 80119c2:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 80119c4:	6920      	ldr	r0, [r4, #16]
 80119c6:	f7ff ff7b 	bl	80118c0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80119ca:	4440      	add	r0, r8
 80119cc:	e7cc      	b.n	8011968 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80119ce:	bf00      	nop
 80119d0:	20015300 	.word	0x20015300

080119d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80119d4:	4b07      	ldr	r3, [pc, #28]	@ (80119f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80119d6:	781b      	ldrb	r3, [r3, #0]
 80119d8:	2b01      	cmp	r3, #1
 80119da:	d109      	bne.n	80119f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80119dc:	f9b1 3000 	ldrsh.w	r3, [r1]
 80119e0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80119e4:	8003      	strh	r3, [r0, #0]
 80119e6:	4b04      	ldr	r3, [pc, #16]	@ (80119f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80119e8:	881b      	ldrh	r3, [r3, #0]
 80119ea:	3b01      	subs	r3, #1
 80119ec:	1a9b      	subs	r3, r3, r2
 80119ee:	800b      	strh	r3, [r1, #0]
 80119f0:	4770      	bx	lr
 80119f2:	bf00      	nop
 80119f4:	200152e4 	.word	0x200152e4
 80119f8:	200152e0 	.word	0x200152e0

080119fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80119fc:	b510      	push	{r4, lr}
 80119fe:	4b07      	ldr	r3, [pc, #28]	@ (8011a1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8011a00:	781b      	ldrb	r3, [r3, #0]
 8011a02:	2b01      	cmp	r3, #1
 8011a04:	d108      	bne.n	8011a18 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8011a06:	4b06      	ldr	r3, [pc, #24]	@ (8011a20 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8011a08:	880c      	ldrh	r4, [r1, #0]
 8011a0a:	881b      	ldrh	r3, [r3, #0]
 8011a0c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8011a10:	3b01      	subs	r3, #1
 8011a12:	1b1b      	subs	r3, r3, r4
 8011a14:	8003      	strh	r3, [r0, #0]
 8011a16:	800a      	strh	r2, [r1, #0]
 8011a18:	bd10      	pop	{r4, pc}
 8011a1a:	bf00      	nop
 8011a1c:	200152e4 	.word	0x200152e4
 8011a20:	200152e0 	.word	0x200152e0

08011a24 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8011a24:	b510      	push	{r4, lr}
 8011a26:	4b0a      	ldr	r3, [pc, #40]	@ (8011a50 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8011a28:	781b      	ldrb	r3, [r3, #0]
 8011a2a:	2b01      	cmp	r3, #1
 8011a2c:	d10e      	bne.n	8011a4c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8011a2e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8011a32:	8843      	ldrh	r3, [r0, #2]
 8011a34:	f9b0 4000 	ldrsh.w	r4, [r0]
 8011a38:	8044      	strh	r4, [r0, #2]
 8011a3a:	18ca      	adds	r2, r1, r3
 8011a3c:	4b05      	ldr	r3, [pc, #20]	@ (8011a54 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8011a3e:	881b      	ldrh	r3, [r3, #0]
 8011a40:	1a9b      	subs	r3, r3, r2
 8011a42:	8003      	strh	r3, [r0, #0]
 8011a44:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8011a48:	80c3      	strh	r3, [r0, #6]
 8011a4a:	8081      	strh	r1, [r0, #4]
 8011a4c:	bd10      	pop	{r4, pc}
 8011a4e:	bf00      	nop
 8011a50:	200152e4 	.word	0x200152e4
 8011a54:	200152e0 	.word	0x200152e0

08011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8011a58:	4b08      	ldr	r3, [pc, #32]	@ (8011a7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8011a5a:	781b      	ldrb	r3, [r3, #0]
 8011a5c:	2b01      	cmp	r3, #1
 8011a5e:	d10c      	bne.n	8011a7a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8011a60:	8803      	ldrh	r3, [r0, #0]
 8011a62:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8011a66:	8842      	ldrh	r2, [r0, #2]
 8011a68:	8002      	strh	r2, [r0, #0]
 8011a6a:	185a      	adds	r2, r3, r1
 8011a6c:	4b04      	ldr	r3, [pc, #16]	@ (8011a80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8011a6e:	881b      	ldrh	r3, [r3, #0]
 8011a70:	1a9b      	subs	r3, r3, r2
 8011a72:	8043      	strh	r3, [r0, #2]
 8011a74:	88c3      	ldrh	r3, [r0, #6]
 8011a76:	8083      	strh	r3, [r0, #4]
 8011a78:	80c1      	strh	r1, [r0, #6]
 8011a7a:	4770      	bx	lr
 8011a7c:	200152e4 	.word	0x200152e4
 8011a80:	200152e0 	.word	0x200152e0

08011a84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8011a84:	b510      	push	{r4, lr}
 8011a86:	4b07      	ldr	r3, [pc, #28]	@ (8011aa4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8011a88:	781b      	ldrb	r3, [r3, #0]
 8011a8a:	2b01      	cmp	r3, #1
 8011a8c:	d108      	bne.n	8011aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8011a8e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8011a92:	f9b0 4000 	ldrsh.w	r4, [r0]
 8011a96:	8003      	strh	r3, [r0, #0]
 8011a98:	8893      	ldrh	r3, [r2, #4]
 8011a9a:	3b01      	subs	r3, #1
 8011a9c:	1b1b      	subs	r3, r3, r4
 8011a9e:	800b      	strh	r3, [r1, #0]
 8011aa0:	bd10      	pop	{r4, pc}
 8011aa2:	bf00      	nop
 8011aa4:	200152e4 	.word	0x200152e4

08011aa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8011aa8:	b510      	push	{r4, lr}
 8011aaa:	4b0a      	ldr	r3, [pc, #40]	@ (8011ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8011aac:	781b      	ldrb	r3, [r3, #0]
 8011aae:	2b01      	cmp	r3, #1
 8011ab0:	460a      	mov	r2, r1
 8011ab2:	d10d      	bne.n	8011ad0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8011ab4:	8881      	ldrh	r1, [r0, #4]
 8011ab6:	8803      	ldrh	r3, [r0, #0]
 8011ab8:	440b      	add	r3, r1
 8011aba:	4601      	mov	r1, r0
 8011abc:	3b01      	subs	r3, #1
 8011abe:	f821 3b02 	strh.w	r3, [r1], #2
 8011ac2:	f7ff ffdf 	bl	8011a84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8011ac6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8011aca:	88c2      	ldrh	r2, [r0, #6]
 8011acc:	8082      	strh	r2, [r0, #4]
 8011ace:	80c3      	strh	r3, [r0, #6]
 8011ad0:	bd10      	pop	{r4, pc}
 8011ad2:	bf00      	nop
 8011ad4:	200152e4 	.word	0x200152e4

08011ad8 <_ZN8touchgfx11Application13requestRedrawEv>:
 8011ad8:	4b06      	ldr	r3, [pc, #24]	@ (8011af4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8011ada:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011ade:	4b06      	ldr	r3, [pc, #24]	@ (8011af8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8011ae0:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 8011ae4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011ae8:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 8011aec:	2100      	movs	r1, #0
 8011aee:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 8011af2:	4770      	bx	lr
 8011af4:	200152e0 	.word	0x200152e0
 8011af8:	200152e2 	.word	0x200152e2

08011afc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8011afc:	4b03      	ldr	r3, [pc, #12]	@ (8011b0c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8011afe:	6818      	ldr	r0, [r3, #0]
 8011b00:	b110      	cbz	r0, 8011b08 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8011b02:	6803      	ldr	r3, [r0, #0]
 8011b04:	699b      	ldr	r3, [r3, #24]
 8011b06:	4718      	bx	r3
 8011b08:	4770      	bx	lr
 8011b0a:	bf00      	nop
 8011b0c:	20015330 	.word	0x20015330

08011b10 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8011b10:	4770      	bx	lr
	...

08011b14 <_ZN8touchgfx11Application4drawEv>:
 8011b14:	b507      	push	{r0, r1, r2, lr}
 8011b16:	4b09      	ldr	r3, [pc, #36]	@ (8011b3c <_ZN8touchgfx11Application4drawEv+0x28>)
 8011b18:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011b1c:	4b08      	ldr	r3, [pc, #32]	@ (8011b40 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8011b1e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011b22:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011b26:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011b2a:	6803      	ldr	r3, [r0, #0]
 8011b2c:	2100      	movs	r1, #0
 8011b2e:	9100      	str	r1, [sp, #0]
 8011b30:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011b32:	4669      	mov	r1, sp
 8011b34:	4798      	blx	r3
 8011b36:	b003      	add	sp, #12
 8011b38:	f85d fb04 	ldr.w	pc, [sp], #4
 8011b3c:	200152e0 	.word	0x200152e0
 8011b40:	200152e2 	.word	0x200152e2

08011b44 <_ZN8touchgfx11Application10invalidateEv>:
 8011b44:	4b09      	ldr	r3, [pc, #36]	@ (8011b6c <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8011b46:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011b4a:	4b09      	ldr	r3, [pc, #36]	@ (8011b70 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8011b4c:	b082      	sub	sp, #8
 8011b4e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011b52:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011b56:	2100      	movs	r1, #0
 8011b58:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011b5c:	9100      	str	r1, [sp, #0]
 8011b5e:	6803      	ldr	r3, [r0, #0]
 8011b60:	aa02      	add	r2, sp, #8
 8011b62:	e912 0006 	ldmdb	r2, {r1, r2}
 8011b66:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8011b68:	b002      	add	sp, #8
 8011b6a:	4718      	bx	r3
 8011b6c:	200152e0 	.word	0x200152e0
 8011b70:	200152e2 	.word	0x200152e2

08011b74 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8011b74:	4b03      	ldr	r3, [pc, #12]	@ (8011b84 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8011b76:	6818      	ldr	r0, [r3, #0]
 8011b78:	b110      	cbz	r0, 8011b80 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8011b7a:	6803      	ldr	r3, [r0, #0]
 8011b7c:	69db      	ldr	r3, [r3, #28]
 8011b7e:	4718      	bx	r3
 8011b80:	4770      	bx	lr
 8011b82:	bf00      	nop
 8011b84:	20015330 	.word	0x20015330

08011b88 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8011b88:	4b03      	ldr	r3, [pc, #12]	@ (8011b98 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8011b8a:	6818      	ldr	r0, [r3, #0]
 8011b8c:	b110      	cbz	r0, 8011b94 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8011b8e:	6803      	ldr	r3, [r0, #0]
 8011b90:	6a1b      	ldr	r3, [r3, #32]
 8011b92:	4718      	bx	r3
 8011b94:	4770      	bx	lr
 8011b96:	bf00      	nop
 8011b98:	20015330 	.word	0x20015330

08011b9c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8011b9c:	2300      	movs	r3, #0
 8011b9e:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 8011ba2:	4770      	bx	lr

08011ba4 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8011ba4:	4b03      	ldr	r3, [pc, #12]	@ (8011bb4 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8011ba6:	6818      	ldr	r0, [r3, #0]
 8011ba8:	b110      	cbz	r0, 8011bb0 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8011baa:	6803      	ldr	r3, [r0, #0]
 8011bac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011bae:	4718      	bx	r3
 8011bb0:	4770      	bx	lr
 8011bb2:	bf00      	nop
 8011bb4:	20015330 	.word	0x20015330

08011bb8 <_ZN8touchgfx11ApplicationD1Ev>:
 8011bb8:	4770      	bx	lr

08011bba <_ZN8touchgfx11ApplicationD0Ev>:
 8011bba:	b510      	push	{r4, lr}
 8011bbc:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 8011bc0:	4604      	mov	r4, r0
 8011bc2:	f012 feb2 	bl	802492a <_ZdlPvj>
 8011bc6:	4620      	mov	r0, r4
 8011bc8:	bd10      	pop	{r4, pc}

08011bca <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8011bca:	b510      	push	{r4, lr}
 8011bcc:	f9b1 4000 	ldrsh.w	r4, [r1]
 8011bd0:	888a      	ldrh	r2, [r1, #4]
 8011bd2:	f9b0 3000 	ldrsh.w	r3, [r0]
 8011bd6:	4422      	add	r2, r4
 8011bd8:	b212      	sxth	r2, r2
 8011bda:	4293      	cmp	r3, r2
 8011bdc:	da15      	bge.n	8011c0a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8011bde:	8882      	ldrh	r2, [r0, #4]
 8011be0:	4413      	add	r3, r2
 8011be2:	b21b      	sxth	r3, r3
 8011be4:	429c      	cmp	r4, r3
 8011be6:	da10      	bge.n	8011c0a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8011be8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8011bec:	88c9      	ldrh	r1, [r1, #6]
 8011bee:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8011bf2:	4419      	add	r1, r3
 8011bf4:	b209      	sxth	r1, r1
 8011bf6:	428a      	cmp	r2, r1
 8011bf8:	da07      	bge.n	8011c0a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8011bfa:	88c0      	ldrh	r0, [r0, #6]
 8011bfc:	4410      	add	r0, r2
 8011bfe:	b200      	sxth	r0, r0
 8011c00:	4283      	cmp	r3, r0
 8011c02:	bfac      	ite	ge
 8011c04:	2000      	movge	r0, #0
 8011c06:	2001      	movlt	r0, #1
 8011c08:	bd10      	pop	{r4, pc}
 8011c0a:	2000      	movs	r0, #0
 8011c0c:	e7fc      	b.n	8011c08 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08011c0e <_ZN8touchgfx4Rect10restrictToEss>:
 8011c0e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8011c12:	2b00      	cmp	r3, #0
 8011c14:	b510      	push	{r4, lr}
 8011c16:	da04      	bge.n	8011c22 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8011c18:	8884      	ldrh	r4, [r0, #4]
 8011c1a:	4423      	add	r3, r4
 8011c1c:	8083      	strh	r3, [r0, #4]
 8011c1e:	2300      	movs	r3, #0
 8011c20:	8003      	strh	r3, [r0, #0]
 8011c22:	f9b0 4000 	ldrsh.w	r4, [r0]
 8011c26:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8011c2a:	1b09      	subs	r1, r1, r4
 8011c2c:	428b      	cmp	r3, r1
 8011c2e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8011c32:	bfc8      	it	gt
 8011c34:	8081      	strhgt	r1, [r0, #4]
 8011c36:	2b00      	cmp	r3, #0
 8011c38:	da04      	bge.n	8011c44 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8011c3a:	88c1      	ldrh	r1, [r0, #6]
 8011c3c:	440b      	add	r3, r1
 8011c3e:	80c3      	strh	r3, [r0, #6]
 8011c40:	2300      	movs	r3, #0
 8011c42:	8043      	strh	r3, [r0, #2]
 8011c44:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8011c48:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8011c4c:	1a52      	subs	r2, r2, r1
 8011c4e:	4293      	cmp	r3, r2
 8011c50:	bfc8      	it	gt
 8011c52:	80c2      	strhgt	r2, [r0, #6]
 8011c54:	bd10      	pop	{r4, pc}
	...

08011c58 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8011c58:	b510      	push	{r4, lr}
 8011c5a:	4b10      	ldr	r3, [pc, #64]	@ (8011c9c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8011c5c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011c60:	4b0f      	ldr	r3, [pc, #60]	@ (8011ca0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8011c62:	460c      	mov	r4, r1
 8011c64:	4620      	mov	r0, r4
 8011c66:	f9b3 1000 	ldrsh.w	r1, [r3]
 8011c6a:	f7ff ffd0 	bl	8011c0e <_ZN8touchgfx4Rect10restrictToEss>
 8011c6e:	4b0d      	ldr	r3, [pc, #52]	@ (8011ca4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8011c70:	6818      	ldr	r0, [r3, #0]
 8011c72:	b190      	cbz	r0, 8011c9a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8011c74:	6803      	ldr	r3, [r0, #0]
 8011c76:	4621      	mov	r1, r4
 8011c78:	689b      	ldr	r3, [r3, #8]
 8011c7a:	4798      	blx	r3
 8011c7c:	4b0a      	ldr	r3, [pc, #40]	@ (8011ca8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8011c7e:	6818      	ldr	r0, [r3, #0]
 8011c80:	b118      	cbz	r0, 8011c8a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8011c82:	6803      	ldr	r3, [r0, #0]
 8011c84:	4621      	mov	r1, r4
 8011c86:	689b      	ldr	r3, [r3, #8]
 8011c88:	4798      	blx	r3
 8011c8a:	4b08      	ldr	r3, [pc, #32]	@ (8011cac <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8011c8c:	6818      	ldr	r0, [r3, #0]
 8011c8e:	6803      	ldr	r3, [r0, #0]
 8011c90:	4621      	mov	r1, r4
 8011c92:	69db      	ldr	r3, [r3, #28]
 8011c94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011c98:	4718      	bx	r3
 8011c9a:	bd10      	pop	{r4, pc}
 8011c9c:	200152e2 	.word	0x200152e2
 8011ca0:	200152e0 	.word	0x200152e0
 8011ca4:	20015330 	.word	0x20015330
 8011ca8:	2001532c 	.word	0x2001532c
 8011cac:	200152ec 	.word	0x200152ec

08011cb0 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8011cb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011cb2:	4606      	mov	r6, r0
 8011cb4:	4608      	mov	r0, r1
 8011cb6:	460f      	mov	r7, r1
 8011cb8:	f7fa fd3b 	bl	800c732 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011cbc:	b9e8      	cbnz	r0, 8011cfa <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011cbe:	f9b7 5000 	ldrsh.w	r5, [r7]
 8011cc2:	f9b6 4000 	ldrsh.w	r4, [r6]
 8011cc6:	42a5      	cmp	r5, r4
 8011cc8:	db17      	blt.n	8011cfa <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011cca:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8011cce:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8011cd2:	429a      	cmp	r2, r3
 8011cd4:	db11      	blt.n	8011cfa <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011cd6:	88b9      	ldrh	r1, [r7, #4]
 8011cd8:	440d      	add	r5, r1
 8011cda:	88b1      	ldrh	r1, [r6, #4]
 8011cdc:	440c      	add	r4, r1
 8011cde:	b22d      	sxth	r5, r5
 8011ce0:	b224      	sxth	r4, r4
 8011ce2:	42a5      	cmp	r5, r4
 8011ce4:	dc09      	bgt.n	8011cfa <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011ce6:	88f8      	ldrh	r0, [r7, #6]
 8011ce8:	4410      	add	r0, r2
 8011cea:	88f2      	ldrh	r2, [r6, #6]
 8011cec:	4413      	add	r3, r2
 8011cee:	b200      	sxth	r0, r0
 8011cf0:	b21b      	sxth	r3, r3
 8011cf2:	4298      	cmp	r0, r3
 8011cf4:	bfcc      	ite	gt
 8011cf6:	2000      	movgt	r0, #0
 8011cf8:	2001      	movle	r0, #1
 8011cfa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08011cfc <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8011cfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011cfe:	4604      	mov	r4, r0
 8011d00:	4608      	mov	r0, r1
 8011d02:	460d      	mov	r5, r1
 8011d04:	f7fa fd15 	bl	800c732 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011d08:	b978      	cbnz	r0, 8011d2a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8011d0a:	4620      	mov	r0, r4
 8011d0c:	f7fa fd11 	bl	800c732 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011d10:	f9b5 6000 	ldrsh.w	r6, [r5]
 8011d14:	b150      	cbz	r0, 8011d2c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8011d16:	8026      	strh	r6, [r4, #0]
 8011d18:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8011d1c:	8063      	strh	r3, [r4, #2]
 8011d1e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8011d22:	80a3      	strh	r3, [r4, #4]
 8011d24:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8011d28:	80e3      	strh	r3, [r4, #6]
 8011d2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011d2c:	f9b4 1000 	ldrsh.w	r1, [r4]
 8011d30:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8011d34:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8011d38:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8011d3c:	88ed      	ldrh	r5, [r5, #6]
 8011d3e:	42b1      	cmp	r1, r6
 8011d40:	460f      	mov	r7, r1
 8011d42:	bfa8      	it	ge
 8011d44:	4637      	movge	r7, r6
 8011d46:	4293      	cmp	r3, r2
 8011d48:	4618      	mov	r0, r3
 8011d4a:	4466      	add	r6, ip
 8011d4c:	bfa8      	it	ge
 8011d4e:	4610      	movge	r0, r2
 8011d50:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8011d54:	8027      	strh	r7, [r4, #0]
 8011d56:	442a      	add	r2, r5
 8011d58:	88e5      	ldrh	r5, [r4, #6]
 8011d5a:	8060      	strh	r0, [r4, #2]
 8011d5c:	4461      	add	r1, ip
 8011d5e:	442b      	add	r3, r5
 8011d60:	b236      	sxth	r6, r6
 8011d62:	b209      	sxth	r1, r1
 8011d64:	b212      	sxth	r2, r2
 8011d66:	b21b      	sxth	r3, r3
 8011d68:	428e      	cmp	r6, r1
 8011d6a:	bfac      	ite	ge
 8011d6c:	ebc7 0106 	rsbge	r1, r7, r6
 8011d70:	ebc7 0101 	rsblt	r1, r7, r1
 8011d74:	429a      	cmp	r2, r3
 8011d76:	bfac      	ite	ge
 8011d78:	ebc0 0202 	rsbge	r2, r0, r2
 8011d7c:	ebc0 0203 	rsblt	r2, r0, r3
 8011d80:	80a1      	strh	r1, [r4, #4]
 8011d82:	80e2      	strh	r2, [r4, #6]
 8011d84:	e7d1      	b.n	8011d2a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08011d88 <_ZN8touchgfx11Application11getInstanceEv>:
 8011d88:	4b01      	ldr	r3, [pc, #4]	@ (8011d90 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8011d8a:	6818      	ldr	r0, [r3, #0]
 8011d8c:	4770      	bx	lr
 8011d8e:	bf00      	nop
 8011d90:	20015340 	.word	0x20015340

08011d94 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8011d94:	b510      	push	{r4, lr}
 8011d96:	2300      	movs	r3, #0
 8011d98:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 8011d9c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8011da0:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8011da4:	4604      	mov	r4, r0
 8011da6:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8011daa:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 8011dae:	429a      	cmp	r2, r3
 8011db0:	d90e      	bls.n	8011dd0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8011db2:	18e2      	adds	r2, r4, r3
 8011db4:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 8011db8:	b122      	cbz	r2, 8011dc4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8011dba:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8011dbe:	6803      	ldr	r3, [r0, #0]
 8011dc0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011dc2:	4798      	blx	r3
 8011dc4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8011dc8:	3301      	adds	r3, #1
 8011dca:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 8011dce:	e7ea      	b.n	8011da6 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8011dd0:	bd10      	pop	{r4, pc}

08011dd2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8011dd2:	2300      	movs	r3, #0
 8011dd4:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 8011dd8:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 8011ddc:	30a4      	adds	r0, #164	@ 0xa4
 8011dde:	f802 3b01 	strb.w	r3, [r2], #1
 8011de2:	4282      	cmp	r2, r0
 8011de4:	d1fb      	bne.n	8011dde <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8011de6:	4770      	bx	lr

08011de8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8011de8:	b570      	push	{r4, r5, r6, lr}
 8011dea:	4c0b      	ldr	r4, [pc, #44]	@ (8011e18 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8011dec:	4605      	mov	r5, r0
 8011dee:	6820      	ldr	r0, [r4, #0]
 8011df0:	460e      	mov	r6, r1
 8011df2:	b110      	cbz	r0, 8011dfa <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8011df4:	6803      	ldr	r3, [r0, #0]
 8011df6:	695b      	ldr	r3, [r3, #20]
 8011df8:	4798      	blx	r3
 8011dfa:	1d28      	adds	r0, r5, #4
 8011dfc:	f7ff ffe9 	bl	8011dd2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8011e00:	6026      	str	r6, [r4, #0]
 8011e02:	6833      	ldr	r3, [r6, #0]
 8011e04:	4630      	mov	r0, r6
 8011e06:	68db      	ldr	r3, [r3, #12]
 8011e08:	4798      	blx	r3
 8011e0a:	682b      	ldr	r3, [r5, #0]
 8011e0c:	4628      	mov	r0, r5
 8011e0e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011e10:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011e14:	4718      	bx	r3
 8011e16:	bf00      	nop
 8011e18:	20015330 	.word	0x20015330

08011e1c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8011e1c:	2300      	movs	r3, #0
 8011e1e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 8011e22:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 8011e26:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011e28:	461a      	mov	r2, r3
 8011e2a:	461c      	mov	r4, r3
 8011e2c:	461d      	mov	r5, r3
 8011e2e:	459c      	cmp	ip, r3
 8011e30:	dd1a      	ble.n	8011e68 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8011e32:	18c6      	adds	r6, r0, r3
 8011e34:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 8011e38:	b16e      	cbz	r6, 8011e56 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8011e3a:	429a      	cmp	r2, r3
 8011e3c:	d008      	beq.n	8011e50 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8011e3e:	fa1f fe82 	uxth.w	lr, r2
 8011e42:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8011e46:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8011e4a:	1887      	adds	r7, r0, r2
 8011e4c:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 8011e50:	3201      	adds	r2, #1
 8011e52:	3301      	adds	r3, #1
 8011e54:	e7eb      	b.n	8011e2e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8011e56:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 8011e5a:	4299      	cmp	r1, r3
 8011e5c:	bfa8      	it	ge
 8011e5e:	3501      	addge	r5, #1
 8011e60:	429e      	cmp	r6, r3
 8011e62:	bfc8      	it	gt
 8011e64:	3401      	addgt	r4, #1
 8011e66:	e7f4      	b.n	8011e52 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8011e68:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 8011e6c:	1b49      	subs	r1, r1, r5
 8011e6e:	1b1b      	subs	r3, r3, r4
 8011e70:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 8011e74:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8011e78:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8011e7c:	4293      	cmp	r3, r2
 8011e7e:	dd03      	ble.n	8011e88 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8011e80:	3b01      	subs	r3, #1
 8011e82:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 8011e86:	e7f7      	b.n	8011e78 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8011e88:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08011e8c <_ZN8touchgfx11Application15handleTickEventEv>:
 8011e8c:	b570      	push	{r4, r5, r6, lr}
 8011e8e:	4d16      	ldr	r5, [pc, #88]	@ (8011ee8 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8011e90:	4604      	mov	r4, r0
 8011e92:	6828      	ldr	r0, [r5, #0]
 8011e94:	b140      	cbz	r0, 8011ea8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8011e96:	7a03      	ldrb	r3, [r0, #8]
 8011e98:	b933      	cbnz	r3, 8011ea8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8011e9a:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 8011e9e:	6803      	ldr	r3, [r0, #0]
 8011ea0:	689b      	ldr	r3, [r3, #8]
 8011ea2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011ea6:	4718      	bx	r3
 8011ea8:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 8011eac:	4e0f      	ldr	r6, [pc, #60]	@ (8011eec <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8011eae:	b973      	cbnz	r3, 8011ece <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8011eb0:	b168      	cbz	r0, 8011ece <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8011eb2:	7a03      	ldrb	r3, [r0, #8]
 8011eb4:	b15b      	cbz	r3, 8011ece <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8011eb6:	6830      	ldr	r0, [r6, #0]
 8011eb8:	b110      	cbz	r0, 8011ec0 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8011eba:	6803      	ldr	r3, [r0, #0]
 8011ebc:	691b      	ldr	r3, [r3, #16]
 8011ebe:	4798      	blx	r3
 8011ec0:	6828      	ldr	r0, [r5, #0]
 8011ec2:	6803      	ldr	r3, [r0, #0]
 8011ec4:	68db      	ldr	r3, [r3, #12]
 8011ec6:	4798      	blx	r3
 8011ec8:	2301      	movs	r3, #1
 8011eca:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 8011ece:	3404      	adds	r4, #4
 8011ed0:	4620      	mov	r0, r4
 8011ed2:	f7ff ff5f 	bl	8011d94 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8011ed6:	4620      	mov	r0, r4
 8011ed8:	f7ff ffa0 	bl	8011e1c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8011edc:	6830      	ldr	r0, [r6, #0]
 8011ede:	b110      	cbz	r0, 8011ee6 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8011ee0:	6803      	ldr	r3, [r0, #0]
 8011ee2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8011ee4:	e7dd      	b.n	8011ea2 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8011ee6:	bd70      	pop	{r4, r5, r6, pc}
 8011ee8:	20015334 	.word	0x20015334
 8011eec:	20015330 	.word	0x20015330

08011ef0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8011ef0:	4603      	mov	r3, r0
 8011ef2:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 8011ef6:	2200      	movs	r2, #0
 8011ef8:	801a      	strh	r2, [r3, #0]
 8011efa:	805a      	strh	r2, [r3, #2]
 8011efc:	809a      	strh	r2, [r3, #4]
 8011efe:	80da      	strh	r2, [r3, #6]
 8011f00:	3308      	adds	r3, #8
 8011f02:	428b      	cmp	r3, r1
 8011f04:	d1f8      	bne.n	8011ef8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8011f06:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 8011f0a:	4770      	bx	lr

08011f0c <_ZN8touchgfx11ApplicationC1Ev>:
 8011f0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011f0e:	4606      	mov	r6, r0
 8011f10:	4b1c      	ldr	r3, [pc, #112]	@ (8011f84 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8011f12:	f846 3b04 	str.w	r3, [r6], #4
 8011f16:	4604      	mov	r4, r0
 8011f18:	2500      	movs	r5, #0
 8011f1a:	22a8      	movs	r2, #168	@ 0xa8
 8011f1c:	2100      	movs	r1, #0
 8011f1e:	4630      	mov	r0, r6
 8011f20:	f013 fe47 	bl	8025bb2 <memset>
 8011f24:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 8011f28:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8011f2c:	f7ff ffe0 	bl	8011ef0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011f30:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8011f34:	f7ff ffdc 	bl	8011ef0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011f38:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 8011f3c:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 8011f40:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 8011f44:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 8011f48:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 8011f4c:	490e      	ldr	r1, [pc, #56]	@ (8011f88 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8011f4e:	480f      	ldr	r0, [pc, #60]	@ (8011f8c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8011f50:	4f0f      	ldr	r7, [pc, #60]	@ (8011f90 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8011f52:	f011 fe75 	bl	8023c40 <CRC_Lock>
 8011f56:	4b0f      	ldr	r3, [pc, #60]	@ (8011f94 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8011f58:	b158      	cbz	r0, 8011f72 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8011f5a:	801d      	strh	r5, [r3, #0]
 8011f5c:	4a0e      	ldr	r2, [pc, #56]	@ (8011f98 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8011f5e:	2300      	movs	r3, #0
 8011f60:	6013      	str	r3, [r2, #0]
 8011f62:	4a0e      	ldr	r2, [pc, #56]	@ (8011f9c <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8011f64:	603b      	str	r3, [r7, #0]
 8011f66:	4630      	mov	r0, r6
 8011f68:	6013      	str	r3, [r2, #0]
 8011f6a:	f7ff ff32 	bl	8011dd2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8011f6e:	4620      	mov	r0, r4
 8011f70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011f72:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8011f76:	2002      	movs	r0, #2
 8011f78:	801a      	strh	r2, [r3, #0]
 8011f7a:	6038      	str	r0, [r7, #0]
 8011f7c:	f001 ff40 	bl	8013e00 <_ZN8touchgfx6Screen4drawEv>
 8011f80:	e7ec      	b.n	8011f5c <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8011f82:	bf00      	nop
 8011f84:	08028c24 	.word	0x08028c24
 8011f88:	b5e8b5cd 	.word	0xb5e8b5cd
 8011f8c:	f407a5c2 	.word	0xf407a5c2
 8011f90:	20015330 	.word	0x20015330
 8011f94:	20000084 	.word	0x20000084
 8011f98:	20015340 	.word	0x20015340
 8011f9c:	20015334 	.word	0x20015334

08011fa0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8011fa0:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 8011fa4:	3b01      	subs	r3, #1
 8011fa6:	b29b      	uxth	r3, r3
 8011fa8:	428b      	cmp	r3, r1
 8011faa:	b510      	push	{r4, lr}
 8011fac:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 8011fb0:	d908      	bls.n	8011fc4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8011fb2:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8011fb6:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8011fba:	681a      	ldr	r2, [r3, #0]
 8011fbc:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8011fc0:	685a      	ldr	r2, [r3, #4]
 8011fc2:	6062      	str	r2, [r4, #4]
 8011fc4:	bd10      	pop	{r4, pc}
	...

08011fc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8011fc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011fcc:	4b92      	ldr	r3, [pc, #584]	@ (8012218 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
 8011fce:	b08f      	sub	sp, #60	@ 0x3c
 8011fd0:	ac0a      	add	r4, sp, #40	@ 0x28
 8011fd2:	e884 0006 	stmia.w	r4, {r1, r2}
 8011fd6:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011fda:	4b90      	ldr	r3, [pc, #576]	@ (801221c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
 8011fdc:	4683      	mov	fp, r0
 8011fde:	f9b3 1000 	ldrsh.w	r1, [r3]
 8011fe2:	4620      	mov	r0, r4
 8011fe4:	f7ff fe13 	bl	8011c0e <_ZN8touchgfx4Rect10restrictToEss>
 8011fe8:	4620      	mov	r0, r4
 8011fea:	f7fa fba2 	bl	800c732 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011fee:	2800      	cmp	r0, #0
 8011ff0:	d170      	bne.n	80120d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 8011ff2:	4b8b      	ldr	r3, [pc, #556]	@ (8012220 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 8011ff4:	681b      	ldr	r3, [r3, #0]
 8011ff6:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8011ffa:	2b02      	cmp	r3, #2
 8011ffc:	d06a      	beq.n	80120d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 8011ffe:	9403      	str	r4, [sp, #12]
 8012000:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8012004:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8012008:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 801200c:	35a4      	adds	r5, #164	@ 0xa4
 801200e:	9301      	str	r3, [sp, #4]
 8012010:	b15c      	cbz	r4, 801202a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 8012012:	4629      	mov	r1, r5
 8012014:	9803      	ldr	r0, [sp, #12]
 8012016:	f7ff fe4b 	bl	8011cb0 <_ZNK8touchgfx4Rect8includesERKS0_>
 801201a:	3c01      	subs	r4, #1
 801201c:	b118      	cbz	r0, 8012026 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 801201e:	b2a1      	uxth	r1, r4
 8012020:	9801      	ldr	r0, [sp, #4]
 8012022:	f7ff ffbd 	bl	8011fa0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012026:	3d08      	subs	r5, #8
 8012028:	e7f2      	b.n	8012010 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 801202a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 801202e:	f8cd a010 	str.w	sl, [sp, #16]
 8012032:	f10a 33ff 	add.w	r3, sl, #4294967295
 8012036:	9302      	str	r3, [sp, #8]
 8012038:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801203c:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 8012040:	9306      	str	r3, [sp, #24]
 8012042:	445c      	add	r4, fp
 8012044:	2500      	movs	r5, #0
 8012046:	4626      	mov	r6, r4
 8012048:	f8cd a014 	str.w	sl, [sp, #20]
 801204c:	462f      	mov	r7, r5
 801204e:	9b05      	ldr	r3, [sp, #20]
 8012050:	2b00      	cmp	r3, #0
 8012052:	d073      	beq.n	801213c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
 8012054:	9903      	ldr	r1, [sp, #12]
 8012056:	4630      	mov	r0, r6
 8012058:	f7ff fdb7 	bl	8011bca <_ZNK8touchgfx4Rect9intersectERKS0_>
 801205c:	b350      	cbz	r0, 80120b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 801205e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 8012062:	f9b6 c000 	ldrsh.w	ip, [r6]
 8012066:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 801206a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801206e:	45e6      	cmp	lr, ip
 8012070:	db33      	blt.n	80120da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 8012072:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8012076:	88b3      	ldrh	r3, [r6, #4]
 8012078:	4472      	add	r2, lr
 801207a:	4463      	add	r3, ip
 801207c:	b212      	sxth	r2, r2
 801207e:	b21b      	sxth	r3, r3
 8012080:	429a      	cmp	r2, r3
 8012082:	dc2a      	bgt.n	80120da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 8012084:	88f3      	ldrh	r3, [r6, #6]
 8012086:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 801208a:	fa1f f289 	uxth.w	r2, r9
 801208e:	4413      	add	r3, r2
 8012090:	b29b      	uxth	r3, r3
 8012092:	45c8      	cmp	r8, r9
 8012094:	fa1f fc88 	uxth.w	ip, r8
 8012098:	fa0f fe83 	sxth.w	lr, r3
 801209c:	db0f      	blt.n	80120be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
 801209e:	eba3 030c 	sub.w	r3, r3, ip
 80120a2:	1ac9      	subs	r1, r1, r3
 80120a4:	b209      	sxth	r1, r1
 80120a6:	2900      	cmp	r1, #0
 80120a8:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80120ac:	dd12      	ble.n	80120d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 80120ae:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 80120b2:	4605      	mov	r5, r0
 80120b4:	9b05      	ldr	r3, [sp, #20]
 80120b6:	3b01      	subs	r3, #1
 80120b8:	9305      	str	r3, [sp, #20]
 80120ba:	3e08      	subs	r6, #8
 80120bc:	e7c7      	b.n	801204e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
 80120be:	4461      	add	r1, ip
 80120c0:	b209      	sxth	r1, r1
 80120c2:	4571      	cmp	r1, lr
 80120c4:	dc38      	bgt.n	8012138 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 80120c6:	eba2 020c 	sub.w	r2, r2, ip
 80120ca:	b212      	sxth	r2, r2
 80120cc:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80120d0:	2a00      	cmp	r2, #0
 80120d2:	dcee      	bgt.n	80120b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 80120d4:	b00f      	add	sp, #60	@ 0x3c
 80120d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80120da:	45c8      	cmp	r8, r9
 80120dc:	db2c      	blt.n	8012138 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 80120de:	88f3      	ldrh	r3, [r6, #6]
 80120e0:	4499      	add	r9, r3
 80120e2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 80120e6:	4498      	add	r8, r3
 80120e8:	fa0f f989 	sxth.w	r9, r9
 80120ec:	fa0f f888 	sxth.w	r8, r8
 80120f0:	45c1      	cmp	r9, r8
 80120f2:	db21      	blt.n	8012138 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 80120f4:	88b3      	ldrh	r3, [r6, #4]
 80120f6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 80120fa:	fa1f f28c 	uxth.w	r2, ip
 80120fe:	4413      	add	r3, r2
 8012100:	b29b      	uxth	r3, r3
 8012102:	45e6      	cmp	lr, ip
 8012104:	fa1f f88e 	uxth.w	r8, lr
 8012108:	fa0f f983 	sxth.w	r9, r3
 801210c:	db0a      	blt.n	8012124 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
 801210e:	eba3 0308 	sub.w	r3, r3, r8
 8012112:	1ac9      	subs	r1, r1, r3
 8012114:	b209      	sxth	r1, r1
 8012116:	2900      	cmp	r1, #0
 8012118:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 801211c:	ddda      	ble.n	80120d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 801211e:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8012122:	e7c6      	b.n	80120b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8012124:	4441      	add	r1, r8
 8012126:	b209      	sxth	r1, r1
 8012128:	4549      	cmp	r1, r9
 801212a:	dc05      	bgt.n	8012138 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 801212c:	eba2 0208 	sub.w	r2, r2, r8
 8012130:	b212      	sxth	r2, r2
 8012132:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8012136:	e7cb      	b.n	80120d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
 8012138:	4607      	mov	r7, r0
 801213a:	e7bb      	b.n	80120b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 801213c:	2d00      	cmp	r5, #0
 801213e:	d181      	bne.n	8012044 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
 8012140:	2f00      	cmp	r7, #0
 8012142:	f000 81df 	beq.w	8012504 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8012146:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 801214a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 801214e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 8012152:	b2b3      	uxth	r3, r6
 8012154:	9305      	str	r3, [sp, #20]
 8012156:	9a05      	ldr	r2, [sp, #20]
 8012158:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801215c:	4413      	add	r3, r2
 801215e:	b2ba      	uxth	r2, r7
 8012160:	4492      	add	sl, r2
 8012162:	b29b      	uxth	r3, r3
 8012164:	fa1f fa8a 	uxth.w	sl, sl
 8012168:	fa0f f883 	sxth.w	r8, r3
 801216c:	fa0f f98a 	sxth.w	r9, sl
 8012170:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8012174:	9b04      	ldr	r3, [sp, #16]
 8012176:	2b00      	cmp	r3, #0
 8012178:	d054      	beq.n	8012224 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
 801217a:	9903      	ldr	r1, [sp, #12]
 801217c:	4620      	mov	r0, r4
 801217e:	f7ff fd24 	bl	8011bca <_ZNK8touchgfx4Rect9intersectERKS0_>
 8012182:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8012186:	b1c0      	cbz	r0, 80121ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8012188:	f9b4 e000 	ldrsh.w	lr, [r4]
 801218c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8012190:	4576      	cmp	r6, lr
 8012192:	dc22      	bgt.n	80121da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 8012194:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8012198:	44f4      	add	ip, lr
 801219a:	fa0f fc8c 	sxth.w	ip, ip
 801219e:	45e0      	cmp	r8, ip
 80121a0:	db1b      	blt.n	80121da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 80121a2:	428f      	cmp	r7, r1
 80121a4:	fa1f fc81 	uxth.w	ip, r1
 80121a8:	88e1      	ldrh	r1, [r4, #6]
 80121aa:	dc0d      	bgt.n	80121c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
 80121ac:	ebaa 0c0c 	sub.w	ip, sl, ip
 80121b0:	eba1 010c 	sub.w	r1, r1, ip
 80121b4:	f8a4 9002 	strh.w	r9, [r4, #2]
 80121b8:	80e1      	strh	r1, [r4, #6]
 80121ba:	4628      	mov	r0, r5
 80121bc:	9904      	ldr	r1, [sp, #16]
 80121be:	3901      	subs	r1, #1
 80121c0:	9104      	str	r1, [sp, #16]
 80121c2:	3c08      	subs	r4, #8
 80121c4:	4605      	mov	r5, r0
 80121c6:	e7d3      	b.n	8012170 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
 80121c8:	4461      	add	r1, ip
 80121ca:	b209      	sxth	r1, r1
 80121cc:	4549      	cmp	r1, r9
 80121ce:	dcf5      	bgt.n	80121bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80121d0:	eba2 0c0c 	sub.w	ip, r2, ip
 80121d4:	f8a4 c006 	strh.w	ip, [r4, #6]
 80121d8:	e7ef      	b.n	80121ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 80121da:	428f      	cmp	r7, r1
 80121dc:	dcee      	bgt.n	80121bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80121de:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80121e2:	4461      	add	r1, ip
 80121e4:	b209      	sxth	r1, r1
 80121e6:	4589      	cmp	r9, r1
 80121e8:	dbe8      	blt.n	80121bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80121ea:	4576      	cmp	r6, lr
 80121ec:	fa1f fc8e 	uxth.w	ip, lr
 80121f0:	88a1      	ldrh	r1, [r4, #4]
 80121f2:	dc07      	bgt.n	8012204 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
 80121f4:	eba3 0c0c 	sub.w	ip, r3, ip
 80121f8:	eba1 010c 	sub.w	r1, r1, ip
 80121fc:	f8a4 8000 	strh.w	r8, [r4]
 8012200:	80a1      	strh	r1, [r4, #4]
 8012202:	e7da      	b.n	80121ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8012204:	4461      	add	r1, ip
 8012206:	b209      	sxth	r1, r1
 8012208:	4588      	cmp	r8, r1
 801220a:	dbd7      	blt.n	80121bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801220c:	9905      	ldr	r1, [sp, #20]
 801220e:	eba1 0c0c 	sub.w	ip, r1, ip
 8012212:	f8a4 c004 	strh.w	ip, [r4, #4]
 8012216:	e7d0      	b.n	80121ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8012218:	200152e2 	.word	0x200152e2
 801221c:	200152e0 	.word	0x200152e0
 8012220:	200152ec 	.word	0x200152ec
 8012224:	2d00      	cmp	r5, #0
 8012226:	f000 816d 	beq.w	8012504 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 801222a:	9b06      	ldr	r3, [sp, #24]
 801222c:	445b      	add	r3, fp
 801222e:	461c      	mov	r4, r3
 8012230:	9b02      	ldr	r3, [sp, #8]
 8012232:	3301      	adds	r3, #1
 8012234:	f000 8166 	beq.w	8012504 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8012238:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 801223c:	4629      	mov	r1, r5
 801223e:	9803      	ldr	r0, [sp, #12]
 8012240:	f7ff fd36 	bl	8011cb0 <_ZNK8touchgfx4Rect8includesERKS0_>
 8012244:	b120      	cbz	r0, 8012250 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
 8012246:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801224a:	9801      	ldr	r0, [sp, #4]
 801224c:	f7ff fea8 	bl	8011fa0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012250:	9903      	ldr	r1, [sp, #12]
 8012252:	4628      	mov	r0, r5
 8012254:	f7ff fcb9 	bl	8011bca <_ZNK8touchgfx4Rect9intersectERKS0_>
 8012258:	2800      	cmp	r0, #0
 801225a:	f000 809c 	beq.w	8012396 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 801225e:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 8012262:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8012266:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 801226a:	9309      	str	r3, [sp, #36]	@ 0x24
 801226c:	fa1f f189 	uxth.w	r1, r9
 8012270:	eb01 0c03 	add.w	ip, r1, r3
 8012274:	fa1f fa8c 	uxth.w	sl, ip
 8012278:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801227c:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 8012280:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 8012284:	b283      	uxth	r3, r0
 8012286:	eb03 050c 	add.w	r5, r3, ip
 801228a:	b2ad      	uxth	r5, r5
 801228c:	9505      	str	r5, [sp, #20]
 801228e:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8012292:	9504      	str	r5, [sp, #16]
 8012294:	4548      	cmp	r0, r9
 8012296:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 801229a:	f340 8099 	ble.w	80123d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 801229e:	1a5b      	subs	r3, r3, r1
 80122a0:	b29b      	uxth	r3, r3
 80122a2:	4596      	cmp	lr, r2
 80122a4:	fa0f f08a 	sxth.w	r0, sl
 80122a8:	b21e      	sxth	r6, r3
 80122aa:	dd2e      	ble.n	801230a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
 80122ac:	9f02      	ldr	r7, [sp, #8]
 80122ae:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 80122b2:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 80122b6:	9f04      	ldr	r7, [sp, #16]
 80122b8:	1a3f      	subs	r7, r7, r0
 80122ba:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 80122be:	fa1f fe8e 	uxth.w	lr, lr
 80122c2:	b292      	uxth	r2, r2
 80122c4:	ebae 0102 	sub.w	r1, lr, r2
 80122c8:	44a6      	add	lr, r4
 80122ca:	4402      	add	r2, r0
 80122cc:	b289      	uxth	r1, r1
 80122ce:	fa0f fe8e 	sxth.w	lr, lr
 80122d2:	b212      	sxth	r2, r2
 80122d4:	b20d      	sxth	r5, r1
 80122d6:	ebae 0202 	sub.w	r2, lr, r2
 80122da:	436f      	muls	r7, r5
 80122dc:	4372      	muls	r2, r6
 80122de:	4297      	cmp	r7, r2
 80122e0:	db09      	blt.n	80122f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
 80122e2:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 80122e6:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 80122ea:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80122ee:	449c      	add	ip, r3
 80122f0:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 80122f4:	e684      	b.n	8012000 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 80122f6:	4421      	add	r1, r4
 80122f8:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 80122fc:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 8012300:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8012304:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8012308:	e67a      	b.n	8012000 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801230a:	9f04      	ldr	r7, [sp, #16]
 801230c:	42b8      	cmp	r0, r7
 801230e:	da27      	bge.n	8012360 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
 8012310:	9902      	ldr	r1, [sp, #8]
 8012312:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 8012316:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 801231a:	eb05 010e 	add.w	r1, r5, lr
 801231e:	fa1f f881 	uxth.w	r8, r1
 8012322:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 8012326:	4411      	add	r1, r2
 8012328:	eba1 0108 	sub.w	r1, r1, r8
 801232c:	b289      	uxth	r1, r1
 801232e:	fa0f f988 	sxth.w	r9, r8
 8012332:	eba2 020e 	sub.w	r2, r2, lr
 8012336:	fa0f f881 	sxth.w	r8, r1
 801233a:	1a3f      	subs	r7, r7, r0
 801233c:	4372      	muls	r2, r6
 801233e:	fb08 f707 	mul.w	r7, r8, r7
 8012342:	42ba      	cmp	r2, r7
 8012344:	dc06      	bgt.n	8012354 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
 8012346:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 801234a:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 801234e:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 8012352:	e7ca      	b.n	80122ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 8012354:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 8012358:	4429      	add	r1, r5
 801235a:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801235e:	e64f      	b.n	8012000 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8012360:	9805      	ldr	r0, [sp, #20]
 8012362:	ebaa 0000 	sub.w	r0, sl, r0
 8012366:	b280      	uxth	r0, r0
 8012368:	2d06      	cmp	r5, #6
 801236a:	fa0f fe80 	sxth.w	lr, r0
 801236e:	d817      	bhi.n	80123a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
 8012370:	9b04      	ldr	r3, [sp, #16]
 8012372:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 8012376:	1c6b      	adds	r3, r5, #1
 8012378:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 801237c:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 8012380:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8012384:	9b01      	ldr	r3, [sp, #4]
 8012386:	9801      	ldr	r0, [sp, #4]
 8012388:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801238c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8012390:	805a      	strh	r2, [r3, #2]
 8012392:	809e      	strh	r6, [r3, #4]
 8012394:	80d9      	strh	r1, [r3, #6]
 8012396:	9b02      	ldr	r3, [sp, #8]
 8012398:	3b01      	subs	r3, #1
 801239a:	9302      	str	r3, [sp, #8]
 801239c:	3c08      	subs	r4, #8
 801239e:	e747      	b.n	8012230 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
 80123a0:	9a02      	ldr	r2, [sp, #8]
 80123a2:	45b6      	cmp	lr, r6
 80123a4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80123a8:	db0d      	blt.n	80123c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
 80123aa:	449c      	add	ip, r3
 80123ac:	fa1f fc8c 	uxth.w	ip, ip
 80123b0:	445a      	add	r2, fp
 80123b2:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 80123b6:	448c      	add	ip, r1
 80123b8:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 80123bc:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 80123c0:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 80123c4:	e61c      	b.n	8012000 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 80123c6:	445a      	add	r2, fp
 80123c8:	4484      	add	ip, r0
 80123ca:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 80123ce:	e78f      	b.n	80122f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 80123d0:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 80123d4:	fa1f f18e 	uxth.w	r1, lr
 80123d8:	eb01 0806 	add.w	r8, r1, r6
 80123dc:	b293      	uxth	r3, r2
 80123de:	fa1f f888 	uxth.w	r8, r8
 80123e2:	9306      	str	r3, [sp, #24]
 80123e4:	fa0f f388 	sxth.w	r3, r8
 80123e8:	9307      	str	r3, [sp, #28]
 80123ea:	9f06      	ldr	r7, [sp, #24]
 80123ec:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 80123f0:	443b      	add	r3, r7
 80123f2:	b29b      	uxth	r3, r3
 80123f4:	4596      	cmp	lr, r2
 80123f6:	9308      	str	r3, [sp, #32]
 80123f8:	da24      	bge.n	8012444 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 80123fa:	9905      	ldr	r1, [sp, #20]
 80123fc:	eba3 0308 	sub.w	r3, r3, r8
 8012400:	ebaa 0401 	sub.w	r4, sl, r1
 8012404:	b2a4      	uxth	r4, r4
 8012406:	b29b      	uxth	r3, r3
 8012408:	b225      	sxth	r5, r4
 801240a:	b219      	sxth	r1, r3
 801240c:	eba2 020e 	sub.w	r2, r2, lr
 8012410:	eba9 0000 	sub.w	r0, r9, r0
 8012414:	436a      	muls	r2, r5
 8012416:	4348      	muls	r0, r1
 8012418:	4282      	cmp	r2, r0
 801241a:	9a02      	ldr	r2, [sp, #8]
 801241c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8012420:	445a      	add	r2, fp
 8012422:	dc06      	bgt.n	8012432 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 8012424:	9b07      	ldr	r3, [sp, #28]
 8012426:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 801242a:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 801242e:	44a4      	add	ip, r4
 8012430:	e75e      	b.n	80122f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 8012432:	9904      	ldr	r1, [sp, #16]
 8012434:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 8012438:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 801243c:	4433      	add	r3, r6
 801243e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8012442:	e5dd      	b.n	8012000 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8012444:	9f06      	ldr	r7, [sp, #24]
 8012446:	9b04      	ldr	r3, [sp, #16]
 8012448:	1bc9      	subs	r1, r1, r7
 801244a:	fa0f f78a 	sxth.w	r7, sl
 801244e:	b289      	uxth	r1, r1
 8012450:	429f      	cmp	r7, r3
 8012452:	fa0f fe81 	sxth.w	lr, r1
 8012456:	dd23      	ble.n	80124a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
 8012458:	9a05      	ldr	r2, [sp, #20]
 801245a:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801245e:	9d07      	ldr	r5, [sp, #28]
 8012460:	ebaa 0202 	sub.w	r2, sl, r2
 8012464:	b292      	uxth	r2, r2
 8012466:	eba5 0a03 	sub.w	sl, r5, r3
 801246a:	b214      	sxth	r4, r2
 801246c:	eba9 0000 	sub.w	r0, r9, r0
 8012470:	9b02      	ldr	r3, [sp, #8]
 8012472:	fb0e f000 	mul.w	r0, lr, r0
 8012476:	fb04 fa0a 	mul.w	sl, r4, sl
 801247a:	00db      	lsls	r3, r3, #3
 801247c:	4550      	cmp	r0, sl
 801247e:	445b      	add	r3, fp
 8012480:	db03      	blt.n	801248a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 8012482:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 8012486:	4494      	add	ip, r2
 8012488:	e732      	b.n	80122f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 801248a:	9a04      	ldr	r2, [sp, #16]
 801248c:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 8012490:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 8012494:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 8012498:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801249c:	4431      	add	r1, r6
 801249e:	e75c      	b.n	801235a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
 80124a0:	9b08      	ldr	r3, [sp, #32]
 80124a2:	eba3 0308 	sub.w	r3, r3, r8
 80124a6:	b29b      	uxth	r3, r3
 80124a8:	2d06      	cmp	r5, #6
 80124aa:	b218      	sxth	r0, r3
 80124ac:	d813      	bhi.n	80124d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
 80124ae:	9b07      	ldr	r3, [sp, #28]
 80124b0:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 80124b4:	1c6b      	adds	r3, r5, #1
 80124b6:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 80124ba:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 80124be:	9b01      	ldr	r3, [sp, #4]
 80124c0:	9901      	ldr	r1, [sp, #4]
 80124c2:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80124c6:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 80124ca:	805a      	strh	r2, [r3, #2]
 80124cc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80124ce:	809a      	strh	r2, [r3, #4]
 80124d0:	f8a3 e006 	strh.w	lr, [r3, #6]
 80124d4:	e75f      	b.n	8012396 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 80124d6:	9c02      	ldr	r4, [sp, #8]
 80124d8:	4570      	cmp	r0, lr
 80124da:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80124de:	db0d      	blt.n	80124fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
 80124e0:	4431      	add	r1, r6
 80124e2:	9b06      	ldr	r3, [sp, #24]
 80124e4:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80124e8:	b289      	uxth	r1, r1
 80124ea:	445c      	add	r4, fp
 80124ec:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80124f0:	4419      	add	r1, r3
 80124f2:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 80124f6:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 80124fa:	e581      	b.n	8012000 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 80124fc:	445c      	add	r4, fp
 80124fe:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 8012502:	e79b      	b.n	801243c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 8012504:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8012508:	1e65      	subs	r5, r4, #1
 801250a:	b2ad      	uxth	r5, r5
 801250c:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8012510:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8012514:	42b5      	cmp	r5, r6
 8012516:	d044      	beq.n	80125a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
 8012518:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801251c:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 8012520:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8012524:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 8012528:	4282      	cmp	r2, r0
 801252a:	d11f      	bne.n	801256c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 801252c:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 8012530:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8012534:	459c      	cmp	ip, r3
 8012536:	d119      	bne.n	801256c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 8012538:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 801253c:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8012540:	19d8      	adds	r0, r3, r7
 8012542:	b200      	sxth	r0, r0
 8012544:	4288      	cmp	r0, r1
 8012546:	d109      	bne.n	801255c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8012548:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 801254c:	4413      	add	r3, r2
 801254e:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8012552:	4629      	mov	r1, r5
 8012554:	9801      	ldr	r0, [sp, #4]
 8012556:	f7ff fd23 	bl	8011fa0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801255a:	e003      	b.n	8012564 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 801255c:	4411      	add	r1, r2
 801255e:	b209      	sxth	r1, r1
 8012560:	42b9      	cmp	r1, r7
 8012562:	d0f3      	beq.n	801254c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8012564:	3d01      	subs	r5, #1
 8012566:	b2ad      	uxth	r5, r5
 8012568:	3c08      	subs	r4, #8
 801256a:	e7d3      	b.n	8012514 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
 801256c:	42b9      	cmp	r1, r7
 801256e:	d1f9      	bne.n	8012564 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 8012570:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 8012574:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8012578:	4299      	cmp	r1, r3
 801257a:	d1f3      	bne.n	8012564 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 801257c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8012580:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8012584:	181f      	adds	r7, r3, r0
 8012586:	b23f      	sxth	r7, r7
 8012588:	42ba      	cmp	r2, r7
 801258a:	d105      	bne.n	8012598 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
 801258c:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 8012590:	440b      	add	r3, r1
 8012592:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8012596:	e7dc      	b.n	8012552 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
 8012598:	440a      	add	r2, r1
 801259a:	b212      	sxth	r2, r2
 801259c:	4290      	cmp	r0, r2
 801259e:	d1e1      	bne.n	8012564 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 80125a0:	e7f6      	b.n	8012590 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
 80125a2:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 80125a6:	2e07      	cmp	r6, #7
 80125a8:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80125ac:	d812      	bhi.n	80125d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
 80125ae:	1c75      	adds	r5, r6, #1
 80125b0:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 80125b4:	9d01      	ldr	r5, [sp, #4]
 80125b6:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 80125ba:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 80125be:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80125c2:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 80125c6:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80125ca:	442c      	add	r4, r5
 80125cc:	8061      	strh	r1, [r4, #2]
 80125ce:	80a2      	strh	r2, [r4, #4]
 80125d0:	80e3      	strh	r3, [r4, #6]
 80125d2:	e57f      	b.n	80120d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 80125d4:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 80125d8:	3e01      	subs	r6, #1
 80125da:	445c      	add	r4, fp
 80125dc:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 80125e0:	f04f 37ff 	mov.w	r7, #4294967295
 80125e4:	2500      	movs	r5, #0
 80125e6:	9305      	str	r3, [sp, #20]
 80125e8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 80125ec:	9302      	str	r3, [sp, #8]
 80125ee:	1e72      	subs	r2, r6, #1
 80125f0:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 80125f4:	9304      	str	r3, [sp, #16]
 80125f6:	4691      	mov	r9, r2
 80125f8:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 80125fc:	f1b9 3fff 	cmp.w	r9, #4294967295
 8012600:	bf14      	ite	ne
 8012602:	9905      	ldrne	r1, [sp, #20]
 8012604:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8012608:	6818      	ldr	r0, [r3, #0]
 801260a:	9207      	str	r2, [sp, #28]
 801260c:	bf18      	it	ne
 801260e:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8012612:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8012616:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801261a:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801261e:	9306      	str	r3, [sp, #24]
 8012620:	fb18 f801 	smulbb	r8, r8, r1
 8012624:	6859      	ldr	r1, [r3, #4]
 8012626:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801262a:	4671      	mov	r1, lr
 801262c:	a80c      	add	r0, sp, #48	@ 0x30
 801262e:	f7ff fb65 	bl	8011cfc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8012632:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8012636:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 801263a:	9b04      	ldr	r3, [sp, #16]
 801263c:	9a02      	ldr	r2, [sp, #8]
 801263e:	fb10 f001 	smulbb	r0, r0, r1
 8012642:	fb02 8803 	mla	r8, r2, r3, r8
 8012646:	eba0 0108 	sub.w	r1, r0, r8
 801264a:	f04f 0c08 	mov.w	ip, #8
 801264e:	fb90 f0fc 	sdiv	r0, r0, ip
 8012652:	4288      	cmp	r0, r1
 8012654:	dc20      	bgt.n	8012698 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 8012656:	4551      	cmp	r1, sl
 8012658:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 801265c:	da03      	bge.n	8012666 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69e>
 801265e:	b1d9      	cbz	r1, 8012698 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 8012660:	468a      	mov	sl, r1
 8012662:	464f      	mov	r7, r9
 8012664:	4635      	mov	r5, r6
 8012666:	f109 39ff 	add.w	r9, r9, #4294967295
 801266a:	f119 0f02 	cmn.w	r9, #2
 801266e:	d1c5      	bne.n	80125fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
 8012670:	4616      	mov	r6, r2
 8012672:	3201      	adds	r2, #1
 8012674:	f1a4 0408 	sub.w	r4, r4, #8
 8012678:	d1b6      	bne.n	80125e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
 801267a:	9b01      	ldr	r3, [sp, #4]
 801267c:	b2ac      	uxth	r4, r5
 801267e:	00ed      	lsls	r5, r5, #3
 8012680:	1958      	adds	r0, r3, r5
 8012682:	1c7b      	adds	r3, r7, #1
 8012684:	d10b      	bne.n	801269e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d6>
 8012686:	4601      	mov	r1, r0
 8012688:	9803      	ldr	r0, [sp, #12]
 801268a:	f7ff fb37 	bl	8011cfc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801268e:	4621      	mov	r1, r4
 8012690:	9801      	ldr	r0, [sp, #4]
 8012692:	f7ff fc85 	bl	8011fa0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012696:	e4b3      	b.n	8012000 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8012698:	464f      	mov	r7, r9
 801269a:	4635      	mov	r5, r6
 801269c:	e7ed      	b.n	801267a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b2>
 801269e:	9b01      	ldr	r3, [sp, #4]
 80126a0:	00ff      	lsls	r7, r7, #3
 80126a2:	19d9      	adds	r1, r3, r7
 80126a4:	f7ff fb2a 	bl	8011cfc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80126a8:	9b03      	ldr	r3, [sp, #12]
 80126aa:	cb03      	ldmia	r3!, {r0, r1}
 80126ac:	445f      	add	r7, fp
 80126ae:	445d      	add	r5, fp
 80126b0:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 80126b4:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 80126b8:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80126bc:	9b03      	ldr	r3, [sp, #12]
 80126be:	6869      	ldr	r1, [r5, #4]
 80126c0:	c303      	stmia	r3!, {r0, r1}
 80126c2:	e7e4      	b.n	801268e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>

080126c4 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80126c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80126c8:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 80126cc:	b0a1      	sub	sp, #132	@ 0x84
 80126ce:	4604      	mov	r4, r0
 80126d0:	4630      	mov	r0, r6
 80126d2:	f7fa f82e 	bl	800c732 <_ZNK8touchgfx4Rect7isEmptyEv>
 80126d6:	4605      	mov	r5, r0
 80126d8:	b948      	cbnz	r0, 80126ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80126da:	6823      	ldr	r3, [r4, #0]
 80126dc:	e896 0006 	ldmia.w	r6, {r1, r2}
 80126e0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80126e2:	4620      	mov	r0, r4
 80126e4:	4798      	blx	r3
 80126e6:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 80126ea:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 80126ee:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80126f2:	2b00      	cmp	r3, #0
 80126f4:	d149      	bne.n	801278a <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
 80126f6:	4bb1      	ldr	r3, [pc, #708]	@ (80129bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 80126f8:	681b      	ldr	r3, [r3, #0]
 80126fa:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
 80126fe:	1ebb      	subs	r3, r7, #2
 8012700:	425f      	negs	r7, r3
 8012702:	415f      	adcs	r7, r3
 8012704:	4bae      	ldr	r3, [pc, #696]	@ (80129c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
 8012706:	681b      	ldr	r3, [r3, #0]
 8012708:	2b00      	cmp	r3, #0
 801270a:	d040      	beq.n	801278e <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 801270c:	4dad      	ldr	r5, [pc, #692]	@ (80129c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
 801270e:	4628      	mov	r0, r5
 8012710:	f7fa f80f 	bl	800c732 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012714:	4606      	mov	r6, r0
 8012716:	2800      	cmp	r0, #0
 8012718:	d139      	bne.n	801278e <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 801271a:	4628      	mov	r0, r5
 801271c:	f7ff f982 	bl	8011a24 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8012720:	6823      	ldr	r3, [r4, #0]
 8012722:	6829      	ldr	r1, [r5, #0]
 8012724:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8012726:	686a      	ldr	r2, [r5, #4]
 8012728:	4620      	mov	r0, r4
 801272a:	4798      	blx	r3
 801272c:	802e      	strh	r6, [r5, #0]
 801272e:	806e      	strh	r6, [r5, #2]
 8012730:	80ae      	strh	r6, [r5, #4]
 8012732:	80ee      	strh	r6, [r5, #6]
 8012734:	af0f      	add	r7, sp, #60	@ 0x3c
 8012736:	4ea4      	ldr	r6, [pc, #656]	@ (80129c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
 8012738:	4638      	mov	r0, r7
 801273a:	f7ff fbd9 	bl	8011ef0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801273e:	8835      	ldrh	r5, [r6, #0]
 8012740:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
 8012744:	462b      	mov	r3, r5
 8012746:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 801274a:	4563      	cmp	r3, ip
 801274c:	d224      	bcs.n	8012798 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 801274e:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
 8012752:	2907      	cmp	r1, #7
 8012754:	d816      	bhi.n	8012784 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8012756:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 801275a:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 801275e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8012762:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
 8012766:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
 801276a:	1c4a      	adds	r2, r1, #1
 801276c:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
 8012770:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
 8012774:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
 8012778:	f8a2 a002 	strh.w	sl, [r2, #2]
 801277c:	f8a2 8004 	strh.w	r8, [r2, #4]
 8012780:	f8a2 e006 	strh.w	lr, [r2, #6]
 8012784:	3301      	adds	r3, #1
 8012786:	b29b      	uxth	r3, r3
 8012788:	e7df      	b.n	801274a <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 801278a:	2701      	movs	r7, #1
 801278c:	e7ba      	b.n	8012704 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
 801278e:	2f00      	cmp	r7, #0
 8012790:	d1d0      	bne.n	8012734 <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
 8012792:	b021      	add	sp, #132	@ 0x84
 8012794:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012798:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 801279c:	42ab      	cmp	r3, r5
 801279e:	d90c      	bls.n	80127ba <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
 80127a0:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 80127a4:	6822      	ldr	r2, [r4, #0]
 80127a6:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 80127aa:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 80127ac:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 80127b0:	4620      	mov	r0, r4
 80127b2:	3501      	adds	r5, #1
 80127b4:	47b8      	blx	r7
 80127b6:	b2ad      	uxth	r5, r5
 80127b8:	e7ee      	b.n	8012798 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 80127ba:	4d80      	ldr	r5, [pc, #512]	@ (80129bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 80127bc:	6828      	ldr	r0, [r5, #0]
 80127be:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 80127c2:	2b01      	cmp	r3, #1
 80127c4:	f040 813b 	bne.w	8012a3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x37a>
 80127c8:	4a80      	ldr	r2, [pc, #512]	@ (80129cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
 80127ca:	8833      	ldrh	r3, [r6, #0]
 80127cc:	7812      	ldrb	r2, [r2, #0]
 80127ce:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
 80127d2:	2a01      	cmp	r2, #1
 80127d4:	d014      	beq.n	8012800 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80127d6:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
 80127da:	32ae      	adds	r2, #174	@ 0xae
 80127dc:	f04f 0900 	mov.w	r9, #0
 80127e0:	4283      	cmp	r3, r0
 80127e2:	f102 0208 	add.w	r2, r2, #8
 80127e6:	f280 8082 	bge.w	80128ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 80127ea:	f832 1c04 	ldrh.w	r1, [r2, #-4]
 80127ee:	f832 7c08 	ldrh.w	r7, [r2, #-8]
 80127f2:	4439      	add	r1, r7
 80127f4:	b209      	sxth	r1, r1
 80127f6:	4589      	cmp	r9, r1
 80127f8:	bfb8      	it	lt
 80127fa:	4689      	movlt	r9, r1
 80127fc:	3301      	adds	r3, #1
 80127fe:	e7ef      	b.n	80127e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
 8012800:	4f73      	ldr	r7, [pc, #460]	@ (80129d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
 8012802:	883a      	ldrh	r2, [r7, #0]
 8012804:	4693      	mov	fp, r2
 8012806:	4283      	cmp	r3, r0
 8012808:	da08      	bge.n	801281c <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
 801280a:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
 801280e:	3301      	adds	r3, #1
 8012810:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
 8012814:	458b      	cmp	fp, r1
 8012816:	bfa8      	it	ge
 8012818:	468b      	movge	fp, r1
 801281a:	e7f4      	b.n	8012806 <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
 801281c:	2300      	movs	r3, #0
 801281e:	2a0f      	cmp	r2, #15
 8012820:	f8df 91b0 	ldr.w	r9, [pc, #432]	@ 80129d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
 8012824:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8012828:	bf8c      	ite	hi
 801282a:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
 801282e:	f04f 0801 	movls.w	r8, #1
 8012832:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8012836:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801283a:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801283e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8012842:	6828      	ldr	r0, [r5, #0]
 8012844:	455b      	cmp	r3, fp
 8012846:	f340 80c7 	ble.w	80129d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 801284a:	6803      	ldr	r3, [r0, #0]
 801284c:	f8b7 a000 	ldrh.w	sl, [r7]
 8012850:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8012854:	4798      	blx	r3
 8012856:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801285a:	682b      	ldr	r3, [r5, #0]
 801285c:	ebaa 0000 	sub.w	r0, sl, r0
 8012860:	b280      	uxth	r0, r0
 8012862:	ebac 0e08 	sub.w	lr, ip, r8
 8012866:	4570      	cmp	r0, lr
 8012868:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
 801286c:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
 8012870:	dd05      	ble.n	801287e <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 8012872:	4558      	cmp	r0, fp
 8012874:	dd03      	ble.n	801287e <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 8012876:	b901      	cbnz	r1, 801287a <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8012878:	b392      	cbz	r2, 80128e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x21c>
 801287a:	4658      	mov	r0, fp
 801287c:	e006      	b.n	801288c <_ZN8touchgfx11Application15drawCachedAreasEv+0x1c8>
 801287e:	2900      	cmp	r1, #0
 8012880:	d1fb      	bne.n	801287a <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8012882:	2a00      	cmp	r2, #0
 8012884:	d1f9      	bne.n	801287a <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8012886:	4558      	cmp	r0, fp
 8012888:	bfb8      	it	lt
 801288a:	4658      	movlt	r0, fp
 801288c:	f9b9 3000 	ldrsh.w	r3, [r9]
 8012890:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
 8012894:	2200      	movs	r2, #0
 8012896:	ebac 0000 	sub.w	r0, ip, r0
 801289a:	f8b6 a000 	ldrh.w	sl, [r6]
 801289e:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80128a2:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 80128a6:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80128aa:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80128ae:	4553      	cmp	r3, sl
 80128b0:	ddc5      	ble.n	801283e <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 80128b2:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 80128b6:	ab0d      	add	r3, sp, #52	@ 0x34
 80128b8:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80128bc:	6851      	ldr	r1, [r2, #4]
 80128be:	c303      	stmia	r3!, {r0, r1}
 80128c0:	a80d      	add	r0, sp, #52	@ 0x34
 80128c2:	a90b      	add	r1, sp, #44	@ 0x2c
 80128c4:	f7f9 fef2 	bl	800c6ac <_ZN8touchgfx4RectaNERKS0_>
 80128c8:	a80d      	add	r0, sp, #52	@ 0x34
 80128ca:	f7f9 ff32 	bl	800c732 <_ZNK8touchgfx4Rect7isEmptyEv>
 80128ce:	b920      	cbnz	r0, 80128da <_ZN8touchgfx11Application15drawCachedAreasEv+0x216>
 80128d0:	6823      	ldr	r3, [r4, #0]
 80128d2:	a90d      	add	r1, sp, #52	@ 0x34
 80128d4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80128d6:	4620      	mov	r0, r4
 80128d8:	4798      	blx	r3
 80128da:	f10a 0a01 	add.w	sl, sl, #1
 80128de:	e7e4      	b.n	80128aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e6>
 80128e0:	681a      	ldr	r2, [r3, #0]
 80128e2:	2101      	movs	r1, #1
 80128e4:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
 80128e8:	4618      	mov	r0, r3
 80128ea:	4790      	blx	r2
 80128ec:	e7a7      	b.n	801283e <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 80128ee:	4b39      	ldr	r3, [pc, #228]	@ (80129d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
 80128f0:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 80129d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>
 80128f4:	881f      	ldrh	r7, [r3, #0]
 80128f6:	2300      	movs	r3, #0
 80128f8:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
 80128fc:	2f0f      	cmp	r7, #15
 80128fe:	bf8c      	ite	hi
 8012900:	08ff      	lsrhi	r7, r7, #3
 8012902:	2701      	movls	r7, #1
 8012904:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8012908:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
 801290c:	6828      	ldr	r0, [r5, #0]
 801290e:	4413      	add	r3, r2
 8012910:	b21b      	sxth	r3, r3
 8012912:	454b      	cmp	r3, r9
 8012914:	da60      	bge.n	80129d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 8012916:	6803      	ldr	r3, [r0, #0]
 8012918:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801291c:	4798      	blx	r3
 801291e:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
 8012922:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8012926:	682a      	ldr	r2, [r5, #0]
 8012928:	4473      	add	r3, lr
 801292a:	b21b      	sxth	r3, r3
 801292c:	eb03 0e07 	add.w	lr, r3, r7
 8012930:	4570      	cmp	r0, lr
 8012932:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
 8012936:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
 801293a:	da0d      	bge.n	8012958 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 801293c:	4548      	cmp	r0, r9
 801293e:	da0b      	bge.n	8012958 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 8012940:	f1bc 0f00 	cmp.w	ip, #0
 8012944:	d138      	bne.n	80129b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 8012946:	2900      	cmp	r1, #0
 8012948:	d136      	bne.n	80129b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 801294a:	6813      	ldr	r3, [r2, #0]
 801294c:	2101      	movs	r1, #1
 801294e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8012952:	4610      	mov	r0, r2
 8012954:	4798      	blx	r3
 8012956:	e7d5      	b.n	8012904 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8012958:	f1bc 0f00 	cmp.w	ip, #0
 801295c:	d12c      	bne.n	80129b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 801295e:	bb59      	cbnz	r1, 80129b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 8012960:	4548      	cmp	r0, r9
 8012962:	bfa8      	it	ge
 8012964:	4648      	movge	r0, r9
 8012966:	f9b8 2000 	ldrsh.w	r2, [r8]
 801296a:	f8b6 a000 	ldrh.w	sl, [r6]
 801296e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8012972:	2100      	movs	r1, #0
 8012974:	1ac0      	subs	r0, r0, r3
 8012976:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 801297a:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801297e:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 8012982:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8012986:	4553      	cmp	r3, sl
 8012988:	ddbc      	ble.n	8012904 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 801298a:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 801298e:	ab0d      	add	r3, sp, #52	@ 0x34
 8012990:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8012994:	6851      	ldr	r1, [r2, #4]
 8012996:	c303      	stmia	r3!, {r0, r1}
 8012998:	a80d      	add	r0, sp, #52	@ 0x34
 801299a:	a90b      	add	r1, sp, #44	@ 0x2c
 801299c:	f7f9 fe86 	bl	800c6ac <_ZN8touchgfx4RectaNERKS0_>
 80129a0:	a80d      	add	r0, sp, #52	@ 0x34
 80129a2:	f7f9 fec6 	bl	800c732 <_ZNK8touchgfx4Rect7isEmptyEv>
 80129a6:	b920      	cbnz	r0, 80129b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ee>
 80129a8:	6823      	ldr	r3, [r4, #0]
 80129aa:	a90d      	add	r1, sp, #52	@ 0x34
 80129ac:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80129ae:	4620      	mov	r0, r4
 80129b0:	4798      	blx	r3
 80129b2:	f10a 0a01 	add.w	sl, sl, #1
 80129b6:	e7e4      	b.n	8012982 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2be>
 80129b8:	4648      	mov	r0, r9
 80129ba:	e7d4      	b.n	8012966 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a2>
 80129bc:	200152ec 	.word	0x200152ec
 80129c0:	2001532c 	.word	0x2001532c
 80129c4:	20015338 	.word	0x20015338
 80129c8:	20000084 	.word	0x20000084
 80129cc:	200152e4 	.word	0x200152e4
 80129d0:	200152e0 	.word	0x200152e0
 80129d4:	200152e2 	.word	0x200152e2
 80129d8:	6828      	ldr	r0, [r5, #0]
 80129da:	6803      	ldr	r3, [r0, #0]
 80129dc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80129de:	4798      	blx	r3
 80129e0:	4ba5      	ldr	r3, [pc, #660]	@ (8012c78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
 80129e2:	781b      	ldrb	r3, [r3, #0]
 80129e4:	2b00      	cmp	r3, #0
 80129e6:	f43f aed4 	beq.w	8012792 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 80129ea:	2300      	movs	r3, #0
 80129ec:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 80129f0:	4ba2      	ldr	r3, [pc, #648]	@ (8012c7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
 80129f2:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
 80129f6:	881b      	ldrh	r3, [r3, #0]
 80129f8:	a80f      	add	r0, sp, #60	@ 0x3c
 80129fa:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
 80129fe:	42b3      	cmp	r3, r6
 8012a00:	f4bf aec7 	bcs.w	8012792 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 8012a04:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 8012a08:	2907      	cmp	r1, #7
 8012a0a:	d815      	bhi.n	8012a38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x374>
 8012a0c:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8012a10:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 8012a14:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8012a18:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 8012a1c:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8012a20:	1c4a      	adds	r2, r1, #1
 8012a22:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 8012a26:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
 8012a2a:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
 8012a2e:	f8a2 e002 	strh.w	lr, [r2, #2]
 8012a32:	f8a2 c004 	strh.w	ip, [r2, #4]
 8012a36:	80d7      	strh	r7, [r2, #6]
 8012a38:	3301      	adds	r3, #1
 8012a3a:	b29b      	uxth	r3, r3
 8012a3c:	e7df      	b.n	80129fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8012a3e:	2b02      	cmp	r3, #2
 8012a40:	f040 80d1 	bne.w	8012be6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8012a44:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8012a48:	9308      	str	r3, [sp, #32]
 8012a4a:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
 8012a4e:	9307      	str	r3, [sp, #28]
 8012a50:	6803      	ldr	r3, [r0, #0]
 8012a52:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
 8012a56:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8012a5a:	4798      	blx	r3
 8012a5c:	4b88      	ldr	r3, [pc, #544]	@ (8012c80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
 8012a5e:	881b      	ldrh	r3, [r3, #0]
 8012a60:	9302      	str	r3, [sp, #8]
 8012a62:	4b88      	ldr	r3, [pc, #544]	@ (8012c84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
 8012a64:	881e      	ldrh	r6, [r3, #0]
 8012a66:	4b88      	ldr	r3, [pc, #544]	@ (8012c88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8012a68:	781b      	ldrb	r3, [r3, #0]
 8012a6a:	f10b 37ff 	add.w	r7, fp, #4294967295
 8012a6e:	2b01      	cmp	r3, #1
 8012a70:	bf1c      	itt	ne
 8012a72:	9b02      	ldrne	r3, [sp, #8]
 8012a74:	9602      	strne	r6, [sp, #8]
 8012a76:	b2bf      	uxth	r7, r7
 8012a78:	fa0f f887 	sxth.w	r8, r7
 8012a7c:	4682      	mov	sl, r0
 8012a7e:	f04f 0000 	mov.w	r0, #0
 8012a82:	bf18      	it	ne
 8012a84:	461e      	movne	r6, r3
 8012a86:	f7ee ff47 	bl	8001918 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8012a8a:	fb96 fbfb 	sdiv	fp, r6, fp
 8012a8e:	fb0b f808 	mul.w	r8, fp, r8
 8012a92:	45c2      	cmp	sl, r8
 8012a94:	da0c      	bge.n	8012ab0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
 8012a96:	6828      	ldr	r0, [r5, #0]
 8012a98:	6803      	ldr	r3, [r0, #0]
 8012a9a:	210a      	movs	r1, #10
 8012a9c:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8012aa0:	4798      	blx	r3
 8012aa2:	6828      	ldr	r0, [r5, #0]
 8012aa4:	6803      	ldr	r3, [r0, #0]
 8012aa6:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8012aaa:	4798      	blx	r3
 8012aac:	4682      	mov	sl, r0
 8012aae:	e7f0      	b.n	8012a92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
 8012ab0:	2000      	movs	r0, #0
 8012ab2:	f7ee ff5b 	bl	800196c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8012ab6:	fa1f f38b 	uxth.w	r3, fp
 8012aba:	fb17 f703 	smulbb	r7, r7, r3
 8012abe:	9304      	str	r3, [sp, #16]
 8012ac0:	b2bb      	uxth	r3, r7
 8012ac2:	9305      	str	r3, [sp, #20]
 8012ac4:	f04f 0800 	mov.w	r8, #0
 8012ac8:	0973      	lsrs	r3, r6, #5
 8012aca:	4f70      	ldr	r7, [pc, #448]	@ (8012c8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
 8012acc:	9306      	str	r3, [sp, #24]
 8012ace:	4645      	mov	r5, r8
 8012ad0:	42b5      	cmp	r5, r6
 8012ad2:	d085      	beq.n	80129e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8012ad4:	6838      	ldr	r0, [r7, #0]
 8012ad6:	6803      	ldr	r3, [r0, #0]
 8012ad8:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8012adc:	4798      	blx	r3
 8012ade:	4582      	cmp	sl, r0
 8012ae0:	4681      	mov	r9, r0
 8012ae2:	d907      	bls.n	8012af4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
 8012ae4:	f1b8 0f00 	cmp.w	r8, #0
 8012ae8:	d007      	beq.n	8012afa <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
 8012aea:	6838      	ldr	r0, [r7, #0]
 8012aec:	6803      	ldr	r3, [r0, #0]
 8012aee:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 8012af2:	e774      	b.n	80129de <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 8012af4:	f1b8 0f00 	cmp.w	r8, #0
 8012af8:	d003      	beq.n	8012b02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
 8012afa:	454d      	cmp	r5, r9
 8012afc:	d3f5      	bcc.n	8012aea <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
 8012afe:	f04f 0801 	mov.w	r8, #1
 8012b02:	9a04      	ldr	r2, [sp, #16]
 8012b04:	fb95 f3fb 	sdiv	r3, r5, fp
 8012b08:	9303      	str	r3, [sp, #12]
 8012b0a:	3301      	adds	r3, #1
 8012b0c:	fb13 f302 	smulbb	r3, r3, r2
 8012b10:	b299      	uxth	r1, r3
 8012b12:	f1b8 0f00 	cmp.w	r8, #0
 8012b16:	d04e      	beq.n	8012bb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f2>
 8012b18:	eb09 030b 	add.w	r3, r9, fp
 8012b1c:	42b3      	cmp	r3, r6
 8012b1e:	bfa8      	it	ge
 8012b20:	4633      	movge	r3, r6
 8012b22:	9807      	ldr	r0, [sp, #28]
 8012b24:	b29b      	uxth	r3, r3
 8012b26:	428b      	cmp	r3, r1
 8012b28:	bf94      	ite	ls
 8012b2a:	ebc5 0203 	rsbls	r2, r5, r3
 8012b2e:	ebc5 0201 	rsbhi	r2, r5, r1
 8012b32:	4282      	cmp	r2, r0
 8012b34:	bfa8      	it	ge
 8012b36:	4602      	movge	r2, r0
 8012b38:	9808      	ldr	r0, [sp, #32]
 8012b3a:	fa1f fa82 	uxth.w	sl, r2
 8012b3e:	4582      	cmp	sl, r0
 8012b40:	d205      	bcs.n	8012b4e <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 8012b42:	fa15 f082 	uxtah	r0, r5, r2
 8012b46:	4286      	cmp	r6, r0
 8012b48:	d001      	beq.n	8012b4e <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 8012b4a:	4299      	cmp	r1, r3
 8012b4c:	d240      	bcs.n	8012bd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x50c>
 8012b4e:	2001      	movs	r0, #1
 8012b50:	9209      	str	r2, [sp, #36]	@ 0x24
 8012b52:	f7ee fee1 	bl	8001918 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8012b56:	6838      	ldr	r0, [r7, #0]
 8012b58:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 8012b5c:	6803      	ldr	r3, [r0, #0]
 8012b5e:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8012b62:	4798      	blx	r3
 8012b64:	4b48      	ldr	r3, [pc, #288]	@ (8012c88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8012b66:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8012b68:	781b      	ldrb	r3, [r3, #0]
 8012b6a:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8012b6e:	2b01      	cmp	r3, #1
 8012b70:	b212      	sxth	r2, r2
 8012b72:	f04f 0000 	mov.w	r0, #0
 8012b76:	d122      	bne.n	8012bbe <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fa>
 8012b78:	1b73      	subs	r3, r6, r5
 8012b7a:	eba3 030a 	sub.w	r3, r3, sl
 8012b7e:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8012b82:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
 8012b86:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8012b8a:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
 8012b8e:	6823      	ldr	r3, [r4, #0]
 8012b90:	a90d      	add	r1, sp, #52	@ 0x34
 8012b92:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8012b94:	4620      	mov	r0, r4
 8012b96:	4798      	blx	r3
 8012b98:	6838      	ldr	r0, [r7, #0]
 8012b9a:	9b03      	ldr	r3, [sp, #12]
 8012b9c:	4259      	negs	r1, r3
 8012b9e:	6803      	ldr	r3, [r0, #0]
 8012ba0:	b209      	sxth	r1, r1
 8012ba2:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8012ba6:	4798      	blx	r3
 8012ba8:	4455      	add	r5, sl
 8012baa:	2001      	movs	r0, #1
 8012bac:	b2ad      	uxth	r5, r5
 8012bae:	f7ee fedd 	bl	800196c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8012bb2:	46ca      	mov	sl, r9
 8012bb4:	e78c      	b.n	8012ad0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
 8012bb6:	9b05      	ldr	r3, [sp, #20]
 8012bb8:	eba9 0303 	sub.w	r3, r9, r3
 8012bbc:	e7b1      	b.n	8012b22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 8012bbe:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 8012bc2:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
 8012bc6:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
 8012bca:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 8012bce:	e7de      	b.n	8012b8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ca>
 8012bd0:	6838      	ldr	r0, [r7, #0]
 8012bd2:	6803      	ldr	r3, [r0, #0]
 8012bd4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012bd6:	4798      	blx	r3
 8012bd8:	6838      	ldr	r0, [r7, #0]
 8012bda:	9906      	ldr	r1, [sp, #24]
 8012bdc:	6803      	ldr	r3, [r0, #0]
 8012bde:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8012be2:	4798      	blx	r3
 8012be4:	e7e5      	b.n	8012bb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ee>
 8012be6:	2b03      	cmp	r3, #3
 8012be8:	f040 8130 	bne.w	8012e4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x788>
 8012bec:	4b26      	ldr	r3, [pc, #152]	@ (8012c88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8012bee:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
 8012bf2:	781b      	ldrb	r3, [r3, #0]
 8012bf4:	2b01      	cmp	r3, #1
 8012bf6:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 8012bfa:	f000 8093 	beq.w	8012d24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 8012bfe:	8832      	ldrh	r2, [r6, #0]
 8012c00:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8012c04:	3201      	adds	r2, #1
 8012c06:	b292      	uxth	r2, r2
 8012c08:	2900      	cmp	r1, #0
 8012c0a:	f43f aee9 	beq.w	80129e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8012c0e:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
 8012c12:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
 8012c16:	441d      	add	r5, r3
 8012c18:	b22d      	sxth	r5, r5
 8012c1a:	4694      	mov	ip, r2
 8012c1c:	f04f 0800 	mov.w	r8, #0
 8012c20:	fa1f f38c 	uxth.w	r3, ip
 8012c24:	4299      	cmp	r1, r3
 8012c26:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8012c2a:	f240 80ba 	bls.w	8012da2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6de>
 8012c2e:	4427      	add	r7, r4
 8012c30:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8012c34:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 8012c38:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 8012c3c:	4283      	cmp	r3, r0
 8012c3e:	f340 809c 	ble.w	8012d7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b6>
 8012c42:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
 8012c46:	4405      	add	r5, r0
 8012c48:	b22d      	sxth	r5, r5
 8012c4a:	429d      	cmp	r5, r3
 8012c4c:	bfa8      	it	ge
 8012c4e:	461d      	movge	r5, r3
 8012c50:	46e0      	mov	r8, ip
 8012c52:	f10c 0c01 	add.w	ip, ip, #1
 8012c56:	e7e3      	b.n	8012c20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>
 8012c58:	d10a      	bne.n	8012c70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5ac>
 8012c5a:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
 8012c5e:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 8012c62:	4562      	cmp	r2, ip
 8012c64:	bfb8      	it	lt
 8012c66:	4662      	movlt	r2, ip
 8012c68:	4288      	cmp	r0, r1
 8012c6a:	bfb8      	it	lt
 8012c6c:	4698      	movlt	r8, r3
 8012c6e:	e082      	b.n	8012d76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 8012c70:	428a      	cmp	r2, r1
 8012c72:	bfb8      	it	lt
 8012c74:	460a      	movlt	r2, r1
 8012c76:	e07e      	b.n	8012d76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 8012c78:	200152ea 	.word	0x200152ea
 8012c7c:	20000084 	.word	0x20000084
 8012c80:	200152e2 	.word	0x200152e2
 8012c84:	200152e0 	.word	0x200152e0
 8012c88:	200152e4 	.word	0x200152e4
 8012c8c:	200152ec 	.word	0x200152ec
 8012c90:	19e1      	adds	r1, r4, r7
 8012c92:	ab0d      	add	r3, sp, #52	@ 0x34
 8012c94:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8012c98:	6849      	ldr	r1, [r1, #4]
 8012c9a:	c303      	stmia	r3!, {r0, r1}
 8012c9c:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 8012ca0:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8012ca4:	454b      	cmp	r3, r9
 8012ca6:	bfb8      	it	lt
 8012ca8:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
 8012cac:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8012cb0:	440b      	add	r3, r1
 8012cb2:	1a9b      	subs	r3, r3, r2
 8012cb4:	a80d      	add	r0, sp, #52	@ 0x34
 8012cb6:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8012cba:	f7fe fecd 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012cbe:	a80d      	add	r0, sp, #52	@ 0x34
 8012cc0:	f7f9 fd37 	bl	800c732 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012cc4:	bb70      	cbnz	r0, 8012d24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 8012cc6:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
 8012cca:	6828      	ldr	r0, [r5, #0]
 8012ccc:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8012cd0:	f8d0 e000 	ldr.w	lr, [r0]
 8012cd4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 8012cd8:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8012cdc:	45cc      	cmp	ip, r9
 8012cde:	bfd4      	ite	le
 8012ce0:	fa1f fc8c 	uxthle.w	ip, ip
 8012ce4:	fa1f fc89 	uxthgt.w	ip, r9
 8012ce8:	f8cd c000 	str.w	ip, [sp]
 8012cec:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
 8012cf0:	47d8      	blx	fp
 8012cf2:	4683      	mov	fp, r0
 8012cf4:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8012cf8:	a80d      	add	r0, sp, #52	@ 0x34
 8012cfa:	f7fe fe93 	bl	8011a24 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8012cfe:	6823      	ldr	r3, [r4, #0]
 8012d00:	4427      	add	r7, r4
 8012d02:	4620      	mov	r0, r4
 8012d04:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8012d06:	a90d      	add	r1, sp, #52	@ 0x34
 8012d08:	4798      	blx	r3
 8012d0a:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
 8012d0e:	eba0 000b 	sub.w	r0, r0, fp
 8012d12:	b200      	sxth	r0, r0
 8012d14:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
 8012d18:	b920      	cbnz	r0, 8012d24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 8012d1a:	fa1f f188 	uxth.w	r1, r8
 8012d1e:	4650      	mov	r0, sl
 8012d20:	f7ff f93e 	bl	8011fa0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012d24:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 8012d28:	f1bb 0f00 	cmp.w	fp, #0
 8012d2c:	f43f ae58 	beq.w	80129e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8012d30:	8833      	ldrh	r3, [r6, #0]
 8012d32:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 8012d36:	3301      	adds	r3, #1
 8012d38:	b29b      	uxth	r3, r3
 8012d3a:	f04f 0800 	mov.w	r8, #0
 8012d3e:	b299      	uxth	r1, r3
 8012d40:	458b      	cmp	fp, r1
 8012d42:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8012d46:	d9a3      	bls.n	8012c90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
 8012d48:	4427      	add	r7, r4
 8012d4a:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8012d4e:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
 8012d52:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
 8012d56:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 8012d5a:	4408      	add	r0, r1
 8012d5c:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 8012d60:	4461      	add	r1, ip
 8012d62:	b200      	sxth	r0, r0
 8012d64:	b209      	sxth	r1, r1
 8012d66:	4288      	cmp	r0, r1
 8012d68:	f6bf af76 	bge.w	8012c58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x594>
 8012d6c:	4584      	cmp	ip, r0
 8012d6e:	4662      	mov	r2, ip
 8012d70:	4698      	mov	r8, r3
 8012d72:	bfb8      	it	lt
 8012d74:	4602      	movlt	r2, r0
 8012d76:	3301      	adds	r3, #1
 8012d78:	e7e1      	b.n	8012d3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x67a>
 8012d7a:	d10e      	bne.n	8012d9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d6>
 8012d7c:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8012d80:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8012d84:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 8012d88:	4473      	add	r3, lr
 8012d8a:	b21b      	sxth	r3, r3
 8012d8c:	429d      	cmp	r5, r3
 8012d8e:	bfa8      	it	ge
 8012d90:	461d      	movge	r5, r3
 8012d92:	4287      	cmp	r7, r0
 8012d94:	bfb8      	it	lt
 8012d96:	46e0      	movlt	r8, ip
 8012d98:	e75b      	b.n	8012c52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 8012d9a:	4285      	cmp	r5, r0
 8012d9c:	bfa8      	it	ge
 8012d9e:	4605      	movge	r5, r0
 8012da0:	e757      	b.n	8012c52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 8012da2:	eb0a 0007 	add.w	r0, sl, r7
 8012da6:	4427      	add	r7, r4
 8012da8:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8012dac:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 8012db0:	45cb      	cmp	fp, r9
 8012db2:	bfbe      	ittt	lt
 8012db4:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
 8012db8:	445d      	addlt	r5, fp
 8012dba:	b22d      	sxthlt	r5, r5
 8012dbc:	f7f9 fcb9 	bl	800c732 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012dc0:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8012dc4:	2800      	cmp	r0, #0
 8012dc6:	f47f af1f 	bne.w	8012c08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x544>
 8012dca:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 8012dce:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8012dd2:	482b      	ldr	r0, [pc, #172]	@ (8012e80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7bc>)
 8012dd4:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 8012dd8:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 8012ddc:	6800      	ldr	r0, [r0, #0]
 8012dde:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
 8012de2:	1aad      	subs	r5, r5, r2
 8012de4:	454d      	cmp	r5, r9
 8012de6:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 8012dea:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8012dee:	bfa8      	it	ge
 8012df0:	464d      	movge	r5, r9
 8012df2:	f8d0 c000 	ldr.w	ip, [r0]
 8012df6:	b2ad      	uxth	r5, r5
 8012df8:	fa1f fb8b 	uxth.w	fp, fp
 8012dfc:	455d      	cmp	r5, fp
 8012dfe:	bf94      	ite	ls
 8012e00:	9500      	strls	r5, [sp, #0]
 8012e02:	f8cd b000 	strhi.w	fp, [sp]
 8012e06:	b292      	uxth	r2, r2
 8012e08:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
 8012e0c:	b29b      	uxth	r3, r3
 8012e0e:	b289      	uxth	r1, r1
 8012e10:	47a8      	blx	r5
 8012e12:	6823      	ldr	r3, [r4, #0]
 8012e14:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8012e18:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8012e1a:	a90d      	add	r1, sp, #52	@ 0x34
 8012e1c:	4620      	mov	r0, r4
 8012e1e:	4798      	blx	r3
 8012e20:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 8012e24:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 8012e28:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 8012e2c:	1a5b      	subs	r3, r3, r1
 8012e2e:	440a      	add	r2, r1
 8012e30:	b21b      	sxth	r3, r3
 8012e32:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 8012e36:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 8012e3a:	2b00      	cmp	r3, #0
 8012e3c:	f47f aedf 	bne.w	8012bfe <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 8012e40:	fa1f f188 	uxth.w	r1, r8
 8012e44:	4650      	mov	r0, sl
 8012e46:	f7ff f8ab 	bl	8011fa0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012e4a:	e6d8      	b.n	8012bfe <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 8012e4c:	8835      	ldrh	r5, [r6, #0]
 8012e4e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8012e52:	42ab      	cmp	r3, r5
 8012e54:	f67f adc4 	bls.w	80129e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8012e58:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8012e5c:	ab0d      	add	r3, sp, #52	@ 0x34
 8012e5e:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8012e62:	6851      	ldr	r1, [r2, #4]
 8012e64:	c303      	stmia	r3!, {r0, r1}
 8012e66:	a80d      	add	r0, sp, #52	@ 0x34
 8012e68:	f7f9 fc63 	bl	800c732 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012e6c:	b920      	cbnz	r0, 8012e78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b4>
 8012e6e:	6823      	ldr	r3, [r4, #0]
 8012e70:	a90d      	add	r1, sp, #52	@ 0x34
 8012e72:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8012e74:	4620      	mov	r0, r4
 8012e76:	4798      	blx	r3
 8012e78:	3501      	adds	r5, #1
 8012e7a:	b2ad      	uxth	r5, r5
 8012e7c:	e7e7      	b.n	8012e4e <_ZN8touchgfx11Application15drawCachedAreasEv+0x78a>
 8012e7e:	bf00      	nop
 8012e80:	200152ec 	.word	0x200152ec

08012e84 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8012e84:	4b03      	ldr	r3, [pc, #12]	@ (8012e94 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8012e86:	2200      	movs	r2, #0
 8012e88:	801a      	strh	r2, [r3, #0]
 8012e8a:	805a      	strh	r2, [r3, #2]
 8012e8c:	809a      	strh	r2, [r3, #4]
 8012e8e:	80da      	strh	r2, [r3, #6]
 8012e90:	4770      	bx	lr
 8012e92:	bf00      	nop
 8012e94:	20015338 	.word	0x20015338

08012e98 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8012e98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e9c:	4606      	mov	r6, r0
 8012e9e:	b09d      	sub	sp, #116	@ 0x74
 8012ea0:	a803      	add	r0, sp, #12
 8012ea2:	4614      	mov	r4, r2
 8012ea4:	468a      	mov	sl, r1
 8012ea6:	461d      	mov	r5, r3
 8012ea8:	f001 f924 	bl	80140f4 <_ZN8touchgfx12TextProviderC1Ev>
 8012eac:	6833      	ldr	r3, [r6, #0]
 8012eae:	4630      	mov	r0, r6
 8012eb0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8012eb2:	4798      	blx	r3
 8012eb4:	6833      	ldr	r3, [r6, #0]
 8012eb6:	4607      	mov	r7, r0
 8012eb8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8012eba:	4630      	mov	r0, r6
 8012ebc:	4798      	blx	r3
 8012ebe:	462a      	mov	r2, r5
 8012ec0:	9000      	str	r0, [sp, #0]
 8012ec2:	4621      	mov	r1, r4
 8012ec4:	463b      	mov	r3, r7
 8012ec6:	a803      	add	r0, sp, #12
 8012ec8:	f001 f967 	bl	801419a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012ecc:	2500      	movs	r5, #0
 8012ece:	462c      	mov	r4, r5
 8012ed0:	46a9      	mov	r9, r5
 8012ed2:	46a8      	mov	r8, r5
 8012ed4:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 8012ed8:	2300      	movs	r3, #0
 8012eda:	9302      	str	r3, [sp, #8]
 8012edc:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8012ee0:	429c      	cmp	r4, r3
 8012ee2:	d002      	beq.n	8012eea <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8012ee4:	455c      	cmp	r4, fp
 8012ee6:	bf18      	it	ne
 8012ee8:	4625      	movne	r5, r4
 8012eea:	ab02      	add	r3, sp, #8
 8012eec:	4632      	mov	r2, r6
 8012eee:	4651      	mov	r1, sl
 8012ef0:	a803      	add	r0, sp, #12
 8012ef2:	f001 fc6d 	bl	80147d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012ef6:	4604      	mov	r4, r0
 8012ef8:	b108      	cbz	r0, 8012efe <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8012efa:	280a      	cmp	r0, #10
 8012efc:	d10a      	bne.n	8012f14 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8012efe:	45c1      	cmp	r9, r8
 8012f00:	bf38      	it	cc
 8012f02:	46c1      	movcc	r9, r8
 8012f04:	f04f 0800 	mov.w	r8, #0
 8012f08:	2c00      	cmp	r4, #0
 8012f0a:	d1e5      	bne.n	8012ed8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8012f0c:	4648      	mov	r0, r9
 8012f0e:	b01d      	add	sp, #116	@ 0x74
 8012f10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012f14:	9a02      	ldr	r2, [sp, #8]
 8012f16:	2a00      	cmp	r2, #0
 8012f18:	d0de      	beq.n	8012ed8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8012f1a:	7b57      	ldrb	r7, [r2, #13]
 8012f1c:	6833      	ldr	r3, [r6, #0]
 8012f1e:	8894      	ldrh	r4, [r2, #4]
 8012f20:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8012f22:	007f      	lsls	r7, r7, #1
 8012f24:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 8012f28:	7a97      	ldrb	r7, [r2, #10]
 8012f2a:	4629      	mov	r1, r5
 8012f2c:	4307      	orrs	r7, r0
 8012f2e:	4630      	mov	r0, r6
 8012f30:	4798      	blx	r3
 8012f32:	4438      	add	r0, r7
 8012f34:	4480      	add	r8, r0
 8012f36:	fa1f f888 	uxth.w	r8, r8
 8012f3a:	e7e5      	b.n	8012f08 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08012f3c <_ZNK8touchgfx4Font12getCharWidthEt>:
 8012f3c:	b508      	push	{r3, lr}
 8012f3e:	6803      	ldr	r3, [r0, #0]
 8012f40:	68db      	ldr	r3, [r3, #12]
 8012f42:	4798      	blx	r3
 8012f44:	b128      	cbz	r0, 8012f52 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8012f46:	7b43      	ldrb	r3, [r0, #13]
 8012f48:	7a80      	ldrb	r0, [r0, #10]
 8012f4a:	005b      	lsls	r3, r3, #1
 8012f4c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8012f50:	4318      	orrs	r0, r3
 8012f52:	bd08      	pop	{r3, pc}

08012f54 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8012f54:	b40e      	push	{r1, r2, r3}
 8012f56:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012f58:	b09e      	sub	sp, #120	@ 0x78
 8012f5a:	ab23      	add	r3, sp, #140	@ 0x8c
 8012f5c:	4605      	mov	r5, r0
 8012f5e:	f853 4b04 	ldr.w	r4, [r3], #4
 8012f62:	9303      	str	r3, [sp, #12]
 8012f64:	a805      	add	r0, sp, #20
 8012f66:	f001 f8c5 	bl	80140f4 <_ZN8touchgfx12TextProviderC1Ev>
 8012f6a:	682b      	ldr	r3, [r5, #0]
 8012f6c:	4628      	mov	r0, r5
 8012f6e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8012f70:	4798      	blx	r3
 8012f72:	682b      	ldr	r3, [r5, #0]
 8012f74:	4606      	mov	r6, r0
 8012f76:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8012f78:	4628      	mov	r0, r5
 8012f7a:	4798      	blx	r3
 8012f7c:	4633      	mov	r3, r6
 8012f7e:	ae1e      	add	r6, sp, #120	@ 0x78
 8012f80:	4621      	mov	r1, r4
 8012f82:	9000      	str	r0, [sp, #0]
 8012f84:	9a03      	ldr	r2, [sp, #12]
 8012f86:	2400      	movs	r4, #0
 8012f88:	a805      	add	r0, sp, #20
 8012f8a:	f001 f906 	bl	801419a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012f8e:	f846 4d68 	str.w	r4, [r6, #-104]!
 8012f92:	462a      	mov	r2, r5
 8012f94:	4633      	mov	r3, r6
 8012f96:	4621      	mov	r1, r4
 8012f98:	a805      	add	r0, sp, #20
 8012f9a:	f001 fc19 	bl	80147d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012f9e:	b1f0      	cbz	r0, 8012fde <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8012fa0:	280a      	cmp	r0, #10
 8012fa2:	d018      	beq.n	8012fd6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8012fa4:	9f04      	ldr	r7, [sp, #16]
 8012fa6:	b1b7      	cbz	r7, 8012fd6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8012fa8:	7b78      	ldrb	r0, [r7, #13]
 8012faa:	7a3b      	ldrb	r3, [r7, #8]
 8012fac:	88ea      	ldrh	r2, [r5, #6]
 8012fae:	00c1      	lsls	r1, r0, #3
 8012fb0:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8012fb4:	4319      	orrs	r1, r3
 8012fb6:	0643      	lsls	r3, r0, #25
 8012fb8:	bf44      	itt	mi
 8012fba:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 8012fbe:	b219      	sxthmi	r1, r3
 8012fc0:	0100      	lsls	r0, r0, #4
 8012fc2:	79fb      	ldrb	r3, [r7, #7]
 8012fc4:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8012fc8:	4303      	orrs	r3, r0
 8012fca:	4413      	add	r3, r2
 8012fcc:	1a5b      	subs	r3, r3, r1
 8012fce:	b21b      	sxth	r3, r3
 8012fd0:	429c      	cmp	r4, r3
 8012fd2:	bfb8      	it	lt
 8012fd4:	461c      	movlt	r4, r3
 8012fd6:	4633      	mov	r3, r6
 8012fd8:	462a      	mov	r2, r5
 8012fda:	2100      	movs	r1, #0
 8012fdc:	e7dc      	b.n	8012f98 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8012fde:	b2a0      	uxth	r0, r4
 8012fe0:	b01e      	add	sp, #120	@ 0x78
 8012fe2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8012fe6:	b003      	add	sp, #12
 8012fe8:	4770      	bx	lr

08012fea <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8012fea:	7a43      	ldrb	r3, [r0, #9]
 8012fec:	8880      	ldrh	r0, [r0, #4]
 8012fee:	4418      	add	r0, r3
 8012ff0:	b280      	uxth	r0, r0
 8012ff2:	4770      	bx	lr

08012ff4 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8012ff4:	6803      	ldr	r3, [r0, #0]
 8012ff6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8012ff8:	4718      	bx	r3

08012ffa <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8012ffa:	b40e      	push	{r1, r2, r3}
 8012ffc:	b570      	push	{r4, r5, r6, lr}
 8012ffe:	b09d      	sub	sp, #116	@ 0x74
 8013000:	ab21      	add	r3, sp, #132	@ 0x84
 8013002:	4604      	mov	r4, r0
 8013004:	f853 5b04 	ldr.w	r5, [r3], #4
 8013008:	9302      	str	r3, [sp, #8]
 801300a:	a803      	add	r0, sp, #12
 801300c:	f001 f872 	bl	80140f4 <_ZN8touchgfx12TextProviderC1Ev>
 8013010:	6823      	ldr	r3, [r4, #0]
 8013012:	4620      	mov	r0, r4
 8013014:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8013016:	4798      	blx	r3
 8013018:	6823      	ldr	r3, [r4, #0]
 801301a:	4606      	mov	r6, r0
 801301c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801301e:	4620      	mov	r0, r4
 8013020:	4798      	blx	r3
 8013022:	4633      	mov	r3, r6
 8013024:	9000      	str	r0, [sp, #0]
 8013026:	9a02      	ldr	r2, [sp, #8]
 8013028:	4629      	mov	r1, r5
 801302a:	a803      	add	r0, sp, #12
 801302c:	f001 f8b5 	bl	801419a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013030:	a803      	add	r0, sp, #12
 8013032:	f001 fc9b 	bl	801496c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013036:	2401      	movs	r4, #1
 8013038:	b2a3      	uxth	r3, r4
 801303a:	b140      	cbz	r0, 801304e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 801303c:	280a      	cmp	r0, #10
 801303e:	bf08      	it	eq
 8013040:	3301      	addeq	r3, #1
 8013042:	a803      	add	r0, sp, #12
 8013044:	bf08      	it	eq
 8013046:	b21c      	sxtheq	r4, r3
 8013048:	f001 fc90 	bl	801496c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801304c:	e7f4      	b.n	8013038 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801304e:	4618      	mov	r0, r3
 8013050:	b01d      	add	sp, #116	@ 0x74
 8013052:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013056:	b003      	add	sp, #12
 8013058:	4770      	bx	lr

0801305a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801305a:	b40e      	push	{r1, r2, r3}
 801305c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801305e:	b09e      	sub	sp, #120	@ 0x78
 8013060:	ab23      	add	r3, sp, #140	@ 0x8c
 8013062:	4604      	mov	r4, r0
 8013064:	f853 5b04 	ldr.w	r5, [r3], #4
 8013068:	9303      	str	r3, [sp, #12]
 801306a:	a805      	add	r0, sp, #20
 801306c:	f001 f842 	bl	80140f4 <_ZN8touchgfx12TextProviderC1Ev>
 8013070:	6823      	ldr	r3, [r4, #0]
 8013072:	4620      	mov	r0, r4
 8013074:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8013076:	4798      	blx	r3
 8013078:	6823      	ldr	r3, [r4, #0]
 801307a:	4606      	mov	r6, r0
 801307c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801307e:	4620      	mov	r0, r4
 8013080:	4798      	blx	r3
 8013082:	4633      	mov	r3, r6
 8013084:	4629      	mov	r1, r5
 8013086:	9000      	str	r0, [sp, #0]
 8013088:	9a03      	ldr	r2, [sp, #12]
 801308a:	a805      	add	r0, sp, #20
 801308c:	ad1e      	add	r5, sp, #120	@ 0x78
 801308e:	f001 f884 	bl	801419a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013092:	2100      	movs	r1, #0
 8013094:	f845 1d68 	str.w	r1, [r5, #-104]!
 8013098:	4622      	mov	r2, r4
 801309a:	462b      	mov	r3, r5
 801309c:	a805      	add	r0, sp, #20
 801309e:	f001 fb97 	bl	80147d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80130a2:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 80130a6:	b1d8      	cbz	r0, 80130e0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 80130a8:	280a      	cmp	r0, #10
 80130aa:	d012      	beq.n	80130d2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80130ac:	9804      	ldr	r0, [sp, #16]
 80130ae:	b180      	cbz	r0, 80130d2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80130b0:	7b47      	ldrb	r7, [r0, #13]
 80130b2:	88e2      	ldrh	r2, [r4, #6]
 80130b4:	00fb      	lsls	r3, r7, #3
 80130b6:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80130ba:	7a03      	ldrb	r3, [r0, #8]
 80130bc:	430b      	orrs	r3, r1
 80130be:	0679      	lsls	r1, r7, #25
 80130c0:	bf44      	itt	mi
 80130c2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80130c6:	b21b      	sxthmi	r3, r3
 80130c8:	1ad3      	subs	r3, r2, r3
 80130ca:	b21b      	sxth	r3, r3
 80130cc:	429e      	cmp	r6, r3
 80130ce:	bfa8      	it	ge
 80130d0:	461e      	movge	r6, r3
 80130d2:	462b      	mov	r3, r5
 80130d4:	4622      	mov	r2, r4
 80130d6:	2100      	movs	r1, #0
 80130d8:	a805      	add	r0, sp, #20
 80130da:	f001 fb79 	bl	80147d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80130de:	e7e2      	b.n	80130a6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 80130e0:	4630      	mov	r0, r6
 80130e2:	b01e      	add	sp, #120	@ 0x78
 80130e4:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80130e8:	b003      	add	sp, #12
 80130ea:	4770      	bx	lr

080130ec <_ZNK8touchgfx8Drawable10invalidateEv>:
 80130ec:	b513      	push	{r0, r1, r4, lr}
 80130ee:	6803      	ldr	r3, [r0, #0]
 80130f0:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80130f4:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80130f8:	f8ad 1004 	strh.w	r1, [sp, #4]
 80130fc:	2400      	movs	r4, #0
 80130fe:	9400      	str	r4, [sp, #0]
 8013100:	f8ad 2006 	strh.w	r2, [sp, #6]
 8013104:	691b      	ldr	r3, [r3, #16]
 8013106:	4669      	mov	r1, sp
 8013108:	4798      	blx	r3
 801310a:	b002      	add	sp, #8
 801310c:	bd10      	pop	{r4, pc}

0801310e <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801310e:	b538      	push	{r3, r4, r5, lr}
 8013110:	680b      	ldr	r3, [r1, #0]
 8013112:	460c      	mov	r4, r1
 8013114:	68db      	ldr	r3, [r3, #12]
 8013116:	4605      	mov	r5, r0
 8013118:	4798      	blx	r3
 801311a:	6823      	ldr	r3, [r4, #0]
 801311c:	4620      	mov	r0, r4
 801311e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013120:	4629      	mov	r1, r5
 8013122:	4798      	blx	r3
 8013124:	4628      	mov	r0, r5
 8013126:	bd38      	pop	{r3, r4, r5, pc}

08013128 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8013128:	b410      	push	{r4}
 801312a:	880a      	ldrh	r2, [r1, #0]
 801312c:	8884      	ldrh	r4, [r0, #4]
 801312e:	4422      	add	r2, r4
 8013130:	800a      	strh	r2, [r1, #0]
 8013132:	88c4      	ldrh	r4, [r0, #6]
 8013134:	884a      	ldrh	r2, [r1, #2]
 8013136:	4422      	add	r2, r4
 8013138:	804a      	strh	r2, [r1, #2]
 801313a:	6940      	ldr	r0, [r0, #20]
 801313c:	b120      	cbz	r0, 8013148 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801313e:	6803      	ldr	r3, [r0, #0]
 8013140:	f85d 4b04 	ldr.w	r4, [sp], #4
 8013144:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013146:	4718      	bx	r3
 8013148:	f85d 4b04 	ldr.w	r4, [sp], #4
 801314c:	4770      	bx	lr

0801314e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801314e:	b570      	push	{r4, r5, r6, lr}
 8013150:	8882      	ldrh	r2, [r0, #4]
 8013152:	880b      	ldrh	r3, [r1, #0]
 8013154:	4413      	add	r3, r2
 8013156:	800b      	strh	r3, [r1, #0]
 8013158:	88c2      	ldrh	r2, [r0, #6]
 801315a:	884b      	ldrh	r3, [r1, #2]
 801315c:	460c      	mov	r4, r1
 801315e:	4413      	add	r3, r2
 8013160:	804b      	strh	r3, [r1, #2]
 8013162:	4605      	mov	r5, r0
 8013164:	1d01      	adds	r1, r0, #4
 8013166:	4620      	mov	r0, r4
 8013168:	f7f9 faa0 	bl	800c6ac <_ZN8touchgfx4RectaNERKS0_>
 801316c:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8013170:	2b00      	cmp	r3, #0
 8013172:	dd0b      	ble.n	801318c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8013174:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8013178:	2b00      	cmp	r3, #0
 801317a:	dd07      	ble.n	801318c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801317c:	6968      	ldr	r0, [r5, #20]
 801317e:	b128      	cbz	r0, 801318c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8013180:	6803      	ldr	r3, [r0, #0]
 8013182:	4621      	mov	r1, r4
 8013184:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013186:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801318a:	4718      	bx	r3
 801318c:	bd70      	pop	{r4, r5, r6, pc}
	...

08013190 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8013190:	b570      	push	{r4, r5, r6, lr}
 8013192:	8882      	ldrh	r2, [r0, #4]
 8013194:	880b      	ldrh	r3, [r1, #0]
 8013196:	4413      	add	r3, r2
 8013198:	800b      	strh	r3, [r1, #0]
 801319a:	88c2      	ldrh	r2, [r0, #6]
 801319c:	884b      	ldrh	r3, [r1, #2]
 801319e:	460c      	mov	r4, r1
 80131a0:	4413      	add	r3, r2
 80131a2:	804b      	strh	r3, [r1, #2]
 80131a4:	4605      	mov	r5, r0
 80131a6:	1d01      	adds	r1, r0, #4
 80131a8:	4620      	mov	r0, r4
 80131aa:	f7f9 fa7f 	bl	800c6ac <_ZN8touchgfx4RectaNERKS0_>
 80131ae:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80131b2:	2b00      	cmp	r3, #0
 80131b4:	dd19      	ble.n	80131ea <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80131b6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80131ba:	2b00      	cmp	r3, #0
 80131bc:	dd15      	ble.n	80131ea <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80131be:	6968      	ldr	r0, [r5, #20]
 80131c0:	b128      	cbz	r0, 80131ce <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80131c2:	6803      	ldr	r3, [r0, #0]
 80131c4:	4621      	mov	r1, r4
 80131c6:	691b      	ldr	r3, [r3, #16]
 80131c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80131cc:	4718      	bx	r3
 80131ce:	4b07      	ldr	r3, [pc, #28]	@ (80131ec <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80131d0:	681b      	ldr	r3, [r3, #0]
 80131d2:	3304      	adds	r3, #4
 80131d4:	429d      	cmp	r5, r3
 80131d6:	d108      	bne.n	80131ea <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80131d8:	f7fe fdd6 	bl	8011d88 <_ZN8touchgfx11Application11getInstanceEv>
 80131dc:	6803      	ldr	r3, [r0, #0]
 80131de:	6821      	ldr	r1, [r4, #0]
 80131e0:	6862      	ldr	r2, [r4, #4]
 80131e2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80131e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80131e8:	4718      	bx	r3
 80131ea:	bd70      	pop	{r4, r5, r6, pc}
 80131ec:	20015330 	.word	0x20015330

080131f0 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80131f0:	b570      	push	{r4, r5, r6, lr}
 80131f2:	4604      	mov	r4, r0
 80131f4:	4616      	mov	r6, r2
 80131f6:	460d      	mov	r5, r1
 80131f8:	b901      	cbnz	r1, 80131fc <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80131fa:	b192      	cbz	r2, 8013222 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80131fc:	6823      	ldr	r3, [r4, #0]
 80131fe:	4620      	mov	r0, r4
 8013200:	699b      	ldr	r3, [r3, #24]
 8013202:	4798      	blx	r3
 8013204:	88e2      	ldrh	r2, [r4, #6]
 8013206:	88a1      	ldrh	r1, [r4, #4]
 8013208:	4432      	add	r2, r6
 801320a:	4429      	add	r1, r5
 801320c:	4620      	mov	r0, r4
 801320e:	b212      	sxth	r2, r2
 8013210:	b209      	sxth	r1, r1
 8013212:	f7f0 f8c6 	bl	80033a2 <_ZN8touchgfx8Drawable5setXYEss>
 8013216:	6823      	ldr	r3, [r4, #0]
 8013218:	4620      	mov	r0, r4
 801321a:	699b      	ldr	r3, [r3, #24]
 801321c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013220:	4718      	bx	r3
 8013222:	bd70      	pop	{r4, r5, r6, pc}

08013224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8013224:	b510      	push	{r4, lr}
 8013226:	4604      	mov	r4, r0
 8013228:	4608      	mov	r0, r1
 801322a:	2300      	movs	r3, #0
 801322c:	8023      	strh	r3, [r4, #0]
 801322e:	8063      	strh	r3, [r4, #2]
 8013230:	6803      	ldr	r3, [r0, #0]
 8013232:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8013236:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801323a:	80a1      	strh	r1, [r4, #4]
 801323c:	80e2      	strh	r2, [r4, #6]
 801323e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013240:	4621      	mov	r1, r4
 8013242:	4798      	blx	r3
 8013244:	4620      	mov	r0, r4
 8013246:	bd10      	pop	{r4, pc}

08013248 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 8013248:	4770      	bx	lr

0801324a <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 801324a:	b510      	push	{r4, lr}
 801324c:	211c      	movs	r1, #28
 801324e:	4604      	mov	r4, r0
 8013250:	f011 fb6b 	bl	802492a <_ZdlPvj>
 8013254:	4620      	mov	r0, r4
 8013256:	bd10      	pop	{r4, pc}

08013258 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 8013258:	4a04      	ldr	r2, [pc, #16]	@ (801326c <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 801325a:	6002      	str	r2, [r0, #0]
 801325c:	2200      	movs	r2, #0
 801325e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8013262:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8013266:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801326a:	4770      	bx	lr
 801326c:	08028ce0 	.word	0x08028ce0

08013270 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 8013270:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013274:	4604      	mov	r4, r0
 8013276:	b087      	sub	sp, #28
 8013278:	8b45      	ldrh	r5, [r0, #26]
 801327a:	f8b2 c000 	ldrh.w	ip, [r2]
 801327e:	9105      	str	r1, [sp, #20]
 8013280:	68e1      	ldr	r1, [r4, #12]
 8013282:	9203      	str	r2, [sp, #12]
 8013284:	1c68      	adds	r0, r5, #1
 8013286:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 801328a:	f01c 0501 	ands.w	r5, ip, #1
 801328e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013292:	9502      	str	r5, [sp, #8]
 8013294:	b280      	uxth	r0, r0
 8013296:	d07d      	beq.n	8013394 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
 8013298:	ee07 2a90 	vmov	s15, r2
 801329c:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 80132a0:	8360      	strh	r0, [r4, #26]
 80132a2:	edc1 6a00 	vstr	s13, [r1]
 80132a6:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80132aa:	8b61      	ldrh	r1, [r4, #26]
 80132ac:	ee07 2a10 	vmov	s14, r2
 80132b0:	68e2      	ldr	r2, [r4, #12]
 80132b2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80132b6:	f04f 0e00 	mov.w	lr, #0
 80132ba:	1c48      	adds	r0, r1, #1
 80132bc:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 80132c0:	ee06 ea10 	vmov	s12, lr
 80132c4:	8360      	strh	r0, [r4, #26]
 80132c6:	ed82 7a00 	vstr	s14, [r2]
 80132ca:	8b21      	ldrh	r1, [r4, #24]
 80132cc:	68a2      	ldr	r2, [r4, #8]
 80132ce:	2501      	movs	r5, #1
 80132d0:	1c48      	adds	r0, r1, #1
 80132d2:	8320      	strh	r0, [r4, #24]
 80132d4:	5455      	strb	r5, [r2, r1]
 80132d6:	2200      	movs	r2, #0
 80132d8:	3304      	adds	r3, #4
 80132da:	ee07 2a90 	vmov	s15, r2
 80132de:	9300      	str	r3, [sp, #0]
 80132e0:	46aa      	mov	sl, r5
 80132e2:	4613      	mov	r3, r2
 80132e4:	4611      	mov	r1, r2
 80132e6:	462e      	mov	r6, r5
 80132e8:	9201      	str	r2, [sp, #4]
 80132ea:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 80132ee:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 80132f2:	9805      	ldr	r0, [sp, #20]
 80132f4:	f8d4 b008 	ldr.w	fp, [r4, #8]
 80132f8:	f108 0701 	add.w	r7, r8, #1
 80132fc:	42a8      	cmp	r0, r5
 80132fe:	b2bf      	uxth	r7, r7
 8013300:	eb0b 0908 	add.w	r9, fp, r8
 8013304:	f340 80db 	ble.w	80134be <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
 8013308:	fa4c f906 	asr.w	r9, ip, r6
 801330c:	f009 0901 	and.w	r9, r9, #1
 8013310:	fa5f f389 	uxtb.w	r3, r9
 8013314:	9304      	str	r3, [sp, #16]
 8013316:	9b00      	ldr	r3, [sp, #0]
 8013318:	f9b3 1000 	ldrsh.w	r1, [r3]
 801331c:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013320:	f1b9 0f00 	cmp.w	r9, #0
 8013324:	d07d      	beq.n	8013422 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
 8013326:	ee05 1a10 	vmov	s10, r1
 801332a:	eef8 4ac5 	vcvt.f32.s32	s9, s10
 801332e:	ee05 3a10 	vmov	s10, r3
 8013332:	8327      	strh	r7, [r4, #24]
 8013334:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8013338:	f1ba 0f00 	cmp.w	sl, #0
 801333c:	d050      	beq.n	80133e0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
 801333e:	f04f 0002 	mov.w	r0, #2
 8013342:	f80b 0008 	strb.w	r0, [fp, r8]
 8013346:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801334a:	68e7      	ldr	r7, [r4, #12]
 801334c:	f108 0901 	add.w	r9, r8, #1
 8013350:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8013354:	f8a4 901a 	strh.w	r9, [r4, #26]
 8013358:	edc7 4a00 	vstr	s9, [r7]
 801335c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8013360:	68e7      	ldr	r7, [r4, #12]
 8013362:	f108 0901 	add.w	r9, r8, #1
 8013366:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801336a:	f8a4 901a 	strh.w	r9, [r4, #26]
 801336e:	ed87 5a00 	vstr	s10, [r7]
 8013372:	3601      	adds	r6, #1
 8013374:	2e10      	cmp	r6, #16
 8013376:	d106      	bne.n	8013386 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
 8013378:	9e01      	ldr	r6, [sp, #4]
 801337a:	9803      	ldr	r0, [sp, #12]
 801337c:	3601      	adds	r6, #1
 801337e:	9601      	str	r6, [sp, #4]
 8013380:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
 8013384:	2600      	movs	r6, #0
 8013386:	9800      	ldr	r0, [sp, #0]
 8013388:	f8dd a010 	ldr.w	sl, [sp, #16]
 801338c:	3004      	adds	r0, #4
 801338e:	3501      	adds	r5, #1
 8013390:	9000      	str	r0, [sp, #0]
 8013392:	e7ac      	b.n	80132ee <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
 8013394:	ee06 2a10 	vmov	s12, r2
 8013398:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 801339c:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 80133a0:	ee16 5a10 	vmov	r5, s12
 80133a4:	442a      	add	r2, r5
 80133a6:	ee06 2a90 	vmov	s13, r2
 80133aa:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 80133ae:	8360      	strh	r0, [r4, #26]
 80133b0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80133b4:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80133b8:	4472      	add	r2, lr
 80133ba:	ee07 2a10 	vmov	s14, r2
 80133be:	ee66 6aa7 	vmul.f32	s13, s13, s15
 80133c2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80133c6:	edc1 6a00 	vstr	s13, [r1]
 80133ca:	8b61      	ldrh	r1, [r4, #26]
 80133cc:	68e2      	ldr	r2, [r4, #12]
 80133ce:	ee27 7a27 	vmul.f32	s14, s14, s15
 80133d2:	1c48      	adds	r0, r1, #1
 80133d4:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 80133d8:	8360      	strh	r0, [r4, #26]
 80133da:	ed82 7a00 	vstr	s14, [r2]
 80133de:	e774      	b.n	80132ca <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
 80133e0:	f04f 0005 	mov.w	r0, #5
 80133e4:	f80b 0008 	strb.w	r0, [fp, r8]
 80133e8:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80133ec:	68e7      	ldr	r7, [r4, #12]
 80133ee:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
 80133f2:	f108 0901 	add.w	r9, r8, #1
 80133f6:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80133fa:	f8a4 901a 	strh.w	r9, [r4, #26]
 80133fe:	ed87 4a00 	vstr	s8, [r7]
 8013402:	ee04 2a10 	vmov	s8, r2
 8013406:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801340a:	68e7      	ldr	r7, [r4, #12]
 801340c:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 8013410:	f108 0901 	add.w	r9, r8, #1
 8013414:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8013418:	f8a4 901a 	strh.w	r9, [r4, #26]
 801341c:	ed87 4a00 	vstr	s8, [r7]
 8013420:	e791      	b.n	8013346 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
 8013422:	f1ba 0f00 	cmp.w	sl, #0
 8013426:	d146      	bne.n	80134b6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
 8013428:	f04f 0005 	mov.w	r0, #5
 801342c:	8327      	strh	r7, [r4, #24]
 801342e:	f80b 0008 	strb.w	r0, [fp, r8]
 8013432:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8013436:	68e7      	ldr	r7, [r4, #12]
 8013438:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 801343c:	f108 0901 	add.w	r9, r8, #1
 8013440:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8013444:	ee17 0a90 	vmov	r0, s15
 8013448:	f8a4 901a 	strh.w	r9, [r4, #26]
 801344c:	ed87 5a00 	vstr	s10, [r7]
 8013450:	ee05 2a10 	vmov	s10, r2
 8013454:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8013458:	68e7      	ldr	r7, [r4, #12]
 801345a:	4408      	add	r0, r1
 801345c:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8013460:	ee07 0a90 	vmov	s15, r0
 8013464:	f108 0901 	add.w	r9, r8, #1
 8013468:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801346c:	f8a4 901a 	strh.w	r9, [r4, #26]
 8013470:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013474:	ed87 5a00 	vstr	s10, [r7]
 8013478:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801347c:	68e7      	ldr	r7, [r4, #12]
 801347e:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8013482:	f108 0901 	add.w	r9, r8, #1
 8013486:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801348a:	441a      	add	r2, r3
 801348c:	f8a4 901a 	strh.w	r9, [r4, #26]
 8013490:	edc7 7a00 	vstr	s15, [r7]
 8013494:	ee07 2a90 	vmov	s15, r2
 8013498:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801349c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80134a0:	68e7      	ldr	r7, [r4, #12]
 80134a2:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80134a6:	f108 0901 	add.w	r9, r8, #1
 80134aa:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80134ae:	f8a4 901a 	strh.w	r9, [r4, #26]
 80134b2:	edc7 7a00 	vstr	s15, [r7]
 80134b6:	461a      	mov	r2, r3
 80134b8:	ee07 1a90 	vmov	s15, r1
 80134bc:	e759      	b.n	8013372 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 80134be:	f1ba 0f00 	cmp.w	sl, #0
 80134c2:	d045      	beq.n	8013550 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 80134c4:	ee05 1a90 	vmov	s11, r1
 80134c8:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 80134cc:	eef4 5a66 	vcmp.f32	s11, s13
 80134d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134d4:	d108      	bne.n	80134e8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
 80134d6:	ee05 3a90 	vmov	s11, r3
 80134da:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 80134de:	eef4 5a47 	vcmp.f32	s11, s14
 80134e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134e6:	d033      	beq.n	8013550 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 80134e8:	9b02      	ldr	r3, [sp, #8]
 80134ea:	8327      	strh	r7, [r4, #24]
 80134ec:	b1b3      	cbz	r3, 801351c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
 80134ee:	2302      	movs	r3, #2
 80134f0:	f889 3000 	strb.w	r3, [r9]
 80134f4:	8b62      	ldrh	r2, [r4, #26]
 80134f6:	68e3      	ldr	r3, [r4, #12]
 80134f8:	1c51      	adds	r1, r2, #1
 80134fa:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80134fe:	8361      	strh	r1, [r4, #26]
 8013500:	edc3 6a00 	vstr	s13, [r3]
 8013504:	8b62      	ldrh	r2, [r4, #26]
 8013506:	68e3      	ldr	r3, [r4, #12]
 8013508:	1c51      	adds	r1, r2, #1
 801350a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801350e:	8361      	strh	r1, [r4, #26]
 8013510:	ed83 7a00 	vstr	s14, [r3]
 8013514:	9800      	ldr	r0, [sp, #0]
 8013516:	b007      	add	sp, #28
 8013518:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801351c:	2305      	movs	r3, #5
 801351e:	f889 3000 	strb.w	r3, [r9]
 8013522:	8b62      	ldrh	r2, [r4, #26]
 8013524:	68e3      	ldr	r3, [r4, #12]
 8013526:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801352a:	1c51      	adds	r1, r2, #1
 801352c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8013530:	8361      	strh	r1, [r4, #26]
 8013532:	ee07 ea90 	vmov	s15, lr
 8013536:	ed83 6a00 	vstr	s12, [r3]
 801353a:	8b62      	ldrh	r2, [r4, #26]
 801353c:	68e3      	ldr	r3, [r4, #12]
 801353e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013542:	1c51      	adds	r1, r2, #1
 8013544:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8013548:	8361      	strh	r1, [r4, #26]
 801354a:	edc3 7a00 	vstr	s15, [r3]
 801354e:	e7d1      	b.n	80134f4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 8013550:	ee05 2a90 	vmov	s11, r2
 8013554:	9902      	ldr	r1, [sp, #8]
 8013556:	8327      	strh	r7, [r4, #24]
 8013558:	2305      	movs	r3, #5
 801355a:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 801355e:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8013562:	f889 3000 	strb.w	r3, [r9]
 8013566:	b181      	cbz	r1, 801358a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
 8013568:	8b62      	ldrh	r2, [r4, #26]
 801356a:	68e3      	ldr	r3, [r4, #12]
 801356c:	1c51      	adds	r1, r2, #1
 801356e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8013572:	8361      	strh	r1, [r4, #26]
 8013574:	ed83 5a00 	vstr	s10, [r3]
 8013578:	8b62      	ldrh	r2, [r4, #26]
 801357a:	68e3      	ldr	r3, [r4, #12]
 801357c:	1c51      	adds	r1, r2, #1
 801357e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8013582:	8361      	strh	r1, [r4, #26]
 8013584:	edc3 5a00 	vstr	s11, [r3]
 8013588:	e7b4      	b.n	80134f4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 801358a:	8b65      	ldrh	r5, [r4, #26]
 801358c:	68e1      	ldr	r1, [r4, #12]
 801358e:	1c6e      	adds	r6, r5, #1
 8013590:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8013594:	8366      	strh	r6, [r4, #26]
 8013596:	ed81 5a00 	vstr	s10, [r1]
 801359a:	8b65      	ldrh	r5, [r4, #26]
 801359c:	68e1      	ldr	r1, [r4, #12]
 801359e:	1c6e      	adds	r6, r5, #1
 80135a0:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 80135a4:	8366      	strh	r6, [r4, #26]
 80135a6:	edc1 5a00 	vstr	s11, [r1]
 80135aa:	8b65      	ldrh	r5, [r4, #26]
 80135ac:	68e1      	ldr	r1, [r4, #12]
 80135ae:	1c6e      	adds	r6, r5, #1
 80135b0:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 80135b4:	ee17 0a90 	vmov	r0, s15
 80135b8:	ee16 5a10 	vmov	r5, s12
 80135bc:	4428      	add	r0, r5
 80135be:	ee07 0a90 	vmov	s15, r0
 80135c2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80135c6:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 80135ca:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80135ce:	4472      	add	r2, lr
 80135d0:	8366      	strh	r6, [r4, #26]
 80135d2:	edc1 7a00 	vstr	s15, [r1]
 80135d6:	ee07 2a90 	vmov	s15, r2
 80135da:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80135de:	8b61      	ldrh	r1, [r4, #26]
 80135e0:	68e5      	ldr	r5, [r4, #12]
 80135e2:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80135e6:	1c4e      	adds	r6, r1, #1
 80135e8:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 80135ec:	8366      	strh	r6, [r4, #26]
 80135ee:	edc1 7a00 	vstr	s15, [r1]
 80135f2:	8b22      	ldrh	r2, [r4, #24]
 80135f4:	68a1      	ldr	r1, [r4, #8]
 80135f6:	1c55      	adds	r5, r2, #1
 80135f8:	8325      	strh	r5, [r4, #24]
 80135fa:	548b      	strb	r3, [r1, r2]
 80135fc:	e791      	b.n	8013522 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

08013600 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 8013600:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013604:	b08e      	sub	sp, #56	@ 0x38
 8013606:	4604      	mov	r4, r0
 8013608:	4688      	mov	r8, r1
 801360a:	4615      	mov	r5, r2
 801360c:	4699      	mov	r9, r3
 801360e:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 8013610:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 8013614:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 8013616:	f7ef f80d 	bl	8002634 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 801361a:	6060      	str	r0, [r4, #4]
 801361c:	f1b9 0f00 	cmp.w	r9, #0
 8013620:	f000 80e8 	beq.w	80137f4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 8013624:	2800      	cmp	r0, #0
 8013626:	f000 80e5 	beq.w	80137f4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 801362a:	a805      	add	r0, sp, #20
 801362c:	f000 f8f9 	bl	8013822 <_ZN8touchgfx9Matrix3x3C1Ev>
 8013630:	6833      	ldr	r3, [r6, #0]
 8013632:	4630      	mov	r0, r6
 8013634:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8013636:	4798      	blx	r3
 8013638:	a805      	add	r0, sp, #20
 801363a:	eef0 0a40 	vmov.f32	s1, s0
 801363e:	f000 f8f4 	bl	801382a <_ZN8touchgfx9Matrix3x35scaleEff>
 8013642:	6860      	ldr	r0, [r4, #4]
 8013644:	f1ba 0f03 	cmp.w	sl, #3
 8013648:	d83b      	bhi.n	80136c2 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 801364a:	e8df f00a 	tbb	[pc, sl]
 801364e:	1002      	.short	0x1002
 8013650:	9f71      	.short	0x9f71
 8013652:	6803      	ldr	r3, [r0, #0]
 8013654:	462a      	mov	r2, r5
 8013656:	689b      	ldr	r3, [r3, #8]
 8013658:	4641      	mov	r1, r8
 801365a:	4798      	blx	r3
 801365c:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8013660:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8013664:	ee07 7a90 	vmov	s15, r7
 8013668:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 801366c:	e026      	b.n	80136bc <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 801366e:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 8013672:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8013676:	8869      	ldrh	r1, [r5, #2]
 8013678:	f8ad 2010 	strh.w	r2, [sp, #16]
 801367c:	1a9b      	subs	r3, r3, r2
 801367e:	1a5b      	subs	r3, r3, r1
 8013680:	f8ad 300c 	strh.w	r3, [sp, #12]
 8013684:	882b      	ldrh	r3, [r5, #0]
 8013686:	f8ad 300e 	strh.w	r3, [sp, #14]
 801368a:	88ab      	ldrh	r3, [r5, #4]
 801368c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013690:	6803      	ldr	r3, [r0, #0]
 8013692:	aa03      	add	r2, sp, #12
 8013694:	689b      	ldr	r3, [r3, #8]
 8013696:	4641      	mov	r1, r8
 8013698:	4798      	blx	r3
 801369a:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 80137fc <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 801369e:	a805      	add	r0, sp, #20
 80136a0:	f000 f8e8 	bl	8013874 <_ZN8touchgfx9Matrix3x36rotateEf>
 80136a4:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 80136a8:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 80136aa:	ee07 7a90 	vmov	s15, r7
 80136ae:	1a9b      	subs	r3, r3, r2
 80136b0:	ee00 3a10 	vmov	s0, r3
 80136b4:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 80136b8:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 80136bc:	a805      	add	r0, sp, #20
 80136be:	f000 f927 	bl	8013910 <_ZN8touchgfx9Matrix3x39translateEff>
 80136c2:	6860      	ldr	r0, [r4, #4]
 80136c4:	6803      	ldr	r3, [r0, #0]
 80136c6:	a905      	add	r1, sp, #20
 80136c8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80136ca:	4798      	blx	r3
 80136cc:	6860      	ldr	r0, [r4, #4]
 80136ce:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 80136d0:	6803      	ldr	r3, [r0, #0]
 80136d2:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 80136d6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80136d8:	4798      	blx	r3
 80136da:	6860      	ldr	r0, [r4, #4]
 80136dc:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 80136e0:	6803      	ldr	r3, [r0, #0]
 80136e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80136e4:	4798      	blx	r3
 80136e6:	6860      	ldr	r0, [r4, #4]
 80136e8:	6803      	ldr	r3, [r0, #0]
 80136ea:	2101      	movs	r1, #1
 80136ec:	68db      	ldr	r3, [r3, #12]
 80136ee:	2500      	movs	r5, #0
 80136f0:	4798      	blx	r3
 80136f2:	f8b9 7000 	ldrh.w	r7, [r9]
 80136f6:	61a5      	str	r5, [r4, #24]
 80136f8:	f104 0310 	add.w	r3, r4, #16
 80136fc:	f104 0208 	add.w	r2, r4, #8
 8013700:	f104 0114 	add.w	r1, r4, #20
 8013704:	f104 000c 	add.w	r0, r4, #12
 8013708:	f109 0602 	add.w	r6, r9, #2
 801370c:	f7f1 fa68 	bl	8004be0 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 8013710:	42af      	cmp	r7, r5
 8013712:	dd60      	ble.n	80137d6 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 8013714:	8831      	ldrh	r1, [r6, #0]
 8013716:	f101 030f 	add.w	r3, r1, #15
 801371a:	1cb2      	adds	r2, r6, #2
 801371c:	f3c3 1307 	ubfx	r3, r3, #4, #8
 8013720:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013724:	4620      	mov	r0, r4
 8013726:	f7ff fda3 	bl	8013270 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 801372a:	3501      	adds	r5, #1
 801372c:	4606      	mov	r6, r0
 801372e:	e7ef      	b.n	8013710 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 8013730:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8013734:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8013738:	8829      	ldrh	r1, [r5, #0]
 801373a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801373e:	1a9b      	subs	r3, r3, r2
 8013740:	1a5b      	subs	r3, r3, r1
 8013742:	f8ad 300c 	strh.w	r3, [sp, #12]
 8013746:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801374a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801374e:	886d      	ldrh	r5, [r5, #2]
 8013750:	f8ad 1012 	strh.w	r1, [sp, #18]
 8013754:	1a5b      	subs	r3, r3, r1
 8013756:	1b5b      	subs	r3, r3, r5
 8013758:	f8ad 300e 	strh.w	r3, [sp, #14]
 801375c:	6803      	ldr	r3, [r0, #0]
 801375e:	aa03      	add	r2, sp, #12
 8013760:	689b      	ldr	r3, [r3, #8]
 8013762:	4641      	mov	r1, r8
 8013764:	4798      	blx	r3
 8013766:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 8013800 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 801376a:	a805      	add	r0, sp, #20
 801376c:	f000 f882 	bl	8013874 <_ZN8touchgfx9Matrix3x36rotateEf>
 8013770:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8013774:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8013776:	1a9b      	subs	r3, r3, r2
 8013778:	ee00 3a90 	vmov	s1, r3
 801377c:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 8013780:	1bdb      	subs	r3, r3, r7
 8013782:	ee00 3a10 	vmov	s0, r3
 8013786:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 801378a:	e795      	b.n	80136b8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 801378c:	886b      	ldrh	r3, [r5, #2]
 801378e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8013792:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8013796:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801379a:	8829      	ldrh	r1, [r5, #0]
 801379c:	f8ad 2012 	strh.w	r2, [sp, #18]
 80137a0:	1a9b      	subs	r3, r3, r2
 80137a2:	1a5b      	subs	r3, r3, r1
 80137a4:	f8ad 300e 	strh.w	r3, [sp, #14]
 80137a8:	88eb      	ldrh	r3, [r5, #6]
 80137aa:	f8ad 3010 	strh.w	r3, [sp, #16]
 80137ae:	6803      	ldr	r3, [r0, #0]
 80137b0:	aa03      	add	r2, sp, #12
 80137b2:	689b      	ldr	r3, [r3, #8]
 80137b4:	4641      	mov	r1, r8
 80137b6:	4798      	blx	r3
 80137b8:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 8013804 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 80137bc:	a805      	add	r0, sp, #20
 80137be:	f000 f859 	bl	8013874 <_ZN8touchgfx9Matrix3x36rotateEf>
 80137c2:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80137c6:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 80137ca:	1bdb      	subs	r3, r3, r7
 80137cc:	ee00 3a90 	vmov	s1, r3
 80137d0:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 80137d4:	e748      	b.n	8013668 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 80137d6:	6860      	ldr	r0, [r4, #4]
 80137d8:	8b22      	ldrh	r2, [r4, #24]
 80137da:	6803      	ldr	r3, [r0, #0]
 80137dc:	2100      	movs	r1, #0
 80137de:	9101      	str	r1, [sp, #4]
 80137e0:	8b61      	ldrh	r1, [r4, #26]
 80137e2:	9100      	str	r1, [sp, #0]
 80137e4:	6a1d      	ldr	r5, [r3, #32]
 80137e6:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 80137ea:	47a8      	blx	r5
 80137ec:	6860      	ldr	r0, [r4, #4]
 80137ee:	6803      	ldr	r3, [r0, #0]
 80137f0:	69db      	ldr	r3, [r3, #28]
 80137f2:	4798      	blx	r3
 80137f4:	b00e      	add	sp, #56	@ 0x38
 80137f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80137fa:	bf00      	nop
 80137fc:	42b40000 	.word	0x42b40000
 8013800:	43340000 	.word	0x43340000
 8013804:	43870000 	.word	0x43870000

08013808 <_ZN8touchgfx9Matrix3x35resetEv>:
 8013808:	2300      	movs	r3, #0
 801380a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801380e:	6002      	str	r2, [r0, #0]
 8013810:	6043      	str	r3, [r0, #4]
 8013812:	6083      	str	r3, [r0, #8]
 8013814:	60c3      	str	r3, [r0, #12]
 8013816:	6102      	str	r2, [r0, #16]
 8013818:	6143      	str	r3, [r0, #20]
 801381a:	6183      	str	r3, [r0, #24]
 801381c:	61c3      	str	r3, [r0, #28]
 801381e:	6202      	str	r2, [r0, #32]
 8013820:	4770      	bx	lr

08013822 <_ZN8touchgfx9Matrix3x3C1Ev>:
 8013822:	b508      	push	{r3, lr}
 8013824:	f7ff fff0 	bl	8013808 <_ZN8touchgfx9Matrix3x35resetEv>
 8013828:	bd08      	pop	{r3, pc}

0801382a <_ZN8touchgfx9Matrix3x35scaleEff>:
 801382a:	edd0 7a00 	vldr	s15, [r0]
 801382e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8013832:	edc0 7a00 	vstr	s15, [r0]
 8013836:	edd0 7a01 	vldr	s15, [r0, #4]
 801383a:	ee67 7a80 	vmul.f32	s15, s15, s0
 801383e:	edc0 7a01 	vstr	s15, [r0, #4]
 8013842:	edd0 7a02 	vldr	s15, [r0, #8]
 8013846:	ee27 0a80 	vmul.f32	s0, s15, s0
 801384a:	edd0 7a03 	vldr	s15, [r0, #12]
 801384e:	ed80 0a02 	vstr	s0, [r0, #8]
 8013852:	ee67 7aa0 	vmul.f32	s15, s15, s1
 8013856:	edc0 7a03 	vstr	s15, [r0, #12]
 801385a:	edd0 7a04 	vldr	s15, [r0, #16]
 801385e:	ee67 7aa0 	vmul.f32	s15, s15, s1
 8013862:	edc0 7a04 	vstr	s15, [r0, #16]
 8013866:	edd0 7a05 	vldr	s15, [r0, #20]
 801386a:	ee67 0aa0 	vmul.f32	s1, s15, s1
 801386e:	edc0 0a05 	vstr	s1, [r0, #20]
 8013872:	4770      	bx	lr

08013874 <_ZN8touchgfx9Matrix3x36rotateEf>:
 8013874:	b510      	push	{r4, lr}
 8013876:	eddf 7a24 	vldr	s15, [pc, #144]	@ 8013908 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 801387a:	ee20 0a27 	vmul.f32	s0, s0, s15
 801387e:	eddf 7a23 	vldr	s15, [pc, #140]	@ 801390c <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 8013882:	ed2d 8b02 	vpush	{d8}
 8013886:	eec0 8a27 	vdiv.f32	s17, s0, s15
 801388a:	4604      	mov	r4, r0
 801388c:	eeb0 0a68 	vmov.f32	s0, s17
 8013890:	f011 f894 	bl	80249bc <cosf>
 8013894:	eeb0 8a40 	vmov.f32	s16, s0
 8013898:	eeb0 0a68 	vmov.f32	s0, s17
 801389c:	f011 f8d2 	bl	8024a44 <sinf>
 80138a0:	edd4 6a03 	vldr	s13, [r4, #12]
 80138a4:	edd4 4a00 	vldr	s9, [r4]
 80138a8:	ed94 7a04 	vldr	s14, [r4, #16]
 80138ac:	ed94 5a01 	vldr	s10, [r4, #4]
 80138b0:	edd4 5a02 	vldr	s11, [r4, #8]
 80138b4:	ee60 7a66 	vnmul.f32	s15, s0, s13
 80138b8:	ee66 6a88 	vmul.f32	s13, s13, s16
 80138bc:	eee8 7a24 	vfma.f32	s15, s16, s9
 80138c0:	eee0 6a24 	vfma.f32	s13, s0, s9
 80138c4:	edc4 7a00 	vstr	s15, [r4]
 80138c8:	ee60 7a47 	vnmul.f32	s15, s0, s14
 80138cc:	ee27 7a08 	vmul.f32	s14, s14, s16
 80138d0:	eee8 7a05 	vfma.f32	s15, s16, s10
 80138d4:	eea0 7a05 	vfma.f32	s14, s0, s10
 80138d8:	edc4 7a01 	vstr	s15, [r4, #4]
 80138dc:	edd4 7a05 	vldr	s15, [r4, #20]
 80138e0:	edc4 6a03 	vstr	s13, [r4, #12]
 80138e4:	ee20 6a67 	vnmul.f32	s12, s0, s15
 80138e8:	ee67 7a88 	vmul.f32	s15, s15, s16
 80138ec:	eea8 6a25 	vfma.f32	s12, s16, s11
 80138f0:	ecbd 8b02 	vpop	{d8}
 80138f4:	eee0 7a25 	vfma.f32	s15, s0, s11
 80138f8:	ed84 6a02 	vstr	s12, [r4, #8]
 80138fc:	ed84 7a04 	vstr	s14, [r4, #16]
 8013900:	edc4 7a05 	vstr	s15, [r4, #20]
 8013904:	bd10      	pop	{r4, pc}
 8013906:	bf00      	nop
 8013908:	40490fdb 	.word	0x40490fdb
 801390c:	43340000 	.word	0x43340000

08013910 <_ZN8touchgfx9Matrix3x39translateEff>:
 8013910:	ed90 6a06 	vldr	s12, [r0, #24]
 8013914:	edd0 7a00 	vldr	s15, [r0]
 8013918:	edd0 6a07 	vldr	s13, [r0, #28]
 801391c:	ed90 7a08 	vldr	s14, [r0, #32]
 8013920:	eee6 7a00 	vfma.f32	s15, s12, s0
 8013924:	edc0 7a00 	vstr	s15, [r0]
 8013928:	edd0 7a01 	vldr	s15, [r0, #4]
 801392c:	eee6 7a80 	vfma.f32	s15, s13, s0
 8013930:	edc0 7a01 	vstr	s15, [r0, #4]
 8013934:	edd0 7a02 	vldr	s15, [r0, #8]
 8013938:	eee7 7a00 	vfma.f32	s15, s14, s0
 801393c:	edc0 7a02 	vstr	s15, [r0, #8]
 8013940:	edd0 7a03 	vldr	s15, [r0, #12]
 8013944:	eee6 7a20 	vfma.f32	s15, s12, s1
 8013948:	edc0 7a03 	vstr	s15, [r0, #12]
 801394c:	edd0 7a04 	vldr	s15, [r0, #16]
 8013950:	eee6 7aa0 	vfma.f32	s15, s13, s1
 8013954:	edc0 7a04 	vstr	s15, [r0, #16]
 8013958:	edd0 7a05 	vldr	s15, [r0, #20]
 801395c:	eee7 7a20 	vfma.f32	s15, s14, s1
 8013960:	edc0 7a05 	vstr	s15, [r0, #20]
 8013964:	4770      	bx	lr

08013966 <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
 8013966:	edd0 6a01 	vldr	s13, [r0, #4]
 801396a:	edd0 7a04 	vldr	s15, [r0, #16]
 801396e:	ed90 7a03 	vldr	s14, [r0, #12]
 8013972:	ee60 7aa7 	vmul.f32	s15, s1, s15
 8013976:	ee60 0aa6 	vmul.f32	s1, s1, s13
 801397a:	edd0 6a00 	vldr	s13, [r0]
 801397e:	eee7 7a00 	vfma.f32	s15, s14, s0
 8013982:	b084      	sub	sp, #16
 8013984:	eee6 0a80 	vfma.f32	s1, s13, s0
 8013988:	ed90 7a05 	vldr	s14, [r0, #20]
 801398c:	ed90 0a02 	vldr	s0, [r0, #8]
 8013990:	ee30 0a80 	vadd.f32	s0, s1, s0
 8013994:	ee77 0a87 	vadd.f32	s1, s15, s14
 8013998:	b004      	add	sp, #16
 801399a:	4770      	bx	lr

0801399c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 801399c:	b530      	push	{r4, r5, lr}
 801399e:	8083      	strh	r3, [r0, #4]
 80139a0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80139a4:	80c3      	strh	r3, [r0, #6]
 80139a6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80139aa:	7203      	strb	r3, [r0, #8]
 80139ac:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80139b0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80139b4:	7243      	strb	r3, [r0, #9]
 80139b6:	7a83      	ldrb	r3, [r0, #10]
 80139b8:	6141      	str	r1, [r0, #20]
 80139ba:	f365 0306 	bfi	r3, r5, #0, #7
 80139be:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80139c2:	8302      	strh	r2, [r0, #24]
 80139c4:	f365 13c7 	bfi	r3, r5, #7, #1
 80139c8:	7283      	strb	r3, [r0, #10]
 80139ca:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80139ce:	72c3      	strb	r3, [r0, #11]
 80139d0:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 80139d4:	7303      	strb	r3, [r0, #12]
 80139d6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80139da:	81c3      	strh	r3, [r0, #14]
 80139dc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80139e0:	8203      	strh	r3, [r0, #16]
 80139e2:	4b01      	ldr	r3, [pc, #4]	@ (80139e8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80139e4:	6003      	str	r3, [r0, #0]
 80139e6:	bd30      	pop	{r4, r5, pc}
 80139e8:	08028cf4 	.word	0x08028cf4

080139ec <_ZNK8touchgfx9ConstFont4findEt>:
 80139ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80139ee:	6944      	ldr	r4, [r0, #20]
 80139f0:	b3bc      	cbz	r4, 8013a62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80139f2:	88a3      	ldrh	r3, [r4, #4]
 80139f4:	8b02      	ldrh	r2, [r0, #24]
 80139f6:	1acb      	subs	r3, r1, r3
 80139f8:	f102 32ff 	add.w	r2, r2, #4294967295
 80139fc:	d431      	bmi.n	8013a62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80139fe:	4293      	cmp	r3, r2
 8013a00:	dd0c      	ble.n	8013a1c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8013a02:	230e      	movs	r3, #14
 8013a04:	fb03 4302 	mla	r3, r3, r2, r4
 8013a08:	889b      	ldrh	r3, [r3, #4]
 8013a0a:	1a5b      	subs	r3, r3, r1
 8013a0c:	1ad3      	subs	r3, r2, r3
 8013a0e:	429a      	cmp	r2, r3
 8013a10:	db27      	blt.n	8013a62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013a12:	2b00      	cmp	r3, #0
 8013a14:	bfbc      	itt	lt
 8013a16:	2302      	movlt	r3, #2
 8013a18:	fb92 f3f3 	sdivlt	r3, r2, r3
 8013a1c:	2500      	movs	r5, #0
 8013a1e:	260e      	movs	r6, #14
 8013a20:	4295      	cmp	r5, r2
 8013a22:	dc1e      	bgt.n	8013a62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013a24:	fb06 4003 	mla	r0, r6, r3, r4
 8013a28:	8887      	ldrh	r7, [r0, #4]
 8013a2a:	42b9      	cmp	r1, r7
 8013a2c:	d01a      	beq.n	8013a64 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8013a2e:	d20d      	bcs.n	8013a4c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8013a30:	1e5a      	subs	r2, r3, #1
 8013a32:	4295      	cmp	r5, r2
 8013a34:	dc15      	bgt.n	8013a62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013a36:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8013a3a:	1a5b      	subs	r3, r3, r1
 8013a3c:	1ad3      	subs	r3, r2, r3
 8013a3e:	429a      	cmp	r2, r3
 8013a40:	db0f      	blt.n	8013a62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013a42:	429d      	cmp	r5, r3
 8013a44:	ddec      	ble.n	8013a20 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8013a46:	1953      	adds	r3, r2, r5
 8013a48:	105b      	asrs	r3, r3, #1
 8013a4a:	e7e9      	b.n	8013a20 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8013a4c:	1c5d      	adds	r5, r3, #1
 8013a4e:	42aa      	cmp	r2, r5
 8013a50:	db07      	blt.n	8013a62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013a52:	8a43      	ldrh	r3, [r0, #18]
 8013a54:	1acb      	subs	r3, r1, r3
 8013a56:	442b      	add	r3, r5
 8013a58:	429d      	cmp	r5, r3
 8013a5a:	dc02      	bgt.n	8013a62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013a5c:	429a      	cmp	r2, r3
 8013a5e:	dadf      	bge.n	8013a20 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8013a60:	e7f1      	b.n	8013a46 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8013a62:	2000      	movs	r0, #0
 8013a64:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013a66 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8013a66:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013a68:	4604      	mov	r4, r0
 8013a6a:	4617      	mov	r7, r2
 8013a6c:	461e      	mov	r6, r3
 8013a6e:	b911      	cbnz	r1, 8013a76 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8013a70:	2500      	movs	r5, #0
 8013a72:	4628      	mov	r0, r5
 8013a74:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013a76:	290a      	cmp	r1, #10
 8013a78:	d0fa      	beq.n	8013a70 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8013a7a:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8013a7e:	4291      	cmp	r1, r2
 8013a80:	d0f6      	beq.n	8013a70 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8013a82:	f242 020b 	movw	r2, #8203	@ 0x200b
 8013a86:	4291      	cmp	r1, r2
 8013a88:	d0f2      	beq.n	8013a70 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8013a8a:	f7ff ffaf 	bl	80139ec <_ZNK8touchgfx9ConstFont4findEt>
 8013a8e:	4605      	mov	r5, r0
 8013a90:	b950      	cbnz	r0, 8013aa8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8013a92:	6823      	ldr	r3, [r4, #0]
 8013a94:	4620      	mov	r0, r4
 8013a96:	691b      	ldr	r3, [r3, #16]
 8013a98:	4798      	blx	r3
 8013a9a:	4601      	mov	r1, r0
 8013a9c:	4620      	mov	r0, r4
 8013a9e:	f7ff ffa5 	bl	80139ec <_ZNK8touchgfx9ConstFont4findEt>
 8013aa2:	4605      	mov	r5, r0
 8013aa4:	2800      	cmp	r0, #0
 8013aa6:	d0e3      	beq.n	8013a70 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8013aa8:	6823      	ldr	r3, [r4, #0]
 8013aaa:	4629      	mov	r1, r5
 8013aac:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8013aae:	4620      	mov	r0, r4
 8013ab0:	4798      	blx	r3
 8013ab2:	6038      	str	r0, [r7, #0]
 8013ab4:	6823      	ldr	r3, [r4, #0]
 8013ab6:	4620      	mov	r0, r4
 8013ab8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8013aba:	4798      	blx	r3
 8013abc:	7030      	strb	r0, [r6, #0]
 8013abe:	e7d8      	b.n	8013a72 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08013ac0 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8013ac0:	2000      	movs	r0, #0
 8013ac2:	4770      	bx	lr

08013ac4 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8013ac4:	2001      	movs	r0, #1
 8013ac6:	4770      	bx	lr

08013ac8 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8013ac8:	2002      	movs	r0, #2
 8013aca:	4770      	bx	lr

08013acc <_ZN8touchgfx6ScreenD1Ev>:
 8013acc:	4770      	bx	lr

08013ace <_ZN8touchgfx12GestureEventD1Ev>:
 8013ace:	4770      	bx	lr

08013ad0 <_ZN8touchgfx9DragEventD1Ev>:
 8013ad0:	4770      	bx	lr

08013ad2 <_ZN8touchgfx10ClickEventD1Ev>:
 8013ad2:	4770      	bx	lr

08013ad4 <_ZN8touchgfx10ClickEventD0Ev>:
 8013ad4:	b510      	push	{r4, lr}
 8013ad6:	210c      	movs	r1, #12
 8013ad8:	4604      	mov	r4, r0
 8013ada:	f010 ff26 	bl	802492a <_ZdlPvj>
 8013ade:	4620      	mov	r0, r4
 8013ae0:	bd10      	pop	{r4, pc}

08013ae2 <_ZN8touchgfx9DragEventD0Ev>:
 8013ae2:	b510      	push	{r4, lr}
 8013ae4:	2110      	movs	r1, #16
 8013ae6:	4604      	mov	r4, r0
 8013ae8:	f010 ff1f 	bl	802492a <_ZdlPvj>
 8013aec:	4620      	mov	r0, r4
 8013aee:	bd10      	pop	{r4, pc}

08013af0 <_ZN8touchgfx12GestureEventD0Ev>:
 8013af0:	b510      	push	{r4, lr}
 8013af2:	210c      	movs	r1, #12
 8013af4:	4604      	mov	r4, r0
 8013af6:	f010 ff18 	bl	802492a <_ZdlPvj>
 8013afa:	4620      	mov	r0, r4
 8013afc:	bd10      	pop	{r4, pc}

08013afe <_ZN8touchgfx6ScreenD0Ev>:
 8013afe:	b510      	push	{r4, lr}
 8013b00:	213c      	movs	r1, #60	@ 0x3c
 8013b02:	4604      	mov	r4, r0
 8013b04:	f010 ff11 	bl	802492a <_ZdlPvj>
 8013b08:	4620      	mov	r0, r4
 8013b0a:	bd10      	pop	{r4, pc}

08013b0c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8013b0c:	b530      	push	{r4, r5, lr}
 8013b0e:	460d      	mov	r5, r1
 8013b10:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8013b12:	b087      	sub	sp, #28
 8013b14:	4604      	mov	r4, r0
 8013b16:	b301      	cbz	r1, 8013b5a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8013b18:	a801      	add	r0, sp, #4
 8013b1a:	f7ff fb83 	bl	8013224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013b1e:	892a      	ldrh	r2, [r5, #8]
 8013b20:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8013b24:	7928      	ldrb	r0, [r5, #4]
 8013b26:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8013b2a:	f88d 0010 	strb.w	r0, [sp, #16]
 8013b2e:	1ad2      	subs	r2, r2, r3
 8013b30:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8013b32:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8013b34:	f8ad 1012 	strh.w	r1, [sp, #18]
 8013b38:	441a      	add	r2, r3
 8013b3a:	896b      	ldrh	r3, [r5, #10]
 8013b3c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8013b40:	f8ad 2014 	strh.w	r2, [sp, #20]
 8013b44:	1b5b      	subs	r3, r3, r5
 8013b46:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 8013b48:	442b      	add	r3, r5
 8013b4a:	4d05      	ldr	r5, [pc, #20]	@ (8013b60 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8013b4c:	9503      	str	r5, [sp, #12]
 8013b4e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013b52:	6803      	ldr	r3, [r0, #0]
 8013b54:	a903      	add	r1, sp, #12
 8013b56:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8013b58:	4798      	blx	r3
 8013b5a:	b007      	add	sp, #28
 8013b5c:	bd30      	pop	{r4, r5, pc}
 8013b5e:	bf00      	nop
 8013b60:	08028d84 	.word	0x08028d84

08013b64 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8013b64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013b68:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8013b6a:	b08a      	sub	sp, #40	@ 0x28
 8013b6c:	4604      	mov	r4, r0
 8013b6e:	460d      	mov	r5, r1
 8013b70:	b113      	cbz	r3, 8013b78 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8013b72:	790b      	ldrb	r3, [r1, #4]
 8013b74:	2b00      	cmp	r3, #0
 8013b76:	d044      	beq.n	8013c02 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8013b78:	f104 0804 	add.w	r8, r4, #4
 8013b7c:	4641      	mov	r1, r8
 8013b7e:	a803      	add	r0, sp, #12
 8013b80:	f7ff fb50 	bl	8013224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013b84:	792b      	ldrb	r3, [r5, #4]
 8013b86:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8013b8a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8013b8e:	b983      	cbnz	r3, 8013bb2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8013b90:	892a      	ldrh	r2, [r5, #8]
 8013b92:	88e9      	ldrh	r1, [r5, #6]
 8013b94:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8013b98:	1b92      	subs	r2, r2, r6
 8013b9a:	1bc9      	subs	r1, r1, r7
 8013b9c:	9301      	str	r3, [sp, #4]
 8013b9e:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 8013ba2:	9300      	str	r3, [sp, #0]
 8013ba4:	b212      	sxth	r2, r2
 8013ba6:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 8013baa:	b209      	sxth	r1, r1
 8013bac:	4640      	mov	r0, r8
 8013bae:	f7f8 fc99 	bl	800c4e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8013bb2:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8013bb4:	b329      	cbz	r1, 8013c02 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8013bb6:	a805      	add	r0, sp, #20
 8013bb8:	f7ff fb34 	bl	8013224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013bbc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013bc0:	792b      	ldrb	r3, [r5, #4]
 8013bc2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8013bc4:	f88d 3020 	strb.w	r3, [sp, #32]
 8013bc8:	1abf      	subs	r7, r7, r2
 8013bca:	88ea      	ldrh	r2, [r5, #6]
 8013bcc:	4417      	add	r7, r2
 8013bce:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 8013bd0:	4417      	add	r7, r2
 8013bd2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8013bd6:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8013bda:	1ab6      	subs	r6, r6, r2
 8013bdc:	892a      	ldrh	r2, [r5, #8]
 8013bde:	4416      	add	r6, r2
 8013be0:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8013be2:	4416      	add	r6, r2
 8013be4:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8013be8:	4a07      	ldr	r2, [pc, #28]	@ (8013c08 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8013bea:	9207      	str	r2, [sp, #28]
 8013bec:	2600      	movs	r6, #0
 8013bee:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 8013bf2:	6803      	ldr	r3, [r0, #0]
 8013bf4:	a907      	add	r1, sp, #28
 8013bf6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8013bf8:	4798      	blx	r3
 8013bfa:	792b      	ldrb	r3, [r5, #4]
 8013bfc:	b10b      	cbz	r3, 8013c02 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8013bfe:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 8013c02:	b00a      	add	sp, #40	@ 0x28
 8013c04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013c08:	08028d5c 	.word	0x08028d5c

08013c0c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8013c0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013c10:	460c      	mov	r4, r1
 8013c12:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8013c14:	b088      	sub	sp, #32
 8013c16:	4605      	mov	r5, r0
 8013c18:	2900      	cmp	r1, #0
 8013c1a:	d06d      	beq.n	8013cf8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8013c1c:	4668      	mov	r0, sp
 8013c1e:	f7ff fb01 	bl	8013224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013c22:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 8013c24:	88e3      	ldrh	r3, [r4, #6]
 8013c26:	f9bd 8000 	ldrsh.w	r8, [sp]
 8013c2a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8013c2e:	440b      	add	r3, r1
 8013c30:	b21b      	sxth	r3, r3
 8013c32:	4543      	cmp	r3, r8
 8013c34:	db31      	blt.n	8013c9a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013c36:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8013c3a:	44c4      	add	ip, r8
 8013c3c:	fa0f fc8c 	sxth.w	ip, ip
 8013c40:	4563      	cmp	r3, ip
 8013c42:	da2a      	bge.n	8013c9a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013c44:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 8013c46:	8926      	ldrh	r6, [r4, #8]
 8013c48:	4416      	add	r6, r2
 8013c4a:	b236      	sxth	r6, r6
 8013c4c:	42be      	cmp	r6, r7
 8013c4e:	db24      	blt.n	8013c9a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013c50:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8013c54:	4438      	add	r0, r7
 8013c56:	b200      	sxth	r0, r0
 8013c58:	4286      	cmp	r6, r0
 8013c5a:	da1e      	bge.n	8013c9a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013c5c:	8963      	ldrh	r3, [r4, #10]
 8013c5e:	4419      	add	r1, r3
 8013c60:	b209      	sxth	r1, r1
 8013c62:	4541      	cmp	r1, r8
 8013c64:	db08      	blt.n	8013c78 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8013c66:	4561      	cmp	r1, ip
 8013c68:	da06      	bge.n	8013c78 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8013c6a:	89a3      	ldrh	r3, [r4, #12]
 8013c6c:	441a      	add	r2, r3
 8013c6e:	b212      	sxth	r2, r2
 8013c70:	42ba      	cmp	r2, r7
 8013c72:	db01      	blt.n	8013c78 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8013c74:	4282      	cmp	r2, r0
 8013c76:	db10      	blt.n	8013c9a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013c78:	4b21      	ldr	r3, [pc, #132]	@ (8013d00 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8013c7a:	9304      	str	r3, [sp, #16]
 8013c7c:	2302      	movs	r3, #2
 8013c7e:	f88d 3014 	strb.w	r3, [sp, #20]
 8013c82:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8013c84:	2300      	movs	r3, #0
 8013c86:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013c8a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013c8e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013c92:	6803      	ldr	r3, [r0, #0]
 8013c94:	a904      	add	r1, sp, #16
 8013c96:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8013c98:	4798      	blx	r3
 8013c9a:	1d29      	adds	r1, r5, #4
 8013c9c:	a802      	add	r0, sp, #8
 8013c9e:	f7ff fac1 	bl	8013224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013ca2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8013ca6:	88e0      	ldrh	r0, [r4, #6]
 8013ca8:	7921      	ldrb	r1, [r4, #4]
 8013caa:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 8013cae:	8922      	ldrh	r2, [r4, #8]
 8013cb0:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 8013cb2:	f88d 1014 	strb.w	r1, [sp, #20]
 8013cb6:	eba3 0808 	sub.w	r8, r3, r8
 8013cba:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013cbe:	1bdf      	subs	r7, r3, r7
 8013cc0:	b2bb      	uxth	r3, r7
 8013cc2:	fa1f f888 	uxth.w	r8, r8
 8013cc6:	8967      	ldrh	r7, [r4, #10]
 8013cc8:	89a4      	ldrh	r4, [r4, #12]
 8013cca:	4440      	add	r0, r8
 8013ccc:	4460      	add	r0, ip
 8013cce:	441a      	add	r2, r3
 8013cd0:	44b8      	add	r8, r7
 8013cd2:	4423      	add	r3, r4
 8013cd4:	f8ad 0016 	strh.w	r0, [sp, #22]
 8013cd8:	4433      	add	r3, r6
 8013cda:	4432      	add	r2, r6
 8013cdc:	44e0      	add	r8, ip
 8013cde:	4c09      	ldr	r4, [pc, #36]	@ (8013d04 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8013ce0:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8013ce2:	9404      	str	r4, [sp, #16]
 8013ce4:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013ce8:	f8ad 801a 	strh.w	r8, [sp, #26]
 8013cec:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013cf0:	6803      	ldr	r3, [r0, #0]
 8013cf2:	a904      	add	r1, sp, #16
 8013cf4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8013cf6:	4798      	blx	r3
 8013cf8:	b008      	add	sp, #32
 8013cfa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013cfe:	bf00      	nop
 8013d00:	08028d5c 	.word	0x08028d5c
 8013d04:	08028d70 	.word	0x08028d70

08013d08 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8013d08:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013d0a:	4604      	mov	r4, r0
 8013d0c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8013d10:	3201      	adds	r2, #1
 8013d12:	d112      	bne.n	8013d3a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8013d14:	6803      	ldr	r3, [r0, #0]
 8013d16:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8013d1a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8013d1e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8013d22:	2500      	movs	r5, #0
 8013d24:	9500      	str	r5, [sp, #0]
 8013d26:	466d      	mov	r5, sp
 8013d28:	4629      	mov	r1, r5
 8013d2a:	f8ad 2006 	strh.w	r2, [sp, #6]
 8013d2e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013d30:	4798      	blx	r3
 8013d32:	e895 0003 	ldmia.w	r5, {r0, r1}
 8013d36:	e884 0003 	stmia.w	r4, {r0, r1}
 8013d3a:	4620      	mov	r0, r4
 8013d3c:	b003      	add	sp, #12
 8013d3e:	bd30      	pop	{r4, r5, pc}

08013d40 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8013d40:	b513      	push	{r0, r1, r4, lr}
 8013d42:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8013d46:	3301      	adds	r3, #1
 8013d48:	4604      	mov	r4, r0
 8013d4a:	d109      	bne.n	8013d60 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8013d4c:	4601      	mov	r1, r0
 8013d4e:	4668      	mov	r0, sp
 8013d50:	f7ff fa68 	bl	8013224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013d54:	f8bd 3000 	ldrh.w	r3, [sp]
 8013d58:	8423      	strh	r3, [r4, #32]
 8013d5a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013d5e:	8463      	strh	r3, [r4, #34]	@ 0x22
 8013d60:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8013d64:	b002      	add	sp, #8
 8013d66:	bd10      	pop	{r4, pc}

08013d68 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8013d68:	b513      	push	{r0, r1, r4, lr}
 8013d6a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 8013d6e:	3301      	adds	r3, #1
 8013d70:	4604      	mov	r4, r0
 8013d72:	d109      	bne.n	8013d88 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8013d74:	4601      	mov	r1, r0
 8013d76:	4668      	mov	r0, sp
 8013d78:	f7ff fa54 	bl	8013224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013d7c:	f8bd 3000 	ldrh.w	r3, [sp]
 8013d80:	8423      	strh	r3, [r4, #32]
 8013d82:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013d86:	8463      	strh	r3, [r4, #34]	@ 0x22
 8013d88:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 8013d8c:	b002      	add	sp, #8
 8013d8e:	bd10      	pop	{r4, pc}

08013d90 <_ZN8touchgfx6ScreenC1Ev>:
 8013d90:	b570      	push	{r4, r5, r6, lr}
 8013d92:	4605      	mov	r5, r0
 8013d94:	4b16      	ldr	r3, [pc, #88]	@ (8013df0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8013d96:	f845 3b04 	str.w	r3, [r5], #4
 8013d9a:	2300      	movs	r3, #0
 8013d9c:	8103      	strh	r3, [r0, #8]
 8013d9e:	8143      	strh	r3, [r0, #10]
 8013da0:	8183      	strh	r3, [r0, #12]
 8013da2:	81c3      	strh	r3, [r0, #14]
 8013da4:	8203      	strh	r3, [r0, #16]
 8013da6:	8243      	strh	r3, [r0, #18]
 8013da8:	8283      	strh	r3, [r0, #20]
 8013daa:	82c3      	strh	r3, [r0, #22]
 8013dac:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8013db0:	6203      	str	r3, [r0, #32]
 8013db2:	8483      	strh	r3, [r0, #36]	@ 0x24
 8013db4:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8013db6:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 8013dba:	4a0e      	ldr	r2, [pc, #56]	@ (8013df4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8013dbc:	6343      	str	r3, [r0, #52]	@ 0x34
 8013dbe:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 8013dc2:	4b0d      	ldr	r3, [pc, #52]	@ (8013df8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8013dc4:	6042      	str	r2, [r0, #4]
 8013dc6:	f9b3 6000 	ldrsh.w	r6, [r3]
 8013dca:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8013dcc:	4a0b      	ldr	r2, [pc, #44]	@ (8013dfc <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8013dce:	4604      	mov	r4, r0
 8013dd0:	2101      	movs	r1, #1
 8013dd2:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 8013dd6:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 8013dda:	f9b2 1000 	ldrsh.w	r1, [r2]
 8013dde:	4628      	mov	r0, r5
 8013de0:	4798      	blx	r3
 8013de2:	6863      	ldr	r3, [r4, #4]
 8013de4:	4628      	mov	r0, r5
 8013de6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8013de8:	4631      	mov	r1, r6
 8013dea:	4798      	blx	r3
 8013dec:	4620      	mov	r0, r4
 8013dee:	bd70      	pop	{r4, r5, r6, pc}
 8013df0:	08028d98 	.word	0x08028d98
 8013df4:	080288e8 	.word	0x080288e8
 8013df8:	200152e2 	.word	0x200152e2
 8013dfc:	200152e0 	.word	0x200152e0

08013e00 <_ZN8touchgfx6Screen4drawEv>:
 8013e00:	b507      	push	{r0, r1, r2, lr}
 8013e02:	4b09      	ldr	r3, [pc, #36]	@ (8013e28 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8013e04:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013e08:	4b08      	ldr	r3, [pc, #32]	@ (8013e2c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8013e0a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8013e0e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013e12:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013e16:	6803      	ldr	r3, [r0, #0]
 8013e18:	2100      	movs	r1, #0
 8013e1a:	9100      	str	r1, [sp, #0]
 8013e1c:	689b      	ldr	r3, [r3, #8]
 8013e1e:	4669      	mov	r1, sp
 8013e20:	4798      	blx	r3
 8013e22:	b003      	add	sp, #12
 8013e24:	f85d fb04 	ldr.w	pc, [sp], #4
 8013e28:	200152e0 	.word	0x200152e0
 8013e2c:	200152e2 	.word	0x200152e2

08013e30 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8013e30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013e34:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8013e38:	2b00      	cmp	r3, #0
 8013e3a:	b089      	sub	sp, #36	@ 0x24
 8013e3c:	4680      	mov	r8, r0
 8013e3e:	460c      	mov	r4, r1
 8013e40:	4615      	mov	r5, r2
 8013e42:	dd0e      	ble.n	8013e62 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8013e44:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8013e48:	2b00      	cmp	r3, #0
 8013e4a:	dd0a      	ble.n	8013e62 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8013e4c:	4628      	mov	r0, r5
 8013e4e:	f7ff ff5b 	bl	8013d08 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8013e52:	4621      	mov	r1, r4
 8013e54:	f7fd feb9 	bl	8011bca <_ZNK8touchgfx4Rect9intersectERKS0_>
 8013e58:	69eb      	ldr	r3, [r5, #28]
 8013e5a:	b928      	cbnz	r0, 8013e68 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8013e5c:	461d      	mov	r5, r3
 8013e5e:	2b00      	cmp	r3, #0
 8013e60:	d1f4      	bne.n	8013e4c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8013e62:	b009      	add	sp, #36	@ 0x24
 8013e64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013e68:	ae04      	add	r6, sp, #16
 8013e6a:	2b00      	cmp	r3, #0
 8013e6c:	f000 80b5 	beq.w	8013fda <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8013e70:	682b      	ldr	r3, [r5, #0]
 8013e72:	4629      	mov	r1, r5
 8013e74:	68db      	ldr	r3, [r3, #12]
 8013e76:	a802      	add	r0, sp, #8
 8013e78:	4798      	blx	r3
 8013e7a:	4628      	mov	r0, r5
 8013e7c:	f7ff ff60 	bl	8013d40 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8013e80:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8013e84:	4407      	add	r7, r0
 8013e86:	4628      	mov	r0, r5
 8013e88:	f7ff ff6e 	bl	8013d68 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8013e8c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013e90:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8013e94:	f8ad 2014 	strh.w	r2, [sp, #20]
 8013e98:	4418      	add	r0, r3
 8013e9a:	4621      	mov	r1, r4
 8013e9c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8013ea0:	f8ad 0012 	strh.w	r0, [sp, #18]
 8013ea4:	b23f      	sxth	r7, r7
 8013ea6:	4630      	mov	r0, r6
 8013ea8:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013eac:	f8ad 7010 	strh.w	r7, [sp, #16]
 8013eb0:	f7f8 fbfc 	bl	800c6ac <_ZN8touchgfx4RectaNERKS0_>
 8013eb4:	4628      	mov	r0, r5
 8013eb6:	f7ff ff27 	bl	8013d08 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8013eba:	4602      	mov	r2, r0
 8013ebc:	e896 0003 	ldmia.w	r6, {r0, r1}
 8013ec0:	ab06      	add	r3, sp, #24
 8013ec2:	e883 0003 	stmia.w	r3, {r0, r1}
 8013ec6:	4611      	mov	r1, r2
 8013ec8:	4618      	mov	r0, r3
 8013eca:	f7f8 fbef 	bl	800c6ac <_ZN8touchgfx4RectaNERKS0_>
 8013ece:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013ed2:	f9b4 1000 	ldrsh.w	r1, [r4]
 8013ed6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8013eda:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8013ede:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8013ee2:	4299      	cmp	r1, r3
 8013ee4:	d10b      	bne.n	8013efe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8013ee6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013eea:	4552      	cmp	r2, sl
 8013eec:	d107      	bne.n	8013efe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8013eee:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8013ef2:	455a      	cmp	r2, fp
 8013ef4:	d103      	bne.n	8013efe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8013ef6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8013efa:	454a      	cmp	r2, r9
 8013efc:	d06d      	beq.n	8013fda <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8013efe:	f1bb 0f00 	cmp.w	fp, #0
 8013f02:	dd65      	ble.n	8013fd0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8013f04:	f1b9 0f00 	cmp.w	r9, #0
 8013f08:	dd62      	ble.n	8013fd0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8013f0a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013f0e:	fa1f f08a 	uxth.w	r0, sl
 8013f12:	4552      	cmp	r2, sl
 8013f14:	9000      	str	r0, [sp, #0]
 8013f16:	da12      	bge.n	8013f3e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8013f18:	9301      	str	r3, [sp, #4]
 8013f1a:	9b00      	ldr	r3, [sp, #0]
 8013f1c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013f20:	f8ad 2012 	strh.w	r2, [sp, #18]
 8013f24:	1a9a      	subs	r2, r3, r2
 8013f26:	f8ad 1010 	strh.w	r1, [sp, #16]
 8013f2a:	f8ad 0014 	strh.w	r0, [sp, #20]
 8013f2e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8013f32:	69ea      	ldr	r2, [r5, #28]
 8013f34:	4631      	mov	r1, r6
 8013f36:	4640      	mov	r0, r8
 8013f38:	f7ff ff7a 	bl	8013e30 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013f3c:	9b01      	ldr	r3, [sp, #4]
 8013f3e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8013f42:	429a      	cmp	r2, r3
 8013f44:	b29f      	uxth	r7, r3
 8013f46:	da0d      	bge.n	8013f64 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8013f48:	f8ad 2010 	strh.w	r2, [sp, #16]
 8013f4c:	1aba      	subs	r2, r7, r2
 8013f4e:	f8ad a012 	strh.w	sl, [sp, #18]
 8013f52:	f8ad 2014 	strh.w	r2, [sp, #20]
 8013f56:	f8ad 9016 	strh.w	r9, [sp, #22]
 8013f5a:	69ea      	ldr	r2, [r5, #28]
 8013f5c:	4631      	mov	r1, r6
 8013f5e:	4640      	mov	r0, r8
 8013f60:	f7ff ff66 	bl	8013e30 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013f64:	8822      	ldrh	r2, [r4, #0]
 8013f66:	88a3      	ldrh	r3, [r4, #4]
 8013f68:	445f      	add	r7, fp
 8013f6a:	4413      	add	r3, r2
 8013f6c:	b29b      	uxth	r3, r3
 8013f6e:	b2bf      	uxth	r7, r7
 8013f70:	b23a      	sxth	r2, r7
 8013f72:	b219      	sxth	r1, r3
 8013f74:	4291      	cmp	r1, r2
 8013f76:	dd0d      	ble.n	8013f94 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8013f78:	1bdb      	subs	r3, r3, r7
 8013f7a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8013f7e:	f8ad a012 	strh.w	sl, [sp, #18]
 8013f82:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013f86:	f8ad 9016 	strh.w	r9, [sp, #22]
 8013f8a:	69ea      	ldr	r2, [r5, #28]
 8013f8c:	4631      	mov	r1, r6
 8013f8e:	4640      	mov	r0, r8
 8013f90:	f7ff ff4e 	bl	8013e30 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013f94:	88e2      	ldrh	r2, [r4, #6]
 8013f96:	8863      	ldrh	r3, [r4, #2]
 8013f98:	4413      	add	r3, r2
 8013f9a:	9a00      	ldr	r2, [sp, #0]
 8013f9c:	444a      	add	r2, r9
 8013f9e:	b29b      	uxth	r3, r3
 8013fa0:	fa1f f982 	uxth.w	r9, r2
 8013fa4:	fa0f f289 	sxth.w	r2, r9
 8013fa8:	b219      	sxth	r1, r3
 8013faa:	428a      	cmp	r2, r1
 8013fac:	da15      	bge.n	8013fda <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8013fae:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013fb2:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013fb6:	f8ad 1014 	strh.w	r1, [sp, #20]
 8013fba:	eba3 0309 	sub.w	r3, r3, r9
 8013fbe:	f8ad 0010 	strh.w	r0, [sp, #16]
 8013fc2:	f8ad 2012 	strh.w	r2, [sp, #18]
 8013fc6:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013fca:	69ea      	ldr	r2, [r5, #28]
 8013fcc:	4631      	mov	r1, r6
 8013fce:	e001      	b.n	8013fd4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8013fd0:	69ea      	ldr	r2, [r5, #28]
 8013fd2:	4621      	mov	r1, r4
 8013fd4:	4640      	mov	r0, r8
 8013fd6:	f7ff ff2b 	bl	8013e30 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013fda:	4628      	mov	r0, r5
 8013fdc:	f7ff fe94 	bl	8013d08 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8013fe0:	6861      	ldr	r1, [r4, #4]
 8013fe2:	4602      	mov	r2, r0
 8013fe4:	6820      	ldr	r0, [r4, #0]
 8013fe6:	4633      	mov	r3, r6
 8013fe8:	c303      	stmia	r3!, {r0, r1}
 8013fea:	4611      	mov	r1, r2
 8013fec:	4630      	mov	r0, r6
 8013fee:	f7f8 fb5d 	bl	800c6ac <_ZN8touchgfx4RectaNERKS0_>
 8013ff2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8013ff6:	2b00      	cmp	r3, #0
 8013ff8:	f77f af33 	ble.w	8013e62 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8013ffc:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8014000:	2b00      	cmp	r3, #0
 8014002:	f77f af2e 	ble.w	8013e62 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8014006:	4628      	mov	r0, r5
 8014008:	f7ff fe9a 	bl	8013d40 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801400c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8014010:	1a18      	subs	r0, r3, r0
 8014012:	f8ad 0010 	strh.w	r0, [sp, #16]
 8014016:	4628      	mov	r0, r5
 8014018:	f7ff fea6 	bl	8013d68 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801401c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8014020:	1a18      	subs	r0, r3, r0
 8014022:	f8ad 0012 	strh.w	r0, [sp, #18]
 8014026:	682b      	ldr	r3, [r5, #0]
 8014028:	4631      	mov	r1, r6
 801402a:	689b      	ldr	r3, [r3, #8]
 801402c:	4628      	mov	r0, r5
 801402e:	4798      	blx	r3
 8014030:	e717      	b.n	8013e62 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08014032 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8014032:	b570      	push	{r4, r5, r6, lr}
 8014034:	460c      	mov	r4, r1
 8014036:	b086      	sub	sp, #24
 8014038:	1d06      	adds	r6, r0, #4
 801403a:	2300      	movs	r3, #0
 801403c:	4631      	mov	r1, r6
 801403e:	4605      	mov	r5, r0
 8014040:	a802      	add	r0, sp, #8
 8014042:	9301      	str	r3, [sp, #4]
 8014044:	f7ff f8ee 	bl	8013224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014048:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801404c:	8822      	ldrh	r2, [r4, #0]
 801404e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8014052:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8014056:	f8ad 0014 	strh.w	r0, [sp, #20]
 801405a:	1ad2      	subs	r2, r2, r3
 801405c:	8863      	ldrh	r3, [r4, #2]
 801405e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8014062:	1a5b      	subs	r3, r3, r1
 8014064:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8014068:	f8ad 1016 	strh.w	r1, [sp, #22]
 801406c:	aa01      	add	r2, sp, #4
 801406e:	a904      	add	r1, sp, #16
 8014070:	4630      	mov	r0, r6
 8014072:	f8ad 3012 	strh.w	r3, [sp, #18]
 8014076:	f7f8 fbf1 	bl	800c85c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801407a:	9a01      	ldr	r2, [sp, #4]
 801407c:	b11a      	cbz	r2, 8014086 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801407e:	4621      	mov	r1, r4
 8014080:	4628      	mov	r0, r5
 8014082:	f7ff fed5 	bl	8013e30 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8014086:	b006      	add	sp, #24
 8014088:	bd70      	pop	{r4, r5, r6, pc}

0801408a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801408a:	b530      	push	{r4, r5, lr}
 801408c:	4602      	mov	r2, r0
 801408e:	4604      	mov	r4, r0
 8014090:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8014094:	b085      	sub	sp, #20
 8014096:	460d      	mov	r5, r1
 8014098:	6851      	ldr	r1, [r2, #4]
 801409a:	466b      	mov	r3, sp
 801409c:	c303      	stmia	r3!, {r0, r1}
 801409e:	4629      	mov	r1, r5
 80140a0:	4668      	mov	r0, sp
 80140a2:	f7f8 fb03 	bl	800c6ac <_ZN8touchgfx4RectaNERKS0_>
 80140a6:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 80140aa:	b12b      	cbz	r3, 80140b8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80140ac:	4669      	mov	r1, sp
 80140ae:	4620      	mov	r0, r4
 80140b0:	f7ff ffbf 	bl	8014032 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80140b4:	b005      	add	sp, #20
 80140b6:	bd30      	pop	{r4, r5, pc}
 80140b8:	3404      	adds	r4, #4
 80140ba:	4621      	mov	r1, r4
 80140bc:	a802      	add	r0, sp, #8
 80140be:	f7ff f8b1 	bl	8013224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80140c2:	f8bd 3000 	ldrh.w	r3, [sp]
 80140c6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80140ca:	1a9b      	subs	r3, r3, r2
 80140cc:	f8ad 3000 	strh.w	r3, [sp]
 80140d0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80140d4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80140d8:	4669      	mov	r1, sp
 80140da:	1a9b      	subs	r3, r3, r2
 80140dc:	4620      	mov	r0, r4
 80140de:	f8ad 3002 	strh.w	r3, [sp, #2]
 80140e2:	f7f8 fb82 	bl	800c7ea <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80140e6:	e7e5      	b.n	80140b4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080140e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80140e8:	680a      	ldr	r2, [r1, #0]
 80140ea:	460b      	mov	r3, r1
 80140ec:	6992      	ldr	r2, [r2, #24]
 80140ee:	1d01      	adds	r1, r0, #4
 80140f0:	4618      	mov	r0, r3
 80140f2:	4710      	bx	r2

080140f4 <_ZN8touchgfx12TextProviderC1Ev>:
 80140f4:	b538      	push	{r3, r4, r5, lr}
 80140f6:	2500      	movs	r5, #0
 80140f8:	2302      	movs	r3, #2
 80140fa:	4604      	mov	r4, r0
 80140fc:	e9c0 5500 	strd	r5, r5, [r0]
 8014100:	7403      	strb	r3, [r0, #16]
 8014102:	6145      	str	r5, [r0, #20]
 8014104:	7605      	strb	r5, [r0, #24]
 8014106:	83c5      	strh	r5, [r0, #30]
 8014108:	8405      	strh	r5, [r0, #32]
 801410a:	86c5      	strh	r5, [r0, #54]	@ 0x36
 801410c:	8705      	strh	r5, [r0, #56]	@ 0x38
 801410e:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 8014110:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 8014114:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8014118:	220e      	movs	r2, #14
 801411a:	4629      	mov	r1, r5
 801411c:	304c      	adds	r0, #76	@ 0x4c
 801411e:	f011 fd48 	bl	8025bb2 <memset>
 8014122:	2301      	movs	r3, #1
 8014124:	4620      	mov	r0, r4
 8014126:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 801412a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801412e:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8014132:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8014136:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 801413a:	f7f0 fcdf 	bl	8004afc <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801413e:	4620      	mov	r0, r4
 8014140:	bd38      	pop	{r3, r4, r5, pc}

08014142 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8014142:	b530      	push	{r4, r5, lr}
 8014144:	2500      	movs	r5, #0
 8014146:	2401      	movs	r4, #1
 8014148:	6843      	ldr	r3, [r0, #4]
 801414a:	b913      	cbnz	r3, 8014152 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801414c:	6803      	ldr	r3, [r0, #0]
 801414e:	b313      	cbz	r3, 8014196 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8014150:	6043      	str	r3, [r0, #4]
 8014152:	7e03      	ldrb	r3, [r0, #24]
 8014154:	b143      	cbz	r3, 8014168 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8014156:	6943      	ldr	r3, [r0, #20]
 8014158:	b12b      	cbz	r3, 8014166 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801415a:	881a      	ldrh	r2, [r3, #0]
 801415c:	b11a      	cbz	r2, 8014166 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801415e:	1c9a      	adds	r2, r3, #2
 8014160:	6142      	str	r2, [r0, #20]
 8014162:	8818      	ldrh	r0, [r3, #0]
 8014164:	bd30      	pop	{r4, r5, pc}
 8014166:	7605      	strb	r5, [r0, #24]
 8014168:	6843      	ldr	r3, [r0, #4]
 801416a:	8819      	ldrh	r1, [r3, #0]
 801416c:	b199      	cbz	r1, 8014196 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801416e:	1c9a      	adds	r2, r3, #2
 8014170:	2902      	cmp	r1, #2
 8014172:	6042      	str	r2, [r0, #4]
 8014174:	d1f5      	bne.n	8014162 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8014176:	7c03      	ldrb	r3, [r0, #16]
 8014178:	2b01      	cmp	r3, #1
 801417a:	d8e5      	bhi.n	8014148 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801417c:	1c5a      	adds	r2, r3, #1
 801417e:	3302      	adds	r3, #2
 8014180:	7402      	strb	r2, [r0, #16]
 8014182:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8014186:	6143      	str	r3, [r0, #20]
 8014188:	2b00      	cmp	r3, #0
 801418a:	d0dd      	beq.n	8014148 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801418c:	881b      	ldrh	r3, [r3, #0]
 801418e:	2b00      	cmp	r3, #0
 8014190:	d0da      	beq.n	8014148 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8014192:	7604      	strb	r4, [r0, #24]
 8014194:	e7d8      	b.n	8014148 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8014196:	2000      	movs	r0, #0
 8014198:	e7e4      	b.n	8014164 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801419a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801419a:	b430      	push	{r4, r5}
 801419c:	6001      	str	r1, [r0, #0]
 801419e:	2100      	movs	r1, #0
 80141a0:	6041      	str	r1, [r0, #4]
 80141a2:	6815      	ldr	r5, [r2, #0]
 80141a4:	6085      	str	r5, [r0, #8]
 80141a6:	6852      	ldr	r2, [r2, #4]
 80141a8:	6443      	str	r3, [r0, #68]	@ 0x44
 80141aa:	9b02      	ldr	r3, [sp, #8]
 80141ac:	60c2      	str	r2, [r0, #12]
 80141ae:	7401      	strb	r1, [r0, #16]
 80141b0:	6141      	str	r1, [r0, #20]
 80141b2:	7601      	strb	r1, [r0, #24]
 80141b4:	8701      	strh	r1, [r0, #56]	@ 0x38
 80141b6:	8401      	strh	r1, [r0, #32]
 80141b8:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 80141bc:	6483      	str	r3, [r0, #72]	@ 0x48
 80141be:	bc30      	pop	{r4, r5}
 80141c0:	f7f0 bc9c 	b.w	8004afc <_ZN8touchgfx12TextProvider18initializeInternalEv>

080141c4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80141c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80141c6:	4605      	mov	r5, r0
 80141c8:	4608      	mov	r0, r1
 80141ca:	b1e9      	cbz	r1, 8014208 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 80141cc:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 80141d0:	460b      	mov	r3, r1
 80141d2:	f101 0708 	add.w	r7, r1, #8
 80141d6:	4622      	mov	r2, r4
 80141d8:	6818      	ldr	r0, [r3, #0]
 80141da:	6859      	ldr	r1, [r3, #4]
 80141dc:	4626      	mov	r6, r4
 80141de:	c603      	stmia	r6!, {r0, r1}
 80141e0:	3308      	adds	r3, #8
 80141e2:	42bb      	cmp	r3, r7
 80141e4:	4634      	mov	r4, r6
 80141e6:	d1f7      	bne.n	80141d8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 80141e8:	6818      	ldr	r0, [r3, #0]
 80141ea:	6030      	str	r0, [r6, #0]
 80141ec:	889b      	ldrh	r3, [r3, #4]
 80141ee:	80b3      	strh	r3, [r6, #4]
 80141f0:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 80141f4:	015b      	lsls	r3, r3, #5
 80141f6:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80141fa:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 80141fe:	430b      	orrs	r3, r1
 8014200:	425b      	negs	r3, r3
 8014202:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8014206:	4610      	mov	r0, r2
 8014208:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801420a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801420a:	b538      	push	{r3, r4, r5, lr}
 801420c:	460c      	mov	r4, r1
 801420e:	6811      	ldr	r1, [r2, #0]
 8014210:	4610      	mov	r0, r2
 8014212:	68cd      	ldr	r5, [r1, #12]
 8014214:	4619      	mov	r1, r3
 8014216:	47a8      	blx	r5
 8014218:	2800      	cmp	r0, #0
 801421a:	bf08      	it	eq
 801421c:	4620      	moveq	r0, r4
 801421e:	bd38      	pop	{r3, r4, r5, pc}

08014220 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8014220:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014224:	468c      	mov	ip, r1
 8014226:	4605      	mov	r5, r0
 8014228:	4614      	mov	r4, r2
 801422a:	b942      	cbnz	r2, 801423e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 801422c:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8014230:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8014234:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 8014238:	4620      	mov	r0, r4
 801423a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801423e:	7b50      	ldrb	r0, [r2, #13]
 8014240:	8893      	ldrh	r3, [r2, #4]
 8014242:	0106      	lsls	r6, r0, #4
 8014244:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8014248:	79e6      	ldrb	r6, [r4, #7]
 801424a:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 801424e:	4316      	orrs	r6, r2
 8014250:	185a      	adds	r2, r3, r1
 8014252:	b291      	uxth	r1, r2
 8014254:	291d      	cmp	r1, #29
 8014256:	b2b7      	uxth	r7, r6
 8014258:	d87e      	bhi.n	8014358 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 801425a:	2201      	movs	r2, #1
 801425c:	408a      	lsls	r2, r1
 801425e:	498a      	ldr	r1, [pc, #552]	@ (8014488 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 8014260:	420a      	tst	r2, r1
 8014262:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8014266:	d12d      	bne.n	80142c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8014268:	f412 7f60 	tst.w	r2, #896	@ 0x380
 801426c:	d074      	beq.n	8014358 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 801426e:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8014272:	4623      	mov	r3, r4
 8014274:	f104 0e08 	add.w	lr, r4, #8
 8014278:	4614      	mov	r4, r2
 801427a:	6818      	ldr	r0, [r3, #0]
 801427c:	6859      	ldr	r1, [r3, #4]
 801427e:	4694      	mov	ip, r2
 8014280:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8014284:	3308      	adds	r3, #8
 8014286:	4573      	cmp	r3, lr
 8014288:	4662      	mov	r2, ip
 801428a:	d1f6      	bne.n	801427a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801428c:	6818      	ldr	r0, [r3, #0]
 801428e:	f8cc 0000 	str.w	r0, [ip]
 8014292:	889b      	ldrh	r3, [r3, #4]
 8014294:	f8ac 3004 	strh.w	r3, [ip, #4]
 8014298:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 801429c:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 80142a0:	b2b3      	uxth	r3, r6
 80142a2:	1aca      	subs	r2, r1, r3
 80142a4:	b292      	uxth	r2, r2
 80142a6:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 80142aa:	10d2      	asrs	r2, r2, #3
 80142ac:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 80142b0:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 80142b4:	4302      	orrs	r2, r0
 80142b6:	1bcf      	subs	r7, r1, r7
 80142b8:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 80142bc:	1afb      	subs	r3, r7, r3
 80142be:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 80142c2:	e7b9      	b.n	8014238 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 80142c4:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 80142c8:	4623      	mov	r3, r4
 80142ca:	f104 0808 	add.w	r8, r4, #8
 80142ce:	4614      	mov	r4, r2
 80142d0:	6818      	ldr	r0, [r3, #0]
 80142d2:	6859      	ldr	r1, [r3, #4]
 80142d4:	4696      	mov	lr, r2
 80142d6:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80142da:	3308      	adds	r3, #8
 80142dc:	4543      	cmp	r3, r8
 80142de:	4672      	mov	r2, lr
 80142e0:	d1f6      	bne.n	80142d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 80142e2:	6818      	ldr	r0, [r3, #0]
 80142e4:	f8ce 0000 	str.w	r0, [lr]
 80142e8:	889b      	ldrh	r3, [r3, #4]
 80142ea:	f8ae 3004 	strh.w	r3, [lr, #4]
 80142ee:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 80142f0:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 80142f4:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 80142f6:	f640 6333 	movw	r3, #3635	@ 0xe33
 80142fa:	4299      	cmp	r1, r3
 80142fc:	d111      	bne.n	8014322 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 80142fe:	f8dc 3000 	ldr.w	r3, [ip]
 8014302:	4660      	mov	r0, ip
 8014304:	68db      	ldr	r3, [r3, #12]
 8014306:	4798      	blx	r3
 8014308:	7b41      	ldrb	r1, [r0, #13]
 801430a:	00cb      	lsls	r3, r1, #3
 801430c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8014310:	7a03      	ldrb	r3, [r0, #8]
 8014312:	4313      	orrs	r3, r2
 8014314:	064a      	lsls	r2, r1, #25
 8014316:	bf44      	itt	mi
 8014318:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801431c:	b21b      	sxthmi	r3, r3
 801431e:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8014322:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 8014326:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 801432a:	443b      	add	r3, r7
 801432c:	4433      	add	r3, r6
 801432e:	b29b      	uxth	r3, r3
 8014330:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8014334:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 8014338:	10db      	asrs	r3, r3, #3
 801433a:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801433e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8014342:	4313      	orrs	r3, r2
 8014344:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 8014348:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 801434c:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 8014350:	1a9b      	subs	r3, r3, r2
 8014352:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8014356:	e76f      	b.n	8014238 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8014358:	f023 0204 	bic.w	r2, r3, #4
 801435c:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8014360:	428a      	cmp	r2, r1
 8014362:	d003      	beq.n	801436c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 8014364:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8014368:	4293      	cmp	r3, r2
 801436a:	d137      	bne.n	80143dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 801436c:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 8014370:	4622      	mov	r2, r4
 8014372:	f104 0808 	add.w	r8, r4, #8
 8014376:	4634      	mov	r4, r6
 8014378:	6810      	ldr	r0, [r2, #0]
 801437a:	6851      	ldr	r1, [r2, #4]
 801437c:	46b6      	mov	lr, r6
 801437e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8014382:	3208      	adds	r2, #8
 8014384:	4542      	cmp	r2, r8
 8014386:	4676      	mov	r6, lr
 8014388:	d1f6      	bne.n	8014378 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 801438a:	6810      	ldr	r0, [r2, #0]
 801438c:	f8ce 0000 	str.w	r0, [lr]
 8014390:	8892      	ldrh	r2, [r2, #4]
 8014392:	f8ae 2004 	strh.w	r2, [lr, #4]
 8014396:	3b01      	subs	r3, #1
 8014398:	b29b      	uxth	r3, r3
 801439a:	4662      	mov	r2, ip
 801439c:	4621      	mov	r1, r4
 801439e:	4628      	mov	r0, r5
 80143a0:	f7ff ff33 	bl	801420a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80143a4:	7b41      	ldrb	r1, [r0, #13]
 80143a6:	00cb      	lsls	r3, r1, #3
 80143a8:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80143ac:	7a03      	ldrb	r3, [r0, #8]
 80143ae:	0648      	lsls	r0, r1, #25
 80143b0:	ea43 0302 	orr.w	r3, r3, r2
 80143b4:	bf44      	itt	mi
 80143b6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80143ba:	b21b      	sxthmi	r3, r3
 80143bc:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 80143c0:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 80143c4:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 80143c8:	005b      	lsls	r3, r3, #1
 80143ca:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80143ce:	4313      	orrs	r3, r2
 80143d0:	115a      	asrs	r2, r3, #5
 80143d2:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 80143d6:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 80143da:	e046      	b.n	801446a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 80143dc:	00c2      	lsls	r2, r0, #3
 80143de:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 80143e2:	7a22      	ldrb	r2, [r4, #8]
 80143e4:	430a      	orrs	r2, r1
 80143e6:	0641      	lsls	r1, r0, #25
 80143e8:	bf44      	itt	mi
 80143ea:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 80143ee:	b212      	sxthmi	r2, r2
 80143f0:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 80143f4:	f640 6109 	movw	r1, #3593	@ 0xe09
 80143f8:	f023 0210 	bic.w	r2, r3, #16
 80143fc:	428a      	cmp	r2, r1
 80143fe:	d003      	beq.n	8014408 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 8014400:	f640 6213 	movw	r2, #3603	@ 0xe13
 8014404:	4293      	cmp	r3, r2
 8014406:	d13d      	bne.n	8014484 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 8014408:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 801440c:	f104 0808 	add.w	r8, r4, #8
 8014410:	4696      	mov	lr, r2
 8014412:	6820      	ldr	r0, [r4, #0]
 8014414:	6861      	ldr	r1, [r4, #4]
 8014416:	4616      	mov	r6, r2
 8014418:	c603      	stmia	r6!, {r0, r1}
 801441a:	3408      	adds	r4, #8
 801441c:	4544      	cmp	r4, r8
 801441e:	4632      	mov	r2, r6
 8014420:	d1f7      	bne.n	8014412 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 8014422:	6820      	ldr	r0, [r4, #0]
 8014424:	6030      	str	r0, [r6, #0]
 8014426:	88a1      	ldrh	r1, [r4, #4]
 8014428:	80b1      	strh	r1, [r6, #4]
 801442a:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 801442e:	0076      	lsls	r6, r6, #1
 8014430:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8014434:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 8014438:	4316      	orrs	r6, r2
 801443a:	f640 6213 	movw	r2, #3603	@ 0xe13
 801443e:	4293      	cmp	r3, r2
 8014440:	bf1a      	itte	ne
 8014442:	f103 33ff 	addne.w	r3, r3, #4294967295
 8014446:	b29b      	uxthne	r3, r3
 8014448:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 801444c:	4662      	mov	r2, ip
 801444e:	4671      	mov	r1, lr
 8014450:	4628      	mov	r0, r5
 8014452:	4674      	mov	r4, lr
 8014454:	f7ff fed9 	bl	801420a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8014458:	7b43      	ldrb	r3, [r0, #13]
 801445a:	7a82      	ldrb	r2, [r0, #10]
 801445c:	005b      	lsls	r3, r3, #1
 801445e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8014462:	4313      	orrs	r3, r2
 8014464:	1af6      	subs	r6, r6, r3
 8014466:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 801446a:	7b61      	ldrb	r1, [r4, #13]
 801446c:	00cb      	lsls	r3, r1, #3
 801446e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8014472:	7a23      	ldrb	r3, [r4, #8]
 8014474:	4313      	orrs	r3, r2
 8014476:	064a      	lsls	r2, r1, #25
 8014478:	bf44      	itt	mi
 801447a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801447e:	b21b      	sxthmi	r3, r3
 8014480:	1bdb      	subs	r3, r3, r7
 8014482:	e71c      	b.n	80142be <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8014484:	2300      	movs	r3, #0
 8014486:	e7a6      	b.n	80143d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 8014488:	3fc00079 	.word	0x3fc00079

0801448c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801448c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014490:	4604      	mov	r4, r0
 8014492:	b942      	cbnz	r2, 80144a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8014494:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8014498:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 801449c:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 80144a0:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 80144a4:	e047      	b.n	8014536 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80144a6:	7b51      	ldrb	r1, [r2, #13]
 80144a8:	8893      	ldrh	r3, [r2, #4]
 80144aa:	010d      	lsls	r5, r1, #4
 80144ac:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 80144b0:	79d5      	ldrb	r5, [r2, #7]
 80144b2:	4305      	orrs	r5, r0
 80144b4:	2d04      	cmp	r5, #4
 80144b6:	bfcc      	ite	gt
 80144b8:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 80144bc:	f04f 0e01 	movle.w	lr, #1
 80144c0:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 80144c4:	f200 80ab 	bhi.w	801461e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 80144c8:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 80144cc:	4283      	cmp	r3, r0
 80144ce:	d216      	bcs.n	80144fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80144d0:	f240 605b 	movw	r0, #1627	@ 0x65b
 80144d4:	4283      	cmp	r3, r0
 80144d6:	d859      	bhi.n	801458c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 80144d8:	f240 6057 	movw	r0, #1623	@ 0x657
 80144dc:	4283      	cmp	r3, r0
 80144de:	d20e      	bcs.n	80144fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80144e0:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 80144e4:	d24a      	bcs.n	801457c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 80144e6:	f240 604e 	movw	r0, #1614	@ 0x64e
 80144ea:	4283      	cmp	r3, r0
 80144ec:	d207      	bcs.n	80144fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80144ee:	f240 601a 	movw	r0, #1562	@ 0x61a
 80144f2:	4283      	cmp	r3, r0
 80144f4:	d02a      	beq.n	801454c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80144f6:	d821      	bhi.n	801453c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 80144f8:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 80144fc:	d35b      	bcc.n	80145b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80144fe:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8014502:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8014506:	f040 80d0 	bne.w	80146aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801450a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 801450e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8014512:	f040 80ca 	bne.w	80146aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8014516:	00cb      	lsls	r3, r1, #3
 8014518:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801451c:	7a13      	ldrb	r3, [r2, #8]
 801451e:	0649      	lsls	r1, r1, #25
 8014520:	ea43 0300 	orr.w	r3, r3, r0
 8014524:	bf44      	itt	mi
 8014526:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801452a:	b21b      	sxthmi	r3, r3
 801452c:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8014530:	1b5d      	subs	r5, r3, r5
 8014532:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8014536:	4610      	mov	r0, r2
 8014538:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801453c:	f240 604b 	movw	r0, #1611	@ 0x64b
 8014540:	4283      	cmp	r3, r0
 8014542:	d338      	bcc.n	80145b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8014544:	f240 604c 	movw	r0, #1612	@ 0x64c
 8014548:	4283      	cmp	r3, r0
 801454a:	d9d8      	bls.n	80144fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801454c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8014550:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8014554:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8014558:	f040 80f2 	bne.w	8014740 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801455c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8014560:	f040 80ee 	bne.w	8014740 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8014564:	00cb      	lsls	r3, r1, #3
 8014566:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801456a:	7a13      	ldrb	r3, [r2, #8]
 801456c:	064e      	lsls	r6, r1, #25
 801456e:	ea43 0300 	orr.w	r3, r3, r0
 8014572:	bf44      	itt	mi
 8014574:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8014578:	b21b      	sxthmi	r3, r3
 801457a:	e7d9      	b.n	8014530 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801457c:	f240 6054 	movw	r0, #1620	@ 0x654
 8014580:	4283      	cmp	r3, r0
 8014582:	d8e3      	bhi.n	801454c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014584:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8014588:	d9e0      	bls.n	801454c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801458a:	e7b8      	b.n	80144fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801458c:	f240 6074 	movw	r0, #1652	@ 0x674
 8014590:	4283      	cmp	r3, r0
 8014592:	d0b4      	beq.n	80144fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014594:	d82d      	bhi.n	80145f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8014596:	f240 605e 	movw	r0, #1630	@ 0x65e
 801459a:	4283      	cmp	r3, r0
 801459c:	d804      	bhi.n	80145a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801459e:	f240 605d 	movw	r0, #1629	@ 0x65d
 80145a2:	4283      	cmp	r3, r0
 80145a4:	d3d2      	bcc.n	801454c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80145a6:	e7aa      	b.n	80144fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80145a8:	f240 605f 	movw	r0, #1631	@ 0x65f
 80145ac:	4283      	cmp	r3, r0
 80145ae:	d0cd      	beq.n	801454c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80145b0:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 80145b4:	d0a3      	beq.n	80144fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80145b6:	00cb      	lsls	r3, r1, #3
 80145b8:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 80145bc:	7a13      	ldrb	r3, [r2, #8]
 80145be:	0649      	lsls	r1, r1, #25
 80145c0:	ea43 0300 	orr.w	r3, r3, r0
 80145c4:	bf44      	itt	mi
 80145c6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80145ca:	b21b      	sxthmi	r3, r3
 80145cc:	1b5d      	subs	r5, r3, r5
 80145ce:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80145d2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80145d6:	7b53      	ldrb	r3, [r2, #13]
 80145d8:	015b      	lsls	r3, r3, #5
 80145da:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80145de:	7993      	ldrb	r3, [r2, #6]
 80145e0:	430b      	orrs	r3, r1
 80145e2:	005b      	lsls	r3, r3, #1
 80145e4:	2105      	movs	r1, #5
 80145e6:	fb93 f3f1 	sdiv	r3, r3, r1
 80145ea:	f992 1009 	ldrsb.w	r1, [r2, #9]
 80145ee:	440b      	add	r3, r1
 80145f0:	e756      	b.n	80144a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 80145f2:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 80145f6:	4283      	cmp	r3, r0
 80145f8:	d809      	bhi.n	801460e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 80145fa:	f240 60df 	movw	r0, #1759	@ 0x6df
 80145fe:	4283      	cmp	r3, r0
 8014600:	f4bf af7d 	bcs.w	80144fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014604:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8014608:	2b05      	cmp	r3, #5
 801460a:	d8d4      	bhi.n	80145b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801460c:	e777      	b.n	80144fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801460e:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8014612:	4283      	cmp	r3, r0
 8014614:	d09a      	beq.n	801454c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014616:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 801461a:	4283      	cmp	r3, r0
 801461c:	e7ca      	b.n	80145b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801461e:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8014622:	d22b      	bcs.n	801467c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8014624:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8014628:	4283      	cmp	r3, r0
 801462a:	d28f      	bcs.n	801454c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801462c:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8014630:	4283      	cmp	r3, r0
 8014632:	d816      	bhi.n	8014662 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8014634:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8014638:	4283      	cmp	r3, r0
 801463a:	f4bf af60 	bcs.w	80144fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801463e:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8014642:	4283      	cmp	r3, r0
 8014644:	d80a      	bhi.n	801465c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8014646:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 801464a:	4283      	cmp	r3, r0
 801464c:	f4bf af57 	bcs.w	80144fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014650:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8014654:	4283      	cmp	r3, r0
 8014656:	f43f af79 	beq.w	801454c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801465a:	e7ac      	b.n	80145b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801465c:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8014660:	e7f8      	b.n	8014654 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8014662:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 8014666:	4283      	cmp	r3, r0
 8014668:	d802      	bhi.n	8014670 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801466a:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 801466e:	e798      	b.n	80145a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8014670:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8014674:	4283      	cmp	r3, r0
 8014676:	f47f af42 	bne.w	80144fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801467a:	e767      	b.n	801454c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801467c:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8014680:	4283      	cmp	r3, r0
 8014682:	f43f af63 	beq.w	801454c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014686:	d802      	bhi.n	801468e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8014688:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 801468c:	e7f2      	b.n	8014674 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801468e:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 8014692:	4283      	cmp	r3, r0
 8014694:	d805      	bhi.n	80146a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8014696:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 801469a:	4283      	cmp	r3, r0
 801469c:	f4ff af2f 	bcc.w	80144fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80146a0:	e754      	b.n	801454c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80146a2:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 80146a6:	4283      	cmp	r3, r0
 80146a8:	e7af      	b.n	801460a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 80146aa:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 80146ae:	4617      	mov	r7, r2
 80146b0:	f102 0808 	add.w	r8, r2, #8
 80146b4:	4666      	mov	r6, ip
 80146b6:	6838      	ldr	r0, [r7, #0]
 80146b8:	6879      	ldr	r1, [r7, #4]
 80146ba:	46e6      	mov	lr, ip
 80146bc:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80146c0:	3708      	adds	r7, #8
 80146c2:	4547      	cmp	r7, r8
 80146c4:	46f4      	mov	ip, lr
 80146c6:	d1f6      	bne.n	80146b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80146c8:	6838      	ldr	r0, [r7, #0]
 80146ca:	f8ce 0000 	str.w	r0, [lr]
 80146ce:	88b9      	ldrh	r1, [r7, #4]
 80146d0:	f8ae 1004 	strh.w	r1, [lr, #4]
 80146d4:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 80146d8:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80146dc:	d009      	beq.n	80146f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 80146de:	7b51      	ldrb	r1, [r2, #13]
 80146e0:	7992      	ldrb	r2, [r2, #6]
 80146e2:	0149      	lsls	r1, r1, #5
 80146e4:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80146e8:	4311      	orrs	r1, r2
 80146ea:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80146ee:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 80146f2:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80146f6:	b2ad      	uxth	r5, r5
 80146f8:	d00d      	beq.n	8014716 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 80146fa:	442b      	add	r3, r5
 80146fc:	b29b      	uxth	r3, r3
 80146fe:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8014702:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8014706:	10db      	asrs	r3, r3, #3
 8014708:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801470c:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8014710:	4313      	orrs	r3, r2
 8014712:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8014716:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 801471a:	00cb      	lsls	r3, r1, #3
 801471c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8014720:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8014724:	064f      	lsls	r7, r1, #25
 8014726:	ea43 0302 	orr.w	r3, r3, r2
 801472a:	bf44      	itt	mi
 801472c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8014730:	b21b      	sxthmi	r3, r3
 8014732:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8014736:	1b5b      	subs	r3, r3, r5
 8014738:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 801473c:	4632      	mov	r2, r6
 801473e:	e6fa      	b.n	8014536 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8014740:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8014744:	4617      	mov	r7, r2
 8014746:	f102 0908 	add.w	r9, r2, #8
 801474a:	4666      	mov	r6, ip
 801474c:	6838      	ldr	r0, [r7, #0]
 801474e:	6879      	ldr	r1, [r7, #4]
 8014750:	46e0      	mov	r8, ip
 8014752:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8014756:	3708      	adds	r7, #8
 8014758:	454f      	cmp	r7, r9
 801475a:	46c4      	mov	ip, r8
 801475c:	d1f6      	bne.n	801474c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801475e:	6838      	ldr	r0, [r7, #0]
 8014760:	f8c8 0000 	str.w	r0, [r8]
 8014764:	88b9      	ldrh	r1, [r7, #4]
 8014766:	f8a8 1004 	strh.w	r1, [r8, #4]
 801476a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 801476e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8014772:	d009      	beq.n	8014788 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8014774:	7b51      	ldrb	r1, [r2, #13]
 8014776:	7992      	ldrb	r2, [r2, #6]
 8014778:	0149      	lsls	r1, r1, #5
 801477a:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801477e:	4311      	orrs	r1, r2
 8014780:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8014784:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8014788:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801478c:	d00e      	beq.n	80147ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801478e:	eba3 030e 	sub.w	r3, r3, lr
 8014792:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8014796:	b29b      	uxth	r3, r3
 8014798:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 801479c:	10db      	asrs	r3, r3, #3
 801479e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80147a2:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80147a6:	4313      	orrs	r3, r2
 80147a8:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 80147ac:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 80147b0:	00cb      	lsls	r3, r1, #3
 80147b2:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80147b6:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 80147ba:	0648      	lsls	r0, r1, #25
 80147bc:	ea43 0302 	orr.w	r3, r3, r2
 80147c0:	bf44      	itt	mi
 80147c2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80147c6:	b21b      	sxthmi	r3, r3
 80147c8:	1b5d      	subs	r5, r3, r5
 80147ca:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80147ce:	e7b5      	b.n	801473c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

080147d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80147d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80147d4:	461e      	mov	r6, r3
 80147d6:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80147d8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80147dc:	4604      	mov	r4, r0
 80147de:	4617      	mov	r7, r2
 80147e0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80147e4:	f7f0 f948 	bl	8004a78 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80147e8:	4605      	mov	r5, r0
 80147ea:	b918      	cbnz	r0, 80147f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80147ec:	6030      	str	r0, [r6, #0]
 80147ee:	4628      	mov	r0, r5
 80147f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80147f4:	683b      	ldr	r3, [r7, #0]
 80147f6:	4601      	mov	r1, r0
 80147f8:	68db      	ldr	r3, [r3, #12]
 80147fa:	4638      	mov	r0, r7
 80147fc:	4798      	blx	r3
 80147fe:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8014802:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8014806:	4602      	mov	r2, r0
 8014808:	6030      	str	r0, [r6, #0]
 801480a:	d213      	bcs.n	8014834 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801480c:	4643      	mov	r3, r8
 801480e:	4639      	mov	r1, r7
 8014810:	4620      	mov	r0, r4
 8014812:	f7ff fe3b 	bl	801448c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8014816:	6030      	str	r0, [r6, #0]
 8014818:	6833      	ldr	r3, [r6, #0]
 801481a:	b143      	cbz	r3, 801482e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801481c:	7b5a      	ldrb	r2, [r3, #13]
 801481e:	7a9b      	ldrb	r3, [r3, #10]
 8014820:	0052      	lsls	r2, r2, #1
 8014822:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8014826:	4313      	orrs	r3, r2
 8014828:	bf0c      	ite	eq
 801482a:	2301      	moveq	r3, #1
 801482c:	2300      	movne	r3, #0
 801482e:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8014832:	e7dc      	b.n	80147ee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8014834:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8014838:	b29b      	uxth	r3, r3
 801483a:	2b7f      	cmp	r3, #127	@ 0x7f
 801483c:	d804      	bhi.n	8014848 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801483e:	4639      	mov	r1, r7
 8014840:	4620      	mov	r0, r4
 8014842:	f7ff fced 	bl	8014220 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8014846:	e7e6      	b.n	8014816 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8014848:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 801484c:	2b00      	cmp	r3, #0
 801484e:	d0e3      	beq.n	8014818 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8014850:	f640 1302 	movw	r3, #2306	@ 0x902
 8014854:	429d      	cmp	r5, r3
 8014856:	d1df      	bne.n	8014818 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8014858:	4601      	mov	r1, r0
 801485a:	4620      	mov	r0, r4
 801485c:	f7ff fcb2 	bl	80141c4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8014860:	e7d9      	b.n	8014816 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08014862 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8014862:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014866:	461e      	mov	r6, r3
 8014868:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801486a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801486e:	4604      	mov	r4, r0
 8014870:	4617      	mov	r7, r2
 8014872:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8014876:	f7f0 f8ff 	bl	8004a78 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801487a:	4605      	mov	r5, r0
 801487c:	b918      	cbnz	r0, 8014886 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801487e:	6030      	str	r0, [r6, #0]
 8014880:	4628      	mov	r0, r5
 8014882:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014886:	683b      	ldr	r3, [r7, #0]
 8014888:	4601      	mov	r1, r0
 801488a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801488e:	4638      	mov	r0, r7
 8014890:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8014894:	47c8      	blx	r9
 8014896:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 801489a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 801489e:	4602      	mov	r2, r0
 80148a0:	6030      	str	r0, [r6, #0]
 80148a2:	d213      	bcs.n	80148cc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80148a4:	4643      	mov	r3, r8
 80148a6:	4639      	mov	r1, r7
 80148a8:	4620      	mov	r0, r4
 80148aa:	f7ff fdef 	bl	801448c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80148ae:	6030      	str	r0, [r6, #0]
 80148b0:	6833      	ldr	r3, [r6, #0]
 80148b2:	b143      	cbz	r3, 80148c6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80148b4:	7b5a      	ldrb	r2, [r3, #13]
 80148b6:	7a9b      	ldrb	r3, [r3, #10]
 80148b8:	0052      	lsls	r2, r2, #1
 80148ba:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 80148be:	4313      	orrs	r3, r2
 80148c0:	bf0c      	ite	eq
 80148c2:	2301      	moveq	r3, #1
 80148c4:	2300      	movne	r3, #0
 80148c6:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 80148ca:	e7d9      	b.n	8014880 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80148cc:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 80148d0:	b29b      	uxth	r3, r3
 80148d2:	2b7f      	cmp	r3, #127	@ 0x7f
 80148d4:	d804      	bhi.n	80148e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80148d6:	4639      	mov	r1, r7
 80148d8:	4620      	mov	r0, r4
 80148da:	f7ff fca1 	bl	8014220 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80148de:	e7e6      	b.n	80148ae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80148e0:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 80148e4:	2b00      	cmp	r3, #0
 80148e6:	d0e3      	beq.n	80148b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80148e8:	f640 1302 	movw	r3, #2306	@ 0x902
 80148ec:	429d      	cmp	r5, r3
 80148ee:	d1df      	bne.n	80148b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80148f0:	4601      	mov	r1, r0
 80148f2:	4620      	mov	r0, r4
 80148f4:	f7ff fc66 	bl	80141c4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80148f8:	e7d9      	b.n	80148ae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080148fa <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80148fa:	b510      	push	{r4, lr}
 80148fc:	4604      	mov	r4, r0
 80148fe:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8014902:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8014904:	b1f1      	cbz	r1, 8014944 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8014906:	2b0a      	cmp	r3, #10
 8014908:	d02f      	beq.n	801496a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801490a:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 801490c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8014910:	3901      	subs	r1, #1
 8014912:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8014914:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 8014918:	1c51      	adds	r1, r2, #1
 801491a:	b289      	uxth	r1, r1
 801491c:	2901      	cmp	r1, #1
 801491e:	bf84      	itt	hi
 8014920:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8014924:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 8014926:	f103 0201 	add.w	r2, r3, #1
 801492a:	8722      	strh	r2, [r4, #56]	@ 0x38
 801492c:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801492e:	bf98      	it	ls
 8014930:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8014932:	4413      	add	r3, r2
 8014934:	b29b      	uxth	r3, r3
 8014936:	2b09      	cmp	r3, #9
 8014938:	bf88      	it	hi
 801493a:	3b0a      	subhi	r3, #10
 801493c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8014940:	8458      	strh	r0, [r3, #34]	@ 0x22
 8014942:	e7dc      	b.n	80148fe <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8014944:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8014946:	2b0a      	cmp	r3, #10
 8014948:	d00f      	beq.n	801496a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801494a:	4620      	mov	r0, r4
 801494c:	f7ff fbf9 	bl	8014142 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8014950:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8014952:	1c5a      	adds	r2, r3, #1
 8014954:	8722      	strh	r2, [r4, #56]	@ 0x38
 8014956:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8014958:	4413      	add	r3, r2
 801495a:	b29b      	uxth	r3, r3
 801495c:	2b09      	cmp	r3, #9
 801495e:	bf88      	it	hi
 8014960:	3b0a      	subhi	r3, #10
 8014962:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8014966:	8458      	strh	r0, [r3, #34]	@ 0x22
 8014968:	e7ec      	b.n	8014944 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801496a:	bd10      	pop	{r4, pc}

0801496c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801496c:	b538      	push	{r3, r4, r5, lr}
 801496e:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8014970:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8014974:	4604      	mov	r4, r0
 8014976:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8014978:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 801497a:	3a01      	subs	r2, #1
 801497c:	8702      	strh	r2, [r0, #56]	@ 0x38
 801497e:	1c5a      	adds	r2, r3, #1
 8014980:	b292      	uxth	r2, r2
 8014982:	2a09      	cmp	r2, #9
 8014984:	bf86      	itte	hi
 8014986:	3b09      	subhi	r3, #9
 8014988:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 801498a:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 801498c:	f7ff ffb5 	bl	80148fa <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8014990:	8c23      	ldrh	r3, [r4, #32]
 8014992:	2b01      	cmp	r3, #1
 8014994:	bf9c      	itt	ls
 8014996:	3301      	addls	r3, #1
 8014998:	8423      	strhls	r3, [r4, #32]
 801499a:	8be3      	ldrh	r3, [r4, #30]
 801499c:	b90b      	cbnz	r3, 80149a2 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801499e:	2302      	movs	r3, #2
 80149a0:	83e3      	strh	r3, [r4, #30]
 80149a2:	8be3      	ldrh	r3, [r4, #30]
 80149a4:	3b01      	subs	r3, #1
 80149a6:	b29b      	uxth	r3, r3
 80149a8:	83e3      	strh	r3, [r4, #30]
 80149aa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80149ae:	4628      	mov	r0, r5
 80149b0:	8365      	strh	r5, [r4, #26]
 80149b2:	bd38      	pop	{r3, r4, r5, pc}

080149b4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80149b4:	428a      	cmp	r2, r1
 80149b6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80149ba:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 80149bc:	d931      	bls.n	8014a22 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80149be:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 80149c0:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 80149c4:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 80149c8:	19ee      	adds	r6, r5, r7
 80149ca:	1a54      	subs	r4, r2, r1
 80149cc:	3e01      	subs	r6, #1
 80149ce:	fa1f fe84 	uxth.w	lr, r4
 80149d2:	b2b4      	uxth	r4, r6
 80149d4:	eba4 090e 	sub.w	r9, r4, lr
 80149d8:	fa1f f989 	uxth.w	r9, r9
 80149dc:	2c09      	cmp	r4, #9
 80149de:	4626      	mov	r6, r4
 80149e0:	bf88      	it	hi
 80149e2:	f1a4 060a 	subhi.w	r6, r4, #10
 80149e6:	f1bc 0f00 	cmp.w	ip, #0
 80149ea:	bf08      	it	eq
 80149ec:	f04f 0c02 	moveq.w	ip, #2
 80149f0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80149f4:	f10c 3cff 	add.w	ip, ip, #4294967295
 80149f8:	fa1f fc8c 	uxth.w	ip, ip
 80149fc:	3c01      	subs	r4, #1
 80149fe:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 8014a02:	b2a4      	uxth	r4, r4
 8014a04:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8014a08:	454c      	cmp	r4, r9
 8014a0a:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 8014a0e:	d1e5      	bne.n	80149dc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8014a10:	eba5 050e 	sub.w	r5, r5, lr
 8014a14:	eb0e 0408 	add.w	r4, lr, r8
 8014a18:	8705      	strh	r5, [r0, #56]	@ 0x38
 8014a1a:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 8014a1e:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8014a22:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8014a24:	1a64      	subs	r4, r4, r1
 8014a26:	4439      	add	r1, r7
 8014a28:	b289      	uxth	r1, r1
 8014a2a:	2909      	cmp	r1, #9
 8014a2c:	bf88      	it	hi
 8014a2e:	390a      	subhi	r1, #10
 8014a30:	8704      	strh	r4, [r0, #56]	@ 0x38
 8014a32:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8014a34:	250a      	movs	r5, #10
 8014a36:	b18a      	cbz	r2, 8014a5c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8014a38:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 8014a3a:	3a01      	subs	r2, #1
 8014a3c:	b292      	uxth	r2, r2
 8014a3e:	3101      	adds	r1, #1
 8014a40:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8014a44:	8701      	strh	r1, [r0, #56]	@ 0x38
 8014a46:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8014a48:	b901      	cbnz	r1, 8014a4c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8014a4a:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8014a4c:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8014a4e:	3901      	subs	r1, #1
 8014a50:	b289      	uxth	r1, r1
 8014a52:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8014a54:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8014a58:	844c      	strh	r4, [r1, #34]	@ 0x22
 8014a5a:	e7ec      	b.n	8014a36 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8014a5c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014a60:	f7ff bf4b 	b.w	80148fa <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08014a64 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8014a64:	b570      	push	{r4, r5, r6, lr}
 8014a66:	2500      	movs	r5, #0
 8014a68:	4295      	cmp	r5, r2
 8014a6a:	d011      	beq.n	8014a90 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8014a6c:	8bc4      	ldrh	r4, [r0, #30]
 8014a6e:	f831 6b02 	ldrh.w	r6, [r1], #2
 8014a72:	4414      	add	r4, r2
 8014a74:	3c01      	subs	r4, #1
 8014a76:	1b64      	subs	r4, r4, r5
 8014a78:	b2a4      	uxth	r4, r4
 8014a7a:	2c01      	cmp	r4, #1
 8014a7c:	bf88      	it	hi
 8014a7e:	3c02      	subhi	r4, #2
 8014a80:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8014a84:	8b64      	ldrh	r4, [r4, #26]
 8014a86:	42b4      	cmp	r4, r6
 8014a88:	d117      	bne.n	8014aba <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8014a8a:	3501      	adds	r5, #1
 8014a8c:	b2ad      	uxth	r5, r5
 8014a8e:	e7eb      	b.n	8014a68 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8014a90:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8014a94:	2400      	movs	r4, #0
 8014a96:	4413      	add	r3, r2
 8014a98:	b2a2      	uxth	r2, r4
 8014a9a:	429a      	cmp	r2, r3
 8014a9c:	da0f      	bge.n	8014abe <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8014a9e:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 8014aa0:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8014aa4:	4432      	add	r2, r6
 8014aa6:	b292      	uxth	r2, r2
 8014aa8:	2a09      	cmp	r2, #9
 8014aaa:	bf88      	it	hi
 8014aac:	3a0a      	subhi	r2, #10
 8014aae:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8014ab2:	3401      	adds	r4, #1
 8014ab4:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8014ab6:	42aa      	cmp	r2, r5
 8014ab8:	d0ee      	beq.n	8014a98 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8014aba:	2000      	movs	r0, #0
 8014abc:	bd70      	pop	{r4, r5, r6, pc}
 8014abe:	2001      	movs	r0, #1
 8014ac0:	e7fc      	b.n	8014abc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08014ac2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8014ac2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ac6:	4605      	mov	r5, r0
 8014ac8:	4616      	mov	r6, r2
 8014aca:	1c8c      	adds	r4, r1, #2
 8014acc:	8809      	ldrh	r1, [r1, #0]
 8014ace:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8014ad2:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8014ad6:	42b3      	cmp	r3, r6
 8014ad8:	d124      	bne.n	8014b24 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8014ada:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8014ade:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8014ae2:	f001 070f 	and.w	r7, r1, #15
 8014ae6:	f8cd 8000 	str.w	r8, [sp]
 8014aea:	464b      	mov	r3, r9
 8014aec:	4652      	mov	r2, sl
 8014aee:	4621      	mov	r1, r4
 8014af0:	4628      	mov	r0, r5
 8014af2:	f7ff ffb7 	bl	8014a64 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8014af6:	4683      	mov	fp, r0
 8014af8:	b168      	cbz	r0, 8014b16 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8014afa:	eb0a 0109 	add.w	r1, sl, r9
 8014afe:	4441      	add	r1, r8
 8014b00:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8014b04:	463a      	mov	r2, r7
 8014b06:	4649      	mov	r1, r9
 8014b08:	4628      	mov	r0, r5
 8014b0a:	f7ff ff53 	bl	80149b4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8014b0e:	4658      	mov	r0, fp
 8014b10:	b003      	add	sp, #12
 8014b12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014b16:	eb07 010a 	add.w	r1, r7, sl
 8014b1a:	4449      	add	r1, r9
 8014b1c:	4441      	add	r1, r8
 8014b1e:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8014b22:	e7d2      	b.n	8014aca <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8014b24:	f04f 0b00 	mov.w	fp, #0
 8014b28:	e7f1      	b.n	8014b0e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08014b2a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8014b2a:	b570      	push	{r4, r5, r6, lr}
 8014b2c:	8810      	ldrh	r0, [r2, #0]
 8014b2e:	4298      	cmp	r0, r3
 8014b30:	d817      	bhi.n	8014b62 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8014b32:	1e48      	subs	r0, r1, #1
 8014b34:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8014b38:	4298      	cmp	r0, r3
 8014b3a:	d312      	bcc.n	8014b62 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8014b3c:	2400      	movs	r4, #0
 8014b3e:	428c      	cmp	r4, r1
 8014b40:	d20f      	bcs.n	8014b62 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8014b42:	1860      	adds	r0, r4, r1
 8014b44:	1040      	asrs	r0, r0, #1
 8014b46:	0085      	lsls	r5, r0, #2
 8014b48:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8014b4c:	42b3      	cmp	r3, r6
 8014b4e:	d902      	bls.n	8014b56 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8014b50:	3001      	adds	r0, #1
 8014b52:	b284      	uxth	r4, r0
 8014b54:	e7f3      	b.n	8014b3e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8014b56:	d201      	bcs.n	8014b5c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8014b58:	b281      	uxth	r1, r0
 8014b5a:	e7f0      	b.n	8014b3e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8014b5c:	442a      	add	r2, r5
 8014b5e:	8850      	ldrh	r0, [r2, #2]
 8014b60:	bd70      	pop	{r4, r5, r6, pc}
 8014b62:	2000      	movs	r0, #0
 8014b64:	e7fc      	b.n	8014b60 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08014b66 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8014b66:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014b6a:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 8014b6c:	886f      	ldrh	r7, [r5, #2]
 8014b6e:	4604      	mov	r4, r0
 8014b70:	087f      	lsrs	r7, r7, #1
 8014b72:	260b      	movs	r6, #11
 8014b74:	3e01      	subs	r6, #1
 8014b76:	d013      	beq.n	8014ba0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8014b78:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8014b7a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8014b7e:	462a      	mov	r2, r5
 8014b80:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8014b84:	4639      	mov	r1, r7
 8014b86:	4643      	mov	r3, r8
 8014b88:	4620      	mov	r0, r4
 8014b8a:	f7ff ffce 	bl	8014b2a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8014b8e:	b138      	cbz	r0, 8014ba0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8014b90:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8014b94:	4642      	mov	r2, r8
 8014b96:	4620      	mov	r0, r4
 8014b98:	f7ff ff93 	bl	8014ac2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8014b9c:	2800      	cmp	r0, #0
 8014b9e:	d1e9      	bne.n	8014b74 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8014ba0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014ba4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8014ba4:	b570      	push	{r4, r5, r6, lr}
 8014ba6:	694a      	ldr	r2, [r1, #20]
 8014ba8:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8014baa:	684b      	ldr	r3, [r1, #4]
 8014bac:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 8014bae:	1b54      	subs	r4, r2, r5
 8014bb0:	f000 8106 	beq.w	8014dc0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8014bb4:	1b9b      	subs	r3, r3, r6
 8014bb6:	d003      	beq.n	8014bc0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8014bb8:	4363      	muls	r3, r4
 8014bba:	2210      	movs	r2, #16
 8014bbc:	fb93 f3f2 	sdiv	r3, r3, r2
 8014bc0:	680c      	ldr	r4, [r1, #0]
 8014bc2:	698a      	ldr	r2, [r1, #24]
 8014bc4:	1b65      	subs	r5, r4, r5
 8014bc6:	f000 80fd 	beq.w	8014dc4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8014bca:	1b92      	subs	r2, r2, r6
 8014bcc:	d003      	beq.n	8014bd6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8014bce:	436a      	muls	r2, r5
 8014bd0:	2410      	movs	r4, #16
 8014bd2:	fb92 f2f4 	sdiv	r2, r2, r4
 8014bd6:	1a9b      	subs	r3, r3, r2
 8014bd8:	ee07 3a90 	vmov	s15, r3
 8014bdc:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 8014e00 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8014be0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014be4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8014be8:	ee67 7a84 	vmul.f32	s15, s15, s8
 8014bec:	460a      	mov	r2, r1
 8014bee:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8014bf2:	4603      	mov	r3, r0
 8014bf4:	f100 040c 	add.w	r4, r0, #12
 8014bf8:	eeb1 6a43 	vneg.f32	s12, s6
 8014bfc:	edd2 7a02 	vldr	s15, [r2, #8]
 8014c00:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8014c04:	3214      	adds	r2, #20
 8014c06:	ece3 6a01 	vstmia	r3!, {s13}
 8014c0a:	ed52 7a02 	vldr	s15, [r2, #-8]
 8014c0e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014c12:	429c      	cmp	r4, r3
 8014c14:	edc3 7a02 	vstr	s15, [r3, #8]
 8014c18:	ed52 7a01 	vldr	s15, [r2, #-4]
 8014c1c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014c20:	edc3 7a05 	vstr	s15, [r3, #20]
 8014c24:	d1ea      	bne.n	8014bfc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8014c26:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8014c28:	698b      	ldr	r3, [r1, #24]
 8014c2a:	edd0 4a02 	vldr	s9, [r0, #8]
 8014c2e:	edd0 3a00 	vldr	s7, [r0]
 8014c32:	edd0 6a01 	vldr	s13, [r0, #4]
 8014c36:	ed90 5a05 	vldr	s10, [r0, #20]
 8014c3a:	ed90 2a03 	vldr	s4, [r0, #12]
 8014c3e:	edd0 5a04 	vldr	s11, [r0, #16]
 8014c42:	ed90 1a07 	vldr	s2, [r0, #28]
 8014c46:	edd0 2a06 	vldr	s5, [r0, #24]
 8014c4a:	1a9b      	subs	r3, r3, r2
 8014c4c:	ee07 3a90 	vmov	s15, r3
 8014c50:	684b      	ldr	r3, [r1, #4]
 8014c52:	1a9b      	subs	r3, r3, r2
 8014c54:	ee07 3a10 	vmov	s14, r3
 8014c58:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014c5c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8014c60:	ee67 7a84 	vmul.f32	s15, s15, s8
 8014c64:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8014c68:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014c6c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8014c70:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014c74:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8014c78:	eee6 7a87 	vfma.f32	s15, s13, s14
 8014c7c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8014c80:	ee67 7a83 	vmul.f32	s15, s15, s6
 8014c84:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 8014c88:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8014c8a:	694a      	ldr	r2, [r1, #20]
 8014c8c:	1b13      	subs	r3, r2, r4
 8014c8e:	ee07 3a10 	vmov	s14, r3
 8014c92:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014c96:	680b      	ldr	r3, [r1, #0]
 8014c98:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014c9c:	1b1b      	subs	r3, r3, r4
 8014c9e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8014ca2:	ee07 3a10 	vmov	s14, r3
 8014ca6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014caa:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014cae:	eee6 4a87 	vfma.f32	s9, s13, s14
 8014cb2:	ee64 4a86 	vmul.f32	s9, s9, s12
 8014cb6:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 8014cba:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8014cbc:	698b      	ldr	r3, [r1, #24]
 8014cbe:	1a9b      	subs	r3, r3, r2
 8014cc0:	ee06 3a90 	vmov	s13, r3
 8014cc4:	684b      	ldr	r3, [r1, #4]
 8014cc6:	1a9b      	subs	r3, r3, r2
 8014cc8:	ee07 3a10 	vmov	s14, r3
 8014ccc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8014cd0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014cd4:	ee66 6a84 	vmul.f32	s13, s13, s8
 8014cd8:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014cdc:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8014ce0:	eee5 6a87 	vfma.f32	s13, s11, s14
 8014ce4:	ee66 6a83 	vmul.f32	s13, s13, s6
 8014ce8:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 8014cec:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8014cee:	694a      	ldr	r2, [r1, #20]
 8014cf0:	1b13      	subs	r3, r2, r4
 8014cf2:	ee07 3a10 	vmov	s14, r3
 8014cf6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014cfa:	680b      	ldr	r3, [r1, #0]
 8014cfc:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014d00:	1b1b      	subs	r3, r3, r4
 8014d02:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8014d06:	ee07 3a10 	vmov	s14, r3
 8014d0a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014d0e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014d12:	eea5 5a87 	vfma.f32	s10, s11, s14
 8014d16:	edd0 5a08 	vldr	s11, [r0, #32]
 8014d1a:	ee25 5a06 	vmul.f32	s10, s10, s12
 8014d1e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8014d22:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 8014d26:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8014d28:	698b      	ldr	r3, [r1, #24]
 8014d2a:	1a9b      	subs	r3, r3, r2
 8014d2c:	ee07 3a10 	vmov	s14, r3
 8014d30:	684b      	ldr	r3, [r1, #4]
 8014d32:	1a9b      	subs	r3, r3, r2
 8014d34:	ee01 3a90 	vmov	s3, r3
 8014d38:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014d3c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8014d40:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014d44:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8014d48:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8014d4c:	ee61 1a84 	vmul.f32	s3, s3, s8
 8014d50:	eea1 7a21 	vfma.f32	s14, s2, s3
 8014d54:	ee27 7a03 	vmul.f32	s14, s14, s6
 8014d58:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8014d5c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8014d5e:	694a      	ldr	r2, [r1, #20]
 8014d60:	1b13      	subs	r3, r2, r4
 8014d62:	ee03 3a10 	vmov	s6, r3
 8014d66:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8014d6a:	680b      	ldr	r3, [r1, #0]
 8014d6c:	ee23 3a04 	vmul.f32	s6, s6, s8
 8014d70:	1b1b      	subs	r3, r3, r4
 8014d72:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8014d76:	ee03 3a10 	vmov	s6, r3
 8014d7a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8014d7e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8014d82:	eee1 5a04 	vfma.f32	s11, s2, s8
 8014d86:	ee25 6a86 	vmul.f32	s12, s11, s12
 8014d8a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8014d8e:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 8014d92:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8014d96:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8014d9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014d9e:	dd13      	ble.n	8014dc8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8014da0:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8014da4:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8014da8:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8014daa:	eee3 7a87 	vfma.f32	s15, s7, s14
 8014dae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8014db2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014db6:	dd15      	ble.n	8014de4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8014db8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8014dbc:	6403      	str	r3, [r0, #64]	@ 0x40
 8014dbe:	bd70      	pop	{r4, r5, r6, pc}
 8014dc0:	4623      	mov	r3, r4
 8014dc2:	e6fd      	b.n	8014bc0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8014dc4:	462a      	mov	r2, r5
 8014dc6:	e706      	b.n	8014bd6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8014dc8:	d502      	bpl.n	8014dd0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8014dca:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8014dce:	e7e9      	b.n	8014da4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8014dd0:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8014dd4:	eea3 2a85 	vfma.f32	s4, s7, s10
 8014dd8:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8014ddc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014de0:	dade      	bge.n	8014da0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8014de2:	e7f2      	b.n	8014dca <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8014de4:	d502      	bpl.n	8014dec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8014de6:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8014dea:	e7e7      	b.n	8014dbc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8014dec:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8014df0:	eee3 4a86 	vfma.f32	s9, s7, s12
 8014df4:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8014df8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014dfc:	dadc      	bge.n	8014db8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8014dfe:	e7f2      	b.n	8014de6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8014e00:	3d800000 	.word	0x3d800000

08014e04 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8014e04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014e08:	2714      	movs	r7, #20
 8014e0a:	435f      	muls	r7, r3
 8014e0c:	eb02 0c07 	add.w	ip, r2, r7
 8014e10:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8014e14:	f115 0e0f 	adds.w	lr, r5, #15
 8014e18:	f100 80a2 	bmi.w	8014f60 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8014e1c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8014e20:	9c08      	ldr	r4, [sp, #32]
 8014e22:	f8c0 e014 	str.w	lr, [r0, #20]
 8014e26:	2614      	movs	r6, #20
 8014e28:	4366      	muls	r6, r4
 8014e2a:	eb02 0806 	add.w	r8, r2, r6
 8014e2e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8014e32:	f115 040f 	adds.w	r4, r5, #15
 8014e36:	f100 809f 	bmi.w	8014f78 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8014e3a:	1124      	asrs	r4, r4, #4
 8014e3c:	eba4 040e 	sub.w	r4, r4, lr
 8014e40:	6184      	str	r4, [r0, #24]
 8014e42:	2c00      	cmp	r4, #0
 8014e44:	f000 808a 	beq.w	8014f5c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8014e48:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8014e4c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8014e50:	5995      	ldr	r5, [r2, r6]
 8014e52:	eba4 0809 	sub.w	r8, r4, r9
 8014e56:	59d4      	ldr	r4, [r2, r7]
 8014e58:	eba5 0a04 	sub.w	sl, r5, r4
 8014e5c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8014e60:	fb0e fe05 	mul.w	lr, lr, r5
 8014e64:	fb0a ee19 	mls	lr, sl, r9, lr
 8014e68:	fb08 e404 	mla	r4, r8, r4, lr
 8014e6c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8014e70:	3c01      	subs	r4, #1
 8014e72:	19a4      	adds	r4, r4, r6
 8014e74:	f100 808c 	bmi.w	8014f90 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8014e78:	fb94 fef6 	sdiv	lr, r4, r6
 8014e7c:	f8c0 e000 	str.w	lr, [r0]
 8014e80:	fb06 441e 	mls	r4, r6, lr, r4
 8014e84:	6104      	str	r4, [r0, #16]
 8014e86:	2d00      	cmp	r5, #0
 8014e88:	f2c0 8095 	blt.w	8014fb6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8014e8c:	fb95 f4f6 	sdiv	r4, r5, r6
 8014e90:	6044      	str	r4, [r0, #4]
 8014e92:	fb06 5514 	mls	r5, r6, r4, r5
 8014e96:	6085      	str	r5, [r0, #8]
 8014e98:	60c6      	str	r6, [r0, #12]
 8014e9a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8014e9e:	6945      	ldr	r5, [r0, #20]
 8014ea0:	59d2      	ldr	r2, [r2, r7]
 8014ea2:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 8014fd8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8014ea6:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8014eaa:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8014eae:	ee07 4a10 	vmov	s14, r4
 8014eb2:	6804      	ldr	r4, [r0, #0]
 8014eb4:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8014eb8:	ee07 2a90 	vmov	s15, r2
 8014ebc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014ec0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014ec4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8014ec8:	ee27 7a26 	vmul.f32	s14, s14, s13
 8014ecc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014ed0:	edd3 6a00 	vldr	s13, [r3]
 8014ed4:	eee6 6a07 	vfma.f32	s13, s12, s14
 8014ed8:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 8014edc:	eee6 6a27 	vfma.f32	s13, s12, s15
 8014ee0:	edc0 6a07 	vstr	s13, [r0, #28]
 8014ee4:	edd0 6a01 	vldr	s13, [r0, #4]
 8014ee8:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 8014eec:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8014ef0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8014ef4:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8014ef8:	ed80 6a08 	vstr	s12, [r0, #32]
 8014efc:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8014efe:	6242      	str	r2, [r0, #36]	@ 0x24
 8014f00:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8014f04:	ed93 6a03 	vldr	s12, [r3, #12]
 8014f08:	eea5 6a87 	vfma.f32	s12, s11, s14
 8014f0c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8014f10:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8014f14:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8014f18:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8014f1c:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8014f20:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8014f24:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8014f28:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8014f2a:	6302      	str	r2, [r0, #48]	@ 0x30
 8014f2c:	ed93 6a06 	vldr	s12, [r3, #24]
 8014f30:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8014f34:	eea5 6a87 	vfma.f32	s12, s11, s14
 8014f38:	eeb0 7a46 	vmov.f32	s14, s12
 8014f3c:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8014f40:	eea6 7a27 	vfma.f32	s14, s12, s15
 8014f44:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8014f48:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 8014f4c:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8014f50:	eee6 7a87 	vfma.f32	s15, s13, s14
 8014f54:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8014f58:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 8014f5a:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8014f5c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014f60:	f1c5 0501 	rsb	r5, r5, #1
 8014f64:	f015 050f 	ands.w	r5, r5, #15
 8014f68:	bf18      	it	ne
 8014f6a:	2501      	movne	r5, #1
 8014f6c:	2410      	movs	r4, #16
 8014f6e:	fb9e fef4 	sdiv	lr, lr, r4
 8014f72:	ebae 0e05 	sub.w	lr, lr, r5
 8014f76:	e753      	b.n	8014e20 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8014f78:	f1c5 0501 	rsb	r5, r5, #1
 8014f7c:	f015 050f 	ands.w	r5, r5, #15
 8014f80:	bf18      	it	ne
 8014f82:	2501      	movne	r5, #1
 8014f84:	f04f 0910 	mov.w	r9, #16
 8014f88:	fb94 f4f9 	sdiv	r4, r4, r9
 8014f8c:	1b64      	subs	r4, r4, r5
 8014f8e:	e755      	b.n	8014e3c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8014f90:	4264      	negs	r4, r4
 8014f92:	fb94 fef6 	sdiv	lr, r4, r6
 8014f96:	f1ce 0800 	rsb	r8, lr, #0
 8014f9a:	fb06 441e 	mls	r4, r6, lr, r4
 8014f9e:	f8c0 8000 	str.w	r8, [r0]
 8014fa2:	6104      	str	r4, [r0, #16]
 8014fa4:	2c00      	cmp	r4, #0
 8014fa6:	f43f af6e 	beq.w	8014e86 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8014faa:	ea6f 0e0e 	mvn.w	lr, lr
 8014fae:	f8c0 e000 	str.w	lr, [r0]
 8014fb2:	1b34      	subs	r4, r6, r4
 8014fb4:	e766      	b.n	8014e84 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8014fb6:	426d      	negs	r5, r5
 8014fb8:	fb95 f4f6 	sdiv	r4, r5, r6
 8014fbc:	f1c4 0e00 	rsb	lr, r4, #0
 8014fc0:	fb06 5514 	mls	r5, r6, r4, r5
 8014fc4:	f8c0 e004 	str.w	lr, [r0, #4]
 8014fc8:	6085      	str	r5, [r0, #8]
 8014fca:	2d00      	cmp	r5, #0
 8014fcc:	f43f af64 	beq.w	8014e98 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8014fd0:	43e4      	mvns	r4, r4
 8014fd2:	6044      	str	r4, [r0, #4]
 8014fd4:	1b75      	subs	r5, r6, r5
 8014fd6:	e75e      	b.n	8014e96 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8014fd8:	3d800000 	.word	0x3d800000

08014fdc <_ZN8touchgfx7Unicode6strlenEPKt>:
 8014fdc:	4602      	mov	r2, r0
 8014fde:	b148      	cbz	r0, 8014ff4 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8014fe0:	2300      	movs	r3, #0
 8014fe2:	b298      	uxth	r0, r3
 8014fe4:	3301      	adds	r3, #1
 8014fe6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8014fea:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8014fee:	2900      	cmp	r1, #0
 8014ff0:	d1f7      	bne.n	8014fe2 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8014ff2:	4770      	bx	lr
 8014ff4:	4770      	bx	lr

08014ff6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8014ff6:	b530      	push	{r4, r5, lr}
 8014ff8:	4604      	mov	r4, r0
 8014ffa:	b159      	cbz	r1, 8015014 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8014ffc:	b148      	cbz	r0, 8015012 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8014ffe:	2300      	movs	r3, #0
 8015000:	b298      	uxth	r0, r3
 8015002:	4282      	cmp	r2, r0
 8015004:	d905      	bls.n	8015012 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8015006:	5ccd      	ldrb	r5, [r1, r3]
 8015008:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801500c:	3301      	adds	r3, #1
 801500e:	2d00      	cmp	r5, #0
 8015010:	d1f6      	bne.n	8015000 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8015012:	bd30      	pop	{r4, r5, pc}
 8015014:	4608      	mov	r0, r1
 8015016:	e7fc      	b.n	8015012 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08015018 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8015018:	b5f0      	push	{r4, r5, r6, r7, lr}
 801501a:	b08b      	sub	sp, #44	@ 0x2c
 801501c:	468c      	mov	ip, r1
 801501e:	2100      	movs	r1, #0
 8015020:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8015024:	4604      	mov	r4, r0
 8015026:	261f      	movs	r6, #31
 8015028:	af01      	add	r7, sp, #4
 801502a:	fb94 fef3 	sdiv	lr, r4, r3
 801502e:	fb03 441e 	mls	r4, r3, lr, r4
 8015032:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8015036:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801503a:	b2ec      	uxtb	r4, r5
 801503c:	2d09      	cmp	r5, #9
 801503e:	bfd4      	ite	le
 8015040:	3430      	addle	r4, #48	@ 0x30
 8015042:	3457      	addgt	r4, #87	@ 0x57
 8015044:	b2e4      	uxtb	r4, r4
 8015046:	55bc      	strb	r4, [r7, r6]
 8015048:	4674      	mov	r4, lr
 801504a:	1e71      	subs	r1, r6, #1
 801504c:	b974      	cbnz	r4, 801506c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801504e:	2800      	cmp	r0, #0
 8015050:	da05      	bge.n	801505e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8015052:	ab0a      	add	r3, sp, #40	@ 0x28
 8015054:	4419      	add	r1, r3
 8015056:	232d      	movs	r3, #45	@ 0x2d
 8015058:	f801 3c24 	strb.w	r3, [r1, #-36]
 801505c:	1eb1      	subs	r1, r6, #2
 801505e:	3101      	adds	r1, #1
 8015060:	4439      	add	r1, r7
 8015062:	4660      	mov	r0, ip
 8015064:	f7ff ffc7 	bl	8014ff6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8015068:	b00b      	add	sp, #44	@ 0x2c
 801506a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801506c:	460e      	mov	r6, r1
 801506e:	e7dc      	b.n	801502a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08015070 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8015070:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015072:	b08b      	sub	sp, #44	@ 0x2c
 8015074:	468c      	mov	ip, r1
 8015076:	2100      	movs	r1, #0
 8015078:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 801507c:	ae01      	add	r6, sp, #4
 801507e:	211f      	movs	r1, #31
 8015080:	fbb0 f7f3 	udiv	r7, r0, r3
 8015084:	fb03 0517 	mls	r5, r3, r7, r0
 8015088:	b2ec      	uxtb	r4, r5
 801508a:	2d09      	cmp	r5, #9
 801508c:	bfd4      	ite	le
 801508e:	3430      	addle	r4, #48	@ 0x30
 8015090:	3457      	addgt	r4, #87	@ 0x57
 8015092:	b2e4      	uxtb	r4, r4
 8015094:	558c      	strb	r4, [r1, r6]
 8015096:	4638      	mov	r0, r7
 8015098:	1e4c      	subs	r4, r1, #1
 801509a:	b92f      	cbnz	r7, 80150a8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801509c:	4431      	add	r1, r6
 801509e:	4660      	mov	r0, ip
 80150a0:	f7ff ffa9 	bl	8014ff6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80150a4:	b00b      	add	sp, #44	@ 0x2c
 80150a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80150a8:	4621      	mov	r1, r4
 80150aa:	e7e9      	b.n	8015080 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

080150ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80150ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80150b0:	4691      	mov	r9, r2
 80150b2:	b085      	sub	sp, #20
 80150b4:	6802      	ldr	r2, [r0, #0]
 80150b6:	9201      	str	r2, [sp, #4]
 80150b8:	4688      	mov	r8, r1
 80150ba:	4683      	mov	fp, r0
 80150bc:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 80150c0:	9103      	str	r1, [sp, #12]
 80150c2:	4610      	mov	r0, r2
 80150c4:	461c      	mov	r4, r3
 80150c6:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 80150ca:	9302      	str	r3, [sp, #8]
 80150cc:	f7ff ff86 	bl	8014fdc <_ZN8touchgfx7Unicode6strlenEPKt>
 80150d0:	f1b8 0f00 	cmp.w	r8, #0
 80150d4:	bf0c      	ite	eq
 80150d6:	4684      	moveq	ip, r0
 80150d8:	f100 0c01 	addne.w	ip, r0, #1
 80150dc:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 80150e0:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 80150e4:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80150e6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80150e8:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 80150ec:	9903      	ldr	r1, [sp, #12]
 80150ee:	fa1f fc8c 	uxth.w	ip, ip
 80150f2:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80150f6:	d041      	beq.n	801517c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80150f8:	d834      	bhi.n	8015164 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 80150fa:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 80150fe:	d059      	beq.n	80151b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8015100:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 8015104:	d03a      	beq.n	801517c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8015106:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 801510a:	d034      	beq.n	8015176 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801510c:	2400      	movs	r4, #0
 801510e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 8015112:	3a01      	subs	r2, #1
 8015114:	b169      	cbz	r1, 8015132 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8015116:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8015118:	458c      	cmp	ip, r1
 801511a:	da09      	bge.n	8015130 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801511c:	eba1 010c 	sub.w	r1, r1, ip
 8015120:	b289      	uxth	r1, r1
 8015122:	b933      	cbnz	r3, 8015132 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8015124:	2e00      	cmp	r6, #0
 8015126:	d051      	beq.n	80151cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8015128:	2800      	cmp	r0, #0
 801512a:	d04f      	beq.n	80151cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801512c:	440c      	add	r4, r1
 801512e:	b2a4      	uxth	r4, r4
 8015130:	2100      	movs	r1, #0
 8015132:	682b      	ldr	r3, [r5, #0]
 8015134:	4293      	cmp	r3, r2
 8015136:	da07      	bge.n	8015148 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8015138:	f1b8 0f00 	cmp.w	r8, #0
 801513c:	d004      	beq.n	8015148 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801513e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8015142:	682b      	ldr	r3, [r5, #0]
 8015144:	3301      	adds	r3, #1
 8015146:	602b      	str	r3, [r5, #0]
 8015148:	2730      	movs	r7, #48	@ 0x30
 801514a:	2c00      	cmp	r4, #0
 801514c:	d04e      	beq.n	80151ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801514e:	682e      	ldr	r6, [r5, #0]
 8015150:	3c01      	subs	r4, #1
 8015152:	42b2      	cmp	r2, r6
 8015154:	b2a4      	uxth	r4, r4
 8015156:	dd49      	ble.n	80151ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8015158:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801515c:	682b      	ldr	r3, [r5, #0]
 801515e:	3301      	adds	r3, #1
 8015160:	602b      	str	r3, [r5, #0]
 8015162:	e7f2      	b.n	801514a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8015164:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 8015168:	d01d      	beq.n	80151a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801516a:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 801516e:	d002      	beq.n	8015176 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8015170:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 8015174:	e7c9      	b.n	801510a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8015176:	4684      	mov	ip, r0
 8015178:	f04f 0800 	mov.w	r8, #0
 801517c:	2c00      	cmp	r4, #0
 801517e:	d0c6      	beq.n	801510e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8015180:	b947      	cbnz	r7, 8015194 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8015182:	2801      	cmp	r0, #1
 8015184:	d106      	bne.n	8015194 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8015186:	8814      	ldrh	r4, [r2, #0]
 8015188:	2c30      	cmp	r4, #48	@ 0x30
 801518a:	bf02      	ittt	eq
 801518c:	3202      	addeq	r2, #2
 801518e:	f8cb 2000 	streq.w	r2, [fp]
 8015192:	4638      	moveq	r0, r7
 8015194:	45bc      	cmp	ip, r7
 8015196:	da14      	bge.n	80151c2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8015198:	b2bf      	uxth	r7, r7
 801519a:	eba7 040c 	sub.w	r4, r7, ip
 801519e:	b2a4      	uxth	r4, r4
 80151a0:	46bc      	mov	ip, r7
 80151a2:	2600      	movs	r6, #0
 80151a4:	e7b3      	b.n	801510e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80151a6:	4684      	mov	ip, r0
 80151a8:	b16c      	cbz	r4, 80151c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80151aa:	42b8      	cmp	r0, r7
 80151ac:	dd00      	ble.n	80151b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 80151ae:	b2b8      	uxth	r0, r7
 80151b0:	2400      	movs	r4, #0
 80151b2:	e003      	b.n	80151bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 80151b4:	f04f 0c01 	mov.w	ip, #1
 80151b8:	2400      	movs	r4, #0
 80151ba:	4660      	mov	r0, ip
 80151bc:	4626      	mov	r6, r4
 80151be:	46a0      	mov	r8, r4
 80151c0:	e7a5      	b.n	801510e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80151c2:	2400      	movs	r4, #0
 80151c4:	e7ed      	b.n	80151a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 80151c6:	4626      	mov	r6, r4
 80151c8:	46a0      	mov	r8, r4
 80151ca:	e7a0      	b.n	801510e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80151cc:	2900      	cmp	r1, #0
 80151ce:	d0b0      	beq.n	8015132 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80151d0:	2720      	movs	r7, #32
 80151d2:	682e      	ldr	r6, [r5, #0]
 80151d4:	2900      	cmp	r1, #0
 80151d6:	d0ac      	beq.n	8015132 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80151d8:	3901      	subs	r1, #1
 80151da:	4296      	cmp	r6, r2
 80151dc:	b289      	uxth	r1, r1
 80151de:	daa7      	bge.n	8015130 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80151e0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80151e4:	682b      	ldr	r3, [r5, #0]
 80151e6:	3301      	adds	r3, #1
 80151e8:	602b      	str	r3, [r5, #0]
 80151ea:	e7f2      	b.n	80151d2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 80151ec:	b188      	cbz	r0, 8015212 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80151ee:	682b      	ldr	r3, [r5, #0]
 80151f0:	3801      	subs	r0, #1
 80151f2:	429a      	cmp	r2, r3
 80151f4:	b280      	uxth	r0, r0
 80151f6:	dd0c      	ble.n	8015212 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80151f8:	f8db 3000 	ldr.w	r3, [fp]
 80151fc:	1c9c      	adds	r4, r3, #2
 80151fe:	f8cb 4000 	str.w	r4, [fp]
 8015202:	881c      	ldrh	r4, [r3, #0]
 8015204:	682b      	ldr	r3, [r5, #0]
 8015206:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801520a:	682b      	ldr	r3, [r5, #0]
 801520c:	3301      	adds	r3, #1
 801520e:	602b      	str	r3, [r5, #0]
 8015210:	e7ec      	b.n	80151ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8015212:	2620      	movs	r6, #32
 8015214:	b151      	cbz	r1, 801522c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8015216:	6828      	ldr	r0, [r5, #0]
 8015218:	3901      	subs	r1, #1
 801521a:	4282      	cmp	r2, r0
 801521c:	b289      	uxth	r1, r1
 801521e:	dd05      	ble.n	801522c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8015220:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8015224:	682b      	ldr	r3, [r5, #0]
 8015226:	3301      	adds	r3, #1
 8015228:	602b      	str	r3, [r5, #0]
 801522a:	e7f3      	b.n	8015214 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801522c:	b005      	add	sp, #20
 801522e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015232 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8015232:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015236:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801523a:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 801523e:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 8015242:	2400      	movs	r4, #0
 8015244:	8014      	strh	r4, [r2, #0]
 8015246:	701c      	strb	r4, [r3, #0]
 8015248:	f888 4000 	strb.w	r4, [r8]
 801524c:	f88c 4000 	strb.w	r4, [ip]
 8015250:	f88e 4000 	strb.w	r4, [lr]
 8015254:	703c      	strb	r4, [r7, #0]
 8015256:	6804      	ldr	r4, [r0, #0]
 8015258:	b1a4      	cbz	r4, 8015284 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801525a:	8824      	ldrh	r4, [r4, #0]
 801525c:	f04f 0901 	mov.w	r9, #1
 8015260:	b314      	cbz	r4, 80152a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8015262:	2c2b      	cmp	r4, #43	@ 0x2b
 8015264:	d001      	beq.n	801526a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8015266:	2c20      	cmp	r4, #32
 8015268:	d110      	bne.n	801528c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801526a:	8014      	strh	r4, [r2, #0]
 801526c:	6804      	ldr	r4, [r0, #0]
 801526e:	b10c      	cbz	r4, 8015274 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8015270:	3402      	adds	r4, #2
 8015272:	6004      	str	r4, [r0, #0]
 8015274:	680c      	ldr	r4, [r1, #0]
 8015276:	b10c      	cbz	r4, 801527c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8015278:	3401      	adds	r4, #1
 801527a:	600c      	str	r4, [r1, #0]
 801527c:	6804      	ldr	r4, [r0, #0]
 801527e:	b17c      	cbz	r4, 80152a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8015280:	8824      	ldrh	r4, [r4, #0]
 8015282:	e7ed      	b.n	8015260 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8015284:	680c      	ldr	r4, [r1, #0]
 8015286:	b17c      	cbz	r4, 80152a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8015288:	7824      	ldrb	r4, [r4, #0]
 801528a:	e7e7      	b.n	801525c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801528c:	2c2d      	cmp	r4, #45	@ 0x2d
 801528e:	d102      	bne.n	8015296 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8015290:	f883 9000 	strb.w	r9, [r3]
 8015294:	e7ea      	b.n	801526c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8015296:	2c23      	cmp	r4, #35	@ 0x23
 8015298:	d107      	bne.n	80152aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801529a:	f888 9000 	strb.w	r9, [r8]
 801529e:	e7e5      	b.n	801526c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80152a0:	680c      	ldr	r4, [r1, #0]
 80152a2:	b10c      	cbz	r4, 80152a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80152a4:	7824      	ldrb	r4, [r4, #0]
 80152a6:	e7db      	b.n	8015260 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80152a8:	2400      	movs	r4, #0
 80152aa:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 80152ae:	2b09      	cmp	r3, #9
 80152b0:	d901      	bls.n	80152b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80152b2:	2c2a      	cmp	r4, #42	@ 0x2a
 80152b4:	d122      	bne.n	80152fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80152b6:	2301      	movs	r3, #1
 80152b8:	2c30      	cmp	r4, #48	@ 0x30
 80152ba:	f88e 3000 	strb.w	r3, [lr]
 80152be:	d10d      	bne.n	80152dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80152c0:	f88c 3000 	strb.w	r3, [ip]
 80152c4:	6803      	ldr	r3, [r0, #0]
 80152c6:	b10b      	cbz	r3, 80152cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 80152c8:	3302      	adds	r3, #2
 80152ca:	6003      	str	r3, [r0, #0]
 80152cc:	680b      	ldr	r3, [r1, #0]
 80152ce:	b10b      	cbz	r3, 80152d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 80152d0:	3301      	adds	r3, #1
 80152d2:	600b      	str	r3, [r1, #0]
 80152d4:	6803      	ldr	r3, [r0, #0]
 80152d6:	2b00      	cmp	r3, #0
 80152d8:	d02f      	beq.n	801533a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 80152da:	881c      	ldrh	r4, [r3, #0]
 80152dc:	2c2a      	cmp	r4, #42	@ 0x2a
 80152de:	d135      	bne.n	801534c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80152e0:	f04f 33ff 	mov.w	r3, #4294967295
 80152e4:	6033      	str	r3, [r6, #0]
 80152e6:	6803      	ldr	r3, [r0, #0]
 80152e8:	b10b      	cbz	r3, 80152ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 80152ea:	3302      	adds	r3, #2
 80152ec:	6003      	str	r3, [r0, #0]
 80152ee:	680b      	ldr	r3, [r1, #0]
 80152f0:	b10b      	cbz	r3, 80152f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 80152f2:	3301      	adds	r3, #1
 80152f4:	600b      	str	r3, [r1, #0]
 80152f6:	6803      	ldr	r3, [r0, #0]
 80152f8:	b31b      	cbz	r3, 8015342 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 80152fa:	881c      	ldrh	r4, [r3, #0]
 80152fc:	2c2e      	cmp	r4, #46	@ 0x2e
 80152fe:	d11a      	bne.n	8015336 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8015300:	2301      	movs	r3, #1
 8015302:	703b      	strb	r3, [r7, #0]
 8015304:	6803      	ldr	r3, [r0, #0]
 8015306:	b10b      	cbz	r3, 801530c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8015308:	3302      	adds	r3, #2
 801530a:	6003      	str	r3, [r0, #0]
 801530c:	680b      	ldr	r3, [r1, #0]
 801530e:	b10b      	cbz	r3, 8015314 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8015310:	3301      	adds	r3, #1
 8015312:	600b      	str	r3, [r1, #0]
 8015314:	6803      	ldr	r3, [r0, #0]
 8015316:	2b00      	cmp	r3, #0
 8015318:	d036      	beq.n	8015388 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801531a:	881b      	ldrh	r3, [r3, #0]
 801531c:	2b2a      	cmp	r3, #42	@ 0x2a
 801531e:	d137      	bne.n	8015390 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8015320:	f04f 33ff 	mov.w	r3, #4294967295
 8015324:	602b      	str	r3, [r5, #0]
 8015326:	6803      	ldr	r3, [r0, #0]
 8015328:	b10b      	cbz	r3, 801532e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801532a:	3302      	adds	r3, #2
 801532c:	6003      	str	r3, [r0, #0]
 801532e:	680b      	ldr	r3, [r1, #0]
 8015330:	b10b      	cbz	r3, 8015336 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8015332:	3301      	adds	r3, #1
 8015334:	600b      	str	r3, [r1, #0]
 8015336:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801533a:	680c      	ldr	r4, [r1, #0]
 801533c:	b134      	cbz	r4, 801534c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801533e:	7824      	ldrb	r4, [r4, #0]
 8015340:	e7cc      	b.n	80152dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8015342:	680b      	ldr	r3, [r1, #0]
 8015344:	2b00      	cmp	r3, #0
 8015346:	d0f6      	beq.n	8015336 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8015348:	781c      	ldrb	r4, [r3, #0]
 801534a:	e7d7      	b.n	80152fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801534c:	2300      	movs	r3, #0
 801534e:	6033      	str	r3, [r6, #0]
 8015350:	220a      	movs	r2, #10
 8015352:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 8015356:	fa1f f38c 	uxth.w	r3, ip
 801535a:	2b09      	cmp	r3, #9
 801535c:	d8ce      	bhi.n	80152fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801535e:	6833      	ldr	r3, [r6, #0]
 8015360:	fb02 c303 	mla	r3, r2, r3, ip
 8015364:	6033      	str	r3, [r6, #0]
 8015366:	6803      	ldr	r3, [r0, #0]
 8015368:	b10b      	cbz	r3, 801536e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801536a:	3302      	adds	r3, #2
 801536c:	6003      	str	r3, [r0, #0]
 801536e:	680b      	ldr	r3, [r1, #0]
 8015370:	b10b      	cbz	r3, 8015376 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8015372:	3301      	adds	r3, #1
 8015374:	600b      	str	r3, [r1, #0]
 8015376:	6803      	ldr	r3, [r0, #0]
 8015378:	b10b      	cbz	r3, 801537e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801537a:	881c      	ldrh	r4, [r3, #0]
 801537c:	e7e9      	b.n	8015352 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801537e:	680c      	ldr	r4, [r1, #0]
 8015380:	2c00      	cmp	r4, #0
 8015382:	d0e6      	beq.n	8015352 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8015384:	7824      	ldrb	r4, [r4, #0]
 8015386:	e7e4      	b.n	8015352 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8015388:	680b      	ldr	r3, [r1, #0]
 801538a:	b10b      	cbz	r3, 8015390 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801538c:	781b      	ldrb	r3, [r3, #0]
 801538e:	e7c5      	b.n	801531c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8015390:	2200      	movs	r2, #0
 8015392:	602a      	str	r2, [r5, #0]
 8015394:	240a      	movs	r4, #10
 8015396:	3b30      	subs	r3, #48	@ 0x30
 8015398:	b29e      	uxth	r6, r3
 801539a:	2e09      	cmp	r6, #9
 801539c:	682a      	ldr	r2, [r5, #0]
 801539e:	d813      	bhi.n	80153c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 80153a0:	fb04 3302 	mla	r3, r4, r2, r3
 80153a4:	602b      	str	r3, [r5, #0]
 80153a6:	6803      	ldr	r3, [r0, #0]
 80153a8:	b10b      	cbz	r3, 80153ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 80153aa:	3302      	adds	r3, #2
 80153ac:	6003      	str	r3, [r0, #0]
 80153ae:	680b      	ldr	r3, [r1, #0]
 80153b0:	b10b      	cbz	r3, 80153b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 80153b2:	3301      	adds	r3, #1
 80153b4:	600b      	str	r3, [r1, #0]
 80153b6:	6803      	ldr	r3, [r0, #0]
 80153b8:	b10b      	cbz	r3, 80153be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 80153ba:	881b      	ldrh	r3, [r3, #0]
 80153bc:	e7eb      	b.n	8015396 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80153be:	680b      	ldr	r3, [r1, #0]
 80153c0:	2b00      	cmp	r3, #0
 80153c2:	d0e8      	beq.n	8015396 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80153c4:	781b      	ldrb	r3, [r3, #0]
 80153c6:	e7e6      	b.n	8015396 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80153c8:	2a06      	cmp	r2, #6
 80153ca:	bfa8      	it	ge
 80153cc:	2206      	movge	r2, #6
 80153ce:	602a      	str	r2, [r5, #0]
 80153d0:	e7b1      	b.n	8015336 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

080153d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 80153d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80153d6:	b0a3      	sub	sp, #140	@ 0x8c
 80153d8:	2600      	movs	r6, #0
 80153da:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 80153de:	4607      	mov	r7, r0
 80153e0:	4688      	mov	r8, r1
 80153e2:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80153e6:	4631      	mov	r1, r6
 80153e8:	2242      	movs	r2, #66	@ 0x42
 80153ea:	4648      	mov	r0, r9
 80153ec:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 80153ee:	960d      	str	r6, [sp, #52]	@ 0x34
 80153f0:	f010 fbdf 	bl	8025bb2 <memset>
 80153f4:	b15f      	cbz	r7, 801540e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 80153f6:	f108 3aff 	add.w	sl, r8, #4294967295
 80153fa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80153fc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80153fe:	b152      	cbz	r2, 8015416 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8015400:	8812      	ldrh	r2, [r2, #0]
 8015402:	b10a      	cbz	r2, 8015408 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8015404:	459a      	cmp	sl, r3
 8015406:	dc2e      	bgt.n	8015466 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8015408:	2200      	movs	r2, #0
 801540a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801540e:	4638      	mov	r0, r7
 8015410:	b023      	add	sp, #140	@ 0x8c
 8015412:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015416:	9a08      	ldr	r2, [sp, #32]
 8015418:	2a00      	cmp	r2, #0
 801541a:	d0f5      	beq.n	8015408 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801541c:	7812      	ldrb	r2, [r2, #0]
 801541e:	e7f0      	b.n	8015402 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8015420:	2d00      	cmp	r5, #0
 8015422:	d0ea      	beq.n	80153fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8015424:	782a      	ldrb	r2, [r5, #0]
 8015426:	b142      	cbz	r2, 801543a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8015428:	2a25      	cmp	r2, #37	@ 0x25
 801542a:	d001      	beq.n	8015430 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801542c:	459a      	cmp	sl, r3
 801542e:	dc08      	bgt.n	8015442 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8015430:	f1bb 0f00 	cmp.w	fp, #0
 8015434:	d121      	bne.n	801547a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8015436:	2d00      	cmp	r5, #0
 8015438:	d0df      	beq.n	80153fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801543a:	782a      	ldrb	r2, [r5, #0]
 801543c:	f04f 0b00 	mov.w	fp, #0
 8015440:	e01d      	b.n	801547e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8015442:	f1bb 0f00 	cmp.w	fp, #0
 8015446:	d078      	beq.n	801553a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8015448:	f8bb 2000 	ldrh.w	r2, [fp]
 801544c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8015450:	f1bb 0f00 	cmp.w	fp, #0
 8015454:	d002      	beq.n	801545c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8015456:	f10b 0202 	add.w	r2, fp, #2
 801545a:	9209      	str	r2, [sp, #36]	@ 0x24
 801545c:	b10d      	cbz	r5, 8015462 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801545e:	3501      	adds	r5, #1
 8015460:	9508      	str	r5, [sp, #32]
 8015462:	3301      	adds	r3, #1
 8015464:	930d      	str	r3, [sp, #52]	@ 0x34
 8015466:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801546a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801546c:	f1bb 0f00 	cmp.w	fp, #0
 8015470:	d0d6      	beq.n	8015420 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8015472:	f8bb 2000 	ldrh.w	r2, [fp]
 8015476:	2a00      	cmp	r2, #0
 8015478:	d1d6      	bne.n	8015428 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801547a:	f8bb 2000 	ldrh.w	r2, [fp]
 801547e:	2a00      	cmp	r2, #0
 8015480:	d0bb      	beq.n	80153fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8015482:	459a      	cmp	sl, r3
 8015484:	ddb9      	ble.n	80153fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8015486:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 801548a:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 801548e:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 8015492:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 8015496:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 801549a:	960e      	str	r6, [sp, #56]	@ 0x38
 801549c:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 80154a0:	960f      	str	r6, [sp, #60]	@ 0x3c
 80154a2:	f1bb 0f00 	cmp.w	fp, #0
 80154a6:	d002      	beq.n	80154ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 80154a8:	f10b 0302 	add.w	r3, fp, #2
 80154ac:	9309      	str	r3, [sp, #36]	@ 0x24
 80154ae:	b10d      	cbz	r5, 80154b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 80154b0:	1c6b      	adds	r3, r5, #1
 80154b2:	9308      	str	r3, [sp, #32]
 80154b4:	ab0f      	add	r3, sp, #60	@ 0x3c
 80154b6:	9305      	str	r3, [sp, #20]
 80154b8:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 80154bc:	9304      	str	r3, [sp, #16]
 80154be:	ab0e      	add	r3, sp, #56	@ 0x38
 80154c0:	9303      	str	r3, [sp, #12]
 80154c2:	ab0c      	add	r3, sp, #48	@ 0x30
 80154c4:	9302      	str	r3, [sp, #8]
 80154c6:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 80154ca:	9301      	str	r3, [sp, #4]
 80154cc:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 80154d0:	9300      	str	r3, [sp, #0]
 80154d2:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 80154d6:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 80154da:	a908      	add	r1, sp, #32
 80154dc:	a809      	add	r0, sp, #36	@ 0x24
 80154de:	f7ff fea8 	bl	8015232 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80154e2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80154e4:	2b00      	cmp	r3, #0
 80154e6:	bfbe      	ittt	lt
 80154e8:	6823      	ldrlt	r3, [r4, #0]
 80154ea:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 80154ee:	930e      	strlt	r3, [sp, #56]	@ 0x38
 80154f0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80154f2:	bfb8      	it	lt
 80154f4:	3404      	addlt	r4, #4
 80154f6:	2b00      	cmp	r3, #0
 80154f8:	bfb8      	it	lt
 80154fa:	6823      	ldrlt	r3, [r4, #0]
 80154fc:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8015500:	bfbe      	ittt	lt
 8015502:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8015506:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 8015508:	3404      	addlt	r4, #4
 801550a:	b1d9      	cbz	r1, 8015544 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801550c:	880b      	ldrh	r3, [r1, #0]
 801550e:	2b69      	cmp	r3, #105	@ 0x69
 8015510:	d01f      	beq.n	8015552 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8015512:	d82f      	bhi.n	8015574 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8015514:	2b58      	cmp	r3, #88	@ 0x58
 8015516:	d01c      	beq.n	8015552 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8015518:	d818      	bhi.n	801554c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801551a:	2b25      	cmp	r3, #37	@ 0x25
 801551c:	d034      	beq.n	8015588 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801551e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8015522:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015524:	f1bb 0f00 	cmp.w	fp, #0
 8015528:	f000 80b8 	beq.w	801569c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801552c:	f8bb 5000 	ldrh.w	r5, [fp]
 8015530:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8015534:	3301      	adds	r3, #1
 8015536:	930d      	str	r3, [sp, #52]	@ 0x34
 8015538:	e029      	b.n	801558e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801553a:	b10d      	cbz	r5, 8015540 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801553c:	782a      	ldrb	r2, [r5, #0]
 801553e:	e785      	b.n	801544c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8015540:	462a      	mov	r2, r5
 8015542:	e783      	b.n	801544c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8015544:	2a00      	cmp	r2, #0
 8015546:	d0ea      	beq.n	801551e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8015548:	7813      	ldrb	r3, [r2, #0]
 801554a:	e7e0      	b.n	801550e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801554c:	3b63      	subs	r3, #99	@ 0x63
 801554e:	2b01      	cmp	r3, #1
 8015550:	d8e5      	bhi.n	801551e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8015552:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 8015556:	b329      	cbz	r1, 80155a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8015558:	880b      	ldrh	r3, [r1, #0]
 801555a:	2b69      	cmp	r3, #105	@ 0x69
 801555c:	d063      	beq.n	8015626 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801555e:	d825      	bhi.n	80155ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8015560:	2b63      	cmp	r3, #99	@ 0x63
 8015562:	d038      	beq.n	80155d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8015564:	2b64      	cmp	r3, #100	@ 0x64
 8015566:	d05e      	beq.n	8015626 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8015568:	2b58      	cmp	r3, #88	@ 0x58
 801556a:	d07b      	beq.n	8015664 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801556c:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 8015570:	4625      	mov	r5, r4
 8015572:	e036      	b.n	80155e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8015574:	2b73      	cmp	r3, #115	@ 0x73
 8015576:	d0ec      	beq.n	8015552 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8015578:	d802      	bhi.n	8015580 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801557a:	2b6f      	cmp	r3, #111	@ 0x6f
 801557c:	d1cf      	bne.n	801551e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801557e:	e7e8      	b.n	8015552 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8015580:	2b75      	cmp	r3, #117	@ 0x75
 8015582:	d0e6      	beq.n	8015552 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8015584:	2b78      	cmp	r3, #120	@ 0x78
 8015586:	e7f9      	b.n	801557c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8015588:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801558a:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801558e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015590:	b10b      	cbz	r3, 8015596 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8015592:	3302      	adds	r3, #2
 8015594:	9309      	str	r3, [sp, #36]	@ 0x24
 8015596:	9b08      	ldr	r3, [sp, #32]
 8015598:	2b00      	cmp	r3, #0
 801559a:	f43f af2e 	beq.w	80153fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801559e:	3301      	adds	r3, #1
 80155a0:	9308      	str	r3, [sp, #32]
 80155a2:	e72a      	b.n	80153fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80155a4:	2a00      	cmp	r2, #0
 80155a6:	d0e1      	beq.n	801556c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80155a8:	7813      	ldrb	r3, [r2, #0]
 80155aa:	e7d6      	b.n	801555a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 80155ac:	2b73      	cmp	r3, #115	@ 0x73
 80155ae:	d036      	beq.n	801561e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 80155b0:	d807      	bhi.n	80155c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 80155b2:	2b6f      	cmp	r3, #111	@ 0x6f
 80155b4:	d1da      	bne.n	801556c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80155b6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80155b8:	1d25      	adds	r5, r4, #4
 80155ba:	eba8 0202 	sub.w	r2, r8, r2
 80155be:	2308      	movs	r3, #8
 80155c0:	e04a      	b.n	8015658 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80155c2:	2b75      	cmp	r3, #117	@ 0x75
 80155c4:	d043      	beq.n	801564e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 80155c6:	2b78      	cmp	r3, #120	@ 0x78
 80155c8:	d1d0      	bne.n	801556c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80155ca:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80155cc:	1d25      	adds	r5, r4, #4
 80155ce:	eba8 0202 	sub.w	r2, r8, r2
 80155d2:	2310      	movs	r3, #16
 80155d4:	e040      	b.n	8015658 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80155d6:	6823      	ldr	r3, [r4, #0]
 80155d8:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 80155dc:	1d25      	adds	r5, r4, #4
 80155de:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 80155e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80155e4:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 80155e8:	2b00      	cmp	r3, #0
 80155ea:	d052      	beq.n	8015692 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 80155ec:	881a      	ldrh	r2, [r3, #0]
 80155ee:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 80155f2:	a80d      	add	r0, sp, #52	@ 0x34
 80155f4:	9005      	str	r0, [sp, #20]
 80155f6:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 80155fa:	9004      	str	r0, [sp, #16]
 80155fc:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80155fe:	9003      	str	r0, [sp, #12]
 8015600:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 8015604:	9002      	str	r0, [sp, #8]
 8015606:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8015608:	9001      	str	r0, [sp, #4]
 801560a:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 801560e:	9000      	str	r0, [sp, #0]
 8015610:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8015614:	a810      	add	r0, sp, #64	@ 0x40
 8015616:	f7ff fd49 	bl	80150ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801561a:	462c      	mov	r4, r5
 801561c:	e7b7      	b.n	801558e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801561e:	6823      	ldr	r3, [r4, #0]
 8015620:	1d25      	adds	r5, r4, #4
 8015622:	9310      	str	r3, [sp, #64]	@ 0x40
 8015624:	e7dd      	b.n	80155e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8015626:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015628:	6820      	ldr	r0, [r4, #0]
 801562a:	eba8 0202 	sub.w	r2, r8, r2
 801562e:	230a      	movs	r3, #10
 8015630:	b292      	uxth	r2, r2
 8015632:	4649      	mov	r1, r9
 8015634:	f7ff fcf0 	bl	8015018 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8015638:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 801563c:	2b2d      	cmp	r3, #45	@ 0x2d
 801563e:	f104 0504 	add.w	r5, r4, #4
 8015642:	d1ce      	bne.n	80155e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8015644:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8015648:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801564a:	3302      	adds	r3, #2
 801564c:	e7e9      	b.n	8015622 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801564e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015650:	1d25      	adds	r5, r4, #4
 8015652:	eba8 0202 	sub.w	r2, r8, r2
 8015656:	230a      	movs	r3, #10
 8015658:	b292      	uxth	r2, r2
 801565a:	4649      	mov	r1, r9
 801565c:	6820      	ldr	r0, [r4, #0]
 801565e:	f7ff fd07 	bl	8015070 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8015662:	e7be      	b.n	80155e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8015664:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015666:	6820      	ldr	r0, [r4, #0]
 8015668:	eba8 0202 	sub.w	r2, r8, r2
 801566c:	b292      	uxth	r2, r2
 801566e:	2310      	movs	r3, #16
 8015670:	4649      	mov	r1, r9
 8015672:	f7ff fcfd 	bl	8015070 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8015676:	1d25      	adds	r5, r4, #4
 8015678:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 801567c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8015680:	2b00      	cmp	r3, #0
 8015682:	d0ae      	beq.n	80155e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8015684:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 8015688:	2919      	cmp	r1, #25
 801568a:	d8f7      	bhi.n	801567c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801568c:	3b20      	subs	r3, #32
 801568e:	8013      	strh	r3, [r2, #0]
 8015690:	e7f4      	b.n	801567c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8015692:	9a08      	ldr	r2, [sp, #32]
 8015694:	2a00      	cmp	r2, #0
 8015696:	d0aa      	beq.n	80155ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8015698:	7812      	ldrb	r2, [r2, #0]
 801569a:	e7a8      	b.n	80155ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801569c:	2d00      	cmp	r5, #0
 801569e:	f43f af47 	beq.w	8015530 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 80156a2:	782d      	ldrb	r5, [r5, #0]
 80156a4:	e744      	b.n	8015530 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

080156a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80156a6:	b507      	push	{r0, r1, r2, lr}
 80156a8:	9300      	str	r3, [sp, #0]
 80156aa:	4613      	mov	r3, r2
 80156ac:	2200      	movs	r2, #0
 80156ae:	f7ff fe90 	bl	80153d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80156b2:	b003      	add	sp, #12
 80156b4:	f85d fb04 	ldr.w	pc, [sp], #4

080156b8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 80156b8:	b40c      	push	{r2, r3}
 80156ba:	b507      	push	{r0, r1, r2, lr}
 80156bc:	ab04      	add	r3, sp, #16
 80156be:	f853 2b04 	ldr.w	r2, [r3], #4
 80156c2:	9301      	str	r3, [sp, #4]
 80156c4:	f7ff ffef 	bl	80156a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 80156c8:	b003      	add	sp, #12
 80156ca:	f85d eb04 	ldr.w	lr, [sp], #4
 80156ce:	b002      	add	sp, #8
 80156d0:	4770      	bx	lr
	...

080156d4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80156d4:	4b01      	ldr	r3, [pc, #4]	@ (80156dc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80156d6:	6018      	str	r0, [r3, #0]
 80156d8:	4770      	bx	lr
 80156da:	bf00      	nop
 80156dc:	20015354 	.word	0x20015354

080156e0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80156e0:	4b06      	ldr	r3, [pc, #24]	@ (80156fc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80156e2:	881a      	ldrh	r2, [r3, #0]
 80156e4:	4282      	cmp	r2, r0
 80156e6:	d807      	bhi.n	80156f8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80156e8:	4b05      	ldr	r3, [pc, #20]	@ (8015700 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80156ea:	881b      	ldrh	r3, [r3, #0]
 80156ec:	4413      	add	r3, r2
 80156ee:	4298      	cmp	r0, r3
 80156f0:	bfac      	ite	ge
 80156f2:	2000      	movge	r0, #0
 80156f4:	2001      	movlt	r0, #1
 80156f6:	4770      	bx	lr
 80156f8:	2000      	movs	r0, #0
 80156fa:	4770      	bx	lr
 80156fc:	20015374 	.word	0x20015374
 8015700:	20015378 	.word	0x20015378

08015704 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8015704:	b508      	push	{r3, lr}
 8015706:	4601      	mov	r1, r0
 8015708:	f7ff ffea 	bl	80156e0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801570c:	b118      	cbz	r0, 8015716 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801570e:	4b02      	ldr	r3, [pc, #8]	@ (8015718 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8015710:	681b      	ldr	r3, [r3, #0]
 8015712:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8015716:	bd08      	pop	{r3, pc}
 8015718:	20015358 	.word	0x20015358

0801571c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801571c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801571e:	4c24      	ldr	r4, [pc, #144]	@ (80157b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8015720:	6823      	ldr	r3, [r4, #0]
 8015722:	2b00      	cmp	r3, #0
 8015724:	d042      	beq.n	80157ac <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8015726:	4a23      	ldr	r2, [pc, #140]	@ (80157b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8015728:	4d23      	ldr	r5, [pc, #140]	@ (80157b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801572a:	8811      	ldrh	r1, [r2, #0]
 801572c:	f8b5 c000 	ldrh.w	ip, [r5]
 8015730:	4822      	ldr	r0, [pc, #136]	@ (80157bc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8015732:	4461      	add	r1, ip
 8015734:	1c4a      	adds	r2, r1, #1
 8015736:	f022 0201 	bic.w	r2, r2, #1
 801573a:	008f      	lsls	r7, r1, #2
 801573c:	0412      	lsls	r2, r2, #16
 801573e:	19de      	adds	r6, r3, r7
 8015740:	0c12      	lsrs	r2, r2, #16
 8015742:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8015746:	6006      	str	r6, [r0, #0]
 8015748:	4e1d      	ldr	r6, [pc, #116]	@ (80157c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801574a:	19da      	adds	r2, r3, r7
 801574c:	6032      	str	r2, [r6, #0]
 801574e:	220e      	movs	r2, #14
 8015750:	fb02 f20c 	mul.w	r2, r2, ip
 8015754:	3203      	adds	r2, #3
 8015756:	f022 0203 	bic.w	r2, r2, #3
 801575a:	443a      	add	r2, r7
 801575c:	4f19      	ldr	r7, [pc, #100]	@ (80157c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801575e:	4413      	add	r3, r2
 8015760:	603b      	str	r3, [r7, #0]
 8015762:	4f19      	ldr	r7, [pc, #100]	@ (80157c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8015764:	2300      	movs	r3, #0
 8015766:	803b      	strh	r3, [r7, #0]
 8015768:	4f18      	ldr	r7, [pc, #96]	@ (80157cc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801576a:	683f      	ldr	r7, [r7, #0]
 801576c:	1aba      	subs	r2, r7, r2
 801576e:	4f18      	ldr	r7, [pc, #96]	@ (80157d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8015770:	603a      	str	r2, [r7, #0]
 8015772:	4a18      	ldr	r2, [pc, #96]	@ (80157d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8015774:	469c      	mov	ip, r3
 8015776:	8013      	strh	r3, [r2, #0]
 8015778:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 801577c:	428b      	cmp	r3, r1
 801577e:	d10d      	bne.n	801579c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8015780:	882d      	ldrh	r5, [r5, #0]
 8015782:	6830      	ldr	r0, [r6, #0]
 8015784:	2300      	movs	r3, #0
 8015786:	240e      	movs	r4, #14
 8015788:	429d      	cmp	r5, r3
 801578a:	d90f      	bls.n	80157ac <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801578c:	fb04 0203 	mla	r2, r4, r3, r0
 8015790:	3301      	adds	r3, #1
 8015792:	7b11      	ldrb	r1, [r2, #12]
 8015794:	f36f 1145 	bfc	r1, #5, #1
 8015798:	7311      	strb	r1, [r2, #12]
 801579a:	e7f5      	b.n	8015788 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801579c:	6822      	ldr	r2, [r4, #0]
 801579e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80157a2:	6802      	ldr	r2, [r0, #0]
 80157a4:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80157a8:	3301      	adds	r3, #1
 80157aa:	e7e7      	b.n	801577c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80157ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80157ae:	bf00      	nop
 80157b0:	20015358 	.word	0x20015358
 80157b4:	20015374 	.word	0x20015374
 80157b8:	20015378 	.word	0x20015378
 80157bc:	2001536c 	.word	0x2001536c
 80157c0:	2001535c 	.word	0x2001535c
 80157c4:	20015364 	.word	0x20015364
 80157c8:	20015376 	.word	0x20015376
 80157cc:	20015360 	.word	0x20015360
 80157d0:	20015370 	.word	0x20015370
 80157d4:	20015368 	.word	0x20015368

080157d8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80157d8:	4b06      	ldr	r3, [pc, #24]	@ (80157f4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80157da:	681b      	ldr	r3, [r3, #0]
 80157dc:	b943      	cbnz	r3, 80157f0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80157de:	b139      	cbz	r1, 80157f0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80157e0:	4b05      	ldr	r3, [pc, #20]	@ (80157f8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80157e2:	801a      	strh	r2, [r3, #0]
 80157e4:	4b05      	ldr	r3, [pc, #20]	@ (80157fc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80157e6:	6019      	str	r1, [r3, #0]
 80157e8:	4b05      	ldr	r3, [pc, #20]	@ (8015800 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80157ea:	6018      	str	r0, [r3, #0]
 80157ec:	f7ff bf96 	b.w	801571c <_ZN8touchgfx6Bitmap10clearCacheEv>
 80157f0:	4770      	bx	lr
 80157f2:	bf00      	nop
 80157f4:	20015364 	.word	0x20015364
 80157f8:	20015378 	.word	0x20015378
 80157fc:	20015360 	.word	0x20015360
 8015800:	20015358 	.word	0x20015358

08015804 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8015804:	b470      	push	{r4, r5, r6}
 8015806:	4c07      	ldr	r4, [pc, #28]	@ (8015824 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8015808:	6826      	ldr	r6, [r4, #0]
 801580a:	4605      	mov	r5, r0
 801580c:	4610      	mov	r0, r2
 801580e:	9a03      	ldr	r2, [sp, #12]
 8015810:	b936      	cbnz	r6, 8015820 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8015812:	6025      	str	r5, [r4, #0]
 8015814:	4c04      	ldr	r4, [pc, #16]	@ (8015828 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8015816:	8021      	strh	r1, [r4, #0]
 8015818:	bc70      	pop	{r4, r5, r6}
 801581a:	4619      	mov	r1, r3
 801581c:	f7ff bfdc 	b.w	80157d8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8015820:	bc70      	pop	{r4, r5, r6}
 8015822:	4770      	bx	lr
 8015824:	2001537c 	.word	0x2001537c
 8015828:	20015374 	.word	0x20015374

0801582c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801582c:	4a12      	ldr	r2, [pc, #72]	@ (8015878 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801582e:	8803      	ldrh	r3, [r0, #0]
 8015830:	8812      	ldrh	r2, [r2, #0]
 8015832:	4293      	cmp	r3, r2
 8015834:	d207      	bcs.n	8015846 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8015836:	4a11      	ldr	r2, [pc, #68]	@ (801587c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8015838:	6812      	ldr	r2, [r2, #0]
 801583a:	2114      	movs	r1, #20
 801583c:	fb01 2303 	mla	r3, r1, r3, r2
 8015840:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8015844:	4770      	bx	lr
 8015846:	490e      	ldr	r1, [pc, #56]	@ (8015880 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8015848:	8809      	ldrh	r1, [r1, #0]
 801584a:	4411      	add	r1, r2
 801584c:	428b      	cmp	r3, r1
 801584e:	da04      	bge.n	801585a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8015850:	1a9b      	subs	r3, r3, r2
 8015852:	4a0c      	ldr	r2, [pc, #48]	@ (8015884 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8015854:	210e      	movs	r1, #14
 8015856:	6812      	ldr	r2, [r2, #0]
 8015858:	e7f0      	b.n	801583c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801585a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801585e:	4293      	cmp	r3, r2
 8015860:	d108      	bne.n	8015874 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8015862:	4b09      	ldr	r3, [pc, #36]	@ (8015888 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8015864:	781b      	ldrb	r3, [r3, #0]
 8015866:	b91b      	cbnz	r3, 8015870 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8015868:	4b08      	ldr	r3, [pc, #32]	@ (801588c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801586a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801586e:	4770      	bx	lr
 8015870:	4b07      	ldr	r3, [pc, #28]	@ (8015890 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8015872:	e7fa      	b.n	801586a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8015874:	2000      	movs	r0, #0
 8015876:	4770      	bx	lr
 8015878:	20015374 	.word	0x20015374
 801587c:	2001537c 	.word	0x2001537c
 8015880:	20015378 	.word	0x20015378
 8015884:	2001535c 	.word	0x2001535c
 8015888:	200152e4 	.word	0x200152e4
 801588c:	200152e6 	.word	0x200152e6
 8015890:	200152e8 	.word	0x200152e8

08015894 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8015894:	4a12      	ldr	r2, [pc, #72]	@ (80158e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8015896:	8803      	ldrh	r3, [r0, #0]
 8015898:	8812      	ldrh	r2, [r2, #0]
 801589a:	4293      	cmp	r3, r2
 801589c:	d207      	bcs.n	80158ae <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801589e:	4a11      	ldr	r2, [pc, #68]	@ (80158e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80158a0:	6812      	ldr	r2, [r2, #0]
 80158a2:	2114      	movs	r1, #20
 80158a4:	fb01 2303 	mla	r3, r1, r3, r2
 80158a8:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80158ac:	4770      	bx	lr
 80158ae:	490e      	ldr	r1, [pc, #56]	@ (80158e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80158b0:	8809      	ldrh	r1, [r1, #0]
 80158b2:	4411      	add	r1, r2
 80158b4:	428b      	cmp	r3, r1
 80158b6:	da04      	bge.n	80158c2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80158b8:	1a9b      	subs	r3, r3, r2
 80158ba:	4a0c      	ldr	r2, [pc, #48]	@ (80158ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80158bc:	210e      	movs	r1, #14
 80158be:	6812      	ldr	r2, [r2, #0]
 80158c0:	e7f0      	b.n	80158a4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80158c2:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80158c6:	4293      	cmp	r3, r2
 80158c8:	d108      	bne.n	80158dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80158ca:	4b09      	ldr	r3, [pc, #36]	@ (80158f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80158cc:	781b      	ldrb	r3, [r3, #0]
 80158ce:	b91b      	cbnz	r3, 80158d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80158d0:	4b08      	ldr	r3, [pc, #32]	@ (80158f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80158d2:	f9b3 0000 	ldrsh.w	r0, [r3]
 80158d6:	4770      	bx	lr
 80158d8:	4b07      	ldr	r3, [pc, #28]	@ (80158f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80158da:	e7fa      	b.n	80158d2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80158dc:	2000      	movs	r0, #0
 80158de:	4770      	bx	lr
 80158e0:	20015374 	.word	0x20015374
 80158e4:	2001537c 	.word	0x2001537c
 80158e8:	20015378 	.word	0x20015378
 80158ec:	2001535c 	.word	0x2001535c
 80158f0:	200152e4 	.word	0x200152e4
 80158f4:	200152e8 	.word	0x200152e8
 80158f8:	200152e6 	.word	0x200152e6

080158fc <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80158fc:	b530      	push	{r4, r5, lr}
 80158fe:	4a22      	ldr	r2, [pc, #136]	@ (8015988 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8015900:	880b      	ldrh	r3, [r1, #0]
 8015902:	8812      	ldrh	r2, [r2, #0]
 8015904:	4293      	cmp	r3, r2
 8015906:	d213      	bcs.n	8015930 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8015908:	4a20      	ldr	r2, [pc, #128]	@ (801598c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801590a:	6812      	ldr	r2, [r2, #0]
 801590c:	2114      	movs	r1, #20
 801590e:	fb01 2303 	mla	r3, r1, r3, r2
 8015912:	8a1a      	ldrh	r2, [r3, #16]
 8015914:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8015918:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801591c:	8a5b      	ldrh	r3, [r3, #18]
 801591e:	8004      	strh	r4, [r0, #0]
 8015920:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8015924:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8015928:	8041      	strh	r1, [r0, #2]
 801592a:	8082      	strh	r2, [r0, #4]
 801592c:	80c3      	strh	r3, [r0, #6]
 801592e:	e024      	b.n	801597a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8015930:	4917      	ldr	r1, [pc, #92]	@ (8015990 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8015932:	8809      	ldrh	r1, [r1, #0]
 8015934:	4411      	add	r1, r2
 8015936:	428b      	cmp	r3, r1
 8015938:	da10      	bge.n	801595c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 801593a:	1a9b      	subs	r3, r3, r2
 801593c:	220e      	movs	r2, #14
 801593e:	4353      	muls	r3, r2
 8015940:	4a14      	ldr	r2, [pc, #80]	@ (8015994 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8015942:	6811      	ldr	r1, [r2, #0]
 8015944:	18ca      	adds	r2, r1, r3
 8015946:	5ecd      	ldrsh	r5, [r1, r3]
 8015948:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 801594c:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8015950:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8015954:	8005      	strh	r5, [r0, #0]
 8015956:	8044      	strh	r4, [r0, #2]
 8015958:	8081      	strh	r1, [r0, #4]
 801595a:	e7e7      	b.n	801592c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801595c:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8015960:	4293      	cmp	r3, r2
 8015962:	d10b      	bne.n	801597c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 8015964:	4b0c      	ldr	r3, [pc, #48]	@ (8015998 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8015966:	f9b3 1000 	ldrsh.w	r1, [r3]
 801596a:	4b0c      	ldr	r3, [pc, #48]	@ (801599c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 801596c:	8081      	strh	r1, [r0, #4]
 801596e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015972:	80c2      	strh	r2, [r0, #6]
 8015974:	2300      	movs	r3, #0
 8015976:	8003      	strh	r3, [r0, #0]
 8015978:	8043      	strh	r3, [r0, #2]
 801597a:	bd30      	pop	{r4, r5, pc}
 801597c:	2300      	movs	r3, #0
 801597e:	8003      	strh	r3, [r0, #0]
 8015980:	8043      	strh	r3, [r0, #2]
 8015982:	8083      	strh	r3, [r0, #4]
 8015984:	e7d2      	b.n	801592c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8015986:	bf00      	nop
 8015988:	20015374 	.word	0x20015374
 801598c:	2001537c 	.word	0x2001537c
 8015990:	20015378 	.word	0x20015378
 8015994:	2001535c 	.word	0x2001535c
 8015998:	200152e0 	.word	0x200152e0
 801599c:	200152e2 	.word	0x200152e2

080159a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80159a0:	4a17      	ldr	r2, [pc, #92]	@ (8015a00 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 80159a2:	8803      	ldrh	r3, [r0, #0]
 80159a4:	8812      	ldrh	r2, [r2, #0]
 80159a6:	4293      	cmp	r3, r2
 80159a8:	d213      	bcs.n	80159d2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80159aa:	4a16      	ldr	r2, [pc, #88]	@ (8015a04 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80159ac:	6812      	ldr	r2, [r2, #0]
 80159ae:	2114      	movs	r1, #20
 80159b0:	fb01 2303 	mla	r3, r1, r3, r2
 80159b4:	8a1a      	ldrh	r2, [r3, #16]
 80159b6:	8919      	ldrh	r1, [r3, #8]
 80159b8:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80159bc:	428a      	cmp	r2, r1
 80159be:	db1d      	blt.n	80159fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80159c0:	8a58      	ldrh	r0, [r3, #18]
 80159c2:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80159c6:	895b      	ldrh	r3, [r3, #10]
 80159c8:	4298      	cmp	r0, r3
 80159ca:	bfac      	ite	ge
 80159cc:	2000      	movge	r0, #0
 80159ce:	2001      	movlt	r0, #1
 80159d0:	4770      	bx	lr
 80159d2:	490d      	ldr	r1, [pc, #52]	@ (8015a08 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80159d4:	8809      	ldrh	r1, [r1, #0]
 80159d6:	4411      	add	r1, r2
 80159d8:	428b      	cmp	r3, r1
 80159da:	da0d      	bge.n	80159f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80159dc:	1a9b      	subs	r3, r3, r2
 80159de:	4a0b      	ldr	r2, [pc, #44]	@ (8015a0c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80159e0:	6812      	ldr	r2, [r2, #0]
 80159e2:	210e      	movs	r1, #14
 80159e4:	fb01 2303 	mla	r3, r1, r3, r2
 80159e8:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80159ec:	891a      	ldrh	r2, [r3, #8]
 80159ee:	4291      	cmp	r1, r2
 80159f0:	db04      	blt.n	80159fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80159f2:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80159f6:	e7e6      	b.n	80159c6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 80159f8:	2000      	movs	r0, #0
 80159fa:	4770      	bx	lr
 80159fc:	2001      	movs	r0, #1
 80159fe:	4770      	bx	lr
 8015a00:	20015374 	.word	0x20015374
 8015a04:	2001537c 	.word	0x2001537c
 8015a08:	20015378 	.word	0x20015378
 8015a0c:	2001535c 	.word	0x2001535c

08015a10 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8015a10:	4a12      	ldr	r2, [pc, #72]	@ (8015a5c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8015a12:	8803      	ldrh	r3, [r0, #0]
 8015a14:	8811      	ldrh	r1, [r2, #0]
 8015a16:	428b      	cmp	r3, r1
 8015a18:	d20b      	bcs.n	8015a32 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8015a1a:	4a11      	ldr	r2, [pc, #68]	@ (8015a60 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8015a1c:	6812      	ldr	r2, [r2, #0]
 8015a1e:	b112      	cbz	r2, 8015a26 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8015a20:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8015a24:	b9c0      	cbnz	r0, 8015a58 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8015a26:	4a0f      	ldr	r2, [pc, #60]	@ (8015a64 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8015a28:	6811      	ldr	r1, [r2, #0]
 8015a2a:	2214      	movs	r2, #20
 8015a2c:	4353      	muls	r3, r2
 8015a2e:	58c8      	ldr	r0, [r1, r3]
 8015a30:	4770      	bx	lr
 8015a32:	4a0d      	ldr	r2, [pc, #52]	@ (8015a68 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8015a34:	8812      	ldrh	r2, [r2, #0]
 8015a36:	440a      	add	r2, r1
 8015a38:	4293      	cmp	r3, r2
 8015a3a:	da04      	bge.n	8015a46 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8015a3c:	4a08      	ldr	r2, [pc, #32]	@ (8015a60 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8015a3e:	6812      	ldr	r2, [r2, #0]
 8015a40:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8015a44:	4770      	bx	lr
 8015a46:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8015a4a:	4293      	cmp	r3, r2
 8015a4c:	d103      	bne.n	8015a56 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8015a4e:	4b07      	ldr	r3, [pc, #28]	@ (8015a6c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8015a50:	681b      	ldr	r3, [r3, #0]
 8015a52:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8015a54:	4770      	bx	lr
 8015a56:	2000      	movs	r0, #0
 8015a58:	4770      	bx	lr
 8015a5a:	bf00      	nop
 8015a5c:	20015374 	.word	0x20015374
 8015a60:	20015358 	.word	0x20015358
 8015a64:	2001537c 	.word	0x2001537c
 8015a68:	20015378 	.word	0x20015378
 8015a6c:	200152ec 	.word	0x200152ec

08015a70 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8015a70:	4b24      	ldr	r3, [pc, #144]	@ (8015b04 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8015a72:	8802      	ldrh	r2, [r0, #0]
 8015a74:	8818      	ldrh	r0, [r3, #0]
 8015a76:	4282      	cmp	r2, r0
 8015a78:	d221      	bcs.n	8015abe <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8015a7a:	4b23      	ldr	r3, [pc, #140]	@ (8015b08 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8015a7c:	6819      	ldr	r1, [r3, #0]
 8015a7e:	2314      	movs	r3, #20
 8015a80:	fb03 1302 	mla	r3, r3, r2, r1
 8015a84:	6858      	ldr	r0, [r3, #4]
 8015a86:	2800      	cmp	r0, #0
 8015a88:	d03a      	beq.n	8015b00 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8015a8a:	4920      	ldr	r1, [pc, #128]	@ (8015b0c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8015a8c:	6809      	ldr	r1, [r1, #0]
 8015a8e:	2900      	cmp	r1, #0
 8015a90:	d036      	beq.n	8015b00 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8015a92:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8015a96:	2900      	cmp	r1, #0
 8015a98:	d032      	beq.n	8015b00 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8015a9a:	891a      	ldrh	r2, [r3, #8]
 8015a9c:	8958      	ldrh	r0, [r3, #10]
 8015a9e:	4350      	muls	r0, r2
 8015aa0:	7c5a      	ldrb	r2, [r3, #17]
 8015aa2:	7cdb      	ldrb	r3, [r3, #19]
 8015aa4:	0952      	lsrs	r2, r2, #5
 8015aa6:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8015aaa:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8015aae:	2b0b      	cmp	r3, #11
 8015ab0:	bf18      	it	ne
 8015ab2:	0040      	lslne	r0, r0, #1
 8015ab4:	3003      	adds	r0, #3
 8015ab6:	f020 0003 	bic.w	r0, r0, #3
 8015aba:	4408      	add	r0, r1
 8015abc:	4770      	bx	lr
 8015abe:	4b14      	ldr	r3, [pc, #80]	@ (8015b10 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8015ac0:	881b      	ldrh	r3, [r3, #0]
 8015ac2:	4403      	add	r3, r0
 8015ac4:	429a      	cmp	r2, r3
 8015ac6:	da1a      	bge.n	8015afe <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8015ac8:	4b12      	ldr	r3, [pc, #72]	@ (8015b14 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8015aca:	681b      	ldr	r3, [r3, #0]
 8015acc:	1a10      	subs	r0, r2, r0
 8015ace:	210e      	movs	r1, #14
 8015ad0:	fb01 3000 	mla	r0, r1, r0, r3
 8015ad4:	7b03      	ldrb	r3, [r0, #12]
 8015ad6:	f003 031f 	and.w	r3, r3, #31
 8015ada:	2b0b      	cmp	r3, #11
 8015adc:	d10b      	bne.n	8015af6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8015ade:	8903      	ldrh	r3, [r0, #8]
 8015ae0:	8940      	ldrh	r0, [r0, #10]
 8015ae2:	4358      	muls	r0, r3
 8015ae4:	4b09      	ldr	r3, [pc, #36]	@ (8015b0c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8015ae6:	6819      	ldr	r1, [r3, #0]
 8015ae8:	3003      	adds	r0, #3
 8015aea:	f020 0303 	bic.w	r3, r0, #3
 8015aee:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8015af2:	4418      	add	r0, r3
 8015af4:	4770      	bx	lr
 8015af6:	2b0d      	cmp	r3, #13
 8015af8:	d101      	bne.n	8015afe <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8015afa:	300d      	adds	r0, #13
 8015afc:	4770      	bx	lr
 8015afe:	2000      	movs	r0, #0
 8015b00:	4770      	bx	lr
 8015b02:	bf00      	nop
 8015b04:	20015374 	.word	0x20015374
 8015b08:	2001537c 	.word	0x2001537c
 8015b0c:	20015358 	.word	0x20015358
 8015b10:	20015378 	.word	0x20015378
 8015b14:	2001535c 	.word	0x2001535c

08015b18 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8015b18:	b510      	push	{r4, lr}
 8015b1a:	4b1f      	ldr	r3, [pc, #124]	@ (8015b98 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 8015b1c:	8802      	ldrh	r2, [r0, #0]
 8015b1e:	881b      	ldrh	r3, [r3, #0]
 8015b20:	429a      	cmp	r2, r3
 8015b22:	d21a      	bcs.n	8015b5a <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 8015b24:	4b1d      	ldr	r3, [pc, #116]	@ (8015b9c <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 8015b26:	681b      	ldr	r3, [r3, #0]
 8015b28:	2114      	movs	r1, #20
 8015b2a:	fb01 3102 	mla	r1, r1, r2, r3
 8015b2e:	7c4b      	ldrb	r3, [r1, #17]
 8015b30:	0958      	lsrs	r0, r3, #5
 8015b32:	7ccb      	ldrb	r3, [r1, #19]
 8015b34:	491a      	ldr	r1, [pc, #104]	@ (8015ba0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 8015b36:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8015b3a:	6809      	ldr	r1, [r1, #0]
 8015b3c:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 8015b40:	b2d8      	uxtb	r0, r3
 8015b42:	b149      	cbz	r1, 8015b58 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8015b44:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8015b48:	b132      	cbz	r2, 8015b58 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8015b4a:	2b0e      	cmp	r3, #14
 8015b4c:	d021      	beq.n	8015b92 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8015b4e:	280f      	cmp	r0, #15
 8015b50:	d01d      	beq.n	8015b8e <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 8015b52:	2810      	cmp	r0, #16
 8015b54:	bf08      	it	eq
 8015b56:	2002      	moveq	r0, #2
 8015b58:	bd10      	pop	{r4, pc}
 8015b5a:	4912      	ldr	r1, [pc, #72]	@ (8015ba4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 8015b5c:	8809      	ldrh	r1, [r1, #0]
 8015b5e:	4419      	add	r1, r3
 8015b60:	428a      	cmp	r2, r1
 8015b62:	da09      	bge.n	8015b78 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 8015b64:	1ad3      	subs	r3, r2, r3
 8015b66:	4a10      	ldr	r2, [pc, #64]	@ (8015ba8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 8015b68:	6812      	ldr	r2, [r2, #0]
 8015b6a:	210e      	movs	r1, #14
 8015b6c:	fb01 2303 	mla	r3, r1, r3, r2
 8015b70:	7b18      	ldrb	r0, [r3, #12]
 8015b72:	f000 001f 	and.w	r0, r0, #31
 8015b76:	e7ef      	b.n	8015b58 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8015b78:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 8015b7c:	429a      	cmp	r2, r3
 8015b7e:	d108      	bne.n	8015b92 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8015b80:	f7ec feae 	bl	80028e0 <_ZN8touchgfx3HAL3lcdEv>
 8015b84:	6803      	ldr	r3, [r0, #0]
 8015b86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015b8a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015b8c:	4718      	bx	r3
 8015b8e:	2001      	movs	r0, #1
 8015b90:	e7e2      	b.n	8015b58 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8015b92:	2000      	movs	r0, #0
 8015b94:	e7e0      	b.n	8015b58 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8015b96:	bf00      	nop
 8015b98:	20015374 	.word	0x20015374
 8015b9c:	2001537c 	.word	0x2001537c
 8015ba0:	20015358 	.word	0x20015358
 8015ba4:	20015378 	.word	0x20015378
 8015ba8:	2001535c 	.word	0x2001535c

08015bac <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8015bac:	2010      	movs	r0, #16
 8015bae:	4770      	bx	lr

08015bb0 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8015bb0:	2000      	movs	r0, #0
 8015bb2:	4770      	bx	lr

08015bb4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8015bb4:	4b02      	ldr	r3, [pc, #8]	@ (8015bc0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8015bb6:	8818      	ldrh	r0, [r3, #0]
 8015bb8:	0040      	lsls	r0, r0, #1
 8015bba:	b280      	uxth	r0, r0
 8015bbc:	4770      	bx	lr
 8015bbe:	bf00      	nop
 8015bc0:	200152e6 	.word	0x200152e6

08015bc4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8015bc4:	2bff      	cmp	r3, #255	@ 0xff
 8015bc6:	d05e      	beq.n	8015c86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 8015bc8:	2a0b      	cmp	r2, #11
 8015bca:	d058      	beq.n	8015c7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8015bcc:	d80e      	bhi.n	8015bec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8015bce:	2a03      	cmp	r2, #3
 8015bd0:	d04d      	beq.n	8015c6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 8015bd2:	d804      	bhi.n	8015bde <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8015bd4:	2a01      	cmp	r2, #1
 8015bd6:	d04c      	beq.n	8015c72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 8015bd8:	d94d      	bls.n	8015c76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 8015bda:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8015bdc:	e031      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015bde:	2a09      	cmp	r2, #9
 8015be0:	d04d      	beq.n	8015c7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8015be2:	d84a      	bhi.n	8015c7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8015be4:	2a08      	cmp	r2, #8
 8015be6:	d048      	beq.n	8015c7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8015be8:	2300      	movs	r3, #0
 8015bea:	e02a      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015bec:	2a2f      	cmp	r2, #47	@ 0x2f
 8015bee:	d02c      	beq.n	8015c4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8015bf0:	d811      	bhi.n	8015c16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 8015bf2:	2a2d      	cmp	r2, #45	@ 0x2d
 8015bf4:	d018      	beq.n	8015c28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 8015bf6:	d831      	bhi.n	8015c5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 8015bf8:	2a2c      	cmp	r2, #44	@ 0x2c
 8015bfa:	d1f5      	bne.n	8015be8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015bfc:	684a      	ldr	r2, [r1, #4]
 8015bfe:	7813      	ldrb	r3, [r2, #0]
 8015c00:	7852      	ldrb	r2, [r2, #1]
 8015c02:	2a00      	cmp	r2, #0
 8015c04:	d1f0      	bne.n	8015be8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015c06:	2b01      	cmp	r3, #1
 8015c08:	d01d      	beq.n	8015c46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8015c0a:	2b00      	cmp	r3, #0
 8015c0c:	d02d      	beq.n	8015c6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8015c0e:	2b02      	cmp	r3, #2
 8015c10:	d1ea      	bne.n	8015be8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015c12:	68c3      	ldr	r3, [r0, #12]
 8015c14:	e015      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015c16:	2a31      	cmp	r2, #49	@ 0x31
 8015c18:	d004      	beq.n	8015c24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 8015c1a:	d332      	bcc.n	8015c82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8015c1c:	2a32      	cmp	r2, #50	@ 0x32
 8015c1e:	d030      	beq.n	8015c82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8015c20:	2a33      	cmp	r2, #51	@ 0x33
 8015c22:	d1e1      	bne.n	8015be8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015c24:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 8015c26:	e00c      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015c28:	684a      	ldr	r2, [r1, #4]
 8015c2a:	7813      	ldrb	r3, [r2, #0]
 8015c2c:	7852      	ldrb	r2, [r2, #1]
 8015c2e:	2a00      	cmp	r2, #0
 8015c30:	d1da      	bne.n	8015be8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015c32:	2b01      	cmp	r3, #1
 8015c34:	d004      	beq.n	8015c40 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 8015c36:	d30f      	bcc.n	8015c58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 8015c38:	2b02      	cmp	r3, #2
 8015c3a:	d1d5      	bne.n	8015be8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015c3c:	6943      	ldr	r3, [r0, #20]
 8015c3e:	e000      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015c40:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8015c42:	4618      	mov	r0, r3
 8015c44:	4770      	bx	lr
 8015c46:	69c3      	ldr	r3, [r0, #28]
 8015c48:	e7fb      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015c4a:	684b      	ldr	r3, [r1, #4]
 8015c4c:	781a      	ldrb	r2, [r3, #0]
 8015c4e:	785b      	ldrb	r3, [r3, #1]
 8015c50:	2b00      	cmp	r3, #0
 8015c52:	d1c9      	bne.n	8015be8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015c54:	2a00      	cmp	r2, #0
 8015c56:	d1f4      	bne.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015c58:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 8015c5a:	e7f2      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015c5c:	684b      	ldr	r3, [r1, #4]
 8015c5e:	781a      	ldrb	r2, [r3, #0]
 8015c60:	785b      	ldrb	r3, [r3, #1]
 8015c62:	2b00      	cmp	r3, #0
 8015c64:	d1c0      	bne.n	8015be8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015c66:	2a00      	cmp	r2, #0
 8015c68:	d1eb      	bne.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015c6a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8015c6c:	e7e9      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015c6e:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8015c70:	e7e7      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015c72:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8015c74:	e7e5      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015c76:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8015c78:	e7e3      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015c7a:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 8015c7c:	e7e1      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015c7e:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 8015c80:	e7df      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015c82:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 8015c84:	e7dd      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015c86:	2a0b      	cmp	r2, #11
 8015c88:	d059      	beq.n	8015d3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8015c8a:	d80e      	bhi.n	8015caa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 8015c8c:	2a03      	cmp	r2, #3
 8015c8e:	d050      	beq.n	8015d32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 8015c90:	d804      	bhi.n	8015c9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 8015c92:	2a01      	cmp	r2, #1
 8015c94:	d04f      	beq.n	8015d36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 8015c96:	d950      	bls.n	8015d3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 8015c98:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8015c9a:	e7d2      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015c9c:	2a09      	cmp	r2, #9
 8015c9e:	d04e      	beq.n	8015d3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8015ca0:	d801      	bhi.n	8015ca6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 8015ca2:	2a08      	cmp	r2, #8
 8015ca4:	d1a0      	bne.n	8015be8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015ca6:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8015ca8:	e7cb      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015caa:	2a2f      	cmp	r2, #47	@ 0x2f
 8015cac:	d02d      	beq.n	8015d0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 8015cae:	d811      	bhi.n	8015cd4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8015cb0:	2a2d      	cmp	r2, #45	@ 0x2d
 8015cb2:	d018      	beq.n	8015ce6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 8015cb4:	d833      	bhi.n	8015d1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 8015cb6:	2a2c      	cmp	r2, #44	@ 0x2c
 8015cb8:	d196      	bne.n	8015be8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015cba:	684a      	ldr	r2, [r1, #4]
 8015cbc:	7813      	ldrb	r3, [r2, #0]
 8015cbe:	7852      	ldrb	r2, [r2, #1]
 8015cc0:	2a00      	cmp	r2, #0
 8015cc2:	d191      	bne.n	8015be8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015cc4:	2b01      	cmp	r3, #1
 8015cc6:	d01e      	beq.n	8015d06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8015cc8:	2b00      	cmp	r3, #0
 8015cca:	d030      	beq.n	8015d2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 8015ccc:	2b02      	cmp	r3, #2
 8015cce:	d18b      	bne.n	8015be8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015cd0:	6903      	ldr	r3, [r0, #16]
 8015cd2:	e7b6      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015cd4:	2a31      	cmp	r2, #49	@ 0x31
 8015cd6:	d004      	beq.n	8015ce2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 8015cd8:	d333      	bcc.n	8015d42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8015cda:	2a32      	cmp	r2, #50	@ 0x32
 8015cdc:	d031      	beq.n	8015d42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8015cde:	2a33      	cmp	r2, #51	@ 0x33
 8015ce0:	d182      	bne.n	8015be8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015ce2:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 8015ce4:	e7ad      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015ce6:	684a      	ldr	r2, [r1, #4]
 8015ce8:	7813      	ldrb	r3, [r2, #0]
 8015cea:	7852      	ldrb	r2, [r2, #1]
 8015cec:	2a00      	cmp	r2, #0
 8015cee:	f47f af7b 	bne.w	8015be8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015cf2:	2b01      	cmp	r3, #1
 8015cf4:	d005      	beq.n	8015d02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8015cf6:	d310      	bcc.n	8015d1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 8015cf8:	2b02      	cmp	r3, #2
 8015cfa:	f47f af75 	bne.w	8015be8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015cfe:	6983      	ldr	r3, [r0, #24]
 8015d00:	e79f      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015d02:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8015d04:	e79d      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015d06:	6a03      	ldr	r3, [r0, #32]
 8015d08:	e79b      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015d0a:	684b      	ldr	r3, [r1, #4]
 8015d0c:	781a      	ldrb	r2, [r3, #0]
 8015d0e:	785b      	ldrb	r3, [r3, #1]
 8015d10:	2b00      	cmp	r3, #0
 8015d12:	f47f af69 	bne.w	8015be8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015d16:	2a00      	cmp	r2, #0
 8015d18:	d193      	bne.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015d1a:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8015d1c:	e791      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015d1e:	684b      	ldr	r3, [r1, #4]
 8015d20:	781a      	ldrb	r2, [r3, #0]
 8015d22:	785b      	ldrb	r3, [r3, #1]
 8015d24:	2b00      	cmp	r3, #0
 8015d26:	f47f af5f 	bne.w	8015be8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015d2a:	2a00      	cmp	r2, #0
 8015d2c:	d189      	bne.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015d2e:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8015d30:	e787      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015d32:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8015d34:	e785      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015d36:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 8015d38:	e783      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015d3a:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 8015d3c:	e781      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015d3e:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8015d40:	e77f      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015d42:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8015d44:	e77d      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

08015d46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015d46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d4a:	b087      	sub	sp, #28
 8015d4c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8015d4e:	9205      	str	r2, [sp, #20]
 8015d50:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8015d54:	9202      	str	r2, [sp, #8]
 8015d56:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8015d5a:	9101      	str	r1, [sp, #4]
 8015d5c:	6841      	ldr	r1, [r0, #4]
 8015d5e:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8015d62:	fb01 2404 	mla	r4, r1, r4, r2
 8015d66:	6802      	ldr	r2, [r0, #0]
 8015d68:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015d6c:	f8de 2000 	ldr.w	r2, [lr]
 8015d70:	9203      	str	r2, [sp, #12]
 8015d72:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015d76:	3204      	adds	r2, #4
 8015d78:	9204      	str	r2, [sp, #16]
 8015d7a:	9a02      	ldr	r2, [sp, #8]
 8015d7c:	43d6      	mvns	r6, r2
 8015d7e:	b2f6      	uxtb	r6, r6
 8015d80:	9a01      	ldr	r2, [sp, #4]
 8015d82:	2a00      	cmp	r2, #0
 8015d84:	dc03      	bgt.n	8015d8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8015d86:	9a05      	ldr	r2, [sp, #20]
 8015d88:	2a00      	cmp	r2, #0
 8015d8a:	f340 8129 	ble.w	8015fe0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8015d8e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015d90:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8015d94:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8015d98:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015d9c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8015d9e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8015da2:	2b00      	cmp	r3, #0
 8015da4:	dd0e      	ble.n	8015dc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015da6:	1408      	asrs	r0, r1, #16
 8015da8:	d405      	bmi.n	8015db6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015daa:	4560      	cmp	r0, ip
 8015dac:	da03      	bge.n	8015db6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015dae:	1410      	asrs	r0, r2, #16
 8015db0:	d401      	bmi.n	8015db6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015db2:	42b8      	cmp	r0, r7
 8015db4:	db07      	blt.n	8015dc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8015db6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8015db8:	4401      	add	r1, r0
 8015dba:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8015dbc:	3b01      	subs	r3, #1
 8015dbe:	4402      	add	r2, r0
 8015dc0:	3402      	adds	r4, #2
 8015dc2:	e7ee      	b.n	8015da2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8015dc4:	d071      	beq.n	8015eaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015dc6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8015dc8:	1e58      	subs	r0, r3, #1
 8015dca:	fb05 1500 	mla	r5, r5, r0, r1
 8015dce:	142d      	asrs	r5, r5, #16
 8015dd0:	d45f      	bmi.n	8015e92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8015dd2:	4565      	cmp	r5, ip
 8015dd4:	da5d      	bge.n	8015e92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8015dd6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8015dd8:	fb05 2000 	mla	r0, r5, r0, r2
 8015ddc:	1400      	asrs	r0, r0, #16
 8015dde:	d458      	bmi.n	8015e92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8015de0:	42b8      	cmp	r0, r7
 8015de2:	da56      	bge.n	8015e92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8015de4:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8015de8:	4699      	mov	r9, r3
 8015dea:	46a2      	mov	sl, r4
 8015dec:	f1b9 0f00 	cmp.w	r9, #0
 8015df0:	dd57      	ble.n	8015ea2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8015df2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015df6:	9803      	ldr	r0, [sp, #12]
 8015df8:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8015dfc:	140d      	asrs	r5, r1, #16
 8015dfe:	fb07 000c 	mla	r0, r7, ip, r0
 8015e02:	f109 39ff 	add.w	r9, r9, #4294967295
 8015e06:	5d40      	ldrb	r0, [r0, r5]
 8015e08:	9d04      	ldr	r5, [sp, #16]
 8015e0a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015e0e:	f8ba 5000 	ldrh.w	r5, [sl]
 8015e12:	122f      	asrs	r7, r5, #8
 8015e14:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015e18:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015e1c:	fb17 f706 	smulbb	r7, r7, r6
 8015e20:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015e24:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015e28:	00ed      	lsls	r5, r5, #3
 8015e2a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8015e2e:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8015e32:	10c7      	asrs	r7, r0, #3
 8015e34:	b2ed      	uxtb	r5, r5
 8015e36:	00c0      	lsls	r0, r0, #3
 8015e38:	fb18 f806 	smulbb	r8, r8, r6
 8015e3c:	fb15 f506 	smulbb	r5, r5, r6
 8015e40:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015e44:	b2c0      	uxtb	r0, r0
 8015e46:	fa1f fc8c 	uxth.w	ip, ip
 8015e4a:	fb07 870b 	mla	r7, r7, fp, r8
 8015e4e:	fb00 500b 	mla	r0, r0, fp, r5
 8015e52:	b280      	uxth	r0, r0
 8015e54:	b2bf      	uxth	r7, r7
 8015e56:	f10c 0501 	add.w	r5, ip, #1
 8015e5a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015e5e:	f107 0801 	add.w	r8, r7, #1
 8015e62:	1c45      	adds	r5, r0, #1
 8015e64:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015e68:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8015e6c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8015e6e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015e72:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015e76:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015e7a:	ea45 0c0c 	orr.w	ip, r5, ip
 8015e7e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8015e82:	4401      	add	r1, r0
 8015e84:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8015e86:	ea4c 0c08 	orr.w	ip, ip, r8
 8015e8a:	f82a cb02 	strh.w	ip, [sl], #2
 8015e8e:	4402      	add	r2, r0
 8015e90:	e7ac      	b.n	8015dec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015e92:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8015e96:	f04f 0800 	mov.w	r8, #0
 8015e9a:	eb03 0008 	add.w	r0, r3, r8
 8015e9e:	2800      	cmp	r0, #0
 8015ea0:	dc41      	bgt.n	8015f26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8015ea2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015ea6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015eaa:	9b01      	ldr	r3, [sp, #4]
 8015eac:	2b00      	cmp	r3, #0
 8015eae:	f340 8097 	ble.w	8015fe0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8015eb2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015eb6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8015eba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015ebe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015ec0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015ec4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015ec8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015ecc:	eef0 6a62 	vmov.f32	s13, s5
 8015ed0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015ed4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015ed8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015edc:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8015ee0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015ee4:	eef0 6a43 	vmov.f32	s13, s6
 8015ee8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015eec:	ee12 2a90 	vmov	r2, s5
 8015ef0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015ef4:	fb92 f3f3 	sdiv	r3, r2, r3
 8015ef8:	ee13 2a10 	vmov	r2, s6
 8015efc:	9313      	str	r3, [sp, #76]	@ 0x4c
 8015efe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015f00:	fb92 f3f3 	sdiv	r3, r2, r3
 8015f04:	9314      	str	r3, [sp, #80]	@ 0x50
 8015f06:	9b01      	ldr	r3, [sp, #4]
 8015f08:	9a05      	ldr	r2, [sp, #20]
 8015f0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015f0e:	3b01      	subs	r3, #1
 8015f10:	9301      	str	r3, [sp, #4]
 8015f12:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8015f16:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015f18:	eeb0 3a67 	vmov.f32	s6, s15
 8015f1c:	bf08      	it	eq
 8015f1e:	4613      	moveq	r3, r2
 8015f20:	eef0 2a47 	vmov.f32	s5, s14
 8015f24:	e72c      	b.n	8015d80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8015f26:	140f      	asrs	r7, r1, #16
 8015f28:	d453      	bmi.n	8015fd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015f2a:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015f2e:	42bd      	cmp	r5, r7
 8015f30:	dd4f      	ble.n	8015fd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015f32:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015f36:	d44c      	bmi.n	8015fd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015f38:	f8de 000c 	ldr.w	r0, [lr, #12]
 8015f3c:	4560      	cmp	r0, ip
 8015f3e:	dd48      	ble.n	8015fd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015f40:	9803      	ldr	r0, [sp, #12]
 8015f42:	b22d      	sxth	r5, r5
 8015f44:	fb0c 0505 	mla	r5, ip, r5, r0
 8015f48:	5de8      	ldrb	r0, [r5, r7]
 8015f4a:	9d04      	ldr	r5, [sp, #16]
 8015f4c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015f50:	f06f 0501 	mvn.w	r5, #1
 8015f54:	fb05 fb08 	mul.w	fp, r5, r8
 8015f58:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015f5c:	f834 500b 	ldrh.w	r5, [r4, fp]
 8015f60:	122f      	asrs	r7, r5, #8
 8015f62:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015f66:	fb17 f706 	smulbb	r7, r7, r6
 8015f6a:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8015f6e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015f72:	00ed      	lsls	r5, r5, #3
 8015f74:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8015f78:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8015f7c:	10c7      	asrs	r7, r0, #3
 8015f7e:	b2ed      	uxtb	r5, r5
 8015f80:	00c0      	lsls	r0, r0, #3
 8015f82:	fb19 f906 	smulbb	r9, r9, r6
 8015f86:	fb15 f506 	smulbb	r5, r5, r6
 8015f8a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015f8e:	b2c0      	uxtb	r0, r0
 8015f90:	fa1f fc8c 	uxth.w	ip, ip
 8015f94:	fb07 970a 	mla	r7, r7, sl, r9
 8015f98:	fb00 500a 	mla	r0, r0, sl, r5
 8015f9c:	b2bf      	uxth	r7, r7
 8015f9e:	b280      	uxth	r0, r0
 8015fa0:	f10c 0501 	add.w	r5, ip, #1
 8015fa4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015fa8:	f107 0901 	add.w	r9, r7, #1
 8015fac:	1c45      	adds	r5, r0, #1
 8015fae:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015fb2:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8015fb6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015fba:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015fbe:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015fc2:	ea45 0c0c 	orr.w	ip, r5, ip
 8015fc6:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8015fca:	ea4c 0c09 	orr.w	ip, ip, r9
 8015fce:	f824 c00b 	strh.w	ip, [r4, fp]
 8015fd2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8015fd4:	4401      	add	r1, r0
 8015fd6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8015fd8:	f108 38ff 	add.w	r8, r8, #4294967295
 8015fdc:	4402      	add	r2, r0
 8015fde:	e75c      	b.n	8015e9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8015fe0:	b007      	add	sp, #28
 8015fe2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015fe6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015fe6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015fea:	b085      	sub	sp, #20
 8015fec:	4693      	mov	fp, r2
 8015fee:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8015ff0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8015ff2:	6870      	ldr	r0, [r6, #4]
 8015ff4:	9100      	str	r1, [sp, #0]
 8015ff6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8015ffa:	fb00 2404 	mla	r4, r0, r4, r2
 8015ffe:	6832      	ldr	r2, [r6, #0]
 8016000:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016004:	682a      	ldr	r2, [r5, #0]
 8016006:	9201      	str	r2, [sp, #4]
 8016008:	686a      	ldr	r2, [r5, #4]
 801600a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801600e:	3204      	adds	r2, #4
 8016010:	9202      	str	r2, [sp, #8]
 8016012:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8016016:	9a00      	ldr	r2, [sp, #0]
 8016018:	2a00      	cmp	r2, #0
 801601a:	dc03      	bgt.n	8016024 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801601c:	f1bb 0f00 	cmp.w	fp, #0
 8016020:	f340 80a0 	ble.w	8016164 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8016024:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8016026:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801602a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801602e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8016032:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8016034:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8016038:	2b00      	cmp	r3, #0
 801603a:	dd0c      	ble.n	8016056 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801603c:	1406      	asrs	r6, r0, #16
 801603e:	d405      	bmi.n	801604c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016040:	454e      	cmp	r6, r9
 8016042:	da03      	bge.n	801604c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016044:	1416      	asrs	r6, r2, #16
 8016046:	d401      	bmi.n	801604c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016048:	4546      	cmp	r6, r8
 801604a:	db05      	blt.n	8016058 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801604c:	4470      	add	r0, lr
 801604e:	4462      	add	r2, ip
 8016050:	3b01      	subs	r3, #1
 8016052:	3402      	adds	r4, #2
 8016054:	e7f0      	b.n	8016038 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8016056:	d00f      	beq.n	8016078 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016058:	1e5e      	subs	r6, r3, #1
 801605a:	fb0e 0706 	mla	r7, lr, r6, r0
 801605e:	143f      	asrs	r7, r7, #16
 8016060:	d541      	bpl.n	80160e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8016062:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8016066:	4698      	mov	r8, r3
 8016068:	9603      	str	r6, [sp, #12]
 801606a:	f1b8 0f00 	cmp.w	r8, #0
 801606e:	dc59      	bgt.n	8016124 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016070:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016074:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016078:	9b00      	ldr	r3, [sp, #0]
 801607a:	2b00      	cmp	r3, #0
 801607c:	dd72      	ble.n	8016164 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801607e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016082:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016086:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801608a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801608c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016090:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016094:	eeb0 6a62 	vmov.f32	s12, s5
 8016098:	ee61 7a27 	vmul.f32	s15, s2, s15
 801609c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80160a0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80160a4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80160a8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80160ac:	eeb0 6a43 	vmov.f32	s12, s6
 80160b0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80160b4:	ee12 2a90 	vmov	r2, s5
 80160b8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80160bc:	fb92 fef3 	sdiv	lr, r2, r3
 80160c0:	ee13 2a10 	vmov	r2, s6
 80160c4:	fb92 fcf3 	sdiv	ip, r2, r3
 80160c8:	9b00      	ldr	r3, [sp, #0]
 80160ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80160ce:	3b01      	subs	r3, #1
 80160d0:	9300      	str	r3, [sp, #0]
 80160d2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80160d6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80160d8:	eeb0 3a67 	vmov.f32	s6, s15
 80160dc:	bf08      	it	eq
 80160de:	465b      	moveq	r3, fp
 80160e0:	eef0 2a47 	vmov.f32	s5, s14
 80160e4:	e797      	b.n	8016016 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80160e6:	454f      	cmp	r7, r9
 80160e8:	dabb      	bge.n	8016062 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80160ea:	fb0c 2606 	mla	r6, ip, r6, r2
 80160ee:	1436      	asrs	r6, r6, #16
 80160f0:	d4b7      	bmi.n	8016062 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80160f2:	4546      	cmp	r6, r8
 80160f4:	dab5      	bge.n	8016062 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80160f6:	461e      	mov	r6, r3
 80160f8:	46a0      	mov	r8, r4
 80160fa:	2e00      	cmp	r6, #0
 80160fc:	ddb8      	ble.n	8016070 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80160fe:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8016102:	9901      	ldr	r1, [sp, #4]
 8016104:	1417      	asrs	r7, r2, #16
 8016106:	ea4f 4920 	mov.w	r9, r0, asr #16
 801610a:	fb0a 1707 	mla	r7, sl, r7, r1
 801610e:	9902      	ldr	r1, [sp, #8]
 8016110:	f817 7009 	ldrb.w	r7, [r7, r9]
 8016114:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8016118:	f828 7b02 	strh.w	r7, [r8], #2
 801611c:	4470      	add	r0, lr
 801611e:	4462      	add	r2, ip
 8016120:	3e01      	subs	r6, #1
 8016122:	e7ea      	b.n	80160fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8016124:	ea5f 4920 	movs.w	r9, r0, asr #16
 8016128:	d417      	bmi.n	801615a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801612a:	68ae      	ldr	r6, [r5, #8]
 801612c:	454e      	cmp	r6, r9
 801612e:	dd14      	ble.n	801615a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8016130:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8016134:	d411      	bmi.n	801615a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8016136:	68ef      	ldr	r7, [r5, #12]
 8016138:	4557      	cmp	r7, sl
 801613a:	dd0e      	ble.n	801615a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801613c:	9f01      	ldr	r7, [sp, #4]
 801613e:	b236      	sxth	r6, r6
 8016140:	fb0a 7606 	mla	r6, sl, r6, r7
 8016144:	9f02      	ldr	r7, [sp, #8]
 8016146:	f816 6009 	ldrb.w	r6, [r6, r9]
 801614a:	f06f 0101 	mvn.w	r1, #1
 801614e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8016152:	fb01 f608 	mul.w	r6, r1, r8
 8016156:	9903      	ldr	r1, [sp, #12]
 8016158:	538f      	strh	r7, [r1, r6]
 801615a:	4470      	add	r0, lr
 801615c:	4462      	add	r2, ip
 801615e:	f108 38ff 	add.w	r8, r8, #4294967295
 8016162:	e782      	b.n	801606a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016164:	b005      	add	sp, #20
 8016166:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801616a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801616a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801616e:	b087      	sub	sp, #28
 8016170:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8016172:	9205      	str	r2, [sp, #20]
 8016174:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016178:	9203      	str	r2, [sp, #12]
 801617a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 801617e:	9102      	str	r1, [sp, #8]
 8016180:	6861      	ldr	r1, [r4, #4]
 8016182:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8016186:	fb01 2000 	mla	r0, r1, r0, r2
 801618a:	6822      	ldr	r2, [r4, #0]
 801618c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8016190:	9200      	str	r2, [sp, #0]
 8016192:	f8dc 2000 	ldr.w	r2, [ip]
 8016196:	9204      	str	r2, [sp, #16]
 8016198:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801619c:	3204      	adds	r2, #4
 801619e:	9201      	str	r2, [sp, #4]
 80161a0:	9a03      	ldr	r2, [sp, #12]
 80161a2:	43d5      	mvns	r5, r2
 80161a4:	b2ed      	uxtb	r5, r5
 80161a6:	9a02      	ldr	r2, [sp, #8]
 80161a8:	2a00      	cmp	r2, #0
 80161aa:	dc03      	bgt.n	80161b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80161ac:	9a05      	ldr	r2, [sp, #20]
 80161ae:	2a00      	cmp	r2, #0
 80161b0:	f340 812c 	ble.w	801640c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80161b4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80161b6:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80161ba:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80161be:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80161c2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80161c4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80161c8:	2b00      	cmp	r3, #0
 80161ca:	dd10      	ble.n	80161ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80161cc:	140c      	asrs	r4, r1, #16
 80161ce:	d405      	bmi.n	80161dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80161d0:	4574      	cmp	r4, lr
 80161d2:	da03      	bge.n	80161dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80161d4:	1414      	asrs	r4, r2, #16
 80161d6:	d401      	bmi.n	80161dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80161d8:	42bc      	cmp	r4, r7
 80161da:	db09      	blt.n	80161f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80161dc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80161de:	9800      	ldr	r0, [sp, #0]
 80161e0:	4421      	add	r1, r4
 80161e2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80161e4:	3002      	adds	r0, #2
 80161e6:	4422      	add	r2, r4
 80161e8:	3b01      	subs	r3, #1
 80161ea:	9000      	str	r0, [sp, #0]
 80161ec:	e7ec      	b.n	80161c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80161ee:	d071      	beq.n	80162d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80161f0:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80161f2:	1e5c      	subs	r4, r3, #1
 80161f4:	fb06 1604 	mla	r6, r6, r4, r1
 80161f8:	1436      	asrs	r6, r6, #16
 80161fa:	d45d      	bmi.n	80162b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80161fc:	4576      	cmp	r6, lr
 80161fe:	da5b      	bge.n	80162b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8016200:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8016202:	fb06 2404 	mla	r4, r6, r4, r2
 8016206:	1424      	asrs	r4, r4, #16
 8016208:	d456      	bmi.n	80162b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801620a:	42bc      	cmp	r4, r7
 801620c:	da54      	bge.n	80162b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801620e:	f8dd 9000 	ldr.w	r9, [sp]
 8016212:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8016216:	4698      	mov	r8, r3
 8016218:	f1b8 0f00 	cmp.w	r8, #0
 801621c:	dd54      	ble.n	80162c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801621e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8016222:	9804      	ldr	r0, [sp, #16]
 8016224:	1414      	asrs	r4, r2, #16
 8016226:	fb07 0404 	mla	r4, r7, r4, r0
 801622a:	140e      	asrs	r6, r1, #16
 801622c:	9801      	ldr	r0, [sp, #4]
 801622e:	f814 e006 	ldrb.w	lr, [r4, r6]
 8016232:	f8b9 4000 	ldrh.w	r4, [r9]
 8016236:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801623a:	eb00 0b0e 	add.w	fp, r0, lr
 801623e:	1227      	asrs	r7, r4, #8
 8016240:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8016244:	f89b b001 	ldrb.w	fp, [fp, #1]
 8016248:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801624c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801624e:	fb16 f60a 	smulbb	r6, r6, sl
 8016252:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016256:	fb07 6705 	mla	r7, r7, r5, r6
 801625a:	10e6      	asrs	r6, r4, #3
 801625c:	00e4      	lsls	r4, r4, #3
 801625e:	b2e4      	uxtb	r4, r4
 8016260:	fb1b fb0a 	smulbb	fp, fp, sl
 8016264:	fb14 f405 	smulbb	r4, r4, r5
 8016268:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801626c:	b2bf      	uxth	r7, r7
 801626e:	fb06 b605 	mla	r6, r6, r5, fp
 8016272:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8016276:	b2b6      	uxth	r6, r6
 8016278:	fa1f fe8e 	uxth.w	lr, lr
 801627c:	1c7c      	adds	r4, r7, #1
 801627e:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8016282:	f106 0b01 	add.w	fp, r6, #1
 8016286:	f10e 0401 	add.w	r4, lr, #1
 801628a:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801628e:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8016292:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8016296:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801629a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801629e:	4327      	orrs	r7, r4
 80162a0:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80162a4:	4401      	add	r1, r0
 80162a6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80162a8:	ea47 070b 	orr.w	r7, r7, fp
 80162ac:	f829 7b02 	strh.w	r7, [r9], #2
 80162b0:	4402      	add	r2, r0
 80162b2:	f108 38ff 	add.w	r8, r8, #4294967295
 80162b6:	e7af      	b.n	8016218 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80162b8:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80162bc:	f04f 0e00 	mov.w	lr, #0
 80162c0:	eb03 040e 	add.w	r4, r3, lr
 80162c4:	2c00      	cmp	r4, #0
 80162c6:	dc43      	bgt.n	8016350 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80162c8:	9a00      	ldr	r2, [sp, #0]
 80162ca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80162ce:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80162d2:	9300      	str	r3, [sp, #0]
 80162d4:	9b02      	ldr	r3, [sp, #8]
 80162d6:	2b00      	cmp	r3, #0
 80162d8:	f340 8098 	ble.w	801640c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80162dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80162e0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80162e4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80162e8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80162ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80162ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 80162f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80162f6:	eef0 6a62 	vmov.f32	s13, s5
 80162fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80162fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016302:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016306:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801630a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801630e:	eef0 6a43 	vmov.f32	s13, s6
 8016312:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016316:	ee12 2a90 	vmov	r2, s5
 801631a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801631e:	fb92 f3f3 	sdiv	r3, r2, r3
 8016322:	ee13 2a10 	vmov	r2, s6
 8016326:	9313      	str	r3, [sp, #76]	@ 0x4c
 8016328:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801632a:	fb92 f3f3 	sdiv	r3, r2, r3
 801632e:	9314      	str	r3, [sp, #80]	@ 0x50
 8016330:	9b02      	ldr	r3, [sp, #8]
 8016332:	9a05      	ldr	r2, [sp, #20]
 8016334:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016338:	3b01      	subs	r3, #1
 801633a:	9302      	str	r3, [sp, #8]
 801633c:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8016340:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016342:	eeb0 3a67 	vmov.f32	s6, s15
 8016346:	bf08      	it	eq
 8016348:	4613      	moveq	r3, r2
 801634a:	eef0 2a47 	vmov.f32	s5, s14
 801634e:	e72a      	b.n	80161a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016350:	140f      	asrs	r7, r1, #16
 8016352:	d454      	bmi.n	80163fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8016354:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8016358:	42be      	cmp	r6, r7
 801635a:	dd50      	ble.n	80163fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801635c:	ea5f 4822 	movs.w	r8, r2, asr #16
 8016360:	d44d      	bmi.n	80163fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8016362:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8016366:	4544      	cmp	r4, r8
 8016368:	dd49      	ble.n	80163fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801636a:	9c04      	ldr	r4, [sp, #16]
 801636c:	b236      	sxth	r6, r6
 801636e:	fb08 4606 	mla	r6, r8, r6, r4
 8016372:	f06f 0001 	mvn.w	r0, #1
 8016376:	f816 8007 	ldrb.w	r8, [r6, r7]
 801637a:	9c01      	ldr	r4, [sp, #4]
 801637c:	fb00 fa0e 	mul.w	sl, r0, lr
 8016380:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8016384:	9800      	ldr	r0, [sp, #0]
 8016386:	eb04 0b08 	add.w	fp, r4, r8
 801638a:	f830 400a 	ldrh.w	r4, [r0, sl]
 801638e:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8016392:	9801      	ldr	r0, [sp, #4]
 8016394:	f89b b001 	ldrb.w	fp, [fp, #1]
 8016398:	f810 8008 	ldrb.w	r8, [r0, r8]
 801639c:	9800      	ldr	r0, [sp, #0]
 801639e:	1227      	asrs	r7, r4, #8
 80163a0:	fb16 f609 	smulbb	r6, r6, r9
 80163a4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80163a8:	fb07 6705 	mla	r7, r7, r5, r6
 80163ac:	10e6      	asrs	r6, r4, #3
 80163ae:	00e4      	lsls	r4, r4, #3
 80163b0:	b2e4      	uxtb	r4, r4
 80163b2:	fb1b fb09 	smulbb	fp, fp, r9
 80163b6:	fb14 f405 	smulbb	r4, r4, r5
 80163ba:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80163be:	b2bf      	uxth	r7, r7
 80163c0:	fb06 b605 	mla	r6, r6, r5, fp
 80163c4:	fb08 4809 	mla	r8, r8, r9, r4
 80163c8:	b2b6      	uxth	r6, r6
 80163ca:	fa1f f888 	uxth.w	r8, r8
 80163ce:	1c7c      	adds	r4, r7, #1
 80163d0:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80163d4:	f106 0b01 	add.w	fp, r6, #1
 80163d8:	f108 0401 	add.w	r4, r8, #1
 80163dc:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80163e0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80163e4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80163e8:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80163ec:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80163f0:	4327      	orrs	r7, r4
 80163f2:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80163f6:	ea47 070b 	orr.w	r7, r7, fp
 80163fa:	f820 700a 	strh.w	r7, [r0, sl]
 80163fe:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8016400:	4401      	add	r1, r0
 8016402:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8016404:	f10e 3eff 	add.w	lr, lr, #4294967295
 8016408:	4402      	add	r2, r0
 801640a:	e759      	b.n	80162c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801640c:	b007      	add	sp, #28
 801640e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08016414 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016414:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016418:	b085      	sub	sp, #20
 801641a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801641e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8016420:	9203      	str	r2, [sp, #12]
 8016422:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8016426:	6870      	ldr	r0, [r6, #4]
 8016428:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801642a:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 801642e:	686f      	ldr	r7, [r5, #4]
 8016430:	9101      	str	r1, [sp, #4]
 8016432:	fb00 2404 	mla	r4, r0, r4, r2
 8016436:	6832      	ldr	r2, [r6, #0]
 8016438:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801643c:	682a      	ldr	r2, [r5, #0]
 801643e:	9202      	str	r2, [sp, #8]
 8016440:	3704      	adds	r7, #4
 8016442:	9a01      	ldr	r2, [sp, #4]
 8016444:	2a00      	cmp	r2, #0
 8016446:	dc03      	bgt.n	8016450 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016448:	9a03      	ldr	r2, [sp, #12]
 801644a:	2a00      	cmp	r2, #0
 801644c:	f340 80cc 	ble.w	80165e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8016450:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8016452:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8016456:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801645a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801645e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8016460:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8016464:	2b00      	cmp	r3, #0
 8016466:	dd0d      	ble.n	8016484 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016468:	1406      	asrs	r6, r0, #16
 801646a:	d405      	bmi.n	8016478 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801646c:	454e      	cmp	r6, r9
 801646e:	da03      	bge.n	8016478 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8016470:	1416      	asrs	r6, r2, #16
 8016472:	d401      	bmi.n	8016478 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8016474:	4546      	cmp	r6, r8
 8016476:	db06      	blt.n	8016486 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016478:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 801647a:	4460      	add	r0, ip
 801647c:	4432      	add	r2, r6
 801647e:	3b01      	subs	r3, #1
 8016480:	3402      	adds	r4, #2
 8016482:	e7ef      	b.n	8016464 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8016484:	d00f      	beq.n	80164a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016486:	1e5e      	subs	r6, r3, #1
 8016488:	fb0c 0e06 	mla	lr, ip, r6, r0
 801648c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8016490:	d543      	bpl.n	801651a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8016492:	4698      	mov	r8, r3
 8016494:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8016498:	f1b8 0f00 	cmp.w	r8, #0
 801649c:	dc71      	bgt.n	8016582 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801649e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80164a2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80164a6:	9b01      	ldr	r3, [sp, #4]
 80164a8:	2b00      	cmp	r3, #0
 80164aa:	f340 809d 	ble.w	80165e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80164ae:	ee30 0a04 	vadd.f32	s0, s0, s8
 80164b2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80164b6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80164ba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80164bc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80164c0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80164c4:	eeb0 6a62 	vmov.f32	s12, s5
 80164c8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80164cc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80164d0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80164d4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80164d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80164dc:	eeb0 6a43 	vmov.f32	s12, s6
 80164e0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80164e4:	ee12 2a90 	vmov	r2, s5
 80164e8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80164ec:	fb92 fcf3 	sdiv	ip, r2, r3
 80164f0:	ee13 2a10 	vmov	r2, s6
 80164f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80164f8:	9312      	str	r3, [sp, #72]	@ 0x48
 80164fa:	9b01      	ldr	r3, [sp, #4]
 80164fc:	9a03      	ldr	r2, [sp, #12]
 80164fe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016502:	3b01      	subs	r3, #1
 8016504:	9301      	str	r3, [sp, #4]
 8016506:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801650a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801650c:	eeb0 3a67 	vmov.f32	s6, s15
 8016510:	bf08      	it	eq
 8016512:	4613      	moveq	r3, r2
 8016514:	eef0 2a47 	vmov.f32	s5, s14
 8016518:	e793      	b.n	8016442 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801651a:	45ce      	cmp	lr, r9
 801651c:	dab9      	bge.n	8016492 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801651e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8016520:	fb01 2606 	mla	r6, r1, r6, r2
 8016524:	1436      	asrs	r6, r6, #16
 8016526:	d4b4      	bmi.n	8016492 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016528:	4546      	cmp	r6, r8
 801652a:	dab2      	bge.n	8016492 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801652c:	4698      	mov	r8, r3
 801652e:	46a2      	mov	sl, r4
 8016530:	f1b8 0f00 	cmp.w	r8, #0
 8016534:	ddb3      	ble.n	801649e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8016536:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801653a:	9902      	ldr	r1, [sp, #8]
 801653c:	1416      	asrs	r6, r2, #16
 801653e:	fb09 1606 	mla	r6, r9, r6, r1
 8016542:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8016546:	492a      	ldr	r1, [pc, #168]	@ (80165f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8016548:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801654c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8016550:	eb07 0b0e 	add.w	fp, r7, lr
 8016554:	4460      	add	r0, ip
 8016556:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801655a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801655e:	00f6      	lsls	r6, r6, #3
 8016560:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8016564:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8016568:	ea49 0606 	orr.w	r6, r9, r6
 801656c:	f817 900e 	ldrb.w	r9, [r7, lr]
 8016570:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8016572:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8016576:	f82a 6b02 	strh.w	r6, [sl], #2
 801657a:	440a      	add	r2, r1
 801657c:	f108 38ff 	add.w	r8, r8, #4294967295
 8016580:	e7d6      	b.n	8016530 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016582:	ea5f 4920 	movs.w	r9, r0, asr #16
 8016586:	d429      	bmi.n	80165dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8016588:	68ae      	ldr	r6, [r5, #8]
 801658a:	454e      	cmp	r6, r9
 801658c:	dd26      	ble.n	80165dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801658e:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8016592:	d423      	bmi.n	80165dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8016594:	68e9      	ldr	r1, [r5, #12]
 8016596:	4559      	cmp	r1, fp
 8016598:	dd20      	ble.n	80165dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801659a:	9902      	ldr	r1, [sp, #8]
 801659c:	fa0f fe86 	sxth.w	lr, r6
 80165a0:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80165a4:	f06f 0101 	mvn.w	r1, #1
 80165a8:	f81e e009 	ldrb.w	lr, [lr, r9]
 80165ac:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80165b0:	eb07 060e 	add.w	r6, r7, lr
 80165b4:	fb01 f908 	mul.w	r9, r1, r8
 80165b8:	f896 b002 	ldrb.w	fp, [r6, #2]
 80165bc:	7876      	ldrb	r6, [r6, #1]
 80165be:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 80165c2:	00f6      	lsls	r6, r6, #3
 80165c4:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80165c8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80165cc:	ea4b 0606 	orr.w	r6, fp, r6
 80165d0:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80165d4:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80165d8:	f82a 6009 	strh.w	r6, [sl, r9]
 80165dc:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80165de:	4460      	add	r0, ip
 80165e0:	440a      	add	r2, r1
 80165e2:	f108 38ff 	add.w	r8, r8, #4294967295
 80165e6:	e757      	b.n	8016498 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80165e8:	b005      	add	sp, #20
 80165ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80165ee:	bf00      	nop
 80165f0:	fffff800 	.word	0xfffff800

080165f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80165f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80165f8:	b087      	sub	sp, #28
 80165fa:	468b      	mov	fp, r1
 80165fc:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80165fe:	9204      	str	r2, [sp, #16]
 8016600:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016604:	9205      	str	r2, [sp, #20]
 8016606:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801660a:	6841      	ldr	r1, [r0, #4]
 801660c:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8016610:	fb01 2404 	mla	r4, r1, r4, r2
 8016614:	6802      	ldr	r2, [r0, #0]
 8016616:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801661a:	f8dc 2000 	ldr.w	r2, [ip]
 801661e:	9201      	str	r2, [sp, #4]
 8016620:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8016624:	3204      	adds	r2, #4
 8016626:	9202      	str	r2, [sp, #8]
 8016628:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801662c:	f1bb 0f00 	cmp.w	fp, #0
 8016630:	dc03      	bgt.n	801663a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8016632:	9a04      	ldr	r2, [sp, #16]
 8016634:	2a00      	cmp	r2, #0
 8016636:	f340 8138 	ble.w	80168aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801663a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801663c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8016640:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8016644:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8016648:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801664a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801664e:	2b00      	cmp	r3, #0
 8016650:	dd0e      	ble.n	8016670 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016652:	1402      	asrs	r2, r0, #16
 8016654:	d405      	bmi.n	8016662 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016656:	42ba      	cmp	r2, r7
 8016658:	da03      	bge.n	8016662 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801665a:	140a      	asrs	r2, r1, #16
 801665c:	d401      	bmi.n	8016662 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801665e:	42b2      	cmp	r2, r6
 8016660:	db07      	blt.n	8016672 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016662:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8016664:	4410      	add	r0, r2
 8016666:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016668:	3b01      	subs	r3, #1
 801666a:	4411      	add	r1, r2
 801666c:	3402      	adds	r4, #2
 801666e:	e7ee      	b.n	801664e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8016670:	d019      	beq.n	80166a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8016672:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8016674:	1e5a      	subs	r2, r3, #1
 8016676:	fb05 0502 	mla	r5, r5, r2, r0
 801667a:	142d      	asrs	r5, r5, #16
 801667c:	d409      	bmi.n	8016692 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801667e:	42bd      	cmp	r5, r7
 8016680:	da07      	bge.n	8016692 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016682:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8016684:	fb05 1202 	mla	r2, r5, r2, r1
 8016688:	1412      	asrs	r2, r2, #16
 801668a:	d402      	bmi.n	8016692 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801668c:	42b2      	cmp	r2, r6
 801668e:	f2c0 80ac 	blt.w	80167ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8016692:	f04f 0e00 	mov.w	lr, #0
 8016696:	eb03 020e 	add.w	r2, r3, lr
 801669a:	2a00      	cmp	r2, #0
 801669c:	dc3e      	bgt.n	801671c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801669e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80166a2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80166a6:	f1bb 0f00 	cmp.w	fp, #0
 80166aa:	f340 80fe 	ble.w	80168aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80166ae:	ee30 0a04 	vadd.f32	s0, s0, s8
 80166b2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80166b6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80166ba:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80166bc:	f1bb 0b01 	subs.w	fp, fp, #1
 80166c0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80166c4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80166c8:	eeb0 6a62 	vmov.f32	s12, s5
 80166cc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80166d0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80166d4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80166d8:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80166dc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80166e0:	eeb0 6a43 	vmov.f32	s12, s6
 80166e4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80166e8:	ee12 2a90 	vmov	r2, s5
 80166ec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80166f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80166f4:	ee13 2a10 	vmov	r2, s6
 80166f8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80166fc:	9313      	str	r3, [sp, #76]	@ 0x4c
 80166fe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016700:	fb92 f3f3 	sdiv	r3, r2, r3
 8016704:	9a04      	ldr	r2, [sp, #16]
 8016706:	9314      	str	r3, [sp, #80]	@ 0x50
 8016708:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801670c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801670e:	eeb0 3a67 	vmov.f32	s6, s15
 8016712:	bf08      	it	eq
 8016714:	4613      	moveq	r3, r2
 8016716:	eef0 2a47 	vmov.f32	s5, s14
 801671a:	e787      	b.n	801662c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801671c:	1406      	asrs	r6, r0, #16
 801671e:	d45d      	bmi.n	80167dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016720:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8016724:	42b5      	cmp	r5, r6
 8016726:	dd59      	ble.n	80167dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016728:	140f      	asrs	r7, r1, #16
 801672a:	d457      	bmi.n	80167dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801672c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8016730:	42ba      	cmp	r2, r7
 8016732:	dd53      	ble.n	80167dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016734:	9a01      	ldr	r2, [sp, #4]
 8016736:	b22d      	sxth	r5, r5
 8016738:	fb07 2505 	mla	r5, r7, r5, r2
 801673c:	5daa      	ldrb	r2, [r5, r6]
 801673e:	9d02      	ldr	r5, [sp, #8]
 8016740:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8016744:	0e2e      	lsrs	r6, r5, #24
 8016746:	d049      	beq.n	80167dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016748:	f06f 0201 	mvn.w	r2, #1
 801674c:	fb02 f20e 	mul.w	r2, r2, lr
 8016750:	9203      	str	r2, [sp, #12]
 8016752:	f834 8002 	ldrh.w	r8, [r4, r2]
 8016756:	9a05      	ldr	r2, [sp, #20]
 8016758:	4356      	muls	r6, r2
 801675a:	1c72      	adds	r2, r6, #1
 801675c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8016760:	1212      	asrs	r2, r2, #8
 8016762:	fa1f f982 	uxth.w	r9, r2
 8016766:	ea4f 2728 	mov.w	r7, r8, asr #8
 801676a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801676e:	43d2      	mvns	r2, r2
 8016770:	b2d2      	uxtb	r2, r2
 8016772:	fb16 f609 	smulbb	r6, r6, r9
 8016776:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801677a:	fb07 6702 	mla	r7, r7, r2, r6
 801677e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016782:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8016786:	b2ed      	uxtb	r5, r5
 8016788:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801678c:	fa5f f888 	uxtb.w	r8, r8
 8016790:	fb15 f509 	smulbb	r5, r5, r9
 8016794:	fb08 5502 	mla	r5, r8, r2, r5
 8016798:	b2bf      	uxth	r7, r7
 801679a:	fb1a fa09 	smulbb	sl, sl, r9
 801679e:	b2ad      	uxth	r5, r5
 80167a0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80167a4:	fb06 a602 	mla	r6, r6, r2, sl
 80167a8:	1c7a      	adds	r2, r7, #1
 80167aa:	f105 0a01 	add.w	sl, r5, #1
 80167ae:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80167b2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80167b6:	b2b6      	uxth	r6, r6
 80167b8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80167bc:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80167c0:	ea4a 0707 	orr.w	r7, sl, r7
 80167c4:	f106 0a01 	add.w	sl, r6, #1
 80167c8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80167cc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80167d0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80167d4:	9a03      	ldr	r2, [sp, #12]
 80167d6:	ea47 070a 	orr.w	r7, r7, sl
 80167da:	52a7      	strh	r7, [r4, r2]
 80167dc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80167de:	4410      	add	r0, r2
 80167e0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80167e2:	f10e 3eff 	add.w	lr, lr, #4294967295
 80167e6:	4411      	add	r1, r2
 80167e8:	e755      	b.n	8016696 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80167ea:	f04f 0800 	mov.w	r8, #0
 80167ee:	eba3 0208 	sub.w	r2, r3, r8
 80167f2:	2a00      	cmp	r2, #0
 80167f4:	f77f af53 	ble.w	801669e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80167f8:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80167fc:	9f01      	ldr	r7, [sp, #4]
 80167fe:	140a      	asrs	r2, r1, #16
 8016800:	1405      	asrs	r5, r0, #16
 8016802:	fb06 7202 	mla	r2, r6, r2, r7
 8016806:	5d52      	ldrb	r2, [r2, r5]
 8016808:	9d02      	ldr	r5, [sp, #8]
 801680a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801680e:	0e2e      	lsrs	r6, r5, #24
 8016810:	d044      	beq.n	801689c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8016812:	9a05      	ldr	r2, [sp, #20]
 8016814:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8016818:	4356      	muls	r6, r2
 801681a:	1c72      	adds	r2, r6, #1
 801681c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8016820:	1212      	asrs	r2, r2, #8
 8016822:	fa1f f982 	uxth.w	r9, r2
 8016826:	ea4f 272e 	mov.w	r7, lr, asr #8
 801682a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801682e:	43d2      	mvns	r2, r2
 8016830:	b2d2      	uxtb	r2, r2
 8016832:	fb16 f609 	smulbb	r6, r6, r9
 8016836:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801683a:	fb07 6702 	mla	r7, r7, r2, r6
 801683e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016842:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016846:	b2ed      	uxtb	r5, r5
 8016848:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801684c:	fa5f fe8e 	uxtb.w	lr, lr
 8016850:	fb15 f509 	smulbb	r5, r5, r9
 8016854:	fb0e 5502 	mla	r5, lr, r2, r5
 8016858:	b2bf      	uxth	r7, r7
 801685a:	fb1a fa09 	smulbb	sl, sl, r9
 801685e:	b2ad      	uxth	r5, r5
 8016860:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8016864:	fb06 a602 	mla	r6, r6, r2, sl
 8016868:	1c7a      	adds	r2, r7, #1
 801686a:	f105 0a01 	add.w	sl, r5, #1
 801686e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016872:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016876:	b2b6      	uxth	r6, r6
 8016878:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801687c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8016880:	ea4a 0707 	orr.w	r7, sl, r7
 8016884:	f106 0a01 	add.w	sl, r6, #1
 8016888:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801688c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016890:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016894:	ea47 070a 	orr.w	r7, r7, sl
 8016898:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801689c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801689e:	4410      	add	r0, r2
 80168a0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80168a2:	f108 0801 	add.w	r8, r8, #1
 80168a6:	4411      	add	r1, r2
 80168a8:	e7a1      	b.n	80167ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80168aa:	b007      	add	sp, #28
 80168ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080168b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80168b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80168b4:	b085      	sub	sp, #20
 80168b6:	468b      	mov	fp, r1
 80168b8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80168ba:	9203      	str	r2, [sp, #12]
 80168bc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80168c0:	6841      	ldr	r1, [r0, #4]
 80168c2:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 80168c6:	fb01 2404 	mla	r4, r1, r4, r2
 80168ca:	6802      	ldr	r2, [r0, #0]
 80168cc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80168d0:	f8de 2000 	ldr.w	r2, [lr]
 80168d4:	9200      	str	r2, [sp, #0]
 80168d6:	f8de 2004 	ldr.w	r2, [lr, #4]
 80168da:	3204      	adds	r2, #4
 80168dc:	9201      	str	r2, [sp, #4]
 80168de:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80168e2:	f1bb 0f00 	cmp.w	fp, #0
 80168e6:	dc03      	bgt.n	80168f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80168e8:	9a03      	ldr	r2, [sp, #12]
 80168ea:	2a00      	cmp	r2, #0
 80168ec:	f340 8153 	ble.w	8016b96 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80168f0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80168f2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80168f6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80168fa:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80168fe:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8016900:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8016904:	2b00      	cmp	r3, #0
 8016906:	dd0e      	ble.n	8016926 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016908:	1408      	asrs	r0, r1, #16
 801690a:	d405      	bmi.n	8016918 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801690c:	42b8      	cmp	r0, r7
 801690e:	da03      	bge.n	8016918 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016910:	1410      	asrs	r0, r2, #16
 8016912:	d401      	bmi.n	8016918 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016914:	42b0      	cmp	r0, r6
 8016916:	db07      	blt.n	8016928 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8016918:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801691a:	4401      	add	r1, r0
 801691c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801691e:	3b01      	subs	r3, #1
 8016920:	4402      	add	r2, r0
 8016922:	3402      	adds	r4, #2
 8016924:	e7ee      	b.n	8016904 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8016926:	d017      	beq.n	8016958 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016928:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801692a:	1e58      	subs	r0, r3, #1
 801692c:	fb05 1500 	mla	r5, r5, r0, r1
 8016930:	142d      	asrs	r5, r5, #16
 8016932:	d409      	bmi.n	8016948 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016934:	42bd      	cmp	r5, r7
 8016936:	da07      	bge.n	8016948 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016938:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801693a:	fb05 2000 	mla	r0, r5, r0, r2
 801693e:	1400      	asrs	r0, r0, #16
 8016940:	d402      	bmi.n	8016948 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016942:	42b0      	cmp	r0, r6
 8016944:	f2c0 80bc 	blt.w	8016ac0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8016948:	2600      	movs	r6, #0
 801694a:	1998      	adds	r0, r3, r6
 801694c:	2800      	cmp	r0, #0
 801694e:	dc3e      	bgt.n	80169ce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8016950:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016954:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016958:	f1bb 0f00 	cmp.w	fp, #0
 801695c:	f340 811b 	ble.w	8016b96 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8016960:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016964:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016968:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801696c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801696e:	f1bb 0b01 	subs.w	fp, fp, #1
 8016972:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016976:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801697a:	eeb0 6a62 	vmov.f32	s12, s5
 801697e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016982:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016986:	ee77 2a62 	vsub.f32	s5, s14, s5
 801698a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801698e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016992:	eeb0 6a43 	vmov.f32	s12, s6
 8016996:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801699a:	ee12 2a90 	vmov	r2, s5
 801699e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80169a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80169a6:	ee13 2a10 	vmov	r2, s6
 80169aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80169ae:	9311      	str	r3, [sp, #68]	@ 0x44
 80169b0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80169b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80169b6:	9a03      	ldr	r2, [sp, #12]
 80169b8:	9312      	str	r3, [sp, #72]	@ 0x48
 80169ba:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80169be:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80169c0:	eeb0 3a67 	vmov.f32	s6, s15
 80169c4:	bf08      	it	eq
 80169c6:	4613      	moveq	r3, r2
 80169c8:	eef0 2a47 	vmov.f32	s5, s14
 80169cc:	e789      	b.n	80168e2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80169ce:	140f      	asrs	r7, r1, #16
 80169d0:	d426      	bmi.n	8016a20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80169d2:	f8de 5008 	ldr.w	r5, [lr, #8]
 80169d6:	42bd      	cmp	r5, r7
 80169d8:	dd22      	ble.n	8016a20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80169da:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80169de:	d41f      	bmi.n	8016a20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80169e0:	f8de 000c 	ldr.w	r0, [lr, #12]
 80169e4:	4560      	cmp	r0, ip
 80169e6:	dd1b      	ble.n	8016a20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80169e8:	9800      	ldr	r0, [sp, #0]
 80169ea:	b22d      	sxth	r5, r5
 80169ec:	fb0c 0505 	mla	r5, ip, r5, r0
 80169f0:	5de8      	ldrb	r0, [r5, r7]
 80169f2:	9d01      	ldr	r5, [sp, #4]
 80169f4:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80169f8:	0e07      	lsrs	r7, r0, #24
 80169fa:	2fff      	cmp	r7, #255	@ 0xff
 80169fc:	d116      	bne.n	8016a2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80169fe:	f06f 0501 	mvn.w	r5, #1
 8016a02:	fb05 f706 	mul.w	r7, r5, r6
 8016a06:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8016a0a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8016a0e:	0945      	lsrs	r5, r0, #5
 8016a10:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016a14:	ea4c 0505 	orr.w	r5, ip, r5
 8016a18:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8016a1c:	4305      	orrs	r5, r0
 8016a1e:	53e5      	strh	r5, [r4, r7]
 8016a20:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8016a22:	4401      	add	r1, r0
 8016a24:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8016a26:	3e01      	subs	r6, #1
 8016a28:	4402      	add	r2, r0
 8016a2a:	e78e      	b.n	801694a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8016a2c:	b2fd      	uxtb	r5, r7
 8016a2e:	2f00      	cmp	r7, #0
 8016a30:	d0f6      	beq.n	8016a20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016a32:	f06f 0701 	mvn.w	r7, #1
 8016a36:	4377      	muls	r7, r6
 8016a38:	fa1f f985 	uxth.w	r9, r5
 8016a3c:	f834 8007 	ldrh.w	r8, [r4, r7]
 8016a40:	9702      	str	r7, [sp, #8]
 8016a42:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8016a46:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8016a4a:	43ed      	mvns	r5, r5
 8016a4c:	b2ed      	uxtb	r5, r5
 8016a4e:	fb17 f709 	smulbb	r7, r7, r9
 8016a52:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016a56:	fb0c 7c05 	mla	ip, ip, r5, r7
 8016a5a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8016a5e:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8016a62:	b2c0      	uxtb	r0, r0
 8016a64:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016a68:	fa5f f888 	uxtb.w	r8, r8
 8016a6c:	fb10 f009 	smulbb	r0, r0, r9
 8016a70:	fb08 0005 	mla	r0, r8, r5, r0
 8016a74:	b280      	uxth	r0, r0
 8016a76:	fa1f fc8c 	uxth.w	ip, ip
 8016a7a:	fb1a fa09 	smulbb	sl, sl, r9
 8016a7e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8016a82:	fb07 a705 	mla	r7, r7, r5, sl
 8016a86:	f100 0a01 	add.w	sl, r0, #1
 8016a8a:	f10c 0501 	add.w	r5, ip, #1
 8016a8e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8016a92:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016a96:	b2bf      	uxth	r7, r7
 8016a98:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016a9c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8016aa0:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016aa4:	f107 0a01 	add.w	sl, r7, #1
 8016aa8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016aac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016ab0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016ab4:	9802      	ldr	r0, [sp, #8]
 8016ab6:	ea4c 0c0a 	orr.w	ip, ip, sl
 8016aba:	f824 c000 	strh.w	ip, [r4, r0]
 8016abe:	e7af      	b.n	8016a20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016ac0:	f04f 0800 	mov.w	r8, #0
 8016ac4:	eba3 0008 	sub.w	r0, r3, r8
 8016ac8:	2800      	cmp	r0, #0
 8016aca:	f77f af41 	ble.w	8016950 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016ace:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8016ad2:	9f00      	ldr	r7, [sp, #0]
 8016ad4:	1410      	asrs	r0, r2, #16
 8016ad6:	140d      	asrs	r5, r1, #16
 8016ad8:	fb06 7000 	mla	r0, r6, r0, r7
 8016adc:	5d40      	ldrb	r0, [r0, r5]
 8016ade:	9d01      	ldr	r5, [sp, #4]
 8016ae0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8016ae4:	0e2e      	lsrs	r6, r5, #24
 8016ae6:	2eff      	cmp	r6, #255	@ 0xff
 8016ae8:	d112      	bne.n	8016b10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8016aea:	482c      	ldr	r0, [pc, #176]	@ (8016b9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8016aec:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8016af0:	0968      	lsrs	r0, r5, #5
 8016af2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8016af6:	4330      	orrs	r0, r6
 8016af8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016afc:	4328      	orrs	r0, r5
 8016afe:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8016b02:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8016b04:	4401      	add	r1, r0
 8016b06:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8016b08:	f108 0801 	add.w	r8, r8, #1
 8016b0c:	4402      	add	r2, r0
 8016b0e:	e7d9      	b.n	8016ac4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8016b10:	b2f0      	uxtb	r0, r6
 8016b12:	2e00      	cmp	r6, #0
 8016b14:	d0f5      	beq.n	8016b02 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8016b16:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8016b1a:	fa1f f980 	uxth.w	r9, r0
 8016b1e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8016b22:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8016b26:	43c0      	mvns	r0, r0
 8016b28:	b2c0      	uxtb	r0, r0
 8016b2a:	fb16 f609 	smulbb	r6, r6, r9
 8016b2e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016b32:	fb07 6700 	mla	r7, r7, r0, r6
 8016b36:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016b3a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8016b3e:	b2ed      	uxtb	r5, r5
 8016b40:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016b44:	fa5f fc8c 	uxtb.w	ip, ip
 8016b48:	fb15 f509 	smulbb	r5, r5, r9
 8016b4c:	fb0c 5500 	mla	r5, ip, r0, r5
 8016b50:	b2bf      	uxth	r7, r7
 8016b52:	fb1a fa09 	smulbb	sl, sl, r9
 8016b56:	b2ad      	uxth	r5, r5
 8016b58:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8016b5c:	fb06 a600 	mla	r6, r6, r0, sl
 8016b60:	1c78      	adds	r0, r7, #1
 8016b62:	f105 0a01 	add.w	sl, r5, #1
 8016b66:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8016b6a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016b6e:	b2b6      	uxth	r6, r6
 8016b70:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016b74:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8016b78:	ea4a 0707 	orr.w	r7, sl, r7
 8016b7c:	f106 0a01 	add.w	sl, r6, #1
 8016b80:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016b84:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016b88:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016b8c:	ea47 070a 	orr.w	r7, r7, sl
 8016b90:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8016b94:	e7b5      	b.n	8016b02 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8016b96:	b005      	add	sp, #20
 8016b98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016b9c:	fffff800 	.word	0xfffff800

08016ba0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ba4:	b087      	sub	sp, #28
 8016ba6:	468b      	mov	fp, r1
 8016ba8:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8016baa:	9204      	str	r2, [sp, #16]
 8016bac:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016bb0:	9205      	str	r2, [sp, #20]
 8016bb2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8016bb6:	6861      	ldr	r1, [r4, #4]
 8016bb8:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8016bbc:	fb01 2000 	mla	r0, r1, r0, r2
 8016bc0:	6822      	ldr	r2, [r4, #0]
 8016bc2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8016bc6:	f8de 2000 	ldr.w	r2, [lr]
 8016bca:	9201      	str	r2, [sp, #4]
 8016bcc:	f8de 2004 	ldr.w	r2, [lr, #4]
 8016bd0:	9202      	str	r2, [sp, #8]
 8016bd2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8016bd6:	f1bb 0f00 	cmp.w	fp, #0
 8016bda:	dc03      	bgt.n	8016be4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8016bdc:	9a04      	ldr	r2, [sp, #16]
 8016bde:	2a00      	cmp	r2, #0
 8016be0:	f340 8142 	ble.w	8016e68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8016be4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8016be6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8016bea:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8016bee:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8016bf2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016bf4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8016bf8:	2b00      	cmp	r3, #0
 8016bfa:	dd0e      	ble.n	8016c1a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016bfc:	140c      	asrs	r4, r1, #16
 8016bfe:	d405      	bmi.n	8016c0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016c00:	42bc      	cmp	r4, r7
 8016c02:	da03      	bge.n	8016c0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016c04:	1414      	asrs	r4, r2, #16
 8016c06:	d401      	bmi.n	8016c0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016c08:	42b4      	cmp	r4, r6
 8016c0a:	db07      	blt.n	8016c1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016c0c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8016c0e:	4421      	add	r1, r4
 8016c10:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8016c12:	3b01      	subs	r3, #1
 8016c14:	4422      	add	r2, r4
 8016c16:	3002      	adds	r0, #2
 8016c18:	e7ee      	b.n	8016bf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8016c1a:	d019      	beq.n	8016c50 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016c1c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8016c1e:	1e5c      	subs	r4, r3, #1
 8016c20:	fb05 1504 	mla	r5, r5, r4, r1
 8016c24:	142d      	asrs	r5, r5, #16
 8016c26:	d409      	bmi.n	8016c3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8016c28:	42bd      	cmp	r5, r7
 8016c2a:	da07      	bge.n	8016c3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8016c2c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8016c2e:	fb05 2404 	mla	r4, r5, r4, r2
 8016c32:	1424      	asrs	r4, r4, #16
 8016c34:	d402      	bmi.n	8016c3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8016c36:	42b4      	cmp	r4, r6
 8016c38:	f2c0 80b1 	blt.w	8016d9e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8016c3c:	f04f 0800 	mov.w	r8, #0
 8016c40:	eb03 0408 	add.w	r4, r3, r8
 8016c44:	2c00      	cmp	r4, #0
 8016c46:	dc3e      	bgt.n	8016cc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8016c48:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016c4c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016c50:	f1bb 0f00 	cmp.w	fp, #0
 8016c54:	f340 8108 	ble.w	8016e68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8016c58:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016c5c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016c60:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016c64:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016c66:	f1bb 0b01 	subs.w	fp, fp, #1
 8016c6a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016c6e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016c72:	eeb0 6a62 	vmov.f32	s12, s5
 8016c76:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016c7a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016c7e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016c82:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8016c86:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016c8a:	eeb0 6a43 	vmov.f32	s12, s6
 8016c8e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016c92:	ee12 2a90 	vmov	r2, s5
 8016c96:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016c9a:	fb92 f3f3 	sdiv	r3, r2, r3
 8016c9e:	ee13 2a10 	vmov	r2, s6
 8016ca2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016ca6:	9313      	str	r3, [sp, #76]	@ 0x4c
 8016ca8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016caa:	fb92 f3f3 	sdiv	r3, r2, r3
 8016cae:	9a04      	ldr	r2, [sp, #16]
 8016cb0:	9314      	str	r3, [sp, #80]	@ 0x50
 8016cb2:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8016cb6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016cb8:	eeb0 3a67 	vmov.f32	s6, s15
 8016cbc:	bf08      	it	eq
 8016cbe:	4613      	moveq	r3, r2
 8016cc0:	eef0 2a47 	vmov.f32	s5, s14
 8016cc4:	e787      	b.n	8016bd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8016cc6:	140e      	asrs	r6, r1, #16
 8016cc8:	d462      	bmi.n	8016d90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016cca:	f8de 5008 	ldr.w	r5, [lr, #8]
 8016cce:	42b5      	cmp	r5, r6
 8016cd0:	dd5e      	ble.n	8016d90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016cd2:	1417      	asrs	r7, r2, #16
 8016cd4:	d45c      	bmi.n	8016d90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016cd6:	f8de 400c 	ldr.w	r4, [lr, #12]
 8016cda:	42bc      	cmp	r4, r7
 8016cdc:	dd58      	ble.n	8016d90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016cde:	b22d      	sxth	r5, r5
 8016ce0:	fb07 6505 	mla	r5, r7, r5, r6
 8016ce4:	9c02      	ldr	r4, [sp, #8]
 8016ce6:	5d66      	ldrb	r6, [r4, r5]
 8016ce8:	2e00      	cmp	r6, #0
 8016cea:	d051      	beq.n	8016d90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016cec:	9c01      	ldr	r4, [sp, #4]
 8016cee:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8016cf2:	f06f 0401 	mvn.w	r4, #1
 8016cf6:	fb04 f408 	mul.w	r4, r4, r8
 8016cfa:	9403      	str	r4, [sp, #12]
 8016cfc:	5b05      	ldrh	r5, [r0, r4]
 8016cfe:	9c05      	ldr	r4, [sp, #20]
 8016d00:	4366      	muls	r6, r4
 8016d02:	1c74      	adds	r4, r6, #1
 8016d04:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8016d08:	1224      	asrs	r4, r4, #8
 8016d0a:	b2a7      	uxth	r7, r4
 8016d0c:	122e      	asrs	r6, r5, #8
 8016d0e:	43e4      	mvns	r4, r4
 8016d10:	b2e4      	uxtb	r4, r4
 8016d12:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8016d16:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016d1a:	fb16 f604 	smulbb	r6, r6, r4
 8016d1e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8016d22:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016d26:	00ed      	lsls	r5, r5, #3
 8016d28:	fb0c 6c07 	mla	ip, ip, r7, r6
 8016d2c:	b2ed      	uxtb	r5, r5
 8016d2e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8016d32:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8016d36:	fb15 f504 	smulbb	r5, r5, r4
 8016d3a:	fa5f f989 	uxtb.w	r9, r9
 8016d3e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8016d42:	fb09 5507 	mla	r5, r9, r7, r5
 8016d46:	fb1a fa04 	smulbb	sl, sl, r4
 8016d4a:	fa1f fc8c 	uxth.w	ip, ip
 8016d4e:	b2ad      	uxth	r5, r5
 8016d50:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8016d54:	fb06 a607 	mla	r6, r6, r7, sl
 8016d58:	f10c 0401 	add.w	r4, ip, #1
 8016d5c:	f105 0a01 	add.w	sl, r5, #1
 8016d60:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8016d64:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016d68:	b2b6      	uxth	r6, r6
 8016d6a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016d6e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8016d72:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016d76:	f106 0a01 	add.w	sl, r6, #1
 8016d7a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016d7e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016d82:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016d86:	9c03      	ldr	r4, [sp, #12]
 8016d88:	ea4c 0c0a 	orr.w	ip, ip, sl
 8016d8c:	f820 c004 	strh.w	ip, [r0, r4]
 8016d90:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8016d92:	4421      	add	r1, r4
 8016d94:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8016d96:	f108 38ff 	add.w	r8, r8, #4294967295
 8016d9a:	4422      	add	r2, r4
 8016d9c:	e750      	b.n	8016c40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016d9e:	f04f 0900 	mov.w	r9, #0
 8016da2:	eba3 0409 	sub.w	r4, r3, r9
 8016da6:	2c00      	cmp	r4, #0
 8016da8:	f77f af4e 	ble.w	8016c48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016dac:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8016db0:	140d      	asrs	r5, r1, #16
 8016db2:	1414      	asrs	r4, r2, #16
 8016db4:	fb06 5404 	mla	r4, r6, r4, r5
 8016db8:	9d02      	ldr	r5, [sp, #8]
 8016dba:	5d2e      	ldrb	r6, [r5, r4]
 8016dbc:	2e00      	cmp	r6, #0
 8016dbe:	d04c      	beq.n	8016e5a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8016dc0:	9d01      	ldr	r5, [sp, #4]
 8016dc2:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8016dc6:	9c05      	ldr	r4, [sp, #20]
 8016dc8:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8016dcc:	4366      	muls	r6, r4
 8016dce:	1c74      	adds	r4, r6, #1
 8016dd0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8016dd4:	1224      	asrs	r4, r4, #8
 8016dd6:	b2a7      	uxth	r7, r4
 8016dd8:	122e      	asrs	r6, r5, #8
 8016dda:	43e4      	mvns	r4, r4
 8016ddc:	b2e4      	uxtb	r4, r4
 8016dde:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8016de2:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016de6:	fb16 f604 	smulbb	r6, r6, r4
 8016dea:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8016dee:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016df2:	00ed      	lsls	r5, r5, #3
 8016df4:	fb0c 6c07 	mla	ip, ip, r7, r6
 8016df8:	b2ed      	uxtb	r5, r5
 8016dfa:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8016dfe:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016e02:	fb15 f504 	smulbb	r5, r5, r4
 8016e06:	fa5f f888 	uxtb.w	r8, r8
 8016e0a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8016e0e:	fb08 5507 	mla	r5, r8, r7, r5
 8016e12:	fb1a fa04 	smulbb	sl, sl, r4
 8016e16:	fa1f fc8c 	uxth.w	ip, ip
 8016e1a:	b2ad      	uxth	r5, r5
 8016e1c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8016e20:	fb06 a607 	mla	r6, r6, r7, sl
 8016e24:	f10c 0401 	add.w	r4, ip, #1
 8016e28:	f105 0a01 	add.w	sl, r5, #1
 8016e2c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8016e30:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016e34:	b2b6      	uxth	r6, r6
 8016e36:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016e3a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8016e3e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016e42:	f106 0a01 	add.w	sl, r6, #1
 8016e46:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016e4a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016e4e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016e52:	ea4c 0c0a 	orr.w	ip, ip, sl
 8016e56:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8016e5a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8016e5c:	4421      	add	r1, r4
 8016e5e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8016e60:	f109 0901 	add.w	r9, r9, #1
 8016e64:	4422      	add	r2, r4
 8016e66:	e79c      	b.n	8016da2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8016e68:	b007      	add	sp, #28
 8016e6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016e6e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016e6e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016e72:	b085      	sub	sp, #20
 8016e74:	468b      	mov	fp, r1
 8016e76:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8016e78:	9203      	str	r2, [sp, #12]
 8016e7a:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 8016e7e:	6861      	ldr	r1, [r4, #4]
 8016e80:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8016e84:	fb01 2000 	mla	r0, r1, r0, r2
 8016e88:	6822      	ldr	r2, [r4, #0]
 8016e8a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8016e8e:	f8d8 2000 	ldr.w	r2, [r8]
 8016e92:	9200      	str	r2, [sp, #0]
 8016e94:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8016e98:	9201      	str	r2, [sp, #4]
 8016e9a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8016e9e:	f1bb 0f00 	cmp.w	fp, #0
 8016ea2:	dc03      	bgt.n	8016eac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8016ea4:	9a03      	ldr	r2, [sp, #12]
 8016ea6:	2a00      	cmp	r2, #0
 8016ea8:	f340 8146 	ble.w	8017138 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8016eac:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8016eae:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8016eb2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8016eb6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8016eba:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8016ebc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8016ec0:	2b00      	cmp	r3, #0
 8016ec2:	dd0e      	ble.n	8016ee2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8016ec4:	140c      	asrs	r4, r1, #16
 8016ec6:	d405      	bmi.n	8016ed4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016ec8:	42bc      	cmp	r4, r7
 8016eca:	da03      	bge.n	8016ed4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016ecc:	1414      	asrs	r4, r2, #16
 8016ece:	d401      	bmi.n	8016ed4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016ed0:	42b4      	cmp	r4, r6
 8016ed2:	db07      	blt.n	8016ee4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016ed4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8016ed6:	4421      	add	r1, r4
 8016ed8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8016eda:	3b01      	subs	r3, #1
 8016edc:	4422      	add	r2, r4
 8016ede:	3002      	adds	r0, #2
 8016ee0:	e7ee      	b.n	8016ec0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8016ee2:	d017      	beq.n	8016f14 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8016ee4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8016ee6:	1e5c      	subs	r4, r3, #1
 8016ee8:	fb05 1504 	mla	r5, r5, r4, r1
 8016eec:	142d      	asrs	r5, r5, #16
 8016eee:	d409      	bmi.n	8016f04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016ef0:	42bd      	cmp	r5, r7
 8016ef2:	da07      	bge.n	8016f04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016ef4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8016ef6:	fb05 2404 	mla	r4, r5, r4, r2
 8016efa:	1424      	asrs	r4, r4, #16
 8016efc:	d402      	bmi.n	8016f04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016efe:	42b4      	cmp	r4, r6
 8016f00:	f2c0 80b3 	blt.w	801706a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8016f04:	2600      	movs	r6, #0
 8016f06:	199c      	adds	r4, r3, r6
 8016f08:	2c00      	cmp	r4, #0
 8016f0a:	dc3e      	bgt.n	8016f8a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016f0c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016f10:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016f14:	f1bb 0f00 	cmp.w	fp, #0
 8016f18:	f340 810e 	ble.w	8017138 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8016f1c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016f20:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016f24:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016f28:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016f2a:	f1bb 0b01 	subs.w	fp, fp, #1
 8016f2e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016f32:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016f36:	eeb0 6a62 	vmov.f32	s12, s5
 8016f3a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016f3e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016f42:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016f46:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8016f4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016f4e:	eeb0 6a43 	vmov.f32	s12, s6
 8016f52:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016f56:	ee12 2a90 	vmov	r2, s5
 8016f5a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016f5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8016f62:	ee13 2a10 	vmov	r2, s6
 8016f66:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016f6a:	9311      	str	r3, [sp, #68]	@ 0x44
 8016f6c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016f6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8016f72:	9a03      	ldr	r2, [sp, #12]
 8016f74:	9312      	str	r3, [sp, #72]	@ 0x48
 8016f76:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8016f7a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016f7c:	eeb0 3a67 	vmov.f32	s6, s15
 8016f80:	bf08      	it	eq
 8016f82:	4613      	moveq	r3, r2
 8016f84:	eef0 2a47 	vmov.f32	s5, s14
 8016f88:	e789      	b.n	8016e9e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8016f8a:	140f      	asrs	r7, r1, #16
 8016f8c:	d418      	bmi.n	8016fc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016f8e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8016f92:	42bd      	cmp	r5, r7
 8016f94:	dd14      	ble.n	8016fc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016f96:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016f9a:	d411      	bmi.n	8016fc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016f9c:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8016fa0:	4564      	cmp	r4, ip
 8016fa2:	dd0d      	ble.n	8016fc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016fa4:	b22d      	sxth	r5, r5
 8016fa6:	fb0c 7505 	mla	r5, ip, r5, r7
 8016faa:	9c01      	ldr	r4, [sp, #4]
 8016fac:	5d64      	ldrb	r4, [r4, r5]
 8016fae:	2cff      	cmp	r4, #255	@ 0xff
 8016fb0:	d10c      	bne.n	8016fcc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8016fb2:	9c00      	ldr	r4, [sp, #0]
 8016fb4:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8016fb8:	f06f 0401 	mvn.w	r4, #1
 8016fbc:	4374      	muls	r4, r6
 8016fbe:	5305      	strh	r5, [r0, r4]
 8016fc0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8016fc2:	4421      	add	r1, r4
 8016fc4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8016fc6:	3e01      	subs	r6, #1
 8016fc8:	4422      	add	r2, r4
 8016fca:	e79c      	b.n	8016f06 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016fcc:	2c00      	cmp	r4, #0
 8016fce:	d0f7      	beq.n	8016fc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016fd0:	9f00      	ldr	r7, [sp, #0]
 8016fd2:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8016fd6:	f06f 0501 	mvn.w	r5, #1
 8016fda:	4375      	muls	r5, r6
 8016fdc:	9502      	str	r5, [sp, #8]
 8016fde:	5b45      	ldrh	r5, [r0, r5]
 8016fe0:	fa1f fc84 	uxth.w	ip, r4
 8016fe4:	122f      	asrs	r7, r5, #8
 8016fe6:	43e4      	mvns	r4, r4
 8016fe8:	b2e4      	uxtb	r4, r4
 8016fea:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8016fee:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016ff2:	fb17 f704 	smulbb	r7, r7, r4
 8016ff6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8016ffa:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8016ffe:	00ed      	lsls	r5, r5, #3
 8017000:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8017004:	b2ed      	uxtb	r5, r5
 8017006:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801700a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801700e:	fb15 f504 	smulbb	r5, r5, r4
 8017012:	fa5f f989 	uxtb.w	r9, r9
 8017016:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801701a:	fb09 550c 	mla	r5, r9, ip, r5
 801701e:	fb1a fa04 	smulbb	sl, sl, r4
 8017022:	fa1f fe8e 	uxth.w	lr, lr
 8017026:	b2ad      	uxth	r5, r5
 8017028:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801702c:	fb07 a70c 	mla	r7, r7, ip, sl
 8017030:	f10e 0401 	add.w	r4, lr, #1
 8017034:	f105 0a01 	add.w	sl, r5, #1
 8017038:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801703c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017040:	b2bf      	uxth	r7, r7
 8017042:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017046:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801704a:	ea4a 0e0e 	orr.w	lr, sl, lr
 801704e:	f107 0a01 	add.w	sl, r7, #1
 8017052:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8017056:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801705a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801705e:	9c02      	ldr	r4, [sp, #8]
 8017060:	ea4e 0e0a 	orr.w	lr, lr, sl
 8017064:	f820 e004 	strh.w	lr, [r0, r4]
 8017068:	e7aa      	b.n	8016fc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801706a:	f04f 0900 	mov.w	r9, #0
 801706e:	eba3 0409 	sub.w	r4, r3, r9
 8017072:	2c00      	cmp	r4, #0
 8017074:	f77f af4a 	ble.w	8016f0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017078:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801707c:	1414      	asrs	r4, r2, #16
 801707e:	140d      	asrs	r5, r1, #16
 8017080:	fb06 5504 	mla	r5, r6, r4, r5
 8017084:	9c01      	ldr	r4, [sp, #4]
 8017086:	5d64      	ldrb	r4, [r4, r5]
 8017088:	2cff      	cmp	r4, #255	@ 0xff
 801708a:	d10b      	bne.n	80170a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801708c:	9c00      	ldr	r4, [sp, #0]
 801708e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8017092:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8017096:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8017098:	4421      	add	r1, r4
 801709a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801709c:	f109 0901 	add.w	r9, r9, #1
 80170a0:	4422      	add	r2, r4
 80170a2:	e7e4      	b.n	801706e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80170a4:	2c00      	cmp	r4, #0
 80170a6:	d0f6      	beq.n	8017096 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80170a8:	9e00      	ldr	r6, [sp, #0]
 80170aa:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80170ae:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80170b2:	b2a7      	uxth	r7, r4
 80170b4:	122e      	asrs	r6, r5, #8
 80170b6:	43e4      	mvns	r4, r4
 80170b8:	b2e4      	uxtb	r4, r4
 80170ba:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80170be:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80170c2:	fb16 f604 	smulbb	r6, r6, r4
 80170c6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80170ca:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80170ce:	00ed      	lsls	r5, r5, #3
 80170d0:	fb0c 6c07 	mla	ip, ip, r7, r6
 80170d4:	b2ed      	uxtb	r5, r5
 80170d6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80170da:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80170de:	fb15 f504 	smulbb	r5, r5, r4
 80170e2:	fa5f fe8e 	uxtb.w	lr, lr
 80170e6:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80170ea:	fb0e 5507 	mla	r5, lr, r7, r5
 80170ee:	fb1a fa04 	smulbb	sl, sl, r4
 80170f2:	fa1f fc8c 	uxth.w	ip, ip
 80170f6:	b2ad      	uxth	r5, r5
 80170f8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80170fc:	fb06 a607 	mla	r6, r6, r7, sl
 8017100:	f10c 0401 	add.w	r4, ip, #1
 8017104:	f105 0a01 	add.w	sl, r5, #1
 8017108:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801710c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017110:	b2b6      	uxth	r6, r6
 8017112:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017116:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801711a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801711e:	f106 0a01 	add.w	sl, r6, #1
 8017122:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8017126:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801712a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801712e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8017132:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8017136:	e7ae      	b.n	8017096 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8017138:	b005      	add	sp, #20
 801713a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801713e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801713e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017142:	b085      	sub	sp, #20
 8017144:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017146:	9203      	str	r2, [sp, #12]
 8017148:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 801714c:	9201      	str	r2, [sp, #4]
 801714e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8017152:	9100      	str	r1, [sp, #0]
 8017154:	6841      	ldr	r1, [r0, #4]
 8017156:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 801715a:	fb01 2404 	mla	r4, r1, r4, r2
 801715e:	6802      	ldr	r2, [r0, #0]
 8017160:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017164:	f8de 2000 	ldr.w	r2, [lr]
 8017168:	9202      	str	r2, [sp, #8]
 801716a:	9a01      	ldr	r2, [sp, #4]
 801716c:	43d6      	mvns	r6, r2
 801716e:	b2f6      	uxtb	r6, r6
 8017170:	9a00      	ldr	r2, [sp, #0]
 8017172:	2a00      	cmp	r2, #0
 8017174:	dc03      	bgt.n	801717e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8017176:	9a03      	ldr	r2, [sp, #12]
 8017178:	2a00      	cmp	r2, #0
 801717a:	f340 8124 	ble.w	80173c6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801717e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8017180:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8017184:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8017188:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801718c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801718e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8017192:	2b00      	cmp	r3, #0
 8017194:	dd0e      	ble.n	80171b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8017196:	1408      	asrs	r0, r1, #16
 8017198:	d405      	bmi.n	80171a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801719a:	4560      	cmp	r0, ip
 801719c:	da03      	bge.n	80171a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801719e:	1410      	asrs	r0, r2, #16
 80171a0:	d401      	bmi.n	80171a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80171a2:	42b8      	cmp	r0, r7
 80171a4:	db07      	blt.n	80171b6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80171a6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80171a8:	4401      	add	r1, r0
 80171aa:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80171ac:	3b01      	subs	r3, #1
 80171ae:	4402      	add	r2, r0
 80171b0:	3402      	adds	r4, #2
 80171b2:	e7ee      	b.n	8017192 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80171b4:	d06e      	beq.n	8017294 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80171b6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80171b8:	1e58      	subs	r0, r3, #1
 80171ba:	fb05 1500 	mla	r5, r5, r0, r1
 80171be:	142d      	asrs	r5, r5, #16
 80171c0:	d45c      	bmi.n	801727c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80171c2:	4565      	cmp	r5, ip
 80171c4:	da5a      	bge.n	801727c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80171c6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80171c8:	fb05 2000 	mla	r0, r5, r0, r2
 80171cc:	1400      	asrs	r0, r0, #16
 80171ce:	d455      	bmi.n	801727c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80171d0:	42b8      	cmp	r0, r7
 80171d2:	da53      	bge.n	801727c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80171d4:	f8bd b004 	ldrh.w	fp, [sp, #4]
 80171d8:	4699      	mov	r9, r3
 80171da:	46a2      	mov	sl, r4
 80171dc:	f1b9 0f00 	cmp.w	r9, #0
 80171e0:	dd54      	ble.n	801728c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80171e2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80171e6:	140d      	asrs	r5, r1, #16
 80171e8:	1410      	asrs	r0, r2, #16
 80171ea:	fb07 5000 	mla	r0, r7, r0, r5
 80171ee:	9d02      	ldr	r5, [sp, #8]
 80171f0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80171f4:	f8ba 5000 	ldrh.w	r5, [sl]
 80171f8:	122f      	asrs	r7, r5, #8
 80171fa:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80171fe:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017202:	fb17 f706 	smulbb	r7, r7, r6
 8017206:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801720a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801720e:	00ed      	lsls	r5, r5, #3
 8017210:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8017214:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8017218:	10c7      	asrs	r7, r0, #3
 801721a:	b2ed      	uxtb	r5, r5
 801721c:	00c0      	lsls	r0, r0, #3
 801721e:	fb18 f806 	smulbb	r8, r8, r6
 8017222:	fb15 f506 	smulbb	r5, r5, r6
 8017226:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801722a:	b2c0      	uxtb	r0, r0
 801722c:	fa1f fc8c 	uxth.w	ip, ip
 8017230:	fb07 870b 	mla	r7, r7, fp, r8
 8017234:	fb00 500b 	mla	r0, r0, fp, r5
 8017238:	b280      	uxth	r0, r0
 801723a:	b2bf      	uxth	r7, r7
 801723c:	f10c 0501 	add.w	r5, ip, #1
 8017240:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8017244:	f107 0801 	add.w	r8, r7, #1
 8017248:	1c45      	adds	r5, r0, #1
 801724a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801724e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8017252:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8017254:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8017258:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801725c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017260:	ea45 0c0c 	orr.w	ip, r5, ip
 8017264:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8017268:	4401      	add	r1, r0
 801726a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801726c:	ea4c 0c08 	orr.w	ip, ip, r8
 8017270:	f82a cb02 	strh.w	ip, [sl], #2
 8017274:	4402      	add	r2, r0
 8017276:	f109 39ff 	add.w	r9, r9, #4294967295
 801727a:	e7af      	b.n	80171dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801727c:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8017280:	f04f 0800 	mov.w	r8, #0
 8017284:	eb03 0008 	add.w	r0, r3, r8
 8017288:	2800      	cmp	r0, #0
 801728a:	dc41      	bgt.n	8017310 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801728c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017290:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017294:	9b00      	ldr	r3, [sp, #0]
 8017296:	2b00      	cmp	r3, #0
 8017298:	f340 8095 	ble.w	80173c6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801729c:	ee30 0a04 	vadd.f32	s0, s0, s8
 80172a0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80172a4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80172a8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80172aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80172ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 80172b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80172b6:	eef0 6a62 	vmov.f32	s13, s5
 80172ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 80172be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80172c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80172c6:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 80172ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80172ce:	eef0 6a43 	vmov.f32	s13, s6
 80172d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80172d6:	ee12 2a90 	vmov	r2, s5
 80172da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80172de:	fb92 f3f3 	sdiv	r3, r2, r3
 80172e2:	ee13 2a10 	vmov	r2, s6
 80172e6:	9311      	str	r3, [sp, #68]	@ 0x44
 80172e8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80172ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80172ee:	9312      	str	r3, [sp, #72]	@ 0x48
 80172f0:	9b00      	ldr	r3, [sp, #0]
 80172f2:	9a03      	ldr	r2, [sp, #12]
 80172f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80172f8:	3b01      	subs	r3, #1
 80172fa:	9300      	str	r3, [sp, #0]
 80172fc:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8017300:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017302:	eeb0 3a67 	vmov.f32	s6, s15
 8017306:	bf08      	it	eq
 8017308:	4613      	moveq	r3, r2
 801730a:	eef0 2a47 	vmov.f32	s5, s14
 801730e:	e72f      	b.n	8017170 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8017310:	140f      	asrs	r7, r1, #16
 8017312:	d451      	bmi.n	80173b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8017314:	f8de 5008 	ldr.w	r5, [lr, #8]
 8017318:	42bd      	cmp	r5, r7
 801731a:	dd4d      	ble.n	80173b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801731c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8017320:	d44a      	bmi.n	80173b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8017322:	f8de 000c 	ldr.w	r0, [lr, #12]
 8017326:	4560      	cmp	r0, ip
 8017328:	dd46      	ble.n	80173b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801732a:	b22d      	sxth	r5, r5
 801732c:	fb0c 7505 	mla	r5, ip, r5, r7
 8017330:	9802      	ldr	r0, [sp, #8]
 8017332:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8017336:	f06f 0501 	mvn.w	r5, #1
 801733a:	fb05 fb08 	mul.w	fp, r5, r8
 801733e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8017342:	f834 500b 	ldrh.w	r5, [r4, fp]
 8017346:	122f      	asrs	r7, r5, #8
 8017348:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801734c:	fb17 f706 	smulbb	r7, r7, r6
 8017350:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017354:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8017358:	00ed      	lsls	r5, r5, #3
 801735a:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801735e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8017362:	10c7      	asrs	r7, r0, #3
 8017364:	b2ed      	uxtb	r5, r5
 8017366:	00c0      	lsls	r0, r0, #3
 8017368:	fb19 f906 	smulbb	r9, r9, r6
 801736c:	fb15 f506 	smulbb	r5, r5, r6
 8017370:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017374:	b2c0      	uxtb	r0, r0
 8017376:	fa1f fc8c 	uxth.w	ip, ip
 801737a:	fb07 970a 	mla	r7, r7, sl, r9
 801737e:	fb00 500a 	mla	r0, r0, sl, r5
 8017382:	b2bf      	uxth	r7, r7
 8017384:	b280      	uxth	r0, r0
 8017386:	f10c 0501 	add.w	r5, ip, #1
 801738a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801738e:	f107 0901 	add.w	r9, r7, #1
 8017392:	1c45      	adds	r5, r0, #1
 8017394:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017398:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801739c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80173a0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80173a4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80173a8:	ea45 0c0c 	orr.w	ip, r5, ip
 80173ac:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80173b0:	ea4c 0c09 	orr.w	ip, ip, r9
 80173b4:	f824 c00b 	strh.w	ip, [r4, fp]
 80173b8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80173ba:	4401      	add	r1, r0
 80173bc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80173be:	f108 38ff 	add.w	r8, r8, #4294967295
 80173c2:	4402      	add	r2, r0
 80173c4:	e75e      	b.n	8017284 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80173c6:	b005      	add	sp, #20
 80173c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080173cc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80173cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80173d0:	b085      	sub	sp, #20
 80173d2:	4693      	mov	fp, r2
 80173d4:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80173d6:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80173d8:	6870      	ldr	r0, [r6, #4]
 80173da:	9101      	str	r1, [sp, #4]
 80173dc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80173e0:	fb00 2404 	mla	r4, r0, r4, r2
 80173e4:	6832      	ldr	r2, [r6, #0]
 80173e6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 80173ea:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80173ee:	682a      	ldr	r2, [r5, #0]
 80173f0:	9202      	str	r2, [sp, #8]
 80173f2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80173f6:	9a01      	ldr	r2, [sp, #4]
 80173f8:	2a00      	cmp	r2, #0
 80173fa:	dc03      	bgt.n	8017404 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80173fc:	f1bb 0f00 	cmp.w	fp, #0
 8017400:	f340 809a 	ble.w	8017538 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8017404:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8017406:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801740a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801740e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8017412:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8017414:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8017418:	2b00      	cmp	r3, #0
 801741a:	dd0c      	ble.n	8017436 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801741c:	1406      	asrs	r6, r0, #16
 801741e:	d405      	bmi.n	801742c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017420:	454e      	cmp	r6, r9
 8017422:	da03      	bge.n	801742c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017424:	1416      	asrs	r6, r2, #16
 8017426:	d401      	bmi.n	801742c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017428:	4546      	cmp	r6, r8
 801742a:	db05      	blt.n	8017438 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801742c:	4470      	add	r0, lr
 801742e:	4462      	add	r2, ip
 8017430:	3b01      	subs	r3, #1
 8017432:	3402      	adds	r4, #2
 8017434:	e7f0      	b.n	8017418 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8017436:	d00f      	beq.n	8017458 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8017438:	1e5e      	subs	r6, r3, #1
 801743a:	fb0e 0706 	mla	r7, lr, r6, r0
 801743e:	143f      	asrs	r7, r7, #16
 8017440:	d541      	bpl.n	80174c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8017442:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8017446:	4698      	mov	r8, r3
 8017448:	9603      	str	r6, [sp, #12]
 801744a:	f1b8 0f00 	cmp.w	r8, #0
 801744e:	dc56      	bgt.n	80174fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8017450:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017454:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017458:	9b01      	ldr	r3, [sp, #4]
 801745a:	2b00      	cmp	r3, #0
 801745c:	dd6c      	ble.n	8017538 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801745e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017462:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017466:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801746a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801746c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017470:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017474:	eeb0 6a62 	vmov.f32	s12, s5
 8017478:	ee61 7a27 	vmul.f32	s15, s2, s15
 801747c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017480:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017484:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8017488:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801748c:	eeb0 6a43 	vmov.f32	s12, s6
 8017490:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017494:	ee12 2a90 	vmov	r2, s5
 8017498:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801749c:	fb92 fef3 	sdiv	lr, r2, r3
 80174a0:	ee13 2a10 	vmov	r2, s6
 80174a4:	fb92 fcf3 	sdiv	ip, r2, r3
 80174a8:	9b01      	ldr	r3, [sp, #4]
 80174aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80174ae:	3b01      	subs	r3, #1
 80174b0:	9301      	str	r3, [sp, #4]
 80174b2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80174b6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80174b8:	eeb0 3a67 	vmov.f32	s6, s15
 80174bc:	bf08      	it	eq
 80174be:	465b      	moveq	r3, fp
 80174c0:	eef0 2a47 	vmov.f32	s5, s14
 80174c4:	e797      	b.n	80173f6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80174c6:	454f      	cmp	r7, r9
 80174c8:	dabb      	bge.n	8017442 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80174ca:	fb0c 2606 	mla	r6, ip, r6, r2
 80174ce:	1436      	asrs	r6, r6, #16
 80174d0:	d4b7      	bmi.n	8017442 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80174d2:	4546      	cmp	r6, r8
 80174d4:	dab5      	bge.n	8017442 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80174d6:	461e      	mov	r6, r3
 80174d8:	46a0      	mov	r8, r4
 80174da:	2e00      	cmp	r6, #0
 80174dc:	ddb8      	ble.n	8017450 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80174de:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80174e2:	9902      	ldr	r1, [sp, #8]
 80174e4:	1417      	asrs	r7, r2, #16
 80174e6:	ea4f 4920 	mov.w	r9, r0, asr #16
 80174ea:	fb0a 9707 	mla	r7, sl, r7, r9
 80174ee:	4470      	add	r0, lr
 80174f0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80174f4:	f828 7b02 	strh.w	r7, [r8], #2
 80174f8:	4462      	add	r2, ip
 80174fa:	3e01      	subs	r6, #1
 80174fc:	e7ed      	b.n	80174da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80174fe:	ea5f 4920 	movs.w	r9, r0, asr #16
 8017502:	d414      	bmi.n	801752e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8017504:	68ae      	ldr	r6, [r5, #8]
 8017506:	454e      	cmp	r6, r9
 8017508:	dd11      	ble.n	801752e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801750a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801750e:	d40e      	bmi.n	801752e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8017510:	68ef      	ldr	r7, [r5, #12]
 8017512:	4557      	cmp	r7, sl
 8017514:	dd0b      	ble.n	801752e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8017516:	b236      	sxth	r6, r6
 8017518:	fb0a 9606 	mla	r6, sl, r6, r9
 801751c:	9f02      	ldr	r7, [sp, #8]
 801751e:	f06f 0101 	mvn.w	r1, #1
 8017522:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8017526:	fb01 f608 	mul.w	r6, r1, r8
 801752a:	9903      	ldr	r1, [sp, #12]
 801752c:	538f      	strh	r7, [r1, r6]
 801752e:	4470      	add	r0, lr
 8017530:	4462      	add	r2, ip
 8017532:	f108 38ff 	add.w	r8, r8, #4294967295
 8017536:	e788      	b.n	801744a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017538:	b005      	add	sp, #20
 801753a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801753e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801753e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017542:	b087      	sub	sp, #28
 8017544:	468b      	mov	fp, r1
 8017546:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8017548:	9203      	str	r2, [sp, #12]
 801754a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801754e:	9204      	str	r2, [sp, #16]
 8017550:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8017554:	6841      	ldr	r1, [r0, #4]
 8017556:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801755a:	fb01 2505 	mla	r5, r1, r5, r2
 801755e:	6802      	ldr	r2, [r0, #0]
 8017560:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8017564:	f8d9 2000 	ldr.w	r2, [r9]
 8017568:	9201      	str	r2, [sp, #4]
 801756a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801756e:	f1bb 0f00 	cmp.w	fp, #0
 8017572:	dc03      	bgt.n	801757c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8017574:	9a03      	ldr	r2, [sp, #12]
 8017576:	2a00      	cmp	r2, #0
 8017578:	f340 8159 	ble.w	801782e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801757c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801757e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8017582:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8017586:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801758a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801758c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8017590:	2b00      	cmp	r3, #0
 8017592:	dd0e      	ble.n	80175b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8017594:	1402      	asrs	r2, r0, #16
 8017596:	d405      	bmi.n	80175a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017598:	42ba      	cmp	r2, r7
 801759a:	da03      	bge.n	80175a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801759c:	140a      	asrs	r2, r1, #16
 801759e:	d401      	bmi.n	80175a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80175a0:	42b2      	cmp	r2, r6
 80175a2:	db07      	blt.n	80175b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80175a4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80175a6:	4410      	add	r0, r2
 80175a8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80175aa:	3b01      	subs	r3, #1
 80175ac:	4411      	add	r1, r2
 80175ae:	3502      	adds	r5, #2
 80175b0:	e7ee      	b.n	8017590 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80175b2:	d017      	beq.n	80175e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80175b4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80175b6:	1e5a      	subs	r2, r3, #1
 80175b8:	fb04 0402 	mla	r4, r4, r2, r0
 80175bc:	1424      	asrs	r4, r4, #16
 80175be:	d409      	bmi.n	80175d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80175c0:	42bc      	cmp	r4, r7
 80175c2:	da07      	bge.n	80175d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80175c4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80175c6:	fb04 1202 	mla	r2, r4, r2, r1
 80175ca:	1412      	asrs	r2, r2, #16
 80175cc:	d402      	bmi.n	80175d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80175ce:	42b2      	cmp	r2, r6
 80175d0:	f2c0 80bf 	blt.w	8017752 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80175d4:	2700      	movs	r7, #0
 80175d6:	19da      	adds	r2, r3, r7
 80175d8:	2a00      	cmp	r2, #0
 80175da:	dc3e      	bgt.n	801765a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80175dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80175e0:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80175e4:	f1bb 0f00 	cmp.w	fp, #0
 80175e8:	f340 8121 	ble.w	801782e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80175ec:	ee30 0a04 	vadd.f32	s0, s0, s8
 80175f0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80175f4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80175f8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80175fa:	f1bb 0b01 	subs.w	fp, fp, #1
 80175fe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017602:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017606:	eeb0 6a62 	vmov.f32	s12, s5
 801760a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801760e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017612:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017616:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801761a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801761e:	eeb0 6a43 	vmov.f32	s12, s6
 8017622:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017626:	ee12 2a90 	vmov	r2, s5
 801762a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801762e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017632:	ee13 2a10 	vmov	r2, s6
 8017636:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801763a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801763c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801763e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017642:	9a03      	ldr	r2, [sp, #12]
 8017644:	9314      	str	r3, [sp, #80]	@ 0x50
 8017646:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801764a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801764c:	eeb0 3a67 	vmov.f32	s6, s15
 8017650:	bf08      	it	eq
 8017652:	4613      	moveq	r3, r2
 8017654:	eef0 2a47 	vmov.f32	s5, s14
 8017658:	e789      	b.n	801756e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801765a:	1406      	asrs	r6, r0, #16
 801765c:	d42d      	bmi.n	80176ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801765e:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8017662:	42b4      	cmp	r4, r6
 8017664:	dd29      	ble.n	80176ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8017666:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801766a:	d426      	bmi.n	80176ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801766c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8017670:	4562      	cmp	r2, ip
 8017672:	dd22      	ble.n	80176ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8017674:	b224      	sxth	r4, r4
 8017676:	9a01      	ldr	r2, [sp, #4]
 8017678:	fb0c 6404 	mla	r4, ip, r4, r6
 801767c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8017680:	0e22      	lsrs	r2, r4, #24
 8017682:	d01a      	beq.n	80176ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8017684:	9e04      	ldr	r6, [sp, #16]
 8017686:	4372      	muls	r2, r6
 8017688:	1c56      	adds	r6, r2, #1
 801768a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801768e:	1212      	asrs	r2, r2, #8
 8017690:	0a26      	lsrs	r6, r4, #8
 8017692:	2aff      	cmp	r2, #255	@ 0xff
 8017694:	9605      	str	r6, [sp, #20]
 8017696:	d116      	bne.n	80176c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8017698:	f06f 0201 	mvn.w	r2, #1
 801769c:	fb02 fc07 	mul.w	ip, r2, r7
 80176a0:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80176a4:	0962      	lsrs	r2, r4, #5
 80176a6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80176aa:	f026 0607 	bic.w	r6, r6, #7
 80176ae:	4316      	orrs	r6, r2
 80176b0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80176b4:	4326      	orrs	r6, r4
 80176b6:	f825 600c 	strh.w	r6, [r5, ip]
 80176ba:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80176bc:	4410      	add	r0, r2
 80176be:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80176c0:	3f01      	subs	r7, #1
 80176c2:	4411      	add	r1, r2
 80176c4:	e787      	b.n	80175d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80176c6:	f06f 0601 	mvn.w	r6, #1
 80176ca:	437e      	muls	r6, r7
 80176cc:	fa1f fa82 	uxth.w	sl, r2
 80176d0:	f835 8006 	ldrh.w	r8, [r5, r6]
 80176d4:	9602      	str	r6, [sp, #8]
 80176d6:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80176da:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 80176de:	43d2      	mvns	r2, r2
 80176e0:	b2d2      	uxtb	r2, r2
 80176e2:	fb1c fc0a 	smulbb	ip, ip, sl
 80176e6:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80176ea:	fb0e ce02 	mla	lr, lr, r2, ip
 80176ee:	b2e4      	uxtb	r4, r4
 80176f0:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80176f4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80176f8:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80176fc:	fa5f f888 	uxtb.w	r8, r8
 8017700:	fb14 f40a 	smulbb	r4, r4, sl
 8017704:	fb08 4402 	mla	r4, r8, r2, r4
 8017708:	fa1f fe8e 	uxth.w	lr, lr
 801770c:	fb16 f60a 	smulbb	r6, r6, sl
 8017710:	b2a4      	uxth	r4, r4
 8017712:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8017716:	fb0c 6c02 	mla	ip, ip, r2, r6
 801771a:	f10e 0201 	add.w	r2, lr, #1
 801771e:	1c66      	adds	r6, r4, #1
 8017720:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8017724:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8017728:	fa1f fc8c 	uxth.w	ip, ip
 801772c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017730:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8017734:	ea46 0e0e 	orr.w	lr, r6, lr
 8017738:	f10c 0601 	add.w	r6, ip, #1
 801773c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8017740:	0976      	lsrs	r6, r6, #5
 8017742:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017746:	9a02      	ldr	r2, [sp, #8]
 8017748:	ea4e 0e06 	orr.w	lr, lr, r6
 801774c:	f825 e002 	strh.w	lr, [r5, r2]
 8017750:	e7b3      	b.n	80176ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8017752:	f04f 0800 	mov.w	r8, #0
 8017756:	eba3 0208 	sub.w	r2, r3, r8
 801775a:	2a00      	cmp	r2, #0
 801775c:	f77f af3e 	ble.w	80175dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017760:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8017764:	1404      	asrs	r4, r0, #16
 8017766:	140a      	asrs	r2, r1, #16
 8017768:	fb06 4202 	mla	r2, r6, r2, r4
 801776c:	9c01      	ldr	r4, [sp, #4]
 801776e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8017772:	0e22      	lsrs	r2, r4, #24
 8017774:	d016      	beq.n	80177a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8017776:	9e04      	ldr	r6, [sp, #16]
 8017778:	4372      	muls	r2, r6
 801777a:	1c56      	adds	r6, r2, #1
 801777c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8017780:	1212      	asrs	r2, r2, #8
 8017782:	2aff      	cmp	r2, #255	@ 0xff
 8017784:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8017788:	d113      	bne.n	80177b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801778a:	0962      	lsrs	r2, r4, #5
 801778c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8017790:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017794:	f026 0607 	bic.w	r6, r6, #7
 8017798:	4316      	orrs	r6, r2
 801779a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801779e:	4326      	orrs	r6, r4
 80177a0:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80177a4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80177a6:	4410      	add	r0, r2
 80177a8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80177aa:	f108 0801 	add.w	r8, r8, #1
 80177ae:	4411      	add	r1, r2
 80177b0:	e7d1      	b.n	8017756 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80177b2:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80177b6:	fa1f fa82 	uxth.w	sl, r2
 80177ba:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80177be:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80177c2:	43d2      	mvns	r2, r2
 80177c4:	b2d2      	uxtb	r2, r2
 80177c6:	fb17 f70a 	smulbb	r7, r7, sl
 80177ca:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80177ce:	fb0c 7c02 	mla	ip, ip, r2, r7
 80177d2:	b2e4      	uxtb	r4, r4
 80177d4:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80177d8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80177dc:	fa5f fe8e 	uxtb.w	lr, lr
 80177e0:	fb14 f40a 	smulbb	r4, r4, sl
 80177e4:	fb0e 4402 	mla	r4, lr, r2, r4
 80177e8:	b2f6      	uxtb	r6, r6
 80177ea:	fa1f fc8c 	uxth.w	ip, ip
 80177ee:	fb16 f60a 	smulbb	r6, r6, sl
 80177f2:	b2a4      	uxth	r4, r4
 80177f4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80177f8:	fb07 6702 	mla	r7, r7, r2, r6
 80177fc:	f10c 0201 	add.w	r2, ip, #1
 8017800:	1c66      	adds	r6, r4, #1
 8017802:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8017806:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801780a:	b2bf      	uxth	r7, r7
 801780c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017810:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8017814:	ea46 0c0c 	orr.w	ip, r6, ip
 8017818:	1c7e      	adds	r6, r7, #1
 801781a:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801781e:	0976      	lsrs	r6, r6, #5
 8017820:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017824:	ea4c 0c06 	orr.w	ip, ip, r6
 8017828:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801782c:	e7ba      	b.n	80177a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801782e:	b007      	add	sp, #28
 8017830:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017834 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017838:	b085      	sub	sp, #20
 801783a:	468b      	mov	fp, r1
 801783c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801783e:	9203      	str	r2, [sp, #12]
 8017840:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8017844:	6841      	ldr	r1, [r0, #4]
 8017846:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801784a:	fb01 2404 	mla	r4, r1, r4, r2
 801784e:	6802      	ldr	r2, [r0, #0]
 8017850:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017854:	f8d8 2000 	ldr.w	r2, [r8]
 8017858:	9201      	str	r2, [sp, #4]
 801785a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801785e:	f1bb 0f00 	cmp.w	fp, #0
 8017862:	dc03      	bgt.n	801786c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8017864:	9a03      	ldr	r2, [sp, #12]
 8017866:	2a00      	cmp	r2, #0
 8017868:	f340 814f 	ble.w	8017b0a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801786c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801786e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8017872:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8017876:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801787a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801787c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8017880:	2b00      	cmp	r3, #0
 8017882:	dd0e      	ble.n	80178a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017884:	1408      	asrs	r0, r1, #16
 8017886:	d405      	bmi.n	8017894 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017888:	42b8      	cmp	r0, r7
 801788a:	da03      	bge.n	8017894 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801788c:	1410      	asrs	r0, r2, #16
 801788e:	d401      	bmi.n	8017894 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017890:	42b0      	cmp	r0, r6
 8017892:	db07      	blt.n	80178a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017894:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8017896:	4401      	add	r1, r0
 8017898:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801789a:	3b01      	subs	r3, #1
 801789c:	4402      	add	r2, r0
 801789e:	3402      	adds	r4, #2
 80178a0:	e7ee      	b.n	8017880 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80178a2:	d017      	beq.n	80178d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80178a4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80178a6:	1e58      	subs	r0, r3, #1
 80178a8:	fb05 1500 	mla	r5, r5, r0, r1
 80178ac:	142d      	asrs	r5, r5, #16
 80178ae:	d409      	bmi.n	80178c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80178b0:	42bd      	cmp	r5, r7
 80178b2:	da07      	bge.n	80178c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80178b4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80178b6:	fb05 2000 	mla	r0, r5, r0, r2
 80178ba:	1400      	asrs	r0, r0, #16
 80178bc:	d402      	bmi.n	80178c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80178be:	42b0      	cmp	r0, r6
 80178c0:	f2c0 80ba 	blt.w	8017a38 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80178c4:	2600      	movs	r6, #0
 80178c6:	1998      	adds	r0, r3, r6
 80178c8:	2800      	cmp	r0, #0
 80178ca:	dc3e      	bgt.n	801794a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80178cc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80178d0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80178d4:	f1bb 0f00 	cmp.w	fp, #0
 80178d8:	f340 8117 	ble.w	8017b0a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80178dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80178e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80178e4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80178e8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80178ea:	f1bb 0b01 	subs.w	fp, fp, #1
 80178ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 80178f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80178f6:	eeb0 6a62 	vmov.f32	s12, s5
 80178fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80178fe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017902:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017906:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801790a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801790e:	eeb0 6a43 	vmov.f32	s12, s6
 8017912:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017916:	ee12 2a90 	vmov	r2, s5
 801791a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801791e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017922:	ee13 2a10 	vmov	r2, s6
 8017926:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801792a:	9311      	str	r3, [sp, #68]	@ 0x44
 801792c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801792e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017932:	9a03      	ldr	r2, [sp, #12]
 8017934:	9312      	str	r3, [sp, #72]	@ 0x48
 8017936:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801793a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801793c:	eeb0 3a67 	vmov.f32	s6, s15
 8017940:	bf08      	it	eq
 8017942:	4613      	moveq	r3, r2
 8017944:	eef0 2a47 	vmov.f32	s5, s14
 8017948:	e789      	b.n	801785e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801794a:	140f      	asrs	r7, r1, #16
 801794c:	d424      	bmi.n	8017998 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801794e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8017952:	42bd      	cmp	r5, r7
 8017954:	dd20      	ble.n	8017998 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017956:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801795a:	d41d      	bmi.n	8017998 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801795c:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8017960:	4560      	cmp	r0, ip
 8017962:	dd19      	ble.n	8017998 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017964:	b22d      	sxth	r5, r5
 8017966:	fb0c 7505 	mla	r5, ip, r5, r7
 801796a:	9801      	ldr	r0, [sp, #4]
 801796c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8017970:	0e07      	lsrs	r7, r0, #24
 8017972:	2fff      	cmp	r7, #255	@ 0xff
 8017974:	d116      	bne.n	80179a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8017976:	f06f 0501 	mvn.w	r5, #1
 801797a:	fb05 f706 	mul.w	r7, r5, r6
 801797e:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8017982:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8017986:	0945      	lsrs	r5, r0, #5
 8017988:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801798c:	ea4c 0505 	orr.w	r5, ip, r5
 8017990:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8017994:	4305      	orrs	r5, r0
 8017996:	53e5      	strh	r5, [r4, r7]
 8017998:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801799a:	4401      	add	r1, r0
 801799c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801799e:	3e01      	subs	r6, #1
 80179a0:	4402      	add	r2, r0
 80179a2:	e790      	b.n	80178c6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80179a4:	b2fd      	uxtb	r5, r7
 80179a6:	2f00      	cmp	r7, #0
 80179a8:	d0f6      	beq.n	8017998 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80179aa:	f06f 0701 	mvn.w	r7, #1
 80179ae:	4377      	muls	r7, r6
 80179b0:	fa1f f985 	uxth.w	r9, r5
 80179b4:	f834 e007 	ldrh.w	lr, [r4, r7]
 80179b8:	9702      	str	r7, [sp, #8]
 80179ba:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80179be:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80179c2:	43ed      	mvns	r5, r5
 80179c4:	b2ed      	uxtb	r5, r5
 80179c6:	fb17 f709 	smulbb	r7, r7, r9
 80179ca:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80179ce:	fb0c 7c05 	mla	ip, ip, r5, r7
 80179d2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80179d6:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80179da:	b2c0      	uxtb	r0, r0
 80179dc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80179e0:	fa5f fe8e 	uxtb.w	lr, lr
 80179e4:	fb10 f009 	smulbb	r0, r0, r9
 80179e8:	fb0e 0005 	mla	r0, lr, r5, r0
 80179ec:	b280      	uxth	r0, r0
 80179ee:	fa1f fc8c 	uxth.w	ip, ip
 80179f2:	fb1a fa09 	smulbb	sl, sl, r9
 80179f6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80179fa:	fb07 a705 	mla	r7, r7, r5, sl
 80179fe:	f100 0a01 	add.w	sl, r0, #1
 8017a02:	f10c 0501 	add.w	r5, ip, #1
 8017a06:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8017a0a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8017a0e:	b2bf      	uxth	r7, r7
 8017a10:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017a14:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8017a18:	ea4a 0c0c 	orr.w	ip, sl, ip
 8017a1c:	f107 0a01 	add.w	sl, r7, #1
 8017a20:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8017a24:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017a28:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017a2c:	9802      	ldr	r0, [sp, #8]
 8017a2e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8017a32:	f824 c000 	strh.w	ip, [r4, r0]
 8017a36:	e7af      	b.n	8017998 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017a38:	f04f 0e00 	mov.w	lr, #0
 8017a3c:	eba3 000e 	sub.w	r0, r3, lr
 8017a40:	2800      	cmp	r0, #0
 8017a42:	f77f af43 	ble.w	80178cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017a46:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8017a4a:	140d      	asrs	r5, r1, #16
 8017a4c:	1410      	asrs	r0, r2, #16
 8017a4e:	fb06 5000 	mla	r0, r6, r0, r5
 8017a52:	9d01      	ldr	r5, [sp, #4]
 8017a54:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8017a58:	0e2e      	lsrs	r6, r5, #24
 8017a5a:	2eff      	cmp	r6, #255	@ 0xff
 8017a5c:	d112      	bne.n	8017a84 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8017a5e:	482c      	ldr	r0, [pc, #176]	@ (8017b10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8017a60:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8017a64:	0968      	lsrs	r0, r5, #5
 8017a66:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8017a6a:	4330      	orrs	r0, r6
 8017a6c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8017a70:	4328      	orrs	r0, r5
 8017a72:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8017a76:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8017a78:	4401      	add	r1, r0
 8017a7a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8017a7c:	f10e 0e01 	add.w	lr, lr, #1
 8017a80:	4402      	add	r2, r0
 8017a82:	e7db      	b.n	8017a3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8017a84:	b2f0      	uxtb	r0, r6
 8017a86:	2e00      	cmp	r6, #0
 8017a88:	d0f5      	beq.n	8017a76 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8017a8a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8017a8e:	fa1f f980 	uxth.w	r9, r0
 8017a92:	ea4f 272c 	mov.w	r7, ip, asr #8
 8017a96:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8017a9a:	43c0      	mvns	r0, r0
 8017a9c:	b2c0      	uxtb	r0, r0
 8017a9e:	fb16 f609 	smulbb	r6, r6, r9
 8017aa2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017aa6:	fb07 6700 	mla	r7, r7, r0, r6
 8017aaa:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8017aae:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8017ab2:	b2ed      	uxtb	r5, r5
 8017ab4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017ab8:	fa5f fc8c 	uxtb.w	ip, ip
 8017abc:	fb15 f509 	smulbb	r5, r5, r9
 8017ac0:	fb0c 5500 	mla	r5, ip, r0, r5
 8017ac4:	b2bf      	uxth	r7, r7
 8017ac6:	fb1a fa09 	smulbb	sl, sl, r9
 8017aca:	b2ad      	uxth	r5, r5
 8017acc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017ad0:	fb06 a600 	mla	r6, r6, r0, sl
 8017ad4:	1c78      	adds	r0, r7, #1
 8017ad6:	f105 0a01 	add.w	sl, r5, #1
 8017ada:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8017ade:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017ae2:	b2b6      	uxth	r6, r6
 8017ae4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017ae8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8017aec:	ea4a 0707 	orr.w	r7, sl, r7
 8017af0:	f106 0a01 	add.w	sl, r6, #1
 8017af4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8017af8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017afc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017b00:	ea47 070a 	orr.w	r7, r7, sl
 8017b04:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8017b08:	e7b5      	b.n	8017a76 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8017b0a:	b005      	add	sp, #20
 8017b0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017b10:	fffff800 	.word	0xfffff800

08017b14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017b14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b18:	b087      	sub	sp, #28
 8017b1a:	468b      	mov	fp, r1
 8017b1c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8017b1e:	9203      	str	r2, [sp, #12]
 8017b20:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8017b24:	9204      	str	r2, [sp, #16]
 8017b26:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8017b2a:	6841      	ldr	r1, [r0, #4]
 8017b2c:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8017b30:	fb01 2404 	mla	r4, r1, r4, r2
 8017b34:	6802      	ldr	r2, [r0, #0]
 8017b36:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017b3a:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8017b3e:	3201      	adds	r2, #1
 8017b40:	f022 0201 	bic.w	r2, r2, #1
 8017b44:	9200      	str	r2, [sp, #0]
 8017b46:	f8d9 2000 	ldr.w	r2, [r9]
 8017b4a:	9201      	str	r2, [sp, #4]
 8017b4c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8017b50:	f1bb 0f00 	cmp.w	fp, #0
 8017b54:	dc03      	bgt.n	8017b5e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8017b56:	9a03      	ldr	r2, [sp, #12]
 8017b58:	2a00      	cmp	r2, #0
 8017b5a:	f340 8169 	ble.w	8017e30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8017b5e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8017b60:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8017b64:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8017b68:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8017b6c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8017b6e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8017b72:	2b00      	cmp	r3, #0
 8017b74:	dd0e      	ble.n	8017b94 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8017b76:	1402      	asrs	r2, r0, #16
 8017b78:	d405      	bmi.n	8017b86 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017b7a:	42ba      	cmp	r2, r7
 8017b7c:	da03      	bge.n	8017b86 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017b7e:	140a      	asrs	r2, r1, #16
 8017b80:	d401      	bmi.n	8017b86 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017b82:	42b2      	cmp	r2, r6
 8017b84:	db07      	blt.n	8017b96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8017b86:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8017b88:	4410      	add	r0, r2
 8017b8a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017b8c:	3b01      	subs	r3, #1
 8017b8e:	4411      	add	r1, r2
 8017b90:	3402      	adds	r4, #2
 8017b92:	e7ee      	b.n	8017b72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8017b94:	d017      	beq.n	8017bc6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8017b96:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8017b98:	1e5a      	subs	r2, r3, #1
 8017b9a:	fb05 0502 	mla	r5, r5, r2, r0
 8017b9e:	142d      	asrs	r5, r5, #16
 8017ba0:	d409      	bmi.n	8017bb6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8017ba2:	42bd      	cmp	r5, r7
 8017ba4:	da07      	bge.n	8017bb6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8017ba6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8017ba8:	fb05 1202 	mla	r2, r5, r2, r1
 8017bac:	1412      	asrs	r2, r2, #16
 8017bae:	d402      	bmi.n	8017bb6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8017bb0:	42b2      	cmp	r2, r6
 8017bb2:	f2c0 80c7 	blt.w	8017d44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8017bb6:	2700      	movs	r7, #0
 8017bb8:	19da      	adds	r2, r3, r7
 8017bba:	2a00      	cmp	r2, #0
 8017bbc:	dc3e      	bgt.n	8017c3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8017bbe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017bc2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017bc6:	f1bb 0f00 	cmp.w	fp, #0
 8017bca:	f340 8131 	ble.w	8017e30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8017bce:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017bd2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017bd6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017bda:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017bdc:	f1bb 0b01 	subs.w	fp, fp, #1
 8017be0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017be4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017be8:	eeb0 6a62 	vmov.f32	s12, s5
 8017bec:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017bf0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017bf4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017bf8:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8017bfc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017c00:	eeb0 6a43 	vmov.f32	s12, s6
 8017c04:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017c08:	ee12 2a90 	vmov	r2, s5
 8017c0c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017c10:	fb92 f3f3 	sdiv	r3, r2, r3
 8017c14:	ee13 2a10 	vmov	r2, s6
 8017c18:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017c1c:	9313      	str	r3, [sp, #76]	@ 0x4c
 8017c1e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017c20:	fb92 f3f3 	sdiv	r3, r2, r3
 8017c24:	9a03      	ldr	r2, [sp, #12]
 8017c26:	9314      	str	r3, [sp, #80]	@ 0x50
 8017c28:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8017c2c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017c2e:	eeb0 3a67 	vmov.f32	s6, s15
 8017c32:	bf08      	it	eq
 8017c34:	4613      	moveq	r3, r2
 8017c36:	eef0 2a47 	vmov.f32	s5, s14
 8017c3a:	e789      	b.n	8017b50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8017c3c:	1405      	asrs	r5, r0, #16
 8017c3e:	d435      	bmi.n	8017cac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017c40:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8017c44:	42aa      	cmp	r2, r5
 8017c46:	dd31      	ble.n	8017cac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017c48:	140e      	asrs	r6, r1, #16
 8017c4a:	d42f      	bmi.n	8017cac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017c4c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8017c50:	42b2      	cmp	r2, r6
 8017c52:	dd2b      	ble.n	8017cac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017c54:	9a00      	ldr	r2, [sp, #0]
 8017c56:	fb06 5502 	mla	r5, r6, r2, r5
 8017c5a:	086a      	lsrs	r2, r5, #1
 8017c5c:	9e01      	ldr	r6, [sp, #4]
 8017c5e:	5cb2      	ldrb	r2, [r6, r2]
 8017c60:	07ee      	lsls	r6, r5, #31
 8017c62:	bf54      	ite	pl
 8017c64:	f002 020f 	andpl.w	r2, r2, #15
 8017c68:	1112      	asrmi	r2, r2, #4
 8017c6a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8017c6e:	b2d2      	uxtb	r2, r2
 8017c70:	b1e2      	cbz	r2, 8017cac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017c72:	9d04      	ldr	r5, [sp, #16]
 8017c74:	436a      	muls	r2, r5
 8017c76:	1c55      	adds	r5, r2, #1
 8017c78:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8017c7c:	4d6e      	ldr	r5, [pc, #440]	@ (8017e38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8017c7e:	682d      	ldr	r5, [r5, #0]
 8017c80:	1212      	asrs	r2, r2, #8
 8017c82:	0a2e      	lsrs	r6, r5, #8
 8017c84:	2aff      	cmp	r2, #255	@ 0xff
 8017c86:	9605      	str	r6, [sp, #20]
 8017c88:	d116      	bne.n	8017cb8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8017c8a:	f06f 0201 	mvn.w	r2, #1
 8017c8e:	fb02 fc07 	mul.w	ip, r2, r7
 8017c92:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8017c96:	096a      	lsrs	r2, r5, #5
 8017c98:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017c9c:	f026 0607 	bic.w	r6, r6, #7
 8017ca0:	4316      	orrs	r6, r2
 8017ca2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8017ca6:	432e      	orrs	r6, r5
 8017ca8:	f824 600c 	strh.w	r6, [r4, ip]
 8017cac:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8017cae:	4410      	add	r0, r2
 8017cb0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017cb2:	3f01      	subs	r7, #1
 8017cb4:	4411      	add	r1, r2
 8017cb6:	e77f      	b.n	8017bb8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8017cb8:	f06f 0601 	mvn.w	r6, #1
 8017cbc:	437e      	muls	r6, r7
 8017cbe:	fa1f fa82 	uxth.w	sl, r2
 8017cc2:	f834 8006 	ldrh.w	r8, [r4, r6]
 8017cc6:	9602      	str	r6, [sp, #8]
 8017cc8:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8017ccc:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8017cd0:	43d2      	mvns	r2, r2
 8017cd2:	b2d2      	uxtb	r2, r2
 8017cd4:	fb1c fc0a 	smulbb	ip, ip, sl
 8017cd8:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8017cdc:	fb0e ce02 	mla	lr, lr, r2, ip
 8017ce0:	b2ed      	uxtb	r5, r5
 8017ce2:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8017ce6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8017cea:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8017cee:	fa5f f888 	uxtb.w	r8, r8
 8017cf2:	fb15 f50a 	smulbb	r5, r5, sl
 8017cf6:	fb08 5502 	mla	r5, r8, r2, r5
 8017cfa:	fa1f fe8e 	uxth.w	lr, lr
 8017cfe:	fb16 f60a 	smulbb	r6, r6, sl
 8017d02:	b2ad      	uxth	r5, r5
 8017d04:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8017d08:	fb0c 6c02 	mla	ip, ip, r2, r6
 8017d0c:	f10e 0201 	add.w	r2, lr, #1
 8017d10:	1c6e      	adds	r6, r5, #1
 8017d12:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8017d16:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8017d1a:	fa1f fc8c 	uxth.w	ip, ip
 8017d1e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017d22:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8017d26:	ea46 0e0e 	orr.w	lr, r6, lr
 8017d2a:	f10c 0601 	add.w	r6, ip, #1
 8017d2e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8017d32:	0976      	lsrs	r6, r6, #5
 8017d34:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017d38:	9a02      	ldr	r2, [sp, #8]
 8017d3a:	ea4e 0e06 	orr.w	lr, lr, r6
 8017d3e:	f824 e002 	strh.w	lr, [r4, r2]
 8017d42:	e7b3      	b.n	8017cac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017d44:	f04f 0800 	mov.w	r8, #0
 8017d48:	eba3 0208 	sub.w	r2, r3, r8
 8017d4c:	2a00      	cmp	r2, #0
 8017d4e:	f77f af36 	ble.w	8017bbe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8017d52:	9e00      	ldr	r6, [sp, #0]
 8017d54:	1402      	asrs	r2, r0, #16
 8017d56:	140d      	asrs	r5, r1, #16
 8017d58:	fb06 2505 	mla	r5, r6, r5, r2
 8017d5c:	086a      	lsrs	r2, r5, #1
 8017d5e:	9e01      	ldr	r6, [sp, #4]
 8017d60:	5cb2      	ldrb	r2, [r6, r2]
 8017d62:	07ed      	lsls	r5, r5, #31
 8017d64:	bf54      	ite	pl
 8017d66:	f002 020f 	andpl.w	r2, r2, #15
 8017d6a:	1112      	asrmi	r2, r2, #4
 8017d6c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8017d70:	b2d2      	uxtb	r2, r2
 8017d72:	b1c2      	cbz	r2, 8017da6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8017d74:	9d04      	ldr	r5, [sp, #16]
 8017d76:	436a      	muls	r2, r5
 8017d78:	1c55      	adds	r5, r2, #1
 8017d7a:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8017d7e:	4d2e      	ldr	r5, [pc, #184]	@ (8017e38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8017d80:	1212      	asrs	r2, r2, #8
 8017d82:	682e      	ldr	r6, [r5, #0]
 8017d84:	2aff      	cmp	r2, #255	@ 0xff
 8017d86:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8017d8a:	d113      	bne.n	8017db4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8017d8c:	0972      	lsrs	r2, r6, #5
 8017d8e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8017d92:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017d96:	f025 0507 	bic.w	r5, r5, #7
 8017d9a:	4315      	orrs	r5, r2
 8017d9c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017da0:	4335      	orrs	r5, r6
 8017da2:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8017da6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8017da8:	4410      	add	r0, r2
 8017daa:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017dac:	f108 0801 	add.w	r8, r8, #1
 8017db0:	4411      	add	r1, r2
 8017db2:	e7c9      	b.n	8017d48 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8017db4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8017db8:	fa1f fa82 	uxth.w	sl, r2
 8017dbc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8017dc0:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8017dc4:	43d2      	mvns	r2, r2
 8017dc6:	b2d2      	uxtb	r2, r2
 8017dc8:	fb17 f70a 	smulbb	r7, r7, sl
 8017dcc:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8017dd0:	fb0c 7c02 	mla	ip, ip, r2, r7
 8017dd4:	b2f6      	uxtb	r6, r6
 8017dd6:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8017dda:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017dde:	fa5f fe8e 	uxtb.w	lr, lr
 8017de2:	fb16 f60a 	smulbb	r6, r6, sl
 8017de6:	fb0e 6602 	mla	r6, lr, r2, r6
 8017dea:	b2ed      	uxtb	r5, r5
 8017dec:	fa1f fc8c 	uxth.w	ip, ip
 8017df0:	fb15 f50a 	smulbb	r5, r5, sl
 8017df4:	b2b6      	uxth	r6, r6
 8017df6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017dfa:	fb07 5702 	mla	r7, r7, r2, r5
 8017dfe:	f10c 0201 	add.w	r2, ip, #1
 8017e02:	1c75      	adds	r5, r6, #1
 8017e04:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8017e08:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8017e0c:	b2bf      	uxth	r7, r7
 8017e0e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017e12:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8017e16:	ea45 0c0c 	orr.w	ip, r5, ip
 8017e1a:	1c7d      	adds	r5, r7, #1
 8017e1c:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8017e20:	096d      	lsrs	r5, r5, #5
 8017e22:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017e26:	ea4c 0c05 	orr.w	ip, ip, r5
 8017e2a:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8017e2e:	e7ba      	b.n	8017da6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8017e30:	b007      	add	sp, #28
 8017e32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017e36:	bf00      	nop
 8017e38:	200152fc 	.word	0x200152fc

08017e3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017e3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e40:	b087      	sub	sp, #28
 8017e42:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 8018150 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8017e46:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8017e48:	9205      	str	r2, [sp, #20]
 8017e4a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8017e4e:	9101      	str	r1, [sp, #4]
 8017e50:	6841      	ldr	r1, [r0, #4]
 8017e52:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8017e56:	fb01 2404 	mla	r4, r1, r4, r2
 8017e5a:	6802      	ldr	r2, [r0, #0]
 8017e5c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017e60:	f8db 2008 	ldr.w	r2, [fp, #8]
 8017e64:	3201      	adds	r2, #1
 8017e66:	f022 0201 	bic.w	r2, r2, #1
 8017e6a:	9202      	str	r2, [sp, #8]
 8017e6c:	f8db 2000 	ldr.w	r2, [fp]
 8017e70:	9203      	str	r2, [sp, #12]
 8017e72:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8017e76:	9a01      	ldr	r2, [sp, #4]
 8017e78:	2a00      	cmp	r2, #0
 8017e7a:	dc03      	bgt.n	8017e84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8017e7c:	9a05      	ldr	r2, [sp, #20]
 8017e7e:	2a00      	cmp	r2, #0
 8017e80:	f340 8162 	ble.w	8018148 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8017e84:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8017e86:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8017e8a:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8017e8e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8017e92:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8017e94:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8017e98:	2b00      	cmp	r3, #0
 8017e9a:	dd0e      	ble.n	8017eba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017e9c:	1402      	asrs	r2, r0, #16
 8017e9e:	d405      	bmi.n	8017eac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017ea0:	42ba      	cmp	r2, r7
 8017ea2:	da03      	bge.n	8017eac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017ea4:	140a      	asrs	r2, r1, #16
 8017ea6:	d401      	bmi.n	8017eac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017ea8:	42b2      	cmp	r2, r6
 8017eaa:	db07      	blt.n	8017ebc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8017eac:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8017eae:	4410      	add	r0, r2
 8017eb0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017eb2:	3b01      	subs	r3, #1
 8017eb4:	4411      	add	r1, r2
 8017eb6:	3402      	adds	r4, #2
 8017eb8:	e7ee      	b.n	8017e98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8017eba:	d017      	beq.n	8017eec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8017ebc:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8017ebe:	1e5a      	subs	r2, r3, #1
 8017ec0:	fb05 0502 	mla	r5, r5, r2, r0
 8017ec4:	142d      	asrs	r5, r5, #16
 8017ec6:	d409      	bmi.n	8017edc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8017ec8:	42bd      	cmp	r5, r7
 8017eca:	da07      	bge.n	8017edc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8017ecc:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8017ece:	fb05 1202 	mla	r2, r5, r2, r1
 8017ed2:	1412      	asrs	r2, r2, #16
 8017ed4:	d402      	bmi.n	8017edc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8017ed6:	42b2      	cmp	r2, r6
 8017ed8:	f2c0 80c3 	blt.w	8018062 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8017edc:	2500      	movs	r5, #0
 8017ede:	195a      	adds	r2, r3, r5
 8017ee0:	2a00      	cmp	r2, #0
 8017ee2:	dc3f      	bgt.n	8017f64 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8017ee4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017ee8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017eec:	9b01      	ldr	r3, [sp, #4]
 8017eee:	2b00      	cmp	r3, #0
 8017ef0:	f340 812a 	ble.w	8018148 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8017ef4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017ef8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017efc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017f00:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017f02:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017f06:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017f0a:	eeb0 6a62 	vmov.f32	s12, s5
 8017f0e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017f12:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017f16:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017f1a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8017f1e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017f22:	eeb0 6a43 	vmov.f32	s12, s6
 8017f26:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017f2a:	ee12 2a90 	vmov	r2, s5
 8017f2e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017f32:	fb92 f3f3 	sdiv	r3, r2, r3
 8017f36:	ee13 2a10 	vmov	r2, s6
 8017f3a:	9313      	str	r3, [sp, #76]	@ 0x4c
 8017f3c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017f3e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017f42:	9314      	str	r3, [sp, #80]	@ 0x50
 8017f44:	9b01      	ldr	r3, [sp, #4]
 8017f46:	9a05      	ldr	r2, [sp, #20]
 8017f48:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017f4c:	3b01      	subs	r3, #1
 8017f4e:	9301      	str	r3, [sp, #4]
 8017f50:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8017f54:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017f56:	eeb0 3a67 	vmov.f32	s6, s15
 8017f5a:	bf08      	it	eq
 8017f5c:	4613      	moveq	r3, r2
 8017f5e:	eef0 2a47 	vmov.f32	s5, s14
 8017f62:	e788      	b.n	8017e76 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8017f64:	1406      	asrs	r6, r0, #16
 8017f66:	d42c      	bmi.n	8017fc2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017f68:	f8db 2008 	ldr.w	r2, [fp, #8]
 8017f6c:	42b2      	cmp	r2, r6
 8017f6e:	dd28      	ble.n	8017fc2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017f70:	140f      	asrs	r7, r1, #16
 8017f72:	d426      	bmi.n	8017fc2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017f74:	f8db 200c 	ldr.w	r2, [fp, #12]
 8017f78:	42ba      	cmp	r2, r7
 8017f7a:	dd22      	ble.n	8017fc2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017f7c:	9a02      	ldr	r2, [sp, #8]
 8017f7e:	fb07 6602 	mla	r6, r7, r2, r6
 8017f82:	0872      	lsrs	r2, r6, #1
 8017f84:	9f03      	ldr	r7, [sp, #12]
 8017f86:	5cba      	ldrb	r2, [r7, r2]
 8017f88:	07f6      	lsls	r6, r6, #31
 8017f8a:	bf54      	ite	pl
 8017f8c:	f002 020f 	andpl.w	r2, r2, #15
 8017f90:	1112      	asrmi	r2, r2, #4
 8017f92:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8017f96:	b2d2      	uxtb	r2, r2
 8017f98:	2aff      	cmp	r2, #255	@ 0xff
 8017f9a:	d118      	bne.n	8017fce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8017f9c:	f8d8 2000 	ldr.w	r2, [r8]
 8017fa0:	f06f 0601 	mvn.w	r6, #1
 8017fa4:	fb06 f705 	mul.w	r7, r6, r5
 8017fa8:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8017fac:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8017fb0:	0956      	lsrs	r6, r2, #5
 8017fb2:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017fb6:	ea4c 0606 	orr.w	r6, ip, r6
 8017fba:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017fbe:	4316      	orrs	r6, r2
 8017fc0:	53e6      	strh	r6, [r4, r7]
 8017fc2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8017fc4:	4410      	add	r0, r2
 8017fc6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017fc8:	3d01      	subs	r5, #1
 8017fca:	4411      	add	r1, r2
 8017fcc:	e787      	b.n	8017ede <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8017fce:	2a00      	cmp	r2, #0
 8017fd0:	d0f7      	beq.n	8017fc2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017fd2:	f06f 0601 	mvn.w	r6, #1
 8017fd6:	436e      	muls	r6, r5
 8017fd8:	f8d8 c000 	ldr.w	ip, [r8]
 8017fdc:	f834 e006 	ldrh.w	lr, [r4, r6]
 8017fe0:	9604      	str	r6, [sp, #16]
 8017fe2:	fa1f f982 	uxth.w	r9, r2
 8017fe6:	ea4f 272e 	mov.w	r7, lr, asr #8
 8017fea:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8017fee:	43d2      	mvns	r2, r2
 8017ff0:	b2d2      	uxtb	r2, r2
 8017ff2:	fb16 f609 	smulbb	r6, r6, r9
 8017ff6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017ffa:	fb07 6702 	mla	r7, r7, r2, r6
 8017ffe:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8018002:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018006:	fa5f fc8c 	uxtb.w	ip, ip
 801800a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801800e:	fa5f fe8e 	uxtb.w	lr, lr
 8018012:	fb1c fc09 	smulbb	ip, ip, r9
 8018016:	fb0e cc02 	mla	ip, lr, r2, ip
 801801a:	b2bf      	uxth	r7, r7
 801801c:	fb1a fa09 	smulbb	sl, sl, r9
 8018020:	fa1f fc8c 	uxth.w	ip, ip
 8018024:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018028:	fb06 a602 	mla	r6, r6, r2, sl
 801802c:	1c7a      	adds	r2, r7, #1
 801802e:	f10c 0a01 	add.w	sl, ip, #1
 8018032:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018036:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801803a:	b2b6      	uxth	r6, r6
 801803c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018040:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8018044:	ea4a 0707 	orr.w	r7, sl, r7
 8018048:	f106 0a01 	add.w	sl, r6, #1
 801804c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018050:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018054:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018058:	9a04      	ldr	r2, [sp, #16]
 801805a:	ea47 070a 	orr.w	r7, r7, sl
 801805e:	52a7      	strh	r7, [r4, r2]
 8018060:	e7af      	b.n	8017fc2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018062:	f04f 0e00 	mov.w	lr, #0
 8018066:	eba3 020e 	sub.w	r2, r3, lr
 801806a:	2a00      	cmp	r2, #0
 801806c:	f77f af3a 	ble.w	8017ee4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018070:	9e02      	ldr	r6, [sp, #8]
 8018072:	1402      	asrs	r2, r0, #16
 8018074:	140d      	asrs	r5, r1, #16
 8018076:	fb06 2505 	mla	r5, r6, r5, r2
 801807a:	086a      	lsrs	r2, r5, #1
 801807c:	9e03      	ldr	r6, [sp, #12]
 801807e:	5cb2      	ldrb	r2, [r6, r2]
 8018080:	07ed      	lsls	r5, r5, #31
 8018082:	bf54      	ite	pl
 8018084:	f002 020f 	andpl.w	r2, r2, #15
 8018088:	1112      	asrmi	r2, r2, #4
 801808a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801808e:	b2d2      	uxtb	r2, r2
 8018090:	2aff      	cmp	r2, #255	@ 0xff
 8018092:	d115      	bne.n	80180c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8018094:	f8d8 5000 	ldr.w	r5, [r8]
 8018098:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 801809c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 80180a0:	096a      	lsrs	r2, r5, #5
 80180a2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80180a6:	4332      	orrs	r2, r6
 80180a8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80180ac:	432a      	orrs	r2, r5
 80180ae:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 80180b2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80180b4:	4410      	add	r0, r2
 80180b6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80180b8:	f10e 0e01 	add.w	lr, lr, #1
 80180bc:	4411      	add	r1, r2
 80180be:	e7d2      	b.n	8018066 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80180c0:	2a00      	cmp	r2, #0
 80180c2:	d0f6      	beq.n	80180b2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80180c4:	f8d8 7000 	ldr.w	r7, [r8]
 80180c8:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80180cc:	fa1f f982 	uxth.w	r9, r2
 80180d0:	ea4f 262c 	mov.w	r6, ip, asr #8
 80180d4:	f3c7 4507 	ubfx	r5, r7, #16, #8
 80180d8:	43d2      	mvns	r2, r2
 80180da:	b2d2      	uxtb	r2, r2
 80180dc:	fb15 f509 	smulbb	r5, r5, r9
 80180e0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80180e4:	fb06 5602 	mla	r6, r6, r2, r5
 80180e8:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80180ec:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80180f0:	b2ff      	uxtb	r7, r7
 80180f2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80180f6:	fa5f fc8c 	uxtb.w	ip, ip
 80180fa:	fb17 f709 	smulbb	r7, r7, r9
 80180fe:	fb0c 7702 	mla	r7, ip, r2, r7
 8018102:	b2b6      	uxth	r6, r6
 8018104:	fb1a fa09 	smulbb	sl, sl, r9
 8018108:	b2bf      	uxth	r7, r7
 801810a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801810e:	fb05 a502 	mla	r5, r5, r2, sl
 8018112:	1c72      	adds	r2, r6, #1
 8018114:	f107 0a01 	add.w	sl, r7, #1
 8018118:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801811c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8018120:	b2ad      	uxth	r5, r5
 8018122:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018126:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801812a:	ea4a 0606 	orr.w	r6, sl, r6
 801812e:	f105 0a01 	add.w	sl, r5, #1
 8018132:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018136:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801813a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801813e:	ea46 060a 	orr.w	r6, r6, sl
 8018142:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8018146:	e7b4      	b.n	80180b2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8018148:	b007      	add	sp, #28
 801814a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801814e:	bf00      	nop
 8018150:	200152fc 	.word	0x200152fc

08018154 <_ZN8touchgfx8LCD16bppD1Ev>:
 8018154:	4770      	bx	lr

08018156 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 8018156:	4770      	bx	lr

08018158 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8018158:	4770      	bx	lr

0801815a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801815a:	4770      	bx	lr

0801815c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801815c:	4770      	bx	lr

0801815e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801815e:	4770      	bx	lr

08018160 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8018160:	4770      	bx	lr

08018162 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8018162:	4770      	bx	lr

08018164 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8018164:	4770      	bx	lr

08018166 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8018166:	4770      	bx	lr

08018168 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8018168:	4770      	bx	lr

0801816a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801816a:	4770      	bx	lr

0801816c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801816c:	4770      	bx	lr

0801816e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801816e:	4770      	bx	lr

08018170 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8018170:	4770      	bx	lr

08018172 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8018172:	4770      	bx	lr

08018174 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8018174:	4770      	bx	lr

08018176 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8018176:	4770      	bx	lr

08018178 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8018178:	4770      	bx	lr

0801817a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801817a:	4770      	bx	lr

0801817c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801817c:	4770      	bx	lr

0801817e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801817e:	4770      	bx	lr

08018180 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8018180:	4770      	bx	lr

08018182 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8018182:	4770      	bx	lr

08018184 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8018184:	4770      	bx	lr

08018186 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8018186:	4770      	bx	lr

08018188 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8018188:	4770      	bx	lr

0801818a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801818a:	4770      	bx	lr

0801818c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801818c:	4770      	bx	lr

0801818e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801818e:	4770      	bx	lr

08018190 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8018190:	4770      	bx	lr

08018192 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8018192:	4770      	bx	lr

08018194 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8018194:	4770      	bx	lr

08018196 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8018196:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801819a:	b088      	sub	sp, #32
 801819c:	ac08      	add	r4, sp, #32
 801819e:	4606      	mov	r6, r0
 80181a0:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 80181a4:	4620      	mov	r0, r4
 80181a6:	4688      	mov	r8, r1
 80181a8:	4691      	mov	r9, r2
 80181aa:	f7fd fc31 	bl	8015a10 <_ZNK8touchgfx6Bitmap7getDataEv>
 80181ae:	6833      	ldr	r3, [r6, #0]
 80181b0:	4605      	mov	r5, r0
 80181b2:	4620      	mov	r0, r4
 80181b4:	699f      	ldr	r7, [r3, #24]
 80181b6:	f7fd fb39 	bl	801582c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80181ba:	4682      	mov	sl, r0
 80181bc:	4620      	mov	r0, r4
 80181be:	f7fd fb69 	bl	8015894 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80181c2:	9500      	str	r5, [sp, #0]
 80181c4:	e9cd a001 	strd	sl, r0, [sp, #4]
 80181c8:	464b      	mov	r3, r9
 80181ca:	a806      	add	r0, sp, #24
 80181cc:	4642      	mov	r2, r8
 80181ce:	4631      	mov	r1, r6
 80181d0:	47b8      	blx	r7
 80181d2:	4628      	mov	r0, r5
 80181d4:	b008      	add	sp, #32
 80181d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

080181dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80181dc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80181e0:	2300      	movs	r3, #0
 80181e2:	9300      	str	r3, [sp, #0]
 80181e4:	4b3d      	ldr	r3, [pc, #244]	@ (80182dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 80181e6:	781b      	ldrb	r3, [r3, #0]
 80181e8:	2b00      	cmp	r3, #0
 80181ea:	d137      	bne.n	801825c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 80181ec:	4a3c      	ldr	r2, [pc, #240]	@ (80182e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80181ee:	f9b2 2000 	ldrsh.w	r2, [r2]
 80181f2:	f8ad 2004 	strh.w	r2, [sp, #4]
 80181f6:	2b00      	cmp	r3, #0
 80181f8:	d132      	bne.n	8018260 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 80181fa:	4b3a      	ldr	r3, [pc, #232]	@ (80182e4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80181fc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8018200:	6808      	ldr	r0, [r1, #0]
 8018202:	6849      	ldr	r1, [r1, #4]
 8018204:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018208:	ac02      	add	r4, sp, #8
 801820a:	ab02      	add	r3, sp, #8
 801820c:	c303      	stmia	r3!, {r0, r1}
 801820e:	4669      	mov	r1, sp
 8018210:	4620      	mov	r0, r4
 8018212:	f7f9 fc49 	bl	8011aa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018216:	4668      	mov	r0, sp
 8018218:	f7f9 fc1e 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801821c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8018220:	f8bd 2000 	ldrh.w	r2, [sp]
 8018224:	4d30      	ldr	r5, [pc, #192]	@ (80182e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8018226:	4413      	add	r3, r2
 8018228:	f8ad 3008 	strh.w	r3, [sp, #8]
 801822c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8018230:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8018234:	6828      	ldr	r0, [r5, #0]
 8018236:	4413      	add	r3, r2
 8018238:	f8ad 300a 	strh.w	r3, [sp, #10]
 801823c:	6803      	ldr	r3, [r0, #0]
 801823e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018240:	4798      	blx	r3
 8018242:	f010 0f01 	tst.w	r0, #1
 8018246:	462f      	mov	r7, r5
 8018248:	d00c      	beq.n	8018264 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801824a:	6828      	ldr	r0, [r5, #0]
 801824c:	6803      	ldr	r3, [r0, #0]
 801824e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8018252:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8018254:	4798      	blx	r3
 8018256:	b004      	add	sp, #16
 8018258:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801825c:	4a21      	ldr	r2, [pc, #132]	@ (80182e4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801825e:	e7c6      	b.n	80181ee <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8018260:	4b1f      	ldr	r3, [pc, #124]	@ (80182e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8018262:	e7cb      	b.n	80181fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8018264:	6838      	ldr	r0, [r7, #0]
 8018266:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801826a:	6803      	ldr	r3, [r0, #0]
 801826c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8018270:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8018272:	4798      	blx	r3
 8018274:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8018278:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801827c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8018280:	fb16 3602 	smlabb	r6, r6, r2, r3
 8018284:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018288:	6838      	ldr	r0, [r7, #0]
 801828a:	6803      	ldr	r3, [r0, #0]
 801828c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801828e:	4798      	blx	r3
 8018290:	4a13      	ldr	r2, [pc, #76]	@ (80182e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8018292:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8018296:	8813      	ldrh	r3, [r2, #0]
 8018298:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801829c:	fb03 1404 	mla	r4, r3, r4, r1
 80182a0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80182a4:	435d      	muls	r5, r3
 80182a6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80182aa:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80182ae:	4691      	mov	r9, r2
 80182b0:	6838      	ldr	r0, [r7, #0]
 80182b2:	42ac      	cmp	r4, r5
 80182b4:	6803      	ldr	r3, [r0, #0]
 80182b6:	d20e      	bcs.n	80182d6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80182b8:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
 80182bc:	4632      	mov	r2, r6
 80182be:	4643      	mov	r3, r8
 80182c0:	4621      	mov	r1, r4
 80182c2:	47d0      	blx	sl
 80182c4:	f8b9 3000 	ldrh.w	r3, [r9]
 80182c8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80182cc:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80182d0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80182d4:	e7ec      	b.n	80182b0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 80182d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80182d8:	4798      	blx	r3
 80182da:	e7bc      	b.n	8018256 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 80182dc:	200152e4 	.word	0x200152e4
 80182e0:	200152e6 	.word	0x200152e6
 80182e4:	200152e8 	.word	0x200152e8
 80182e8:	200152ec 	.word	0x200152ec

080182ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 80182ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80182f0:	b08b      	sub	sp, #44	@ 0x2c
 80182f2:	460f      	mov	r7, r1
 80182f4:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 80182f8:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 80182fc:	4616      	mov	r6, r2
 80182fe:	f1bb 0f00 	cmp.w	fp, #0
 8018302:	d04a      	beq.n	801839a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8018304:	6810      	ldr	r0, [r2, #0]
 8018306:	6851      	ldr	r1, [r2, #4]
 8018308:	ad06      	add	r5, sp, #24
 801830a:	c503      	stmia	r5!, {r0, r1}
 801830c:	6818      	ldr	r0, [r3, #0]
 801830e:	6859      	ldr	r1, [r3, #4]
 8018310:	ad08      	add	r5, sp, #32
 8018312:	c503      	stmia	r5!, {r0, r1}
 8018314:	a806      	add	r0, sp, #24
 8018316:	f7f9 fb9f 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801831a:	4631      	mov	r1, r6
 801831c:	a808      	add	r0, sp, #32
 801831e:	f7f9 fbc3 	bl	8011aa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018322:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8018326:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 801832a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801832e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 8018332:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8018336:	fb16 2103 	smlabb	r1, r6, r3, r2
 801833a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801833e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8018342:	4f5f      	ldr	r7, [pc, #380]	@ (80184c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8018344:	440a      	add	r2, r1
 8018346:	f8ad 2020 	strh.w	r2, [sp, #32]
 801834a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801834e:	6838      	ldr	r0, [r7, #0]
 8018350:	4413      	add	r3, r2
 8018352:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8018356:	6803      	ldr	r3, [r0, #0]
 8018358:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801835a:	4798      	blx	r3
 801835c:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8018360:	46b9      	mov	r9, r7
 8018362:	d11d      	bne.n	80183a0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8018364:	b9fc      	cbnz	r4, 80183a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8018366:	f010 0f01 	tst.w	r0, #1
 801836a:	d01c      	beq.n	80183a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801836c:	f8d9 0000 	ldr.w	r0, [r9]
 8018370:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8018374:	6801      	ldr	r1, [r0, #0]
 8018376:	f8cd b00c 	str.w	fp, [sp, #12]
 801837a:	2700      	movs	r7, #0
 801837c:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8018380:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8018384:	9402      	str	r4, [sp, #8]
 8018386:	b2ad      	uxth	r5, r5
 8018388:	fa1f f488 	uxth.w	r4, r8
 801838c:	9501      	str	r5, [sp, #4]
 801838e:	9400      	str	r4, [sp, #0]
 8018390:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
 8018392:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8018396:	4631      	mov	r1, r6
 8018398:	47a0      	blx	r4
 801839a:	b00b      	add	sp, #44	@ 0x2c
 801839c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80183a0:	f010 0f04 	tst.w	r0, #4
 80183a4:	e7e1      	b.n	801836a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 80183a6:	f8d9 0000 	ldr.w	r0, [r9]
 80183aa:	6803      	ldr	r3, [r0, #0]
 80183ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80183ae:	4798      	blx	r3
 80183b0:	4b44      	ldr	r3, [pc, #272]	@ (80184c4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80183b2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 80183b6:	881a      	ldrh	r2, [r3, #0]
 80183b8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80183bc:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 80183c0:	fb02 1404 	mla	r4, r2, r4, r1
 80183c4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80183c8:	469a      	mov	sl, r3
 80183ca:	fb05 f502 	mul.w	r5, r5, r2
 80183ce:	ea4f 0748 	mov.w	r7, r8, lsl #1
 80183d2:	d059      	beq.n	8018488 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 80183d4:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 80183d8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80183dc:	fa1f f28b 	uxth.w	r2, fp
 80183e0:	fa1f f989 	uxth.w	r9, r9
 80183e4:	469e      	mov	lr, r3
 80183e6:	42ac      	cmp	r4, r5
 80183e8:	d264      	bcs.n	80184b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80183ea:	eb04 0a07 	add.w	sl, r4, r7
 80183ee:	4554      	cmp	r4, sl
 80183f0:	d23d      	bcs.n	801846e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 80183f2:	8821      	ldrh	r1, [r4, #0]
 80183f4:	f836 3b02 	ldrh.w	r3, [r6], #2
 80183f8:	1208      	asrs	r0, r1, #8
 80183fa:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80183fe:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8018402:	fb10 f009 	smulbb	r0, r0, r9
 8018406:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801840a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801840e:	00c9      	lsls	r1, r1, #3
 8018410:	fb0c 0c02 	mla	ip, ip, r2, r0
 8018414:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8018418:	10d8      	asrs	r0, r3, #3
 801841a:	b2c9      	uxtb	r1, r1
 801841c:	00db      	lsls	r3, r3, #3
 801841e:	fa1f fc8c 	uxth.w	ip, ip
 8018422:	fb1b fb09 	smulbb	fp, fp, r9
 8018426:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801842a:	b2db      	uxtb	r3, r3
 801842c:	fb11 f109 	smulbb	r1, r1, r9
 8018430:	fb00 b002 	mla	r0, r0, r2, fp
 8018434:	fb03 1302 	mla	r3, r3, r2, r1
 8018438:	f10c 0b01 	add.w	fp, ip, #1
 801843c:	b29b      	uxth	r3, r3
 801843e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8018442:	b280      	uxth	r0, r0
 8018444:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8018448:	f103 0c01 	add.w	ip, r3, #1
 801844c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018450:	1c43      	adds	r3, r0, #1
 8018452:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018456:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801845a:	0940      	lsrs	r0, r0, #5
 801845c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8018460:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8018464:	ea4c 0c00 	orr.w	ip, ip, r0
 8018468:	f824 cb02 	strh.w	ip, [r4], #2
 801846c:	e7bf      	b.n	80183ee <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801846e:	f8be 3000 	ldrh.w	r3, [lr]
 8018472:	eba3 0308 	sub.w	r3, r3, r8
 8018476:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801847a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801847e:	eba3 0308 	sub.w	r3, r3, r8
 8018482:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8018486:	e7ae      	b.n	80183e6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8018488:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801848c:	f8d9 0000 	ldr.w	r0, [r9]
 8018490:	42ac      	cmp	r4, r5
 8018492:	6803      	ldr	r3, [r0, #0]
 8018494:	d20e      	bcs.n	80184b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8018496:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
 801849a:	4632      	mov	r2, r6
 801849c:	463b      	mov	r3, r7
 801849e:	4621      	mov	r1, r4
 80184a0:	47c0      	blx	r8
 80184a2:	f8ba 3000 	ldrh.w	r3, [sl]
 80184a6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80184aa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80184ae:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80184b2:	e7eb      	b.n	801848c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80184b4:	4b02      	ldr	r3, [pc, #8]	@ (80184c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80184b6:	6818      	ldr	r0, [r3, #0]
 80184b8:	6803      	ldr	r3, [r0, #0]
 80184ba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80184bc:	4798      	blx	r3
 80184be:	e76c      	b.n	801839a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 80184c0:	200152ec 	.word	0x200152ec
 80184c4:	200152e6 	.word	0x200152e6

080184c8 <_ZN8touchgfx8LCD16bppD0Ev>:
 80184c8:	b510      	push	{r4, lr}
 80184ca:	218c      	movs	r1, #140	@ 0x8c
 80184cc:	4604      	mov	r4, r0
 80184ce:	f00c fa2c 	bl	802492a <_ZdlPvj>
 80184d2:	4620      	mov	r0, r4
 80184d4:	bd10      	pop	{r4, pc}

080184d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 80184d6:	b510      	push	{r4, lr}
 80184d8:	2104      	movs	r1, #4
 80184da:	4604      	mov	r4, r0
 80184dc:	f00c fa25 	bl	802492a <_ZdlPvj>
 80184e0:	4620      	mov	r0, r4
 80184e2:	bd10      	pop	{r4, pc}

080184e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 80184e4:	b510      	push	{r4, lr}
 80184e6:	2104      	movs	r1, #4
 80184e8:	4604      	mov	r4, r0
 80184ea:	f00c fa1e 	bl	802492a <_ZdlPvj>
 80184ee:	4620      	mov	r0, r4
 80184f0:	bd10      	pop	{r4, pc}

080184f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 80184f2:	b510      	push	{r4, lr}
 80184f4:	f640 0144 	movw	r1, #2116	@ 0x844
 80184f8:	4604      	mov	r4, r0
 80184fa:	f00c fa16 	bl	802492a <_ZdlPvj>
 80184fe:	4620      	mov	r0, r4
 8018500:	bd10      	pop	{r4, pc}

08018502 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 8018502:	b510      	push	{r4, lr}
 8018504:	f44f 7182 	mov.w	r1, #260	@ 0x104
 8018508:	4604      	mov	r4, r0
 801850a:	f00c fa0e 	bl	802492a <_ZdlPvj>
 801850e:	4620      	mov	r0, r4
 8018510:	bd10      	pop	{r4, pc}

08018512 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8018512:	b510      	push	{r4, lr}
 8018514:	2104      	movs	r1, #4
 8018516:	4604      	mov	r4, r0
 8018518:	f00c fa07 	bl	802492a <_ZdlPvj>
 801851c:	4620      	mov	r0, r4
 801851e:	bd10      	pop	{r4, pc}

08018520 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8018520:	b510      	push	{r4, lr}
 8018522:	2104      	movs	r1, #4
 8018524:	4604      	mov	r4, r0
 8018526:	f00c fa00 	bl	802492a <_ZdlPvj>
 801852a:	4620      	mov	r0, r4
 801852c:	bd10      	pop	{r4, pc}

0801852e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801852e:	b510      	push	{r4, lr}
 8018530:	2104      	movs	r1, #4
 8018532:	4604      	mov	r4, r0
 8018534:	f00c f9f9 	bl	802492a <_ZdlPvj>
 8018538:	4620      	mov	r0, r4
 801853a:	bd10      	pop	{r4, pc}

0801853c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801853c:	b510      	push	{r4, lr}
 801853e:	2104      	movs	r1, #4
 8018540:	4604      	mov	r4, r0
 8018542:	f00c f9f2 	bl	802492a <_ZdlPvj>
 8018546:	4620      	mov	r0, r4
 8018548:	bd10      	pop	{r4, pc}

0801854a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801854a:	b510      	push	{r4, lr}
 801854c:	2104      	movs	r1, #4
 801854e:	4604      	mov	r4, r0
 8018550:	f00c f9eb 	bl	802492a <_ZdlPvj>
 8018554:	4620      	mov	r0, r4
 8018556:	bd10      	pop	{r4, pc}

08018558 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8018558:	b510      	push	{r4, lr}
 801855a:	2104      	movs	r1, #4
 801855c:	4604      	mov	r4, r0
 801855e:	f00c f9e4 	bl	802492a <_ZdlPvj>
 8018562:	4620      	mov	r0, r4
 8018564:	bd10      	pop	{r4, pc}

08018566 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8018566:	b510      	push	{r4, lr}
 8018568:	2104      	movs	r1, #4
 801856a:	4604      	mov	r4, r0
 801856c:	f00c f9dd 	bl	802492a <_ZdlPvj>
 8018570:	4620      	mov	r0, r4
 8018572:	bd10      	pop	{r4, pc}

08018574 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8018574:	b510      	push	{r4, lr}
 8018576:	2104      	movs	r1, #4
 8018578:	4604      	mov	r4, r0
 801857a:	f00c f9d6 	bl	802492a <_ZdlPvj>
 801857e:	4620      	mov	r0, r4
 8018580:	bd10      	pop	{r4, pc}

08018582 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8018582:	b510      	push	{r4, lr}
 8018584:	2104      	movs	r1, #4
 8018586:	4604      	mov	r4, r0
 8018588:	f00c f9cf 	bl	802492a <_ZdlPvj>
 801858c:	4620      	mov	r0, r4
 801858e:	bd10      	pop	{r4, pc}

08018590 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8018590:	b510      	push	{r4, lr}
 8018592:	2104      	movs	r1, #4
 8018594:	4604      	mov	r4, r0
 8018596:	f00c f9c8 	bl	802492a <_ZdlPvj>
 801859a:	4620      	mov	r0, r4
 801859c:	bd10      	pop	{r4, pc}

0801859e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801859e:	b510      	push	{r4, lr}
 80185a0:	2104      	movs	r1, #4
 80185a2:	4604      	mov	r4, r0
 80185a4:	f00c f9c1 	bl	802492a <_ZdlPvj>
 80185a8:	4620      	mov	r0, r4
 80185aa:	bd10      	pop	{r4, pc}

080185ac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80185ac:	b510      	push	{r4, lr}
 80185ae:	2104      	movs	r1, #4
 80185b0:	4604      	mov	r4, r0
 80185b2:	f00c f9ba 	bl	802492a <_ZdlPvj>
 80185b6:	4620      	mov	r0, r4
 80185b8:	bd10      	pop	{r4, pc}

080185ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80185ba:	b510      	push	{r4, lr}
 80185bc:	2104      	movs	r1, #4
 80185be:	4604      	mov	r4, r0
 80185c0:	f00c f9b3 	bl	802492a <_ZdlPvj>
 80185c4:	4620      	mov	r0, r4
 80185c6:	bd10      	pop	{r4, pc}

080185c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80185c8:	b510      	push	{r4, lr}
 80185ca:	2104      	movs	r1, #4
 80185cc:	4604      	mov	r4, r0
 80185ce:	f00c f9ac 	bl	802492a <_ZdlPvj>
 80185d2:	4620      	mov	r0, r4
 80185d4:	bd10      	pop	{r4, pc}

080185d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80185d6:	b510      	push	{r4, lr}
 80185d8:	2104      	movs	r1, #4
 80185da:	4604      	mov	r4, r0
 80185dc:	f00c f9a5 	bl	802492a <_ZdlPvj>
 80185e0:	4620      	mov	r0, r4
 80185e2:	bd10      	pop	{r4, pc}

080185e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80185e4:	b510      	push	{r4, lr}
 80185e6:	2104      	movs	r1, #4
 80185e8:	4604      	mov	r4, r0
 80185ea:	f00c f99e 	bl	802492a <_ZdlPvj>
 80185ee:	4620      	mov	r0, r4
 80185f0:	bd10      	pop	{r4, pc}

080185f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80185f2:	b510      	push	{r4, lr}
 80185f4:	2104      	movs	r1, #4
 80185f6:	4604      	mov	r4, r0
 80185f8:	f00c f997 	bl	802492a <_ZdlPvj>
 80185fc:	4620      	mov	r0, r4
 80185fe:	bd10      	pop	{r4, pc}

08018600 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8018600:	b510      	push	{r4, lr}
 8018602:	2104      	movs	r1, #4
 8018604:	4604      	mov	r4, r0
 8018606:	f00c f990 	bl	802492a <_ZdlPvj>
 801860a:	4620      	mov	r0, r4
 801860c:	bd10      	pop	{r4, pc}

0801860e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801860e:	b510      	push	{r4, lr}
 8018610:	2104      	movs	r1, #4
 8018612:	4604      	mov	r4, r0
 8018614:	f00c f989 	bl	802492a <_ZdlPvj>
 8018618:	4620      	mov	r0, r4
 801861a:	bd10      	pop	{r4, pc}

0801861c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801861c:	b510      	push	{r4, lr}
 801861e:	2104      	movs	r1, #4
 8018620:	4604      	mov	r4, r0
 8018622:	f00c f982 	bl	802492a <_ZdlPvj>
 8018626:	4620      	mov	r0, r4
 8018628:	bd10      	pop	{r4, pc}

0801862a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801862a:	b510      	push	{r4, lr}
 801862c:	2104      	movs	r1, #4
 801862e:	4604      	mov	r4, r0
 8018630:	f00c f97b 	bl	802492a <_ZdlPvj>
 8018634:	4620      	mov	r0, r4
 8018636:	bd10      	pop	{r4, pc}

08018638 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8018638:	b510      	push	{r4, lr}
 801863a:	2104      	movs	r1, #4
 801863c:	4604      	mov	r4, r0
 801863e:	f00c f974 	bl	802492a <_ZdlPvj>
 8018642:	4620      	mov	r0, r4
 8018644:	bd10      	pop	{r4, pc}

08018646 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8018646:	b510      	push	{r4, lr}
 8018648:	2104      	movs	r1, #4
 801864a:	4604      	mov	r4, r0
 801864c:	f00c f96d 	bl	802492a <_ZdlPvj>
 8018650:	4620      	mov	r0, r4
 8018652:	bd10      	pop	{r4, pc}

08018654 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8018654:	b510      	push	{r4, lr}
 8018656:	2104      	movs	r1, #4
 8018658:	4604      	mov	r4, r0
 801865a:	f00c f966 	bl	802492a <_ZdlPvj>
 801865e:	4620      	mov	r0, r4
 8018660:	bd10      	pop	{r4, pc}

08018662 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8018662:	b510      	push	{r4, lr}
 8018664:	2104      	movs	r1, #4
 8018666:	4604      	mov	r4, r0
 8018668:	f00c f95f 	bl	802492a <_ZdlPvj>
 801866c:	4620      	mov	r0, r4
 801866e:	bd10      	pop	{r4, pc}

08018670 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8018670:	b510      	push	{r4, lr}
 8018672:	2104      	movs	r1, #4
 8018674:	4604      	mov	r4, r0
 8018676:	f00c f958 	bl	802492a <_ZdlPvj>
 801867a:	4620      	mov	r0, r4
 801867c:	bd10      	pop	{r4, pc}

0801867e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801867e:	b510      	push	{r4, lr}
 8018680:	2104      	movs	r1, #4
 8018682:	4604      	mov	r4, r0
 8018684:	f00c f951 	bl	802492a <_ZdlPvj>
 8018688:	4620      	mov	r0, r4
 801868a:	bd10      	pop	{r4, pc}

0801868c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801868c:	b510      	push	{r4, lr}
 801868e:	2104      	movs	r1, #4
 8018690:	4604      	mov	r4, r0
 8018692:	f00c f94a 	bl	802492a <_ZdlPvj>
 8018696:	4620      	mov	r0, r4
 8018698:	bd10      	pop	{r4, pc}
	...

0801869c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 801869c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80186a0:	b08f      	sub	sp, #60	@ 0x3c
 80186a2:	4616      	mov	r6, r2
 80186a4:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 80186a8:	9205      	str	r2, [sp, #20]
 80186aa:	4682      	mov	sl, r0
 80186ac:	460d      	mov	r5, r1
 80186ae:	2a00      	cmp	r2, #0
 80186b0:	f000 82b7 	beq.w	8018c22 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 80186b4:	6830      	ldr	r0, [r6, #0]
 80186b6:	6871      	ldr	r1, [r6, #4]
 80186b8:	ac0a      	add	r4, sp, #40	@ 0x28
 80186ba:	c403      	stmia	r4!, {r0, r1}
 80186bc:	6818      	ldr	r0, [r3, #0]
 80186be:	6859      	ldr	r1, [r3, #4]
 80186c0:	ac0c      	add	r4, sp, #48	@ 0x30
 80186c2:	c403      	stmia	r4!, {r0, r1}
 80186c4:	a80a      	add	r0, sp, #40	@ 0x28
 80186c6:	f7f9 f9c7 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80186ca:	4631      	mov	r1, r6
 80186cc:	a80c      	add	r0, sp, #48	@ 0x30
 80186ce:	f7f9 f9eb 	bl	8011aa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80186d2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80186d6:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80186da:	bfd7      	itett	le
 80186dc:	b293      	uxthle	r3, r2
 80186de:	2301      	movgt	r3, #1
 80186e0:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80186e4:	fb91 f3f3 	sdivle	r3, r1, r3
 80186e8:	9300      	str	r3, [sp, #0]
 80186ea:	f105 0308 	add.w	r3, r5, #8
 80186ee:	9900      	ldr	r1, [sp, #0]
 80186f0:	9306      	str	r3, [sp, #24]
 80186f2:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 80186f6:	440b      	add	r3, r1
 80186f8:	3b01      	subs	r3, #1
 80186fa:	fb93 f3f1 	sdiv	r3, r3, r1
 80186fe:	9906      	ldr	r1, [sp, #24]
 8018700:	3b01      	subs	r3, #1
 8018702:	b29b      	uxth	r3, r3
 8018704:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8018708:	9307      	str	r3, [sp, #28]
 801870a:	9900      	ldr	r1, [sp, #0]
 801870c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8018710:	fb93 f0f1 	sdiv	r0, r3, r1
 8018714:	b284      	uxth	r4, r0
 8018716:	9402      	str	r4, [sp, #8]
 8018718:	9d02      	ldr	r5, [sp, #8]
 801871a:	9c00      	ldr	r4, [sp, #0]
 801871c:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8018720:	fb05 3414 	mls	r4, r5, r4, r3
 8018724:	fb14 f402 	smulbb	r4, r4, r2
 8018728:	440c      	add	r4, r1
 801872a:	b2a4      	uxth	r4, r4
 801872c:	2d00      	cmp	r5, #0
 801872e:	d06c      	beq.n	801880a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 8018730:	1e6a      	subs	r2, r5, #1
 8018732:	9806      	ldr	r0, [sp, #24]
 8018734:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 8018738:	9a07      	ldr	r2, [sp, #28]
 801873a:	ba36      	rev	r6, r6
 801873c:	4416      	add	r6, r2
 801873e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8018742:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8018746:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 8018a7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 801874a:	4411      	add	r1, r2
 801874c:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8018750:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 8018754:	4413      	add	r3, r2
 8018756:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801875a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801875e:	9301      	str	r3, [sp, #4]
 8018760:	4bc4      	ldr	r3, [pc, #784]	@ (8018a74 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 8018762:	6818      	ldr	r0, [r3, #0]
 8018764:	6803      	ldr	r3, [r0, #0]
 8018766:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018768:	4798      	blx	r3
 801876a:	4bc3      	ldr	r3, [pc, #780]	@ (8018a78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 801876c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8018770:	881b      	ldrh	r3, [r3, #0]
 8018772:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 8018776:	fb03 2808 	mla	r8, r3, r8, r2
 801877a:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 801877e:	436b      	muls	r3, r5
 8018780:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 8018784:	9309      	str	r3, [sp, #36]	@ 0x24
 8018786:	2500      	movs	r5, #0
 8018788:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801878c:	fb94 f3f3 	sdiv	r3, r4, r3
 8018790:	9304      	str	r3, [sp, #16]
 8018792:	f10a 0304 	add.w	r3, sl, #4
 8018796:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801879a:	4629      	mov	r1, r5
 801879c:	4618      	mov	r0, r3
 801879e:	9308      	str	r3, [sp, #32]
 80187a0:	f00d fa07 	bl	8025bb2 <memset>
 80187a4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80187a6:	4543      	cmp	r3, r8
 80187a8:	f240 8236 	bls.w	8018c18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 80187ac:	2203      	movs	r2, #3
 80187ae:	2107      	movs	r1, #7
 80187b0:	200b      	movs	r0, #11
 80187b2:	2c00      	cmp	r4, #0
 80187b4:	f000 8131 	beq.w	8018a1a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 80187b8:	7833      	ldrb	r3, [r6, #0]
 80187ba:	b2db      	uxtb	r3, r3
 80187bc:	2bfe      	cmp	r3, #254	@ 0xfe
 80187be:	d126      	bne.n	801880e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 80187c0:	f896 e001 	ldrb.w	lr, [r6, #1]
 80187c4:	f896 c002 	ldrb.w	ip, [r6, #2]
 80187c8:	f896 b003 	ldrb.w	fp, [r6, #3]
 80187cc:	fa5f fe8e 	uxtb.w	lr, lr
 80187d0:	fa5f fc8c 	uxtb.w	ip, ip
 80187d4:	f36e 0507 	bfi	r5, lr, #0, #8
 80187d8:	f36c 250f 	bfi	r5, ip, #8, #8
 80187dc:	fa5f fb8b 	uxtb.w	fp, fp
 80187e0:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 80187e4:	f36b 4517 	bfi	r5, fp, #16, #8
 80187e8:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 80187ec:	0e2b      	lsrs	r3, r5, #24
 80187ee:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 80187f2:	fb10 c303 	smlabb	r3, r0, r3, ip
 80187f6:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80187fa:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80187fe:	3c01      	subs	r4, #1
 8018800:	1d37      	adds	r7, r6, #4
 8018802:	b2a4      	uxth	r4, r4
 8018804:	605d      	str	r5, [r3, #4]
 8018806:	463e      	mov	r6, r7
 8018808:	e7d3      	b.n	80187b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 801880a:	9e07      	ldr	r6, [sp, #28]
 801880c:	e797      	b.n	801873e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 801880e:	2bff      	cmp	r3, #255	@ 0xff
 8018810:	d127      	bne.n	8018862 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 8018812:	f896 c001 	ldrb.w	ip, [r6, #1]
 8018816:	78b3      	ldrb	r3, [r6, #2]
 8018818:	f896 e003 	ldrb.w	lr, [r6, #3]
 801881c:	f896 b004 	ldrb.w	fp, [r6, #4]
 8018820:	fa5f fc8c 	uxtb.w	ip, ip
 8018824:	b2db      	uxtb	r3, r3
 8018826:	f36c 0507 	bfi	r5, ip, #0, #8
 801882a:	f363 250f 	bfi	r5, r3, #8, #8
 801882e:	fa5f fe8e 	uxtb.w	lr, lr
 8018832:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8018836:	fb12 330e 	smlabb	r3, r2, lr, r3
 801883a:	fa5f fb8b 	uxtb.w	fp, fp
 801883e:	f36e 4517 	bfi	r5, lr, #16, #8
 8018842:	fb11 330c 	smlabb	r3, r1, ip, r3
 8018846:	f36b 651f 	bfi	r5, fp, #24, #8
 801884a:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 801884e:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 8018852:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 8018856:	3c01      	subs	r4, #1
 8018858:	1d77      	adds	r7, r6, #5
 801885a:	b2a4      	uxth	r4, r4
 801885c:	f8cb 5004 	str.w	r5, [fp, #4]
 8018860:	e7d1      	b.n	8018806 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8018862:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 8018866:	f106 0701 	add.w	r7, r6, #1
 801886a:	d107      	bne.n	801887c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 801886c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8018870:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8018874:	685d      	ldr	r5, [r3, #4]
 8018876:	3c01      	subs	r4, #1
 8018878:	b2a4      	uxth	r4, r4
 801887a:	e7c4      	b.n	8018806 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801887c:	f1bc 0f01 	cmp.w	ip, #1
 8018880:	d12c      	bne.n	80188dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 8018882:	f003 0e03 	and.w	lr, r3, #3
 8018886:	f1ae 0e02 	sub.w	lr, lr, #2
 801888a:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 801888e:	fa5f fe8e 	uxtb.w	lr, lr
 8018892:	f003 0c0c 	and.w	ip, r3, #12
 8018896:	f36e 0507 	bfi	r5, lr, #0, #8
 801889a:	f1ac 0c08 	sub.w	ip, ip, #8
 801889e:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 80188a2:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 80188a6:	f36c 250f 	bfi	r5, ip, #8, #8
 80188aa:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80188ae:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80188b2:	3b02      	subs	r3, #2
 80188b4:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 80188b8:	b2db      	uxtb	r3, r3
 80188ba:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 80188be:	f363 4517 	bfi	r5, r3, #16, #8
 80188c2:	fb12 cc03 	smlabb	ip, r2, r3, ip
 80188c6:	0e2e      	lsrs	r6, r5, #24
 80188c8:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 80188cc:	fb10 c606 	smlabb	r6, r0, r6, ip
 80188d0:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 80188d4:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 80188d8:	6075      	str	r5, [r6, #4]
 80188da:	e7cc      	b.n	8018876 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 80188dc:	f1bc 0f02 	cmp.w	ip, #2
 80188e0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80188e4:	d12a      	bne.n	801893c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 80188e6:	1cb7      	adds	r7, r6, #2
 80188e8:	7876      	ldrb	r6, [r6, #1]
 80188ea:	b2f6      	uxtb	r6, r6
 80188ec:	f006 0c0f 	and.w	ip, r6, #15
 80188f0:	3b20      	subs	r3, #32
 80188f2:	f1ac 0c08 	sub.w	ip, ip, #8
 80188f6:	449c      	add	ip, r3
 80188f8:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 80188fc:	fa5f fc8c 	uxtb.w	ip, ip
 8018900:	f36c 0507 	bfi	r5, ip, #0, #8
 8018904:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 8018908:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 801890c:	fa5f fe8e 	uxtb.w	lr, lr
 8018910:	1136      	asrs	r6, r6, #4
 8018912:	f36e 250f 	bfi	r5, lr, #8, #8
 8018916:	3e08      	subs	r6, #8
 8018918:	4433      	add	r3, r6
 801891a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801891e:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8018922:	b2db      	uxtb	r3, r3
 8018924:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 8018928:	f363 4517 	bfi	r5, r3, #16, #8
 801892c:	fb12 ee03 	smlabb	lr, r2, r3, lr
 8018930:	0e2e      	lsrs	r6, r5, #24
 8018932:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 8018936:	fb10 e606 	smlabb	r6, r0, r6, lr
 801893a:	e7c9      	b.n	80188d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 801893c:	1c5e      	adds	r6, r3, #1
 801893e:	42a6      	cmp	r6, r4
 8018940:	dd4e      	ble.n	80189e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 8018942:	1b36      	subs	r6, r6, r4
 8018944:	2e00      	cmp	r6, #0
 8018946:	dc4e      	bgt.n	80189e6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 8018948:	f8dd b004 	ldr.w	fp, [sp, #4]
 801894c:	2400      	movs	r4, #0
 801894e:	f1bb 0f00 	cmp.w	fp, #0
 8018952:	f340 8122 	ble.w	8018b9a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 8018956:	1c7b      	adds	r3, r7, #1
 8018958:	9303      	str	r3, [sp, #12]
 801895a:	783b      	ldrb	r3, [r7, #0]
 801895c:	b2db      	uxtb	r3, r3
 801895e:	2bfe      	cmp	r3, #254	@ 0xfe
 8018960:	d160      	bne.n	8018a24 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 8018962:	7879      	ldrb	r1, [r7, #1]
 8018964:	78ba      	ldrb	r2, [r7, #2]
 8018966:	78f8      	ldrb	r0, [r7, #3]
 8018968:	b2c9      	uxtb	r1, r1
 801896a:	f361 0507 	bfi	r5, r1, #0, #8
 801896e:	b2d2      	uxtb	r2, r2
 8018970:	1d3b      	adds	r3, r7, #4
 8018972:	f362 250f 	bfi	r5, r2, #8, #8
 8018976:	b2c0      	uxtb	r0, r0
 8018978:	9303      	str	r3, [sp, #12]
 801897a:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801897e:	2303      	movs	r3, #3
 8018980:	fb13 2200 	smlabb	r2, r3, r0, r2
 8018984:	f360 4517 	bfi	r5, r0, #16, #8
 8018988:	2307      	movs	r3, #7
 801898a:	fb13 2101 	smlabb	r1, r3, r1, r2
 801898e:	0e2e      	lsrs	r6, r5, #24
 8018990:	230b      	movs	r3, #11
 8018992:	fb13 1306 	smlabb	r3, r3, r6, r1
 8018996:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801899a:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801899e:	605d      	str	r5, [r3, #4]
 80189a0:	2601      	movs	r6, #1
 80189a2:	4637      	mov	r7, r6
 80189a4:	0e2b      	lsrs	r3, r5, #24
 80189a6:	ebab 0b07 	sub.w	fp, fp, r7
 80189aa:	eba6 0607 	sub.w	r6, r6, r7
 80189ae:	f040 80d3 	bne.w	8018b58 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 80189b2:	b18c      	cbz	r4, 80189d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 80189b4:	4648      	mov	r0, r9
 80189b6:	00a1      	lsls	r1, r4, #2
 80189b8:	f7e9 fb2a 	bl	8002010 <_ZN8touchgfx5paint9flushLineEPmi>
 80189bc:	9b05      	ldr	r3, [sp, #20]
 80189be:	4622      	mov	r2, r4
 80189c0:	4649      	mov	r1, r9
 80189c2:	4640      	mov	r0, r8
 80189c4:	f7e9 fb72 	bl	80020ac <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 80189c8:	4b2c      	ldr	r3, [pc, #176]	@ (8018a7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 80189ca:	4a2d      	ldr	r2, [pc, #180]	@ (8018a80 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 80189cc:	4599      	cmp	r9, r3
 80189ce:	bf08      	it	eq
 80189d0:	4613      	moveq	r3, r2
 80189d2:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80189d6:	4699      	mov	r9, r3
 80189d8:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 80189dc:	2400      	movs	r4, #0
 80189de:	e0da      	b.n	8018b96 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 80189e0:	1ba6      	subs	r6, r4, r6
 80189e2:	b2b4      	uxth	r4, r6
 80189e4:	e70f      	b.n	8018806 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 80189e6:	9b01      	ldr	r3, [sp, #4]
 80189e8:	9a01      	ldr	r2, [sp, #4]
 80189ea:	42b3      	cmp	r3, r6
 80189ec:	bfa8      	it	ge
 80189ee:	4633      	movge	r3, r6
 80189f0:	0e2c      	lsrs	r4, r5, #24
 80189f2:	eba2 0b03 	sub.w	fp, r2, r3
 80189f6:	eba6 0603 	sub.w	r6, r6, r3
 80189fa:	d00b      	beq.n	8018a14 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 80189fc:	f1a9 0104 	sub.w	r1, r9, #4
 8018a00:	461a      	mov	r2, r3
 8018a02:	2a00      	cmp	r2, #0
 8018a04:	dc02      	bgt.n	8018a0c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 8018a06:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018a0a:	e7a0      	b.n	801894e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8018a0c:	f841 5f04 	str.w	r5, [r1, #4]!
 8018a10:	3a01      	subs	r2, #1
 8018a12:	e7f6      	b.n	8018a02 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 8018a14:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8018a18:	e799      	b.n	801894e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8018a1a:	4637      	mov	r7, r6
 8018a1c:	f8dd b004 	ldr.w	fp, [sp, #4]
 8018a20:	4626      	mov	r6, r4
 8018a22:	e794      	b.n	801894e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8018a24:	2bff      	cmp	r3, #255	@ 0xff
 8018a26:	d11d      	bne.n	8018a64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 8018a28:	7878      	ldrb	r0, [r7, #1]
 8018a2a:	78ba      	ldrb	r2, [r7, #2]
 8018a2c:	78fe      	ldrb	r6, [r7, #3]
 8018a2e:	1d7b      	adds	r3, r7, #5
 8018a30:	b2c0      	uxtb	r0, r0
 8018a32:	9303      	str	r3, [sp, #12]
 8018a34:	793b      	ldrb	r3, [r7, #4]
 8018a36:	f360 0507 	bfi	r5, r0, #0, #8
 8018a3a:	b2d2      	uxtb	r2, r2
 8018a3c:	b2d9      	uxtb	r1, r3
 8018a3e:	f362 250f 	bfi	r5, r2, #8, #8
 8018a42:	b2f6      	uxtb	r6, r6
 8018a44:	2303      	movs	r3, #3
 8018a46:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8018a4a:	fb13 2206 	smlabb	r2, r3, r6, r2
 8018a4e:	2307      	movs	r3, #7
 8018a50:	fb13 2000 	smlabb	r0, r3, r0, r2
 8018a54:	f366 4517 	bfi	r5, r6, #16, #8
 8018a58:	230b      	movs	r3, #11
 8018a5a:	f361 651f 	bfi	r5, r1, #24, #8
 8018a5e:	fb13 0301 	smlabb	r3, r3, r1, r0
 8018a62:	e798      	b.n	8018996 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 8018a64:	119e      	asrs	r6, r3, #6
 8018a66:	d10d      	bne.n	8018a84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 8018a68:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8018a6c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8018a70:	685d      	ldr	r5, [r3, #4]
 8018a72:	e795      	b.n	80189a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8018a74:	200152ec 	.word	0x200152ec
 8018a78:	200152e6 	.word	0x200152e6
 8018a7c:	20000180 	.word	0x20000180
 8018a80:	20000280 	.word	0x20000280
 8018a84:	2e01      	cmp	r6, #1
 8018a86:	ea4f 6115 	mov.w	r1, r5, lsr #24
 8018a8a:	d12b      	bne.n	8018ae4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 8018a8c:	f003 0003 	and.w	r0, r3, #3
 8018a90:	3802      	subs	r0, #2
 8018a92:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 8018a96:	b2c0      	uxtb	r0, r0
 8018a98:	f003 020c 	and.w	r2, r3, #12
 8018a9c:	f360 0507 	bfi	r5, r0, #0, #8
 8018aa0:	3a08      	subs	r2, #8
 8018aa2:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8018aa6:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8018aaa:	f362 250f 	bfi	r5, r2, #8, #8
 8018aae:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8018ab2:	1e9f      	subs	r7, r3, #2
 8018ab4:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8018ab8:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8018abc:	b2db      	uxtb	r3, r3
 8018abe:	2703      	movs	r7, #3
 8018ac0:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8018ac4:	fb17 2203 	smlabb	r2, r7, r3, r2
 8018ac8:	2707      	movs	r7, #7
 8018aca:	f363 4517 	bfi	r5, r3, #16, #8
 8018ace:	fb17 2000 	smlabb	r0, r7, r0, r2
 8018ad2:	230b      	movs	r3, #11
 8018ad4:	fb13 0101 	smlabb	r1, r3, r1, r0
 8018ad8:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8018adc:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8018ae0:	604d      	str	r5, [r1, #4]
 8018ae2:	e75e      	b.n	80189a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 8018ae4:	2e02      	cmp	r6, #2
 8018ae6:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8018aea:	d12f      	bne.n	8018b4c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 8018aec:	7878      	ldrb	r0, [r7, #1]
 8018aee:	1cba      	adds	r2, r7, #2
 8018af0:	b2c0      	uxtb	r0, r0
 8018af2:	9203      	str	r2, [sp, #12]
 8018af4:	f000 020f 	and.w	r2, r0, #15
 8018af8:	3b20      	subs	r3, #32
 8018afa:	3a08      	subs	r2, #8
 8018afc:	441a      	add	r2, r3
 8018afe:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 8018b02:	b2d2      	uxtb	r2, r2
 8018b04:	f362 0507 	bfi	r5, r2, #0, #8
 8018b08:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8018b0c:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 8018b10:	b2f6      	uxtb	r6, r6
 8018b12:	1100      	asrs	r0, r0, #4
 8018b14:	f366 250f 	bfi	r5, r6, #8, #8
 8018b18:	3808      	subs	r0, #8
 8018b1a:	4403      	add	r3, r0
 8018b1c:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8018b20:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8018b24:	b2db      	uxtb	r3, r3
 8018b26:	2003      	movs	r0, #3
 8018b28:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 8018b2c:	fb10 6603 	smlabb	r6, r0, r3, r6
 8018b30:	2007      	movs	r0, #7
 8018b32:	f363 4517 	bfi	r5, r3, #16, #8
 8018b36:	fb10 6202 	smlabb	r2, r0, r2, r6
 8018b3a:	230b      	movs	r3, #11
 8018b3c:	fb13 2101 	smlabb	r1, r3, r1, r2
 8018b40:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8018b44:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8018b48:	604d      	str	r5, [r1, #4]
 8018b4a:	e729      	b.n	80189a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8018b4c:	1c5e      	adds	r6, r3, #1
 8018b4e:	45b3      	cmp	fp, r6
 8018b50:	465f      	mov	r7, fp
 8018b52:	bfa8      	it	ge
 8018b54:	4637      	movge	r7, r6
 8018b56:	e725      	b.n	80189a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 8018b58:	193b      	adds	r3, r7, r4
 8018b5a:	2b40      	cmp	r3, #64	@ 0x40
 8018b5c:	dd13      	ble.n	8018b86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 8018b5e:	4648      	mov	r0, r9
 8018b60:	00a1      	lsls	r1, r4, #2
 8018b62:	f7e9 fa55 	bl	8002010 <_ZN8touchgfx5paint9flushLineEPmi>
 8018b66:	4649      	mov	r1, r9
 8018b68:	9b05      	ldr	r3, [sp, #20]
 8018b6a:	4622      	mov	r2, r4
 8018b6c:	4640      	mov	r0, r8
 8018b6e:	f7e9 fa9d 	bl	80020ac <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8018b72:	4b2d      	ldr	r3, [pc, #180]	@ (8018c28 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 8018b74:	4599      	cmp	r9, r3
 8018b76:	bf0c      	ite	eq
 8018b78:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 8018c34 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 8018b7c:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 8018c28 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 8018b80:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8018b84:	2400      	movs	r4, #0
 8018b86:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 8018b8a:	463b      	mov	r3, r7
 8018b8c:	3b01      	subs	r3, #1
 8018b8e:	f842 5b04 	str.w	r5, [r2], #4
 8018b92:	d1fb      	bne.n	8018b8c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 8018b94:	443c      	add	r4, r7
 8018b96:	9f03      	ldr	r7, [sp, #12]
 8018b98:	e6d9      	b.n	801894e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8018b9a:	b15c      	cbz	r4, 8018bb4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 8018b9c:	00a1      	lsls	r1, r4, #2
 8018b9e:	4648      	mov	r0, r9
 8018ba0:	f7e9 fa36 	bl	8002010 <_ZN8touchgfx5paint9flushLineEPmi>
 8018ba4:	4640      	mov	r0, r8
 8018ba6:	9b05      	ldr	r3, [sp, #20]
 8018ba8:	4622      	mov	r2, r4
 8018baa:	4649      	mov	r1, r9
 8018bac:	f7e9 fa7e 	bl	80020ac <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8018bb0:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8018bb4:	4b1d      	ldr	r3, [pc, #116]	@ (8018c2c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 8018bb6:	9a01      	ldr	r2, [sp, #4]
 8018bb8:	881b      	ldrh	r3, [r3, #0]
 8018bba:	1a9b      	subs	r3, r3, r2
 8018bbc:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8018bc0:	9b04      	ldr	r3, [sp, #16]
 8018bc2:	3301      	adds	r3, #1
 8018bc4:	9304      	str	r3, [sp, #16]
 8018bc6:	9a04      	ldr	r2, [sp, #16]
 8018bc8:	9b00      	ldr	r3, [sp, #0]
 8018bca:	4293      	cmp	r3, r2
 8018bcc:	d11d      	bne.n	8018c0a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 8018bce:	9b02      	ldr	r3, [sp, #8]
 8018bd0:	9a02      	ldr	r2, [sp, #8]
 8018bd2:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 8018bd6:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 8018bda:	9808      	ldr	r0, [sp, #32]
 8018bdc:	f103 0b01 	add.w	fp, r3, #1
 8018be0:	9b06      	ldr	r3, [sp, #24]
 8018be2:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8018be6:	9b07      	ldr	r3, [sp, #28]
 8018be8:	2500      	movs	r5, #0
 8018bea:	ba3f      	rev	r7, r7
 8018bec:	1ba4      	subs	r4, r4, r6
 8018bee:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8018bf2:	4629      	mov	r1, r5
 8018bf4:	441f      	add	r7, r3
 8018bf6:	b2a4      	uxth	r4, r4
 8018bf8:	f00c ffdb 	bl	8025bb2 <memset>
 8018bfc:	f8cd b008 	str.w	fp, [sp, #8]
 8018c00:	9504      	str	r5, [sp, #16]
 8018c02:	f7e9 f9fb 	bl	8001ffc <_ZN8touchgfx5paint8tearDownEv>
 8018c06:	463e      	mov	r6, r7
 8018c08:	e5cc      	b.n	80187a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 8018c0a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8018c0e:	9b01      	ldr	r3, [sp, #4]
 8018c10:	1ae4      	subs	r4, r4, r3
 8018c12:	1ba4      	subs	r4, r4, r6
 8018c14:	b2a4      	uxth	r4, r4
 8018c16:	e7f4      	b.n	8018c02 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 8018c18:	4b05      	ldr	r3, [pc, #20]	@ (8018c30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 8018c1a:	6818      	ldr	r0, [r3, #0]
 8018c1c:	6803      	ldr	r3, [r0, #0]
 8018c1e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018c20:	4798      	blx	r3
 8018c22:	b00f      	add	sp, #60	@ 0x3c
 8018c24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c28:	20000180 	.word	0x20000180
 8018c2c:	200152e6 	.word	0x200152e6
 8018c30:	200152ec 	.word	0x200152ec
 8018c34:	20000280 	.word	0x20000280

08018c38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8018c38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c3c:	b08f      	sub	sp, #60	@ 0x3c
 8018c3e:	461c      	mov	r4, r3
 8018c40:	9205      	str	r2, [sp, #20]
 8018c42:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8018c46:	9100      	str	r1, [sp, #0]
 8018c48:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8018c4a:	9201      	str	r2, [sp, #4]
 8018c4c:	2a00      	cmp	r2, #0
 8018c4e:	f000 8115 	beq.w	8018e7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 8018c52:	6820      	ldr	r0, [r4, #0]
 8018c54:	6861      	ldr	r1, [r4, #4]
 8018c56:	aa0a      	add	r2, sp, #40	@ 0x28
 8018c58:	c203      	stmia	r2!, {r0, r1}
 8018c5a:	6818      	ldr	r0, [r3, #0]
 8018c5c:	6859      	ldr	r1, [r3, #4]
 8018c5e:	aa0c      	add	r2, sp, #48	@ 0x30
 8018c60:	c203      	stmia	r2!, {r0, r1}
 8018c62:	a80a      	add	r0, sp, #40	@ 0x28
 8018c64:	f7f8 fef8 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018c68:	4621      	mov	r1, r4
 8018c6a:	a80c      	add	r0, sp, #48	@ 0x30
 8018c6c:	f7f8 ff1c 	bl	8011aa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018c70:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8018c74:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8018c78:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8018c7c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8018c80:	bfde      	ittt	le
 8018c82:	b2b3      	uxthle	r3, r6
 8018c84:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8018c88:	fb92 f3f3 	sdivle	r3, r2, r3
 8018c8c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8018c90:	bfc8      	it	gt
 8018c92:	2301      	movgt	r3, #1
 8018c94:	fb92 f1f3 	sdiv	r1, r2, r3
 8018c98:	fa1f fc81 	uxth.w	ip, r1
 8018c9c:	fb0c 2413 	mls	r4, ip, r3, r2
 8018ca0:	fb14 f406 	smulbb	r4, r4, r6
 8018ca4:	441d      	add	r5, r3
 8018ca6:	4404      	add	r4, r0
 8018ca8:	4661      	mov	r1, ip
 8018caa:	3d01      	subs	r5, #1
 8018cac:	b2a4      	uxth	r4, r4
 8018cae:	fb95 f5f3 	sdiv	r5, r5, r3
 8018cb2:	b131      	cbz	r1, 8018cc2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 8018cb4:	9b05      	ldr	r3, [sp, #20]
 8018cb6:	9900      	ldr	r1, [sp, #0]
 8018cb8:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8018cbc:	ba1b      	rev	r3, r3
 8018cbe:	4419      	add	r1, r3
 8018cc0:	9100      	str	r1, [sp, #0]
 8018cc2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8018cc6:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 8018cca:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8018cce:	4418      	add	r0, r3
 8018cd0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8018cd4:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8018cd8:	441a      	add	r2, r3
 8018cda:	4b6a      	ldr	r3, [pc, #424]	@ (8018e84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8018cdc:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8018ce0:	6818      	ldr	r0, [r3, #0]
 8018ce2:	6803      	ldr	r3, [r0, #0]
 8018ce4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018ce6:	4798      	blx	r3
 8018ce8:	4967      	ldr	r1, [pc, #412]	@ (8018e88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8018cea:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8018cee:	880b      	ldrh	r3, [r1, #0]
 8018cf0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8018cf4:	9109      	str	r1, [sp, #36]	@ 0x24
 8018cf6:	fb03 c202 	mla	r2, r3, r2, ip
 8018cfa:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018cfe:	4373      	muls	r3, r6
 8018d00:	b2ad      	uxth	r5, r5
 8018d02:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018d06:	00ad      	lsls	r5, r5, #2
 8018d08:	9306      	str	r3, [sp, #24]
 8018d0a:	1d2b      	adds	r3, r5, #4
 8018d0c:	9307      	str	r3, [sp, #28]
 8018d0e:	9b01      	ldr	r3, [sp, #4]
 8018d10:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8018d14:	9103      	str	r1, [sp, #12]
 8018d16:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8018d1a:	2c00      	cmp	r4, #0
 8018d1c:	bf0c      	ite	eq
 8018d1e:	46c6      	moveq	lr, r8
 8018d20:	f04f 0e00 	movne.w	lr, #0
 8018d24:	2300      	movs	r3, #0
 8018d26:	b292      	uxth	r2, r2
 8018d28:	fa1f fe8e 	uxth.w	lr, lr
 8018d2c:	9302      	str	r3, [sp, #8]
 8018d2e:	9204      	str	r2, [sp, #16]
 8018d30:	9a06      	ldr	r2, [sp, #24]
 8018d32:	4282      	cmp	r2, r0
 8018d34:	f240 809d 	bls.w	8018e72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8018d38:	b963      	cbnz	r3, 8018d54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8018d3a:	9b00      	ldr	r3, [sp, #0]
 8018d3c:	781a      	ldrb	r2, [r3, #0]
 8018d3e:	0993      	lsrs	r3, r2, #6
 8018d40:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8018d44:	9202      	str	r2, [sp, #8]
 8018d46:	1e5a      	subs	r2, r3, #1
 8018d48:	2a02      	cmp	r2, #2
 8018d4a:	d815      	bhi.n	8018d78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 8018d4c:	9a00      	ldr	r2, [sp, #0]
 8018d4e:	3201      	adds	r2, #1
 8018d50:	9200      	str	r2, [sp, #0]
 8018d52:	b29b      	uxth	r3, r3
 8018d54:	b1b4      	cbz	r4, 8018d84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 8018d56:	429c      	cmp	r4, r3
 8018d58:	bf95      	itete	ls
 8018d5a:	1b1c      	subls	r4, r3, r4
 8018d5c:	1ae4      	subhi	r4, r4, r3
 8018d5e:	fa1f fa84 	uxthls.w	sl, r4
 8018d62:	b2a4      	uxthhi	r4, r4
 8018d64:	bf87      	ittee	hi
 8018d66:	4671      	movhi	r1, lr
 8018d68:	f04f 0a00 	movhi.w	sl, #0
 8018d6c:	fa1f f188 	uxthls.w	r1, r8
 8018d70:	2400      	movls	r4, #0
 8018d72:	4653      	mov	r3, sl
 8018d74:	468e      	mov	lr, r1
 8018d76:	e7db      	b.n	8018d30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8018d78:	9a00      	ldr	r2, [sp, #0]
 8018d7a:	9b00      	ldr	r3, [sp, #0]
 8018d7c:	3202      	adds	r2, #2
 8018d7e:	785b      	ldrb	r3, [r3, #1]
 8018d80:	9200      	str	r2, [sp, #0]
 8018d82:	e7e7      	b.n	8018d54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8018d84:	2202      	movs	r2, #2
 8018d86:	4615      	mov	r5, r2
 8018d88:	9907      	ldr	r1, [sp, #28]
 8018d8a:	9a02      	ldr	r2, [sp, #8]
 8018d8c:	fb15 1202 	smlabb	r2, r5, r2, r1
 8018d90:	9905      	ldr	r1, [sp, #20]
 8018d92:	4573      	cmp	r3, lr
 8018d94:	f831 c002 	ldrh.w	ip, [r1, r2]
 8018d98:	9a01      	ldr	r2, [sp, #4]
 8018d9a:	bf2b      	itete	cs
 8018d9c:	eba3 0a0e 	subcs.w	sl, r3, lr
 8018da0:	ebae 0103 	subcc.w	r1, lr, r3
 8018da4:	46f1      	movcs	r9, lr
 8018da6:	4699      	movcc	r9, r3
 8018da8:	bf27      	ittee	cs
 8018daa:	fa1f fa8a 	uxthcs.w	sl, sl
 8018dae:	4621      	movcs	r1, r4
 8018db0:	b289      	uxthcc	r1, r1
 8018db2:	46a2      	movcc	sl, r4
 8018db4:	2aff      	cmp	r2, #255	@ 0xff
 8018db6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018dba:	d105      	bne.n	8018dc8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8018dbc:	4481      	add	r9, r0
 8018dbe:	4581      	cmp	r9, r0
 8018dc0:	d045      	beq.n	8018e4e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8018dc2:	f820 cb02 	strh.w	ip, [r0], #2
 8018dc6:	e7fa      	b.n	8018dbe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8018dc8:	9d03      	ldr	r5, [sp, #12]
 8018dca:	ea4f 222c 	mov.w	r2, ip, asr #8
 8018dce:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8018dd2:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8018dd6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018dda:	436a      	muls	r2, r5
 8018ddc:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8018de0:	fa5f fc8c 	uxtb.w	ip, ip
 8018de4:	9208      	str	r2, [sp, #32]
 8018de6:	fb0b fb05 	mul.w	fp, fp, r5
 8018dea:	fb0c fc05 	mul.w	ip, ip, r5
 8018dee:	4481      	add	r9, r0
 8018df0:	4581      	cmp	r9, r0
 8018df2:	d02c      	beq.n	8018e4e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8018df4:	8802      	ldrh	r2, [r0, #0]
 8018df6:	9d04      	ldr	r5, [sp, #16]
 8018df8:	9f04      	ldr	r7, [sp, #16]
 8018dfa:	1216      	asrs	r6, r2, #8
 8018dfc:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8018e00:	fb16 f605 	smulbb	r6, r6, r5
 8018e04:	9d08      	ldr	r5, [sp, #32]
 8018e06:	442e      	add	r6, r5
 8018e08:	10d5      	asrs	r5, r2, #3
 8018e0a:	00d2      	lsls	r2, r2, #3
 8018e0c:	b2d2      	uxtb	r2, r2
 8018e0e:	fb12 f207 	smulbb	r2, r2, r7
 8018e12:	b2b6      	uxth	r6, r6
 8018e14:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018e18:	4462      	add	r2, ip
 8018e1a:	fb15 f507 	smulbb	r5, r5, r7
 8018e1e:	b292      	uxth	r2, r2
 8018e20:	1c77      	adds	r7, r6, #1
 8018e22:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8018e26:	1c57      	adds	r7, r2, #1
 8018e28:	445d      	add	r5, fp
 8018e2a:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8018e2e:	b2ad      	uxth	r5, r5
 8018e30:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018e34:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8018e38:	4316      	orrs	r6, r2
 8018e3a:	1c6a      	adds	r2, r5, #1
 8018e3c:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8018e40:	096d      	lsrs	r5, r5, #5
 8018e42:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018e46:	432e      	orrs	r6, r5
 8018e48:	f820 6b02 	strh.w	r6, [r0], #2
 8018e4c:	e7d0      	b.n	8018df0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 8018e4e:	4573      	cmp	r3, lr
 8018e50:	d38f      	bcc.n	8018d72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8018e52:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8018e56:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018e58:	fa1f f188 	uxth.w	r1, r8
 8018e5c:	1a64      	subs	r4, r4, r1
 8018e5e:	881b      	ldrh	r3, [r3, #0]
 8018e60:	b2a4      	uxth	r4, r4
 8018e62:	2c00      	cmp	r4, #0
 8018e64:	eba3 0308 	sub.w	r3, r3, r8
 8018e68:	bf18      	it	ne
 8018e6a:	2100      	movne	r1, #0
 8018e6c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018e70:	e77f      	b.n	8018d72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8018e72:	4b04      	ldr	r3, [pc, #16]	@ (8018e84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8018e74:	6818      	ldr	r0, [r3, #0]
 8018e76:	6803      	ldr	r3, [r0, #0]
 8018e78:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018e7a:	4798      	blx	r3
 8018e7c:	b00f      	add	sp, #60	@ 0x3c
 8018e7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018e82:	bf00      	nop
 8018e84:	200152ec 	.word	0x200152ec
 8018e88:	200152e6 	.word	0x200152e6

08018e8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8018e8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e90:	b09f      	sub	sp, #124	@ 0x7c
 8018e92:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8018e96:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8018e9a:	9209      	str	r2, [sp, #36]	@ 0x24
 8018e9c:	461d      	mov	r5, r3
 8018e9e:	4604      	mov	r4, r0
 8018ea0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018ea2:	2a00      	cmp	r2, #0
 8018ea4:	f000 81eb 	beq.w	801927e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 8018ea8:	6828      	ldr	r0, [r5, #0]
 8018eaa:	6869      	ldr	r1, [r5, #4]
 8018eac:	aa1a      	add	r2, sp, #104	@ 0x68
 8018eae:	c203      	stmia	r2!, {r0, r1}
 8018eb0:	6818      	ldr	r0, [r3, #0]
 8018eb2:	6859      	ldr	r1, [r3, #4]
 8018eb4:	aa1c      	add	r2, sp, #112	@ 0x70
 8018eb6:	c203      	stmia	r2!, {r0, r1}
 8018eb8:	a81a      	add	r0, sp, #104	@ 0x68
 8018eba:	f7f8 fdcd 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018ebe:	4629      	mov	r1, r5
 8018ec0:	a81c      	add	r0, sp, #112	@ 0x70
 8018ec2:	f7f8 fdf1 	bl	8011aa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018ec6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8018eca:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 8018ece:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 8018ed2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8018ed6:	bfd7      	itett	le
 8018ed8:	b29a      	uxthle	r2, r3
 8018eda:	2201      	movgt	r2, #1
 8018edc:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8018ee0:	fb91 f2f2 	sdivle	r2, r1, r2
 8018ee4:	9202      	str	r2, [sp, #8]
 8018ee6:	9802      	ldr	r0, [sp, #8]
 8018ee8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8018eec:	fb92 f0f0 	sdiv	r0, r2, r0
 8018ef0:	b280      	uxth	r0, r0
 8018ef2:	9010      	str	r0, [sp, #64]	@ 0x40
 8018ef4:	9902      	ldr	r1, [sp, #8]
 8018ef6:	9802      	ldr	r0, [sp, #8]
 8018ef8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8018efa:	4488      	add	r8, r1
 8018efc:	fb05 2510 	mls	r5, r5, r0, r2
 8018f00:	fb15 f503 	smulbb	r5, r5, r3
 8018f04:	f108 38ff 	add.w	r8, r8, #4294967295
 8018f08:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8018f0c:	fb98 f8f1 	sdiv	r8, r8, r1
 8018f10:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8018f14:	440d      	add	r5, r1
 8018f16:	4419      	add	r1, r3
 8018f18:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8018f1c:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8018f20:	441a      	add	r2, r3
 8018f22:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8018f26:	9304      	str	r3, [sp, #16]
 8018f28:	4b95      	ldr	r3, [pc, #596]	@ (8019180 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8018f2a:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8018f2e:	6818      	ldr	r0, [r3, #0]
 8018f30:	6803      	ldr	r3, [r0, #0]
 8018f32:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018f34:	4798      	blx	r3
 8018f36:	4b93      	ldr	r3, [pc, #588]	@ (8019184 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8018f38:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8018f3c:	881a      	ldrh	r2, [r3, #0]
 8018f3e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8018f42:	9318      	str	r3, [sp, #96]	@ 0x60
 8018f44:	fb02 7101 	mla	r1, r2, r1, r7
 8018f48:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018f4c:	4356      	muls	r6, r2
 8018f4e:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8018f52:	f108 0801 	add.w	r8, r8, #1
 8018f56:	920a      	str	r2, [sp, #40]	@ 0x28
 8018f58:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018f5a:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8018f5e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8018f60:	fa1f f888 	uxth.w	r8, r8
 8018f64:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8018f68:	f108 0204 	add.w	r2, r8, #4
 8018f6c:	9211      	str	r2, [sp, #68]	@ 0x44
 8018f6e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8018f70:	4b85      	ldr	r3, [pc, #532]	@ (8019188 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8018f72:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8018f76:	b2ad      	uxth	r5, r5
 8018f78:	9215      	str	r2, [sp, #84]	@ 0x54
 8018f7a:	2d00      	cmp	r5, #0
 8018f7c:	9a04      	ldr	r2, [sp, #16]
 8018f7e:	f04f 0100 	mov.w	r1, #0
 8018f82:	bf18      	it	ne
 8018f84:	2200      	movne	r2, #0
 8018f86:	1b1b      	subs	r3, r3, r4
 8018f88:	b292      	uxth	r2, r2
 8018f8a:	910d      	str	r1, [sp, #52]	@ 0x34
 8018f8c:	9319      	str	r3, [sp, #100]	@ 0x64
 8018f8e:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8018f90:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018f92:	fa11 f383 	uxtah	r3, r1, r3
 8018f96:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8018f98:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8018f9c:	3304      	adds	r3, #4
 8018f9e:	9306      	str	r3, [sp, #24]
 8018fa0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018fa2:	4283      	cmp	r3, r0
 8018fa4:	f240 8166 	bls.w	8019274 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 8018fa8:	9902      	ldr	r1, [sp, #8]
 8018faa:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8018fae:	fbb5 f3f3 	udiv	r3, r5, r3
 8018fb2:	1acb      	subs	r3, r1, r3
 8018fb4:	b29b      	uxth	r3, r3
 8018fb6:	9316      	str	r3, [sp, #88]	@ 0x58
 8018fb8:	9b06      	ldr	r3, [sp, #24]
 8018fba:	9e06      	ldr	r6, [sp, #24]
 8018fbc:	7859      	ldrb	r1, [r3, #1]
 8018fbe:	789b      	ldrb	r3, [r3, #2]
 8018fc0:	7836      	ldrb	r6, [r6, #0]
 8018fc2:	9612      	str	r6, [sp, #72]	@ 0x48
 8018fc4:	021b      	lsls	r3, r3, #8
 8018fc6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8018fca:	9906      	ldr	r1, [sp, #24]
 8018fcc:	78c9      	ldrb	r1, [r1, #3]
 8018fce:	430b      	orrs	r3, r1
 8018fd0:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8018fd2:	3601      	adds	r6, #1
 8018fd4:	4419      	add	r1, r3
 8018fd6:	9605      	str	r6, [sp, #20]
 8018fd8:	1c4e      	adds	r6, r1, #1
 8018fda:	9603      	str	r6, [sp, #12]
 8018fdc:	7849      	ldrb	r1, [r1, #1]
 8018fde:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8018fe0:	0209      	lsls	r1, r1, #8
 8018fe2:	5cf3      	ldrb	r3, [r6, r3]
 8018fe4:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 8018fe8:	4319      	orrs	r1, r3
 8018fea:	b28b      	uxth	r3, r1
 8018fec:	930c      	str	r3, [sp, #48]	@ 0x30
 8018fee:	2300      	movs	r3, #0
 8018ff0:	f04f 0a01 	mov.w	sl, #1
 8018ff4:	9307      	str	r3, [sp, #28]
 8018ff6:	469c      	mov	ip, r3
 8018ff8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8018ffc:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8019000:	46d3      	mov	fp, sl
 8019002:	4657      	mov	r7, sl
 8019004:	930e      	str	r3, [sp, #56]	@ 0x38
 8019006:	2d00      	cmp	r5, #0
 8019008:	d07e      	beq.n	8019108 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801900a:	42af      	cmp	r7, r5
 801900c:	d26e      	bcs.n	80190ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801900e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019010:	9201      	str	r2, [sp, #4]
 8019012:	1bed      	subs	r5, r5, r7
 8019014:	4283      	cmp	r3, r0
 8019016:	b2ad      	uxth	r5, r5
 8019018:	d802      	bhi.n	8019020 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801901a:	e073      	b.n	8019104 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801901c:	2b00      	cmp	r3, #0
 801901e:	d15f      	bne.n	80190e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 8019020:	9b03      	ldr	r3, [sp, #12]
 8019022:	785b      	ldrb	r3, [r3, #1]
 8019024:	f1cb 0207 	rsb	r2, fp, #7
 8019028:	4093      	lsls	r3, r2
 801902a:	005b      	lsls	r3, r3, #1
 801902c:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8019030:	9b03      	ldr	r3, [sp, #12]
 8019032:	781b      	ldrb	r3, [r3, #0]
 8019034:	fa43 f30b 	asr.w	r3, r3, fp
 8019038:	b2db      	uxtb	r3, r3
 801903a:	4313      	orrs	r3, r2
 801903c:	f10b 0201 	add.w	r2, fp, #1
 8019040:	fa5f fb82 	uxtb.w	fp, r2
 8019044:	9a03      	ldr	r2, [sp, #12]
 8019046:	f1bb 0f08 	cmp.w	fp, #8
 801904a:	bf15      	itete	ne
 801904c:	3201      	addne	r2, #1
 801904e:	3202      	addeq	r2, #2
 8019050:	9203      	strne	r2, [sp, #12]
 8019052:	9203      	streq	r2, [sp, #12]
 8019054:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8019056:	b29f      	uxth	r7, r3
 8019058:	bf08      	it	eq
 801905a:	f04f 0b00 	moveq.w	fp, #0
 801905e:	42ba      	cmp	r2, r7
 8019060:	d309      	bcc.n	8019076 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 8019062:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8019066:	2301      	movs	r3, #1
 8019068:	9a05      	ldr	r2, [sp, #20]
 801906a:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 801906e:	d30e      	bcc.n	801908e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 8019070:	469a      	mov	sl, r3
 8019072:	2600      	movs	r6, #0
 8019074:	e035      	b.n	80190e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 8019076:	9b05      	ldr	r3, [sp, #20]
 8019078:	429f      	cmp	r7, r3
 801907a:	d318      	bcc.n	80190ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801907c:	eb04 030a 	add.w	r3, r4, sl
 8019080:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8019084:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8019088:	f10a 0301 	add.w	r3, sl, #1
 801908c:	b29b      	uxth	r3, r3
 801908e:	9a05      	ldr	r2, [sp, #20]
 8019090:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8019094:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8019096:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801909a:	7116      	strb	r6, [r2, #4]
 801909c:	f10a 0601 	add.w	r6, sl, #1
 80190a0:	80d1      	strh	r1, [r2, #6]
 80190a2:	7156      	strb	r6, [r2, #5]
 80190a4:	9a05      	ldr	r2, [sp, #20]
 80190a6:	3201      	adds	r2, #1
 80190a8:	b292      	uxth	r2, r2
 80190aa:	9205      	str	r2, [sp, #20]
 80190ac:	e7e0      	b.n	8019070 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 80190ae:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 80190b2:	463a      	mov	r2, r7
 80190b4:	795b      	ldrb	r3, [r3, #5]
 80190b6:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 80190ba:	4426      	add	r6, r4
 80190bc:	9919      	ldr	r1, [sp, #100]	@ 0x64
 80190be:	eb01 0c06 	add.w	ip, r1, r6
 80190c2:	f1bc 0f00 	cmp.w	ip, #0
 80190c6:	dd07      	ble.n	80190d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 80190c8:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80190cc:	f892 c004 	ldrb.w	ip, [r2, #4]
 80190d0:	f806 cd01 	strb.w	ip, [r6, #-1]!
 80190d4:	88d2      	ldrh	r2, [r2, #6]
 80190d6:	e7f1      	b.n	80190bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 80190d8:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 80190dc:	b29b      	uxth	r3, r3
 80190de:	e7c3      	b.n	8019068 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 80190e0:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80190e2:	970c      	str	r7, [sp, #48]	@ 0x30
 80190e4:	9a01      	ldr	r2, [sp, #4]
 80190e6:	46b4      	mov	ip, r6
 80190e8:	461f      	mov	r7, r3
 80190ea:	e78c      	b.n	8019006 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 80190ec:	1b7b      	subs	r3, r7, r5
 80190ee:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80190f2:	9201      	str	r2, [sp, #4]
 80190f4:	eb0c 0605 	add.w	r6, ip, r5
 80190f8:	b29b      	uxth	r3, r3
 80190fa:	b2b6      	uxth	r6, r6
 80190fc:	2500      	movs	r5, #0
 80190fe:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019100:	4282      	cmp	r2, r0
 8019102:	d88b      	bhi.n	801901c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8019104:	9a01      	ldr	r2, [sp, #4]
 8019106:	e74b      	b.n	8018fa0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 8019108:	4297      	cmp	r7, r2
 801910a:	d332      	bcc.n	8019172 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801910c:	1abb      	subs	r3, r7, r2
 801910e:	b29b      	uxth	r3, r3
 8019110:	9208      	str	r2, [sp, #32]
 8019112:	9501      	str	r5, [sp, #4]
 8019114:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8019116:	29ff      	cmp	r1, #255	@ 0xff
 8019118:	9908      	ldr	r1, [sp, #32]
 801911a:	eb0c 0601 	add.w	r6, ip, r1
 801911e:	d135      	bne.n	801918c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 8019120:	f1a0 0e02 	sub.w	lr, r0, #2
 8019124:	b2b6      	uxth	r6, r6
 8019126:	45b4      	cmp	ip, r6
 8019128:	f040 808c 	bne.w	8019244 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801912c:	9908      	ldr	r1, [sp, #32]
 801912e:	4297      	cmp	r7, r2
 8019130:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8019134:	d3e2      	bcc.n	80190fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 8019136:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8019138:	9904      	ldr	r1, [sp, #16]
 801913a:	8812      	ldrh	r2, [r2, #0]
 801913c:	1a52      	subs	r2, r2, r1
 801913e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019142:	9a07      	ldr	r2, [sp, #28]
 8019144:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8019146:	3201      	adds	r2, #1
 8019148:	428a      	cmp	r2, r1
 801914a:	9207      	str	r2, [sp, #28]
 801914c:	f040 8087 	bne.w	801925e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 8019150:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8019154:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8019158:	9b04      	ldr	r3, [sp, #16]
 801915a:	1bed      	subs	r5, r5, r7
 801915c:	b2ad      	uxth	r5, r5
 801915e:	2d00      	cmp	r5, #0
 8019160:	bf08      	it	eq
 8019162:	461a      	moveq	r2, r3
 8019164:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019166:	bf18      	it	ne
 8019168:	2200      	movne	r2, #0
 801916a:	3301      	adds	r3, #1
 801916c:	930d      	str	r3, [sp, #52]	@ 0x34
 801916e:	b292      	uxth	r2, r2
 8019170:	e70d      	b.n	8018f8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 8019172:	1bd1      	subs	r1, r2, r7
 8019174:	b28b      	uxth	r3, r1
 8019176:	9301      	str	r3, [sp, #4]
 8019178:	9708      	str	r7, [sp, #32]
 801917a:	462b      	mov	r3, r5
 801917c:	e7ca      	b.n	8019114 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801917e:	bf00      	nop
 8019180:	200152ec 	.word	0x200152ec
 8019184:	200152e6 	.word	0x200152e6
 8019188:	fffff7fb 	.word	0xfffff7fb
 801918c:	b2b6      	uxth	r6, r6
 801918e:	900b      	str	r0, [sp, #44]	@ 0x2c
 8019190:	45b4      	cmp	ip, r6
 8019192:	d0cb      	beq.n	801912c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 8019194:	f10c 0101 	add.w	r1, ip, #1
 8019198:	44a4      	add	ip, r4
 801919a:	9117      	str	r1, [sp, #92]	@ 0x5c
 801919c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 80191a0:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80191a2:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 80191a6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80191a8:	f8b1 c000 	ldrh.w	ip, [r1]
 80191ac:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80191ae:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 80191b2:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80191b6:	fb1e fe01 	smulbb	lr, lr, r1
 80191ba:	ea4f 2825 	mov.w	r8, r5, asr #8
 80191be:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80191c0:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 80191c4:	fb08 e801 	mla	r8, r8, r1, lr
 80191c8:	ea4f 09ec 	mov.w	r9, ip, asr #3
 80191cc:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80191ce:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80191d2:	fb19 f901 	smulbb	r9, r9, r1
 80191d6:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 80191da:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80191dc:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80191e0:	fb0e 9e01 	mla	lr, lr, r1, r9
 80191e4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80191e8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80191ea:	fa5f fc8c 	uxtb.w	ip, ip
 80191ee:	fb1c fc01 	smulbb	ip, ip, r1
 80191f2:	00ed      	lsls	r5, r5, #3
 80191f4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80191f6:	b2ed      	uxtb	r5, r5
 80191f8:	fb05 c501 	mla	r5, r5, r1, ip
 80191fc:	fa1f f888 	uxth.w	r8, r8
 8019200:	fa1f fe8e 	uxth.w	lr, lr
 8019204:	b2ad      	uxth	r5, r5
 8019206:	f108 0c01 	add.w	ip, r8, #1
 801920a:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801920e:	f10e 0901 	add.w	r9, lr, #1
 8019212:	f105 0c01 	add.w	ip, r5, #1
 8019216:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801921a:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801921e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019222:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8019226:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801922a:	ea4c 0808 	orr.w	r8, ip, r8
 801922e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8019230:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 8019234:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8019238:	ea48 0809 	orr.w	r8, r8, r9
 801923c:	f821 8b02 	strh.w	r8, [r1], #2
 8019240:	910b      	str	r1, [sp, #44]	@ 0x2c
 8019242:	e7a5      	b.n	8019190 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8019244:	f10c 0801 	add.w	r8, ip, #1
 8019248:	44a4      	add	ip, r4
 801924a:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801924c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8019250:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8019254:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8019258:	fa1f fc88 	uxth.w	ip, r8
 801925c:	e763      	b.n	8019126 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801925e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8019262:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8019266:	1aad      	subs	r5, r5, r2
 8019268:	b2ad      	uxth	r5, r5
 801926a:	2d00      	cmp	r5, #0
 801926c:	bf18      	it	ne
 801926e:	2200      	movne	r2, #0
 8019270:	9201      	str	r2, [sp, #4]
 8019272:	e744      	b.n	80190fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 8019274:	4b03      	ldr	r3, [pc, #12]	@ (8019284 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 8019276:	6818      	ldr	r0, [r3, #0]
 8019278:	6803      	ldr	r3, [r0, #0]
 801927a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801927c:	4798      	blx	r3
 801927e:	b01f      	add	sp, #124	@ 0x7c
 8019280:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019284:	200152ec 	.word	0x200152ec

08019288 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 8019288:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801928c:	b093      	sub	sp, #76	@ 0x4c
 801928e:	4616      	mov	r6, r2
 8019290:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 8019294:	9003      	str	r0, [sp, #12]
 8019296:	460d      	mov	r5, r1
 8019298:	9201      	str	r2, [sp, #4]
 801929a:	2a00      	cmp	r2, #0
 801929c:	f000 8304 	beq.w	80198a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 80192a0:	6830      	ldr	r0, [r6, #0]
 80192a2:	6871      	ldr	r1, [r6, #4]
 80192a4:	ac0e      	add	r4, sp, #56	@ 0x38
 80192a6:	c403      	stmia	r4!, {r0, r1}
 80192a8:	6818      	ldr	r0, [r3, #0]
 80192aa:	6859      	ldr	r1, [r3, #4]
 80192ac:	ac10      	add	r4, sp, #64	@ 0x40
 80192ae:	c403      	stmia	r4!, {r0, r1}
 80192b0:	a80e      	add	r0, sp, #56	@ 0x38
 80192b2:	f7f8 fbd1 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80192b6:	4631      	mov	r1, r6
 80192b8:	a810      	add	r0, sp, #64	@ 0x40
 80192ba:	f7f8 fbf5 	bl	8011aa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80192be:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 80192c2:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80192c6:	bfd7      	itett	le
 80192c8:	b293      	uxthle	r3, r2
 80192ca:	2301      	movgt	r3, #1
 80192cc:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80192d0:	fb91 f3f3 	sdivle	r3, r1, r3
 80192d4:	9304      	str	r3, [sp, #16]
 80192d6:	f105 0308 	add.w	r3, r5, #8
 80192da:	9904      	ldr	r1, [sp, #16]
 80192dc:	9308      	str	r3, [sp, #32]
 80192de:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 80192e2:	440b      	add	r3, r1
 80192e4:	3b01      	subs	r3, #1
 80192e6:	fb93 f3f1 	sdiv	r3, r3, r1
 80192ea:	9908      	ldr	r1, [sp, #32]
 80192ec:	3b01      	subs	r3, #1
 80192ee:	b29b      	uxth	r3, r3
 80192f0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80192f4:	9309      	str	r3, [sp, #36]	@ 0x24
 80192f6:	9904      	ldr	r1, [sp, #16]
 80192f8:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 80192fc:	fb93 f0f1 	sdiv	r0, r3, r1
 8019300:	b284      	uxth	r4, r0
 8019302:	9405      	str	r4, [sp, #20]
 8019304:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8019308:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 801930c:	fb05 3914 	mls	r9, r5, r4, r3
 8019310:	fb19 f902 	smulbb	r9, r9, r2
 8019314:	4489      	add	r9, r1
 8019316:	fa1f f989 	uxth.w	r9, r9
 801931a:	2d00      	cmp	r5, #0
 801931c:	d05d      	beq.n	80193da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 801931e:	1e6a      	subs	r2, r5, #1
 8019320:	9808      	ldr	r0, [sp, #32]
 8019322:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 8019326:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8019328:	fa9a fa8a 	rev.w	sl, sl
 801932c:	4492      	add	sl, r2
 801932e:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8019332:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8019336:	4411      	add	r1, r2
 8019338:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801933c:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 8019340:	4413      	add	r3, r2
 8019342:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8019346:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 801934a:	9302      	str	r3, [sp, #8]
 801934c:	4bcb      	ldr	r3, [pc, #812]	@ (801967c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 801934e:	6818      	ldr	r0, [r3, #0]
 8019350:	6803      	ldr	r3, [r0, #0]
 8019352:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019354:	4798      	blx	r3
 8019356:	4bca      	ldr	r3, [pc, #808]	@ (8019680 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 8019358:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801935c:	881b      	ldrh	r3, [r3, #0]
 801935e:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 8019362:	fb03 2404 	mla	r4, r3, r4, r2
 8019366:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801936a:	436b      	muls	r3, r5
 801936c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019370:	930d      	str	r3, [sp, #52]	@ 0x34
 8019372:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8019376:	fb99 f3f3 	sdiv	r3, r9, r3
 801937a:	9306      	str	r3, [sp, #24]
 801937c:	9b01      	ldr	r3, [sp, #4]
 801937e:	43db      	mvns	r3, r3
 8019380:	b2db      	uxtb	r3, r3
 8019382:	930a      	str	r3, [sp, #40]	@ 0x28
 8019384:	9b03      	ldr	r3, [sp, #12]
 8019386:	3304      	adds	r3, #4
 8019388:	4618      	mov	r0, r3
 801938a:	2280      	movs	r2, #128	@ 0x80
 801938c:	2100      	movs	r1, #0
 801938e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019390:	f00c fc0f 	bl	8025bb2 <memset>
 8019394:	4bbb      	ldr	r3, [pc, #748]	@ (8019684 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 8019396:	9300      	str	r3, [sp, #0]
 8019398:	2300      	movs	r3, #0
 801939a:	f04f 0600 	mov.w	r6, #0
 801939e:	9307      	str	r3, [sp, #28]
 80193a0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80193a2:	42a3      	cmp	r3, r4
 80193a4:	f240 827b 	bls.w	801989e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 80193a8:	f04f 0e07 	mov.w	lr, #7
 80193ac:	f1b9 0f00 	cmp.w	r9, #0
 80193b0:	f000 8159 	beq.w	8019666 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 80193b4:	f89a 5000 	ldrb.w	r5, [sl]
 80193b8:	b2ed      	uxtb	r5, r5
 80193ba:	11aa      	asrs	r2, r5, #6
 80193bc:	f10a 0701 	add.w	r7, sl, #1
 80193c0:	d10e      	bne.n	80193e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 80193c2:	9b03      	ldr	r3, [sp, #12]
 80193c4:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 80193c8:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80193cc:	88ae      	ldrh	r6, [r5, #4]
 80193ce:	f109 39ff 	add.w	r9, r9, #4294967295
 80193d2:	fa1f f989 	uxth.w	r9, r9
 80193d6:	46ba      	mov	sl, r7
 80193d8:	e7e8      	b.n	80193ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 80193da:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 80193de:	e7a6      	b.n	801932e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 80193e0:	2a01      	cmp	r2, #1
 80193e2:	d129      	bne.n	8019438 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 80193e4:	f3c6 0304 	ubfx	r3, r6, #0, #5
 80193e8:	f005 0203 	and.w	r2, r5, #3
 80193ec:	3b02      	subs	r3, #2
 80193ee:	4413      	add	r3, r2
 80193f0:	f003 031f 	and.w	r3, r3, #31
 80193f4:	f3c5 0281 	ubfx	r2, r5, #2, #2
 80193f8:	f363 0604 	bfi	r6, r3, #0, #5
 80193fc:	3a02      	subs	r2, #2
 80193fe:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 8019402:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8019406:	f3c5 1501 	ubfx	r5, r5, #4, #2
 801940a:	f362 164a 	bfi	r6, r2, #5, #6
 801940e:	3d02      	subs	r5, #2
 8019410:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 8019414:	f005 051f 	and.w	r5, r5, #31
 8019418:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801941c:	2103      	movs	r1, #3
 801941e:	fb11 2205 	smlabb	r2, r1, r5, r2
 8019422:	fb1e 2303 	smlabb	r3, lr, r3, r2
 8019426:	9a03      	ldr	r2, [sp, #12]
 8019428:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801942c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019430:	f365 26cf 	bfi	r6, r5, #11, #5
 8019434:	809e      	strh	r6, [r3, #4]
 8019436:	e7ca      	b.n	80193ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 8019438:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801943c:	2a02      	cmp	r2, #2
 801943e:	b2ab      	uxth	r3, r5
 8019440:	d136      	bne.n	80194b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 8019442:	2101      	movs	r1, #1
 8019444:	fb12 1205 	smlabb	r2, r2, r5, r1
 8019448:	4492      	add	sl, r2
 801944a:	463a      	mov	r2, r7
 801944c:	4552      	cmp	r2, sl
 801944e:	d01c      	beq.n	801948a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 8019450:	4694      	mov	ip, r2
 8019452:	f04f 0b03 	mov.w	fp, #3
 8019456:	f81c 1b02 	ldrb.w	r1, [ip], #2
 801945a:	7852      	ldrb	r2, [r2, #1]
 801945c:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8019460:	f3c1 1045 	ubfx	r0, r1, #5, #6
 8019464:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 8019468:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801946c:	f001 021f 	and.w	r2, r1, #31
 8019470:	fb1b 0008 	smlabb	r0, fp, r8, r0
 8019474:	fb1e 0002 	smlabb	r0, lr, r2, r0
 8019478:	9a03      	ldr	r2, [sp, #12]
 801947a:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801947e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8019482:	460e      	mov	r6, r1
 8019484:	8081      	strh	r1, [r0, #4]
 8019486:	4662      	mov	r2, ip
 8019488:	e7e0      	b.n	801944c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 801948a:	4599      	cmp	r9, r3
 801948c:	d20b      	bcs.n	80194a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 801948e:	eba5 0509 	sub.w	r5, r5, r9
 8019492:	2d00      	cmp	r5, #0
 8019494:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 8019498:	f300 8209 	bgt.w	80198ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 801949c:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80194a0:	2301      	movs	r3, #1
 80194a2:	9307      	str	r3, [sp, #28]
 80194a4:	e00c      	b.n	80194c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80194a6:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80194aa:	eba9 0903 	sub.w	r9, r9, r3
 80194ae:	e790      	b.n	80193d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 80194b0:	4599      	cmp	r9, r3
 80194b2:	d2fa      	bcs.n	80194aa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 80194b4:	eba5 0509 	sub.w	r5, r5, r9
 80194b8:	2d00      	cmp	r5, #0
 80194ba:	dc1d      	bgt.n	80194f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 80194bc:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80194c0:	f04f 0b00 	mov.w	fp, #0
 80194c4:	f1b8 0f00 	cmp.w	r8, #0
 80194c8:	f340 81a1 	ble.w	801980e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 80194cc:	783b      	ldrb	r3, [r7, #0]
 80194ce:	b2db      	uxtb	r3, r3
 80194d0:	119a      	asrs	r2, r3, #6
 80194d2:	f107 0a01 	add.w	sl, r7, #1
 80194d6:	f040 80d7 	bne.w	8019688 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 80194da:	9a03      	ldr	r2, [sp, #12]
 80194dc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80194e0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80194e4:	889e      	ldrh	r6, [r3, #4]
 80194e6:	9b01      	ldr	r3, [sp, #4]
 80194e8:	2bff      	cmp	r3, #255	@ 0xff
 80194ea:	f040 81e9 	bne.w	80198c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 80194ee:	8026      	strh	r6, [r4, #0]
 80194f0:	f108 38ff 	add.w	r8, r8, #4294967295
 80194f4:	3402      	adds	r4, #2
 80194f6:	e0be      	b.n	8019676 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 80194f8:	9b02      	ldr	r3, [sp, #8]
 80194fa:	9a02      	ldr	r2, [sp, #8]
 80194fc:	42ab      	cmp	r3, r5
 80194fe:	bfa8      	it	ge
 8019500:	462b      	movge	r3, r5
 8019502:	eba2 0803 	sub.w	r8, r2, r3
 8019506:	9a07      	ldr	r2, [sp, #28]
 8019508:	1aed      	subs	r5, r5, r3
 801950a:	2a00      	cmp	r2, #0
 801950c:	d05a      	beq.n	80195c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 801950e:	9a01      	ldr	r2, [sp, #4]
 8019510:	2aff      	cmp	r2, #255	@ 0xff
 8019512:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019516:	d049      	beq.n	80195ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8019518:	f8bd e004 	ldrh.w	lr, [sp, #4]
 801951c:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 8019520:	42a3      	cmp	r3, r4
 8019522:	f240 80a5 	bls.w	8019670 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8019526:	46bc      	mov	ip, r7
 8019528:	8820      	ldrh	r0, [r4, #0]
 801952a:	f81c 2b02 	ldrb.w	r2, [ip], #2
 801952e:	7879      	ldrb	r1, [r7, #1]
 8019530:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8019534:	b212      	sxth	r2, r2
 8019536:	b291      	uxth	r1, r2
 8019538:	ea4f 2a20 	mov.w	sl, r0, asr #8
 801953c:	120f      	asrs	r7, r1, #8
 801953e:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8019542:	fb1a fa09 	smulbb	sl, sl, r9
 8019546:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801954a:	fb07 a70e 	mla	r7, r7, lr, sl
 801954e:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 8019552:	00c0      	lsls	r0, r0, #3
 8019554:	10c9      	asrs	r1, r1, #3
 8019556:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801955a:	00d2      	lsls	r2, r2, #3
 801955c:	b2c0      	uxtb	r0, r0
 801955e:	fb1a fa09 	smulbb	sl, sl, r9
 8019562:	fb10 f009 	smulbb	r0, r0, r9
 8019566:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801956a:	b2d2      	uxtb	r2, r2
 801956c:	b2bf      	uxth	r7, r7
 801956e:	fb01 a10e 	mla	r1, r1, lr, sl
 8019572:	fb02 020e 	mla	r2, r2, lr, r0
 8019576:	b289      	uxth	r1, r1
 8019578:	b292      	uxth	r2, r2
 801957a:	1c78      	adds	r0, r7, #1
 801957c:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8019580:	f101 0a01 	add.w	sl, r1, #1
 8019584:	1c50      	adds	r0, r2, #1
 8019586:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801958a:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 801958e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8019592:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8019596:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801959a:	4307      	orrs	r7, r0
 801959c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80195a0:	ea47 070a 	orr.w	r7, r7, sl
 80195a4:	f824 7b02 	strh.w	r7, [r4], #2
 80195a8:	4667      	mov	r7, ip
 80195aa:	e7b9      	b.n	8019520 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 80195ac:	42a3      	cmp	r3, r4
 80195ae:	d95f      	bls.n	8019670 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 80195b0:	463a      	mov	r2, r7
 80195b2:	f812 1b02 	ldrb.w	r1, [r2], #2
 80195b6:	7878      	ldrb	r0, [r7, #1]
 80195b8:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 80195bc:	f824 1b02 	strh.w	r1, [r4], #2
 80195c0:	4617      	mov	r7, r2
 80195c2:	e7f3      	b.n	80195ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 80195c4:	9901      	ldr	r1, [sp, #4]
 80195c6:	29ff      	cmp	r1, #255	@ 0xff
 80195c8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80195cc:	b2b2      	uxth	r2, r6
 80195ce:	d044      	beq.n	801965a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 80195d0:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80195d4:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 80195d8:	ea4f 2922 	mov.w	r9, r2, asr #8
 80195dc:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80195e0:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 80195e4:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80195e8:	4608      	mov	r0, r1
 80195ea:	fb09 f901 	mul.w	r9, r9, r1
 80195ee:	fb0e fe01 	mul.w	lr, lr, r1
 80195f2:	00d1      	lsls	r1, r2, #3
 80195f4:	b2c9      	uxtb	r1, r1
 80195f6:	4341      	muls	r1, r0
 80195f8:	429c      	cmp	r4, r3
 80195fa:	f4bf af61 	bcs.w	80194c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80195fe:	8822      	ldrh	r2, [r4, #0]
 8019600:	1210      	asrs	r0, r2, #8
 8019602:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8019606:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801960a:	00d2      	lsls	r2, r2, #3
 801960c:	fb00 900a 	mla	r0, r0, sl, r9
 8019610:	b2d2      	uxtb	r2, r2
 8019612:	b280      	uxth	r0, r0
 8019614:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8019618:	fb02 120a 	mla	r2, r2, sl, r1
 801961c:	b292      	uxth	r2, r2
 801961e:	f100 0b01 	add.w	fp, r0, #1
 8019622:	fb0c ec0a 	mla	ip, ip, sl, lr
 8019626:	fa1f fc8c 	uxth.w	ip, ip
 801962a:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801962e:	1c50      	adds	r0, r2, #1
 8019630:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8019634:	f10c 0201 	add.w	r2, ip, #1
 8019638:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801963c:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 8019640:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8019644:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019648:	ea40 0b0b 	orr.w	fp, r0, fp
 801964c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8019650:	ea4b 0b0c 	orr.w	fp, fp, ip
 8019654:	f824 bb02 	strh.w	fp, [r4], #2
 8019658:	e7ce      	b.n	80195f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 801965a:	429c      	cmp	r4, r3
 801965c:	f4bf af30 	bcs.w	80194c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8019660:	f824 2b02 	strh.w	r2, [r4], #2
 8019664:	e7f9      	b.n	801965a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 8019666:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801966a:	4657      	mov	r7, sl
 801966c:	464d      	mov	r5, r9
 801966e:	e727      	b.n	80194c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8019670:	2300      	movs	r3, #0
 8019672:	e716      	b.n	80194a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 8019674:	44bb      	add	fp, r7
 8019676:	4657      	mov	r7, sl
 8019678:	e724      	b.n	80194c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 801967a:	bf00      	nop
 801967c:	200152ec 	.word	0x200152ec
 8019680:	200152e6 	.word	0x200152e6
 8019684:	20000180 	.word	0x20000180
 8019688:	2a01      	cmp	r2, #1
 801968a:	d12a      	bne.n	80196e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 801968c:	f3c6 0104 	ubfx	r1, r6, #0, #5
 8019690:	f003 0203 	and.w	r2, r3, #3
 8019694:	3902      	subs	r1, #2
 8019696:	4411      	add	r1, r2
 8019698:	f001 011f 	and.w	r1, r1, #31
 801969c:	f3c3 0081 	ubfx	r0, r3, #2, #2
 80196a0:	f361 0604 	bfi	r6, r1, #0, #5
 80196a4:	3802      	subs	r0, #2
 80196a6:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 80196aa:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80196ae:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80196b2:	f360 164a 	bfi	r6, r0, #5, #6
 80196b6:	3b02      	subs	r3, #2
 80196b8:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 80196bc:	f002 031f 	and.w	r3, r2, #31
 80196c0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80196c4:	2203      	movs	r2, #3
 80196c6:	f363 26cf 	bfi	r6, r3, #11, #5
 80196ca:	fb12 0303 	smlabb	r3, r2, r3, r0
 80196ce:	2207      	movs	r2, #7
 80196d0:	fb12 3301 	smlabb	r3, r2, r1, r3
 80196d4:	9a03      	ldr	r2, [sp, #12]
 80196d6:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80196da:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80196de:	809e      	strh	r6, [r3, #4]
 80196e0:	e701      	b.n	80194e6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 80196e2:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 80196e6:	45a8      	cmp	r8, r5
 80196e8:	4647      	mov	r7, r8
 80196ea:	bfa8      	it	ge
 80196ec:	462f      	movge	r7, r5
 80196ee:	2a02      	cmp	r2, #2
 80196f0:	d154      	bne.n	801979c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 80196f2:	9b01      	ldr	r3, [sp, #4]
 80196f4:	2bff      	cmp	r3, #255	@ 0xff
 80196f6:	d01a      	beq.n	801972e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 80196f8:	eb0b 0307 	add.w	r3, fp, r7
 80196fc:	2b40      	cmp	r3, #64	@ 0x40
 80196fe:	dd16      	ble.n	801972e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8019700:	ea4f 094b 	mov.w	r9, fp, lsl #1
 8019704:	4649      	mov	r1, r9
 8019706:	9800      	ldr	r0, [sp, #0]
 8019708:	f7e8 fc82 	bl	8002010 <_ZN8touchgfx5paint9flushLineEPmi>
 801970c:	465a      	mov	r2, fp
 801970e:	9b01      	ldr	r3, [sp, #4]
 8019710:	9900      	ldr	r1, [sp, #0]
 8019712:	4620      	mov	r0, r4
 8019714:	f7e8 fca6 	bl	8002064 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8019718:	9b00      	ldr	r3, [sp, #0]
 801971a:	461a      	mov	r2, r3
 801971c:	4b6c      	ldr	r3, [pc, #432]	@ (80198d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801971e:	429a      	cmp	r2, r3
 8019720:	bf0c      	ite	eq
 8019722:	4b6c      	ldreq	r3, [pc, #432]	@ (80198d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8019724:	4b6a      	ldrne	r3, [pc, #424]	@ (80198d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8019726:	9300      	str	r3, [sp, #0]
 8019728:	444c      	add	r4, r9
 801972a:	f04f 0b00 	mov.w	fp, #0
 801972e:	4652      	mov	r2, sl
 8019730:	2100      	movs	r1, #0
 8019732:	42a9      	cmp	r1, r5
 8019734:	da2c      	bge.n	8019790 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 8019736:	4694      	mov	ip, r2
 8019738:	f04f 0903 	mov.w	r9, #3
 801973c:	f81c 3b02 	ldrb.w	r3, [ip], #2
 8019740:	7852      	ldrb	r2, [r2, #1]
 8019742:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8019746:	f3c3 1045 	ubfx	r0, r3, #5, #6
 801974a:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 801974e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8019752:	f003 021f 	and.w	r2, r3, #31
 8019756:	fb19 000e 	smlabb	r0, r9, lr, r0
 801975a:	f04f 0e07 	mov.w	lr, #7
 801975e:	fb1e 0002 	smlabb	r0, lr, r2, r0
 8019762:	9a03      	ldr	r2, [sp, #12]
 8019764:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8019768:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801976c:	42b9      	cmp	r1, r7
 801976e:	461e      	mov	r6, r3
 8019770:	8083      	strh	r3, [r0, #4]
 8019772:	da0a      	bge.n	801978a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 8019774:	9a01      	ldr	r2, [sp, #4]
 8019776:	2aff      	cmp	r2, #255	@ 0xff
 8019778:	bf15      	itete	ne
 801977a:	9a00      	ldrne	r2, [sp, #0]
 801977c:	8023      	strheq	r3, [r4, #0]
 801977e:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 8019782:	3402      	addeq	r4, #2
 8019784:	bf18      	it	ne
 8019786:	f10b 0b01 	addne.w	fp, fp, #1
 801978a:	3101      	adds	r1, #1
 801978c:	4662      	mov	r2, ip
 801978e:	e7d0      	b.n	8019732 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 8019790:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8019794:	eba8 0807 	sub.w	r8, r8, r7
 8019798:	1bed      	subs	r5, r5, r7
 801979a:	e76c      	b.n	8019676 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801979c:	9b01      	ldr	r3, [sp, #4]
 801979e:	2bff      	cmp	r3, #255	@ 0xff
 80197a0:	eba8 0807 	sub.w	r8, r8, r7
 80197a4:	eba5 0507 	sub.w	r5, r5, r7
 80197a8:	fa1f f986 	uxth.w	r9, r6
 80197ac:	d027      	beq.n	80197fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 80197ae:	eb0b 0307 	add.w	r3, fp, r7
 80197b2:	2b40      	cmp	r3, #64	@ 0x40
 80197b4:	dd18      	ble.n	80197e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 80197b6:	ea4f 034b 	mov.w	r3, fp, lsl #1
 80197ba:	4619      	mov	r1, r3
 80197bc:	9800      	ldr	r0, [sp, #0]
 80197be:	930c      	str	r3, [sp, #48]	@ 0x30
 80197c0:	f7e8 fc26 	bl	8002010 <_ZN8touchgfx5paint9flushLineEPmi>
 80197c4:	465a      	mov	r2, fp
 80197c6:	9b01      	ldr	r3, [sp, #4]
 80197c8:	9900      	ldr	r1, [sp, #0]
 80197ca:	4620      	mov	r0, r4
 80197cc:	f7e8 fc4a 	bl	8002064 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 80197d0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80197d2:	441c      	add	r4, r3
 80197d4:	9b00      	ldr	r3, [sp, #0]
 80197d6:	461a      	mov	r2, r3
 80197d8:	4b3d      	ldr	r3, [pc, #244]	@ (80198d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 80197da:	429a      	cmp	r2, r3
 80197dc:	bf0c      	ite	eq
 80197de:	4b3d      	ldreq	r3, [pc, #244]	@ (80198d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 80197e0:	4b3b      	ldrne	r3, [pc, #236]	@ (80198d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 80197e2:	9300      	str	r3, [sp, #0]
 80197e4:	f04f 0b00 	mov.w	fp, #0
 80197e8:	9b00      	ldr	r3, [sp, #0]
 80197ea:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 80197ee:	463b      	mov	r3, r7
 80197f0:	2b00      	cmp	r3, #0
 80197f2:	f43f af3f 	beq.w	8019674 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 80197f6:	f822 9b02 	strh.w	r9, [r2], #2
 80197fa:	3b01      	subs	r3, #1
 80197fc:	e7f8      	b.n	80197f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 80197fe:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 8019802:	42a7      	cmp	r7, r4
 8019804:	f67f af37 	bls.w	8019676 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8019808:	f824 9b02 	strh.w	r9, [r4], #2
 801980c:	e7f9      	b.n	8019802 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 801980e:	f1bb 0f00 	cmp.w	fp, #0
 8019812:	d00c      	beq.n	801982e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 8019814:	ea4f 084b 	mov.w	r8, fp, lsl #1
 8019818:	4641      	mov	r1, r8
 801981a:	9800      	ldr	r0, [sp, #0]
 801981c:	f7e8 fbf8 	bl	8002010 <_ZN8touchgfx5paint9flushLineEPmi>
 8019820:	4620      	mov	r0, r4
 8019822:	9b01      	ldr	r3, [sp, #4]
 8019824:	9900      	ldr	r1, [sp, #0]
 8019826:	465a      	mov	r2, fp
 8019828:	f7e8 fc1c 	bl	8002064 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801982c:	4444      	add	r4, r8
 801982e:	4b2a      	ldr	r3, [pc, #168]	@ (80198d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 8019830:	9a02      	ldr	r2, [sp, #8]
 8019832:	881b      	ldrh	r3, [r3, #0]
 8019834:	1a9b      	subs	r3, r3, r2
 8019836:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801983a:	9b06      	ldr	r3, [sp, #24]
 801983c:	3301      	adds	r3, #1
 801983e:	9306      	str	r3, [sp, #24]
 8019840:	9a06      	ldr	r2, [sp, #24]
 8019842:	9b04      	ldr	r3, [sp, #16]
 8019844:	4293      	cmp	r3, r2
 8019846:	d120      	bne.n	801988a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 8019848:	9b05      	ldr	r3, [sp, #20]
 801984a:	9a05      	ldr	r2, [sp, #20]
 801984c:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 8019850:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8019854:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8019856:	f103 0801 	add.w	r8, r3, #1
 801985a:	9b08      	ldr	r3, [sp, #32]
 801985c:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8019860:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019862:	ba3f      	rev	r7, r7
 8019864:	2280      	movs	r2, #128	@ 0x80
 8019866:	2100      	movs	r1, #0
 8019868:	441f      	add	r7, r3
 801986a:	eba9 0905 	sub.w	r9, r9, r5
 801986e:	f00c f9a0 	bl	8025bb2 <memset>
 8019872:	2300      	movs	r3, #0
 8019874:	fa1f f989 	uxth.w	r9, r9
 8019878:	f04f 0600 	mov.w	r6, #0
 801987c:	f8cd 8014 	str.w	r8, [sp, #20]
 8019880:	9306      	str	r3, [sp, #24]
 8019882:	f7e8 fbbb 	bl	8001ffc <_ZN8touchgfx5paint8tearDownEv>
 8019886:	46ba      	mov	sl, r7
 8019888:	e58a      	b.n	80193a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 801988a:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 801988e:	9b02      	ldr	r3, [sp, #8]
 8019890:	eba9 0903 	sub.w	r9, r9, r3
 8019894:	eba9 0505 	sub.w	r5, r9, r5
 8019898:	fa1f f985 	uxth.w	r9, r5
 801989c:	e7f1      	b.n	8019882 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 801989e:	4b0f      	ldr	r3, [pc, #60]	@ (80198dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 80198a0:	6818      	ldr	r0, [r3, #0]
 80198a2:	6803      	ldr	r3, [r0, #0]
 80198a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80198a6:	4798      	blx	r3
 80198a8:	b013      	add	sp, #76	@ 0x4c
 80198aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80198ae:	9b02      	ldr	r3, [sp, #8]
 80198b0:	9a02      	ldr	r2, [sp, #8]
 80198b2:	42ab      	cmp	r3, r5
 80198b4:	bfa8      	it	ge
 80198b6:	462b      	movge	r3, r5
 80198b8:	eba2 0803 	sub.w	r8, r2, r3
 80198bc:	1aed      	subs	r5, r5, r3
 80198be:	e626      	b.n	801950e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 80198c0:	f108 38ff 	add.w	r8, r8, #4294967295
 80198c4:	fa1f f986 	uxth.w	r9, r6
 80198c8:	2500      	movs	r5, #0
 80198ca:	2701      	movs	r7, #1
 80198cc:	e76f      	b.n	80197ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 80198ce:	bf00      	nop
 80198d0:	20000180 	.word	0x20000180
 80198d4:	20000280 	.word	0x20000280
 80198d8:	200152e6 	.word	0x200152e6
 80198dc:	200152ec 	.word	0x200152ec

080198e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80198e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80198e4:	b08f      	sub	sp, #60	@ 0x3c
 80198e6:	461c      	mov	r4, r3
 80198e8:	9203      	str	r2, [sp, #12]
 80198ea:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80198ee:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80198f0:	9202      	str	r2, [sp, #8]
 80198f2:	460f      	mov	r7, r1
 80198f4:	2a00      	cmp	r2, #0
 80198f6:	f000 8128 	beq.w	8019b4a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 80198fa:	6820      	ldr	r0, [r4, #0]
 80198fc:	6861      	ldr	r1, [r4, #4]
 80198fe:	aa0a      	add	r2, sp, #40	@ 0x28
 8019900:	c203      	stmia	r2!, {r0, r1}
 8019902:	6818      	ldr	r0, [r3, #0]
 8019904:	6859      	ldr	r1, [r3, #4]
 8019906:	aa0c      	add	r2, sp, #48	@ 0x30
 8019908:	c203      	stmia	r2!, {r0, r1}
 801990a:	a80a      	add	r0, sp, #40	@ 0x28
 801990c:	f7f8 f8a4 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019910:	4621      	mov	r1, r4
 8019912:	a80c      	add	r0, sp, #48	@ 0x30
 8019914:	f7f8 f8c8 	bl	8011aa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019918:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801991c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8019920:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8019924:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8019928:	bfde      	ittt	le
 801992a:	b2b3      	uxthle	r3, r6
 801992c:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8019930:	fb92 f3f3 	sdivle	r3, r2, r3
 8019934:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8019938:	bfc8      	it	gt
 801993a:	2301      	movgt	r3, #1
 801993c:	fb92 f1f3 	sdiv	r1, r2, r3
 8019940:	fa1f fc81 	uxth.w	ip, r1
 8019944:	fb0c 2413 	mls	r4, ip, r3, r2
 8019948:	fb14 f406 	smulbb	r4, r4, r6
 801994c:	441d      	add	r5, r3
 801994e:	4404      	add	r4, r0
 8019950:	4661      	mov	r1, ip
 8019952:	3d01      	subs	r5, #1
 8019954:	b2a4      	uxth	r4, r4
 8019956:	fb95 f5f3 	sdiv	r5, r5, r3
 801995a:	b121      	cbz	r1, 8019966 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801995c:	9b03      	ldr	r3, [sp, #12]
 801995e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8019962:	ba1b      	rev	r3, r3
 8019964:	441f      	add	r7, r3
 8019966:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801996a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801996e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8019972:	4418      	add	r0, r3
 8019974:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8019978:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801997c:	441a      	add	r2, r3
 801997e:	4b74      	ldr	r3, [pc, #464]	@ (8019b50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8019980:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8019984:	6818      	ldr	r0, [r3, #0]
 8019986:	6803      	ldr	r3, [r0, #0]
 8019988:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801998a:	4798      	blx	r3
 801998c:	4a71      	ldr	r2, [pc, #452]	@ (8019b54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801998e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8019992:	8813      	ldrh	r3, [r2, #0]
 8019994:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8019998:	9209      	str	r2, [sp, #36]	@ 0x24
 801999a:	fb03 c101 	mla	r1, r3, r1, ip
 801999e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80199a2:	4373      	muls	r3, r6
 80199a4:	b2ad      	uxth	r5, r5
 80199a6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80199aa:	00ad      	lsls	r5, r5, #2
 80199ac:	2c00      	cmp	r4, #0
 80199ae:	9304      	str	r3, [sp, #16]
 80199b0:	f105 0304 	add.w	r3, r5, #4
 80199b4:	9305      	str	r3, [sp, #20]
 80199b6:	bf0c      	ite	eq
 80199b8:	46c8      	moveq	r8, r9
 80199ba:	f04f 0800 	movne.w	r8, #0
 80199be:	2300      	movs	r3, #0
 80199c0:	fa1f f888 	uxth.w	r8, r8
 80199c4:	9301      	str	r3, [sp, #4]
 80199c6:	9a04      	ldr	r2, [sp, #16]
 80199c8:	4282      	cmp	r2, r0
 80199ca:	f240 80b9 	bls.w	8019b40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 80199ce:	b95b      	cbnz	r3, 80199e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 80199d0:	783a      	ldrb	r2, [r7, #0]
 80199d2:	0993      	lsrs	r3, r2, #6
 80199d4:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80199d8:	9201      	str	r2, [sp, #4]
 80199da:	1e5a      	subs	r2, r3, #1
 80199dc:	2a02      	cmp	r2, #2
 80199de:	bf8d      	iteet	hi
 80199e0:	787b      	ldrbhi	r3, [r7, #1]
 80199e2:	3701      	addls	r7, #1
 80199e4:	b29b      	uxthls	r3, r3
 80199e6:	3702      	addhi	r7, #2
 80199e8:	b184      	cbz	r4, 8019a0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 80199ea:	429c      	cmp	r4, r3
 80199ec:	bf95      	itete	ls
 80199ee:	1b1c      	subls	r4, r3, r4
 80199f0:	1ae4      	subhi	r4, r4, r3
 80199f2:	fa1f fa84 	uxthls.w	sl, r4
 80199f6:	b2a4      	uxthhi	r4, r4
 80199f8:	bf87      	ittee	hi
 80199fa:	46c4      	movhi	ip, r8
 80199fc:	f04f 0a00 	movhi.w	sl, #0
 8019a00:	fa1f fc89 	uxthls.w	ip, r9
 8019a04:	2400      	movls	r4, #0
 8019a06:	4653      	mov	r3, sl
 8019a08:	46e0      	mov	r8, ip
 8019a0a:	e7dc      	b.n	80199c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 8019a0c:	2204      	movs	r2, #4
 8019a0e:	4615      	mov	r5, r2
 8019a10:	9905      	ldr	r1, [sp, #20]
 8019a12:	9a01      	ldr	r2, [sp, #4]
 8019a14:	fb15 1202 	smlabb	r2, r5, r2, r1
 8019a18:	9903      	ldr	r1, [sp, #12]
 8019a1a:	588a      	ldr	r2, [r1, r2]
 8019a1c:	4543      	cmp	r3, r8
 8019a1e:	bf27      	ittee	cs
 8019a20:	eba3 0a08 	subcs.w	sl, r3, r8
 8019a24:	46c6      	movcs	lr, r8
 8019a26:	eba8 0c03 	subcc.w	ip, r8, r3
 8019a2a:	469e      	movcc	lr, r3
 8019a2c:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8019a30:	bf27      	ittee	cs
 8019a32:	fa1f fa8a 	uxthcs.w	sl, sl
 8019a36:	46a4      	movcs	ip, r4
 8019a38:	fa1f fc8c 	uxthcc.w	ip, ip
 8019a3c:	46a2      	movcc	sl, r4
 8019a3e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8019a42:	2900      	cmp	r1, #0
 8019a44:	d066      	beq.n	8019b14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 8019a46:	29ff      	cmp	r1, #255	@ 0xff
 8019a48:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8019a4c:	d114      	bne.n	8019a78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8019a4e:	9d02      	ldr	r5, [sp, #8]
 8019a50:	2dff      	cmp	r5, #255	@ 0xff
 8019a52:	d111      	bne.n	8019a78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8019a54:	0951      	lsrs	r1, r2, #5
 8019a56:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8019a5a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019a5e:	f026 0607 	bic.w	r6, r6, #7
 8019a62:	430e      	orrs	r6, r1
 8019a64:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019a68:	4316      	orrs	r6, r2
 8019a6a:	b2b6      	uxth	r6, r6
 8019a6c:	4486      	add	lr, r0
 8019a6e:	4586      	cmp	lr, r0
 8019a70:	d051      	beq.n	8019b16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8019a72:	f820 6b02 	strh.w	r6, [r0], #2
 8019a76:	e7fa      	b.n	8019a6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8019a78:	9d02      	ldr	r5, [sp, #8]
 8019a7a:	4369      	muls	r1, r5
 8019a7c:	1c4d      	adds	r5, r1, #1
 8019a7e:	eb05 2521 	add.w	r5, r5, r1, asr #8
 8019a82:	122d      	asrs	r5, r5, #8
 8019a84:	ea6f 0b05 	mvn.w	fp, r5
 8019a88:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8019a8c:	b2ad      	uxth	r5, r5
 8019a8e:	b2f6      	uxtb	r6, r6
 8019a90:	b2d2      	uxtb	r2, r2
 8019a92:	fb11 f105 	smulbb	r1, r1, r5
 8019a96:	fb16 f605 	smulbb	r6, r6, r5
 8019a9a:	fb12 f205 	smulbb	r2, r2, r5
 8019a9e:	b289      	uxth	r1, r1
 8019aa0:	b2b6      	uxth	r6, r6
 8019aa2:	b292      	uxth	r2, r2
 8019aa4:	9106      	str	r1, [sp, #24]
 8019aa6:	9607      	str	r6, [sp, #28]
 8019aa8:	9208      	str	r2, [sp, #32]
 8019aaa:	4486      	add	lr, r0
 8019aac:	fa5f fb8b 	uxtb.w	fp, fp
 8019ab0:	4586      	cmp	lr, r0
 8019ab2:	d030      	beq.n	8019b16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8019ab4:	8802      	ldrh	r2, [r0, #0]
 8019ab6:	9906      	ldr	r1, [sp, #24]
 8019ab8:	1216      	asrs	r6, r2, #8
 8019aba:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8019abe:	10d5      	asrs	r5, r2, #3
 8019ac0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8019ac4:	fb06 160b 	mla	r6, r6, fp, r1
 8019ac8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8019acc:	9907      	ldr	r1, [sp, #28]
 8019ace:	00d2      	lsls	r2, r2, #3
 8019ad0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8019ad4:	fb05 150b 	mla	r5, r5, fp, r1
 8019ad8:	b2d2      	uxtb	r2, r2
 8019ada:	9908      	ldr	r1, [sp, #32]
 8019adc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8019ae0:	b2b6      	uxth	r6, r6
 8019ae2:	fb02 120b 	mla	r2, r2, fp, r1
 8019ae6:	b292      	uxth	r2, r2
 8019ae8:	1c71      	adds	r1, r6, #1
 8019aea:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8019aee:	1c51      	adds	r1, r2, #1
 8019af0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019af4:	b2ad      	uxth	r5, r5
 8019af6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019afa:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8019afe:	4316      	orrs	r6, r2
 8019b00:	1c6a      	adds	r2, r5, #1
 8019b02:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8019b06:	096d      	lsrs	r5, r5, #5
 8019b08:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019b0c:	432e      	orrs	r6, r5
 8019b0e:	f820 6b02 	strh.w	r6, [r0], #2
 8019b12:	e7cd      	b.n	8019ab0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8019b14:	4470      	add	r0, lr
 8019b16:	4543      	cmp	r3, r8
 8019b18:	f4ff af75 	bcc.w	8019a06 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8019b1c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8019b20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019b22:	fa1f fc89 	uxth.w	ip, r9
 8019b26:	eba4 040c 	sub.w	r4, r4, ip
 8019b2a:	881b      	ldrh	r3, [r3, #0]
 8019b2c:	b2a4      	uxth	r4, r4
 8019b2e:	2c00      	cmp	r4, #0
 8019b30:	eba3 0309 	sub.w	r3, r3, r9
 8019b34:	bf18      	it	ne
 8019b36:	f04f 0c00 	movne.w	ip, #0
 8019b3a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019b3e:	e762      	b.n	8019a06 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8019b40:	4b03      	ldr	r3, [pc, #12]	@ (8019b50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8019b42:	6818      	ldr	r0, [r3, #0]
 8019b44:	6803      	ldr	r3, [r0, #0]
 8019b46:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019b48:	4798      	blx	r3
 8019b4a:	b00f      	add	sp, #60	@ 0x3c
 8019b4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019b50:	200152ec 	.word	0x200152ec
 8019b54:	200152e6 	.word	0x200152e6

08019b58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8019b58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b5c:	b093      	sub	sp, #76	@ 0x4c
 8019b5e:	461c      	mov	r4, r3
 8019b60:	9205      	str	r2, [sp, #20]
 8019b62:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 8019b66:	9101      	str	r1, [sp, #4]
 8019b68:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019b6a:	9202      	str	r2, [sp, #8]
 8019b6c:	2a00      	cmp	r2, #0
 8019b6e:	f000 812c 	beq.w	8019dca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8019b72:	6820      	ldr	r0, [r4, #0]
 8019b74:	6861      	ldr	r1, [r4, #4]
 8019b76:	aa0e      	add	r2, sp, #56	@ 0x38
 8019b78:	c203      	stmia	r2!, {r0, r1}
 8019b7a:	6818      	ldr	r0, [r3, #0]
 8019b7c:	6859      	ldr	r1, [r3, #4]
 8019b7e:	aa10      	add	r2, sp, #64	@ 0x40
 8019b80:	c203      	stmia	r2!, {r0, r1}
 8019b82:	a80e      	add	r0, sp, #56	@ 0x38
 8019b84:	f7f7 ff68 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019b88:	4621      	mov	r1, r4
 8019b8a:	a810      	add	r0, sp, #64	@ 0x40
 8019b8c:	f7f7 ff8c 	bl	8011aa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019b90:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8019b94:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8019b98:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8019b9c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8019ba0:	bfde      	ittt	le
 8019ba2:	b2b3      	uxthle	r3, r6
 8019ba4:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8019ba8:	fb92 f3f3 	sdivle	r3, r2, r3
 8019bac:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8019bb0:	bfc8      	it	gt
 8019bb2:	2301      	movgt	r3, #1
 8019bb4:	fb92 f1f3 	sdiv	r1, r2, r3
 8019bb8:	fa1f fc81 	uxth.w	ip, r1
 8019bbc:	fb0c 2413 	mls	r4, ip, r3, r2
 8019bc0:	fb14 f406 	smulbb	r4, r4, r6
 8019bc4:	441d      	add	r5, r3
 8019bc6:	4404      	add	r4, r0
 8019bc8:	4661      	mov	r1, ip
 8019bca:	3d01      	subs	r5, #1
 8019bcc:	b2a4      	uxth	r4, r4
 8019bce:	fb95 f5f3 	sdiv	r5, r5, r3
 8019bd2:	b131      	cbz	r1, 8019be2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 8019bd4:	9b05      	ldr	r3, [sp, #20]
 8019bd6:	9901      	ldr	r1, [sp, #4]
 8019bd8:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8019bdc:	ba1b      	rev	r3, r3
 8019bde:	4419      	add	r1, r3
 8019be0:	9101      	str	r1, [sp, #4]
 8019be2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8019be6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8019bea:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 8019bee:	4418      	add	r0, r3
 8019bf0:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8019bf4:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8019bf8:	441a      	add	r2, r3
 8019bfa:	4b75      	ldr	r3, [pc, #468]	@ (8019dd0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8019bfc:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8019c00:	6818      	ldr	r0, [r3, #0]
 8019c02:	6803      	ldr	r3, [r0, #0]
 8019c04:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019c06:	4798      	blx	r3
 8019c08:	4972      	ldr	r1, [pc, #456]	@ (8019dd4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8019c0a:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 8019c0e:	880b      	ldrh	r3, [r1, #0]
 8019c10:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8019c14:	910d      	str	r1, [sp, #52]	@ 0x34
 8019c16:	fb03 c202 	mla	r2, r3, r2, ip
 8019c1a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019c1e:	4373      	muls	r3, r6
 8019c20:	b2ad      	uxth	r5, r5
 8019c22:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019c26:	00ad      	lsls	r5, r5, #2
 8019c28:	9308      	str	r3, [sp, #32]
 8019c2a:	1d2b      	adds	r3, r5, #4
 8019c2c:	9309      	str	r3, [sp, #36]	@ 0x24
 8019c2e:	9b02      	ldr	r3, [sp, #8]
 8019c30:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8019c34:	9106      	str	r1, [sp, #24]
 8019c36:	43da      	mvns	r2, r3
 8019c38:	2c00      	cmp	r4, #0
 8019c3a:	bf0c      	ite	eq
 8019c3c:	46dc      	moveq	ip, fp
 8019c3e:	f04f 0c00 	movne.w	ip, #0
 8019c42:	2300      	movs	r3, #0
 8019c44:	b2d2      	uxtb	r2, r2
 8019c46:	fa1f fc8c 	uxth.w	ip, ip
 8019c4a:	9303      	str	r3, [sp, #12]
 8019c4c:	9207      	str	r2, [sp, #28]
 8019c4e:	9a08      	ldr	r2, [sp, #32]
 8019c50:	4282      	cmp	r2, r0
 8019c52:	f240 80b5 	bls.w	8019dc0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8019c56:	b963      	cbnz	r3, 8019c72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8019c58:	9b01      	ldr	r3, [sp, #4]
 8019c5a:	781a      	ldrb	r2, [r3, #0]
 8019c5c:	0993      	lsrs	r3, r2, #6
 8019c5e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8019c62:	9203      	str	r2, [sp, #12]
 8019c64:	1e5a      	subs	r2, r3, #1
 8019c66:	2a02      	cmp	r2, #2
 8019c68:	d815      	bhi.n	8019c96 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 8019c6a:	9a01      	ldr	r2, [sp, #4]
 8019c6c:	3201      	adds	r2, #1
 8019c6e:	9201      	str	r2, [sp, #4]
 8019c70:	b29b      	uxth	r3, r3
 8019c72:	b1b4      	cbz	r4, 8019ca2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 8019c74:	429c      	cmp	r4, r3
 8019c76:	bf95      	itete	ls
 8019c78:	1b1c      	subls	r4, r3, r4
 8019c7a:	1ae4      	subhi	r4, r4, r3
 8019c7c:	fa1f f884 	uxthls.w	r8, r4
 8019c80:	b2a4      	uxthhi	r4, r4
 8019c82:	bf87      	ittee	hi
 8019c84:	4666      	movhi	r6, ip
 8019c86:	f04f 0800 	movhi.w	r8, #0
 8019c8a:	fa1f f68b 	uxthls.w	r6, fp
 8019c8e:	2400      	movls	r4, #0
 8019c90:	4643      	mov	r3, r8
 8019c92:	46b4      	mov	ip, r6
 8019c94:	e7db      	b.n	8019c4e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 8019c96:	9a01      	ldr	r2, [sp, #4]
 8019c98:	9b01      	ldr	r3, [sp, #4]
 8019c9a:	3202      	adds	r2, #2
 8019c9c:	785b      	ldrb	r3, [r3, #1]
 8019c9e:	9201      	str	r2, [sp, #4]
 8019ca0:	e7e7      	b.n	8019c72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8019ca2:	2203      	movs	r2, #3
 8019ca4:	4615      	mov	r5, r2
 8019ca6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8019ca8:	9a03      	ldr	r2, [sp, #12]
 8019caa:	fb15 1202 	smlabb	r2, r5, r2, r1
 8019cae:	9905      	ldr	r1, [sp, #20]
 8019cb0:	4563      	cmp	r3, ip
 8019cb2:	eb01 0502 	add.w	r5, r1, r2
 8019cb6:	9902      	ldr	r1, [sp, #8]
 8019cb8:	bf29      	itett	cs
 8019cba:	eba3 080c 	subcs.w	r8, r3, ip
 8019cbe:	ebac 0603 	subcc.w	r6, ip, r3
 8019cc2:	fa1f f888 	uxthcs.w	r8, r8
 8019cc6:	46e1      	movcs	r9, ip
 8019cc8:	bf2f      	iteee	cs
 8019cca:	4626      	movcs	r6, r4
 8019ccc:	b2b6      	uxthcc	r6, r6
 8019cce:	4699      	movcc	r9, r3
 8019cd0:	46a0      	movcc	r8, r4
 8019cd2:	29ff      	cmp	r1, #255	@ 0xff
 8019cd4:	d04a      	beq.n	8019d6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 8019cd6:	9f06      	ldr	r7, [sp, #24]
 8019cd8:	78a9      	ldrb	r1, [r5, #2]
 8019cda:	9004      	str	r0, [sp, #16]
 8019cdc:	4379      	muls	r1, r7
 8019cde:	910a      	str	r1, [sp, #40]	@ 0x28
 8019ce0:	7869      	ldrb	r1, [r5, #1]
 8019ce2:	4379      	muls	r1, r7
 8019ce4:	910b      	str	r1, [sp, #44]	@ 0x2c
 8019ce6:	9905      	ldr	r1, [sp, #20]
 8019ce8:	5c8a      	ldrb	r2, [r1, r2]
 8019cea:	437a      	muls	r2, r7
 8019cec:	920c      	str	r2, [sp, #48]	@ 0x30
 8019cee:	46ca      	mov	sl, r9
 8019cf0:	f1ba 0f00 	cmp.w	sl, #0
 8019cf4:	d03d      	beq.n	8019d72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 8019cf6:	9a04      	ldr	r2, [sp, #16]
 8019cf8:	9f07      	ldr	r7, [sp, #28]
 8019cfa:	8812      	ldrh	r2, [r2, #0]
 8019cfc:	1215      	asrs	r5, r2, #8
 8019cfe:	46be      	mov	lr, r7
 8019d00:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8019d04:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8019d06:	10d1      	asrs	r1, r2, #3
 8019d08:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8019d0c:	fb05 750e 	mla	r5, r5, lr, r7
 8019d10:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8019d14:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8019d16:	00d2      	lsls	r2, r2, #3
 8019d18:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8019d1c:	fb01 710e 	mla	r1, r1, lr, r7
 8019d20:	b2d2      	uxtb	r2, r2
 8019d22:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8019d24:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8019d28:	b2ad      	uxth	r5, r5
 8019d2a:	fb02 720e 	mla	r2, r2, lr, r7
 8019d2e:	b292      	uxth	r2, r2
 8019d30:	f105 0e01 	add.w	lr, r5, #1
 8019d34:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8019d38:	f102 0e01 	add.w	lr, r2, #1
 8019d3c:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8019d40:	b289      	uxth	r1, r1
 8019d42:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019d46:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8019d4a:	4315      	orrs	r5, r2
 8019d4c:	1c4a      	adds	r2, r1, #1
 8019d4e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019d52:	0949      	lsrs	r1, r1, #5
 8019d54:	9a04      	ldr	r2, [sp, #16]
 8019d56:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019d5a:	430d      	orrs	r5, r1
 8019d5c:	f822 5b02 	strh.w	r5, [r2], #2
 8019d60:	f10a 3aff 	add.w	sl, sl, #4294967295
 8019d64:	9204      	str	r2, [sp, #16]
 8019d66:	fa1f fa8a 	uxth.w	sl, sl
 8019d6a:	e7c1      	b.n	8019cf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 8019d6c:	4649      	mov	r1, r9
 8019d6e:	4686      	mov	lr, r0
 8019d70:	b999      	cbnz	r1, 8019d9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8019d72:	4563      	cmp	r3, ip
 8019d74:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8019d78:	d38a      	bcc.n	8019c90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8019d7a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 8019d7e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019d80:	fa1f f68b 	uxth.w	r6, fp
 8019d84:	1ba4      	subs	r4, r4, r6
 8019d86:	881b      	ldrh	r3, [r3, #0]
 8019d88:	b2a4      	uxth	r4, r4
 8019d8a:	2c00      	cmp	r4, #0
 8019d8c:	eba3 030b 	sub.w	r3, r3, fp
 8019d90:	bf18      	it	ne
 8019d92:	2600      	movne	r6, #0
 8019d94:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019d98:	e77a      	b.n	8019c90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8019d9a:	78aa      	ldrb	r2, [r5, #2]
 8019d9c:	4f0e      	ldr	r7, [pc, #56]	@ (8019dd8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 8019d9e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 8019da2:	786a      	ldrb	r2, [r5, #1]
 8019da4:	00d2      	lsls	r2, r2, #3
 8019da6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019daa:	ea4a 0202 	orr.w	r2, sl, r2
 8019dae:	f895 a000 	ldrb.w	sl, [r5]
 8019db2:	3901      	subs	r1, #1
 8019db4:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8019db8:	f82e 2b02 	strh.w	r2, [lr], #2
 8019dbc:	b289      	uxth	r1, r1
 8019dbe:	e7d7      	b.n	8019d70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8019dc0:	4b03      	ldr	r3, [pc, #12]	@ (8019dd0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8019dc2:	6818      	ldr	r0, [r3, #0]
 8019dc4:	6803      	ldr	r3, [r0, #0]
 8019dc6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019dc8:	4798      	blx	r3
 8019dca:	b013      	add	sp, #76	@ 0x4c
 8019dcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019dd0:	200152ec 	.word	0x200152ec
 8019dd4:	200152e6 	.word	0x200152e6
 8019dd8:	fffff800 	.word	0xfffff800

08019ddc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8019ddc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019de0:	b09d      	sub	sp, #116	@ 0x74
 8019de2:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8019de6:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 8019dea:	920e      	str	r2, [sp, #56]	@ 0x38
 8019dec:	461c      	mov	r4, r3
 8019dee:	4683      	mov	fp, r0
 8019df0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8019df2:	2a00      	cmp	r2, #0
 8019df4:	f000 81e0 	beq.w	801a1b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 8019df8:	6820      	ldr	r0, [r4, #0]
 8019dfa:	6861      	ldr	r1, [r4, #4]
 8019dfc:	aa18      	add	r2, sp, #96	@ 0x60
 8019dfe:	c203      	stmia	r2!, {r0, r1}
 8019e00:	6818      	ldr	r0, [r3, #0]
 8019e02:	6859      	ldr	r1, [r3, #4]
 8019e04:	aa1a      	add	r2, sp, #104	@ 0x68
 8019e06:	c203      	stmia	r2!, {r0, r1}
 8019e08:	a818      	add	r0, sp, #96	@ 0x60
 8019e0a:	f7f7 fe25 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019e0e:	4621      	mov	r1, r4
 8019e10:	a81a      	add	r0, sp, #104	@ 0x68
 8019e12:	f7f7 fe49 	bl	8011aa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019e16:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 8019e1a:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 8019e1e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8019e22:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8019e26:	bfd7      	itett	le
 8019e28:	b29a      	uxthle	r2, r3
 8019e2a:	2201      	movgt	r2, #1
 8019e2c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8019e30:	fb91 f2f2 	sdivle	r2, r1, r2
 8019e34:	9202      	str	r2, [sp, #8]
 8019e36:	9802      	ldr	r0, [sp, #8]
 8019e38:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8019e3c:	fb92 f0f0 	sdiv	r0, r2, r0
 8019e40:	b280      	uxth	r0, r0
 8019e42:	900f      	str	r0, [sp, #60]	@ 0x3c
 8019e44:	9902      	ldr	r1, [sp, #8]
 8019e46:	9802      	ldr	r0, [sp, #8]
 8019e48:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8019e4a:	440c      	add	r4, r1
 8019e4c:	fb05 2510 	mls	r5, r5, r0, r2
 8019e50:	fb15 f503 	smulbb	r5, r5, r3
 8019e54:	3c01      	subs	r4, #1
 8019e56:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8019e5a:	fb94 f4f1 	sdiv	r4, r4, r1
 8019e5e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8019e62:	440d      	add	r5, r1
 8019e64:	4419      	add	r1, r3
 8019e66:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 8019e6a:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 8019e6e:	441a      	add	r2, r3
 8019e70:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8019e74:	9306      	str	r3, [sp, #24]
 8019e76:	4bb3      	ldr	r3, [pc, #716]	@ (801a144 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 8019e78:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8019e7c:	6818      	ldr	r0, [r3, #0]
 8019e7e:	6803      	ldr	r3, [r0, #0]
 8019e80:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019e82:	4798      	blx	r3
 8019e84:	4bb0      	ldr	r3, [pc, #704]	@ (801a148 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 8019e86:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8019e8a:	881a      	ldrh	r2, [r3, #0]
 8019e8c:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8019e90:	9316      	str	r3, [sp, #88]	@ 0x58
 8019e92:	fb02 7101 	mla	r1, r2, r1, r7
 8019e96:	3401      	adds	r4, #1
 8019e98:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8019e9c:	b2a4      	uxth	r4, r4
 8019e9e:	4356      	muls	r6, r2
 8019ea0:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8019ea4:	00a4      	lsls	r4, r4, #2
 8019ea6:	920a      	str	r2, [sp, #40]	@ 0x28
 8019ea8:	1d22      	adds	r2, r4, #4
 8019eaa:	b2ad      	uxth	r5, r5
 8019eac:	9213      	str	r2, [sp, #76]	@ 0x4c
 8019eae:	4ba7      	ldr	r3, [pc, #668]	@ (801a14c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8019eb0:	9a06      	ldr	r2, [sp, #24]
 8019eb2:	2d00      	cmp	r5, #0
 8019eb4:	bf0c      	ite	eq
 8019eb6:	4611      	moveq	r1, r2
 8019eb8:	2100      	movne	r1, #0
 8019eba:	2200      	movs	r2, #0
 8019ebc:	eba3 030b 	sub.w	r3, r3, fp
 8019ec0:	b289      	uxth	r1, r1
 8019ec2:	920d      	str	r2, [sp, #52]	@ 0x34
 8019ec4:	9317      	str	r3, [sp, #92]	@ 0x5c
 8019ec6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8019ec8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019eca:	fa12 f383 	uxtah	r3, r2, r3
 8019ece:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8019ed0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8019ed4:	3304      	adds	r3, #4
 8019ed6:	9308      	str	r3, [sp, #32]
 8019ed8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019eda:	4543      	cmp	r3, r8
 8019edc:	f240 8167 	bls.w	801a1ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 8019ee0:	9a02      	ldr	r2, [sp, #8]
 8019ee2:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8019ee6:	fbb5 f3f3 	udiv	r3, r5, r3
 8019eea:	1ad3      	subs	r3, r2, r3
 8019eec:	b29b      	uxth	r3, r3
 8019eee:	9314      	str	r3, [sp, #80]	@ 0x50
 8019ef0:	9b08      	ldr	r3, [sp, #32]
 8019ef2:	9808      	ldr	r0, [sp, #32]
 8019ef4:	785a      	ldrb	r2, [r3, #1]
 8019ef6:	789b      	ldrb	r3, [r3, #2]
 8019ef8:	7800      	ldrb	r0, [r0, #0]
 8019efa:	9010      	str	r0, [sp, #64]	@ 0x40
 8019efc:	021b      	lsls	r3, r3, #8
 8019efe:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8019f02:	9a08      	ldr	r2, [sp, #32]
 8019f04:	78d2      	ldrb	r2, [r2, #3]
 8019f06:	4313      	orrs	r3, r2
 8019f08:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019f0a:	3001      	adds	r0, #1
 8019f0c:	441a      	add	r2, r3
 8019f0e:	9007      	str	r0, [sp, #28]
 8019f10:	1c50      	adds	r0, r2, #1
 8019f12:	9005      	str	r0, [sp, #20]
 8019f14:	7852      	ldrb	r2, [r2, #1]
 8019f16:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8019f18:	0212      	lsls	r2, r2, #8
 8019f1a:	5cc3      	ldrb	r3, [r0, r3]
 8019f1c:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8019f20:	431a      	orrs	r2, r3
 8019f22:	b293      	uxth	r3, r2
 8019f24:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019f26:	2300      	movs	r3, #0
 8019f28:	9309      	str	r3, [sp, #36]	@ 0x24
 8019f2a:	2301      	movs	r3, #1
 8019f2c:	9301      	str	r3, [sp, #4]
 8019f2e:	9304      	str	r3, [sp, #16]
 8019f30:	2300      	movs	r3, #0
 8019f32:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8019f36:	9303      	str	r3, [sp, #12]
 8019f38:	f04f 0e01 	mov.w	lr, #1
 8019f3c:	2d00      	cmp	r5, #0
 8019f3e:	d07c      	beq.n	801a03a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 8019f40:	45ae      	cmp	lr, r5
 8019f42:	d26b      	bcs.n	801a01c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8019f44:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019f46:	eba5 050e 	sub.w	r5, r5, lr
 8019f4a:	4543      	cmp	r3, r8
 8019f4c:	b2ad      	uxth	r5, r5
 8019f4e:	460c      	mov	r4, r1
 8019f50:	d802      	bhi.n	8019f58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 8019f52:	e070      	b.n	801a036 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8019f54:	2b00      	cmp	r3, #0
 8019f56:	d15c      	bne.n	801a012 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8019f58:	9b05      	ldr	r3, [sp, #20]
 8019f5a:	9a04      	ldr	r2, [sp, #16]
 8019f5c:	785b      	ldrb	r3, [r3, #1]
 8019f5e:	9904      	ldr	r1, [sp, #16]
 8019f60:	f1c2 0207 	rsb	r2, r2, #7
 8019f64:	4093      	lsls	r3, r2
 8019f66:	005b      	lsls	r3, r3, #1
 8019f68:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8019f6c:	9b05      	ldr	r3, [sp, #20]
 8019f6e:	781b      	ldrb	r3, [r3, #0]
 8019f70:	410b      	asrs	r3, r1
 8019f72:	3101      	adds	r1, #1
 8019f74:	b2c9      	uxtb	r1, r1
 8019f76:	2908      	cmp	r1, #8
 8019f78:	9104      	str	r1, [sp, #16]
 8019f7a:	9905      	ldr	r1, [sp, #20]
 8019f7c:	bf0a      	itet	eq
 8019f7e:	3102      	addeq	r1, #2
 8019f80:	3101      	addne	r1, #1
 8019f82:	9105      	streq	r1, [sp, #20]
 8019f84:	b2db      	uxtb	r3, r3
 8019f86:	bf0a      	itet	eq
 8019f88:	2100      	moveq	r1, #0
 8019f8a:	9105      	strne	r1, [sp, #20]
 8019f8c:	9104      	streq	r1, [sp, #16]
 8019f8e:	4313      	orrs	r3, r2
 8019f90:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8019f92:	b29a      	uxth	r2, r3
 8019f94:	4291      	cmp	r1, r2
 8019f96:	d30a      	bcc.n	8019fae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8019f98:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8019f9c:	2301      	movs	r3, #1
 8019f9e:	9907      	ldr	r1, [sp, #28]
 8019fa0:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8019fa4:	d30f      	bcc.n	8019fc6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8019fa6:	2100      	movs	r1, #0
 8019fa8:	9301      	str	r3, [sp, #4]
 8019faa:	9103      	str	r1, [sp, #12]
 8019fac:	e032      	b.n	801a014 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 8019fae:	9b07      	ldr	r3, [sp, #28]
 8019fb0:	429a      	cmp	r2, r3
 8019fb2:	d318      	bcc.n	8019fe6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 8019fb4:	9b01      	ldr	r3, [sp, #4]
 8019fb6:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 8019fba:	445b      	add	r3, fp
 8019fbc:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8019fc0:	9b01      	ldr	r3, [sp, #4]
 8019fc2:	3301      	adds	r3, #1
 8019fc4:	b29b      	uxth	r3, r3
 8019fc6:	9907      	ldr	r1, [sp, #28]
 8019fc8:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8019fcc:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8019fd0:	7108      	strb	r0, [r1, #4]
 8019fd2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8019fd4:	80c8      	strh	r0, [r1, #6]
 8019fd6:	9801      	ldr	r0, [sp, #4]
 8019fd8:	3001      	adds	r0, #1
 8019fda:	7148      	strb	r0, [r1, #5]
 8019fdc:	9907      	ldr	r1, [sp, #28]
 8019fde:	3101      	adds	r1, #1
 8019fe0:	b289      	uxth	r1, r1
 8019fe2:	9107      	str	r1, [sp, #28]
 8019fe4:	e7df      	b.n	8019fa6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8019fe6:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8019fea:	4611      	mov	r1, r2
 8019fec:	795b      	ldrb	r3, [r3, #5]
 8019fee:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 8019ff2:	4458      	add	r0, fp
 8019ff4:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 8019ff6:	4406      	add	r6, r0
 8019ff8:	2e00      	cmp	r6, #0
 8019ffa:	dd06      	ble.n	801a00a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 8019ffc:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801a000:	790e      	ldrb	r6, [r1, #4]
 801a002:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801a006:	88c9      	ldrh	r1, [r1, #6]
 801a008:	e7f4      	b.n	8019ff4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801a00a:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 801a00e:	b29b      	uxth	r3, r3
 801a010:	e7c5      	b.n	8019f9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801a012:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a014:	920b      	str	r2, [sp, #44]	@ 0x2c
 801a016:	4621      	mov	r1, r4
 801a018:	469e      	mov	lr, r3
 801a01a:	e78f      	b.n	8019f3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801a01c:	9a03      	ldr	r2, [sp, #12]
 801a01e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801a022:	442a      	add	r2, r5
 801a024:	ebae 0305 	sub.w	r3, lr, r5
 801a028:	b292      	uxth	r2, r2
 801a02a:	b29b      	uxth	r3, r3
 801a02c:	9203      	str	r2, [sp, #12]
 801a02e:	2500      	movs	r5, #0
 801a030:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801a032:	4542      	cmp	r2, r8
 801a034:	d88e      	bhi.n	8019f54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801a036:	4621      	mov	r1, r4
 801a038:	e74e      	b.n	8019ed8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801a03a:	458e      	cmp	lr, r1
 801a03c:	bf29      	itett	cs
 801a03e:	ebae 0301 	subcs.w	r3, lr, r1
 801a042:	eba1 040e 	subcc.w	r4, r1, lr
 801a046:	b29b      	uxthcs	r3, r3
 801a048:	910c      	strcs	r1, [sp, #48]	@ 0x30
 801a04a:	bf2f      	iteee	cs
 801a04c:	462c      	movcs	r4, r5
 801a04e:	b2a4      	uxthcc	r4, r4
 801a050:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 801a054:	462b      	movcc	r3, r5
 801a056:	f04f 0900 	mov.w	r9, #0
 801a05a:	9a03      	ldr	r2, [sp, #12]
 801a05c:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801a05e:	444a      	add	r2, r9
 801a060:	4548      	cmp	r0, r9
 801a062:	b292      	uxth	r2, r2
 801a064:	d074      	beq.n	801a150 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801a066:	445a      	add	r2, fp
 801a068:	2004      	movs	r0, #4
 801a06a:	4605      	mov	r5, r0
 801a06c:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 801a070:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801a072:	fb15 0202 	smlabb	r2, r5, r2, r0
 801a076:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801a078:	5880      	ldr	r0, [r0, r2]
 801a07a:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801a07e:	d014      	beq.n	801a0aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801a080:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801a084:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801a088:	d112      	bne.n	801a0b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801a08a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801a08c:	2aff      	cmp	r2, #255	@ 0xff
 801a08e:	d10f      	bne.n	801a0b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801a090:	0942      	lsrs	r2, r0, #5
 801a092:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801a096:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a09a:	f025 0507 	bic.w	r5, r5, #7
 801a09e:	4315      	orrs	r5, r2
 801a0a0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a0a4:	4305      	orrs	r5, r0
 801a0a6:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801a0aa:	f109 0901 	add.w	r9, r9, #1
 801a0ae:	e7d4      	b.n	801a05a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801a0b0:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801a0b4:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a0b8:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 801a0bc:	9215      	str	r2, [sp, #84]	@ 0x54
 801a0be:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801a0c0:	fb02 fa0a 	mul.w	sl, r2, sl
 801a0c4:	f10a 0201 	add.w	r2, sl, #1
 801a0c8:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801a0cc:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a0d0:	1212      	asrs	r2, r2, #8
 801a0d2:	fa1f fa82 	uxth.w	sl, r2
 801a0d6:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801a0da:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801a0de:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a0e2:	43d2      	mvns	r2, r2
 801a0e4:	b2d2      	uxtb	r2, r2
 801a0e6:	fb16 f60a 	smulbb	r6, r6, sl
 801a0ea:	fa5f fc8c 	uxtb.w	ip, ip
 801a0ee:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801a0f2:	b2c0      	uxtb	r0, r0
 801a0f4:	fb07 6702 	mla	r7, r7, r2, r6
 801a0f8:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801a0fc:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801a0fe:	fb10 f00a 	smulbb	r0, r0, sl
 801a102:	fb0c 0002 	mla	r0, ip, r2, r0
 801a106:	b2ed      	uxtb	r5, r5
 801a108:	b2bf      	uxth	r7, r7
 801a10a:	fb15 f50a 	smulbb	r5, r5, sl
 801a10e:	b280      	uxth	r0, r0
 801a110:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801a114:	fb06 5602 	mla	r6, r6, r2, r5
 801a118:	1c7a      	adds	r2, r7, #1
 801a11a:	1c45      	adds	r5, r0, #1
 801a11c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a120:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a124:	b2b6      	uxth	r6, r6
 801a126:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a12a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801a12e:	432f      	orrs	r7, r5
 801a130:	1c75      	adds	r5, r6, #1
 801a132:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801a136:	096d      	lsrs	r5, r5, #5
 801a138:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a13c:	432f      	orrs	r7, r5
 801a13e:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801a142:	e7b2      	b.n	801a0aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801a144:	200152ec 	.word	0x200152ec
 801a148:	200152e6 	.word	0x200152e6
 801a14c:	fffff7fb 	.word	0xfffff7fb
 801a150:	9203      	str	r2, [sp, #12]
 801a152:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801a154:	458e      	cmp	lr, r1
 801a156:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801a15a:	f4ff af68 	bcc.w	801a02e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801a15e:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 801a160:	9906      	ldr	r1, [sp, #24]
 801a162:	8812      	ldrh	r2, [r2, #0]
 801a164:	1a52      	subs	r2, r2, r1
 801a166:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801a16a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801a16c:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801a16e:	3201      	adds	r2, #1
 801a170:	428a      	cmp	r2, r1
 801a172:	9209      	str	r2, [sp, #36]	@ 0x24
 801a174:	d111      	bne.n	801a19a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801a176:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 801a17a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 801a17e:	9b06      	ldr	r3, [sp, #24]
 801a180:	eba5 0509 	sub.w	r5, r5, r9
 801a184:	b2ad      	uxth	r5, r5
 801a186:	2d00      	cmp	r5, #0
 801a188:	bf08      	it	eq
 801a18a:	4619      	moveq	r1, r3
 801a18c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a18e:	bf18      	it	ne
 801a190:	2100      	movne	r1, #0
 801a192:	3301      	adds	r3, #1
 801a194:	930d      	str	r3, [sp, #52]	@ 0x34
 801a196:	b289      	uxth	r1, r1
 801a198:	e695      	b.n	8019ec6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801a19a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801a19e:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 801a1a2:	1b2d      	subs	r5, r5, r4
 801a1a4:	b2ad      	uxth	r5, r5
 801a1a6:	2d00      	cmp	r5, #0
 801a1a8:	bf18      	it	ne
 801a1aa:	2400      	movne	r4, #0
 801a1ac:	e740      	b.n	801a030 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801a1ae:	4b04      	ldr	r3, [pc, #16]	@ (801a1c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801a1b0:	6818      	ldr	r0, [r3, #0]
 801a1b2:	6803      	ldr	r3, [r0, #0]
 801a1b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a1b6:	4798      	blx	r3
 801a1b8:	b01d      	add	sp, #116	@ 0x74
 801a1ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a1be:	bf00      	nop
 801a1c0:	200152ec 	.word	0x200152ec

0801a1c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801a1c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a1c8:	b09f      	sub	sp, #124	@ 0x7c
 801a1ca:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801a1ce:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801a1d2:	920a      	str	r2, [sp, #40]	@ 0x28
 801a1d4:	461d      	mov	r5, r3
 801a1d6:	4604      	mov	r4, r0
 801a1d8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a1da:	2a00      	cmp	r2, #0
 801a1dc:	f000 81fa 	beq.w	801a5d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801a1e0:	6828      	ldr	r0, [r5, #0]
 801a1e2:	6869      	ldr	r1, [r5, #4]
 801a1e4:	aa1a      	add	r2, sp, #104	@ 0x68
 801a1e6:	c203      	stmia	r2!, {r0, r1}
 801a1e8:	6818      	ldr	r0, [r3, #0]
 801a1ea:	6859      	ldr	r1, [r3, #4]
 801a1ec:	aa1c      	add	r2, sp, #112	@ 0x70
 801a1ee:	c203      	stmia	r2!, {r0, r1}
 801a1f0:	a81a      	add	r0, sp, #104	@ 0x68
 801a1f2:	f7f7 fc31 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a1f6:	4629      	mov	r1, r5
 801a1f8:	a81c      	add	r0, sp, #112	@ 0x70
 801a1fa:	f7f7 fc55 	bl	8011aa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a1fe:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801a202:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801a206:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 801a20a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801a20e:	bfd7      	itett	le
 801a210:	b29a      	uxthle	r2, r3
 801a212:	2201      	movgt	r2, #1
 801a214:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801a218:	fb91 f2f2 	sdivle	r2, r1, r2
 801a21c:	9201      	str	r2, [sp, #4]
 801a21e:	9801      	ldr	r0, [sp, #4]
 801a220:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801a224:	fb92 f0f0 	sdiv	r0, r2, r0
 801a228:	b280      	uxth	r0, r0
 801a22a:	9010      	str	r0, [sp, #64]	@ 0x40
 801a22c:	9901      	ldr	r1, [sp, #4]
 801a22e:	9801      	ldr	r0, [sp, #4]
 801a230:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801a232:	440e      	add	r6, r1
 801a234:	fb05 2510 	mls	r5, r5, r0, r2
 801a238:	fb15 f503 	smulbb	r5, r5, r3
 801a23c:	3e01      	subs	r6, #1
 801a23e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801a242:	fb96 f6f1 	sdiv	r6, r6, r1
 801a246:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801a24a:	440d      	add	r5, r1
 801a24c:	4419      	add	r1, r3
 801a24e:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801a252:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801a256:	441a      	add	r2, r3
 801a258:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801a25c:	9304      	str	r3, [sp, #16]
 801a25e:	4b96      	ldr	r3, [pc, #600]	@ (801a4b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801a260:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801a264:	6818      	ldr	r0, [r3, #0]
 801a266:	6803      	ldr	r3, [r0, #0]
 801a268:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a26a:	4798      	blx	r3
 801a26c:	4b93      	ldr	r3, [pc, #588]	@ (801a4bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801a26e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801a272:	881a      	ldrh	r2, [r3, #0]
 801a274:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 801a278:	9318      	str	r3, [sp, #96]	@ 0x60
 801a27a:	fb02 c101 	mla	r1, r2, r1, ip
 801a27e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801a282:	4357      	muls	r7, r2
 801a284:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801a288:	3601      	adds	r6, #1
 801a28a:	920b      	str	r2, [sp, #44]	@ 0x2c
 801a28c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a28e:	4b8c      	ldr	r3, [pc, #560]	@ (801a4c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801a290:	b2b6      	uxth	r6, r6
 801a292:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801a296:	1d32      	adds	r2, r6, #4
 801a298:	9206      	str	r2, [sp, #24]
 801a29a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801a29c:	43d2      	mvns	r2, r2
 801a29e:	b2d2      	uxtb	r2, r2
 801a2a0:	b2ad      	uxth	r5, r5
 801a2a2:	9215      	str	r2, [sp, #84]	@ 0x54
 801a2a4:	9a04      	ldr	r2, [sp, #16]
 801a2a6:	2d00      	cmp	r5, #0
 801a2a8:	bf0c      	ite	eq
 801a2aa:	4611      	moveq	r1, r2
 801a2ac:	2100      	movne	r1, #0
 801a2ae:	2200      	movs	r2, #0
 801a2b0:	1b1b      	subs	r3, r3, r4
 801a2b2:	b289      	uxth	r1, r1
 801a2b4:	920d      	str	r2, [sp, #52]	@ 0x34
 801a2b6:	9319      	str	r3, [sp, #100]	@ 0x64
 801a2b8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801a2ba:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a2bc:	fa12 f383 	uxtah	r3, r2, r3
 801a2c0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a2c2:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801a2c6:	3304      	adds	r3, #4
 801a2c8:	9307      	str	r3, [sp, #28]
 801a2ca:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a2cc:	455b      	cmp	r3, fp
 801a2ce:	f240 817c 	bls.w	801a5ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801a2d2:	9a01      	ldr	r2, [sp, #4]
 801a2d4:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801a2d8:	fbb5 f3f3 	udiv	r3, r5, r3
 801a2dc:	1ad3      	subs	r3, r2, r3
 801a2de:	b29b      	uxth	r3, r3
 801a2e0:	9316      	str	r3, [sp, #88]	@ 0x58
 801a2e2:	9b07      	ldr	r3, [sp, #28]
 801a2e4:	9807      	ldr	r0, [sp, #28]
 801a2e6:	785a      	ldrb	r2, [r3, #1]
 801a2e8:	789b      	ldrb	r3, [r3, #2]
 801a2ea:	7800      	ldrb	r0, [r0, #0]
 801a2ec:	9011      	str	r0, [sp, #68]	@ 0x44
 801a2ee:	021b      	lsls	r3, r3, #8
 801a2f0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801a2f4:	9a07      	ldr	r2, [sp, #28]
 801a2f6:	78d2      	ldrb	r2, [r2, #3]
 801a2f8:	4313      	orrs	r3, r2
 801a2fa:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801a2fc:	3001      	adds	r0, #1
 801a2fe:	441a      	add	r2, r3
 801a300:	9005      	str	r0, [sp, #20]
 801a302:	1c50      	adds	r0, r2, #1
 801a304:	9003      	str	r0, [sp, #12]
 801a306:	7852      	ldrb	r2, [r2, #1]
 801a308:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801a30a:	0212      	lsls	r2, r2, #8
 801a30c:	5cc3      	ldrb	r3, [r0, r3]
 801a30e:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801a312:	431a      	orrs	r2, r3
 801a314:	b293      	uxth	r3, r2
 801a316:	930c      	str	r3, [sp, #48]	@ 0x30
 801a318:	2300      	movs	r3, #0
 801a31a:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801a31e:	9308      	str	r3, [sp, #32]
 801a320:	461a      	mov	r2, r3
 801a322:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801a326:	930e      	str	r3, [sp, #56]	@ 0x38
 801a328:	f04f 0801 	mov.w	r8, #1
 801a32c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801a330:	f8cd 8008 	str.w	r8, [sp, #8]
 801a334:	46c4      	mov	ip, r8
 801a336:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a338:	2d00      	cmp	r5, #0
 801a33a:	d07c      	beq.n	801a436 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801a33c:	45ac      	cmp	ip, r5
 801a33e:	d26c      	bcs.n	801a41a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801a340:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a342:	eba5 050c 	sub.w	r5, r5, ip
 801a346:	455b      	cmp	r3, fp
 801a348:	b2ad      	uxth	r5, r5
 801a34a:	4608      	mov	r0, r1
 801a34c:	d802      	bhi.n	801a354 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801a34e:	e070      	b.n	801a432 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801a350:	2b00      	cmp	r3, #0
 801a352:	d15c      	bne.n	801a40e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801a354:	9b03      	ldr	r3, [sp, #12]
 801a356:	9a02      	ldr	r2, [sp, #8]
 801a358:	785b      	ldrb	r3, [r3, #1]
 801a35a:	9902      	ldr	r1, [sp, #8]
 801a35c:	f1c2 0207 	rsb	r2, r2, #7
 801a360:	4093      	lsls	r3, r2
 801a362:	005b      	lsls	r3, r3, #1
 801a364:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801a368:	9b03      	ldr	r3, [sp, #12]
 801a36a:	781b      	ldrb	r3, [r3, #0]
 801a36c:	410b      	asrs	r3, r1
 801a36e:	3101      	adds	r1, #1
 801a370:	b2c9      	uxtb	r1, r1
 801a372:	2908      	cmp	r1, #8
 801a374:	9102      	str	r1, [sp, #8]
 801a376:	9903      	ldr	r1, [sp, #12]
 801a378:	bf0a      	itet	eq
 801a37a:	3102      	addeq	r1, #2
 801a37c:	3101      	addne	r1, #1
 801a37e:	9103      	streq	r1, [sp, #12]
 801a380:	b2db      	uxtb	r3, r3
 801a382:	bf0a      	itet	eq
 801a384:	2100      	moveq	r1, #0
 801a386:	9103      	strne	r1, [sp, #12]
 801a388:	9102      	streq	r1, [sp, #8]
 801a38a:	4313      	orrs	r3, r2
 801a38c:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801a38e:	b29a      	uxth	r2, r3
 801a390:	4291      	cmp	r1, r2
 801a392:	d30a      	bcc.n	801a3aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801a394:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801a398:	2301      	movs	r3, #1
 801a39a:	9905      	ldr	r1, [sp, #20]
 801a39c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801a3a0:	d30f      	bcc.n	801a3c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801a3a2:	2100      	movs	r1, #0
 801a3a4:	4698      	mov	r8, r3
 801a3a6:	9100      	str	r1, [sp, #0]
 801a3a8:	e032      	b.n	801a410 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801a3aa:	9b05      	ldr	r3, [sp, #20]
 801a3ac:	429a      	cmp	r2, r3
 801a3ae:	d318      	bcc.n	801a3e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801a3b0:	eb04 0308 	add.w	r3, r4, r8
 801a3b4:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 801a3b8:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801a3bc:	f108 0301 	add.w	r3, r8, #1
 801a3c0:	b29b      	uxth	r3, r3
 801a3c2:	9905      	ldr	r1, [sp, #20]
 801a3c4:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801a3c8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801a3cc:	710e      	strb	r6, [r1, #4]
 801a3ce:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801a3d0:	80ce      	strh	r6, [r1, #6]
 801a3d2:	f108 0601 	add.w	r6, r8, #1
 801a3d6:	714e      	strb	r6, [r1, #5]
 801a3d8:	9905      	ldr	r1, [sp, #20]
 801a3da:	3101      	adds	r1, #1
 801a3dc:	b289      	uxth	r1, r1
 801a3de:	9105      	str	r1, [sp, #20]
 801a3e0:	e7df      	b.n	801a3a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801a3e2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801a3e6:	4611      	mov	r1, r2
 801a3e8:	795b      	ldrb	r3, [r3, #5]
 801a3ea:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801a3ee:	4426      	add	r6, r4
 801a3f0:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 801a3f2:	4437      	add	r7, r6
 801a3f4:	2f00      	cmp	r7, #0
 801a3f6:	dd06      	ble.n	801a406 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801a3f8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801a3fc:	790f      	ldrb	r7, [r1, #4]
 801a3fe:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801a402:	88c9      	ldrh	r1, [r1, #6]
 801a404:	e7f4      	b.n	801a3f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801a406:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801a40a:	b29b      	uxth	r3, r3
 801a40c:	e7c5      	b.n	801a39a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801a40e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801a410:	920c      	str	r2, [sp, #48]	@ 0x30
 801a412:	4601      	mov	r1, r0
 801a414:	9a00      	ldr	r2, [sp, #0]
 801a416:	469c      	mov	ip, r3
 801a418:	e78e      	b.n	801a338 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801a41a:	1957      	adds	r7, r2, r5
 801a41c:	ebac 0305 	sub.w	r3, ip, r5
 801a420:	b2ba      	uxth	r2, r7
 801a422:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801a426:	9200      	str	r2, [sp, #0]
 801a428:	b29b      	uxth	r3, r3
 801a42a:	2500      	movs	r5, #0
 801a42c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a42e:	455a      	cmp	r2, fp
 801a430:	d88e      	bhi.n	801a350 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801a432:	4601      	mov	r1, r0
 801a434:	e749      	b.n	801a2ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801a436:	458c      	cmp	ip, r1
 801a438:	bf2c      	ite	cs
 801a43a:	4628      	movcs	r0, r5
 801a43c:	462b      	movcc	r3, r5
 801a43e:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801a440:	bf27      	ittee	cs
 801a442:	9109      	strcs	r1, [sp, #36]	@ 0x24
 801a444:	ebac 0301 	subcs.w	r3, ip, r1
 801a448:	eba1 000c 	subcc.w	r0, r1, ip
 801a44c:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 801a450:	bf2c      	ite	cs
 801a452:	b29b      	uxthcs	r3, r3
 801a454:	b280      	uxthcc	r0, r0
 801a456:	2dff      	cmp	r5, #255	@ 0xff
 801a458:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801a45a:	eb02 0705 	add.w	r7, r2, r5
 801a45e:	b2bd      	uxth	r5, r7
 801a460:	9500      	str	r5, [sp, #0]
 801a462:	d12f      	bne.n	801a4c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801a464:	465e      	mov	r6, fp
 801a466:	9d00      	ldr	r5, [sp, #0]
 801a468:	42aa      	cmp	r2, r5
 801a46a:	f040 8084 	bne.w	801a576 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801a46e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801a470:	458c      	cmp	ip, r1
 801a472:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801a476:	d3d8      	bcc.n	801a42a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801a478:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801a47a:	9904      	ldr	r1, [sp, #16]
 801a47c:	8812      	ldrh	r2, [r2, #0]
 801a47e:	1a52      	subs	r2, r2, r1
 801a480:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801a484:	9a08      	ldr	r2, [sp, #32]
 801a486:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801a488:	3201      	adds	r2, #1
 801a48a:	428a      	cmp	r2, r1
 801a48c:	9208      	str	r2, [sp, #32]
 801a48e:	f040 8092 	bne.w	801a5b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801a492:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801a496:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 801a49a:	9b04      	ldr	r3, [sp, #16]
 801a49c:	eba5 050c 	sub.w	r5, r5, ip
 801a4a0:	b2ad      	uxth	r5, r5
 801a4a2:	2d00      	cmp	r5, #0
 801a4a4:	bf08      	it	eq
 801a4a6:	4619      	moveq	r1, r3
 801a4a8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a4aa:	bf18      	it	ne
 801a4ac:	2100      	movne	r1, #0
 801a4ae:	3301      	adds	r3, #1
 801a4b0:	930d      	str	r3, [sp, #52]	@ 0x34
 801a4b2:	b289      	uxth	r1, r1
 801a4b4:	e700      	b.n	801a2b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801a4b6:	bf00      	nop
 801a4b8:	200152ec 	.word	0x200152ec
 801a4bc:	200152e6 	.word	0x200152e6
 801a4c0:	fffff7fb 	.word	0xfffff7fb
 801a4c4:	46d9      	mov	r9, fp
 801a4c6:	9d00      	ldr	r5, [sp, #0]
 801a4c8:	42aa      	cmp	r2, r5
 801a4ca:	d0d0      	beq.n	801a46e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801a4cc:	1c55      	adds	r5, r2, #1
 801a4ce:	4422      	add	r2, r4
 801a4d0:	9517      	str	r5, [sp, #92]	@ 0x5c
 801a4d2:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 801a4d6:	9a06      	ldr	r2, [sp, #24]
 801a4d8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a4dc:	4472      	add	r2, lr
 801a4de:	9212      	str	r2, [sp, #72]	@ 0x48
 801a4e0:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801a4e2:	f8b9 2000 	ldrh.w	r2, [r9]
 801a4e6:	f897 a002 	ldrb.w	sl, [r7, #2]
 801a4ea:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801a4ec:	1216      	asrs	r6, r2, #8
 801a4ee:	fb1a fa07 	smulbb	sl, sl, r7
 801a4f2:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801a4f6:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801a4f8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801a4fc:	fb06 a607 	mla	r6, r6, r7, sl
 801a500:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801a502:	f897 a001 	ldrb.w	sl, [r7, #1]
 801a506:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801a508:	10d5      	asrs	r5, r2, #3
 801a50a:	fb1a fa07 	smulbb	sl, sl, r7
 801a50e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801a512:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801a514:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801a518:	fb05 a507 	mla	r5, r5, r7, sl
 801a51c:	9f06      	ldr	r7, [sp, #24]
 801a51e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801a522:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801a524:	00d2      	lsls	r2, r2, #3
 801a526:	fb1e fe07 	smulbb	lr, lr, r7
 801a52a:	b2d2      	uxtb	r2, r2
 801a52c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801a52e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801a532:	b2b6      	uxth	r6, r6
 801a534:	fb02 e207 	mla	r2, r2, r7, lr
 801a538:	b292      	uxth	r2, r2
 801a53a:	b2ad      	uxth	r5, r5
 801a53c:	f106 0a01 	add.w	sl, r6, #1
 801a540:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801a544:	f102 0e01 	add.w	lr, r2, #1
 801a548:	f105 0a01 	add.w	sl, r5, #1
 801a54c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801a550:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a554:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801a558:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a55c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a560:	ea4e 0606 	orr.w	r6, lr, r6
 801a564:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801a568:	ea46 060a 	orr.w	r6, r6, sl
 801a56c:	f829 6b02 	strh.w	r6, [r9], #2
 801a570:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801a574:	e7a7      	b.n	801a4c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801a576:	f102 0e01 	add.w	lr, r2, #1
 801a57a:	4422      	add	r2, r4
 801a57c:	9f06      	ldr	r7, [sp, #24]
 801a57e:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 801a582:	9a06      	ldr	r2, [sp, #24]
 801a584:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a588:	eb02 0a05 	add.w	sl, r2, r5
 801a58c:	4a13      	ldr	r2, [pc, #76]	@ (801a5dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801a58e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801a592:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801a596:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801a59a:	00d2      	lsls	r2, r2, #3
 801a59c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a5a0:	ea49 0202 	orr.w	r2, r9, r2
 801a5a4:	f817 9005 	ldrb.w	r9, [r7, r5]
 801a5a8:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801a5ac:	f826 2b02 	strh.w	r2, [r6], #2
 801a5b0:	fa1f f28e 	uxth.w	r2, lr
 801a5b4:	e757      	b.n	801a466 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801a5b6:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801a5ba:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801a5be:	1a2d      	subs	r5, r5, r0
 801a5c0:	b2ad      	uxth	r5, r5
 801a5c2:	2d00      	cmp	r5, #0
 801a5c4:	bf18      	it	ne
 801a5c6:	2000      	movne	r0, #0
 801a5c8:	e730      	b.n	801a42c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801a5ca:	4b05      	ldr	r3, [pc, #20]	@ (801a5e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801a5cc:	6818      	ldr	r0, [r3, #0]
 801a5ce:	6803      	ldr	r3, [r0, #0]
 801a5d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a5d2:	4798      	blx	r3
 801a5d4:	b01f      	add	sp, #124	@ 0x7c
 801a5d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a5da:	bf00      	nop
 801a5dc:	fffff800 	.word	0xfffff800
 801a5e0:	200152ec 	.word	0x200152ec

0801a5e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801a5e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a5e8:	b091      	sub	sp, #68	@ 0x44
 801a5ea:	469b      	mov	fp, r3
 801a5ec:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 801a5f0:	4616      	mov	r6, r2
 801a5f2:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 801a5f6:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a5fa:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801a5fe:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801a602:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801a606:	4604      	mov	r4, r0
 801a608:	460d      	mov	r5, r1
 801a60a:	4640      	mov	r0, r8
 801a60c:	4659      	mov	r1, fp
 801a60e:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801a612:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 801a616:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 801a61a:	f7f2 f847 	bl	800c6ac <_ZN8touchgfx4RectaNERKS0_>
 801a61e:	4631      	mov	r1, r6
 801a620:	4640      	mov	r0, r8
 801a622:	f7f2 f843 	bl	800c6ac <_ZN8touchgfx4RectaNERKS0_>
 801a626:	4b74      	ldr	r3, [pc, #464]	@ (801a7f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801a628:	8818      	ldrh	r0, [r3, #0]
 801a62a:	4b74      	ldr	r3, [pc, #464]	@ (801a7fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801a62c:	8819      	ldrh	r1, [r3, #0]
 801a62e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801a632:	2b00      	cmp	r3, #0
 801a634:	b202      	sxth	r2, r0
 801a636:	b20e      	sxth	r6, r1
 801a638:	da07      	bge.n	801a64a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801a63a:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801a63e:	4463      	add	r3, ip
 801a640:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801a644:	2300      	movs	r3, #0
 801a646:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 801a64a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801a64e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801a652:	1ad2      	subs	r2, r2, r3
 801a654:	4594      	cmp	ip, r2
 801a656:	bfc4      	itt	gt
 801a658:	1ac2      	subgt	r2, r0, r3
 801a65a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 801a65e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801a662:	2a00      	cmp	r2, #0
 801a664:	da07      	bge.n	801a676 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801a666:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 801a66a:	4462      	add	r2, ip
 801a66c:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801a670:	2200      	movs	r2, #0
 801a672:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801a676:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 801a67a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801a67e:	eba6 060a 	sub.w	r6, r6, sl
 801a682:	42b2      	cmp	r2, r6
 801a684:	bfc4      	itt	gt
 801a686:	eba1 020a 	subgt.w	r2, r1, sl
 801a68a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 801a68e:	4a5c      	ldr	r2, [pc, #368]	@ (801a800 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801a690:	7812      	ldrb	r2, [r2, #0]
 801a692:	b9a2      	cbnz	r2, 801a6be <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801a694:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801a698:	4286      	cmp	r6, r0
 801a69a:	4640      	mov	r0, r8
 801a69c:	9303      	str	r3, [sp, #12]
 801a69e:	bf14      	ite	ne
 801a6a0:	2600      	movne	r6, #0
 801a6a2:	2601      	moveq	r6, #1
 801a6a4:	f7f2 f845 	bl	800c732 <_ZNK8touchgfx4Rect7isEmptyEv>
 801a6a8:	9b03      	ldr	r3, [sp, #12]
 801a6aa:	b160      	cbz	r0, 801a6c6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801a6ac:	2300      	movs	r3, #0
 801a6ae:	8023      	strh	r3, [r4, #0]
 801a6b0:	8063      	strh	r3, [r4, #2]
 801a6b2:	80a3      	strh	r3, [r4, #4]
 801a6b4:	4620      	mov	r0, r4
 801a6b6:	80e3      	strh	r3, [r4, #6]
 801a6b8:	b011      	add	sp, #68	@ 0x44
 801a6ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a6be:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801a6c2:	428e      	cmp	r6, r1
 801a6c4:	e7e9      	b.n	801a69a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801a6c6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801a6ca:	9205      	str	r2, [sp, #20]
 801a6cc:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801a6d0:	9206      	str	r2, [sp, #24]
 801a6d2:	f8bb 2000 	ldrh.w	r2, [fp]
 801a6d6:	900e      	str	r0, [sp, #56]	@ 0x38
 801a6d8:	1a9b      	subs	r3, r3, r2
 801a6da:	b21b      	sxth	r3, r3
 801a6dc:	9303      	str	r3, [sp, #12]
 801a6de:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801a6e2:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 801a6e6:	ebaa 0a03 	sub.w	sl, sl, r3
 801a6ea:	fa0f f38a 	sxth.w	r3, sl
 801a6ee:	9304      	str	r3, [sp, #16]
 801a6f0:	9b03      	ldr	r3, [sp, #12]
 801a6f2:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801a6f6:	9b04      	ldr	r3, [sp, #16]
 801a6f8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801a6fc:	9b05      	ldr	r3, [sp, #20]
 801a6fe:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801a702:	a90e      	add	r1, sp, #56	@ 0x38
 801a704:	9b06      	ldr	r3, [sp, #24]
 801a706:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801a70a:	a80c      	add	r0, sp, #48	@ 0x30
 801a70c:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 801a710:	f7f7 f9ca 	bl	8011aa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a714:	4640      	mov	r0, r8
 801a716:	f7f7 f99f 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a71a:	a80e      	add	r0, sp, #56	@ 0x38
 801a71c:	f7f7 f99c 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a720:	4b38      	ldr	r3, [pc, #224]	@ (801a804 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801a722:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 801a726:	881b      	ldrh	r3, [r3, #0]
 801a728:	9307      	str	r3, [sp, #28]
 801a72a:	682b      	ldr	r3, [r5, #0]
 801a72c:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 801a808 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801a730:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a732:	4628      	mov	r0, r5
 801a734:	4798      	blx	r3
 801a736:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 801a73a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801a73e:	4681      	mov	r9, r0
 801a740:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801a744:	f8db 0000 	ldr.w	r0, [fp]
 801a748:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801a74a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801a74e:	6803      	ldr	r3, [r0, #0]
 801a750:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801a752:	4798      	blx	r3
 801a754:	4607      	mov	r7, r0
 801a756:	f8db 0000 	ldr.w	r0, [fp]
 801a75a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801a75e:	6803      	ldr	r3, [r0, #0]
 801a760:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801a764:	9109      	str	r1, [sp, #36]	@ 0x24
 801a766:	9208      	str	r2, [sp, #32]
 801a768:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801a76a:	4798      	blx	r3
 801a76c:	f010 0f01 	tst.w	r0, #1
 801a770:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801a774:	d012      	beq.n	801a79c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801a776:	f8db 0000 	ldr.w	r0, [fp]
 801a77a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 801a77e:	6803      	ldr	r3, [r0, #0]
 801a780:	9200      	str	r2, [sp, #0]
 801a782:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 801a784:	e898 0006 	ldmia.w	r8, {r1, r2}
 801a788:	462b      	mov	r3, r5
 801a78a:	47b0      	blx	r6
 801a78c:	9b03      	ldr	r3, [sp, #12]
 801a78e:	8023      	strh	r3, [r4, #0]
 801a790:	9b04      	ldr	r3, [sp, #16]
 801a792:	8063      	strh	r3, [r4, #2]
 801a794:	9b05      	ldr	r3, [sp, #20]
 801a796:	80a3      	strh	r3, [r4, #4]
 801a798:	9b06      	ldr	r3, [sp, #24]
 801a79a:	e78b      	b.n	801a6b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801a79c:	fb09 f202 	mul.w	r2, r9, r2
 801a7a0:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801a7a4:	440f      	add	r7, r1
 801a7a6:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 801a7aa:	b166      	cbz	r6, 801a7c6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801a7ac:	9a07      	ldr	r2, [sp, #28]
 801a7ae:	4592      	cmp	sl, r2
 801a7b0:	d109      	bne.n	801a7c6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801a7b2:	f8db 0000 	ldr.w	r0, [fp]
 801a7b6:	6802      	ldr	r2, [r0, #0]
 801a7b8:	fb09 f303 	mul.w	r3, r9, r3
 801a7bc:	6b96      	ldr	r6, [r2, #56]	@ 0x38
 801a7be:	4629      	mov	r1, r5
 801a7c0:	463a      	mov	r2, r7
 801a7c2:	47b0      	blx	r6
 801a7c4:	e7e2      	b.n	801a78c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801a7c6:	fb0a f303 	mul.w	r3, sl, r3
 801a7ca:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 801a808 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801a7ce:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801a7d2:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801a7d6:	4545      	cmp	r5, r8
 801a7d8:	d2d8      	bcs.n	801a78c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801a7da:	f8db 0000 	ldr.w	r0, [fp]
 801a7de:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801a7e2:	6802      	ldr	r2, [r0, #0]
 801a7e4:	4629      	mov	r1, r5
 801a7e6:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
 801a7ea:	005b      	lsls	r3, r3, #1
 801a7ec:	463a      	mov	r2, r7
 801a7ee:	47d0      	blx	sl
 801a7f0:	444f      	add	r7, r9
 801a7f2:	4435      	add	r5, r6
 801a7f4:	e7ef      	b.n	801a7d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801a7f6:	bf00      	nop
 801a7f8:	200152e0 	.word	0x200152e0
 801a7fc:	200152e2 	.word	0x200152e2
 801a800:	200152e4 	.word	0x200152e4
 801a804:	200152e6 	.word	0x200152e6
 801a808:	200152ec 	.word	0x200152ec

0801a80c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801a80c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a80e:	4606      	mov	r6, r0
 801a810:	b087      	sub	sp, #28
 801a812:	460c      	mov	r4, r1
 801a814:	4617      	mov	r7, r2
 801a816:	461d      	mov	r5, r3
 801a818:	b333      	cbz	r3, 801a868 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801a81a:	4608      	mov	r0, r1
 801a81c:	f7f1 ff89 	bl	800c732 <_ZNK8touchgfx4Rect7isEmptyEv>
 801a820:	bb10      	cbnz	r0, 801a868 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801a822:	6820      	ldr	r0, [r4, #0]
 801a824:	6861      	ldr	r1, [r4, #4]
 801a826:	4c1c      	ldr	r4, [pc, #112]	@ (801a898 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801a828:	ab04      	add	r3, sp, #16
 801a82a:	c303      	stmia	r3!, {r0, r1}
 801a82c:	a804      	add	r0, sp, #16
 801a82e:	f7f7 f913 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a832:	6820      	ldr	r0, [r4, #0]
 801a834:	6803      	ldr	r3, [r0, #0]
 801a836:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801a838:	4798      	blx	r3
 801a83a:	2dff      	cmp	r5, #255	@ 0xff
 801a83c:	d016      	beq.n	801a86c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801a83e:	f010 0f08 	tst.w	r0, #8
 801a842:	6820      	ldr	r0, [r4, #0]
 801a844:	d015      	beq.n	801a872 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801a846:	2400      	movs	r4, #0
 801a848:	6801      	ldr	r1, [r0, #0]
 801a84a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801a84e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801a852:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801a856:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801a85a:	9401      	str	r4, [sp, #4]
 801a85c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801a860:	9400      	str	r4, [sp, #0]
 801a862:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
 801a864:	4639      	mov	r1, r7
 801a866:	47a0      	blx	r4
 801a868:	b007      	add	sp, #28
 801a86a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a86c:	f010 0f02 	tst.w	r0, #2
 801a870:	e7e7      	b.n	801a842 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801a872:	6803      	ldr	r3, [r0, #0]
 801a874:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a876:	4798      	blx	r3
 801a878:	4b08      	ldr	r3, [pc, #32]	@ (801a89c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801a87a:	881a      	ldrh	r2, [r3, #0]
 801a87c:	6833      	ldr	r3, [r6, #0]
 801a87e:	e9cd 7500 	strd	r7, r5, [sp]
 801a882:	4601      	mov	r1, r0
 801a884:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 801a886:	4630      	mov	r0, r6
 801a888:	ab04      	add	r3, sp, #16
 801a88a:	47a8      	blx	r5
 801a88c:	6820      	ldr	r0, [r4, #0]
 801a88e:	6803      	ldr	r3, [r0, #0]
 801a890:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a892:	4798      	blx	r3
 801a894:	e7e8      	b.n	801a868 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801a896:	bf00      	nop
 801a898:	200152ec 	.word	0x200152ec
 801a89c:	200152e6 	.word	0x200152e6

0801a8a0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801a8a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a8a4:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 801a8a8:	9e08      	ldr	r6, [sp, #32]
 801a8aa:	4688      	mov	r8, r1
 801a8ac:	4614      	mov	r4, r2
 801a8ae:	461d      	mov	r5, r3
 801a8b0:	2f00      	cmp	r7, #0
 801a8b2:	f000 80a9 	beq.w	801aa08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801a8b6:	4618      	mov	r0, r3
 801a8b8:	f7f1 ff3b 	bl	800c732 <_ZNK8touchgfx4Rect7isEmptyEv>
 801a8bc:	2800      	cmp	r0, #0
 801a8be:	f040 80a3 	bne.w	801aa08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801a8c2:	f9b5 1000 	ldrsh.w	r1, [r5]
 801a8c6:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801a8ca:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801a8ce:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801a8d2:	fb04 1303 	mla	r3, r4, r3, r1
 801a8d6:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801a8da:	4365      	muls	r5, r4
 801a8dc:	2fff      	cmp	r7, #255	@ 0xff
 801a8de:	eba4 0200 	sub.w	r2, r4, r0
 801a8e2:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801a8e6:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801a8ea:	d04a      	beq.n	801a982 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801a8ec:	b2bc      	uxth	r4, r7
 801a8ee:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 801a8f2:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801a8f6:	fa5f f788 	uxtb.w	r7, r8
 801a8fa:	b2f3      	uxtb	r3, r6
 801a8fc:	0040      	lsls	r0, r0, #1
 801a8fe:	fb0e fe04 	mul.w	lr, lr, r4
 801a902:	4367      	muls	r7, r4
 801a904:	4363      	muls	r3, r4
 801a906:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801a90a:	fa1f fc8c 	uxth.w	ip, ip
 801a90e:	42a9      	cmp	r1, r5
 801a910:	d27a      	bcs.n	801aa08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801a912:	eb01 0900 	add.w	r9, r1, r0
 801a916:	4549      	cmp	r1, r9
 801a918:	d231      	bcs.n	801a97e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801a91a:	880a      	ldrh	r2, [r1, #0]
 801a91c:	1214      	asrs	r4, r2, #8
 801a91e:	10d6      	asrs	r6, r2, #3
 801a920:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801a924:	00d2      	lsls	r2, r2, #3
 801a926:	b2d2      	uxtb	r2, r2
 801a928:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801a92c:	fb14 f40c 	smulbb	r4, r4, ip
 801a930:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801a934:	4474      	add	r4, lr
 801a936:	fb12 f20c 	smulbb	r2, r2, ip
 801a93a:	b2a4      	uxth	r4, r4
 801a93c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801a940:	441a      	add	r2, r3
 801a942:	b292      	uxth	r2, r2
 801a944:	f104 0a01 	add.w	sl, r4, #1
 801a948:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801a94c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801a950:	fb16 f60c 	smulbb	r6, r6, ip
 801a954:	f102 0a01 	add.w	sl, r2, #1
 801a958:	443e      	add	r6, r7
 801a95a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801a95e:	b2b6      	uxth	r6, r6
 801a960:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801a964:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a968:	4322      	orrs	r2, r4
 801a96a:	1c74      	adds	r4, r6, #1
 801a96c:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801a970:	0976      	lsrs	r6, r6, #5
 801a972:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801a976:	4332      	orrs	r2, r6
 801a978:	f821 2b02 	strh.w	r2, [r1], #2
 801a97c:	e7cb      	b.n	801a916 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801a97e:	4441      	add	r1, r8
 801a980:	e7c5      	b.n	801a90e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801a982:	4f22      	ldr	r7, [pc, #136]	@ (801aa0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801a984:	0973      	lsrs	r3, r6, #5
 801a986:	ea08 0707 	and.w	r7, r8, r7
 801a98a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a98e:	433b      	orrs	r3, r7
 801a990:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801a994:	4333      	orrs	r3, r6
 801a996:	07e7      	lsls	r7, r4, #31
 801a998:	b29b      	uxth	r3, r3
 801a99a:	d50b      	bpl.n	801a9b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801a99c:	0040      	lsls	r0, r0, #1
 801a99e:	0052      	lsls	r2, r2, #1
 801a9a0:	42a9      	cmp	r1, r5
 801a9a2:	d231      	bcs.n	801aa08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801a9a4:	180c      	adds	r4, r1, r0
 801a9a6:	42a1      	cmp	r1, r4
 801a9a8:	d202      	bcs.n	801a9b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801a9aa:	f821 3b02 	strh.w	r3, [r1], #2
 801a9ae:	e7fa      	b.n	801a9a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801a9b0:	4411      	add	r1, r2
 801a9b2:	e7f5      	b.n	801a9a0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801a9b4:	078e      	lsls	r6, r1, #30
 801a9b6:	d008      	beq.n	801a9ca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801a9b8:	0066      	lsls	r6, r4, #1
 801a9ba:	460a      	mov	r2, r1
 801a9bc:	42aa      	cmp	r2, r5
 801a9be:	d202      	bcs.n	801a9c6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801a9c0:	8013      	strh	r3, [r2, #0]
 801a9c2:	4432      	add	r2, r6
 801a9c4:	e7fa      	b.n	801a9bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801a9c6:	3102      	adds	r1, #2
 801a9c8:	3801      	subs	r0, #1
 801a9ca:	07c2      	lsls	r2, r0, #31
 801a9cc:	d50b      	bpl.n	801a9e6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801a9ce:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 801a9d2:	3a01      	subs	r2, #1
 801a9d4:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801a9d8:	0066      	lsls	r6, r4, #1
 801a9da:	42aa      	cmp	r2, r5
 801a9dc:	d202      	bcs.n	801a9e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801a9de:	8013      	strh	r3, [r2, #0]
 801a9e0:	4432      	add	r2, r6
 801a9e2:	e7fa      	b.n	801a9da <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801a9e4:	3801      	subs	r0, #1
 801a9e6:	b178      	cbz	r0, 801aa08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801a9e8:	1040      	asrs	r0, r0, #1
 801a9ea:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801a9ee:	0080      	lsls	r0, r0, #2
 801a9f0:	0064      	lsls	r4, r4, #1
 801a9f2:	42a9      	cmp	r1, r5
 801a9f4:	d208      	bcs.n	801aa08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801a9f6:	180e      	adds	r6, r1, r0
 801a9f8:	460a      	mov	r2, r1
 801a9fa:	42b2      	cmp	r2, r6
 801a9fc:	d202      	bcs.n	801aa04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801a9fe:	f842 3b04 	str.w	r3, [r2], #4
 801aa02:	e7fa      	b.n	801a9fa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801aa04:	4421      	add	r1, r4
 801aa06:	e7f4      	b.n	801a9f2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801aa08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801aa0c:	00fff800 	.word	0x00fff800

0801aa10 <_ZN8touchgfx8LCD16bppC1Ev>:
 801aa10:	2200      	movs	r2, #0
 801aa12:	4912      	ldr	r1, [pc, #72]	@ (801aa5c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801aa14:	6001      	str	r1, [r0, #0]
 801aa16:	e9c0 2201 	strd	r2, r2, [r0, #4]
 801aa1a:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801aa1e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801aa22:	e9c0 2207 	strd	r2, r2, [r0, #28]
 801aa26:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 801aa2a:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 801aa2e:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 801aa32:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 801aa36:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 801aa3a:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 801aa3e:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 801aa42:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 801aa46:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 801aa4a:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 801aa4e:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 801aa52:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 801aa56:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 801aa5a:	4770      	bx	lr
 801aa5c:	08029068 	.word	0x08029068

0801aa60 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801aa60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa64:	460d      	mov	r5, r1
 801aa66:	b08d      	sub	sp, #52	@ 0x34
 801aa68:	4604      	mov	r4, r0
 801aa6a:	6808      	ldr	r0, [r1, #0]
 801aa6c:	6849      	ldr	r1, [r1, #4]
 801aa6e:	4699      	mov	r9, r3
 801aa70:	ab08      	add	r3, sp, #32
 801aa72:	c303      	stmia	r3!, {r0, r1}
 801aa74:	6810      	ldr	r0, [r2, #0]
 801aa76:	6851      	ldr	r1, [r2, #4]
 801aa78:	ab0a      	add	r3, sp, #40	@ 0x28
 801aa7a:	c303      	stmia	r3!, {r0, r1}
 801aa7c:	a808      	add	r0, sp, #32
 801aa7e:	f7f6 ffeb 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801aa82:	4629      	mov	r1, r5
 801aa84:	a80a      	add	r0, sp, #40	@ 0x28
 801aa86:	f7f7 f80f 	bl	8011aa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801aa8a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801aa8e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 801aa92:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 801aa96:	4d63      	ldr	r5, [pc, #396]	@ (801ac24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801aa98:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 801aa9c:	6828      	ldr	r0, [r5, #0]
 801aa9e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801aaa2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801aaa6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801aaaa:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801aaae:	440a      	add	r2, r1
 801aab0:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801aab4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 801aab8:	4413      	add	r3, r2
 801aaba:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801aabe:	6803      	ldr	r3, [r0, #0]
 801aac0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801aac2:	4798      	blx	r3
 801aac4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801aac8:	d119      	bne.n	801aafe <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801aaca:	f010 0f20 	tst.w	r0, #32
 801aace:	6828      	ldr	r0, [r5, #0]
 801aad0:	d018      	beq.n	801ab04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801aad2:	2500      	movs	r5, #0
 801aad4:	6801      	ldr	r1, [r0, #0]
 801aad6:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801aada:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801aade:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801aae2:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 801aae6:	9502      	str	r5, [sp, #8]
 801aae8:	b2b6      	uxth	r6, r6
 801aaea:	fa1f f588 	uxth.w	r5, r8
 801aaee:	9601      	str	r6, [sp, #4]
 801aaf0:	9500      	str	r5, [sp, #0]
 801aaf2:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
 801aaf4:	4621      	mov	r1, r4
 801aaf6:	47a8      	blx	r5
 801aaf8:	b00d      	add	sp, #52	@ 0x34
 801aafa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aafe:	f010 0f40 	tst.w	r0, #64	@ 0x40
 801ab02:	e7e4      	b.n	801aace <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801ab04:	6803      	ldr	r3, [r0, #0]
 801ab06:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ab08:	4798      	blx	r3
 801ab0a:	4947      	ldr	r1, [pc, #284]	@ (801ac28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801ab0c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801ab10:	880b      	ldrh	r3, [r1, #0]
 801ab12:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 801ab16:	fb03 5202 	mla	r2, r3, r2, r5
 801ab1a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ab1e:	4373      	muls	r3, r6
 801ab20:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ab24:	9307      	str	r3, [sp, #28]
 801ab26:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801ab2a:	9306      	str	r3, [sp, #24]
 801ab2c:	468a      	mov	sl, r1
 801ab2e:	9b07      	ldr	r3, [sp, #28]
 801ab30:	4298      	cmp	r0, r3
 801ab32:	d270      	bcs.n	801ac16 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801ab34:	9b06      	ldr	r3, [sp, #24]
 801ab36:	4621      	mov	r1, r4
 801ab38:	eb00 0b03 	add.w	fp, r0, r3
 801ab3c:	4558      	cmp	r0, fp
 801ab3e:	d25d      	bcs.n	801abfc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801ab40:	f851 4b04 	ldr.w	r4, [r1], #4
 801ab44:	0e23      	lsrs	r3, r4, #24
 801ab46:	d014      	beq.n	801ab72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ab48:	2bff      	cmp	r3, #255	@ 0xff
 801ab4a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801ab4e:	d112      	bne.n	801ab76 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ab50:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801ab54:	d10f      	bne.n	801ab76 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ab56:	0963      	lsrs	r3, r4, #5
 801ab58:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801ab5c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ab60:	f02c 0c07 	bic.w	ip, ip, #7
 801ab64:	ea43 0c0c 	orr.w	ip, r3, ip
 801ab68:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801ab6c:	ea4c 0404 	orr.w	r4, ip, r4
 801ab70:	8004      	strh	r4, [r0, #0]
 801ab72:	3002      	adds	r0, #2
 801ab74:	e7e2      	b.n	801ab3c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801ab76:	fb09 f303 	mul.w	r3, r9, r3
 801ab7a:	8807      	ldrh	r7, [r0, #0]
 801ab7c:	1c5a      	adds	r2, r3, #1
 801ab7e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801ab82:	1212      	asrs	r2, r2, #8
 801ab84:	123e      	asrs	r6, r7, #8
 801ab86:	b293      	uxth	r3, r2
 801ab88:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801ab8c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801ab90:	43d2      	mvns	r2, r2
 801ab92:	b2d2      	uxtb	r2, r2
 801ab94:	10fd      	asrs	r5, r7, #3
 801ab96:	fb1e fe03 	smulbb	lr, lr, r3
 801ab9a:	00ff      	lsls	r7, r7, #3
 801ab9c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801aba0:	fb06 e602 	mla	r6, r6, r2, lr
 801aba4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801aba8:	b2ff      	uxtb	r7, r7
 801abaa:	fa5f fc8c 	uxtb.w	ip, ip
 801abae:	b2e4      	uxtb	r4, r4
 801abb0:	b2b6      	uxth	r6, r6
 801abb2:	fb1c fc03 	smulbb	ip, ip, r3
 801abb6:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801abba:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801abbe:	fb14 f403 	smulbb	r4, r4, r3
 801abc2:	fb05 c502 	mla	r5, r5, r2, ip
 801abc6:	f106 0e01 	add.w	lr, r6, #1
 801abca:	fb07 4702 	mla	r7, r7, r2, r4
 801abce:	b2ad      	uxth	r5, r5
 801abd0:	b2bf      	uxth	r7, r7
 801abd2:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801abd6:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 801abda:	f105 0c01 	add.w	ip, r5, #1
 801abde:	1c7e      	adds	r6, r7, #1
 801abe0:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801abe4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801abe8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801abec:	096d      	lsrs	r5, r5, #5
 801abee:	ea46 060e 	orr.w	r6, r6, lr
 801abf2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801abf6:	432e      	orrs	r6, r5
 801abf8:	8006      	strh	r6, [r0, #0]
 801abfa:	e7ba      	b.n	801ab72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801abfc:	f8ba 3000 	ldrh.w	r3, [sl]
 801ac00:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 801ac04:	eba3 0308 	sub.w	r3, r3, r8
 801ac08:	eba4 0408 	sub.w	r4, r4, r8
 801ac0c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ac10:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801ac14:	e78b      	b.n	801ab2e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801ac16:	4b03      	ldr	r3, [pc, #12]	@ (801ac24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ac18:	6818      	ldr	r0, [r3, #0]
 801ac1a:	6803      	ldr	r3, [r0, #0]
 801ac1c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801ac1e:	4798      	blx	r3
 801ac20:	e76a      	b.n	801aaf8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801ac22:	bf00      	nop
 801ac24:	200152ec 	.word	0x200152ec
 801ac28:	200152e6 	.word	0x200152e6

0801ac2c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801ac2c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ac30:	460c      	mov	r4, r1
 801ac32:	b085      	sub	sp, #20
 801ac34:	6810      	ldr	r0, [r2, #0]
 801ac36:	6851      	ldr	r1, [r2, #4]
 801ac38:	466d      	mov	r5, sp
 801ac3a:	c503      	stmia	r5!, {r0, r1}
 801ac3c:	6818      	ldr	r0, [r3, #0]
 801ac3e:	6859      	ldr	r1, [r3, #4]
 801ac40:	4616      	mov	r6, r2
 801ac42:	c503      	stmia	r5!, {r0, r1}
 801ac44:	4668      	mov	r0, sp
 801ac46:	f7f6 ff07 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ac4a:	4631      	mov	r1, r6
 801ac4c:	a802      	add	r0, sp, #8
 801ac4e:	f7f6 ff2b 	bl	8011aa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ac52:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801ac56:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801ac5a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801ac5e:	4d28      	ldr	r5, [pc, #160]	@ (801ad00 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801ac60:	4e28      	ldr	r6, [pc, #160]	@ (801ad04 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801ac62:	6828      	ldr	r0, [r5, #0]
 801ac64:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801ac68:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801ac6c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ac70:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801ac74:	f8bd 1000 	ldrh.w	r1, [sp]
 801ac78:	440a      	add	r2, r1
 801ac7a:	f8ad 2008 	strh.w	r2, [sp, #8]
 801ac7e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ac82:	4413      	add	r3, r2
 801ac84:	f8ad 300a 	strh.w	r3, [sp, #10]
 801ac88:	6803      	ldr	r3, [r0, #0]
 801ac8a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ac8c:	4798      	blx	r3
 801ac8e:	8833      	ldrh	r3, [r6, #0]
 801ac90:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801ac94:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801ac98:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 801ad08 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801ac9c:	fb03 1202 	mla	r2, r3, r2, r1
 801aca0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801aca4:	fb08 f303 	mul.w	r3, r8, r3
 801aca8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801acac:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801acb0:	4298      	cmp	r0, r3
 801acb2:	d21d      	bcs.n	801acf0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801acb4:	eb00 080c 	add.w	r8, r0, ip
 801acb8:	4540      	cmp	r0, r8
 801acba:	d20f      	bcs.n	801acdc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801acbc:	f854 1b04 	ldr.w	r1, [r4], #4
 801acc0:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801acc4:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801acc8:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801accc:	ea42 0209 	orr.w	r2, r2, r9
 801acd0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801acd4:	430a      	orrs	r2, r1
 801acd6:	f820 2b02 	strh.w	r2, [r0], #2
 801acda:	e7ed      	b.n	801acb8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801acdc:	8832      	ldrh	r2, [r6, #0]
 801acde:	1bd2      	subs	r2, r2, r7
 801ace0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ace4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801ace8:	1bd2      	subs	r2, r2, r7
 801acea:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801acee:	e7df      	b.n	801acb0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801acf0:	6828      	ldr	r0, [r5, #0]
 801acf2:	6803      	ldr	r3, [r0, #0]
 801acf4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801acf6:	4798      	blx	r3
 801acf8:	b005      	add	sp, #20
 801acfa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801acfe:	bf00      	nop
 801ad00:	200152ec 	.word	0x200152ec
 801ad04:	200152e6 	.word	0x200152e6
 801ad08:	fffff800 	.word	0xfffff800

0801ad0c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801ad0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ad10:	460e      	mov	r6, r1
 801ad12:	b08e      	sub	sp, #56	@ 0x38
 801ad14:	4604      	mov	r4, r0
 801ad16:	6808      	ldr	r0, [r1, #0]
 801ad18:	6849      	ldr	r1, [r1, #4]
 801ad1a:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 801aef4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801ad1e:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 801aef8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801ad22:	461d      	mov	r5, r3
 801ad24:	ab0a      	add	r3, sp, #40	@ 0x28
 801ad26:	c303      	stmia	r3!, {r0, r1}
 801ad28:	6810      	ldr	r0, [r2, #0]
 801ad2a:	6851      	ldr	r1, [r2, #4]
 801ad2c:	ab0c      	add	r3, sp, #48	@ 0x30
 801ad2e:	c303      	stmia	r3!, {r0, r1}
 801ad30:	a80a      	add	r0, sp, #40	@ 0x28
 801ad32:	f7f6 fe91 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ad36:	4631      	mov	r1, r6
 801ad38:	a80c      	add	r0, sp, #48	@ 0x30
 801ad3a:	f7f6 feb5 	bl	8011aa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ad3e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801ad42:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801ad46:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801ad4a:	f8d8 0000 	ldr.w	r0, [r8]
 801ad4e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 801ad52:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801ad56:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ad5a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801ad5e:	440c      	add	r4, r1
 801ad60:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 801ad64:	440a      	add	r2, r1
 801ad66:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801ad6a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801ad6e:	4413      	add	r3, r2
 801ad70:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801ad74:	6803      	ldr	r3, [r0, #0]
 801ad76:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801ad78:	4798      	blx	r3
 801ad7a:	2dff      	cmp	r5, #255	@ 0xff
 801ad7c:	d124      	bne.n	801adc8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801ad7e:	f010 0f01 	tst.w	r0, #1
 801ad82:	f8d8 0000 	ldr.w	r0, [r8]
 801ad86:	d022      	beq.n	801adce <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801ad88:	2100      	movs	r1, #0
 801ad8a:	f8d0 c000 	ldr.w	ip, [r0]
 801ad8e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801ad92:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 801ad96:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801ad9a:	f04f 0e01 	mov.w	lr, #1
 801ad9e:	f8cd e018 	str.w	lr, [sp, #24]
 801ada2:	f8b9 e000 	ldrh.w	lr, [r9]
 801ada6:	9503      	str	r5, [sp, #12]
 801ada8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801adac:	b2b6      	uxth	r6, r6
 801adae:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801adb2:	9102      	str	r1, [sp, #8]
 801adb4:	b2bf      	uxth	r7, r7
 801adb6:	9601      	str	r6, [sp, #4]
 801adb8:	9700      	str	r7, [sp, #0]
 801adba:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
 801adbe:	4621      	mov	r1, r4
 801adc0:	47a8      	blx	r5
 801adc2:	b00e      	add	sp, #56	@ 0x38
 801adc4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801adc8:	f010 0f04 	tst.w	r0, #4
 801adcc:	e7d9      	b.n	801ad82 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801adce:	6803      	ldr	r3, [r0, #0]
 801add0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801add2:	4798      	blx	r3
 801add4:	f8b9 3000 	ldrh.w	r3, [r9]
 801add8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801addc:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 801ade0:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801ade4:	fb03 1202 	mla	r2, r3, r2, r1
 801ade8:	ebac 0c07 	sub.w	ip, ip, r7
 801adec:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801adf0:	435e      	muls	r6, r3
 801adf2:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801adf6:	2dff      	cmp	r5, #255	@ 0xff
 801adf8:	eba3 0707 	sub.w	r7, r3, r7
 801adfc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801ae00:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801ae04:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801ae08:	d049      	beq.n	801ae9e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801ae0a:	43eb      	mvns	r3, r5
 801ae0c:	fa1f f985 	uxth.w	r9, r5
 801ae10:	b2db      	uxtb	r3, r3
 801ae12:	42b0      	cmp	r0, r6
 801ae14:	d266      	bcs.n	801aee4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801ae16:	eb00 0a0e 	add.w	sl, r0, lr
 801ae1a:	4550      	cmp	r0, sl
 801ae1c:	4621      	mov	r1, r4
 801ae1e:	f104 0403 	add.w	r4, r4, #3
 801ae22:	d25b      	bcs.n	801aedc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801ae24:	8802      	ldrh	r2, [r0, #0]
 801ae26:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801ae2a:	ea4f 2822 	mov.w	r8, r2, asr #8
 801ae2e:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801ae32:	fb11 f109 	smulbb	r1, r1, r9
 801ae36:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801ae3a:	10d5      	asrs	r5, r2, #3
 801ae3c:	fb08 1803 	mla	r8, r8, r3, r1
 801ae40:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801ae44:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801ae48:	fb11 f109 	smulbb	r1, r1, r9
 801ae4c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ae50:	fb05 1503 	mla	r5, r5, r3, r1
 801ae54:	00d2      	lsls	r2, r2, #3
 801ae56:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801ae5a:	b2d2      	uxtb	r2, r2
 801ae5c:	fb11 f109 	smulbb	r1, r1, r9
 801ae60:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ae64:	fa1f f888 	uxth.w	r8, r8
 801ae68:	fb02 1203 	mla	r2, r2, r3, r1
 801ae6c:	b292      	uxth	r2, r2
 801ae6e:	f108 0101 	add.w	r1, r8, #1
 801ae72:	b2ad      	uxth	r5, r5
 801ae74:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801ae78:	1c51      	adds	r1, r2, #1
 801ae7a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ae7e:	1c69      	adds	r1, r5, #1
 801ae80:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801ae84:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801ae88:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ae8c:	096d      	lsrs	r5, r5, #5
 801ae8e:	ea42 0208 	orr.w	r2, r2, r8
 801ae92:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ae96:	432a      	orrs	r2, r5
 801ae98:	f820 2b02 	strh.w	r2, [r0], #2
 801ae9c:	e7bd      	b.n	801ae1a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801ae9e:	4a14      	ldr	r2, [pc, #80]	@ (801aef0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801aea0:	42b0      	cmp	r0, r6
 801aea2:	d21f      	bcs.n	801aee4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801aea4:	eb00 050e 	add.w	r5, r0, lr
 801aea8:	42a8      	cmp	r0, r5
 801aeaa:	4621      	mov	r1, r4
 801aeac:	f104 0403 	add.w	r4, r4, #3
 801aeb0:	d210      	bcs.n	801aed4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801aeb2:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801aeb6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801aeba:	00db      	lsls	r3, r3, #3
 801aebc:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801aec0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801aec4:	430b      	orrs	r3, r1
 801aec6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801aeca:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801aece:	f820 3b02 	strh.w	r3, [r0], #2
 801aed2:	e7e9      	b.n	801aea8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801aed4:	4438      	add	r0, r7
 801aed6:	eb01 040c 	add.w	r4, r1, ip
 801aeda:	e7e1      	b.n	801aea0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801aedc:	4438      	add	r0, r7
 801aede:	eb01 040c 	add.w	r4, r1, ip
 801aee2:	e796      	b.n	801ae12 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801aee4:	4b03      	ldr	r3, [pc, #12]	@ (801aef4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801aee6:	6818      	ldr	r0, [r3, #0]
 801aee8:	6803      	ldr	r3, [r0, #0]
 801aeea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801aeec:	4798      	blx	r3
 801aeee:	e768      	b.n	801adc2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801aef0:	fffff800 	.word	0xfffff800
 801aef4:	200152ec 	.word	0x200152ec
 801aef8:	200152e6 	.word	0x200152e6

0801aefc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801aefc:	b4f0      	push	{r4, r5, r6, r7}
 801aefe:	4616      	mov	r6, r2
 801af00:	2e01      	cmp	r6, #1
 801af02:	461c      	mov	r4, r3
 801af04:	460d      	mov	r5, r1
 801af06:	9a04      	ldr	r2, [sp, #16]
 801af08:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801af0c:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801af10:	d012      	beq.n	801af38 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801af12:	d303      	bcc.n	801af1c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801af14:	2e02      	cmp	r6, #2
 801af16:	d00a      	beq.n	801af2e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801af18:	bcf0      	pop	{r4, r5, r6, r7}
 801af1a:	4770      	bx	lr
 801af1c:	6805      	ldr	r5, [r0, #0]
 801af1e:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801af22:	68ed      	ldr	r5, [r5, #12]
 801af24:	4613      	mov	r3, r2
 801af26:	46ac      	mov	ip, r5
 801af28:	4622      	mov	r2, r4
 801af2a:	bcf0      	pop	{r4, r5, r6, r7}
 801af2c:	4760      	bx	ip
 801af2e:	4621      	mov	r1, r4
 801af30:	4628      	mov	r0, r5
 801af32:	bcf0      	pop	{r4, r5, r6, r7}
 801af34:	f7ff bd94 	b.w	801aa60 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801af38:	4621      	mov	r1, r4
 801af3a:	4628      	mov	r0, r5
 801af3c:	bcf0      	pop	{r4, r5, r6, r7}
 801af3e:	f7ff bee5 	b.w	801ad0c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801af44 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801af44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af48:	4681      	mov	r9, r0
 801af4a:	b093      	sub	sp, #76	@ 0x4c
 801af4c:	6810      	ldr	r0, [r2, #0]
 801af4e:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 801af52:	4f6d      	ldr	r7, [pc, #436]	@ (801b108 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801af54:	4688      	mov	r8, r1
 801af56:	6851      	ldr	r1, [r2, #4]
 801af58:	ac0e      	add	r4, sp, #56	@ 0x38
 801af5a:	c403      	stmia	r4!, {r0, r1}
 801af5c:	6818      	ldr	r0, [r3, #0]
 801af5e:	6859      	ldr	r1, [r3, #4]
 801af60:	ac10      	add	r4, sp, #64	@ 0x40
 801af62:	4616      	mov	r6, r2
 801af64:	c403      	stmia	r4!, {r0, r1}
 801af66:	a80e      	add	r0, sp, #56	@ 0x38
 801af68:	f7f6 fd76 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801af6c:	4631      	mov	r1, r6
 801af6e:	a810      	add	r0, sp, #64	@ 0x40
 801af70:	f7f6 fd9a 	bl	8011aa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801af74:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801af78:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801af7c:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 801af80:	4e62      	ldr	r6, [pc, #392]	@ (801b10c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801af82:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 801af86:	6830      	ldr	r0, [r6, #0]
 801af88:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801af8c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801af90:	4489      	add	r9, r1
 801af92:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 801af96:	440a      	add	r2, r1
 801af98:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 801af9c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801afa0:	4413      	add	r3, r2
 801afa2:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801afa6:	6803      	ldr	r3, [r0, #0]
 801afa8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801afaa:	4798      	blx	r3
 801afac:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801afb0:	6830      	ldr	r0, [r6, #0]
 801afb2:	d01d      	beq.n	801aff0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801afb4:	2200      	movs	r2, #0
 801afb6:	6801      	ldr	r1, [r0, #0]
 801afb8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801afbc:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801afc0:	220b      	movs	r2, #11
 801afc2:	9207      	str	r2, [sp, #28]
 801afc4:	883a      	ldrh	r2, [r7, #0]
 801afc6:	9206      	str	r2, [sp, #24]
 801afc8:	2201      	movs	r2, #1
 801afca:	e9cd a204 	strd	sl, r2, [sp, #16]
 801afce:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 801afd2:	9203      	str	r2, [sp, #12]
 801afd4:	b2a4      	uxth	r4, r4
 801afd6:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 801afda:	9200      	str	r2, [sp, #0]
 801afdc:	b2ad      	uxth	r5, r5
 801afde:	9502      	str	r5, [sp, #8]
 801afe0:	9401      	str	r4, [sp, #4]
 801afe2:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
 801afe4:	4642      	mov	r2, r8
 801afe6:	4649      	mov	r1, r9
 801afe8:	47a0      	blx	r4
 801afea:	b013      	add	sp, #76	@ 0x4c
 801afec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aff0:	6803      	ldr	r3, [r0, #0]
 801aff2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801aff4:	4798      	blx	r3
 801aff6:	883b      	ldrh	r3, [r7, #0]
 801aff8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801affc:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 801b000:	fb03 1202 	mla	r2, r3, r2, r1
 801b004:	435d      	muls	r5, r3
 801b006:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b00a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801b00e:	920c      	str	r2, [sp, #48]	@ 0x30
 801b010:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801b014:	1b12      	subs	r2, r2, r4
 801b016:	920d      	str	r2, [sp, #52]	@ 0x34
 801b018:	0062      	lsls	r2, r4, #1
 801b01a:	1b1c      	subs	r4, r3, r4
 801b01c:	0063      	lsls	r3, r4, #1
 801b01e:	920a      	str	r2, [sp, #40]	@ 0x28
 801b020:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b022:	f04f 0e04 	mov.w	lr, #4
 801b026:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b028:	4298      	cmp	r0, r3
 801b02a:	d266      	bcs.n	801b0fa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801b02c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b02e:	eb00 0b03 	add.w	fp, r0, r3
 801b032:	4558      	cmp	r0, fp
 801b034:	d25c      	bcs.n	801b0f0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801b036:	f819 3b01 	ldrb.w	r3, [r9], #1
 801b03a:	fb1e e303 	smlabb	r3, lr, r3, lr
 801b03e:	f858 2003 	ldr.w	r2, [r8, r3]
 801b042:	0e11      	lsrs	r1, r2, #24
 801b044:	d012      	beq.n	801b06c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801b046:	29ff      	cmp	r1, #255	@ 0xff
 801b048:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801b04c:	d110      	bne.n	801b070 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801b04e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801b052:	d10d      	bne.n	801b070 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801b054:	0953      	lsrs	r3, r2, #5
 801b056:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 801b05a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b05e:	f027 0707 	bic.w	r7, r7, #7
 801b062:	431f      	orrs	r7, r3
 801b064:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b068:	433a      	orrs	r2, r7
 801b06a:	8002      	strh	r2, [r0, #0]
 801b06c:	3002      	adds	r0, #2
 801b06e:	e7e0      	b.n	801b032 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801b070:	fb0a f101 	mul.w	r1, sl, r1
 801b074:	8806      	ldrh	r6, [r0, #0]
 801b076:	1c4b      	adds	r3, r1, #1
 801b078:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801b07c:	1235      	asrs	r5, r6, #8
 801b07e:	10f4      	asrs	r4, r6, #3
 801b080:	121b      	asrs	r3, r3, #8
 801b082:	00f6      	lsls	r6, r6, #3
 801b084:	b299      	uxth	r1, r3
 801b086:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801b08a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b08e:	b2f6      	uxtb	r6, r6
 801b090:	43db      	mvns	r3, r3
 801b092:	b2d2      	uxtb	r2, r2
 801b094:	b2db      	uxtb	r3, r3
 801b096:	fb1c fc01 	smulbb	ip, ip, r1
 801b09a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801b09e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801b0a2:	fb12 f201 	smulbb	r2, r2, r1
 801b0a6:	fb05 c503 	mla	r5, r5, r3, ip
 801b0aa:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801b0ae:	b2ff      	uxtb	r7, r7
 801b0b0:	fb06 2203 	mla	r2, r6, r3, r2
 801b0b4:	b2ad      	uxth	r5, r5
 801b0b6:	fb17 f701 	smulbb	r7, r7, r1
 801b0ba:	b292      	uxth	r2, r2
 801b0bc:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801b0c0:	fb04 7403 	mla	r4, r4, r3, r7
 801b0c4:	f105 0c01 	add.w	ip, r5, #1
 801b0c8:	1c57      	adds	r7, r2, #1
 801b0ca:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801b0ce:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801b0d2:	b2a4      	uxth	r4, r4
 801b0d4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b0d8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801b0dc:	433d      	orrs	r5, r7
 801b0de:	1c67      	adds	r7, r4, #1
 801b0e0:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801b0e4:	0964      	lsrs	r4, r4, #5
 801b0e6:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801b0ea:	4325      	orrs	r5, r4
 801b0ec:	8005      	strh	r5, [r0, #0]
 801b0ee:	e7bd      	b.n	801b06c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801b0f0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b0f2:	4418      	add	r0, r3
 801b0f4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801b0f6:	4499      	add	r9, r3
 801b0f8:	e795      	b.n	801b026 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801b0fa:	4b04      	ldr	r3, [pc, #16]	@ (801b10c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801b0fc:	6818      	ldr	r0, [r3, #0]
 801b0fe:	6803      	ldr	r3, [r0, #0]
 801b100:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801b102:	4798      	blx	r3
 801b104:	e771      	b.n	801afea <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801b106:	bf00      	nop
 801b108:	200152e6 	.word	0x200152e6
 801b10c:	200152ec 	.word	0x200152ec

0801b110 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801b110:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b114:	b087      	sub	sp, #28
 801b116:	4680      	mov	r8, r0
 801b118:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 801b11c:	460d      	mov	r5, r1
 801b11e:	4614      	mov	r4, r2
 801b120:	2e00      	cmp	r6, #0
 801b122:	f000 80b9 	beq.w	801b298 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801b126:	6810      	ldr	r0, [r2, #0]
 801b128:	6851      	ldr	r1, [r2, #4]
 801b12a:	af02      	add	r7, sp, #8
 801b12c:	c703      	stmia	r7!, {r0, r1}
 801b12e:	6818      	ldr	r0, [r3, #0]
 801b130:	6859      	ldr	r1, [r3, #4]
 801b132:	af04      	add	r7, sp, #16
 801b134:	c703      	stmia	r7!, {r0, r1}
 801b136:	a802      	add	r0, sp, #8
 801b138:	f7f6 fc8e 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b13c:	4621      	mov	r1, r4
 801b13e:	a804      	add	r0, sp, #16
 801b140:	f7f6 fcb2 	bl	8011aa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b144:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801b148:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801b14c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801b150:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801b154:	fb14 2103 	smlabb	r1, r4, r3, r2
 801b158:	eb08 0401 	add.w	r4, r8, r1
 801b15c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801b160:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801b164:	440a      	add	r2, r1
 801b166:	f8ad 2010 	strh.w	r2, [sp, #16]
 801b16a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801b16e:	4413      	add	r3, r2
 801b170:	f8ad 3012 	strh.w	r3, [sp, #18]
 801b174:	4b4a      	ldr	r3, [pc, #296]	@ (801b2a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801b176:	6818      	ldr	r0, [r3, #0]
 801b178:	6803      	ldr	r3, [r0, #0]
 801b17a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b17c:	4798      	blx	r3
 801b17e:	4b49      	ldr	r3, [pc, #292]	@ (801b2a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801b180:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801b184:	881a      	ldrh	r2, [r3, #0]
 801b186:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801b18a:	2eff      	cmp	r6, #255	@ 0xff
 801b18c:	fb02 c101 	mla	r1, r2, r1, ip
 801b190:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b194:	fb02 f207 	mul.w	r2, r2, r7
 801b198:	f105 0104 	add.w	r1, r5, #4
 801b19c:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801b1a0:	461d      	mov	r5, r3
 801b1a2:	d05a      	beq.n	801b25a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801b1a4:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 801b1a8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801b1ac:	b2b6      	uxth	r6, r6
 801b1ae:	fa1f fe8e 	uxth.w	lr, lr
 801b1b2:	9301      	str	r3, [sp, #4]
 801b1b4:	4282      	cmp	r2, r0
 801b1b6:	d96a      	bls.n	801b28e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801b1b8:	eb00 0b0a 	add.w	fp, r0, sl
 801b1bc:	4583      	cmp	fp, r0
 801b1be:	d940      	bls.n	801b242 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801b1c0:	f814 3b01 	ldrb.w	r3, [r4], #1
 801b1c4:	8805      	ldrh	r5, [r0, #0]
 801b1c6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801b1ca:	122f      	asrs	r7, r5, #8
 801b1cc:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801b1d0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b1d4:	fb17 f70e 	smulbb	r7, r7, lr
 801b1d8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801b1dc:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801b1e0:	00ed      	lsls	r5, r5, #3
 801b1e2:	fb0c 7c06 	mla	ip, ip, r6, r7
 801b1e6:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801b1ea:	10df      	asrs	r7, r3, #3
 801b1ec:	b2ed      	uxtb	r5, r5
 801b1ee:	00db      	lsls	r3, r3, #3
 801b1f0:	fa1f fc8c 	uxth.w	ip, ip
 801b1f4:	fb19 f90e 	smulbb	r9, r9, lr
 801b1f8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801b1fc:	b2db      	uxtb	r3, r3
 801b1fe:	fb15 f50e 	smulbb	r5, r5, lr
 801b202:	fb07 9706 	mla	r7, r7, r6, r9
 801b206:	fb03 5306 	mla	r3, r3, r6, r5
 801b20a:	f10c 0901 	add.w	r9, ip, #1
 801b20e:	b29b      	uxth	r3, r3
 801b210:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801b214:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 801b218:	f103 0c01 	add.w	ip, r3, #1
 801b21c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b220:	b2bf      	uxth	r7, r7
 801b222:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b226:	ea4c 0c09 	orr.w	ip, ip, r9
 801b22a:	f107 0901 	add.w	r9, r7, #1
 801b22e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801b232:	097f      	lsrs	r7, r7, #5
 801b234:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801b238:	ea4c 0c07 	orr.w	ip, ip, r7
 801b23c:	f820 cb02 	strh.w	ip, [r0], #2
 801b240:	e7bc      	b.n	801b1bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801b242:	9b01      	ldr	r3, [sp, #4]
 801b244:	881b      	ldrh	r3, [r3, #0]
 801b246:	eba3 0308 	sub.w	r3, r3, r8
 801b24a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b24e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801b252:	eba3 0308 	sub.w	r3, r3, r8
 801b256:	441c      	add	r4, r3
 801b258:	e7ac      	b.n	801b1b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801b25a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801b25e:	4282      	cmp	r2, r0
 801b260:	d915      	bls.n	801b28e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801b262:	eb00 060a 	add.w	r6, r0, sl
 801b266:	4286      	cmp	r6, r0
 801b268:	d906      	bls.n	801b278 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801b26a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801b26e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801b272:	f820 3b02 	strh.w	r3, [r0], #2
 801b276:	e7f6      	b.n	801b266 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801b278:	882b      	ldrh	r3, [r5, #0]
 801b27a:	eba3 0308 	sub.w	r3, r3, r8
 801b27e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b282:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801b286:	eba3 0308 	sub.w	r3, r3, r8
 801b28a:	441c      	add	r4, r3
 801b28c:	e7e7      	b.n	801b25e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801b28e:	4b04      	ldr	r3, [pc, #16]	@ (801b2a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801b290:	6818      	ldr	r0, [r3, #0]
 801b292:	6803      	ldr	r3, [r0, #0]
 801b294:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801b296:	4798      	blx	r3
 801b298:	b007      	add	sp, #28
 801b29a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b29e:	bf00      	nop
 801b2a0:	200152ec 	.word	0x200152ec
 801b2a4:	200152e6 	.word	0x200152e6

0801b2a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801b2a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b2ac:	b091      	sub	sp, #68	@ 0x44
 801b2ae:	4680      	mov	r8, r0
 801b2b0:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 801b2b4:	460f      	mov	r7, r1
 801b2b6:	4614      	mov	r4, r2
 801b2b8:	2d00      	cmp	r5, #0
 801b2ba:	d051      	beq.n	801b360 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801b2bc:	6810      	ldr	r0, [r2, #0]
 801b2be:	6851      	ldr	r1, [r2, #4]
 801b2c0:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 801b4c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801b2c4:	ae0c      	add	r6, sp, #48	@ 0x30
 801b2c6:	c603      	stmia	r6!, {r0, r1}
 801b2c8:	6818      	ldr	r0, [r3, #0]
 801b2ca:	6859      	ldr	r1, [r3, #4]
 801b2cc:	ae0e      	add	r6, sp, #56	@ 0x38
 801b2ce:	c603      	stmia	r6!, {r0, r1}
 801b2d0:	a80c      	add	r0, sp, #48	@ 0x30
 801b2d2:	f7f6 fbc1 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b2d6:	4621      	mov	r1, r4
 801b2d8:	a80e      	add	r0, sp, #56	@ 0x38
 801b2da:	f7f6 fbe5 	bl	8011aa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b2de:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 801b2e2:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801b2e6:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801b2ea:	f8d9 0000 	ldr.w	r0, [r9]
 801b2ee:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801b2f2:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 801b2f6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801b2fa:	eb08 0401 	add.w	r4, r8, r1
 801b2fe:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801b302:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 801b4c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801b306:	440a      	add	r2, r1
 801b308:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801b30c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 801b310:	4413      	add	r3, r2
 801b312:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 801b316:	6803      	ldr	r3, [r0, #0]
 801b318:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801b31a:	4798      	blx	r3
 801b31c:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801b320:	f8d9 0000 	ldr.w	r0, [r9]
 801b324:	d01f      	beq.n	801b366 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801b326:	2200      	movs	r2, #0
 801b328:	6801      	ldr	r1, [r0, #0]
 801b32a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801b32e:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801b332:	220b      	movs	r2, #11
 801b334:	9207      	str	r2, [sp, #28]
 801b336:	f8b8 2000 	ldrh.w	r2, [r8]
 801b33a:	9206      	str	r2, [sp, #24]
 801b33c:	2201      	movs	r2, #1
 801b33e:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801b342:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 801b346:	9203      	str	r2, [sp, #12]
 801b348:	fa1f f28a 	uxth.w	r2, sl
 801b34c:	9202      	str	r2, [sp, #8]
 801b34e:	b2b6      	uxth	r6, r6
 801b350:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801b354:	9200      	str	r2, [sp, #0]
 801b356:	9601      	str	r6, [sp, #4]
 801b358:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
 801b35a:	463a      	mov	r2, r7
 801b35c:	4621      	mov	r1, r4
 801b35e:	47a8      	blx	r5
 801b360:	b011      	add	sp, #68	@ 0x44
 801b362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b366:	6803      	ldr	r3, [r0, #0]
 801b368:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b36a:	4798      	blx	r3
 801b36c:	f8b8 2000 	ldrh.w	r2, [r8]
 801b370:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801b374:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 801b378:	2dff      	cmp	r5, #255	@ 0xff
 801b37a:	fb02 1303 	mla	r3, r2, r3, r1
 801b37e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b382:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801b386:	fb0a fa02 	mul.w	sl, sl, r2
 801b38a:	d062      	beq.n	801b452 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801b38c:	ea6f 0c05 	mvn.w	ip, r5
 801b390:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801b394:	930a      	str	r3, [sp, #40]	@ 0x28
 801b396:	b2ad      	uxth	r5, r5
 801b398:	fa5f fc8c 	uxtb.w	ip, ip
 801b39c:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 801b3a0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b3a2:	4298      	cmp	r0, r3
 801b3a4:	f080 8085 	bcs.w	801b4b2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801b3a8:	eb00 0b09 	add.w	fp, r0, r9
 801b3ac:	4558      	cmp	r0, fp
 801b3ae:	d246      	bcs.n	801b43e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801b3b0:	f814 eb01 	ldrb.w	lr, [r4], #1
 801b3b4:	2303      	movs	r3, #3
 801b3b6:	2204      	movs	r2, #4
 801b3b8:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801b3bc:	eb07 0a0e 	add.w	sl, r7, lr
 801b3c0:	8803      	ldrh	r3, [r0, #0]
 801b3c2:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801b3c6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801b3ca:	1219      	asrs	r1, r3, #8
 801b3cc:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b3d0:	fb18 f805 	smulbb	r8, r8, r5
 801b3d4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801b3d8:	10da      	asrs	r2, r3, #3
 801b3da:	fb01 810c 	mla	r1, r1, ip, r8
 801b3de:	00db      	lsls	r3, r3, #3
 801b3e0:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801b3e4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b3e8:	b2db      	uxtb	r3, r3
 801b3ea:	fb18 f805 	smulbb	r8, r8, r5
 801b3ee:	fb1e fe05 	smulbb	lr, lr, r5
 801b3f2:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801b3f6:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801b3fa:	b289      	uxth	r1, r1
 801b3fc:	fb02 820c 	mla	r2, r2, ip, r8
 801b400:	fb03 e30c 	mla	r3, r3, ip, lr
 801b404:	b292      	uxth	r2, r2
 801b406:	b29b      	uxth	r3, r3
 801b408:	f101 0801 	add.w	r8, r1, #1
 801b40c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801b410:	f103 0e01 	add.w	lr, r3, #1
 801b414:	f102 0801 	add.w	r8, r2, #1
 801b418:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801b41c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801b420:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801b424:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801b428:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801b42c:	ea4e 0101 	orr.w	r1, lr, r1
 801b430:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801b434:	ea41 0108 	orr.w	r1, r1, r8
 801b438:	f820 1b02 	strh.w	r1, [r0], #2
 801b43c:	e7b6      	b.n	801b3ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801b43e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b440:	881b      	ldrh	r3, [r3, #0]
 801b442:	1b9b      	subs	r3, r3, r6
 801b444:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b448:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801b44c:	1b9b      	subs	r3, r3, r6
 801b44e:	441c      	add	r4, r3
 801b450:	e7a6      	b.n	801b3a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801b452:	491b      	ldr	r1, [pc, #108]	@ (801b4c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801b454:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801b458:	2203      	movs	r2, #3
 801b45a:	2504      	movs	r5, #4
 801b45c:	4550      	cmp	r0, sl
 801b45e:	d228      	bcs.n	801b4b2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801b460:	eb00 0c09 	add.w	ip, r0, r9
 801b464:	4560      	cmp	r0, ip
 801b466:	4623      	mov	r3, r4
 801b468:	d219      	bcs.n	801b49e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801b46a:	f893 e000 	ldrb.w	lr, [r3]
 801b46e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801b472:	eb07 0b0e 	add.w	fp, r7, lr
 801b476:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801b47a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801b47e:	f89b b001 	ldrb.w	fp, [fp, #1]
 801b482:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801b486:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801b48a:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801b48e:	ea43 030b 	orr.w	r3, r3, fp
 801b492:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801b496:	3401      	adds	r4, #1
 801b498:	f820 3b02 	strh.w	r3, [r0], #2
 801b49c:	e7e2      	b.n	801b464 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801b49e:	f8b8 3000 	ldrh.w	r3, [r8]
 801b4a2:	1b9b      	subs	r3, r3, r6
 801b4a4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b4a8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801b4ac:	1b9b      	subs	r3, r3, r6
 801b4ae:	441c      	add	r4, r3
 801b4b0:	e7d4      	b.n	801b45c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801b4b2:	4b04      	ldr	r3, [pc, #16]	@ (801b4c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801b4b4:	6818      	ldr	r0, [r3, #0]
 801b4b6:	6803      	ldr	r3, [r0, #0]
 801b4b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801b4ba:	4798      	blx	r3
 801b4bc:	e750      	b.n	801b360 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801b4be:	bf00      	nop
 801b4c0:	fffff800 	.word	0xfffff800
 801b4c4:	200152ec 	.word	0x200152ec
 801b4c8:	200152e6 	.word	0x200152e6

0801b4cc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801b4cc:	b4f0      	push	{r4, r5, r6, r7}
 801b4ce:	460c      	mov	r4, r1
 801b4d0:	4611      	mov	r1, r2
 801b4d2:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801b4d6:	780f      	ldrb	r7, [r1, #0]
 801b4d8:	784e      	ldrb	r6, [r1, #1]
 801b4da:	2f01      	cmp	r7, #1
 801b4dc:	461a      	mov	r2, r3
 801b4de:	9b04      	ldr	r3, [sp, #16]
 801b4e0:	d038      	beq.n	801b554 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 801b4e2:	d31f      	bcc.n	801b524 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 801b4e4:	2f02      	cmp	r7, #2
 801b4e6:	d14d      	bne.n	801b584 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801b4e8:	2e03      	cmp	r6, #3
 801b4ea:	d84b      	bhi.n	801b584 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801b4ec:	e8df f006 	tbb	[pc, r6]
 801b4f0:	17140702 	.word	0x17140702
 801b4f4:	9504      	str	r5, [sp, #16]
 801b4f6:	4620      	mov	r0, r4
 801b4f8:	bcf0      	pop	{r4, r5, r6, r7}
 801b4fa:	f7ff be09 	b.w	801b110 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801b4fe:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801b500:	2800      	cmp	r0, #0
 801b502:	d03f      	beq.n	801b584 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801b504:	6806      	ldr	r6, [r0, #0]
 801b506:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801b50a:	68b5      	ldr	r5, [r6, #8]
 801b50c:	4613      	mov	r3, r2
 801b50e:	46ac      	mov	ip, r5
 801b510:	460a      	mov	r2, r1
 801b512:	4621      	mov	r1, r4
 801b514:	bcf0      	pop	{r4, r5, r6, r7}
 801b516:	4760      	bx	ip
 801b518:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801b51c:	e7f0      	b.n	801b500 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801b51e:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801b522:	e7ed      	b.n	801b500 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801b524:	2e03      	cmp	r6, #3
 801b526:	d82d      	bhi.n	801b584 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801b528:	e8df f006 	tbb	[pc, r6]
 801b52c:	110e0702 	.word	0x110e0702
 801b530:	9504      	str	r5, [sp, #16]
 801b532:	4620      	mov	r0, r4
 801b534:	bcf0      	pop	{r4, r5, r6, r7}
 801b536:	f7ff bd05 	b.w	801af44 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801b53a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801b53c:	b310      	cbz	r0, 801b584 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801b53e:	6806      	ldr	r6, [r0, #0]
 801b540:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801b544:	68f5      	ldr	r5, [r6, #12]
 801b546:	e7e1      	b.n	801b50c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801b548:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801b54c:	e7f6      	b.n	801b53c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801b54e:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801b552:	e7f3      	b.n	801b53c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801b554:	2e03      	cmp	r6, #3
 801b556:	d815      	bhi.n	801b584 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801b558:	e8df f006 	tbb	[pc, r6]
 801b55c:	110e0702 	.word	0x110e0702
 801b560:	9504      	str	r5, [sp, #16]
 801b562:	4620      	mov	r0, r4
 801b564:	bcf0      	pop	{r4, r5, r6, r7}
 801b566:	f7ff be9f 	b.w	801b2a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801b56a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801b56c:	b150      	cbz	r0, 801b584 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801b56e:	6806      	ldr	r6, [r0, #0]
 801b570:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801b574:	6935      	ldr	r5, [r6, #16]
 801b576:	e7c9      	b.n	801b50c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801b578:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801b57c:	e7f6      	b.n	801b56c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801b57e:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801b582:	e7f3      	b.n	801b56c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801b584:	bcf0      	pop	{r4, r5, r6, r7}
 801b586:	4770      	bx	lr

0801b588 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801b588:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b58c:	4604      	mov	r4, r0
 801b58e:	b087      	sub	sp, #28
 801b590:	6810      	ldr	r0, [r2, #0]
 801b592:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 801b596:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 801b7d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801b59a:	460e      	mov	r6, r1
 801b59c:	6851      	ldr	r1, [r2, #4]
 801b59e:	ad02      	add	r5, sp, #8
 801b5a0:	c503      	stmia	r5!, {r0, r1}
 801b5a2:	6818      	ldr	r0, [r3, #0]
 801b5a4:	6859      	ldr	r1, [r3, #4]
 801b5a6:	ad04      	add	r5, sp, #16
 801b5a8:	4617      	mov	r7, r2
 801b5aa:	c503      	stmia	r5!, {r0, r1}
 801b5ac:	a802      	add	r0, sp, #8
 801b5ae:	f7f6 fa53 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b5b2:	4639      	mov	r1, r7
 801b5b4:	a804      	add	r0, sp, #16
 801b5b6:	f7f6 fa77 	bl	8011aa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b5ba:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801b5be:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801b5c2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801b5c6:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801b5ca:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801b5ce:	fb11 2103 	smlabb	r1, r1, r3, r2
 801b5d2:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801b5d6:	440e      	add	r6, r1
 801b5d8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801b5dc:	440a      	add	r2, r1
 801b5de:	f8ad 2010 	strh.w	r2, [sp, #16]
 801b5e2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801b5e6:	4413      	add	r3, r2
 801b5e8:	f8ad 3012 	strh.w	r3, [sp, #18]
 801b5ec:	4b77      	ldr	r3, [pc, #476]	@ (801b7cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801b5ee:	6818      	ldr	r0, [r3, #0]
 801b5f0:	6803      	ldr	r3, [r0, #0]
 801b5f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b5f4:	4798      	blx	r3
 801b5f6:	f8b9 b000 	ldrh.w	fp, [r9]
 801b5fa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801b5fe:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801b602:	fb0b 2303 	mla	r3, fp, r3, r2
 801b606:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b60a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801b60e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801b612:	fb05 f50b 	mul.w	r5, r5, fp
 801b616:	9300      	str	r3, [sp, #0]
 801b618:	d069      	beq.n	801b6ee <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801b61a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801b61e:	4558      	cmp	r0, fp
 801b620:	f080 80cc 	bcs.w	801b7bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801b624:	9b00      	ldr	r3, [sp, #0]
 801b626:	18c3      	adds	r3, r0, r3
 801b628:	9301      	str	r3, [sp, #4]
 801b62a:	4631      	mov	r1, r6
 801b62c:	9b01      	ldr	r3, [sp, #4]
 801b62e:	4298      	cmp	r0, r3
 801b630:	d24f      	bcs.n	801b6d2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801b632:	f811 2b01 	ldrb.w	r2, [r1], #1
 801b636:	2a00      	cmp	r2, #0
 801b638:	d048      	beq.n	801b6cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801b63a:	fb0a f202 	mul.w	r2, sl, r2
 801b63e:	1c53      	adds	r3, r2, #1
 801b640:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b644:	121b      	asrs	r3, r3, #8
 801b646:	d041      	beq.n	801b6cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801b648:	8802      	ldrh	r2, [r0, #0]
 801b64a:	f8b4 c000 	ldrh.w	ip, [r4]
 801b64e:	b29e      	uxth	r6, r3
 801b650:	1215      	asrs	r5, r2, #8
 801b652:	43db      	mvns	r3, r3
 801b654:	b2db      	uxtb	r3, r3
 801b656:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b65a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b65e:	fb15 f503 	smulbb	r5, r5, r3
 801b662:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801b666:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b66a:	00d2      	lsls	r2, r2, #3
 801b66c:	fb07 5706 	mla	r7, r7, r6, r5
 801b670:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801b674:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801b678:	b2d2      	uxtb	r2, r2
 801b67a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b67e:	b2bf      	uxth	r7, r7
 801b680:	fb1e fe03 	smulbb	lr, lr, r3
 801b684:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801b688:	fa5f fc8c 	uxtb.w	ip, ip
 801b68c:	fb12 f203 	smulbb	r2, r2, r3
 801b690:	fb05 e506 	mla	r5, r5, r6, lr
 801b694:	fb0c 2c06 	mla	ip, ip, r6, r2
 801b698:	f107 0e01 	add.w	lr, r7, #1
 801b69c:	fa1f fc8c 	uxth.w	ip, ip
 801b6a0:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801b6a4:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 801b6a8:	f10c 0701 	add.w	r7, ip, #1
 801b6ac:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b6b0:	b2ad      	uxth	r5, r5
 801b6b2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b6b6:	ea47 070e 	orr.w	r7, r7, lr
 801b6ba:	f105 0e01 	add.w	lr, r5, #1
 801b6be:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801b6c2:	096d      	lsrs	r5, r5, #5
 801b6c4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b6c8:	432f      	orrs	r7, r5
 801b6ca:	8007      	strh	r7, [r0, #0]
 801b6cc:	3002      	adds	r0, #2
 801b6ce:	3402      	adds	r4, #2
 801b6d0:	e7ac      	b.n	801b62c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801b6d2:	f8b9 3000 	ldrh.w	r3, [r9]
 801b6d6:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801b6da:	eba3 0308 	sub.w	r3, r3, r8
 801b6de:	eba6 0608 	sub.w	r6, r6, r8
 801b6e2:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801b6e6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b6ea:	440e      	add	r6, r1
 801b6ec:	e797      	b.n	801b61e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801b6ee:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801b6f2:	42a8      	cmp	r0, r5
 801b6f4:	d262      	bcs.n	801b7bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801b6f6:	9b00      	ldr	r3, [sp, #0]
 801b6f8:	4631      	mov	r1, r6
 801b6fa:	eb00 0b03 	add.w	fp, r0, r3
 801b6fe:	4558      	cmp	r0, fp
 801b700:	d24e      	bcs.n	801b7a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801b702:	f811 3b01 	ldrb.w	r3, [r1], #1
 801b706:	b12b      	cbz	r3, 801b714 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801b708:	2bff      	cmp	r3, #255	@ 0xff
 801b70a:	f8b4 e000 	ldrh.w	lr, [r4]
 801b70e:	d104      	bne.n	801b71a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801b710:	f8a0 e000 	strh.w	lr, [r0]
 801b714:	3002      	adds	r0, #2
 801b716:	3402      	adds	r4, #2
 801b718:	e7f1      	b.n	801b6fe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801b71a:	8802      	ldrh	r2, [r0, #0]
 801b71c:	b29f      	uxth	r7, r3
 801b71e:	1216      	asrs	r6, r2, #8
 801b720:	43db      	mvns	r3, r3
 801b722:	b2db      	uxtb	r3, r3
 801b724:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b728:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801b72c:	fb16 f603 	smulbb	r6, r6, r3
 801b730:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801b734:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801b738:	00d2      	lsls	r2, r2, #3
 801b73a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b73e:	b2d2      	uxtb	r2, r2
 801b740:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b744:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801b748:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b74c:	fb1a fa03 	smulbb	sl, sl, r3
 801b750:	fa1f fc8c 	uxth.w	ip, ip
 801b754:	fb12 f303 	smulbb	r3, r2, r3
 801b758:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801b75c:	fa5f fe8e 	uxtb.w	lr, lr
 801b760:	fb06 a607 	mla	r6, r6, r7, sl
 801b764:	f10c 0201 	add.w	r2, ip, #1
 801b768:	fb0e 3307 	mla	r3, lr, r7, r3
 801b76c:	b2b6      	uxth	r6, r6
 801b76e:	b29b      	uxth	r3, r3
 801b770:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b774:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 801b778:	f106 0a01 	add.w	sl, r6, #1
 801b77c:	f103 0c01 	add.w	ip, r3, #1
 801b780:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b784:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801b788:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b78c:	0976      	lsrs	r6, r6, #5
 801b78e:	ea4c 0c02 	orr.w	ip, ip, r2
 801b792:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801b796:	ea4c 0c06 	orr.w	ip, ip, r6
 801b79a:	f8a0 c000 	strh.w	ip, [r0]
 801b79e:	e7b9      	b.n	801b714 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801b7a0:	f8b9 3000 	ldrh.w	r3, [r9]
 801b7a4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801b7a8:	eba3 0308 	sub.w	r3, r3, r8
 801b7ac:	eba6 0608 	sub.w	r6, r6, r8
 801b7b0:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801b7b4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b7b8:	440e      	add	r6, r1
 801b7ba:	e79a      	b.n	801b6f2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801b7bc:	4b03      	ldr	r3, [pc, #12]	@ (801b7cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801b7be:	6818      	ldr	r0, [r3, #0]
 801b7c0:	6803      	ldr	r3, [r0, #0]
 801b7c2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801b7c4:	4798      	blx	r3
 801b7c6:	b007      	add	sp, #28
 801b7c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b7cc:	200152ec 	.word	0x200152ec
 801b7d0:	200152e6 	.word	0x200152e6

0801b7d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801b7d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b7d8:	b089      	sub	sp, #36	@ 0x24
 801b7da:	4607      	mov	r7, r0
 801b7dc:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 801b7e0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b7e2:	4688      	mov	r8, r1
 801b7e4:	4692      	mov	sl, r2
 801b7e6:	4699      	mov	r9, r3
 801b7e8:	2e00      	cmp	r6, #0
 801b7ea:	d048      	beq.n	801b87e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b7ec:	4608      	mov	r0, r1
 801b7ee:	f7fa f81d 	bl	801582c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801b7f2:	4605      	mov	r5, r0
 801b7f4:	4640      	mov	r0, r8
 801b7f6:	f7fa f84d 	bl	8015894 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801b7fa:	f8ad 000e 	strh.w	r0, [sp, #14]
 801b7fe:	4640      	mov	r0, r8
 801b800:	f8ad a008 	strh.w	sl, [sp, #8]
 801b804:	f8ad 500c 	strh.w	r5, [sp, #12]
 801b808:	f8ad 900a 	strh.w	r9, [sp, #10]
 801b80c:	f7fa f900 	bl	8015a10 <_ZNK8touchgfx6Bitmap7getDataEv>
 801b810:	4605      	mov	r5, r0
 801b812:	4640      	mov	r0, r8
 801b814:	f7fa f92c 	bl	8015a70 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801b818:	4682      	mov	sl, r0
 801b81a:	4640      	mov	r0, r8
 801b81c:	f7fa f97c 	bl	8015b18 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801b820:	2810      	cmp	r0, #16
 801b822:	d82c      	bhi.n	801b87e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b824:	e8df f010 	tbh	[pc, r0, lsl #1]
 801b828:	00ba00ca 	.word	0x00ba00ca
 801b82c:	002b0011 	.word	0x002b0011
 801b830:	002b002b 	.word	0x002b002b
 801b834:	002b002b 	.word	0x002b002b
 801b838:	002b002b 	.word	0x002b002b
 801b83c:	00c1002b 	.word	0x00c1002b
 801b840:	002b002b 	.word	0x002b002b
 801b844:	002b0180 	.word	0x002b0180
 801b848:	0173      	.short	0x0173
 801b84a:	4bbc      	ldr	r3, [pc, #752]	@ (801bb3c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 801b84c:	6818      	ldr	r0, [r3, #0]
 801b84e:	6803      	ldr	r3, [r0, #0]
 801b850:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801b852:	4798      	blx	r3
 801b854:	2eff      	cmp	r6, #255	@ 0xff
 801b856:	d101      	bne.n	801b85c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801b858:	0683      	lsls	r3, r0, #26
 801b85a:	d506      	bpl.n	801b86a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 801b85c:	4633      	mov	r3, r6
 801b85e:	4622      	mov	r2, r4
 801b860:	a902      	add	r1, sp, #8
 801b862:	4628      	mov	r0, r5
 801b864:	f7ff f8fc 	bl	801aa60 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801b868:	e009      	b.n	801b87e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b86a:	4640      	mov	r0, r8
 801b86c:	f7fa f898 	bl	80159a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801b870:	b940      	cbnz	r0, 801b884 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 801b872:	4623      	mov	r3, r4
 801b874:	aa02      	add	r2, sp, #8
 801b876:	4629      	mov	r1, r5
 801b878:	4638      	mov	r0, r7
 801b87a:	f7ff f9d7 	bl	801ac2c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801b87e:	b009      	add	sp, #36	@ 0x24
 801b880:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b884:	f10d 0918 	add.w	r9, sp, #24
 801b888:	4641      	mov	r1, r8
 801b88a:	4648      	mov	r0, r9
 801b88c:	f7fa f836 	bl	80158fc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801b890:	e899 0003 	ldmia.w	r9, {r0, r1}
 801b894:	f10d 0810 	add.w	r8, sp, #16
 801b898:	e888 0003 	stmia.w	r8, {r0, r1}
 801b89c:	4640      	mov	r0, r8
 801b89e:	4621      	mov	r1, r4
 801b8a0:	f7f0 ff04 	bl	800c6ac <_ZN8touchgfx4RectaNERKS0_>
 801b8a4:	4640      	mov	r0, r8
 801b8a6:	f7f0 ff44 	bl	800c732 <_ZNK8touchgfx4Rect7isEmptyEv>
 801b8aa:	2800      	cmp	r0, #0
 801b8ac:	d1d6      	bne.n	801b85c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801b8ae:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801b8b2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801b8b6:	4293      	cmp	r3, r2
 801b8b8:	dd12      	ble.n	801b8e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 801b8ba:	1a9b      	subs	r3, r3, r2
 801b8bc:	f9b4 0000 	ldrsh.w	r0, [r4]
 801b8c0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b8c4:	f8ad 0018 	strh.w	r0, [sp, #24]
 801b8c8:	f8ad 201a 	strh.w	r2, [sp, #26]
 801b8cc:	f8ad 101c 	strh.w	r1, [sp, #28]
 801b8d0:	f8ad 301e 	strh.w	r3, [sp, #30]
 801b8d4:	464a      	mov	r2, r9
 801b8d6:	4633      	mov	r3, r6
 801b8d8:	a902      	add	r1, sp, #8
 801b8da:	4628      	mov	r0, r5
 801b8dc:	f7ff f8c0 	bl	801aa60 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801b8e0:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801b8e4:	f9b4 2000 	ldrsh.w	r2, [r4]
 801b8e8:	4293      	cmp	r3, r2
 801b8ea:	dd12      	ble.n	801b912 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 801b8ec:	1a9b      	subs	r3, r3, r2
 801b8ee:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801b8f2:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801b8f6:	f8ad 2018 	strh.w	r2, [sp, #24]
 801b8fa:	f8ad 001a 	strh.w	r0, [sp, #26]
 801b8fe:	f8ad 301c 	strh.w	r3, [sp, #28]
 801b902:	f8ad 101e 	strh.w	r1, [sp, #30]
 801b906:	23ff      	movs	r3, #255	@ 0xff
 801b908:	464a      	mov	r2, r9
 801b90a:	a902      	add	r1, sp, #8
 801b90c:	4628      	mov	r0, r5
 801b90e:	f7ff f8a7 	bl	801aa60 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801b912:	4643      	mov	r3, r8
 801b914:	aa02      	add	r2, sp, #8
 801b916:	4629      	mov	r1, r5
 801b918:	4638      	mov	r0, r7
 801b91a:	f7ff f987 	bl	801ac2c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801b91e:	88a2      	ldrh	r2, [r4, #4]
 801b920:	8823      	ldrh	r3, [r4, #0]
 801b922:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801b926:	4413      	add	r3, r2
 801b928:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b92c:	440a      	add	r2, r1
 801b92e:	b29b      	uxth	r3, r3
 801b930:	b292      	uxth	r2, r2
 801b932:	b211      	sxth	r1, r2
 801b934:	b218      	sxth	r0, r3
 801b936:	4288      	cmp	r0, r1
 801b938:	dd12      	ble.n	801b960 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 801b93a:	1a9b      	subs	r3, r3, r2
 801b93c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801b940:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801b944:	f8ad 1018 	strh.w	r1, [sp, #24]
 801b948:	f8ad 301c 	strh.w	r3, [sp, #28]
 801b94c:	f8ad 001e 	strh.w	r0, [sp, #30]
 801b950:	23ff      	movs	r3, #255	@ 0xff
 801b952:	464a      	mov	r2, r9
 801b954:	a902      	add	r1, sp, #8
 801b956:	4628      	mov	r0, r5
 801b958:	f8ad 601a 	strh.w	r6, [sp, #26]
 801b95c:	f7ff f880 	bl	801aa60 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801b960:	88e2      	ldrh	r2, [r4, #6]
 801b962:	8863      	ldrh	r3, [r4, #2]
 801b964:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801b968:	4413      	add	r3, r2
 801b96a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801b96e:	440a      	add	r2, r1
 801b970:	b29b      	uxth	r3, r3
 801b972:	b292      	uxth	r2, r2
 801b974:	b211      	sxth	r1, r2
 801b976:	b218      	sxth	r0, r3
 801b978:	4288      	cmp	r0, r1
 801b97a:	dd80      	ble.n	801b87e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b97c:	1a9b      	subs	r3, r3, r2
 801b97e:	f9b4 6000 	ldrsh.w	r6, [r4]
 801b982:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801b986:	f8ad 301e 	strh.w	r3, [sp, #30]
 801b98a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801b98e:	f8ad 101a 	strh.w	r1, [sp, #26]
 801b992:	f8ad 001c 	strh.w	r0, [sp, #28]
 801b996:	23ff      	movs	r3, #255	@ 0xff
 801b998:	464a      	mov	r2, r9
 801b99a:	e761      	b.n	801b860 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 801b99c:	4633      	mov	r3, r6
 801b99e:	4622      	mov	r2, r4
 801b9a0:	a902      	add	r1, sp, #8
 801b9a2:	4628      	mov	r0, r5
 801b9a4:	f7ff f9b2 	bl	801ad0c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801b9a8:	e769      	b.n	801b87e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b9aa:	e9cd 4600 	strd	r4, r6, [sp]
 801b9ae:	ab02      	add	r3, sp, #8
 801b9b0:	4652      	mov	r2, sl
 801b9b2:	4629      	mov	r1, r5
 801b9b4:	4638      	mov	r0, r7
 801b9b6:	f7ff fd89 	bl	801b4cc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801b9ba:	e760      	b.n	801b87e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b9bc:	4640      	mov	r0, r8
 801b9be:	f7f9 ffef 	bl	80159a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801b9c2:	b948      	cbnz	r0, 801b9d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 801b9c4:	683b      	ldr	r3, [r7, #0]
 801b9c6:	e9cd 6000 	strd	r6, r0, [sp]
 801b9ca:	aa02      	add	r2, sp, #8
 801b9cc:	68de      	ldr	r6, [r3, #12]
 801b9ce:	4629      	mov	r1, r5
 801b9d0:	4623      	mov	r3, r4
 801b9d2:	4638      	mov	r0, r7
 801b9d4:	47b0      	blx	r6
 801b9d6:	e752      	b.n	801b87e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b9d8:	f10d 0918 	add.w	r9, sp, #24
 801b9dc:	4641      	mov	r1, r8
 801b9de:	4648      	mov	r0, r9
 801b9e0:	f7f9 ff8c 	bl	80158fc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801b9e4:	e899 0003 	ldmia.w	r9, {r0, r1}
 801b9e8:	f10d 0810 	add.w	r8, sp, #16
 801b9ec:	e888 0003 	stmia.w	r8, {r0, r1}
 801b9f0:	4640      	mov	r0, r8
 801b9f2:	4621      	mov	r1, r4
 801b9f4:	f7f0 fe5a 	bl	800c6ac <_ZN8touchgfx4RectaNERKS0_>
 801b9f8:	4640      	mov	r0, r8
 801b9fa:	f7f0 fe9a 	bl	800c732 <_ZNK8touchgfx4Rect7isEmptyEv>
 801b9fe:	b138      	cbz	r0, 801ba10 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 801ba00:	9600      	str	r6, [sp, #0]
 801ba02:	4623      	mov	r3, r4
 801ba04:	aa02      	add	r2, sp, #8
 801ba06:	4651      	mov	r1, sl
 801ba08:	4628      	mov	r0, r5
 801ba0a:	f7ff fdbd 	bl	801b588 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801ba0e:	e736      	b.n	801b87e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801ba10:	683b      	ldr	r3, [r7, #0]
 801ba12:	e9cd 6000 	strd	r6, r0, [sp]
 801ba16:	aa02      	add	r2, sp, #8
 801ba18:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801ba1c:	4629      	mov	r1, r5
 801ba1e:	4643      	mov	r3, r8
 801ba20:	4638      	mov	r0, r7
 801ba22:	47d8      	blx	fp
 801ba24:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ba28:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801ba2c:	4293      	cmp	r3, r2
 801ba2e:	dd13      	ble.n	801ba58 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 801ba30:	f9b4 0000 	ldrsh.w	r0, [r4]
 801ba34:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ba38:	f8ad 0018 	strh.w	r0, [sp, #24]
 801ba3c:	1a9b      	subs	r3, r3, r2
 801ba3e:	f8ad 201a 	strh.w	r2, [sp, #26]
 801ba42:	f8ad 101c 	strh.w	r1, [sp, #28]
 801ba46:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ba4a:	9600      	str	r6, [sp, #0]
 801ba4c:	464b      	mov	r3, r9
 801ba4e:	aa02      	add	r2, sp, #8
 801ba50:	4651      	mov	r1, sl
 801ba52:	4628      	mov	r0, r5
 801ba54:	f7ff fd98 	bl	801b588 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801ba58:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801ba5c:	f9b4 2000 	ldrsh.w	r2, [r4]
 801ba60:	4293      	cmp	r3, r2
 801ba62:	dd13      	ble.n	801ba8c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 801ba64:	1a9b      	subs	r3, r3, r2
 801ba66:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801ba6a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801ba6e:	f8ad 2018 	strh.w	r2, [sp, #24]
 801ba72:	f8ad 001a 	strh.w	r0, [sp, #26]
 801ba76:	f8ad 301c 	strh.w	r3, [sp, #28]
 801ba7a:	f8ad 101e 	strh.w	r1, [sp, #30]
 801ba7e:	9600      	str	r6, [sp, #0]
 801ba80:	464b      	mov	r3, r9
 801ba82:	aa02      	add	r2, sp, #8
 801ba84:	4651      	mov	r1, sl
 801ba86:	4628      	mov	r0, r5
 801ba88:	f7ff fd7e 	bl	801b588 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801ba8c:	88a2      	ldrh	r2, [r4, #4]
 801ba8e:	8823      	ldrh	r3, [r4, #0]
 801ba90:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801ba94:	4413      	add	r3, r2
 801ba96:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ba9a:	440a      	add	r2, r1
 801ba9c:	b29b      	uxth	r3, r3
 801ba9e:	b292      	uxth	r2, r2
 801baa0:	b211      	sxth	r1, r2
 801baa2:	b218      	sxth	r0, r3
 801baa4:	4288      	cmp	r0, r1
 801baa6:	dd13      	ble.n	801bad0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 801baa8:	1a9b      	subs	r3, r3, r2
 801baaa:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801baae:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801bab2:	f8ad 1018 	strh.w	r1, [sp, #24]
 801bab6:	f8ad 301c 	strh.w	r3, [sp, #28]
 801baba:	f8ad 001e 	strh.w	r0, [sp, #30]
 801babe:	9600      	str	r6, [sp, #0]
 801bac0:	464b      	mov	r3, r9
 801bac2:	aa02      	add	r2, sp, #8
 801bac4:	4651      	mov	r1, sl
 801bac6:	4628      	mov	r0, r5
 801bac8:	f8ad 701a 	strh.w	r7, [sp, #26]
 801bacc:	f7ff fd5c 	bl	801b588 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801bad0:	88e2      	ldrh	r2, [r4, #6]
 801bad2:	8863      	ldrh	r3, [r4, #2]
 801bad4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801bad8:	4413      	add	r3, r2
 801bada:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801bade:	440a      	add	r2, r1
 801bae0:	b29b      	uxth	r3, r3
 801bae2:	b292      	uxth	r2, r2
 801bae4:	b211      	sxth	r1, r2
 801bae6:	b218      	sxth	r0, r3
 801bae8:	4288      	cmp	r0, r1
 801baea:	f77f aec8 	ble.w	801b87e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801baee:	f9b4 7000 	ldrsh.w	r7, [r4]
 801baf2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801baf6:	f8ad 7018 	strh.w	r7, [sp, #24]
 801bafa:	1a9b      	subs	r3, r3, r2
 801bafc:	f8ad 301e 	strh.w	r3, [sp, #30]
 801bb00:	f8ad 101a 	strh.w	r1, [sp, #26]
 801bb04:	f8ad 001c 	strh.w	r0, [sp, #28]
 801bb08:	9600      	str	r6, [sp, #0]
 801bb0a:	464b      	mov	r3, r9
 801bb0c:	e77a      	b.n	801ba04 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 801bb0e:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801bb12:	2800      	cmp	r0, #0
 801bb14:	f43f aeb3 	beq.w	801b87e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801bb18:	6803      	ldr	r3, [r0, #0]
 801bb1a:	9600      	str	r6, [sp, #0]
 801bb1c:	68de      	ldr	r6, [r3, #12]
 801bb1e:	4623      	mov	r3, r4
 801bb20:	aa02      	add	r2, sp, #8
 801bb22:	4629      	mov	r1, r5
 801bb24:	47b0      	blx	r6
 801bb26:	e6aa      	b.n	801b87e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801bb28:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801bb2c:	2800      	cmp	r0, #0
 801bb2e:	f43f aea6 	beq.w	801b87e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801bb32:	6803      	ldr	r3, [r0, #0]
 801bb34:	9600      	str	r6, [sp, #0]
 801bb36:	689e      	ldr	r6, [r3, #8]
 801bb38:	e7f1      	b.n	801bb1e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 801bb3a:	bf00      	nop
 801bb3c:	200152ec 	.word	0x200152ec

0801bb40 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801bb40:	b180      	cbz	r0, 801bb64 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801bb42:	2903      	cmp	r1, #3
 801bb44:	d81c      	bhi.n	801bb80 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801bb46:	e8df f001 	tbb	[pc, r1]
 801bb4a:	1d02      	.short	0x1d02
 801bb4c:	1f08      	.short	0x1f08
 801bb4e:	4b10      	ldr	r3, [pc, #64]	@ (801bb90 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801bb50:	8818      	ldrh	r0, [r3, #0]
 801bb52:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801bb56:	4240      	negs	r0, r0
 801bb58:	4770      	bx	lr
 801bb5a:	4b0d      	ldr	r3, [pc, #52]	@ (801bb90 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801bb5c:	8818      	ldrh	r0, [r3, #0]
 801bb5e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801bb62:	4770      	bx	lr
 801bb64:	2903      	cmp	r1, #3
 801bb66:	d80b      	bhi.n	801bb80 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801bb68:	a301      	add	r3, pc, #4	@ (adr r3, 801bb70 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801bb6a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801bb6e:	bf00      	nop
 801bb70:	0801bb85 	.word	0x0801bb85
 801bb74:	0801bb5b 	.word	0x0801bb5b
 801bb78:	0801bb89 	.word	0x0801bb89
 801bb7c:	0801bb4f 	.word	0x0801bb4f
 801bb80:	2000      	movs	r0, #0
 801bb82:	4770      	bx	lr
 801bb84:	2001      	movs	r0, #1
 801bb86:	4770      	bx	lr
 801bb88:	f04f 30ff 	mov.w	r0, #4294967295
 801bb8c:	4770      	bx	lr
 801bb8e:	bf00      	nop
 801bb90:	200152e6 	.word	0x200152e6

0801bb94 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801bb94:	b180      	cbz	r0, 801bbb8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801bb96:	2903      	cmp	r1, #3
 801bb98:	d81c      	bhi.n	801bbd4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801bb9a:	e8df f001 	tbb	[pc, r1]
 801bb9e:	021d      	.short	0x021d
 801bba0:	071f      	.short	0x071f
 801bba2:	4b10      	ldr	r3, [pc, #64]	@ (801bbe4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801bba4:	8818      	ldrh	r0, [r3, #0]
 801bba6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801bbaa:	4770      	bx	lr
 801bbac:	4b0d      	ldr	r3, [pc, #52]	@ (801bbe4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801bbae:	8818      	ldrh	r0, [r3, #0]
 801bbb0:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801bbb4:	4240      	negs	r0, r0
 801bbb6:	4770      	bx	lr
 801bbb8:	2903      	cmp	r1, #3
 801bbba:	d80b      	bhi.n	801bbd4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801bbbc:	a301      	add	r3, pc, #4	@ (adr r3, 801bbc4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801bbbe:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801bbc2:	bf00      	nop
 801bbc4:	0801bba3 	.word	0x0801bba3
 801bbc8:	0801bbdd 	.word	0x0801bbdd
 801bbcc:	0801bbad 	.word	0x0801bbad
 801bbd0:	0801bbd9 	.word	0x0801bbd9
 801bbd4:	2000      	movs	r0, #0
 801bbd6:	4770      	bx	lr
 801bbd8:	2001      	movs	r0, #1
 801bbda:	4770      	bx	lr
 801bbdc:	f04f 30ff 	mov.w	r0, #4294967295
 801bbe0:	4770      	bx	lr
 801bbe2:	bf00      	nop
 801bbe4:	200152e6 	.word	0x200152e6

0801bbe8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801bbe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bbec:	b099      	sub	sp, #100	@ 0x64
 801bbee:	910d      	str	r1, [sp, #52]	@ 0x34
 801bbf0:	a914      	add	r1, sp, #80	@ 0x50
 801bbf2:	e881 000c 	stmia.w	r1, {r2, r3}
 801bbf6:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 801bbfa:	930b      	str	r3, [sp, #44]	@ 0x2c
 801bbfc:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 801bc00:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801bc04:	9310      	str	r3, [sp, #64]	@ 0x40
 801bc06:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801bc0a:	9308      	str	r3, [sp, #32]
 801bc0c:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 801bc10:	9309      	str	r3, [sp, #36]	@ 0x24
 801bc12:	7b4b      	ldrb	r3, [r1, #13]
 801bc14:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 801bc18:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 801bc1c:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 801bc20:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
 801bc22:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
 801bc26:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 801bc2a:	ea4f 1843 	mov.w	r8, r3, lsl #5
 801bc2e:	f408 7080 	and.w	r0, r8, #256	@ 0x100
 801bc32:	f891 8006 	ldrb.w	r8, [r1, #6]
 801bc36:	ea58 0800 	orrs.w	r8, r8, r0
 801bc3a:	f000 81ce 	beq.w	801bfda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801bc3e:	011b      	lsls	r3, r3, #4
 801bc40:	79c8      	ldrb	r0, [r1, #7]
 801bc42:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801bc46:	4303      	orrs	r3, r0
 801bc48:	930c      	str	r3, [sp, #48]	@ 0x30
 801bc4a:	f000 81c6 	beq.w	801bfda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801bc4e:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801bc52:	b29b      	uxth	r3, r3
 801bc54:	2d00      	cmp	r5, #0
 801bc56:	f000 812c 	beq.w	801beb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ca>
 801bc5a:	1aed      	subs	r5, r5, r3
 801bc5c:	b2ad      	uxth	r5, r5
 801bc5e:	0429      	lsls	r1, r5, #16
 801bc60:	d502      	bpl.n	801bc68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 801bc62:	1b64      	subs	r4, r4, r5
 801bc64:	b224      	sxth	r4, r4
 801bc66:	2500      	movs	r5, #0
 801bc68:	f9b2 0000 	ldrsh.w	r0, [r2]
 801bc6c:	8891      	ldrh	r1, [r2, #4]
 801bc6e:	4284      	cmp	r4, r0
 801bc70:	b283      	uxth	r3, r0
 801bc72:	bfb8      	it	lt
 801bc74:	18ed      	addlt	r5, r5, r3
 801bc76:	440b      	add	r3, r1
 801bc78:	b21b      	sxth	r3, r3
 801bc7a:	930a      	str	r3, [sp, #40]	@ 0x28
 801bc7c:	88d3      	ldrh	r3, [r2, #6]
 801bc7e:	8852      	ldrh	r2, [r2, #2]
 801bc80:	4413      	add	r3, r2
 801bc82:	b21b      	sxth	r3, r3
 801bc84:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bc86:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801bc88:	930e      	str	r3, [sp, #56]	@ 0x38
 801bc8a:	bfb8      	it	lt
 801bc8c:	1b2c      	sublt	r4, r5, r4
 801bc8e:	4bb5      	ldr	r3, [pc, #724]	@ (801bf64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 801bc90:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801bc92:	f893 b000 	ldrb.w	fp, [r3]
 801bc96:	bfbc      	itt	lt
 801bc98:	b2a5      	uxthlt	r5, r4
 801bc9a:	4604      	movlt	r4, r0
 801bc9c:	4653      	mov	r3, sl
 801bc9e:	4621      	mov	r1, r4
 801bca0:	a814      	add	r0, sp, #80	@ 0x50
 801bca2:	f7f5 fd4e 	bl	8011742 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801bca6:	4621      	mov	r1, r4
 801bca8:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 801bcac:	4653      	mov	r3, sl
 801bcae:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801bcb0:	a814      	add	r0, sp, #80	@ 0x50
 801bcb2:	f7f5 fd63 	bl	801177c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801bcb6:	a918      	add	r1, sp, #96	@ 0x60
 801bcb8:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801bcbc:	a817      	add	r0, sp, #92	@ 0x5c
 801bcbe:	f7f5 fe89 	bl	80119d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801bcc2:	f1ba 0f00 	cmp.w	sl, #0
 801bcc6:	f040 80f7 	bne.w	801beb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d0>
 801bcca:	f1bb 0f01 	cmp.w	fp, #1
 801bcce:	f040 80fb 	bne.w	801bec8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e0>
 801bcd2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bcd4:	2b00      	cmp	r3, #0
 801bcd6:	f040 81a8 	bne.w	801c02a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x442>
 801bcda:	fa1f f288 	uxth.w	r2, r8
 801bcde:	b905      	cbnz	r5, 801bce2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfa>
 801bce0:	b15e      	cbz	r6, 801bcfa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 801bce2:	9808      	ldr	r0, [sp, #32]
 801bce4:	fb06 5302 	mla	r3, r6, r2, r5
 801bce8:	4343      	muls	r3, r0
 801bcea:	4631      	mov	r1, r6
 801bcec:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
 801bcf0:	f003 0607 	and.w	r6, r3, #7
 801bcf4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801bcf6:	1a5b      	subs	r3, r3, r1
 801bcf8:	930e      	str	r3, [sp, #56]	@ 0x38
 801bcfa:	f10b 31ff 	add.w	r1, fp, #4294967295
 801bcfe:	424b      	negs	r3, r1
 801bd00:	414b      	adcs	r3, r1
 801bd02:	4618      	mov	r0, r3
 801bd04:	4651      	mov	r1, sl
 801bd06:	930c      	str	r3, [sp, #48]	@ 0x30
 801bd08:	f7ff ff1a 	bl	801bb40 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801bd0c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801bd0e:	4683      	mov	fp, r0
 801bd10:	4618      	mov	r0, r3
 801bd12:	f7ff ff3f 	bl	801bb94 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801bd16:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801bd18:	4603      	mov	r3, r0
 801bd1a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801bd1c:	eba1 0a00 	sub.w	sl, r1, r0
 801bd20:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801bd22:	458a      	cmp	sl, r1
 801bd24:	bfa8      	it	ge
 801bd26:	468a      	movge	sl, r1
 801bd28:	f1ba 0f00 	cmp.w	sl, #0
 801bd2c:	f340 8155 	ble.w	801bfda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801bd30:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801bd32:	1b64      	subs	r4, r4, r5
 801bd34:	1b0c      	subs	r4, r1, r4
 801bd36:	4544      	cmp	r4, r8
 801bd38:	bfd4      	ite	le
 801bd3a:	ebc5 0504 	rsble	r5, r5, r4
 801bd3e:	ebc5 0508 	rsbgt	r5, r5, r8
 801bd42:	2d00      	cmp	r5, #0
 801bd44:	f340 8149 	ble.w	801bfda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801bd48:	9908      	ldr	r1, [sp, #32]
 801bd4a:	1b52      	subs	r2, r2, r5
 801bd4c:	434a      	muls	r2, r1
 801bd4e:	920e      	str	r2, [sp, #56]	@ 0x38
 801bd50:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801bd52:	2a00      	cmp	r2, #0
 801bd54:	f040 8175 	bne.w	801c042 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45a>
 801bd58:	4a83      	ldr	r2, [pc, #524]	@ (801bf68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 801bd5a:	930a      	str	r3, [sp, #40]	@ 0x28
 801bd5c:	6810      	ldr	r0, [r2, #0]
 801bd5e:	6802      	ldr	r2, [r0, #0]
 801bd60:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 801bd62:	4790      	blx	r2
 801bd64:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801bd66:	9908      	ldr	r1, [sp, #32]
 801bd68:	2201      	movs	r2, #1
 801bd6a:	408a      	lsls	r2, r1
 801bd6c:	3a01      	subs	r2, #1
 801bd6e:	497f      	ldr	r1, [pc, #508]	@ (801bf6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
 801bd70:	b2d2      	uxtb	r2, r2
 801bd72:	880c      	ldrh	r4, [r1, #0]
 801bd74:	920c      	str	r2, [sp, #48]	@ 0x30
 801bd76:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
 801bd7a:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 801bd7e:	fb04 1202 	mla	r2, r4, r2, r1
 801bd82:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801bd86:	ea4f 2419 	mov.w	r4, r9, lsr #8
 801bd8a:	920a      	str	r2, [sp, #40]	@ 0x28
 801bd8c:	f3c9 4207 	ubfx	r2, r9, #16, #8
 801bd90:	9212      	str	r2, [sp, #72]	@ 0x48
 801bd92:	b2e2      	uxtb	r2, r4
 801bd94:	9211      	str	r2, [sp, #68]	@ 0x44
 801bd96:	fa5f f289 	uxtb.w	r2, r9
 801bd9a:	9210      	str	r2, [sp, #64]	@ 0x40
 801bd9c:	4a74      	ldr	r2, [pc, #464]	@ (801bf70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 801bd9e:	ea4f 1159 	mov.w	r1, r9, lsr #5
 801bda2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801bda6:	4022      	ands	r2, r4
 801bda8:	430a      	orrs	r2, r1
 801bdaa:	f3c9 09c4 	ubfx	r9, r9, #3, #5
 801bdae:	ea42 0209 	orr.w	r2, r2, r9
 801bdb2:	ea4f 014b 	mov.w	r1, fp, lsl #1
 801bdb6:	b292      	uxth	r2, r2
 801bdb8:	fb05 3b1b 	mls	fp, r5, fp, r3
 801bdbc:	920f      	str	r2, [sp, #60]	@ 0x3c
 801bdbe:	460b      	mov	r3, r1
 801bdc0:	783a      	ldrb	r2, [r7, #0]
 801bdc2:	910b      	str	r1, [sp, #44]	@ 0x2c
 801bdc4:	436b      	muls	r3, r5
 801bdc6:	4132      	asrs	r2, r6
 801bdc8:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 801bdcc:	b2d2      	uxtb	r2, r2
 801bdce:	9313      	str	r3, [sp, #76]	@ 0x4c
 801bdd0:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801bdd4:	f0c0 8149 	bcc.w	801c06a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x482>
 801bdd8:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801bddc:	46a9      	mov	r9, r5
 801bdde:	f119 39ff 	adds.w	r9, r9, #4294967295
 801bde2:	f0c0 8132 	bcc.w	801c04a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
 801bde6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801bde8:	4013      	ands	r3, r2
 801bdea:	d054      	beq.n	801be96 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ae>
 801bdec:	20ff      	movs	r0, #255	@ 0xff
 801bdee:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801bdf0:	fb90 f1f1 	sdiv	r1, r0, r1
 801bdf4:	434b      	muls	r3, r1
 801bdf6:	2bfe      	cmp	r3, #254	@ 0xfe
 801bdf8:	dd03      	ble.n	801be02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21a>
 801bdfa:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801bdfc:	4281      	cmp	r1, r0
 801bdfe:	f000 8122 	beq.w	801c046 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
 801be02:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801be04:	f8b8 4000 	ldrh.w	r4, [r8]
 801be08:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801be0a:	fb11 f303 	smulbb	r3, r1, r3
 801be0e:	b29b      	uxth	r3, r3
 801be10:	1c59      	adds	r1, r3, #1
 801be12:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801be16:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801be1a:	fa1f fe83 	uxth.w	lr, r3
 801be1e:	1221      	asrs	r1, r4, #8
 801be20:	fb10 fb0e 	smulbb	fp, r0, lr
 801be24:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801be28:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801be2a:	43db      	mvns	r3, r3
 801be2c:	b2db      	uxtb	r3, r3
 801be2e:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801be32:	fb01 b103 	mla	r1, r1, r3, fp
 801be36:	ea4f 0ce4 	mov.w	ip, r4, asr #3
 801be3a:	fb10 fb0e 	smulbb	fp, r0, lr
 801be3e:	00e4      	lsls	r4, r4, #3
 801be40:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801be42:	b2e4      	uxtb	r4, r4
 801be44:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801be48:	fb10 fe0e 	smulbb	lr, r0, lr
 801be4c:	fb04 e403 	mla	r4, r4, r3, lr
 801be50:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801be54:	b289      	uxth	r1, r1
 801be56:	b2a4      	uxth	r4, r4
 801be58:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
 801be5c:	fb0c bc03 	mla	ip, ip, r3, fp
 801be60:	1c4b      	adds	r3, r1, #1
 801be62:	f104 0b01 	add.w	fp, r4, #1
 801be66:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801be6a:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
 801be6e:	fa1f fc8c 	uxth.w	ip, ip
 801be72:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801be76:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801be7a:	ea4b 0101 	orr.w	r1, fp, r1
 801be7e:	f10c 0b01 	add.w	fp, ip, #1
 801be82:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 801be86:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801be8a:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801be8e:	ea41 010b 	orr.w	r1, r1, fp
 801be92:	f8a8 1000 	strh.w	r1, [r8]
 801be96:	9b08      	ldr	r3, [sp, #32]
 801be98:	441e      	add	r6, r3
 801be9a:	b2b6      	uxth	r6, r6
 801be9c:	2e07      	cmp	r6, #7
 801be9e:	bf98      	it	ls
 801bea0:	411a      	asrls	r2, r3
 801bea2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bea4:	bf89      	itett	hi
 801bea6:	787a      	ldrbhi	r2, [r7, #1]
 801bea8:	b2d2      	uxtbls	r2, r2
 801beaa:	3701      	addhi	r7, #1
 801beac:	2600      	movhi	r6, #0
 801beae:	4498      	add	r8, r3
 801beb0:	e795      	b.n	801bdde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f6>
 801beb2:	441c      	add	r4, r3
 801beb4:	b224      	sxth	r4, r4
 801beb6:	e6d7      	b.n	801bc68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 801beb8:	f1ba 0f01 	cmp.w	sl, #1
 801bebc:	f47f af09 	bne.w	801bcd2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 801bec0:	f1bb 0f01 	cmp.w	fp, #1
 801bec4:	f47f af05 	bne.w	801bcd2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 801bec8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801beca:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801becc:	1a99      	subs	r1, r3, r2
 801bece:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801bed0:	1b9b      	subs	r3, r3, r6
 801bed2:	4299      	cmp	r1, r3
 801bed4:	bfa8      	it	ge
 801bed6:	4619      	movge	r1, r3
 801bed8:	2900      	cmp	r1, #0
 801beda:	9112      	str	r1, [sp, #72]	@ 0x48
 801bedc:	dd7d      	ble.n	801bfda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801bede:	4a22      	ldr	r2, [pc, #136]	@ (801bf68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 801bee0:	9211      	str	r2, [sp, #68]	@ 0x44
 801bee2:	6810      	ldr	r0, [r2, #0]
 801bee4:	6803      	ldr	r3, [r0, #0]
 801bee6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801bee8:	4798      	blx	r3
 801beea:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 801beee:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801bef0:	d006      	beq.n	801bf00 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801bef2:	9b08      	ldr	r3, [sp, #32]
 801bef4:	2b04      	cmp	r3, #4
 801bef6:	d133      	bne.n	801bf60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>
 801bef8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801befa:	3300      	adds	r3, #0
 801befc:	bf18      	it	ne
 801befe:	2301      	movne	r3, #1
 801bf00:	0582      	lsls	r2, r0, #22
 801bf02:	fa1f fc88 	uxth.w	ip, r8
 801bf06:	f140 80b9 	bpl.w	801c07c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 801bf0a:	9808      	ldr	r0, [sp, #32]
 801bf0c:	2808      	cmp	r0, #8
 801bf0e:	f040 80b5 	bne.w	801c07c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 801bf12:	2b00      	cmp	r3, #0
 801bf14:	d064      	beq.n	801bfe0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f8>
 801bf16:	f10c 0c01 	add.w	ip, ip, #1
 801bf1a:	f02c 0301 	bic.w	r3, ip, #1
 801bf1e:	b29b      	uxth	r3, r3
 801bf20:	bb45      	cbnz	r5, 801bf74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 801bf22:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801bf24:	eb08 0004 	add.w	r0, r8, r4
 801bf28:	4290      	cmp	r0, r2
 801bf2a:	dc23      	bgt.n	801bf74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 801bf2c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801bf2e:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 801bf32:	6810      	ldr	r0, [r2, #0]
 801bf34:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801bf38:	6804      	ldr	r4, [r0, #0]
 801bf3a:	9506      	str	r5, [sp, #24]
 801bf3c:	f44f 7580 	mov.w	r5, #256	@ 0x100
 801bf40:	9505      	str	r5, [sp, #20]
 801bf42:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801bf44:	9302      	str	r3, [sp, #8]
 801bf46:	b289      	uxth	r1, r1
 801bf48:	e9cd 3100 	strd	r3, r1, [sp]
 801bf4c:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801bf50:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 801bf54:	6da4      	ldr	r4, [r4, #88]	@ 0x58
 801bf56:	4673      	mov	r3, lr
 801bf58:	fb06 710c 	mla	r1, r6, ip, r7
 801bf5c:	47a0      	blx	r4
 801bf5e:	e03c      	b.n	801bfda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801bf60:	2300      	movs	r3, #0
 801bf62:	e7cd      	b.n	801bf00 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801bf64:	200152e4 	.word	0x200152e4
 801bf68:	200152ec 	.word	0x200152ec
 801bf6c:	200152e6 	.word	0x200152e6
 801bf70:	00fff800 	.word	0x00fff800
 801bf74:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801bf76:	eba4 0e05 	sub.w	lr, r4, r5
 801bf7a:	eba2 0e0e 	sub.w	lr, r2, lr
 801bf7e:	45c6      	cmp	lr, r8
 801bf80:	bfd4      	ite	le
 801bf82:	ebc5 0e0e 	rsble	lr, r5, lr
 801bf86:	ebc5 0e08 	rsbgt	lr, r5, r8
 801bf8a:	f1be 0f00 	cmp.w	lr, #0
 801bf8e:	d024      	beq.n	801bfda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801bf90:	07e8      	lsls	r0, r5, #31
 801bf92:	f53f ae9e 	bmi.w	801bcd2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 801bf96:	f01e 0001 	ands.w	r0, lr, #1
 801bf9a:	f47f ae9a 	bne.w	801bcd2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 801bf9e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801bfa0:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
 801bfa4:	6814      	ldr	r4, [r2, #0]
 801bfa6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801bfaa:	086d      	lsrs	r5, r5, #1
 801bfac:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 801bfb0:	fb06 560c 	mla	r6, r6, ip, r5
 801bfb4:	6825      	ldr	r5, [r4, #0]
 801bfb6:	9006      	str	r0, [sp, #24]
 801bfb8:	f44f 7080 	mov.w	r0, #256	@ 0x100
 801bfbc:	9005      	str	r0, [sp, #20]
 801bfbe:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801bfc0:	9302      	str	r3, [sp, #8]
 801bfc2:	e9cd 9003 	strd	r9, r0, [sp, #12]
 801bfc6:	b289      	uxth	r1, r1
 801bfc8:	fa1f f38e 	uxth.w	r3, lr
 801bfcc:	9101      	str	r1, [sp, #4]
 801bfce:	9300      	str	r3, [sp, #0]
 801bfd0:	6dad      	ldr	r5, [r5, #88]	@ 0x58
 801bfd2:	4643      	mov	r3, r8
 801bfd4:	19b9      	adds	r1, r7, r6
 801bfd6:	4620      	mov	r0, r4
 801bfd8:	47a8      	blx	r5
 801bfda:	b019      	add	sp, #100	@ 0x64
 801bfdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bfe0:	4a28      	ldr	r2, [pc, #160]	@ (801c084 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 801bfe2:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 801bfe6:	6810      	ldr	r0, [r2, #0]
 801bfe8:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801bfec:	f8d0 a000 	ldr.w	sl, [r0]
 801bff0:	9306      	str	r3, [sp, #24]
 801bff2:	f44f 7300 	mov.w	r3, #512	@ 0x200
 801bff6:	9305      	str	r3, [sp, #20]
 801bff8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bffa:	f8cd c008 	str.w	ip, [sp, #8]
 801bffe:	e9cd 9303 	strd	r9, r3, [sp, #12]
 801c002:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c004:	1b64      	subs	r4, r4, r5
 801c006:	1b1c      	subs	r4, r3, r4
 801c008:	fb06 5608 	mla	r6, r6, r8, r5
 801c00c:	4544      	cmp	r4, r8
 801c00e:	bfd4      	ite	le
 801c010:	ebc5 0504 	rsble	r5, r5, r4
 801c014:	ebc5 0508 	rsbgt	r5, r5, r8
 801c018:	b289      	uxth	r1, r1
 801c01a:	b2ad      	uxth	r5, r5
 801c01c:	9101      	str	r1, [sp, #4]
 801c01e:	9500      	str	r5, [sp, #0]
 801c020:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
 801c024:	4673      	mov	r3, lr
 801c026:	19b9      	adds	r1, r7, r6
 801c028:	e798      	b.n	801bf5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 801c02a:	2208      	movs	r2, #8
 801c02c:	9b08      	ldr	r3, [sp, #32]
 801c02e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c032:	1e5a      	subs	r2, r3, #1
 801c034:	4442      	add	r2, r8
 801c036:	fb92 f2f3 	sdiv	r2, r2, r3
 801c03a:	fb12 f203 	smulbb	r2, r2, r3
 801c03e:	b292      	uxth	r2, r2
 801c040:	e64d      	b.n	801bcde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf6>
 801c042:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801c044:	e68f      	b.n	801bd66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17e>
 801c046:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801c048:	e723      	b.n	801be92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2aa>
 801c04a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c04c:	b143      	cbz	r3, 801c060 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x478>
 801c04e:	441e      	add	r6, r3
 801c050:	b2b6      	uxth	r6, r6
 801c052:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
 801c056:	f006 0607 	and.w	r6, r6, #7
 801c05a:	783a      	ldrb	r2, [r7, #0]
 801c05c:	4132      	asrs	r2, r6
 801c05e:	b2d2      	uxtb	r2, r2
 801c060:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801c062:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801c064:	4419      	add	r1, r3
 801c066:	910a      	str	r1, [sp, #40]	@ 0x28
 801c068:	e6b2      	b.n	801bdd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e8>
 801c06a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c06c:	2b00      	cmp	r3, #0
 801c06e:	d1b4      	bne.n	801bfda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801c070:	4b04      	ldr	r3, [pc, #16]	@ (801c084 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 801c072:	6818      	ldr	r0, [r3, #0]
 801c074:	6803      	ldr	r3, [r0, #0]
 801c076:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801c078:	4798      	blx	r3
 801c07a:	e7ae      	b.n	801bfda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801c07c:	2b00      	cmp	r3, #0
 801c07e:	f47f af4a 	bne.w	801bf16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32e>
 801c082:	e626      	b.n	801bcd2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 801c084:	200152ec 	.word	0x200152ec

0801c088 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801c088:	b538      	push	{r3, r4, r5, lr}
 801c08a:	4c15      	ldr	r4, [pc, #84]	@ (801c0e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801c08c:	7823      	ldrb	r3, [r4, #0]
 801c08e:	f3bf 8f5b 	dmb	ish
 801c092:	07da      	lsls	r2, r3, #31
 801c094:	4605      	mov	r5, r0
 801c096:	d40b      	bmi.n	801c0b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801c098:	4620      	mov	r0, r4
 801c09a:	f008 fc48 	bl	802492e <__cxa_guard_acquire>
 801c09e:	b138      	cbz	r0, 801c0b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801c0a0:	4620      	mov	r0, r4
 801c0a2:	f008 fc50 	bl	8024946 <__cxa_guard_release>
 801c0a6:	4a0f      	ldr	r2, [pc, #60]	@ (801c0e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801c0a8:	490f      	ldr	r1, [pc, #60]	@ (801c0e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801c0aa:	4810      	ldr	r0, [pc, #64]	@ (801c0ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801c0ac:	f008 fc38 	bl	8024920 <__aeabi_atexit>
 801c0b0:	4c0f      	ldr	r4, [pc, #60]	@ (801c0f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801c0b2:	7823      	ldrb	r3, [r4, #0]
 801c0b4:	f3bf 8f5b 	dmb	ish
 801c0b8:	07db      	lsls	r3, r3, #31
 801c0ba:	d40b      	bmi.n	801c0d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801c0bc:	4620      	mov	r0, r4
 801c0be:	f008 fc36 	bl	802492e <__cxa_guard_acquire>
 801c0c2:	b138      	cbz	r0, 801c0d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801c0c4:	4620      	mov	r0, r4
 801c0c6:	f008 fc3e 	bl	8024946 <__cxa_guard_release>
 801c0ca:	4a06      	ldr	r2, [pc, #24]	@ (801c0e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801c0cc:	4909      	ldr	r1, [pc, #36]	@ (801c0f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801c0ce:	480a      	ldr	r0, [pc, #40]	@ (801c0f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801c0d0:	f008 fc26 	bl	8024920 <__aeabi_atexit>
 801c0d4:	4b05      	ldr	r3, [pc, #20]	@ (801c0ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801c0d6:	616b      	str	r3, [r5, #20]
 801c0d8:	4b07      	ldr	r3, [pc, #28]	@ (801c0f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801c0da:	61ab      	str	r3, [r5, #24]
 801c0dc:	bd38      	pop	{r3, r4, r5, pc}
 801c0de:	bf00      	nop
 801c0e0:	200153d0 	.word	0x200153d0
 801c0e4:	20000000 	.word	0x20000000
 801c0e8:	08018191 	.word	0x08018191
 801c0ec:	200000d0 	.word	0x200000d0
 801c0f0:	200153d4 	.word	0x200153d4
 801c0f4:	0801818f 	.word	0x0801818f
 801c0f8:	200000d4 	.word	0x200000d4

0801c0fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801c0fc:	b538      	push	{r3, r4, r5, lr}
 801c0fe:	4c15      	ldr	r4, [pc, #84]	@ (801c154 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801c100:	7823      	ldrb	r3, [r4, #0]
 801c102:	f3bf 8f5b 	dmb	ish
 801c106:	07da      	lsls	r2, r3, #31
 801c108:	4605      	mov	r5, r0
 801c10a:	d40b      	bmi.n	801c124 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801c10c:	4620      	mov	r0, r4
 801c10e:	f008 fc0e 	bl	802492e <__cxa_guard_acquire>
 801c112:	b138      	cbz	r0, 801c124 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801c114:	4620      	mov	r0, r4
 801c116:	f008 fc16 	bl	8024946 <__cxa_guard_release>
 801c11a:	4a0f      	ldr	r2, [pc, #60]	@ (801c158 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801c11c:	490f      	ldr	r1, [pc, #60]	@ (801c15c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801c11e:	4810      	ldr	r0, [pc, #64]	@ (801c160 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801c120:	f008 fbfe 	bl	8024920 <__aeabi_atexit>
 801c124:	4c0f      	ldr	r4, [pc, #60]	@ (801c164 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801c126:	7823      	ldrb	r3, [r4, #0]
 801c128:	f3bf 8f5b 	dmb	ish
 801c12c:	07db      	lsls	r3, r3, #31
 801c12e:	d40b      	bmi.n	801c148 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801c130:	4620      	mov	r0, r4
 801c132:	f008 fbfc 	bl	802492e <__cxa_guard_acquire>
 801c136:	b138      	cbz	r0, 801c148 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801c138:	4620      	mov	r0, r4
 801c13a:	f008 fc04 	bl	8024946 <__cxa_guard_release>
 801c13e:	4a06      	ldr	r2, [pc, #24]	@ (801c158 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801c140:	4909      	ldr	r1, [pc, #36]	@ (801c168 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801c142:	480a      	ldr	r0, [pc, #40]	@ (801c16c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801c144:	f008 fbec 	bl	8024920 <__aeabi_atexit>
 801c148:	4b05      	ldr	r3, [pc, #20]	@ (801c160 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801c14a:	60eb      	str	r3, [r5, #12]
 801c14c:	4b07      	ldr	r3, [pc, #28]	@ (801c16c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801c14e:	612b      	str	r3, [r5, #16]
 801c150:	bd38      	pop	{r3, r4, r5, pc}
 801c152:	bf00      	nop
 801c154:	200153a8 	.word	0x200153a8
 801c158:	20000000 	.word	0x20000000
 801c15c:	08018195 	.word	0x08018195
 801c160:	200000a8 	.word	0x200000a8
 801c164:	200153ac 	.word	0x200153ac
 801c168:	08018193 	.word	0x08018193
 801c16c:	200000ac 	.word	0x200000ac

0801c170 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801c170:	b510      	push	{r4, lr}
 801c172:	4604      	mov	r4, r0
 801c174:	f7ff ff88 	bl	801c088 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801c178:	4620      	mov	r0, r4
 801c17a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c17e:	f7ff bfbd 	b.w	801c0fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801c184 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801c184:	b538      	push	{r3, r4, r5, lr}
 801c186:	4c15      	ldr	r4, [pc, #84]	@ (801c1dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801c188:	7823      	ldrb	r3, [r4, #0]
 801c18a:	f3bf 8f5b 	dmb	ish
 801c18e:	07da      	lsls	r2, r3, #31
 801c190:	4605      	mov	r5, r0
 801c192:	d40b      	bmi.n	801c1ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801c194:	4620      	mov	r0, r4
 801c196:	f008 fbca 	bl	802492e <__cxa_guard_acquire>
 801c19a:	b138      	cbz	r0, 801c1ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801c19c:	4620      	mov	r0, r4
 801c19e:	f008 fbd2 	bl	8024946 <__cxa_guard_release>
 801c1a2:	4a0f      	ldr	r2, [pc, #60]	@ (801c1e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801c1a4:	490f      	ldr	r1, [pc, #60]	@ (801c1e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801c1a6:	4810      	ldr	r0, [pc, #64]	@ (801c1e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801c1a8:	f008 fbba 	bl	8024920 <__aeabi_atexit>
 801c1ac:	4c0f      	ldr	r4, [pc, #60]	@ (801c1ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801c1ae:	7823      	ldrb	r3, [r4, #0]
 801c1b0:	f3bf 8f5b 	dmb	ish
 801c1b4:	07db      	lsls	r3, r3, #31
 801c1b6:	d40b      	bmi.n	801c1d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801c1b8:	4620      	mov	r0, r4
 801c1ba:	f008 fbb8 	bl	802492e <__cxa_guard_acquire>
 801c1be:	b138      	cbz	r0, 801c1d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801c1c0:	4620      	mov	r0, r4
 801c1c2:	f008 fbc0 	bl	8024946 <__cxa_guard_release>
 801c1c6:	4a06      	ldr	r2, [pc, #24]	@ (801c1e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801c1c8:	4909      	ldr	r1, [pc, #36]	@ (801c1f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801c1ca:	480a      	ldr	r0, [pc, #40]	@ (801c1f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801c1cc:	f008 fba8 	bl	8024920 <__aeabi_atexit>
 801c1d0:	4b05      	ldr	r3, [pc, #20]	@ (801c1e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801c1d2:	626b      	str	r3, [r5, #36]	@ 0x24
 801c1d4:	4b07      	ldr	r3, [pc, #28]	@ (801c1f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801c1d6:	62ab      	str	r3, [r5, #40]	@ 0x28
 801c1d8:	bd38      	pop	{r3, r4, r5, pc}
 801c1da:	bf00      	nop
 801c1dc:	200153d8 	.word	0x200153d8
 801c1e0:	20000000 	.word	0x20000000
 801c1e4:	08018189 	.word	0x08018189
 801c1e8:	200000d8 	.word	0x200000d8
 801c1ec:	200153dc 	.word	0x200153dc
 801c1f0:	08018187 	.word	0x08018187
 801c1f4:	200000dc 	.word	0x200000dc

0801c1f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801c1f8:	b538      	push	{r3, r4, r5, lr}
 801c1fa:	4c15      	ldr	r4, [pc, #84]	@ (801c250 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801c1fc:	7823      	ldrb	r3, [r4, #0]
 801c1fe:	f3bf 8f5b 	dmb	ish
 801c202:	07da      	lsls	r2, r3, #31
 801c204:	4605      	mov	r5, r0
 801c206:	d40b      	bmi.n	801c220 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801c208:	4620      	mov	r0, r4
 801c20a:	f008 fb90 	bl	802492e <__cxa_guard_acquire>
 801c20e:	b138      	cbz	r0, 801c220 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801c210:	4620      	mov	r0, r4
 801c212:	f008 fb98 	bl	8024946 <__cxa_guard_release>
 801c216:	4a0f      	ldr	r2, [pc, #60]	@ (801c254 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801c218:	490f      	ldr	r1, [pc, #60]	@ (801c258 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801c21a:	4810      	ldr	r0, [pc, #64]	@ (801c25c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801c21c:	f008 fb80 	bl	8024920 <__aeabi_atexit>
 801c220:	4c0f      	ldr	r4, [pc, #60]	@ (801c260 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801c222:	7823      	ldrb	r3, [r4, #0]
 801c224:	f3bf 8f5b 	dmb	ish
 801c228:	07db      	lsls	r3, r3, #31
 801c22a:	d40b      	bmi.n	801c244 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801c22c:	4620      	mov	r0, r4
 801c22e:	f008 fb7e 	bl	802492e <__cxa_guard_acquire>
 801c232:	b138      	cbz	r0, 801c244 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801c234:	4620      	mov	r0, r4
 801c236:	f008 fb86 	bl	8024946 <__cxa_guard_release>
 801c23a:	4a06      	ldr	r2, [pc, #24]	@ (801c254 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801c23c:	4909      	ldr	r1, [pc, #36]	@ (801c264 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801c23e:	480a      	ldr	r0, [pc, #40]	@ (801c268 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801c240:	f008 fb6e 	bl	8024920 <__aeabi_atexit>
 801c244:	4b05      	ldr	r3, [pc, #20]	@ (801c25c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801c246:	61eb      	str	r3, [r5, #28]
 801c248:	4b07      	ldr	r3, [pc, #28]	@ (801c268 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801c24a:	622b      	str	r3, [r5, #32]
 801c24c:	bd38      	pop	{r3, r4, r5, pc}
 801c24e:	bf00      	nop
 801c250:	200153b0 	.word	0x200153b0
 801c254:	20000000 	.word	0x20000000
 801c258:	0801818d 	.word	0x0801818d
 801c25c:	200000b0 	.word	0x200000b0
 801c260:	200153b4 	.word	0x200153b4
 801c264:	0801818b 	.word	0x0801818b
 801c268:	200000b4 	.word	0x200000b4

0801c26c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801c26c:	b510      	push	{r4, lr}
 801c26e:	4604      	mov	r4, r0
 801c270:	f7ff ff88 	bl	801c184 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801c274:	4620      	mov	r0, r4
 801c276:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c27a:	f7ff bfbd 	b.w	801c1f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801c280 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801c280:	b538      	push	{r3, r4, r5, lr}
 801c282:	4c15      	ldr	r4, [pc, #84]	@ (801c2d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801c284:	7823      	ldrb	r3, [r4, #0]
 801c286:	f3bf 8f5b 	dmb	ish
 801c28a:	07da      	lsls	r2, r3, #31
 801c28c:	4605      	mov	r5, r0
 801c28e:	d40b      	bmi.n	801c2a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801c290:	4620      	mov	r0, r4
 801c292:	f008 fb4c 	bl	802492e <__cxa_guard_acquire>
 801c296:	b138      	cbz	r0, 801c2a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801c298:	4620      	mov	r0, r4
 801c29a:	f008 fb54 	bl	8024946 <__cxa_guard_release>
 801c29e:	4a0f      	ldr	r2, [pc, #60]	@ (801c2dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801c2a0:	490f      	ldr	r1, [pc, #60]	@ (801c2e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801c2a2:	4810      	ldr	r0, [pc, #64]	@ (801c2e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801c2a4:	f008 fb3c 	bl	8024920 <__aeabi_atexit>
 801c2a8:	4c0f      	ldr	r4, [pc, #60]	@ (801c2e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801c2aa:	7823      	ldrb	r3, [r4, #0]
 801c2ac:	f3bf 8f5b 	dmb	ish
 801c2b0:	07db      	lsls	r3, r3, #31
 801c2b2:	d40b      	bmi.n	801c2cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801c2b4:	4620      	mov	r0, r4
 801c2b6:	f008 fb3a 	bl	802492e <__cxa_guard_acquire>
 801c2ba:	b138      	cbz	r0, 801c2cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801c2bc:	4620      	mov	r0, r4
 801c2be:	f008 fb42 	bl	8024946 <__cxa_guard_release>
 801c2c2:	4a06      	ldr	r2, [pc, #24]	@ (801c2dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801c2c4:	4909      	ldr	r1, [pc, #36]	@ (801c2ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801c2c6:	480a      	ldr	r0, [pc, #40]	@ (801c2f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801c2c8:	f008 fb2a 	bl	8024920 <__aeabi_atexit>
 801c2cc:	4b05      	ldr	r3, [pc, #20]	@ (801c2e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801c2ce:	636b      	str	r3, [r5, #52]	@ 0x34
 801c2d0:	4b07      	ldr	r3, [pc, #28]	@ (801c2f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801c2d2:	63ab      	str	r3, [r5, #56]	@ 0x38
 801c2d4:	bd38      	pop	{r3, r4, r5, pc}
 801c2d6:	bf00      	nop
 801c2d8:	200153e8 	.word	0x200153e8
 801c2dc:	20000000 	.word	0x20000000
 801c2e0:	08018181 	.word	0x08018181
 801c2e4:	200000e8 	.word	0x200000e8
 801c2e8:	200153ec 	.word	0x200153ec
 801c2ec:	0801817f 	.word	0x0801817f
 801c2f0:	200000ec 	.word	0x200000ec

0801c2f4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801c2f4:	b538      	push	{r3, r4, r5, lr}
 801c2f6:	4c15      	ldr	r4, [pc, #84]	@ (801c34c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801c2f8:	7823      	ldrb	r3, [r4, #0]
 801c2fa:	f3bf 8f5b 	dmb	ish
 801c2fe:	07da      	lsls	r2, r3, #31
 801c300:	4605      	mov	r5, r0
 801c302:	d40b      	bmi.n	801c31c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801c304:	4620      	mov	r0, r4
 801c306:	f008 fb12 	bl	802492e <__cxa_guard_acquire>
 801c30a:	b138      	cbz	r0, 801c31c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801c30c:	4620      	mov	r0, r4
 801c30e:	f008 fb1a 	bl	8024946 <__cxa_guard_release>
 801c312:	4a0f      	ldr	r2, [pc, #60]	@ (801c350 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801c314:	490f      	ldr	r1, [pc, #60]	@ (801c354 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801c316:	4810      	ldr	r0, [pc, #64]	@ (801c358 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801c318:	f008 fb02 	bl	8024920 <__aeabi_atexit>
 801c31c:	4c0f      	ldr	r4, [pc, #60]	@ (801c35c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801c31e:	7823      	ldrb	r3, [r4, #0]
 801c320:	f3bf 8f5b 	dmb	ish
 801c324:	07db      	lsls	r3, r3, #31
 801c326:	d40b      	bmi.n	801c340 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801c328:	4620      	mov	r0, r4
 801c32a:	f008 fb00 	bl	802492e <__cxa_guard_acquire>
 801c32e:	b138      	cbz	r0, 801c340 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801c330:	4620      	mov	r0, r4
 801c332:	f008 fb08 	bl	8024946 <__cxa_guard_release>
 801c336:	4a06      	ldr	r2, [pc, #24]	@ (801c350 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801c338:	4909      	ldr	r1, [pc, #36]	@ (801c360 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801c33a:	480a      	ldr	r0, [pc, #40]	@ (801c364 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801c33c:	f008 faf0 	bl	8024920 <__aeabi_atexit>
 801c340:	4b05      	ldr	r3, [pc, #20]	@ (801c358 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801c342:	62eb      	str	r3, [r5, #44]	@ 0x2c
 801c344:	4b07      	ldr	r3, [pc, #28]	@ (801c364 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801c346:	632b      	str	r3, [r5, #48]	@ 0x30
 801c348:	bd38      	pop	{r3, r4, r5, pc}
 801c34a:	bf00      	nop
 801c34c:	200153b8 	.word	0x200153b8
 801c350:	20000000 	.word	0x20000000
 801c354:	08018185 	.word	0x08018185
 801c358:	200000b8 	.word	0x200000b8
 801c35c:	200153bc 	.word	0x200153bc
 801c360:	08018183 	.word	0x08018183
 801c364:	200000bc 	.word	0x200000bc

0801c368 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801c368:	b510      	push	{r4, lr}
 801c36a:	4604      	mov	r4, r0
 801c36c:	f7ff ff88 	bl	801c280 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801c370:	4620      	mov	r0, r4
 801c372:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c376:	f7ff bfbd 	b.w	801c2f4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801c37c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801c37c:	b538      	push	{r3, r4, r5, lr}
 801c37e:	4c15      	ldr	r4, [pc, #84]	@ (801c3d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801c380:	7823      	ldrb	r3, [r4, #0]
 801c382:	f3bf 8f5b 	dmb	ish
 801c386:	07da      	lsls	r2, r3, #31
 801c388:	4605      	mov	r5, r0
 801c38a:	d40b      	bmi.n	801c3a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801c38c:	4620      	mov	r0, r4
 801c38e:	f008 face 	bl	802492e <__cxa_guard_acquire>
 801c392:	b138      	cbz	r0, 801c3a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801c394:	4620      	mov	r0, r4
 801c396:	f008 fad6 	bl	8024946 <__cxa_guard_release>
 801c39a:	4a0f      	ldr	r2, [pc, #60]	@ (801c3d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801c39c:	490f      	ldr	r1, [pc, #60]	@ (801c3dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801c39e:	4810      	ldr	r0, [pc, #64]	@ (801c3e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801c3a0:	f008 fabe 	bl	8024920 <__aeabi_atexit>
 801c3a4:	4c0f      	ldr	r4, [pc, #60]	@ (801c3e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801c3a6:	7823      	ldrb	r3, [r4, #0]
 801c3a8:	f3bf 8f5b 	dmb	ish
 801c3ac:	07db      	lsls	r3, r3, #31
 801c3ae:	d40b      	bmi.n	801c3c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801c3b0:	4620      	mov	r0, r4
 801c3b2:	f008 fabc 	bl	802492e <__cxa_guard_acquire>
 801c3b6:	b138      	cbz	r0, 801c3c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801c3b8:	4620      	mov	r0, r4
 801c3ba:	f008 fac4 	bl	8024946 <__cxa_guard_release>
 801c3be:	4a06      	ldr	r2, [pc, #24]	@ (801c3d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801c3c0:	4909      	ldr	r1, [pc, #36]	@ (801c3e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801c3c2:	480a      	ldr	r0, [pc, #40]	@ (801c3ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801c3c4:	f008 faac 	bl	8024920 <__aeabi_atexit>
 801c3c8:	4b05      	ldr	r3, [pc, #20]	@ (801c3e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801c3ca:	656b      	str	r3, [r5, #84]	@ 0x54
 801c3cc:	4b07      	ldr	r3, [pc, #28]	@ (801c3ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801c3ce:	65ab      	str	r3, [r5, #88]	@ 0x58
 801c3d0:	bd38      	pop	{r3, r4, r5, pc}
 801c3d2:	bf00      	nop
 801c3d4:	200153f0 	.word	0x200153f0
 801c3d8:	20000000 	.word	0x20000000
 801c3dc:	08018171 	.word	0x08018171
 801c3e0:	200000f0 	.word	0x200000f0
 801c3e4:	200153f4 	.word	0x200153f4
 801c3e8:	0801816f 	.word	0x0801816f
 801c3ec:	200000f4 	.word	0x200000f4

0801c3f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801c3f0:	b538      	push	{r3, r4, r5, lr}
 801c3f2:	4c15      	ldr	r4, [pc, #84]	@ (801c448 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801c3f4:	7823      	ldrb	r3, [r4, #0]
 801c3f6:	f3bf 8f5b 	dmb	ish
 801c3fa:	07da      	lsls	r2, r3, #31
 801c3fc:	4605      	mov	r5, r0
 801c3fe:	d40b      	bmi.n	801c418 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801c400:	4620      	mov	r0, r4
 801c402:	f008 fa94 	bl	802492e <__cxa_guard_acquire>
 801c406:	b138      	cbz	r0, 801c418 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801c408:	4620      	mov	r0, r4
 801c40a:	f008 fa9c 	bl	8024946 <__cxa_guard_release>
 801c40e:	4a0f      	ldr	r2, [pc, #60]	@ (801c44c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801c410:	490f      	ldr	r1, [pc, #60]	@ (801c450 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801c412:	4810      	ldr	r0, [pc, #64]	@ (801c454 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801c414:	f008 fa84 	bl	8024920 <__aeabi_atexit>
 801c418:	4c0f      	ldr	r4, [pc, #60]	@ (801c458 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801c41a:	7823      	ldrb	r3, [r4, #0]
 801c41c:	f3bf 8f5b 	dmb	ish
 801c420:	07db      	lsls	r3, r3, #31
 801c422:	d40b      	bmi.n	801c43c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801c424:	4620      	mov	r0, r4
 801c426:	f008 fa82 	bl	802492e <__cxa_guard_acquire>
 801c42a:	b138      	cbz	r0, 801c43c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801c42c:	4620      	mov	r0, r4
 801c42e:	f008 fa8a 	bl	8024946 <__cxa_guard_release>
 801c432:	4a06      	ldr	r2, [pc, #24]	@ (801c44c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801c434:	4909      	ldr	r1, [pc, #36]	@ (801c45c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801c436:	480a      	ldr	r0, [pc, #40]	@ (801c460 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801c438:	f008 fa72 	bl	8024920 <__aeabi_atexit>
 801c43c:	4b05      	ldr	r3, [pc, #20]	@ (801c454 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801c43e:	64eb      	str	r3, [r5, #76]	@ 0x4c
 801c440:	4b07      	ldr	r3, [pc, #28]	@ (801c460 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801c442:	652b      	str	r3, [r5, #80]	@ 0x50
 801c444:	bd38      	pop	{r3, r4, r5, pc}
 801c446:	bf00      	nop
 801c448:	200153f8 	.word	0x200153f8
 801c44c:	20000000 	.word	0x20000000
 801c450:	08018175 	.word	0x08018175
 801c454:	200000f8 	.word	0x200000f8
 801c458:	200153fc 	.word	0x200153fc
 801c45c:	08018173 	.word	0x08018173
 801c460:	200000fc 	.word	0x200000fc

0801c464 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801c464:	b538      	push	{r3, r4, r5, lr}
 801c466:	4c15      	ldr	r4, [pc, #84]	@ (801c4bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801c468:	7823      	ldrb	r3, [r4, #0]
 801c46a:	f3bf 8f5b 	dmb	ish
 801c46e:	07da      	lsls	r2, r3, #31
 801c470:	4605      	mov	r5, r0
 801c472:	d40b      	bmi.n	801c48c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801c474:	4620      	mov	r0, r4
 801c476:	f008 fa5a 	bl	802492e <__cxa_guard_acquire>
 801c47a:	b138      	cbz	r0, 801c48c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801c47c:	4620      	mov	r0, r4
 801c47e:	f008 fa62 	bl	8024946 <__cxa_guard_release>
 801c482:	4a0f      	ldr	r2, [pc, #60]	@ (801c4c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801c484:	490f      	ldr	r1, [pc, #60]	@ (801c4c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801c486:	4810      	ldr	r0, [pc, #64]	@ (801c4c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801c488:	f008 fa4a 	bl	8024920 <__aeabi_atexit>
 801c48c:	4c0f      	ldr	r4, [pc, #60]	@ (801c4cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801c48e:	7823      	ldrb	r3, [r4, #0]
 801c490:	f3bf 8f5b 	dmb	ish
 801c494:	07db      	lsls	r3, r3, #31
 801c496:	d40b      	bmi.n	801c4b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801c498:	4620      	mov	r0, r4
 801c49a:	f008 fa48 	bl	802492e <__cxa_guard_acquire>
 801c49e:	b138      	cbz	r0, 801c4b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801c4a0:	4620      	mov	r0, r4
 801c4a2:	f008 fa50 	bl	8024946 <__cxa_guard_release>
 801c4a6:	4a06      	ldr	r2, [pc, #24]	@ (801c4c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801c4a8:	4909      	ldr	r1, [pc, #36]	@ (801c4d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801c4aa:	480a      	ldr	r0, [pc, #40]	@ (801c4d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801c4ac:	f008 fa38 	bl	8024920 <__aeabi_atexit>
 801c4b0:	4b05      	ldr	r3, [pc, #20]	@ (801c4c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801c4b2:	646b      	str	r3, [r5, #68]	@ 0x44
 801c4b4:	4b07      	ldr	r3, [pc, #28]	@ (801c4d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801c4b6:	64ab      	str	r3, [r5, #72]	@ 0x48
 801c4b8:	bd38      	pop	{r3, r4, r5, pc}
 801c4ba:	bf00      	nop
 801c4bc:	200153c0 	.word	0x200153c0
 801c4c0:	20000000 	.word	0x20000000
 801c4c4:	08018179 	.word	0x08018179
 801c4c8:	200000c0 	.word	0x200000c0
 801c4cc:	200153c4 	.word	0x200153c4
 801c4d0:	08018177 	.word	0x08018177
 801c4d4:	200000c4 	.word	0x200000c4

0801c4d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801c4d8:	b538      	push	{r3, r4, r5, lr}
 801c4da:	4c15      	ldr	r4, [pc, #84]	@ (801c530 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801c4dc:	7823      	ldrb	r3, [r4, #0]
 801c4de:	f3bf 8f5b 	dmb	ish
 801c4e2:	07da      	lsls	r2, r3, #31
 801c4e4:	4605      	mov	r5, r0
 801c4e6:	d40b      	bmi.n	801c500 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801c4e8:	4620      	mov	r0, r4
 801c4ea:	f008 fa20 	bl	802492e <__cxa_guard_acquire>
 801c4ee:	b138      	cbz	r0, 801c500 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801c4f0:	4620      	mov	r0, r4
 801c4f2:	f008 fa28 	bl	8024946 <__cxa_guard_release>
 801c4f6:	4a0f      	ldr	r2, [pc, #60]	@ (801c534 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801c4f8:	490f      	ldr	r1, [pc, #60]	@ (801c538 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801c4fa:	4810      	ldr	r0, [pc, #64]	@ (801c53c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801c4fc:	f008 fa10 	bl	8024920 <__aeabi_atexit>
 801c500:	4c0f      	ldr	r4, [pc, #60]	@ (801c540 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801c502:	7823      	ldrb	r3, [r4, #0]
 801c504:	f3bf 8f5b 	dmb	ish
 801c508:	07db      	lsls	r3, r3, #31
 801c50a:	d40b      	bmi.n	801c524 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801c50c:	4620      	mov	r0, r4
 801c50e:	f008 fa0e 	bl	802492e <__cxa_guard_acquire>
 801c512:	b138      	cbz	r0, 801c524 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801c514:	4620      	mov	r0, r4
 801c516:	f008 fa16 	bl	8024946 <__cxa_guard_release>
 801c51a:	4a06      	ldr	r2, [pc, #24]	@ (801c534 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801c51c:	4909      	ldr	r1, [pc, #36]	@ (801c544 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801c51e:	480a      	ldr	r0, [pc, #40]	@ (801c548 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801c520:	f008 f9fe 	bl	8024920 <__aeabi_atexit>
 801c524:	4b05      	ldr	r3, [pc, #20]	@ (801c53c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801c526:	63eb      	str	r3, [r5, #60]	@ 0x3c
 801c528:	4b07      	ldr	r3, [pc, #28]	@ (801c548 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801c52a:	642b      	str	r3, [r5, #64]	@ 0x40
 801c52c:	bd38      	pop	{r3, r4, r5, pc}
 801c52e:	bf00      	nop
 801c530:	200153e0 	.word	0x200153e0
 801c534:	20000000 	.word	0x20000000
 801c538:	0801817d 	.word	0x0801817d
 801c53c:	200000e0 	.word	0x200000e0
 801c540:	200153e4 	.word	0x200153e4
 801c544:	0801817b 	.word	0x0801817b
 801c548:	200000e4 	.word	0x200000e4

0801c54c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801c54c:	b510      	push	{r4, lr}
 801c54e:	4604      	mov	r4, r0
 801c550:	f7ff ff14 	bl	801c37c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801c554:	4620      	mov	r0, r4
 801c556:	f7ff ff85 	bl	801c464 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801c55a:	4620      	mov	r0, r4
 801c55c:	f7ff ff48 	bl	801c3f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801c560:	4620      	mov	r0, r4
 801c562:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c566:	f7ff bfb7 	b.w	801c4d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801c56c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801c56c:	b538      	push	{r3, r4, r5, lr}
 801c56e:	4c15      	ldr	r4, [pc, #84]	@ (801c5c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801c570:	7823      	ldrb	r3, [r4, #0]
 801c572:	f3bf 8f5b 	dmb	ish
 801c576:	07da      	lsls	r2, r3, #31
 801c578:	4605      	mov	r5, r0
 801c57a:	d40b      	bmi.n	801c594 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801c57c:	4620      	mov	r0, r4
 801c57e:	f008 f9d6 	bl	802492e <__cxa_guard_acquire>
 801c582:	b138      	cbz	r0, 801c594 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801c584:	4620      	mov	r0, r4
 801c586:	f008 f9de 	bl	8024946 <__cxa_guard_release>
 801c58a:	4a0f      	ldr	r2, [pc, #60]	@ (801c5c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801c58c:	490f      	ldr	r1, [pc, #60]	@ (801c5cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801c58e:	4810      	ldr	r0, [pc, #64]	@ (801c5d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801c590:	f008 f9c6 	bl	8024920 <__aeabi_atexit>
 801c594:	4c0f      	ldr	r4, [pc, #60]	@ (801c5d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801c596:	7823      	ldrb	r3, [r4, #0]
 801c598:	f3bf 8f5b 	dmb	ish
 801c59c:	07db      	lsls	r3, r3, #31
 801c59e:	d40b      	bmi.n	801c5b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801c5a0:	4620      	mov	r0, r4
 801c5a2:	f008 f9c4 	bl	802492e <__cxa_guard_acquire>
 801c5a6:	b138      	cbz	r0, 801c5b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801c5a8:	4620      	mov	r0, r4
 801c5aa:	f008 f9cc 	bl	8024946 <__cxa_guard_release>
 801c5ae:	4a06      	ldr	r2, [pc, #24]	@ (801c5c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801c5b0:	4909      	ldr	r1, [pc, #36]	@ (801c5d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801c5b2:	480a      	ldr	r0, [pc, #40]	@ (801c5dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801c5b4:	f008 f9b4 	bl	8024920 <__aeabi_atexit>
 801c5b8:	4b05      	ldr	r3, [pc, #20]	@ (801c5d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801c5ba:	666b      	str	r3, [r5, #100]	@ 0x64
 801c5bc:	4b07      	ldr	r3, [pc, #28]	@ (801c5dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801c5be:	66ab      	str	r3, [r5, #104]	@ 0x68
 801c5c0:	bd38      	pop	{r3, r4, r5, pc}
 801c5c2:	bf00      	nop
 801c5c4:	200153c8 	.word	0x200153c8
 801c5c8:	20000000 	.word	0x20000000
 801c5cc:	08018169 	.word	0x08018169
 801c5d0:	200000c8 	.word	0x200000c8
 801c5d4:	200153cc 	.word	0x200153cc
 801c5d8:	08018167 	.word	0x08018167
 801c5dc:	200000cc 	.word	0x200000cc

0801c5e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801c5e0:	b538      	push	{r3, r4, r5, lr}
 801c5e2:	4c15      	ldr	r4, [pc, #84]	@ (801c638 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801c5e4:	7823      	ldrb	r3, [r4, #0]
 801c5e6:	f3bf 8f5b 	dmb	ish
 801c5ea:	07da      	lsls	r2, r3, #31
 801c5ec:	4605      	mov	r5, r0
 801c5ee:	d40b      	bmi.n	801c608 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801c5f0:	4620      	mov	r0, r4
 801c5f2:	f008 f99c 	bl	802492e <__cxa_guard_acquire>
 801c5f6:	b138      	cbz	r0, 801c608 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801c5f8:	4620      	mov	r0, r4
 801c5fa:	f008 f9a4 	bl	8024946 <__cxa_guard_release>
 801c5fe:	4a0f      	ldr	r2, [pc, #60]	@ (801c63c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801c600:	490f      	ldr	r1, [pc, #60]	@ (801c640 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801c602:	4810      	ldr	r0, [pc, #64]	@ (801c644 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801c604:	f008 f98c 	bl	8024920 <__aeabi_atexit>
 801c608:	4c0f      	ldr	r4, [pc, #60]	@ (801c648 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801c60a:	7823      	ldrb	r3, [r4, #0]
 801c60c:	f3bf 8f5b 	dmb	ish
 801c610:	07db      	lsls	r3, r3, #31
 801c612:	d40b      	bmi.n	801c62c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801c614:	4620      	mov	r0, r4
 801c616:	f008 f98a 	bl	802492e <__cxa_guard_acquire>
 801c61a:	b138      	cbz	r0, 801c62c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801c61c:	4620      	mov	r0, r4
 801c61e:	f008 f992 	bl	8024946 <__cxa_guard_release>
 801c622:	4a06      	ldr	r2, [pc, #24]	@ (801c63c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801c624:	4909      	ldr	r1, [pc, #36]	@ (801c64c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801c626:	480a      	ldr	r0, [pc, #40]	@ (801c650 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801c628:	f008 f97a 	bl	8024920 <__aeabi_atexit>
 801c62c:	4b05      	ldr	r3, [pc, #20]	@ (801c644 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801c62e:	65eb      	str	r3, [r5, #92]	@ 0x5c
 801c630:	4b07      	ldr	r3, [pc, #28]	@ (801c650 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801c632:	662b      	str	r3, [r5, #96]	@ 0x60
 801c634:	bd38      	pop	{r3, r4, r5, pc}
 801c636:	bf00      	nop
 801c638:	200153a0 	.word	0x200153a0
 801c63c:	20000000 	.word	0x20000000
 801c640:	0801816d 	.word	0x0801816d
 801c644:	200000a0 	.word	0x200000a0
 801c648:	200153a4 	.word	0x200153a4
 801c64c:	0801816b 	.word	0x0801816b
 801c650:	200000a4 	.word	0x200000a4

0801c654 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801c654:	b510      	push	{r4, lr}
 801c656:	4604      	mov	r4, r0
 801c658:	f7ff ff88 	bl	801c56c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801c65c:	4620      	mov	r0, r4
 801c65e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c662:	f7ff bfbd 	b.w	801c5e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801c668 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801c668:	b538      	push	{r3, r4, r5, lr}
 801c66a:	4c15      	ldr	r4, [pc, #84]	@ (801c6c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801c66c:	7823      	ldrb	r3, [r4, #0]
 801c66e:	f3bf 8f5b 	dmb	ish
 801c672:	07da      	lsls	r2, r3, #31
 801c674:	4605      	mov	r5, r0
 801c676:	d40b      	bmi.n	801c690 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801c678:	4620      	mov	r0, r4
 801c67a:	f008 f958 	bl	802492e <__cxa_guard_acquire>
 801c67e:	b138      	cbz	r0, 801c690 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801c680:	4620      	mov	r0, r4
 801c682:	f008 f960 	bl	8024946 <__cxa_guard_release>
 801c686:	4a0f      	ldr	r2, [pc, #60]	@ (801c6c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801c688:	490f      	ldr	r1, [pc, #60]	@ (801c6c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801c68a:	4810      	ldr	r0, [pc, #64]	@ (801c6cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801c68c:	f008 f948 	bl	8024920 <__aeabi_atexit>
 801c690:	4c0f      	ldr	r4, [pc, #60]	@ (801c6d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801c692:	7823      	ldrb	r3, [r4, #0]
 801c694:	f3bf 8f5b 	dmb	ish
 801c698:	07db      	lsls	r3, r3, #31
 801c69a:	d40b      	bmi.n	801c6b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801c69c:	4620      	mov	r0, r4
 801c69e:	f008 f946 	bl	802492e <__cxa_guard_acquire>
 801c6a2:	b138      	cbz	r0, 801c6b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801c6a4:	4620      	mov	r0, r4
 801c6a6:	f008 f94e 	bl	8024946 <__cxa_guard_release>
 801c6aa:	4a06      	ldr	r2, [pc, #24]	@ (801c6c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801c6ac:	4909      	ldr	r1, [pc, #36]	@ (801c6d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801c6ae:	480a      	ldr	r0, [pc, #40]	@ (801c6d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801c6b0:	f008 f936 	bl	8024920 <__aeabi_atexit>
 801c6b4:	4b05      	ldr	r3, [pc, #20]	@ (801c6cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801c6b6:	676b      	str	r3, [r5, #116]	@ 0x74
 801c6b8:	4b07      	ldr	r3, [pc, #28]	@ (801c6d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801c6ba:	67ab      	str	r3, [r5, #120]	@ 0x78
 801c6bc:	bd38      	pop	{r3, r4, r5, pc}
 801c6be:	bf00      	nop
 801c6c0:	20015398 	.word	0x20015398
 801c6c4:	20000000 	.word	0x20000000
 801c6c8:	08018161 	.word	0x08018161
 801c6cc:	20000098 	.word	0x20000098
 801c6d0:	2001539c 	.word	0x2001539c
 801c6d4:	0801815f 	.word	0x0801815f
 801c6d8:	2000009c 	.word	0x2000009c

0801c6dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801c6dc:	b538      	push	{r3, r4, r5, lr}
 801c6de:	4c15      	ldr	r4, [pc, #84]	@ (801c734 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801c6e0:	7823      	ldrb	r3, [r4, #0]
 801c6e2:	f3bf 8f5b 	dmb	ish
 801c6e6:	07da      	lsls	r2, r3, #31
 801c6e8:	4605      	mov	r5, r0
 801c6ea:	d40b      	bmi.n	801c704 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801c6ec:	4620      	mov	r0, r4
 801c6ee:	f008 f91e 	bl	802492e <__cxa_guard_acquire>
 801c6f2:	b138      	cbz	r0, 801c704 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801c6f4:	4620      	mov	r0, r4
 801c6f6:	f008 f926 	bl	8024946 <__cxa_guard_release>
 801c6fa:	4a0f      	ldr	r2, [pc, #60]	@ (801c738 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801c6fc:	490f      	ldr	r1, [pc, #60]	@ (801c73c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801c6fe:	4810      	ldr	r0, [pc, #64]	@ (801c740 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801c700:	f008 f90e 	bl	8024920 <__aeabi_atexit>
 801c704:	4c0f      	ldr	r4, [pc, #60]	@ (801c744 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801c706:	7823      	ldrb	r3, [r4, #0]
 801c708:	f3bf 8f5b 	dmb	ish
 801c70c:	07db      	lsls	r3, r3, #31
 801c70e:	d40b      	bmi.n	801c728 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801c710:	4620      	mov	r0, r4
 801c712:	f008 f90c 	bl	802492e <__cxa_guard_acquire>
 801c716:	b138      	cbz	r0, 801c728 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801c718:	4620      	mov	r0, r4
 801c71a:	f008 f914 	bl	8024946 <__cxa_guard_release>
 801c71e:	4a06      	ldr	r2, [pc, #24]	@ (801c738 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801c720:	4909      	ldr	r1, [pc, #36]	@ (801c748 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801c722:	480a      	ldr	r0, [pc, #40]	@ (801c74c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801c724:	f008 f8fc 	bl	8024920 <__aeabi_atexit>
 801c728:	4b05      	ldr	r3, [pc, #20]	@ (801c740 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801c72a:	66eb      	str	r3, [r5, #108]	@ 0x6c
 801c72c:	4b07      	ldr	r3, [pc, #28]	@ (801c74c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801c72e:	672b      	str	r3, [r5, #112]	@ 0x70
 801c730:	bd38      	pop	{r3, r4, r5, pc}
 801c732:	bf00      	nop
 801c734:	20015390 	.word	0x20015390
 801c738:	20000000 	.word	0x20000000
 801c73c:	08018165 	.word	0x08018165
 801c740:	20000090 	.word	0x20000090
 801c744:	20015394 	.word	0x20015394
 801c748:	08018163 	.word	0x08018163
 801c74c:	20000094 	.word	0x20000094

0801c750 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801c750:	b510      	push	{r4, lr}
 801c752:	4604      	mov	r4, r0
 801c754:	f7ff ff88 	bl	801c668 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801c758:	4620      	mov	r0, r4
 801c75a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c75e:	f7ff bfbd 	b.w	801c6dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801c762 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801c762:	b510      	push	{r4, lr}
 801c764:	4604      	mov	r4, r0
 801c766:	f7ff fff3 	bl	801c750 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801c76a:	4620      	mov	r0, r4
 801c76c:	f7ff ff72 	bl	801c654 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801c770:	4620      	mov	r0, r4
 801c772:	f7ff fdf9 	bl	801c368 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801c776:	4620      	mov	r0, r4
 801c778:	f7ff fcfa 	bl	801c170 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801c77c:	4620      	mov	r0, r4
 801c77e:	f7ff fd75 	bl	801c26c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801c782:	4620      	mov	r0, r4
 801c784:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c788:	f7ff bee0 	b.w	801c54c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801c78c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801c78c:	b538      	push	{r3, r4, r5, lr}
 801c78e:	4c0b      	ldr	r4, [pc, #44]	@ (801c7bc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801c790:	7823      	ldrb	r3, [r4, #0]
 801c792:	f3bf 8f5b 	dmb	ish
 801c796:	07db      	lsls	r3, r3, #31
 801c798:	4605      	mov	r5, r0
 801c79a:	d40b      	bmi.n	801c7b4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801c79c:	4620      	mov	r0, r4
 801c79e:	f008 f8c6 	bl	802492e <__cxa_guard_acquire>
 801c7a2:	b138      	cbz	r0, 801c7b4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801c7a4:	4620      	mov	r0, r4
 801c7a6:	f008 f8ce 	bl	8024946 <__cxa_guard_release>
 801c7aa:	4a05      	ldr	r2, [pc, #20]	@ (801c7c0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801c7ac:	4905      	ldr	r1, [pc, #20]	@ (801c7c4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801c7ae:	4806      	ldr	r0, [pc, #24]	@ (801c7c8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801c7b0:	f008 f8b6 	bl	8024920 <__aeabi_atexit>
 801c7b4:	4b04      	ldr	r3, [pc, #16]	@ (801c7c8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801c7b6:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801c7b8:	bd38      	pop	{r3, r4, r5, pc}
 801c7ba:	bf00      	nop
 801c7bc:	20015384 	.word	0x20015384
 801c7c0:	20000000 	.word	0x20000000
 801c7c4:	0801815d 	.word	0x0801815d
 801c7c8:	20000088 	.word	0x20000088

0801c7cc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801c7cc:	b538      	push	{r3, r4, r5, lr}
 801c7ce:	4c0b      	ldr	r4, [pc, #44]	@ (801c7fc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801c7d0:	7823      	ldrb	r3, [r4, #0]
 801c7d2:	f3bf 8f5b 	dmb	ish
 801c7d6:	07db      	lsls	r3, r3, #31
 801c7d8:	4605      	mov	r5, r0
 801c7da:	d40b      	bmi.n	801c7f4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801c7dc:	4620      	mov	r0, r4
 801c7de:	f008 f8a6 	bl	802492e <__cxa_guard_acquire>
 801c7e2:	b138      	cbz	r0, 801c7f4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801c7e4:	4620      	mov	r0, r4
 801c7e6:	f008 f8ae 	bl	8024946 <__cxa_guard_release>
 801c7ea:	4a05      	ldr	r2, [pc, #20]	@ (801c800 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801c7ec:	4905      	ldr	r1, [pc, #20]	@ (801c804 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801c7ee:	4806      	ldr	r0, [pc, #24]	@ (801c808 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801c7f0:	f008 f896 	bl	8024920 <__aeabi_atexit>
 801c7f4:	4b04      	ldr	r3, [pc, #16]	@ (801c808 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801c7f6:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 801c7fa:	bd38      	pop	{r3, r4, r5, pc}
 801c7fc:	20015388 	.word	0x20015388
 801c800:	20000000 	.word	0x20000000
 801c804:	0801815b 	.word	0x0801815b
 801c808:	2000008c 	.word	0x2000008c

0801c80c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801c80c:	b570      	push	{r4, r5, r6, lr}
 801c80e:	4d0d      	ldr	r5, [pc, #52]	@ (801c844 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801c810:	4c0d      	ldr	r4, [pc, #52]	@ (801c848 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801c812:	782b      	ldrb	r3, [r5, #0]
 801c814:	f3bf 8f5b 	dmb	ish
 801c818:	f013 0f01 	tst.w	r3, #1
 801c81c:	4606      	mov	r6, r0
 801c81e:	d10d      	bne.n	801c83c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801c820:	4628      	mov	r0, r5
 801c822:	f008 f884 	bl	802492e <__cxa_guard_acquire>
 801c826:	b148      	cbz	r0, 801c83c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801c828:	4b08      	ldr	r3, [pc, #32]	@ (801c84c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801c82a:	6023      	str	r3, [r4, #0]
 801c82c:	4628      	mov	r0, r5
 801c82e:	f008 f88a 	bl	8024946 <__cxa_guard_release>
 801c832:	4a07      	ldr	r2, [pc, #28]	@ (801c850 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801c834:	4907      	ldr	r1, [pc, #28]	@ (801c854 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801c836:	4620      	mov	r0, r4
 801c838:	f008 f872 	bl	8024920 <__aeabi_atexit>
 801c83c:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 801c840:	bd70      	pop	{r4, r5, r6, pc}
 801c842:	bf00      	nop
 801c844:	2001538c 	.word	0x2001538c
 801c848:	20015504 	.word	0x20015504
 801c84c:	08028e04 	.word	0x08028e04
 801c850:	20000000 	.word	0x20000000
 801c854:	08018159 	.word	0x08018159

0801c858 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801c858:	b510      	push	{r4, lr}
 801c85a:	4604      	mov	r4, r0
 801c85c:	f7ff ff96 	bl	801c78c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801c860:	4620      	mov	r0, r4
 801c862:	f7ff ffb3 	bl	801c7cc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801c866:	4620      	mov	r0, r4
 801c868:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c86c:	f7ff bfce 	b.w	801c80c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801c870 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 801c870:	b570      	push	{r4, r5, r6, lr}
 801c872:	4d0d      	ldr	r5, [pc, #52]	@ (801c8a8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 801c874:	4c0d      	ldr	r4, [pc, #52]	@ (801c8ac <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 801c876:	782b      	ldrb	r3, [r5, #0]
 801c878:	f3bf 8f5b 	dmb	ish
 801c87c:	f013 0f01 	tst.w	r3, #1
 801c880:	4606      	mov	r6, r0
 801c882:	d10d      	bne.n	801c8a0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801c884:	4628      	mov	r0, r5
 801c886:	f008 f852 	bl	802492e <__cxa_guard_acquire>
 801c88a:	b148      	cbz	r0, 801c8a0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801c88c:	4b08      	ldr	r3, [pc, #32]	@ (801c8b0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 801c88e:	6023      	str	r3, [r4, #0]
 801c890:	4628      	mov	r0, r5
 801c892:	f008 f858 	bl	8024946 <__cxa_guard_release>
 801c896:	4a07      	ldr	r2, [pc, #28]	@ (801c8b4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 801c898:	4907      	ldr	r1, [pc, #28]	@ (801c8b8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 801c89a:	4620      	mov	r0, r4
 801c89c:	f008 f840 	bl	8024920 <__aeabi_atexit>
 801c8a0:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 801c8a4:	bd70      	pop	{r4, r5, r6, pc}
 801c8a6:	bf00      	nop
 801c8a8:	20015380 	.word	0x20015380
 801c8ac:	20015400 	.word	0x20015400
 801c8b0:	08028e20 	.word	0x08028e20
 801c8b4:	20000000 	.word	0x20000000
 801c8b8:	08018157 	.word	0x08018157

0801c8bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801c8bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c8c0:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 801c8c4:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 801c8c8:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 801c8cc:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 801c8d0:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 801c8d4:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 801c8d8:	8808      	ldrh	r0, [r1, #0]
 801c8da:	fb05 4c0e 	mla	ip, r5, lr, r4
 801c8de:	2d00      	cmp	r5, #0
 801c8e0:	eb02 0a0c 	add.w	sl, r2, ip
 801c8e4:	f2c0 80b0 	blt.w	801ca48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801c8e8:	45ab      	cmp	fp, r5
 801c8ea:	f340 80ad 	ble.w	801ca48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801c8ee:	2c00      	cmp	r4, #0
 801c8f0:	f2c0 80a8 	blt.w	801ca44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801c8f4:	45a6      	cmp	lr, r4
 801c8f6:	f340 80a5 	ble.w	801ca44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801c8fa:	f812 200c 	ldrb.w	r2, [r2, ip]
 801c8fe:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801c902:	1c62      	adds	r2, r4, #1
 801c904:	f100 80a3 	bmi.w	801ca4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801c908:	4596      	cmp	lr, r2
 801c90a:	f340 80a0 	ble.w	801ca4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801c90e:	f1b9 0f00 	cmp.w	r9, #0
 801c912:	f000 809c 	beq.w	801ca4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801c916:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801c91a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801c91e:	3501      	adds	r5, #1
 801c920:	f100 8099 	bmi.w	801ca56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801c924:	45ab      	cmp	fp, r5
 801c926:	f340 8096 	ble.w	801ca56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801c92a:	2f00      	cmp	r7, #0
 801c92c:	f000 8093 	beq.w	801ca56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801c930:	2c00      	cmp	r4, #0
 801c932:	f2c0 808e 	blt.w	801ca52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801c936:	45a6      	cmp	lr, r4
 801c938:	f340 808b 	ble.w	801ca52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801c93c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801c940:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801c944:	3401      	adds	r4, #1
 801c946:	f100 8089 	bmi.w	801ca5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801c94a:	45a6      	cmp	lr, r4
 801c94c:	f340 8086 	ble.w	801ca5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801c950:	f1b9 0f00 	cmp.w	r9, #0
 801c954:	f000 8082 	beq.w	801ca5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801c958:	44d6      	add	lr, sl
 801c95a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801c95e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801c962:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801c966:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801c96a:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801c96e:	fb19 fe07 	smulbb	lr, r9, r7
 801c972:	ea44 0808 	orr.w	r8, r4, r8
 801c976:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801c97a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801c97e:	f1c7 0210 	rsb	r2, r7, #16
 801c982:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801c986:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801c98a:	ea44 0c0c 	orr.w	ip, r4, ip
 801c98e:	eba2 0209 	sub.w	r2, r2, r9
 801c992:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801c996:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801c99a:	fb04 f40c 	mul.w	r4, r4, ip
 801c99e:	fb02 4808 	mla	r8, r2, r8, r4
 801c9a2:	041a      	lsls	r2, r3, #16
 801c9a4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801c9a8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801c9ac:	4313      	orrs	r3, r2
 801c9ae:	042a      	lsls	r2, r5, #16
 801c9b0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801c9b4:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801c9b8:	fb0e 8303 	mla	r3, lr, r3, r8
 801c9bc:	432a      	orrs	r2, r5
 801c9be:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801c9c2:	fb07 3202 	mla	r2, r7, r2, r3
 801c9c6:	0d53      	lsrs	r3, r2, #21
 801c9c8:	0952      	lsrs	r2, r2, #5
 801c9ca:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c9ce:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c9d2:	431a      	orrs	r2, r3
 801c9d4:	b293      	uxth	r3, r2
 801c9d6:	b2b4      	uxth	r4, r6
 801c9d8:	1202      	asrs	r2, r0, #8
 801c9da:	43f6      	mvns	r6, r6
 801c9dc:	b2f6      	uxtb	r6, r6
 801c9de:	121d      	asrs	r5, r3, #8
 801c9e0:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801c9e4:	fb12 f206 	smulbb	r2, r2, r6
 801c9e8:	10c7      	asrs	r7, r0, #3
 801c9ea:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c9ee:	00c0      	lsls	r0, r0, #3
 801c9f0:	fb05 2504 	mla	r5, r5, r4, r2
 801c9f4:	b2c0      	uxtb	r0, r0
 801c9f6:	10da      	asrs	r2, r3, #3
 801c9f8:	00db      	lsls	r3, r3, #3
 801c9fa:	b2db      	uxtb	r3, r3
 801c9fc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ca00:	fb10 f006 	smulbb	r0, r0, r6
 801ca04:	b2ad      	uxth	r5, r5
 801ca06:	fb03 0004 	mla	r0, r3, r4, r0
 801ca0a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801ca0e:	fb17 f706 	smulbb	r7, r7, r6
 801ca12:	b280      	uxth	r0, r0
 801ca14:	1c6b      	adds	r3, r5, #1
 801ca16:	fb02 7204 	mla	r2, r2, r4, r7
 801ca1a:	b292      	uxth	r2, r2
 801ca1c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ca20:	1c43      	adds	r3, r0, #1
 801ca22:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ca26:	1c50      	adds	r0, r2, #1
 801ca28:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801ca2c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801ca30:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ca34:	0952      	lsrs	r2, r2, #5
 801ca36:	432b      	orrs	r3, r5
 801ca38:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ca3c:	4313      	orrs	r3, r2
 801ca3e:	800b      	strh	r3, [r1, #0]
 801ca40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ca44:	4680      	mov	r8, r0
 801ca46:	e75c      	b.n	801c902 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801ca48:	4684      	mov	ip, r0
 801ca4a:	4680      	mov	r8, r0
 801ca4c:	e767      	b.n	801c91e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801ca4e:	4684      	mov	ip, r0
 801ca50:	e765      	b.n	801c91e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801ca52:	4605      	mov	r5, r0
 801ca54:	e776      	b.n	801c944 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801ca56:	4603      	mov	r3, r0
 801ca58:	4605      	mov	r5, r0
 801ca5a:	e782      	b.n	801c962 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801ca5c:	4603      	mov	r3, r0
 801ca5e:	e780      	b.n	801c962 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801ca60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ca60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ca64:	b099      	sub	sp, #100	@ 0x64
 801ca66:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 801ca6a:	9215      	str	r2, [sp, #84]	@ 0x54
 801ca6c:	9309      	str	r3, [sp, #36]	@ 0x24
 801ca6e:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801ca70:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801ca74:	930d      	str	r3, [sp, #52]	@ 0x34
 801ca76:	910c      	str	r1, [sp, #48]	@ 0x30
 801ca78:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 801ca7c:	9016      	str	r0, [sp, #88]	@ 0x58
 801ca7e:	6850      	ldr	r0, [r2, #4]
 801ca80:	6812      	ldr	r2, [r2, #0]
 801ca82:	fb00 1303 	mla	r3, r0, r3, r1
 801ca86:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801ca8a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ca8c:	681b      	ldr	r3, [r3, #0]
 801ca8e:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ca90:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ca92:	685e      	ldr	r6, [r3, #4]
 801ca94:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ca96:	43db      	mvns	r3, r3
 801ca98:	b2db      	uxtb	r3, r3
 801ca9a:	3604      	adds	r6, #4
 801ca9c:	930a      	str	r3, [sp, #40]	@ 0x28
 801ca9e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801caa0:	2b00      	cmp	r3, #0
 801caa2:	dc03      	bgt.n	801caac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801caa4:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801caa6:	2b00      	cmp	r3, #0
 801caa8:	f340 8225 	ble.w	801cef6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801caac:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801caae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cab2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cab6:	1e48      	subs	r0, r1, #1
 801cab8:	1e57      	subs	r7, r2, #1
 801caba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cabc:	2b00      	cmp	r3, #0
 801cabe:	f340 80e3 	ble.w	801cc88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801cac2:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801cac6:	ea4f 4325 	mov.w	r3, r5, asr #16
 801caca:	d406      	bmi.n	801cada <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801cacc:	4584      	cmp	ip, r0
 801cace:	da04      	bge.n	801cada <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801cad0:	2b00      	cmp	r3, #0
 801cad2:	db02      	blt.n	801cada <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801cad4:	42bb      	cmp	r3, r7
 801cad6:	f2c0 80d8 	blt.w	801cc8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801cada:	f11c 0c01 	adds.w	ip, ip, #1
 801cade:	f100 80c9 	bmi.w	801cc74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801cae2:	4561      	cmp	r1, ip
 801cae4:	f2c0 80c6 	blt.w	801cc74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801cae8:	3301      	adds	r3, #1
 801caea:	f100 80c3 	bmi.w	801cc74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801caee:	429a      	cmp	r2, r3
 801caf0:	f2c0 80c0 	blt.w	801cc74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801caf4:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801caf8:	4647      	mov	r7, r8
 801cafa:	f1bb 0f00 	cmp.w	fp, #0
 801cafe:	f340 80e3 	ble.w	801ccc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801cb02:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801cb04:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801cb06:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801cb0a:	689b      	ldr	r3, [r3, #8]
 801cb0c:	ea5f 422a 	movs.w	r2, sl, asr #16
 801cb10:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801cb14:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801cb18:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801cb1c:	f100 8121 	bmi.w	801cd62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801cb20:	f103 39ff 	add.w	r9, r3, #4294967295
 801cb24:	454a      	cmp	r2, r9
 801cb26:	f280 811c 	bge.w	801cd62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801cb2a:	f1bc 0f00 	cmp.w	ip, #0
 801cb2e:	f2c0 8118 	blt.w	801cd62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801cb32:	f10e 39ff 	add.w	r9, lr, #4294967295
 801cb36:	45cc      	cmp	ip, r9
 801cb38:	f280 8113 	bge.w	801cd62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801cb3c:	b21b      	sxth	r3, r3
 801cb3e:	fb0c 2203 	mla	r2, ip, r3, r2
 801cb42:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801cb44:	eb04 0902 	add.w	r9, r4, r2
 801cb48:	5ca2      	ldrb	r2, [r4, r2]
 801cb4a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801cb4e:	2800      	cmp	r0, #0
 801cb50:	f000 80fe 	beq.w	801cd50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801cb54:	f899 2001 	ldrb.w	r2, [r9, #1]
 801cb58:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801cb5c:	9211      	str	r2, [sp, #68]	@ 0x44
 801cb5e:	b151      	cbz	r1, 801cb76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801cb60:	eb09 0203 	add.w	r2, r9, r3
 801cb64:	f819 3003 	ldrb.w	r3, [r9, r3]
 801cb68:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801cb6c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801cb6e:	7853      	ldrb	r3, [r2, #1]
 801cb70:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801cb74:	9312      	str	r3, [sp, #72]	@ 0x48
 801cb76:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801cb78:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801cb7a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801cb7e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801cb82:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801cb86:	ea4c 0c03 	orr.w	ip, ip, r3
 801cb8a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801cb8c:	041b      	lsls	r3, r3, #16
 801cb8e:	fb10 f201 	smulbb	r2, r0, r1
 801cb92:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801cb96:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801cb9a:	10d2      	asrs	r2, r2, #3
 801cb9c:	4323      	orrs	r3, r4
 801cb9e:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801cba2:	4353      	muls	r3, r2
 801cba4:	fb09 330c 	mla	r3, r9, ip, r3
 801cba8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801cbac:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801cbb0:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801cbb4:	ea4c 0e0e 	orr.w	lr, ip, lr
 801cbb8:	f1c1 0c10 	rsb	ip, r1, #16
 801cbbc:	ebac 0c00 	sub.w	ip, ip, r0
 801cbc0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801cbc4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801cbc8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801cbca:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801cbcc:	0418      	lsls	r0, r3, #16
 801cbce:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801cbd2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801cbd6:	4318      	orrs	r0, r3
 801cbd8:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801cbdc:	fb02 c200 	mla	r2, r2, r0, ip
 801cbe0:	0d53      	lsrs	r3, r2, #21
 801cbe2:	0952      	lsrs	r2, r2, #5
 801cbe4:	8838      	ldrh	r0, [r7, #0]
 801cbe6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cbea:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801cbee:	431a      	orrs	r2, r3
 801cbf0:	b292      	uxth	r2, r2
 801cbf2:	1201      	asrs	r1, r0, #8
 801cbf4:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 801cbf8:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801cbfc:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801cc00:	fb11 f104 	smulbb	r1, r1, r4
 801cc04:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801cc08:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801cc0c:	00c0      	lsls	r0, r0, #3
 801cc0e:	fb0c 1c03 	mla	ip, ip, r3, r1
 801cc12:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801cc16:	10d1      	asrs	r1, r2, #3
 801cc18:	b2c0      	uxtb	r0, r0
 801cc1a:	00d2      	lsls	r2, r2, #3
 801cc1c:	b2d2      	uxtb	r2, r2
 801cc1e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801cc22:	fb1e fe04 	smulbb	lr, lr, r4
 801cc26:	fb10 f004 	smulbb	r0, r0, r4
 801cc2a:	fa1f fc8c 	uxth.w	ip, ip
 801cc2e:	fb01 e103 	mla	r1, r1, r3, lr
 801cc32:	fb02 0303 	mla	r3, r2, r3, r0
 801cc36:	b29a      	uxth	r2, r3
 801cc38:	f10c 0301 	add.w	r3, ip, #1
 801cc3c:	b289      	uxth	r1, r1
 801cc3e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801cc42:	1c53      	adds	r3, r2, #1
 801cc44:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cc48:	1c4a      	adds	r2, r1, #1
 801cc4a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cc4e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801cc52:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801cc56:	0949      	lsrs	r1, r1, #5
 801cc58:	ea43 030c 	orr.w	r3, r3, ip
 801cc5c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801cc60:	430b      	orrs	r3, r1
 801cc62:	803b      	strh	r3, [r7, #0]
 801cc64:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801cc66:	449a      	add	sl, r3
 801cc68:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801cc6a:	3702      	adds	r7, #2
 801cc6c:	441d      	add	r5, r3
 801cc6e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801cc72:	e742      	b.n	801cafa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801cc74:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801cc76:	449a      	add	sl, r3
 801cc78:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801cc7a:	441d      	add	r5, r3
 801cc7c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cc7e:	3b01      	subs	r3, #1
 801cc80:	9309      	str	r3, [sp, #36]	@ 0x24
 801cc82:	f108 0802 	add.w	r8, r8, #2
 801cc86:	e718      	b.n	801caba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801cc88:	d023      	beq.n	801ccd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801cc8a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cc8c:	9825      	ldr	r0, [sp, #148]	@ 0x94
 801cc8e:	3b01      	subs	r3, #1
 801cc90:	fb00 a003 	mla	r0, r0, r3, sl
 801cc94:	1400      	asrs	r0, r0, #16
 801cc96:	f53f af2d 	bmi.w	801caf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801cc9a:	3901      	subs	r1, #1
 801cc9c:	4288      	cmp	r0, r1
 801cc9e:	f6bf af29 	bge.w	801caf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801cca2:	9926      	ldr	r1, [sp, #152]	@ 0x98
 801cca4:	fb01 5303 	mla	r3, r1, r3, r5
 801cca8:	141b      	asrs	r3, r3, #16
 801ccaa:	f53f af23 	bmi.w	801caf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ccae:	3a01      	subs	r2, #1
 801ccb0:	4293      	cmp	r3, r2
 801ccb2:	f6bf af1f 	bge.w	801caf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ccb6:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801ccba:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 801ccbe:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801ccc2:	f1be 0f00 	cmp.w	lr, #0
 801ccc6:	dc6c      	bgt.n	801cda2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801ccc8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ccca:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ccce:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801ccd2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ccd4:	2b00      	cmp	r3, #0
 801ccd6:	f340 810e 	ble.w	801cef6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801ccda:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ccde:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801cce2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cce6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cce8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ccec:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ccf0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ccf4:	eef0 6a62 	vmov.f32	s13, s5
 801ccf8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ccfc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cd00:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cd04:	ee16 aa90 	vmov	sl, s13
 801cd08:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cd0c:	eef0 6a43 	vmov.f32	s13, s6
 801cd10:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cd14:	ee12 2a90 	vmov	r2, s5
 801cd18:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cd1c:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd20:	ee13 2a10 	vmov	r2, s6
 801cd24:	9325      	str	r3, [sp, #148]	@ 0x94
 801cd26:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cd28:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd2c:	9326      	str	r3, [sp, #152]	@ 0x98
 801cd2e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801cd30:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801cd32:	3b01      	subs	r3, #1
 801cd34:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cd38:	930c      	str	r3, [sp, #48]	@ 0x30
 801cd3a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cd3c:	bf08      	it	eq
 801cd3e:	4613      	moveq	r3, r2
 801cd40:	ee16 5a90 	vmov	r5, s13
 801cd44:	9309      	str	r3, [sp, #36]	@ 0x24
 801cd46:	eeb0 3a67 	vmov.f32	s6, s15
 801cd4a:	eef0 2a47 	vmov.f32	s5, s14
 801cd4e:	e6a6      	b.n	801ca9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801cd50:	2900      	cmp	r1, #0
 801cd52:	f43f af10 	beq.w	801cb76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801cd56:	f819 3003 	ldrb.w	r3, [r9, r3]
 801cd5a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801cd5e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801cd60:	e709      	b.n	801cb76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801cd62:	f112 0901 	adds.w	r9, r2, #1
 801cd66:	f53f af7d 	bmi.w	801cc64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801cd6a:	454b      	cmp	r3, r9
 801cd6c:	f6ff af7a 	blt.w	801cc64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801cd70:	f11c 0901 	adds.w	r9, ip, #1
 801cd74:	f53f af76 	bmi.w	801cc64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801cd78:	45ce      	cmp	lr, r9
 801cd7a:	f6ff af73 	blt.w	801cc64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801cd7e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801cd80:	9202      	str	r2, [sp, #8]
 801cd82:	b21b      	sxth	r3, r3
 801cd84:	fa0f f28e 	sxth.w	r2, lr
 801cd88:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801cd8c:	e9cd c003 	strd	ip, r0, [sp, #12]
 801cd90:	9201      	str	r2, [sp, #4]
 801cd92:	9300      	str	r3, [sp, #0]
 801cd94:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801cd96:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801cd98:	4633      	mov	r3, r6
 801cd9a:	4639      	mov	r1, r7
 801cd9c:	f7ff fd8e 	bl	801c8bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801cda0:	e760      	b.n	801cc64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801cda2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801cda4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801cda6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801cdaa:	ea4f 422a 	mov.w	r2, sl, asr #16
 801cdae:	1429      	asrs	r1, r5, #16
 801cdb0:	fb03 2101 	mla	r1, r3, r1, r2
 801cdb4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801cdb6:	440a      	add	r2, r1
 801cdb8:	5c61      	ldrb	r1, [r4, r1]
 801cdba:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801cdbe:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801cdc2:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801cdc6:	f1bc 0f00 	cmp.w	ip, #0
 801cdca:	f000 808c 	beq.w	801cee6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801cdce:	7857      	ldrb	r7, [r2, #1]
 801cdd0:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801cdd4:	9413      	str	r4, [sp, #76]	@ 0x4c
 801cdd6:	b140      	cbz	r0, 801cdea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801cdd8:	18d7      	adds	r7, r2, r3
 801cdda:	5cd3      	ldrb	r3, [r2, r3]
 801cddc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801cde0:	9310      	str	r3, [sp, #64]	@ 0x40
 801cde2:	787b      	ldrb	r3, [r7, #1]
 801cde4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801cde8:	9314      	str	r3, [sp, #80]	@ 0x50
 801cdea:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801cdec:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801cdee:	fb1c f200 	smulbb	r2, ip, r0
 801cdf2:	041f      	lsls	r7, r3, #16
 801cdf4:	10d2      	asrs	r2, r2, #3
 801cdf6:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801cdfa:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801cdfe:	431f      	orrs	r7, r3
 801ce00:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801ce04:	9317      	str	r3, [sp, #92]	@ 0x5c
 801ce06:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801ce08:	041b      	lsls	r3, r3, #16
 801ce0a:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801ce0e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ce12:	ea43 030b 	orr.w	r3, r3, fp
 801ce16:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801ce18:	4353      	muls	r3, r2
 801ce1a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ce1e:	fb04 3707 	mla	r7, r4, r7, r3
 801ce22:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801ce26:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801ce2a:	ea43 0b01 	orr.w	fp, r3, r1
 801ce2e:	f1c0 0110 	rsb	r1, r0, #16
 801ce32:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ce34:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801ce36:	eba1 0c0c 	sub.w	ip, r1, ip
 801ce3a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ce3e:	fb0c 770b 	mla	r7, ip, fp, r7
 801ce42:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ce46:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801ce4a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ce4e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801ce52:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ce56:	fb02 770c 	mla	r7, r2, ip, r7
 801ce5a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801ce5c:	0d79      	lsrs	r1, r7, #21
 801ce5e:	097f      	lsrs	r7, r7, #5
 801ce60:	8812      	ldrh	r2, [r2, #0]
 801ce62:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ce66:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801ce6a:	430f      	orrs	r7, r1
 801ce6c:	b2bb      	uxth	r3, r7
 801ce6e:	1211      	asrs	r1, r2, #8
 801ce70:	1218      	asrs	r0, r3, #8
 801ce72:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ce76:	fb11 f104 	smulbb	r1, r1, r4
 801ce7a:	10d7      	asrs	r7, r2, #3
 801ce7c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ce80:	00d2      	lsls	r2, r2, #3
 801ce82:	fb00 1009 	mla	r0, r0, r9, r1
 801ce86:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ce8a:	10d9      	asrs	r1, r3, #3
 801ce8c:	b2d2      	uxtb	r2, r2
 801ce8e:	00db      	lsls	r3, r3, #3
 801ce90:	fb17 f704 	smulbb	r7, r7, r4
 801ce94:	fb12 f204 	smulbb	r2, r2, r4
 801ce98:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801ce9c:	b2db      	uxtb	r3, r3
 801ce9e:	b280      	uxth	r0, r0
 801cea0:	fb01 7109 	mla	r1, r1, r9, r7
 801cea4:	fb03 2309 	mla	r3, r3, r9, r2
 801cea8:	b29b      	uxth	r3, r3
 801ceaa:	b289      	uxth	r1, r1
 801ceac:	1c42      	adds	r2, r0, #1
 801ceae:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ceb2:	1c4f      	adds	r7, r1, #1
 801ceb4:	1c5a      	adds	r2, r3, #1
 801ceb6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ceba:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801cebe:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801cec2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cec6:	0949      	lsrs	r1, r1, #5
 801cec8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ceca:	4310      	orrs	r0, r2
 801cecc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ced0:	4308      	orrs	r0, r1
 801ced2:	f823 0b02 	strh.w	r0, [r3], #2
 801ced6:	930e      	str	r3, [sp, #56]	@ 0x38
 801ced8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801ceda:	449a      	add	sl, r3
 801cedc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801cede:	f10e 3eff 	add.w	lr, lr, #4294967295
 801cee2:	441d      	add	r5, r3
 801cee4:	e6ed      	b.n	801ccc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801cee6:	2800      	cmp	r0, #0
 801cee8:	f43f af7f 	beq.w	801cdea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ceec:	5cd3      	ldrb	r3, [r2, r3]
 801ceee:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801cef2:	9310      	str	r3, [sp, #64]	@ 0x40
 801cef4:	e779      	b.n	801cdea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801cef6:	b019      	add	sp, #100	@ 0x64
 801cef8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cefc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801cefc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cf00:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801cf04:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801cf08:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801cf0c:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801cf10:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801cf14:	8808      	ldrh	r0, [r1, #0]
 801cf16:	fb08 470e 	mla	r7, r8, lr, r4
 801cf1a:	f1b8 0f00 	cmp.w	r8, #0
 801cf1e:	eb02 0907 	add.w	r9, r2, r7
 801cf22:	db67      	blt.n	801cff4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801cf24:	45c2      	cmp	sl, r8
 801cf26:	dd65      	ble.n	801cff4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801cf28:	2c00      	cmp	r4, #0
 801cf2a:	db61      	blt.n	801cff0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801cf2c:	45a6      	cmp	lr, r4
 801cf2e:	dd5f      	ble.n	801cff0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801cf30:	5dd2      	ldrb	r2, [r2, r7]
 801cf32:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801cf36:	1c62      	adds	r2, r4, #1
 801cf38:	d45f      	bmi.n	801cffa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801cf3a:	4596      	cmp	lr, r2
 801cf3c:	dd5d      	ble.n	801cffa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801cf3e:	2d00      	cmp	r5, #0
 801cf40:	d05b      	beq.n	801cffa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801cf42:	f899 2001 	ldrb.w	r2, [r9, #1]
 801cf46:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801cf4a:	f118 0801 	adds.w	r8, r8, #1
 801cf4e:	d458      	bmi.n	801d002 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801cf50:	45c2      	cmp	sl, r8
 801cf52:	dd56      	ble.n	801d002 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801cf54:	2e00      	cmp	r6, #0
 801cf56:	d054      	beq.n	801d002 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801cf58:	2c00      	cmp	r4, #0
 801cf5a:	db50      	blt.n	801cffe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801cf5c:	45a6      	cmp	lr, r4
 801cf5e:	dd4e      	ble.n	801cffe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801cf60:	f819 200e 	ldrb.w	r2, [r9, lr]
 801cf64:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801cf68:	3401      	adds	r4, #1
 801cf6a:	d407      	bmi.n	801cf7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801cf6c:	45a6      	cmp	lr, r4
 801cf6e:	dd05      	ble.n	801cf7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801cf70:	b125      	cbz	r5, 801cf7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801cf72:	44ce      	add	lr, r9
 801cf74:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801cf78:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801cf7c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801cf80:	fb15 f406 	smulbb	r4, r5, r6
 801cf84:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801cf88:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801cf8c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801cf90:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801cf94:	ea43 0c0c 	orr.w	ip, r3, ip
 801cf98:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801cf9c:	f1c6 0310 	rsb	r3, r6, #16
 801cfa0:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801cfa4:	1b5b      	subs	r3, r3, r5
 801cfa6:	ea4e 0707 	orr.w	r7, lr, r7
 801cfaa:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801cfae:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801cfb2:	437d      	muls	r5, r7
 801cfb4:	fb03 5c0c 	mla	ip, r3, ip, r5
 801cfb8:	0403      	lsls	r3, r0, #16
 801cfba:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801cfbe:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801cfc2:	4318      	orrs	r0, r3
 801cfc4:	0413      	lsls	r3, r2, #16
 801cfc6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801cfca:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801cfce:	4313      	orrs	r3, r2
 801cfd0:	fb04 c000 	mla	r0, r4, r0, ip
 801cfd4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801cfd8:	fb06 0003 	mla	r0, r6, r3, r0
 801cfdc:	0d43      	lsrs	r3, r0, #21
 801cfde:	0940      	lsrs	r0, r0, #5
 801cfe0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cfe4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801cfe8:	4318      	orrs	r0, r3
 801cfea:	8008      	strh	r0, [r1, #0]
 801cfec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cff0:	4684      	mov	ip, r0
 801cff2:	e7a0      	b.n	801cf36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801cff4:	4607      	mov	r7, r0
 801cff6:	4684      	mov	ip, r0
 801cff8:	e7a7      	b.n	801cf4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801cffa:	4607      	mov	r7, r0
 801cffc:	e7a5      	b.n	801cf4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801cffe:	4602      	mov	r2, r0
 801d000:	e7b2      	b.n	801cf68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801d002:	4602      	mov	r2, r0
 801d004:	e7ba      	b.n	801cf7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801d006 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d006:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d00a:	b093      	sub	sp, #76	@ 0x4c
 801d00c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801d010:	920f      	str	r2, [sp, #60]	@ 0x3c
 801d012:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801d014:	9108      	str	r1, [sp, #32]
 801d016:	9306      	str	r3, [sp, #24]
 801d018:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801d01c:	9010      	str	r0, [sp, #64]	@ 0x40
 801d01e:	6850      	ldr	r0, [r2, #4]
 801d020:	6812      	ldr	r2, [r2, #0]
 801d022:	fb00 1303 	mla	r3, r0, r3, r1
 801d026:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801d02a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d02c:	681b      	ldr	r3, [r3, #0]
 801d02e:	9307      	str	r3, [sp, #28]
 801d030:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d032:	685f      	ldr	r7, [r3, #4]
 801d034:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801d038:	3704      	adds	r7, #4
 801d03a:	9b08      	ldr	r3, [sp, #32]
 801d03c:	2b00      	cmp	r3, #0
 801d03e:	dc03      	bgt.n	801d048 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801d040:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d042:	2b00      	cmp	r3, #0
 801d044:	f340 81b2 	ble.w	801d3ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801d048:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d04a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d04e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d052:	1e48      	subs	r0, r1, #1
 801d054:	f102 3cff 	add.w	ip, r2, #4294967295
 801d058:	9b06      	ldr	r3, [sp, #24]
 801d05a:	2b00      	cmp	r3, #0
 801d05c:	f340 80a9 	ble.w	801d1b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801d060:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d064:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d068:	d406      	bmi.n	801d078 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d06a:	4586      	cmp	lr, r0
 801d06c:	da04      	bge.n	801d078 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d06e:	2b00      	cmp	r3, #0
 801d070:	db02      	blt.n	801d078 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d072:	4563      	cmp	r3, ip
 801d074:	f2c0 809e 	blt.w	801d1b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801d078:	f11e 0e01 	adds.w	lr, lr, #1
 801d07c:	f100 808f 	bmi.w	801d19e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d080:	4571      	cmp	r1, lr
 801d082:	f2c0 808c 	blt.w	801d19e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d086:	3301      	adds	r3, #1
 801d088:	f100 8089 	bmi.w	801d19e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d08c:	429a      	cmp	r2, r3
 801d08e:	f2c0 8086 	blt.w	801d19e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d092:	f8dd b018 	ldr.w	fp, [sp, #24]
 801d096:	46c8      	mov	r8, r9
 801d098:	f1bb 0f00 	cmp.w	fp, #0
 801d09c:	f340 80a6 	ble.w	801d1ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801d0a0:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801d0a2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d0a4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801d0a8:	689b      	ldr	r3, [r3, #8]
 801d0aa:	1422      	asrs	r2, r4, #16
 801d0ac:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801d0b0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801d0b4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801d0b8:	f100 80e3 	bmi.w	801d282 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801d0bc:	f103 3aff 	add.w	sl, r3, #4294967295
 801d0c0:	4552      	cmp	r2, sl
 801d0c2:	f280 80de 	bge.w	801d282 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801d0c6:	f1bc 0f00 	cmp.w	ip, #0
 801d0ca:	f2c0 80da 	blt.w	801d282 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801d0ce:	f10e 3aff 	add.w	sl, lr, #4294967295
 801d0d2:	45d4      	cmp	ip, sl
 801d0d4:	f280 80d5 	bge.w	801d282 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801d0d8:	b21b      	sxth	r3, r3
 801d0da:	fb0c 2203 	mla	r2, ip, r3, r2
 801d0de:	9d07      	ldr	r5, [sp, #28]
 801d0e0:	eb05 0a02 	add.w	sl, r5, r2
 801d0e4:	5caa      	ldrb	r2, [r5, r2]
 801d0e6:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801d0ea:	2800      	cmp	r0, #0
 801d0ec:	f000 80c0 	beq.w	801d270 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801d0f0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d0f4:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801d0f8:	920b      	str	r2, [sp, #44]	@ 0x2c
 801d0fa:	b151      	cbz	r1, 801d112 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801d0fc:	eb0a 0203 	add.w	r2, sl, r3
 801d100:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801d104:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801d108:	9309      	str	r3, [sp, #36]	@ 0x24
 801d10a:	7853      	ldrb	r3, [r2, #1]
 801d10c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801d110:	930c      	str	r3, [sp, #48]	@ 0x30
 801d112:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d114:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801d116:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801d11a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801d11e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801d122:	ea4c 0c03 	orr.w	ip, ip, r3
 801d126:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d128:	041b      	lsls	r3, r3, #16
 801d12a:	fb10 f201 	smulbb	r2, r0, r1
 801d12e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801d132:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801d136:	10d2      	asrs	r2, r2, #3
 801d138:	432b      	orrs	r3, r5
 801d13a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801d13e:	4353      	muls	r3, r2
 801d140:	fb0a 330c 	mla	r3, sl, ip, r3
 801d144:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801d148:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801d14c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d150:	ea4c 0e0e 	orr.w	lr, ip, lr
 801d154:	f1c1 0c10 	rsb	ip, r1, #16
 801d158:	ebac 0c00 	sub.w	ip, ip, r0
 801d15c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801d160:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801d164:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d166:	0418      	lsls	r0, r3, #16
 801d168:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801d16c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801d170:	4318      	orrs	r0, r3
 801d172:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801d176:	fb02 c200 	mla	r2, r2, r0, ip
 801d17a:	0d53      	lsrs	r3, r2, #21
 801d17c:	0952      	lsrs	r2, r2, #5
 801d17e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d182:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d186:	431a      	orrs	r2, r3
 801d188:	f8a8 2000 	strh.w	r2, [r8]
 801d18c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d18e:	441c      	add	r4, r3
 801d190:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d192:	f108 0802 	add.w	r8, r8, #2
 801d196:	441e      	add	r6, r3
 801d198:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d19c:	e77c      	b.n	801d098 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d19e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d1a0:	441c      	add	r4, r3
 801d1a2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d1a4:	441e      	add	r6, r3
 801d1a6:	9b06      	ldr	r3, [sp, #24]
 801d1a8:	3b01      	subs	r3, #1
 801d1aa:	9306      	str	r3, [sp, #24]
 801d1ac:	f109 0902 	add.w	r9, r9, #2
 801d1b0:	e752      	b.n	801d058 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801d1b2:	d020      	beq.n	801d1f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d1b4:	9b06      	ldr	r3, [sp, #24]
 801d1b6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801d1b8:	3b01      	subs	r3, #1
 801d1ba:	fb00 4003 	mla	r0, r0, r3, r4
 801d1be:	1400      	asrs	r0, r0, #16
 801d1c0:	f53f af67 	bmi.w	801d092 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801d1c4:	3901      	subs	r1, #1
 801d1c6:	4288      	cmp	r0, r1
 801d1c8:	f6bf af63 	bge.w	801d092 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801d1cc:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801d1ce:	fb01 6303 	mla	r3, r1, r3, r6
 801d1d2:	141b      	asrs	r3, r3, #16
 801d1d4:	f53f af5d 	bmi.w	801d092 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801d1d8:	3a01      	subs	r2, #1
 801d1da:	4293      	cmp	r3, r2
 801d1dc:	f6bf af59 	bge.w	801d092 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801d1e0:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801d1e4:	46ca      	mov	sl, r9
 801d1e6:	f1b8 0f00 	cmp.w	r8, #0
 801d1ea:	dc67      	bgt.n	801d2bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801d1ec:	9b06      	ldr	r3, [sp, #24]
 801d1ee:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801d1f2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801d1f6:	9b08      	ldr	r3, [sp, #32]
 801d1f8:	2b00      	cmp	r3, #0
 801d1fa:	f340 80d7 	ble.w	801d3ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801d1fe:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d202:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d206:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d20a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d20c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d210:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d214:	eeb0 6a62 	vmov.f32	s12, s5
 801d218:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d21c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d220:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d224:	ee16 4a10 	vmov	r4, s12
 801d228:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d22c:	eeb0 6a43 	vmov.f32	s12, s6
 801d230:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d234:	ee12 2a90 	vmov	r2, s5
 801d238:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d23c:	fb92 f3f3 	sdiv	r3, r2, r3
 801d240:	ee13 2a10 	vmov	r2, s6
 801d244:	931f      	str	r3, [sp, #124]	@ 0x7c
 801d246:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d248:	fb92 f3f3 	sdiv	r3, r2, r3
 801d24c:	9320      	str	r3, [sp, #128]	@ 0x80
 801d24e:	9b08      	ldr	r3, [sp, #32]
 801d250:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801d252:	3b01      	subs	r3, #1
 801d254:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d258:	9308      	str	r3, [sp, #32]
 801d25a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d25c:	bf08      	it	eq
 801d25e:	4613      	moveq	r3, r2
 801d260:	ee16 6a10 	vmov	r6, s12
 801d264:	9306      	str	r3, [sp, #24]
 801d266:	eeb0 3a67 	vmov.f32	s6, s15
 801d26a:	eef0 2a47 	vmov.f32	s5, s14
 801d26e:	e6e4      	b.n	801d03a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801d270:	2900      	cmp	r1, #0
 801d272:	f43f af4e 	beq.w	801d112 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801d276:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801d27a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801d27e:	9309      	str	r3, [sp, #36]	@ 0x24
 801d280:	e747      	b.n	801d112 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801d282:	f112 0a01 	adds.w	sl, r2, #1
 801d286:	d481      	bmi.n	801d18c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d288:	4553      	cmp	r3, sl
 801d28a:	f6ff af7f 	blt.w	801d18c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d28e:	f11c 0a01 	adds.w	sl, ip, #1
 801d292:	f53f af7b 	bmi.w	801d18c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d296:	45d6      	cmp	lr, sl
 801d298:	f6ff af78 	blt.w	801d18c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d29c:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801d2a0:	b21b      	sxth	r3, r3
 801d2a2:	fa0f f28e 	sxth.w	r2, lr
 801d2a6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801d2aa:	9201      	str	r2, [sp, #4]
 801d2ac:	9300      	str	r3, [sp, #0]
 801d2ae:	9a07      	ldr	r2, [sp, #28]
 801d2b0:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801d2b2:	463b      	mov	r3, r7
 801d2b4:	4641      	mov	r1, r8
 801d2b6:	f7ff fe21 	bl	801cefc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801d2ba:	e767      	b.n	801d18c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d2bc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d2be:	9d07      	ldr	r5, [sp, #28]
 801d2c0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801d2c4:	1422      	asrs	r2, r4, #16
 801d2c6:	1431      	asrs	r1, r6, #16
 801d2c8:	fb03 2101 	mla	r1, r3, r1, r2
 801d2cc:	9a07      	ldr	r2, [sp, #28]
 801d2ce:	440a      	add	r2, r1
 801d2d0:	5c69      	ldrb	r1, [r5, r1]
 801d2d2:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801d2d6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801d2da:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801d2de:	f1be 0f00 	cmp.w	lr, #0
 801d2e2:	d05c      	beq.n	801d39e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801d2e4:	f892 c001 	ldrb.w	ip, [r2, #1]
 801d2e8:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801d2ec:	950d      	str	r5, [sp, #52]	@ 0x34
 801d2ee:	b150      	cbz	r0, 801d306 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801d2f0:	eb02 0c03 	add.w	ip, r2, r3
 801d2f4:	5cd3      	ldrb	r3, [r2, r3]
 801d2f6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801d2fa:	930a      	str	r3, [sp, #40]	@ 0x28
 801d2fc:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801d300:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801d304:	930e      	str	r3, [sp, #56]	@ 0x38
 801d306:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d308:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801d30a:	fb1e f200 	smulbb	r2, lr, r0
 801d30e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801d312:	10d2      	asrs	r2, r2, #3
 801d314:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801d318:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801d31c:	ea4c 0c03 	orr.w	ip, ip, r3
 801d320:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801d324:	9311      	str	r3, [sp, #68]	@ 0x44
 801d326:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d328:	041b      	lsls	r3, r3, #16
 801d32a:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801d32e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801d332:	ea43 030b 	orr.w	r3, r3, fp
 801d336:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801d338:	4353      	muls	r3, r2
 801d33a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801d33e:	fb05 3c0c 	mla	ip, r5, ip, r3
 801d342:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801d346:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801d34a:	ea43 0b01 	orr.w	fp, r3, r1
 801d34e:	f1c0 0110 	rsb	r1, r0, #16
 801d352:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d354:	eba1 0e0e 	sub.w	lr, r1, lr
 801d358:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801d35c:	fb0e cc0b 	mla	ip, lr, fp, ip
 801d360:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801d364:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801d368:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d36c:	ea4b 0e0e 	orr.w	lr, fp, lr
 801d370:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801d374:	fb02 cc0e 	mla	ip, r2, lr, ip
 801d378:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801d37c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d380:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d384:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801d388:	ea43 0c0c 	orr.w	ip, r3, ip
 801d38c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d38e:	f82a cb02 	strh.w	ip, [sl], #2
 801d392:	441c      	add	r4, r3
 801d394:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d396:	f108 38ff 	add.w	r8, r8, #4294967295
 801d39a:	441e      	add	r6, r3
 801d39c:	e723      	b.n	801d1e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801d39e:	2800      	cmp	r0, #0
 801d3a0:	d0b1      	beq.n	801d306 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801d3a2:	5cd3      	ldrb	r3, [r2, r3]
 801d3a4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801d3a8:	930a      	str	r3, [sp, #40]	@ 0x28
 801d3aa:	e7ac      	b.n	801d306 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801d3ac:	b013      	add	sp, #76	@ 0x4c
 801d3ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d3b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801d3b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d3b6:	880d      	ldrh	r5, [r1, #0]
 801d3b8:	b087      	sub	sp, #28
 801d3ba:	10ef      	asrs	r7, r5, #3
 801d3bc:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801d3c0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801d3c4:	00ed      	lsls	r5, r5, #3
 801d3c6:	9701      	str	r7, [sp, #4]
 801d3c8:	b2ed      	uxtb	r5, r5
 801d3ca:	9502      	str	r5, [sp, #8]
 801d3cc:	9d01      	ldr	r5, [sp, #4]
 801d3ce:	9103      	str	r1, [sp, #12]
 801d3d0:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801d3d4:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801d3d8:	9902      	ldr	r1, [sp, #8]
 801d3da:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801d3de:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801d3e2:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801d3e6:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801d3ea:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801d3ee:	022d      	lsls	r5, r5, #8
 801d3f0:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801d3f4:	fb06 0709 	mla	r7, r6, r9, r0
 801d3f8:	430d      	orrs	r5, r1
 801d3fa:	2e00      	cmp	r6, #0
 801d3fc:	eb02 0c07 	add.w	ip, r2, r7
 801d400:	9505      	str	r5, [sp, #20]
 801d402:	f2c0 80b6 	blt.w	801d572 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801d406:	45b3      	cmp	fp, r6
 801d408:	f340 80b3 	ble.w	801d572 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801d40c:	2800      	cmp	r0, #0
 801d40e:	f2c0 80ae 	blt.w	801d56e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801d412:	4581      	cmp	r9, r0
 801d414:	f340 80ab 	ble.w	801d56e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801d418:	5dd7      	ldrb	r7, [r2, r7]
 801d41a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801d41e:	441f      	add	r7, r3
 801d420:	1c42      	adds	r2, r0, #1
 801d422:	f100 80a9 	bmi.w	801d578 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801d426:	4591      	cmp	r9, r2
 801d428:	f340 80a6 	ble.w	801d578 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801d42c:	2c00      	cmp	r4, #0
 801d42e:	f000 80a3 	beq.w	801d578 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801d432:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801d436:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801d43a:	441d      	add	r5, r3
 801d43c:	3601      	adds	r6, #1
 801d43e:	f100 809f 	bmi.w	801d580 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801d442:	45b3      	cmp	fp, r6
 801d444:	f340 809c 	ble.w	801d580 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801d448:	f1be 0f00 	cmp.w	lr, #0
 801d44c:	f000 8098 	beq.w	801d580 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801d450:	2800      	cmp	r0, #0
 801d452:	f2c0 8093 	blt.w	801d57c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801d456:	4581      	cmp	r9, r0
 801d458:	f340 8090 	ble.w	801d57c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801d45c:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801d460:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801d464:	441e      	add	r6, r3
 801d466:	3001      	adds	r0, #1
 801d468:	f100 808d 	bmi.w	801d586 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801d46c:	4581      	cmp	r9, r0
 801d46e:	f340 808a 	ble.w	801d586 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801d472:	2c00      	cmp	r4, #0
 801d474:	f000 8087 	beq.w	801d586 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801d478:	44e1      	add	r9, ip
 801d47a:	f899 2001 	ldrb.w	r2, [r9, #1]
 801d47e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d482:	4413      	add	r3, r2
 801d484:	b2a4      	uxth	r4, r4
 801d486:	fa1f fe8e 	uxth.w	lr, lr
 801d48a:	fb04 fb0e 	mul.w	fp, r4, lr
 801d48e:	0124      	lsls	r4, r4, #4
 801d490:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801d494:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801d498:	eba4 040b 	sub.w	r4, r4, fp
 801d49c:	fa1f f08e 	uxth.w	r0, lr
 801d4a0:	b2a2      	uxth	r2, r4
 801d4a2:	78ac      	ldrb	r4, [r5, #2]
 801d4a4:	f897 c002 	ldrb.w	ip, [r7, #2]
 801d4a8:	9901      	ldr	r1, [sp, #4]
 801d4aa:	eba9 0900 	sub.w	r9, r9, r0
 801d4ae:	fa1f f989 	uxth.w	r9, r9
 801d4b2:	4354      	muls	r4, r2
 801d4b4:	fb09 440c 	mla	r4, r9, ip, r4
 801d4b8:	f896 c002 	ldrb.w	ip, [r6, #2]
 801d4bc:	fb00 440c 	mla	r4, r0, ip, r4
 801d4c0:	f893 c002 	ldrb.w	ip, [r3, #2]
 801d4c4:	fa1f fe88 	uxth.w	lr, r8
 801d4c8:	ea6f 0808 	mvn.w	r8, r8
 801d4cc:	fa5f f888 	uxtb.w	r8, r8
 801d4d0:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801d4d4:	fb1a fa08 	smulbb	sl, sl, r8
 801d4d8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801d4dc:	fb0c ac0e 	mla	ip, ip, lr, sl
 801d4e0:	f895 a001 	ldrb.w	sl, [r5, #1]
 801d4e4:	787c      	ldrb	r4, [r7, #1]
 801d4e6:	782d      	ldrb	r5, [r5, #0]
 801d4e8:	783f      	ldrb	r7, [r7, #0]
 801d4ea:	fb02 fa0a 	mul.w	sl, r2, sl
 801d4ee:	fb09 aa04 	mla	sl, r9, r4, sl
 801d4f2:	7874      	ldrb	r4, [r6, #1]
 801d4f4:	436a      	muls	r2, r5
 801d4f6:	7835      	ldrb	r5, [r6, #0]
 801d4f8:	fb00 aa04 	mla	sl, r0, r4, sl
 801d4fc:	fb09 2207 	mla	r2, r9, r7, r2
 801d500:	785c      	ldrb	r4, [r3, #1]
 801d502:	781b      	ldrb	r3, [r3, #0]
 801d504:	fb00 2005 	mla	r0, r0, r5, r2
 801d508:	fb0b a404 	mla	r4, fp, r4, sl
 801d50c:	fb0b 0b03 	mla	fp, fp, r3, r0
 801d510:	9b02      	ldr	r3, [sp, #8]
 801d512:	fb11 fa08 	smulbb	sl, r1, r8
 801d516:	fa1f fc8c 	uxth.w	ip, ip
 801d51a:	fb13 f808 	smulbb	r8, r3, r8
 801d51e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801d522:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801d526:	fb04 a40e 	mla	r4, r4, lr, sl
 801d52a:	f10c 0301 	add.w	r3, ip, #1
 801d52e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801d532:	fa1f fe8e 	uxth.w	lr, lr
 801d536:	b2a4      	uxth	r4, r4
 801d538:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d53c:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801d540:	f104 0a01 	add.w	sl, r4, #1
 801d544:	f10e 0c01 	add.w	ip, lr, #1
 801d548:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801d54c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801d550:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d554:	0964      	lsrs	r4, r4, #5
 801d556:	ea4c 0c03 	orr.w	ip, ip, r3
 801d55a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801d55e:	9b03      	ldr	r3, [sp, #12]
 801d560:	ea4c 0c04 	orr.w	ip, ip, r4
 801d564:	f8a3 c000 	strh.w	ip, [r3]
 801d568:	b007      	add	sp, #28
 801d56a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d56e:	af05      	add	r7, sp, #20
 801d570:	e756      	b.n	801d420 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801d572:	ad05      	add	r5, sp, #20
 801d574:	462f      	mov	r7, r5
 801d576:	e761      	b.n	801d43c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801d578:	ad05      	add	r5, sp, #20
 801d57a:	e75f      	b.n	801d43c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801d57c:	ae05      	add	r6, sp, #20
 801d57e:	e772      	b.n	801d466 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801d580:	ab05      	add	r3, sp, #20
 801d582:	461e      	mov	r6, r3
 801d584:	e77e      	b.n	801d484 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801d586:	ab05      	add	r3, sp, #20
 801d588:	e77c      	b.n	801d484 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801d58a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d58a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d58e:	b095      	sub	sp, #84	@ 0x54
 801d590:	9212      	str	r2, [sp, #72]	@ 0x48
 801d592:	9309      	str	r3, [sp, #36]	@ 0x24
 801d594:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801d596:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801d59a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d59c:	910e      	str	r1, [sp, #56]	@ 0x38
 801d59e:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801d5a2:	9013      	str	r0, [sp, #76]	@ 0x4c
 801d5a4:	6850      	ldr	r0, [r2, #4]
 801d5a6:	6812      	ldr	r2, [r2, #0]
 801d5a8:	fb00 1303 	mla	r3, r0, r3, r1
 801d5ac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d5b0:	930a      	str	r3, [sp, #40]	@ 0x28
 801d5b2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801d5b4:	681b      	ldr	r3, [r3, #0]
 801d5b6:	930d      	str	r3, [sp, #52]	@ 0x34
 801d5b8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801d5ba:	685c      	ldr	r4, [r3, #4]
 801d5bc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d5be:	43db      	mvns	r3, r3
 801d5c0:	b2db      	uxtb	r3, r3
 801d5c2:	3404      	adds	r4, #4
 801d5c4:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d5c6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d5c8:	2b00      	cmp	r3, #0
 801d5ca:	dc03      	bgt.n	801d5d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d5cc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801d5ce:	2b00      	cmp	r3, #0
 801d5d0:	f340 8255 	ble.w	801da7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801d5d4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801d5d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d5da:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d5de:	1e48      	subs	r0, r1, #1
 801d5e0:	1e55      	subs	r5, r2, #1
 801d5e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d5e4:	2b00      	cmp	r3, #0
 801d5e6:	f340 80f9 	ble.w	801d7dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d5ea:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801d5ec:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d5ee:	1436      	asrs	r6, r6, #16
 801d5f0:	ea4f 4323 	mov.w	r3, r3, asr #16
 801d5f4:	d406      	bmi.n	801d604 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d5f6:	4286      	cmp	r6, r0
 801d5f8:	da04      	bge.n	801d604 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d5fa:	2b00      	cmp	r3, #0
 801d5fc:	db02      	blt.n	801d604 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d5fe:	42ab      	cmp	r3, r5
 801d600:	f2c0 80ed 	blt.w	801d7de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801d604:	3601      	adds	r6, #1
 801d606:	f100 80da 	bmi.w	801d7be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801d60a:	42b1      	cmp	r1, r6
 801d60c:	f2c0 80d7 	blt.w	801d7be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801d610:	3301      	adds	r3, #1
 801d612:	f100 80d4 	bmi.w	801d7be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801d616:	429a      	cmp	r2, r3
 801d618:	f2c0 80d1 	blt.w	801d7be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801d61c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d61e:	9311      	str	r3, [sp, #68]	@ 0x44
 801d620:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d622:	930c      	str	r3, [sp, #48]	@ 0x30
 801d624:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d626:	2b00      	cmp	r3, #0
 801d628:	f340 80fa 	ble.w	801d820 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801d62c:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801d62e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d630:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801d632:	68c6      	ldr	r6, [r0, #12]
 801d634:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801d636:	141d      	asrs	r5, r3, #16
 801d638:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801d63c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d63e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801d640:	1400      	asrs	r0, r0, #16
 801d642:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801d646:	6892      	ldr	r2, [r2, #8]
 801d648:	f100 813e 	bmi.w	801d8c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801d64c:	1e57      	subs	r7, r2, #1
 801d64e:	42b8      	cmp	r0, r7
 801d650:	f280 813a 	bge.w	801d8c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801d654:	2d00      	cmp	r5, #0
 801d656:	f2c0 8137 	blt.w	801d8c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801d65a:	1e77      	subs	r7, r6, #1
 801d65c:	42bd      	cmp	r5, r7
 801d65e:	f280 8133 	bge.w	801d8c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801d662:	b212      	sxth	r2, r2
 801d664:	fb05 0002 	mla	r0, r5, r2, r0
 801d668:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801d66a:	f815 a000 	ldrb.w	sl, [r5, r0]
 801d66e:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801d672:	182e      	adds	r6, r5, r0
 801d674:	eb04 050a 	add.w	r5, r4, sl
 801d678:	2b00      	cmp	r3, #0
 801d67a:	f000 8117 	beq.w	801d8ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801d67e:	f896 c001 	ldrb.w	ip, [r6, #1]
 801d682:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801d686:	44a4      	add	ip, r4
 801d688:	2900      	cmp	r1, #0
 801d68a:	f000 8117 	beq.w	801d8bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801d68e:	18b0      	adds	r0, r6, r2
 801d690:	5cb2      	ldrb	r2, [r6, r2]
 801d692:	7840      	ldrb	r0, [r0, #1]
 801d694:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d698:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d69c:	4422      	add	r2, r4
 801d69e:	4420      	add	r0, r4
 801d6a0:	b29b      	uxth	r3, r3
 801d6a2:	b289      	uxth	r1, r1
 801d6a4:	fb03 f901 	mul.w	r9, r3, r1
 801d6a8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801d6ac:	011b      	lsls	r3, r3, #4
 801d6ae:	b289      	uxth	r1, r1
 801d6b0:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801d6b4:	f895 b002 	ldrb.w	fp, [r5, #2]
 801d6b8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801d6ba:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801d6be:	f8b6 e000 	ldrh.w	lr, [r6]
 801d6c2:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801d6c6:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801d6ca:	eba3 0309 	sub.w	r3, r3, r9
 801d6ce:	b29b      	uxth	r3, r3
 801d6d0:	eba8 0801 	sub.w	r8, r8, r1
 801d6d4:	fa1f f888 	uxth.w	r8, r8
 801d6d8:	435f      	muls	r7, r3
 801d6da:	fb08 770b 	mla	r7, r8, fp, r7
 801d6de:	f892 b002 	ldrb.w	fp, [r2, #2]
 801d6e2:	9310      	str	r3, [sp, #64]	@ 0x40
 801d6e4:	fb01 770b 	mla	r7, r1, fp, r7
 801d6e8:	f890 b002 	ldrb.w	fp, [r0, #2]
 801d6ec:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d6ee:	fb09 770b 	mla	r7, r9, fp, r7
 801d6f2:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801d6f6:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801d6fa:	fb1b fb03 	smulbb	fp, fp, r3
 801d6fe:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801d702:	fb07 b706 	mla	r7, r7, r6, fp
 801d706:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d708:	f895 b001 	ldrb.w	fp, [r5, #1]
 801d70c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801d710:	f89c c000 	ldrb.w	ip, [ip]
 801d714:	435d      	muls	r5, r3
 801d716:	fb08 550b 	mla	r5, r8, fp, r5
 801d71a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801d71e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d720:	fb01 550b 	mla	r5, r1, fp, r5
 801d724:	f890 b001 	ldrb.w	fp, [r0, #1]
 801d728:	fb09 550b 	mla	r5, r9, fp, r5
 801d72c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801d730:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801d734:	fb1b fb03 	smulbb	fp, fp, r3
 801d738:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d73a:	fb03 f30c 	mul.w	r3, r3, ip
 801d73e:	f892 c000 	ldrb.w	ip, [r2]
 801d742:	fb08 330a 	mla	r3, r8, sl, r3
 801d746:	fb01 330c 	mla	r3, r1, ip, r3
 801d74a:	f890 c000 	ldrb.w	ip, [r0]
 801d74e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d752:	fb09 3c0c 	mla	ip, r9, ip, r3
 801d756:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d758:	fa5f fe8e 	uxtb.w	lr, lr
 801d75c:	b2bf      	uxth	r7, r7
 801d75e:	fb1e fe03 	smulbb	lr, lr, r3
 801d762:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801d766:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801d76a:	fb05 b506 	mla	r5, r5, r6, fp
 801d76e:	1c7b      	adds	r3, r7, #1
 801d770:	fb0c e606 	mla	r6, ip, r6, lr
 801d774:	b2ad      	uxth	r5, r5
 801d776:	b2b6      	uxth	r6, r6
 801d778:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801d77c:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801d780:	f105 0b01 	add.w	fp, r5, #1
 801d784:	1c77      	adds	r7, r6, #1
 801d786:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801d78a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801d78e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d792:	096d      	lsrs	r5, r5, #5
 801d794:	431f      	orrs	r7, r3
 801d796:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d79a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d79c:	433d      	orrs	r5, r7
 801d79e:	801d      	strh	r5, [r3, #0]
 801d7a0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d7a2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801d7a4:	3302      	adds	r3, #2
 801d7a6:	930c      	str	r3, [sp, #48]	@ 0x30
 801d7a8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d7aa:	4413      	add	r3, r2
 801d7ac:	931f      	str	r3, [sp, #124]	@ 0x7c
 801d7ae:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801d7b0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d7b2:	4413      	add	r3, r2
 801d7b4:	9320      	str	r3, [sp, #128]	@ 0x80
 801d7b6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d7b8:	3b01      	subs	r3, #1
 801d7ba:	9311      	str	r3, [sp, #68]	@ 0x44
 801d7bc:	e732      	b.n	801d624 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d7be:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d7c0:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801d7c2:	4433      	add	r3, r6
 801d7c4:	931f      	str	r3, [sp, #124]	@ 0x7c
 801d7c6:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801d7c8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d7ca:	4433      	add	r3, r6
 801d7cc:	9320      	str	r3, [sp, #128]	@ 0x80
 801d7ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d7d0:	3b01      	subs	r3, #1
 801d7d2:	9309      	str	r3, [sp, #36]	@ 0x24
 801d7d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d7d6:	3302      	adds	r3, #2
 801d7d8:	930a      	str	r3, [sp, #40]	@ 0x28
 801d7da:	e702      	b.n	801d5e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d7dc:	d027      	beq.n	801d82e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801d7de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d7e0:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801d7e2:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801d7e4:	3b01      	subs	r3, #1
 801d7e6:	fb00 5003 	mla	r0, r0, r3, r5
 801d7ea:	1400      	asrs	r0, r0, #16
 801d7ec:	f53f af16 	bmi.w	801d61c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d7f0:	3901      	subs	r1, #1
 801d7f2:	4288      	cmp	r0, r1
 801d7f4:	f6bf af12 	bge.w	801d61c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d7f8:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801d7fa:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801d7fc:	fb01 0303 	mla	r3, r1, r3, r0
 801d800:	141b      	asrs	r3, r3, #16
 801d802:	f53f af0b 	bmi.w	801d61c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d806:	3a01      	subs	r2, #1
 801d808:	4293      	cmp	r3, r2
 801d80a:	f6bf af07 	bge.w	801d61c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d80e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d810:	9311      	str	r3, [sp, #68]	@ 0x44
 801d812:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801d816:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d818:	930c      	str	r3, [sp, #48]	@ 0x30
 801d81a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d81c:	2b00      	cmp	r3, #0
 801d81e:	dc70      	bgt.n	801d902 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801d820:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d822:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801d824:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d828:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d82c:	930a      	str	r3, [sp, #40]	@ 0x28
 801d82e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d830:	2b00      	cmp	r3, #0
 801d832:	f340 8124 	ble.w	801da7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801d836:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d83a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d83e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d842:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d844:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d848:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d84c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d850:	eef0 6a62 	vmov.f32	s13, s5
 801d854:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d858:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d85c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d860:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801d864:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d868:	eef0 6a43 	vmov.f32	s13, s6
 801d86c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d870:	ee12 2a90 	vmov	r2, s5
 801d874:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d878:	fb92 f3f3 	sdiv	r3, r2, r3
 801d87c:	ee13 2a10 	vmov	r2, s6
 801d880:	9321      	str	r3, [sp, #132]	@ 0x84
 801d882:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d884:	fb92 f3f3 	sdiv	r3, r2, r3
 801d888:	9322      	str	r3, [sp, #136]	@ 0x88
 801d88a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d88c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801d88e:	3b01      	subs	r3, #1
 801d890:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d894:	930e      	str	r3, [sp, #56]	@ 0x38
 801d896:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d898:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801d89c:	bf08      	it	eq
 801d89e:	4613      	moveq	r3, r2
 801d8a0:	9309      	str	r3, [sp, #36]	@ 0x24
 801d8a2:	eeb0 3a67 	vmov.f32	s6, s15
 801d8a6:	eef0 2a47 	vmov.f32	s5, s14
 801d8aa:	e68c      	b.n	801d5c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d8ac:	b149      	cbz	r1, 801d8c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801d8ae:	5cb2      	ldrb	r2, [r6, r2]
 801d8b0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d8b4:	4422      	add	r2, r4
 801d8b6:	4628      	mov	r0, r5
 801d8b8:	46ac      	mov	ip, r5
 801d8ba:	e6f1      	b.n	801d6a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d8bc:	4628      	mov	r0, r5
 801d8be:	462a      	mov	r2, r5
 801d8c0:	e6ee      	b.n	801d6a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d8c2:	4628      	mov	r0, r5
 801d8c4:	462a      	mov	r2, r5
 801d8c6:	e7f7      	b.n	801d8b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801d8c8:	1c47      	adds	r7, r0, #1
 801d8ca:	f53f af69 	bmi.w	801d7a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d8ce:	42ba      	cmp	r2, r7
 801d8d0:	f6ff af66 	blt.w	801d7a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d8d4:	1c6f      	adds	r7, r5, #1
 801d8d6:	f53f af63 	bmi.w	801d7a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d8da:	42be      	cmp	r6, r7
 801d8dc:	f6ff af60 	blt.w	801d7a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d8e0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801d8e2:	9002      	str	r0, [sp, #8]
 801d8e4:	b236      	sxth	r6, r6
 801d8e6:	b212      	sxth	r2, r2
 801d8e8:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801d8ec:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801d8f0:	9200      	str	r2, [sp, #0]
 801d8f2:	9601      	str	r6, [sp, #4]
 801d8f4:	4623      	mov	r3, r4
 801d8f6:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801d8fa:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801d8fc:	f7ff fd59 	bl	801d3b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801d900:	e74e      	b.n	801d7a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d902:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801d904:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801d906:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801d908:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d90a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801d90e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801d910:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801d914:	142d      	asrs	r5, r5, #16
 801d916:	1400      	asrs	r0, r0, #16
 801d918:	fb02 5000 	mla	r0, r2, r0, r5
 801d91c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801d91e:	f815 9000 	ldrb.w	r9, [r5, r0]
 801d922:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801d926:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801d92a:	182e      	adds	r6, r5, r0
 801d92c:	eb04 0509 	add.w	r5, r4, r9
 801d930:	2b00      	cmp	r3, #0
 801d932:	f000 8096 	beq.w	801da62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801d936:	7877      	ldrb	r7, [r6, #1]
 801d938:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801d93c:	4427      	add	r7, r4
 801d93e:	2900      	cmp	r1, #0
 801d940:	f000 8097 	beq.w	801da72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801d944:	18b0      	adds	r0, r6, r2
 801d946:	5cb2      	ldrb	r2, [r6, r2]
 801d948:	7840      	ldrb	r0, [r0, #1]
 801d94a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d94e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d952:	4422      	add	r2, r4
 801d954:	4420      	add	r0, r4
 801d956:	b29b      	uxth	r3, r3
 801d958:	b289      	uxth	r1, r1
 801d95a:	fb03 f801 	mul.w	r8, r3, r1
 801d95e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801d960:	f895 b002 	ldrb.w	fp, [r5, #2]
 801d964:	f8b6 c000 	ldrh.w	ip, [r6]
 801d968:	78be      	ldrb	r6, [r7, #2]
 801d96a:	f814 9009 	ldrb.w	r9, [r4, r9]
 801d96e:	011b      	lsls	r3, r3, #4
 801d970:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801d974:	b289      	uxth	r1, r1
 801d976:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801d97a:	eba3 0308 	sub.w	r3, r3, r8
 801d97e:	b29b      	uxth	r3, r3
 801d980:	ebae 0e01 	sub.w	lr, lr, r1
 801d984:	fa1f fe8e 	uxth.w	lr, lr
 801d988:	435e      	muls	r6, r3
 801d98a:	fb0e 660b 	mla	r6, lr, fp, r6
 801d98e:	f892 b002 	ldrb.w	fp, [r2, #2]
 801d992:	9310      	str	r3, [sp, #64]	@ 0x40
 801d994:	fb01 660b 	mla	r6, r1, fp, r6
 801d998:	f890 b002 	ldrb.w	fp, [r0, #2]
 801d99c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d99e:	fb08 660b 	mla	r6, r8, fp, r6
 801d9a2:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801d9a6:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801d9aa:	fb1b fb03 	smulbb	fp, fp, r3
 801d9ae:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801d9b2:	fb06 b60a 	mla	r6, r6, sl, fp
 801d9b6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d9b8:	f895 b001 	ldrb.w	fp, [r5, #1]
 801d9bc:	787d      	ldrb	r5, [r7, #1]
 801d9be:	783f      	ldrb	r7, [r7, #0]
 801d9c0:	435d      	muls	r5, r3
 801d9c2:	fb0e 550b 	mla	r5, lr, fp, r5
 801d9c6:	f892 b001 	ldrb.w	fp, [r2, #1]
 801d9ca:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d9cc:	fb01 550b 	mla	r5, r1, fp, r5
 801d9d0:	f890 b001 	ldrb.w	fp, [r0, #1]
 801d9d4:	fb08 550b 	mla	r5, r8, fp, r5
 801d9d8:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801d9dc:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801d9e0:	fb1b fb03 	smulbb	fp, fp, r3
 801d9e4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d9e6:	437b      	muls	r3, r7
 801d9e8:	7817      	ldrb	r7, [r2, #0]
 801d9ea:	fb0e 3309 	mla	r3, lr, r9, r3
 801d9ee:	fb01 3307 	mla	r3, r1, r7, r3
 801d9f2:	7807      	ldrb	r7, [r0, #0]
 801d9f4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d9f8:	fb08 3707 	mla	r7, r8, r7, r3
 801d9fc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d9fe:	fa5f fc8c 	uxtb.w	ip, ip
 801da02:	fb1c fc03 	smulbb	ip, ip, r3
 801da06:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801da0a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801da0e:	fb05 b50a 	mla	r5, r5, sl, fp
 801da12:	fb07 c70a 	mla	r7, r7, sl, ip
 801da16:	b2b6      	uxth	r6, r6
 801da18:	b2ad      	uxth	r5, r5
 801da1a:	b2bf      	uxth	r7, r7
 801da1c:	1c73      	adds	r3, r6, #1
 801da1e:	1c7a      	adds	r2, r7, #1
 801da20:	f105 0b01 	add.w	fp, r5, #1
 801da24:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801da28:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801da2c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801da30:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801da34:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801da38:	096d      	lsrs	r5, r5, #5
 801da3a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801da3c:	4316      	orrs	r6, r2
 801da3e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801da42:	432e      	orrs	r6, r5
 801da44:	f823 6b02 	strh.w	r6, [r3], #2
 801da48:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801da4a:	930c      	str	r3, [sp, #48]	@ 0x30
 801da4c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801da4e:	4413      	add	r3, r2
 801da50:	931f      	str	r3, [sp, #124]	@ 0x7c
 801da52:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801da54:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801da56:	4413      	add	r3, r2
 801da58:	9320      	str	r3, [sp, #128]	@ 0x80
 801da5a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801da5c:	3b01      	subs	r3, #1
 801da5e:	9311      	str	r3, [sp, #68]	@ 0x44
 801da60:	e6db      	b.n	801d81a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801da62:	b149      	cbz	r1, 801da78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801da64:	5cb2      	ldrb	r2, [r6, r2]
 801da66:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801da6a:	4422      	add	r2, r4
 801da6c:	4628      	mov	r0, r5
 801da6e:	462f      	mov	r7, r5
 801da70:	e771      	b.n	801d956 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801da72:	4628      	mov	r0, r5
 801da74:	462a      	mov	r2, r5
 801da76:	e76e      	b.n	801d956 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801da78:	4628      	mov	r0, r5
 801da7a:	462a      	mov	r2, r5
 801da7c:	e7f7      	b.n	801da6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801da7e:	b015      	add	sp, #84	@ 0x54
 801da80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801da84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801da84:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801da88:	880f      	ldrh	r7, [r1, #0]
 801da8a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801da8e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801da92:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801da96:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801da9a:	023c      	lsls	r4, r7, #8
 801da9c:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801daa0:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801daa4:	017c      	lsls	r4, r7, #5
 801daa6:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801daaa:	00ff      	lsls	r7, r7, #3
 801daac:	ea4b 0404 	orr.w	r4, fp, r4
 801dab0:	b2ff      	uxtb	r7, r7
 801dab2:	fb05 ca0e 	mla	sl, r5, lr, ip
 801dab6:	4327      	orrs	r7, r4
 801dab8:	2d00      	cmp	r5, #0
 801daba:	eb02 080a 	add.w	r8, r2, sl
 801dabe:	9701      	str	r7, [sp, #4]
 801dac0:	db7e      	blt.n	801dbc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801dac2:	45a9      	cmp	r9, r5
 801dac4:	dd7c      	ble.n	801dbc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801dac6:	f1bc 0f00 	cmp.w	ip, #0
 801daca:	db77      	blt.n	801dbbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801dacc:	45e6      	cmp	lr, ip
 801dace:	dd75      	ble.n	801dbbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801dad0:	f812 700a 	ldrb.w	r7, [r2, sl]
 801dad4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801dad8:	441f      	add	r7, r3
 801dada:	f11c 0201 	adds.w	r2, ip, #1
 801dade:	d472      	bmi.n	801dbc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801dae0:	4596      	cmp	lr, r2
 801dae2:	dd70      	ble.n	801dbc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801dae4:	2800      	cmp	r0, #0
 801dae6:	d06e      	beq.n	801dbc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801dae8:	f898 4001 	ldrb.w	r4, [r8, #1]
 801daec:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801daf0:	441c      	add	r4, r3
 801daf2:	3501      	adds	r5, #1
 801daf4:	d46b      	bmi.n	801dbce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801daf6:	45a9      	cmp	r9, r5
 801daf8:	dd69      	ble.n	801dbce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801dafa:	2e00      	cmp	r6, #0
 801dafc:	d067      	beq.n	801dbce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801dafe:	f1bc 0f00 	cmp.w	ip, #0
 801db02:	db62      	blt.n	801dbca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801db04:	45e6      	cmp	lr, ip
 801db06:	dd60      	ble.n	801dbca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801db08:	f818 500e 	ldrb.w	r5, [r8, lr]
 801db0c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801db10:	441d      	add	r5, r3
 801db12:	f11c 0201 	adds.w	r2, ip, #1
 801db16:	d45d      	bmi.n	801dbd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801db18:	4596      	cmp	lr, r2
 801db1a:	dd5b      	ble.n	801dbd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801db1c:	2800      	cmp	r0, #0
 801db1e:	d059      	beq.n	801dbd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801db20:	44c6      	add	lr, r8
 801db22:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801db26:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801db2a:	4413      	add	r3, r2
 801db2c:	b280      	uxth	r0, r0
 801db2e:	b2b2      	uxth	r2, r6
 801db30:	fb00 f602 	mul.w	r6, r0, r2
 801db34:	0100      	lsls	r0, r0, #4
 801db36:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801db3a:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801db3e:	1b80      	subs	r0, r0, r6
 801db40:	fa1f fc82 	uxth.w	ip, r2
 801db44:	b282      	uxth	r2, r0
 801db46:	78a0      	ldrb	r0, [r4, #2]
 801db48:	f897 e002 	ldrb.w	lr, [r7, #2]
 801db4c:	f897 9000 	ldrb.w	r9, [r7]
 801db50:	787f      	ldrb	r7, [r7, #1]
 801db52:	eba8 080c 	sub.w	r8, r8, ip
 801db56:	fa1f f888 	uxth.w	r8, r8
 801db5a:	4350      	muls	r0, r2
 801db5c:	fb08 0e0e 	mla	lr, r8, lr, r0
 801db60:	78a8      	ldrb	r0, [r5, #2]
 801db62:	fb0c e000 	mla	r0, ip, r0, lr
 801db66:	f893 e002 	ldrb.w	lr, [r3, #2]
 801db6a:	fb06 0e0e 	mla	lr, r6, lr, r0
 801db6e:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801db72:	f894 e000 	ldrb.w	lr, [r4]
 801db76:	fb02 fe0e 	mul.w	lr, r2, lr
 801db7a:	fb08 e909 	mla	r9, r8, r9, lr
 801db7e:	f895 e000 	ldrb.w	lr, [r5]
 801db82:	fb0c 990e 	mla	r9, ip, lr, r9
 801db86:	f893 e000 	ldrb.w	lr, [r3]
 801db8a:	785b      	ldrb	r3, [r3, #1]
 801db8c:	fb06 9e0e 	mla	lr, r6, lr, r9
 801db90:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801db94:	ea4e 0e00 	orr.w	lr, lr, r0
 801db98:	7860      	ldrb	r0, [r4, #1]
 801db9a:	4350      	muls	r0, r2
 801db9c:	786a      	ldrb	r2, [r5, #1]
 801db9e:	fb08 0007 	mla	r0, r8, r7, r0
 801dba2:	fb0c 0202 	mla	r2, ip, r2, r0
 801dba6:	fb06 2303 	mla	r3, r6, r3, r2
 801dbaa:	095b      	lsrs	r3, r3, #5
 801dbac:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801dbb0:	ea4e 0303 	orr.w	r3, lr, r3
 801dbb4:	800b      	strh	r3, [r1, #0]
 801dbb6:	b003      	add	sp, #12
 801dbb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dbbc:	af01      	add	r7, sp, #4
 801dbbe:	e78c      	b.n	801dada <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801dbc0:	ac01      	add	r4, sp, #4
 801dbc2:	4627      	mov	r7, r4
 801dbc4:	e795      	b.n	801daf2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801dbc6:	ac01      	add	r4, sp, #4
 801dbc8:	e793      	b.n	801daf2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801dbca:	ad01      	add	r5, sp, #4
 801dbcc:	e7a1      	b.n	801db12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801dbce:	ab01      	add	r3, sp, #4
 801dbd0:	461d      	mov	r5, r3
 801dbd2:	e7ab      	b.n	801db2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801dbd4:	ab01      	add	r3, sp, #4
 801dbd6:	e7a9      	b.n	801db2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801dbd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dbd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dbdc:	b08f      	sub	sp, #60	@ 0x3c
 801dbde:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801dbe2:	920c      	str	r2, [sp, #48]	@ 0x30
 801dbe4:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801dbe6:	910a      	str	r1, [sp, #40]	@ 0x28
 801dbe8:	9306      	str	r3, [sp, #24]
 801dbea:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801dbee:	900d      	str	r0, [sp, #52]	@ 0x34
 801dbf0:	6850      	ldr	r0, [r2, #4]
 801dbf2:	6812      	ldr	r2, [r2, #0]
 801dbf4:	fb00 1303 	mla	r3, r0, r3, r1
 801dbf8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801dbfc:	9307      	str	r3, [sp, #28]
 801dbfe:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dc00:	681b      	ldr	r3, [r3, #0]
 801dc02:	9308      	str	r3, [sp, #32]
 801dc04:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dc06:	685c      	ldr	r4, [r3, #4]
 801dc08:	3404      	adds	r4, #4
 801dc0a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801dc0c:	2b00      	cmp	r3, #0
 801dc0e:	dc03      	bgt.n	801dc18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801dc10:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801dc12:	2b00      	cmp	r3, #0
 801dc14:	f340 81d6 	ble.w	801dfc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801dc18:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dc1a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dc1e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801dc22:	1e48      	subs	r0, r1, #1
 801dc24:	1e56      	subs	r6, r2, #1
 801dc26:	9b06      	ldr	r3, [sp, #24]
 801dc28:	2b00      	cmp	r3, #0
 801dc2a:	f340 80b7 	ble.w	801dd9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801dc2e:	ea5f 472b 	movs.w	r7, fp, asr #16
 801dc32:	ea4f 4325 	mov.w	r3, r5, asr #16
 801dc36:	d406      	bmi.n	801dc46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801dc38:	4287      	cmp	r7, r0
 801dc3a:	da04      	bge.n	801dc46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801dc3c:	2b00      	cmp	r3, #0
 801dc3e:	db02      	blt.n	801dc46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801dc40:	42b3      	cmp	r3, r6
 801dc42:	f2c0 80ac 	blt.w	801dd9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801dc46:	3701      	adds	r7, #1
 801dc48:	f100 809d 	bmi.w	801dd86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801dc4c:	42b9      	cmp	r1, r7
 801dc4e:	f2c0 809a 	blt.w	801dd86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801dc52:	3301      	adds	r3, #1
 801dc54:	f100 8097 	bmi.w	801dd86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801dc58:	429a      	cmp	r2, r3
 801dc5a:	f2c0 8094 	blt.w	801dd86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801dc5e:	9b06      	ldr	r3, [sp, #24]
 801dc60:	930b      	str	r3, [sp, #44]	@ 0x2c
 801dc62:	9b07      	ldr	r3, [sp, #28]
 801dc64:	9309      	str	r3, [sp, #36]	@ 0x24
 801dc66:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801dc68:	2b00      	cmp	r3, #0
 801dc6a:	f340 80b5 	ble.w	801ddd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801dc6e:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801dc70:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801dc72:	68c7      	ldr	r7, [r0, #12]
 801dc74:	6892      	ldr	r2, [r2, #8]
 801dc76:	ea5f 402b 	movs.w	r0, fp, asr #16
 801dc7a:	ea4f 4625 	mov.w	r6, r5, asr #16
 801dc7e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801dc82:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801dc86:	f100 80fb 	bmi.w	801de80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801dc8a:	f102 3cff 	add.w	ip, r2, #4294967295
 801dc8e:	4560      	cmp	r0, ip
 801dc90:	f280 80f6 	bge.w	801de80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801dc94:	2e00      	cmp	r6, #0
 801dc96:	f2c0 80f3 	blt.w	801de80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801dc9a:	f107 3cff 	add.w	ip, r7, #4294967295
 801dc9e:	4566      	cmp	r6, ip
 801dca0:	f280 80ee 	bge.w	801de80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801dca4:	b212      	sxth	r2, r2
 801dca6:	fb06 0002 	mla	r0, r6, r2, r0
 801dcaa:	9e08      	ldr	r6, [sp, #32]
 801dcac:	1837      	adds	r7, r6, r0
 801dcae:	5c30      	ldrb	r0, [r6, r0]
 801dcb0:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801dcb4:	eb04 0c08 	add.w	ip, r4, r8
 801dcb8:	2b00      	cmp	r3, #0
 801dcba:	f000 80d3 	beq.w	801de64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801dcbe:	787e      	ldrb	r6, [r7, #1]
 801dcc0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801dcc4:	4426      	add	r6, r4
 801dcc6:	2900      	cmp	r1, #0
 801dcc8:	f000 80d4 	beq.w	801de74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801dccc:	18b8      	adds	r0, r7, r2
 801dcce:	5cba      	ldrb	r2, [r7, r2]
 801dcd0:	7840      	ldrb	r0, [r0, #1]
 801dcd2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801dcd6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801dcda:	4422      	add	r2, r4
 801dcdc:	4420      	add	r0, r4
 801dcde:	b29b      	uxth	r3, r3
 801dce0:	b289      	uxth	r1, r1
 801dce2:	fb03 f901 	mul.w	r9, r3, r1
 801dce6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801dcea:	011b      	lsls	r3, r3, #4
 801dcec:	b289      	uxth	r1, r1
 801dcee:	78b7      	ldrb	r7, [r6, #2]
 801dcf0:	f89c a002 	ldrb.w	sl, [ip, #2]
 801dcf4:	f89c c001 	ldrb.w	ip, [ip, #1]
 801dcf8:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801dcfc:	eba3 0309 	sub.w	r3, r3, r9
 801dd00:	b29b      	uxth	r3, r3
 801dd02:	ebae 0e01 	sub.w	lr, lr, r1
 801dd06:	fa1f fe8e 	uxth.w	lr, lr
 801dd0a:	435f      	muls	r7, r3
 801dd0c:	fb0e 770a 	mla	r7, lr, sl, r7
 801dd10:	f892 a002 	ldrb.w	sl, [r2, #2]
 801dd14:	fb01 770a 	mla	r7, r1, sl, r7
 801dd18:	f890 a002 	ldrb.w	sl, [r0, #2]
 801dd1c:	fb09 7a0a 	mla	sl, r9, sl, r7
 801dd20:	f814 7008 	ldrb.w	r7, [r4, r8]
 801dd24:	f896 8000 	ldrb.w	r8, [r6]
 801dd28:	7876      	ldrb	r6, [r6, #1]
 801dd2a:	fb03 f808 	mul.w	r8, r3, r8
 801dd2e:	fb0e 8807 	mla	r8, lr, r7, r8
 801dd32:	7817      	ldrb	r7, [r2, #0]
 801dd34:	fb01 8807 	mla	r8, r1, r7, r8
 801dd38:	7807      	ldrb	r7, [r0, #0]
 801dd3a:	fb09 8707 	mla	r7, r9, r7, r8
 801dd3e:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801dd42:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801dd46:	ea47 070a 	orr.w	r7, r7, sl
 801dd4a:	4373      	muls	r3, r6
 801dd4c:	f892 a001 	ldrb.w	sl, [r2, #1]
 801dd50:	fb0e 330c 	mla	r3, lr, ip, r3
 801dd54:	fb01 310a 	mla	r1, r1, sl, r3
 801dd58:	f890 a001 	ldrb.w	sl, [r0, #1]
 801dd5c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dd5e:	fb09 1a0a 	mla	sl, r9, sl, r1
 801dd62:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dd66:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801dd6a:	ea47 070a 	orr.w	r7, r7, sl
 801dd6e:	801f      	strh	r7, [r3, #0]
 801dd70:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dd72:	3302      	adds	r3, #2
 801dd74:	9309      	str	r3, [sp, #36]	@ 0x24
 801dd76:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801dd78:	449b      	add	fp, r3
 801dd7a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801dd7c:	441d      	add	r5, r3
 801dd7e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801dd80:	3b01      	subs	r3, #1
 801dd82:	930b      	str	r3, [sp, #44]	@ 0x2c
 801dd84:	e76f      	b.n	801dc66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801dd86:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801dd88:	449b      	add	fp, r3
 801dd8a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801dd8c:	441d      	add	r5, r3
 801dd8e:	9b06      	ldr	r3, [sp, #24]
 801dd90:	3b01      	subs	r3, #1
 801dd92:	9306      	str	r3, [sp, #24]
 801dd94:	9b07      	ldr	r3, [sp, #28]
 801dd96:	3302      	adds	r3, #2
 801dd98:	9307      	str	r3, [sp, #28]
 801dd9a:	e744      	b.n	801dc26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801dd9c:	d023      	beq.n	801dde6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801dd9e:	9b06      	ldr	r3, [sp, #24]
 801dda0:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801dda2:	3b01      	subs	r3, #1
 801dda4:	fb00 b003 	mla	r0, r0, r3, fp
 801dda8:	1400      	asrs	r0, r0, #16
 801ddaa:	f53f af58 	bmi.w	801dc5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ddae:	3901      	subs	r1, #1
 801ddb0:	4288      	cmp	r0, r1
 801ddb2:	f6bf af54 	bge.w	801dc5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ddb6:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801ddb8:	fb01 5303 	mla	r3, r1, r3, r5
 801ddbc:	141b      	asrs	r3, r3, #16
 801ddbe:	f53f af4e 	bmi.w	801dc5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ddc2:	3a01      	subs	r2, #1
 801ddc4:	4293      	cmp	r3, r2
 801ddc6:	f6bf af4a 	bge.w	801dc5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ddca:	9b06      	ldr	r3, [sp, #24]
 801ddcc:	9309      	str	r3, [sp, #36]	@ 0x24
 801ddce:	9b07      	ldr	r3, [sp, #28]
 801ddd0:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ddd2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ddd4:	2b00      	cmp	r3, #0
 801ddd6:	dc70      	bgt.n	801deba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801ddd8:	9b06      	ldr	r3, [sp, #24]
 801ddda:	9a07      	ldr	r2, [sp, #28]
 801dddc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801dde0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801dde4:	9307      	str	r3, [sp, #28]
 801dde6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801dde8:	2b00      	cmp	r3, #0
 801ddea:	f340 80eb 	ble.w	801dfc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801ddee:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ddf2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ddf6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ddfa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ddfc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801de00:	ee31 1a05 	vadd.f32	s2, s2, s10
 801de04:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801de08:	eef0 6a62 	vmov.f32	s13, s5
 801de0c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801de10:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801de14:	ee77 2a62 	vsub.f32	s5, s14, s5
 801de18:	ee16 ba90 	vmov	fp, s13
 801de1c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801de20:	eef0 6a43 	vmov.f32	s13, s6
 801de24:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801de28:	ee12 2a90 	vmov	r2, s5
 801de2c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801de30:	fb92 f3f3 	sdiv	r3, r2, r3
 801de34:	ee13 2a10 	vmov	r2, s6
 801de38:	931b      	str	r3, [sp, #108]	@ 0x6c
 801de3a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801de3c:	fb92 f3f3 	sdiv	r3, r2, r3
 801de40:	931c      	str	r3, [sp, #112]	@ 0x70
 801de42:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801de44:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801de46:	3b01      	subs	r3, #1
 801de48:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801de4c:	930a      	str	r3, [sp, #40]	@ 0x28
 801de4e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801de50:	bf08      	it	eq
 801de52:	4613      	moveq	r3, r2
 801de54:	ee16 5a90 	vmov	r5, s13
 801de58:	9306      	str	r3, [sp, #24]
 801de5a:	eeb0 3a67 	vmov.f32	s6, s15
 801de5e:	eef0 2a47 	vmov.f32	s5, s14
 801de62:	e6d2      	b.n	801dc0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801de64:	b149      	cbz	r1, 801de7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801de66:	5cba      	ldrb	r2, [r7, r2]
 801de68:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801de6c:	4422      	add	r2, r4
 801de6e:	4660      	mov	r0, ip
 801de70:	4666      	mov	r6, ip
 801de72:	e734      	b.n	801dcde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801de74:	4660      	mov	r0, ip
 801de76:	4662      	mov	r2, ip
 801de78:	e731      	b.n	801dcde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801de7a:	4660      	mov	r0, ip
 801de7c:	4662      	mov	r2, ip
 801de7e:	e7f7      	b.n	801de70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801de80:	f110 0c01 	adds.w	ip, r0, #1
 801de84:	f53f af74 	bmi.w	801dd70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801de88:	4562      	cmp	r2, ip
 801de8a:	f6ff af71 	blt.w	801dd70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801de8e:	f116 0c01 	adds.w	ip, r6, #1
 801de92:	f53f af6d 	bmi.w	801dd70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801de96:	4567      	cmp	r7, ip
 801de98:	f6ff af6a 	blt.w	801dd70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801de9c:	b23f      	sxth	r7, r7
 801de9e:	b212      	sxth	r2, r2
 801dea0:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801dea4:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801dea8:	9200      	str	r2, [sp, #0]
 801deaa:	9701      	str	r7, [sp, #4]
 801deac:	4623      	mov	r3, r4
 801deae:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801deb2:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801deb4:	f7ff fde6 	bl	801da84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801deb8:	e75a      	b.n	801dd70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801deba:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801debc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801dec0:	ea4f 462b 	mov.w	r6, fp, asr #16
 801dec4:	1428      	asrs	r0, r5, #16
 801dec6:	fb02 6000 	mla	r0, r2, r0, r6
 801deca:	9e08      	ldr	r6, [sp, #32]
 801decc:	f816 8000 	ldrb.w	r8, [r6, r0]
 801ded0:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801ded4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801ded8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801dedc:	1837      	adds	r7, r6, r0
 801dede:	eb04 0c08 	add.w	ip, r4, r8
 801dee2:	2b00      	cmp	r3, #0
 801dee4:	d060      	beq.n	801dfa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801dee6:	787e      	ldrb	r6, [r7, #1]
 801dee8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801deec:	4426      	add	r6, r4
 801deee:	2900      	cmp	r1, #0
 801def0:	d062      	beq.n	801dfb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801def2:	18b8      	adds	r0, r7, r2
 801def4:	5cba      	ldrb	r2, [r7, r2]
 801def6:	7840      	ldrb	r0, [r0, #1]
 801def8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801defc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801df00:	4422      	add	r2, r4
 801df02:	4420      	add	r0, r4
 801df04:	b29b      	uxth	r3, r3
 801df06:	b289      	uxth	r1, r1
 801df08:	fb03 f901 	mul.w	r9, r3, r1
 801df0c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801df10:	011b      	lsls	r3, r3, #4
 801df12:	b289      	uxth	r1, r1
 801df14:	78b7      	ldrb	r7, [r6, #2]
 801df16:	f89c a002 	ldrb.w	sl, [ip, #2]
 801df1a:	f89c c001 	ldrb.w	ip, [ip, #1]
 801df1e:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801df22:	eba3 0309 	sub.w	r3, r3, r9
 801df26:	b29b      	uxth	r3, r3
 801df28:	ebae 0e01 	sub.w	lr, lr, r1
 801df2c:	fa1f fe8e 	uxth.w	lr, lr
 801df30:	435f      	muls	r7, r3
 801df32:	fb0e 770a 	mla	r7, lr, sl, r7
 801df36:	f892 a002 	ldrb.w	sl, [r2, #2]
 801df3a:	fb01 770a 	mla	r7, r1, sl, r7
 801df3e:	f890 a002 	ldrb.w	sl, [r0, #2]
 801df42:	fb09 7a0a 	mla	sl, r9, sl, r7
 801df46:	f814 7008 	ldrb.w	r7, [r4, r8]
 801df4a:	f896 8000 	ldrb.w	r8, [r6]
 801df4e:	7876      	ldrb	r6, [r6, #1]
 801df50:	fb03 f808 	mul.w	r8, r3, r8
 801df54:	fb0e 8807 	mla	r8, lr, r7, r8
 801df58:	7817      	ldrb	r7, [r2, #0]
 801df5a:	fb01 8807 	mla	r8, r1, r7, r8
 801df5e:	7807      	ldrb	r7, [r0, #0]
 801df60:	fb09 8707 	mla	r7, r9, r7, r8
 801df64:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801df68:	4373      	muls	r3, r6
 801df6a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801df6e:	7856      	ldrb	r6, [r2, #1]
 801df70:	ea47 070a 	orr.w	r7, r7, sl
 801df74:	fb0e 330c 	mla	r3, lr, ip, r3
 801df78:	f890 a001 	ldrb.w	sl, [r0, #1]
 801df7c:	fb01 3306 	mla	r3, r1, r6, r3
 801df80:	fb09 3a0a 	mla	sl, r9, sl, r3
 801df84:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801df88:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801df8a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801df8e:	ea47 070a 	orr.w	r7, r7, sl
 801df92:	f823 7b02 	strh.w	r7, [r3], #2
 801df96:	930b      	str	r3, [sp, #44]	@ 0x2c
 801df98:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801df9a:	449b      	add	fp, r3
 801df9c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801df9e:	441d      	add	r5, r3
 801dfa0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dfa2:	3b01      	subs	r3, #1
 801dfa4:	9309      	str	r3, [sp, #36]	@ 0x24
 801dfa6:	e714      	b.n	801ddd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801dfa8:	b149      	cbz	r1, 801dfbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801dfaa:	5cba      	ldrb	r2, [r7, r2]
 801dfac:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801dfb0:	4422      	add	r2, r4
 801dfb2:	4660      	mov	r0, ip
 801dfb4:	4666      	mov	r6, ip
 801dfb6:	e7a5      	b.n	801df04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801dfb8:	4660      	mov	r0, ip
 801dfba:	4662      	mov	r2, ip
 801dfbc:	e7a2      	b.n	801df04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801dfbe:	4660      	mov	r0, ip
 801dfc0:	4662      	mov	r2, ip
 801dfc2:	e7f7      	b.n	801dfb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801dfc4:	b00f      	add	sp, #60	@ 0x3c
 801dfc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dfca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801dfca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dfce:	b085      	sub	sp, #20
 801dfd0:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801dfd4:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801dfd8:	9102      	str	r1, [sp, #8]
 801dfda:	2c00      	cmp	r4, #0
 801dfdc:	fb04 710c 	mla	r1, r4, ip, r7
 801dfe0:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801dfe4:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801dfe8:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801dfec:	eb02 0e01 	add.w	lr, r2, r1
 801dff0:	f2c0 8122 	blt.w	801e238 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801dff4:	45a0      	cmp	r8, r4
 801dff6:	f340 811f 	ble.w	801e238 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801dffa:	2f00      	cmp	r7, #0
 801dffc:	f2c0 811a 	blt.w	801e234 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801e000:	45bc      	cmp	ip, r7
 801e002:	f340 8117 	ble.w	801e234 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801e006:	5c52      	ldrb	r2, [r2, r1]
 801e008:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801e00c:	1c7a      	adds	r2, r7, #1
 801e00e:	f100 8116 	bmi.w	801e23e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801e012:	4594      	cmp	ip, r2
 801e014:	f340 8113 	ble.w	801e23e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801e018:	2e00      	cmp	r6, #0
 801e01a:	f000 8112 	beq.w	801e242 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801e01e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e022:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801e026:	3401      	adds	r4, #1
 801e028:	f100 810f 	bmi.w	801e24a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801e02c:	45a0      	cmp	r8, r4
 801e02e:	f340 810c 	ble.w	801e24a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801e032:	2800      	cmp	r0, #0
 801e034:	f000 810c 	beq.w	801e250 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801e038:	2f00      	cmp	r7, #0
 801e03a:	f2c0 8104 	blt.w	801e246 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801e03e:	45bc      	cmp	ip, r7
 801e040:	f340 8101 	ble.w	801e246 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801e044:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801e048:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801e04c:	3701      	adds	r7, #1
 801e04e:	f100 8102 	bmi.w	801e256 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801e052:	45bc      	cmp	ip, r7
 801e054:	f340 80ff 	ble.w	801e256 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801e058:	2e00      	cmp	r6, #0
 801e05a:	f000 80fe 	beq.w	801e25a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801e05e:	44f4      	add	ip, lr
 801e060:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801e064:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801e068:	b2b6      	uxth	r6, r6
 801e06a:	b280      	uxth	r0, r0
 801e06c:	fb00 fe06 	mul.w	lr, r0, r6
 801e070:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e074:	0136      	lsls	r6, r6, #4
 801e076:	eba6 070e 	sub.w	r7, r6, lr
 801e07a:	b280      	uxth	r0, r0
 801e07c:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801e080:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e084:	b2bf      	uxth	r7, r7
 801e086:	1a1b      	subs	r3, r3, r0
 801e088:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e08c:	b29b      	uxth	r3, r3
 801e08e:	fb0a f607 	mul.w	r6, sl, r7
 801e092:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e096:	fb0b 6603 	mla	r6, fp, r3, r6
 801e09a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e09e:	fb00 6609 	mla	r6, r0, r9, r6
 801e0a2:	fb0e 6608 	mla	r6, lr, r8, r6
 801e0a6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e0aa:	9600      	str	r6, [sp, #0]
 801e0ac:	2e00      	cmp	r6, #0
 801e0ae:	f000 80be 	beq.w	801e22e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801e0b2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e0b6:	fb0b fc0c 	mul.w	ip, fp, ip
 801e0ba:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801e0be:	fb0b f505 	mul.w	r5, fp, r5
 801e0c2:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e0c6:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801e0ca:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e0ce:	44dc      	add	ip, fp
 801e0d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e0d4:	9501      	str	r5, [sp, #4]
 801e0d6:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801e0da:	9503      	str	r5, [sp, #12]
 801e0dc:	9d01      	ldr	r5, [sp, #4]
 801e0de:	9e02      	ldr	r6, [sp, #8]
 801e0e0:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801e0e4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e0e8:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801e0ec:	fb0a fc0c 	mul.w	ip, sl, ip
 801e0f0:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e0f4:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e0f8:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e0fc:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e100:	4465      	add	r5, ip
 801e102:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e106:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801e10a:	fb09 fc0c 	mul.w	ip, r9, ip
 801e10e:	fb09 f904 	mul.w	r9, r9, r4
 801e112:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801e116:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e11a:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801e11e:	fb08 f404 	mul.w	r4, r8, r4
 801e122:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e126:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e12a:	fb08 f802 	mul.w	r8, r8, r2
 801e12e:	fb0a fa01 	mul.w	sl, sl, r1
 801e132:	0a22      	lsrs	r2, r4, #8
 801e134:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801e138:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e13c:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801e140:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e144:	4414      	add	r4, r2
 801e146:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e14a:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801e14e:	0a2d      	lsrs	r5, r5, #8
 801e150:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e154:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e158:	9a03      	ldr	r2, [sp, #12]
 801e15a:	8836      	ldrh	r6, [r6, #0]
 801e15c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e160:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e164:	437d      	muls	r5, r7
 801e166:	4461      	add	r1, ip
 801e168:	0a24      	lsrs	r4, r4, #8
 801e16a:	fb02 5503 	mla	r5, r2, r3, r5
 801e16e:	0a09      	lsrs	r1, r1, #8
 801e170:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801e174:	fb04 540e 	mla	r4, r4, lr, r5
 801e178:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e17c:	fb01 4100 	mla	r1, r1, r0, r4
 801e180:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e184:	0a09      	lsrs	r1, r1, #8
 801e186:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e18a:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801e18e:	fb07 f70a 	mul.w	r7, r7, sl
 801e192:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e196:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801e19a:	fb03 7101 	mla	r1, r3, r1, r7
 801e19e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e1a2:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801e1a6:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e1aa:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801e1ae:	fb00 e101 	mla	r1, r0, r1, lr
 801e1b2:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801e1b6:	9a00      	ldr	r2, [sp, #0]
 801e1b8:	b287      	uxth	r7, r0
 801e1ba:	437a      	muls	r2, r7
 801e1bc:	0a09      	lsrs	r1, r1, #8
 801e1be:	1c53      	adds	r3, r2, #1
 801e1c0:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e1c4:	4321      	orrs	r1, r4
 801e1c6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e1ca:	1235      	asrs	r5, r6, #8
 801e1cc:	0c0a      	lsrs	r2, r1, #16
 801e1ce:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801e1d2:	b2db      	uxtb	r3, r3
 801e1d4:	fb12 f207 	smulbb	r2, r2, r7
 801e1d8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e1dc:	fb05 2503 	mla	r5, r5, r3, r2
 801e1e0:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801e1e4:	10f2      	asrs	r2, r6, #3
 801e1e6:	b2c8      	uxtb	r0, r1
 801e1e8:	00f6      	lsls	r6, r6, #3
 801e1ea:	fb14 f407 	smulbb	r4, r4, r7
 801e1ee:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e1f2:	b2f6      	uxtb	r6, r6
 801e1f4:	fb10 f007 	smulbb	r0, r0, r7
 801e1f8:	fb02 4203 	mla	r2, r2, r3, r4
 801e1fc:	b2ad      	uxth	r5, r5
 801e1fe:	fb06 0303 	mla	r3, r6, r3, r0
 801e202:	b299      	uxth	r1, r3
 801e204:	b294      	uxth	r4, r2
 801e206:	1c6b      	adds	r3, r5, #1
 801e208:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e20c:	1c62      	adds	r2, r4, #1
 801e20e:	1c4b      	adds	r3, r1, #1
 801e210:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801e214:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801e218:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e21c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e220:	0952      	lsrs	r2, r2, #5
 801e222:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e226:	432b      	orrs	r3, r5
 801e228:	4313      	orrs	r3, r2
 801e22a:	9a02      	ldr	r2, [sp, #8]
 801e22c:	8013      	strh	r3, [r2, #0]
 801e22e:	b005      	add	sp, #20
 801e230:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e234:	2500      	movs	r5, #0
 801e236:	e6e9      	b.n	801e00c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801e238:	2100      	movs	r1, #0
 801e23a:	460d      	mov	r5, r1
 801e23c:	e6f3      	b.n	801e026 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801e23e:	2100      	movs	r1, #0
 801e240:	e6f1      	b.n	801e026 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801e242:	4631      	mov	r1, r6
 801e244:	e6ef      	b.n	801e026 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801e246:	2400      	movs	r4, #0
 801e248:	e700      	b.n	801e04c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801e24a:	2200      	movs	r2, #0
 801e24c:	4614      	mov	r4, r2
 801e24e:	e70b      	b.n	801e068 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801e250:	4602      	mov	r2, r0
 801e252:	4604      	mov	r4, r0
 801e254:	e708      	b.n	801e068 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801e256:	2200      	movs	r2, #0
 801e258:	e706      	b.n	801e068 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801e25a:	4632      	mov	r2, r6
 801e25c:	e704      	b.n	801e068 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801e25e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e25e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e262:	b09f      	sub	sp, #124	@ 0x7c
 801e264:	921b      	str	r2, [sp, #108]	@ 0x6c
 801e266:	9309      	str	r3, [sp, #36]	@ 0x24
 801e268:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801e26a:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801e26e:	931c      	str	r3, [sp, #112]	@ 0x70
 801e270:	9119      	str	r1, [sp, #100]	@ 0x64
 801e272:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801e276:	901d      	str	r0, [sp, #116]	@ 0x74
 801e278:	6850      	ldr	r0, [r2, #4]
 801e27a:	6812      	ldr	r2, [r2, #0]
 801e27c:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801e27e:	fb00 1303 	mla	r3, r0, r3, r1
 801e282:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e286:	930c      	str	r3, [sp, #48]	@ 0x30
 801e288:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801e28a:	681b      	ldr	r3, [r3, #0]
 801e28c:	9312      	str	r3, [sp, #72]	@ 0x48
 801e28e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801e290:	685e      	ldr	r6, [r3, #4]
 801e292:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801e296:	930d      	str	r3, [sp, #52]	@ 0x34
 801e298:	3604      	adds	r6, #4
 801e29a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801e29c:	2b00      	cmp	r3, #0
 801e29e:	dc03      	bgt.n	801e2a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801e2a0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e2a2:	2b00      	cmp	r3, #0
 801e2a4:	f340 8388 	ble.w	801e9b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801e2a8:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801e2aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e2ae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e2b2:	1e48      	subs	r0, r1, #1
 801e2b4:	1e57      	subs	r7, r2, #1
 801e2b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e2b8:	2b00      	cmp	r3, #0
 801e2ba:	f340 8195 	ble.w	801e5e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e2be:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801e2c0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e2c4:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e2c8:	d406      	bmi.n	801e2d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e2ca:	4584      	cmp	ip, r0
 801e2cc:	da04      	bge.n	801e2d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e2ce:	2b00      	cmp	r3, #0
 801e2d0:	db02      	blt.n	801e2d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e2d2:	42bb      	cmp	r3, r7
 801e2d4:	f2c0 8189 	blt.w	801e5ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801e2d8:	f11c 0c01 	adds.w	ip, ip, #1
 801e2dc:	f100 8177 	bmi.w	801e5ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e2e0:	4561      	cmp	r1, ip
 801e2e2:	f2c0 8174 	blt.w	801e5ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e2e6:	3301      	adds	r3, #1
 801e2e8:	f100 8171 	bmi.w	801e5ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e2ec:	429a      	cmp	r2, r3
 801e2ee:	f2c0 816e 	blt.w	801e5ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e2f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e2f4:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801e2f6:	931a      	str	r3, [sp, #104]	@ 0x68
 801e2f8:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801e2fa:	2b00      	cmp	r3, #0
 801e2fc:	f340 8193 	ble.w	801e626 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801e300:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801e302:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e306:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801e308:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801e30c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801e30e:	141b      	asrs	r3, r3, #16
 801e310:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801e314:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e318:	f100 81d6 	bmi.w	801e6c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801e31c:	f100 38ff 	add.w	r8, r0, #4294967295
 801e320:	4543      	cmp	r3, r8
 801e322:	f280 81d1 	bge.w	801e6c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801e326:	f1bc 0f00 	cmp.w	ip, #0
 801e32a:	f2c0 81cd 	blt.w	801e6c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801e32e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e332:	45c4      	cmp	ip, r8
 801e334:	f280 81c8 	bge.w	801e6c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801e338:	b200      	sxth	r0, r0
 801e33a:	fb0c 3300 	mla	r3, ip, r0, r3
 801e33e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801e340:	eb04 0803 	add.w	r8, r4, r3
 801e344:	5ce3      	ldrb	r3, [r4, r3]
 801e346:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801e34a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801e34e:	2a00      	cmp	r2, #0
 801e350:	f000 81af 	beq.w	801e6b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801e354:	f898 c001 	ldrb.w	ip, [r8, #1]
 801e358:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801e35c:	940e      	str	r4, [sp, #56]	@ 0x38
 801e35e:	0e24      	lsrs	r4, r4, #24
 801e360:	9415      	str	r4, [sp, #84]	@ 0x54
 801e362:	b179      	cbz	r1, 801e384 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801e364:	eb08 0c00 	add.w	ip, r8, r0
 801e368:	f818 0000 	ldrb.w	r0, [r8, r0]
 801e36c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801e370:	900a      	str	r0, [sp, #40]	@ 0x28
 801e372:	0e00      	lsrs	r0, r0, #24
 801e374:	9013      	str	r0, [sp, #76]	@ 0x4c
 801e376:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801e37a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801e37e:	900f      	str	r0, [sp, #60]	@ 0x3c
 801e380:	0e00      	lsrs	r0, r0, #24
 801e382:	9016      	str	r0, [sp, #88]	@ 0x58
 801e384:	b292      	uxth	r2, r2
 801e386:	b289      	uxth	r1, r1
 801e388:	fb02 f901 	mul.w	r9, r2, r1
 801e38c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e390:	0112      	lsls	r2, r2, #4
 801e392:	eba2 0809 	sub.w	r8, r2, r9
 801e396:	b289      	uxth	r1, r1
 801e398:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801e39c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801e39e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801e3a0:	fa1f f888 	uxth.w	r8, r8
 801e3a4:	1a52      	subs	r2, r2, r1
 801e3a6:	b292      	uxth	r2, r2
 801e3a8:	fb08 f000 	mul.w	r0, r8, r0
 801e3ac:	fb02 000e 	mla	r0, r2, lr, r0
 801e3b0:	fb01 0004 	mla	r0, r1, r4, r0
 801e3b4:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801e3b6:	fb09 0004 	mla	r0, r9, r4, r0
 801e3ba:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801e3be:	2800      	cmp	r0, #0
 801e3c0:	f000 80fa 	beq.w	801e5b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e3c4:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801e3c8:	d01b      	beq.n	801e402 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801e3ca:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801e3ce:	fb0e fa0a 	mul.w	sl, lr, sl
 801e3d2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e3d6:	fb0e fe03 	mul.w	lr, lr, r3
 801e3da:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e3de:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e3e2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801e3e6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801e3ea:	4453      	add	r3, sl
 801e3ec:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e3f0:	0a1b      	lsrs	r3, r3, #8
 801e3f2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e3f6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e3fa:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e3fe:	ea43 030c 	orr.w	r3, r3, ip
 801e402:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801e404:	2cff      	cmp	r4, #255	@ 0xff
 801e406:	d021      	beq.n	801e44c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e408:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801e40a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801e40e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801e410:	fb04 fb0b 	mul.w	fp, r4, fp
 801e414:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801e416:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e41a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801e41c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e420:	fb04 fa0a 	mul.w	sl, r4, sl
 801e424:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e428:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e42c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e430:	44de      	add	lr, fp
 801e432:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e436:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e43a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e43e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e442:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e446:	ea4e 040a 	orr.w	r4, lr, sl
 801e44a:	940e      	str	r4, [sp, #56]	@ 0x38
 801e44c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801e44e:	2cff      	cmp	r4, #255	@ 0xff
 801e450:	d021      	beq.n	801e496 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801e452:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801e454:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801e458:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801e45a:	fb04 fb0b 	mul.w	fp, r4, fp
 801e45e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801e460:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e464:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801e466:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e46a:	fb04 fa0a 	mul.w	sl, r4, sl
 801e46e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e472:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e476:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e47a:	44de      	add	lr, fp
 801e47c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e480:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e484:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e488:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e48c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e490:	ea4e 040a 	orr.w	r4, lr, sl
 801e494:	940a      	str	r4, [sp, #40]	@ 0x28
 801e496:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801e498:	2cff      	cmp	r4, #255	@ 0xff
 801e49a:	d021      	beq.n	801e4e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801e49c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801e49e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801e4a2:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801e4a4:	fb04 fb0b 	mul.w	fp, r4, fp
 801e4a8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801e4aa:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e4ae:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801e4b0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e4b4:	fb04 fa0a 	mul.w	sl, r4, sl
 801e4b8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e4bc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e4c0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e4c4:	44de      	add	lr, fp
 801e4c6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e4ca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e4ce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e4d2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e4d6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e4da:	ea4e 040a 	orr.w	r4, lr, sl
 801e4de:	940f      	str	r4, [sp, #60]	@ 0x3c
 801e4e0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801e4e2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e4e6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801e4e8:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801e4ec:	fb08 fc0c 	mul.w	ip, r8, ip
 801e4f0:	fb02 cc0e 	mla	ip, r2, lr, ip
 801e4f4:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801e4f8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801e4fa:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e4fe:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801e502:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801e504:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e508:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801e50c:	fb08 f80e 	mul.w	r8, r8, lr
 801e510:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e514:	fb02 8303 	mla	r3, r2, r3, r8
 801e518:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801e51a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801e51c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801e520:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801e522:	fb01 330a 	mla	r3, r1, sl, r3
 801e526:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801e52a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801e52c:	fb09 3901 	mla	r9, r9, r1, r3
 801e530:	4342      	muls	r2, r0
 801e532:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e536:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e53a:	883b      	ldrh	r3, [r7, #0]
 801e53c:	1c50      	adds	r0, r2, #1
 801e53e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e542:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801e546:	ea4c 0c09 	orr.w	ip, ip, r9
 801e54a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e54e:	1219      	asrs	r1, r3, #8
 801e550:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e554:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e558:	b2c0      	uxtb	r0, r0
 801e55a:	fb12 f204 	smulbb	r2, r2, r4
 801e55e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e562:	fb01 2100 	mla	r1, r1, r0, r2
 801e566:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e56a:	10da      	asrs	r2, r3, #3
 801e56c:	fa5f fc8c 	uxtb.w	ip, ip
 801e570:	00db      	lsls	r3, r3, #3
 801e572:	fb1c fc04 	smulbb	ip, ip, r4
 801e576:	b2db      	uxtb	r3, r3
 801e578:	b289      	uxth	r1, r1
 801e57a:	fb03 c300 	mla	r3, r3, r0, ip
 801e57e:	fa1f fc83 	uxth.w	ip, r3
 801e582:	1c4b      	adds	r3, r1, #1
 801e584:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e588:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e58c:	fb1e fe04 	smulbb	lr, lr, r4
 801e590:	f10c 0301 	add.w	r3, ip, #1
 801e594:	fb02 e200 	mla	r2, r2, r0, lr
 801e598:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e59c:	b292      	uxth	r2, r2
 801e59e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801e5a2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e5a6:	430b      	orrs	r3, r1
 801e5a8:	1c51      	adds	r1, r2, #1
 801e5aa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e5ae:	0952      	lsrs	r2, r2, #5
 801e5b0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e5b4:	4313      	orrs	r3, r2
 801e5b6:	803b      	strh	r3, [r7, #0]
 801e5b8:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801e5ba:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801e5bc:	441a      	add	r2, r3
 801e5be:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e5c0:	9229      	str	r2, [sp, #164]	@ 0xa4
 801e5c2:	441d      	add	r5, r3
 801e5c4:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801e5c6:	3b01      	subs	r3, #1
 801e5c8:	3702      	adds	r7, #2
 801e5ca:	931a      	str	r3, [sp, #104]	@ 0x68
 801e5cc:	e694      	b.n	801e2f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801e5ce:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801e5d0:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801e5d2:	441c      	add	r4, r3
 801e5d4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e5d6:	9429      	str	r4, [sp, #164]	@ 0xa4
 801e5d8:	441d      	add	r5, r3
 801e5da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e5dc:	3b01      	subs	r3, #1
 801e5de:	9309      	str	r3, [sp, #36]	@ 0x24
 801e5e0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e5e2:	3302      	adds	r3, #2
 801e5e4:	930c      	str	r3, [sp, #48]	@ 0x30
 801e5e6:	e666      	b.n	801e2b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801e5e8:	d024      	beq.n	801e634 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801e5ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e5ec:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801e5ee:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801e5f0:	3b01      	subs	r3, #1
 801e5f2:	fb00 4003 	mla	r0, r0, r3, r4
 801e5f6:	1400      	asrs	r0, r0, #16
 801e5f8:	f53f ae7b 	bmi.w	801e2f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e5fc:	3901      	subs	r1, #1
 801e5fe:	4288      	cmp	r0, r1
 801e600:	f6bf ae77 	bge.w	801e2f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e604:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801e606:	fb01 5303 	mla	r3, r1, r3, r5
 801e60a:	141b      	asrs	r3, r3, #16
 801e60c:	f53f ae71 	bmi.w	801e2f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e610:	3a01      	subs	r2, #1
 801e612:	4293      	cmp	r3, r2
 801e614:	f6bf ae6d 	bge.w	801e2f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e618:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801e61c:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801e620:	f1bb 0f00 	cmp.w	fp, #0
 801e624:	dc70      	bgt.n	801e708 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801e626:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e628:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e62c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e62e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801e632:	930c      	str	r3, [sp, #48]	@ 0x30
 801e634:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801e636:	2b00      	cmp	r3, #0
 801e638:	f340 81be 	ble.w	801e9b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801e63c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e640:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e644:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e648:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e64a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e64e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e652:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e656:	eef0 6a62 	vmov.f32	s13, s5
 801e65a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e65e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e662:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e666:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801e66a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e66e:	eef0 6a43 	vmov.f32	s13, s6
 801e672:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e676:	ee12 2a90 	vmov	r2, s5
 801e67a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e67e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e682:	ee13 2a10 	vmov	r2, s6
 801e686:	932b      	str	r3, [sp, #172]	@ 0xac
 801e688:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e68a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e68e:	932c      	str	r3, [sp, #176]	@ 0xb0
 801e690:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801e692:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801e694:	3b01      	subs	r3, #1
 801e696:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e69a:	9319      	str	r3, [sp, #100]	@ 0x64
 801e69c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e69e:	bf08      	it	eq
 801e6a0:	4613      	moveq	r3, r2
 801e6a2:	ee16 5a90 	vmov	r5, s13
 801e6a6:	9309      	str	r3, [sp, #36]	@ 0x24
 801e6a8:	eeb0 3a67 	vmov.f32	s6, s15
 801e6ac:	eef0 2a47 	vmov.f32	s5, s14
 801e6b0:	e5f3      	b.n	801e29a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801e6b2:	2900      	cmp	r1, #0
 801e6b4:	f43f ae66 	beq.w	801e384 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801e6b8:	f818 0000 	ldrb.w	r0, [r8, r0]
 801e6bc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801e6c0:	900a      	str	r0, [sp, #40]	@ 0x28
 801e6c2:	0e00      	lsrs	r0, r0, #24
 801e6c4:	9013      	str	r0, [sp, #76]	@ 0x4c
 801e6c6:	e65d      	b.n	801e384 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801e6c8:	f113 0801 	adds.w	r8, r3, #1
 801e6cc:	f53f af74 	bmi.w	801e5b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e6d0:	4540      	cmp	r0, r8
 801e6d2:	f6ff af71 	blt.w	801e5b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e6d6:	f11c 0801 	adds.w	r8, ip, #1
 801e6da:	f53f af6d 	bmi.w	801e5b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e6de:	45c6      	cmp	lr, r8
 801e6e0:	f6ff af6a 	blt.w	801e5b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e6e4:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801e6e6:	9302      	str	r3, [sp, #8]
 801e6e8:	b200      	sxth	r0, r0
 801e6ea:	fa0f f38e 	sxth.w	r3, lr
 801e6ee:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801e6f2:	e9cd c203 	strd	ip, r2, [sp, #12]
 801e6f6:	9301      	str	r3, [sp, #4]
 801e6f8:	9000      	str	r0, [sp, #0]
 801e6fa:	4633      	mov	r3, r6
 801e6fc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801e6fe:	981d      	ldr	r0, [sp, #116]	@ 0x74
 801e700:	4639      	mov	r1, r7
 801e702:	f7ff fc62 	bl	801dfca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801e706:	e757      	b.n	801e5b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e708:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801e70a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801e70c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e710:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801e712:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e716:	1427      	asrs	r7, r4, #16
 801e718:	142b      	asrs	r3, r5, #16
 801e71a:	fb01 7303 	mla	r3, r1, r3, r7
 801e71e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801e720:	18e7      	adds	r7, r4, r3
 801e722:	5ce3      	ldrb	r3, [r4, r3]
 801e724:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801e728:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801e72c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e730:	2a00      	cmp	r2, #0
 801e732:	f000 8137 	beq.w	801e9a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801e736:	f897 e001 	ldrb.w	lr, [r7, #1]
 801e73a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801e73e:	9410      	str	r4, [sp, #64]	@ 0x40
 801e740:	0e24      	lsrs	r4, r4, #24
 801e742:	9417      	str	r4, [sp, #92]	@ 0x5c
 801e744:	b170      	cbz	r0, 801e764 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801e746:	eb07 0e01 	add.w	lr, r7, r1
 801e74a:	5c79      	ldrb	r1, [r7, r1]
 801e74c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e750:	910b      	str	r1, [sp, #44]	@ 0x2c
 801e752:	0e09      	lsrs	r1, r1, #24
 801e754:	9114      	str	r1, [sp, #80]	@ 0x50
 801e756:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801e75a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e75e:	9111      	str	r1, [sp, #68]	@ 0x44
 801e760:	0e09      	lsrs	r1, r1, #24
 801e762:	9118      	str	r1, [sp, #96]	@ 0x60
 801e764:	b292      	uxth	r2, r2
 801e766:	b280      	uxth	r0, r0
 801e768:	fb02 f800 	mul.w	r8, r2, r0
 801e76c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e770:	0112      	lsls	r2, r2, #4
 801e772:	eba2 0e08 	sub.w	lr, r2, r8
 801e776:	b280      	uxth	r0, r0
 801e778:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801e77c:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801e77e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801e780:	fa1f fe8e 	uxth.w	lr, lr
 801e784:	1a12      	subs	r2, r2, r0
 801e786:	b292      	uxth	r2, r2
 801e788:	fb0e f101 	mul.w	r1, lr, r1
 801e78c:	fb02 110c 	mla	r1, r2, ip, r1
 801e790:	fb00 1104 	mla	r1, r0, r4, r1
 801e794:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801e796:	fb08 1104 	mla	r1, r8, r4, r1
 801e79a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e79e:	2900      	cmp	r1, #0
 801e7a0:	f000 80f5 	beq.w	801e98e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e7a4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801e7a8:	d019      	beq.n	801e7de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801e7aa:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801e7ae:	fb0c fa0a 	mul.w	sl, ip, sl
 801e7b2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e7b6:	fb0c fc03 	mul.w	ip, ip, r3
 801e7ba:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e7be:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e7c2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801e7c6:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801e7ca:	4453      	add	r3, sl
 801e7cc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e7d0:	0a1b      	lsrs	r3, r3, #8
 801e7d2:	0a3f      	lsrs	r7, r7, #8
 801e7d4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e7d8:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801e7dc:	433b      	orrs	r3, r7
 801e7de:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801e7e0:	2cff      	cmp	r4, #255	@ 0xff
 801e7e2:	d020      	beq.n	801e826 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801e7e4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801e7e6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801e7ea:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801e7ec:	4367      	muls	r7, r4
 801e7ee:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801e7f0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e7f4:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801e7f6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e7fa:	fb04 fa0a 	mul.w	sl, r4, sl
 801e7fe:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e802:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e806:	44bc      	add	ip, r7
 801e808:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e80c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e810:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e814:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e818:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e81c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e820:	ea4c 040a 	orr.w	r4, ip, sl
 801e824:	9410      	str	r4, [sp, #64]	@ 0x40
 801e826:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801e828:	2cff      	cmp	r4, #255	@ 0xff
 801e82a:	d020      	beq.n	801e86e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801e82c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e82e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801e832:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801e834:	4367      	muls	r7, r4
 801e836:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e838:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e83c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801e83e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e842:	fb04 fa0a 	mul.w	sl, r4, sl
 801e846:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e84a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e84e:	44bc      	add	ip, r7
 801e850:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e854:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e858:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e85c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e860:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e864:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e868:	ea4c 040a 	orr.w	r4, ip, sl
 801e86c:	940b      	str	r4, [sp, #44]	@ 0x2c
 801e86e:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801e870:	2cff      	cmp	r4, #255	@ 0xff
 801e872:	d020      	beq.n	801e8b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801e874:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801e876:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801e87a:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801e87c:	4367      	muls	r7, r4
 801e87e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801e880:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e884:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801e886:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e88a:	fb04 fa0a 	mul.w	sl, r4, sl
 801e88e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e892:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e896:	44bc      	add	ip, r7
 801e898:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e89c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e8a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e8a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e8a8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e8ac:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e8b0:	ea4c 040a 	orr.w	r4, ip, sl
 801e8b4:	9411      	str	r4, [sp, #68]	@ 0x44
 801e8b6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801e8b8:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801e8bc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e8be:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801e8c2:	fb0e f707 	mul.w	r7, lr, r7
 801e8c6:	fb02 770c 	mla	r7, r2, ip, r7
 801e8ca:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e8ce:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801e8d0:	fb00 770c 	mla	r7, r0, ip, r7
 801e8d4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e8d8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801e8da:	fb08 770c 	mla	r7, r8, ip, r7
 801e8de:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801e8e2:	fb0e fe0c 	mul.w	lr, lr, ip
 801e8e6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e8ea:	fb02 e303 	mla	r3, r2, r3, lr
 801e8ee:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e8f0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801e8f2:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801e8f6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801e8f8:	fb00 330a 	mla	r3, r0, sl, r3
 801e8fc:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801e900:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e904:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e906:	f8b9 0000 	ldrh.w	r0, [r9]
 801e90a:	434b      	muls	r3, r1
 801e90c:	0a3f      	lsrs	r7, r7, #8
 801e90e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e912:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e916:	1c59      	adds	r1, r3, #1
 801e918:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801e91c:	ea47 070c 	orr.w	r7, r7, ip
 801e920:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801e924:	1202      	asrs	r2, r0, #8
 801e926:	0c3b      	lsrs	r3, r7, #16
 801e928:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801e92c:	b2c9      	uxtb	r1, r1
 801e92e:	fb13 f304 	smulbb	r3, r3, r4
 801e932:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801e936:	fb02 3201 	mla	r2, r2, r1, r3
 801e93a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801e93e:	10c3      	asrs	r3, r0, #3
 801e940:	b2ff      	uxtb	r7, r7
 801e942:	00c0      	lsls	r0, r0, #3
 801e944:	b292      	uxth	r2, r2
 801e946:	fb1c fc04 	smulbb	ip, ip, r4
 801e94a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801e94e:	b2c0      	uxtb	r0, r0
 801e950:	fb17 f704 	smulbb	r7, r7, r4
 801e954:	fb03 c301 	mla	r3, r3, r1, ip
 801e958:	fb00 7001 	mla	r0, r0, r1, r7
 801e95c:	f102 0c01 	add.w	ip, r2, #1
 801e960:	b280      	uxth	r0, r0
 801e962:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801e966:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801e96a:	1c42      	adds	r2, r0, #1
 801e96c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801e970:	b29b      	uxth	r3, r3
 801e972:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e976:	ea42 020c 	orr.w	r2, r2, ip
 801e97a:	f103 0c01 	add.w	ip, r3, #1
 801e97e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801e982:	095b      	lsrs	r3, r3, #5
 801e984:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e988:	431a      	orrs	r2, r3
 801e98a:	f8a9 2000 	strh.w	r2, [r9]
 801e98e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801e990:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801e992:	441a      	add	r2, r3
 801e994:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e996:	9229      	str	r2, [sp, #164]	@ 0xa4
 801e998:	f109 0902 	add.w	r9, r9, #2
 801e99c:	441d      	add	r5, r3
 801e99e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e9a2:	e63d      	b.n	801e620 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801e9a4:	2800      	cmp	r0, #0
 801e9a6:	f43f aedd 	beq.w	801e764 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801e9aa:	5c79      	ldrb	r1, [r7, r1]
 801e9ac:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e9b0:	910b      	str	r1, [sp, #44]	@ 0x2c
 801e9b2:	0e09      	lsrs	r1, r1, #24
 801e9b4:	9114      	str	r1, [sp, #80]	@ 0x50
 801e9b6:	e6d5      	b.n	801e764 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801e9b8:	b01f      	add	sp, #124	@ 0x7c
 801e9ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e9be <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801e9be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e9c2:	b089      	sub	sp, #36	@ 0x24
 801e9c4:	9101      	str	r1, [sp, #4]
 801e9c6:	9801      	ldr	r0, [sp, #4]
 801e9c8:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801e9cc:	8800      	ldrh	r0, [r0, #0]
 801e9ce:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801e9d2:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801e9d6:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801e9da:	1206      	asrs	r6, r0, #8
 801e9dc:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 801e9e0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801e9e4:	9602      	str	r6, [sp, #8]
 801e9e6:	10c6      	asrs	r6, r0, #3
 801e9e8:	00c0      	lsls	r0, r0, #3
 801e9ea:	b2c0      	uxtb	r0, r0
 801e9ec:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801e9f0:	9004      	str	r0, [sp, #16]
 801e9f2:	2f00      	cmp	r7, #0
 801e9f4:	fb07 100c 	mla	r0, r7, ip, r1
 801e9f8:	9603      	str	r6, [sp, #12]
 801e9fa:	eb02 0e00 	add.w	lr, r2, r0
 801e9fe:	f2c0 810a 	blt.w	801ec16 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801ea02:	45b8      	cmp	r8, r7
 801ea04:	f340 8107 	ble.w	801ec16 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801ea08:	2900      	cmp	r1, #0
 801ea0a:	f2c0 8102 	blt.w	801ec12 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801ea0e:	458c      	cmp	ip, r1
 801ea10:	f340 80ff 	ble.w	801ec12 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801ea14:	5c12      	ldrb	r2, [r2, r0]
 801ea16:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801ea1a:	1c4a      	adds	r2, r1, #1
 801ea1c:	f100 80fe 	bmi.w	801ec1c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801ea20:	4594      	cmp	ip, r2
 801ea22:	f340 80fb 	ble.w	801ec1c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801ea26:	2d00      	cmp	r5, #0
 801ea28:	f000 80fa 	beq.w	801ec20 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801ea2c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ea30:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801ea34:	3701      	adds	r7, #1
 801ea36:	f100 80f7 	bmi.w	801ec28 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801ea3a:	45b8      	cmp	r8, r7
 801ea3c:	f340 80f4 	ble.w	801ec28 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801ea40:	2c00      	cmp	r4, #0
 801ea42:	f000 80f4 	beq.w	801ec2e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801ea46:	2900      	cmp	r1, #0
 801ea48:	eb0e 020c 	add.w	r2, lr, ip
 801ea4c:	f2c0 80ea 	blt.w	801ec24 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801ea50:	458c      	cmp	ip, r1
 801ea52:	f340 80e7 	ble.w	801ec24 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801ea56:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801ea5a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801ea5e:	3101      	adds	r1, #1
 801ea60:	f100 80e8 	bmi.w	801ec34 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801ea64:	458c      	cmp	ip, r1
 801ea66:	f340 80e5 	ble.w	801ec34 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801ea6a:	2d00      	cmp	r5, #0
 801ea6c:	f000 80e4 	beq.w	801ec38 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801ea70:	7852      	ldrb	r2, [r2, #1]
 801ea72:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801ea76:	0e0b      	lsrs	r3, r1, #24
 801ea78:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801ea7c:	9300      	str	r3, [sp, #0]
 801ea7e:	b2a4      	uxth	r4, r4
 801ea80:	b2ab      	uxth	r3, r5
 801ea82:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801ea86:	fb03 f904 	mul.w	r9, r3, r4
 801ea8a:	fb0a f505 	mul.w	r5, sl, r5
 801ea8e:	011b      	lsls	r3, r3, #4
 801ea90:	eba3 0e09 	sub.w	lr, r3, r9
 801ea94:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801ea98:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 801ea9c:	0a28      	lsrs	r0, r5, #8
 801ea9e:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801eaa2:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801eaa6:	4405      	add	r5, r0
 801eaa8:	0a2d      	lsrs	r5, r5, #8
 801eaaa:	fb0a f303 	mul.w	r3, sl, r3
 801eaae:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801eab2:	9005      	str	r0, [sp, #20]
 801eab4:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801eab8:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801eabc:	0a1b      	lsrs	r3, r3, #8
 801eabe:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801eac2:	9306      	str	r3, [sp, #24]
 801eac4:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801eac8:	fb0b f303 	mul.w	r3, fp, r3
 801eacc:	0a1d      	lsrs	r5, r3, #8
 801eace:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801ead2:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801ead6:	fb0b f606 	mul.w	r6, fp, r6
 801eada:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801eade:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801eae2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801eae6:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801eaea:	fb08 f707 	mul.w	r7, r8, r7
 801eaee:	441d      	add	r5, r3
 801eaf0:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801eaf4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801eaf8:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801eafc:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801eb00:	fb08 fc0c 	mul.w	ip, r8, ip
 801eb04:	0a1b      	lsrs	r3, r3, #8
 801eb06:	9307      	str	r3, [sp, #28]
 801eb08:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801eb0c:	0e0b      	lsrs	r3, r1, #24
 801eb0e:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801eb12:	435f      	muls	r7, r3
 801eb14:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801eb18:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801eb1c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801eb20:	4460      	add	r0, ip
 801eb22:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801eb26:	b2a4      	uxth	r4, r4
 801eb28:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801eb2c:	0a2d      	lsrs	r5, r5, #8
 801eb2e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801eb32:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801eb36:	fa1f fe8e 	uxth.w	lr, lr
 801eb3a:	4359      	muls	r1, r3
 801eb3c:	1b12      	subs	r2, r2, r4
 801eb3e:	9b05      	ldr	r3, [sp, #20]
 801eb40:	44bc      	add	ip, r7
 801eb42:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801eb46:	b292      	uxth	r2, r2
 801eb48:	fb05 f50e 	mul.w	r5, r5, lr
 801eb4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eb50:	fb03 5502 	mla	r5, r3, r2, r5
 801eb54:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801eb58:	9b06      	ldr	r3, [sp, #24]
 801eb5a:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801eb5e:	0a36      	lsrs	r6, r6, #8
 801eb60:	0a00      	lsrs	r0, r0, #8
 801eb62:	fb0c 5509 	mla	r5, ip, r9, r5
 801eb66:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801eb6a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801eb6e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801eb72:	fb00 5504 	mla	r5, r0, r4, r5
 801eb76:	fb0e f606 	mul.w	r6, lr, r6
 801eb7a:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 801eb7e:	0a09      	lsrs	r1, r1, #8
 801eb80:	9b07      	ldr	r3, [sp, #28]
 801eb82:	fb02 6000 	mla	r0, r2, r0, r6
 801eb86:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801eb8a:	fb09 0001 	mla	r0, r9, r1, r0
 801eb8e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801eb92:	fb0e fe0b 	mul.w	lr, lr, fp
 801eb96:	fb04 0003 	mla	r0, r4, r3, r0
 801eb9a:	fb02 e20a 	mla	r2, r2, sl, lr
 801eb9e:	9b00      	ldr	r3, [sp, #0]
 801eba0:	fb04 2408 	mla	r4, r4, r8, r2
 801eba4:	fb09 4903 	mla	r9, r9, r3, r4
 801eba8:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801ebac:	9b02      	ldr	r3, [sp, #8]
 801ebae:	9a04      	ldr	r2, [sp, #16]
 801ebb0:	fa5f f989 	uxtb.w	r9, r9
 801ebb4:	fb03 f109 	mul.w	r1, r3, r9
 801ebb8:	9b03      	ldr	r3, [sp, #12]
 801ebba:	0a2d      	lsrs	r5, r5, #8
 801ebbc:	0a00      	lsrs	r0, r0, #8
 801ebbe:	fb03 f309 	mul.w	r3, r3, r9
 801ebc2:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801ebc6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801ebca:	4305      	orrs	r5, r0
 801ebcc:	fb02 f909 	mul.w	r9, r2, r9
 801ebd0:	1c58      	adds	r0, r3, #1
 801ebd2:	1c4a      	adds	r2, r1, #1
 801ebd4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801ebd8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ebdc:	0a2b      	lsrs	r3, r5, #8
 801ebde:	0c2a      	lsrs	r2, r5, #16
 801ebe0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ebe4:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801ebe8:	00db      	lsls	r3, r3, #3
 801ebea:	0212      	lsls	r2, r2, #8
 801ebec:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801ebf0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ebf4:	4313      	orrs	r3, r2
 801ebf6:	f109 0201 	add.w	r2, r9, #1
 801ebfa:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801ebfe:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801ec02:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ec06:	431d      	orrs	r5, r3
 801ec08:	9b01      	ldr	r3, [sp, #4]
 801ec0a:	801d      	strh	r5, [r3, #0]
 801ec0c:	b009      	add	sp, #36	@ 0x24
 801ec0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ec12:	2000      	movs	r0, #0
 801ec14:	e701      	b.n	801ea1a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801ec16:	2600      	movs	r6, #0
 801ec18:	4630      	mov	r0, r6
 801ec1a:	e70b      	b.n	801ea34 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801ec1c:	2600      	movs	r6, #0
 801ec1e:	e709      	b.n	801ea34 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801ec20:	462e      	mov	r6, r5
 801ec22:	e707      	b.n	801ea34 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801ec24:	2700      	movs	r7, #0
 801ec26:	e71a      	b.n	801ea5e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801ec28:	2100      	movs	r1, #0
 801ec2a:	460f      	mov	r7, r1
 801ec2c:	e723      	b.n	801ea76 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801ec2e:	4621      	mov	r1, r4
 801ec30:	4627      	mov	r7, r4
 801ec32:	e720      	b.n	801ea76 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801ec34:	2100      	movs	r1, #0
 801ec36:	e71e      	b.n	801ea76 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801ec38:	4629      	mov	r1, r5
 801ec3a:	e71c      	b.n	801ea76 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801ec3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ec3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ec40:	b09b      	sub	sp, #108	@ 0x6c
 801ec42:	9218      	str	r2, [sp, #96]	@ 0x60
 801ec44:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801ec46:	9116      	str	r1, [sp, #88]	@ 0x58
 801ec48:	9307      	str	r3, [sp, #28]
 801ec4a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801ec4e:	9019      	str	r0, [sp, #100]	@ 0x64
 801ec50:	6850      	ldr	r0, [r2, #4]
 801ec52:	6812      	ldr	r2, [r2, #0]
 801ec54:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801ec56:	fb00 1303 	mla	r3, r0, r3, r1
 801ec5a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ec5e:	930a      	str	r3, [sp, #40]	@ 0x28
 801ec60:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ec62:	681b      	ldr	r3, [r3, #0]
 801ec64:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ec66:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ec68:	685e      	ldr	r6, [r3, #4]
 801ec6a:	3604      	adds	r6, #4
 801ec6c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801ec6e:	2b00      	cmp	r3, #0
 801ec70:	dc03      	bgt.n	801ec7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ec72:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ec74:	2b00      	cmp	r3, #0
 801ec76:	f340 8373 	ble.w	801f360 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801ec7a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ec7c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ec80:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ec84:	1e48      	subs	r0, r1, #1
 801ec86:	1e57      	subs	r7, r2, #1
 801ec88:	9b07      	ldr	r3, [sp, #28]
 801ec8a:	2b00      	cmp	r3, #0
 801ec8c:	f340 8190 	ble.w	801efb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801ec90:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801ec92:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ec96:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ec9a:	d406      	bmi.n	801ecaa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ec9c:	4584      	cmp	ip, r0
 801ec9e:	da04      	bge.n	801ecaa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801eca0:	2b00      	cmp	r3, #0
 801eca2:	db02      	blt.n	801ecaa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801eca4:	42bb      	cmp	r3, r7
 801eca6:	f2c0 8184 	blt.w	801efb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801ecaa:	f11c 0c01 	adds.w	ip, ip, #1
 801ecae:	f100 8172 	bmi.w	801ef96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ecb2:	4561      	cmp	r1, ip
 801ecb4:	f2c0 816f 	blt.w	801ef96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ecb8:	3301      	adds	r3, #1
 801ecba:	f100 816c 	bmi.w	801ef96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ecbe:	429a      	cmp	r2, r3
 801ecc0:	f2c0 8169 	blt.w	801ef96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ecc4:	9b07      	ldr	r3, [sp, #28]
 801ecc6:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801ecc8:	9317      	str	r3, [sp, #92]	@ 0x5c
 801ecca:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801eccc:	2b00      	cmp	r3, #0
 801ecce:	f340 818e 	ble.w	801efee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801ecd2:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801ecd4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ecd8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ecda:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801ecde:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801ece0:	141b      	asrs	r3, r3, #16
 801ece2:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ece6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ecea:	f100 81d1 	bmi.w	801f090 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ecee:	f101 38ff 	add.w	r8, r1, #4294967295
 801ecf2:	4543      	cmp	r3, r8
 801ecf4:	f280 81cc 	bge.w	801f090 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ecf8:	f1bc 0f00 	cmp.w	ip, #0
 801ecfc:	f2c0 81c8 	blt.w	801f090 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ed00:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ed04:	45c4      	cmp	ip, r8
 801ed06:	f280 81c3 	bge.w	801f090 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ed0a:	b209      	sxth	r1, r1
 801ed0c:	fb0c 3301 	mla	r3, ip, r1, r3
 801ed10:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801ed12:	eb04 0803 	add.w	r8, r4, r3
 801ed16:	5ce3      	ldrb	r3, [r4, r3]
 801ed18:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ed1c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801ed20:	2a00      	cmp	r2, #0
 801ed22:	f000 81aa 	beq.w	801f07a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801ed26:	f898 c001 	ldrb.w	ip, [r8, #1]
 801ed2a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801ed2e:	940b      	str	r4, [sp, #44]	@ 0x2c
 801ed30:	0e24      	lsrs	r4, r4, #24
 801ed32:	9412      	str	r4, [sp, #72]	@ 0x48
 801ed34:	b178      	cbz	r0, 801ed56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801ed36:	eb08 0c01 	add.w	ip, r8, r1
 801ed3a:	f818 1001 	ldrb.w	r1, [r8, r1]
 801ed3e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ed42:	9108      	str	r1, [sp, #32]
 801ed44:	0e09      	lsrs	r1, r1, #24
 801ed46:	9110      	str	r1, [sp, #64]	@ 0x40
 801ed48:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801ed4c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ed50:	910c      	str	r1, [sp, #48]	@ 0x30
 801ed52:	0e09      	lsrs	r1, r1, #24
 801ed54:	9113      	str	r1, [sp, #76]	@ 0x4c
 801ed56:	b292      	uxth	r2, r2
 801ed58:	b280      	uxth	r0, r0
 801ed5a:	fb02 f900 	mul.w	r9, r2, r0
 801ed5e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ed62:	0112      	lsls	r2, r2, #4
 801ed64:	eba2 0809 	sub.w	r8, r2, r9
 801ed68:	b280      	uxth	r0, r0
 801ed6a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801ed6e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801ed70:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ed72:	fa1f f888 	uxth.w	r8, r8
 801ed76:	1a12      	subs	r2, r2, r0
 801ed78:	b292      	uxth	r2, r2
 801ed7a:	fb08 f101 	mul.w	r1, r8, r1
 801ed7e:	fb02 110e 	mla	r1, r2, lr, r1
 801ed82:	fb00 1104 	mla	r1, r0, r4, r1
 801ed86:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ed88:	fb09 1104 	mla	r1, r9, r4, r1
 801ed8c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801ed90:	2900      	cmp	r1, #0
 801ed92:	f000 80f5 	beq.w	801ef80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801ed96:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801ed9a:	d01b      	beq.n	801edd4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ed9c:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801eda0:	fb0e fa0a 	mul.w	sl, lr, sl
 801eda4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801eda8:	fb0e fe03 	mul.w	lr, lr, r3
 801edac:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801edb0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801edb4:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801edb8:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801edbc:	4453      	add	r3, sl
 801edbe:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801edc2:	0a1b      	lsrs	r3, r3, #8
 801edc4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801edc8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801edcc:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801edd0:	ea43 030c 	orr.w	r3, r3, ip
 801edd4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801edd6:	2cff      	cmp	r4, #255	@ 0xff
 801edd8:	d021      	beq.n	801ee1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801edda:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801eddc:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801ede0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801ede2:	fb04 fb0b 	mul.w	fp, r4, fp
 801ede6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ede8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801edec:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801edee:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801edf2:	fb04 fa0a 	mul.w	sl, r4, sl
 801edf6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801edfa:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801edfe:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ee02:	44de      	add	lr, fp
 801ee04:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ee08:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ee0c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ee10:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ee14:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ee18:	ea4e 040a 	orr.w	r4, lr, sl
 801ee1c:	940b      	str	r4, [sp, #44]	@ 0x2c
 801ee1e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ee20:	2cff      	cmp	r4, #255	@ 0xff
 801ee22:	d021      	beq.n	801ee68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801ee24:	9c08      	ldr	r4, [sp, #32]
 801ee26:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801ee2a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ee2c:	fb04 fb0b 	mul.w	fp, r4, fp
 801ee30:	9c08      	ldr	r4, [sp, #32]
 801ee32:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801ee36:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ee38:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ee3c:	fb04 fa0a 	mul.w	sl, r4, sl
 801ee40:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ee44:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ee48:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ee4c:	44de      	add	lr, fp
 801ee4e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ee52:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ee56:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ee5a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ee5e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ee62:	ea4e 040a 	orr.w	r4, lr, sl
 801ee66:	9408      	str	r4, [sp, #32]
 801ee68:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ee6a:	2cff      	cmp	r4, #255	@ 0xff
 801ee6c:	d021      	beq.n	801eeb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ee6e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801ee70:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801ee74:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ee76:	fb04 fb0b 	mul.w	fp, r4, fp
 801ee7a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801ee7c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801ee80:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ee82:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ee86:	fb04 fa0a 	mul.w	sl, r4, sl
 801ee8a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ee8e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ee92:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ee96:	44de      	add	lr, fp
 801ee98:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ee9c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801eea0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eea4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801eea8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801eeac:	ea4e 040a 	orr.w	r4, lr, sl
 801eeb0:	940c      	str	r4, [sp, #48]	@ 0x30
 801eeb2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801eeb4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801eeb8:	9c08      	ldr	r4, [sp, #32]
 801eeba:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801eebe:	fb08 fc0c 	mul.w	ip, r8, ip
 801eec2:	fb02 cc0e 	mla	ip, r2, lr, ip
 801eec6:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801eeca:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801eecc:	fb00 cc0e 	mla	ip, r0, lr, ip
 801eed0:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801eed4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801eed6:	fb09 cc0e 	mla	ip, r9, lr, ip
 801eeda:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801eede:	fb08 f80e 	mul.w	r8, r8, lr
 801eee2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801eee6:	fb02 8303 	mla	r3, r2, r3, r8
 801eeea:	9a08      	ldr	r2, [sp, #32]
 801eeec:	f8b7 8000 	ldrh.w	r8, [r7]
 801eef0:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801eef4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801eef6:	fb00 330a 	mla	r3, r0, sl, r3
 801eefa:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801eefe:	fb09 3900 	mla	r9, r9, r0, r3
 801ef02:	43c9      	mvns	r1, r1
 801ef04:	ea4f 2228 	mov.w	r2, r8, asr #8
 801ef08:	fa5f fe81 	uxtb.w	lr, r1
 801ef0c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef10:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ef14:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801ef18:	fb02 f20e 	mul.w	r2, r2, lr
 801ef1c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ef20:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801ef24:	ea4c 0c09 	orr.w	ip, ip, r9
 801ef28:	1c53      	adds	r3, r2, #1
 801ef2a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801ef2e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801ef32:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801ef36:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ef3a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801ef3e:	4a63      	ldr	r2, [pc, #396]	@ (801f0cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801ef40:	fb00 f00e 	mul.w	r0, r0, lr
 801ef44:	b2db      	uxtb	r3, r3
 801ef46:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801ef4a:	1c43      	adds	r3, r0, #1
 801ef4c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ef50:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801ef54:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801ef58:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ef5c:	b2c9      	uxtb	r1, r1
 801ef5e:	00db      	lsls	r3, r3, #3
 801ef60:	fb01 f10e 	mul.w	r1, r1, lr
 801ef64:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ef68:	4313      	orrs	r3, r2
 801ef6a:	1c4a      	adds	r2, r1, #1
 801ef6c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ef70:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801ef74:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801ef78:	ea4c 0c03 	orr.w	ip, ip, r3
 801ef7c:	f8a7 c000 	strh.w	ip, [r7]
 801ef80:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ef82:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801ef84:	441a      	add	r2, r3
 801ef86:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ef88:	9225      	str	r2, [sp, #148]	@ 0x94
 801ef8a:	441d      	add	r5, r3
 801ef8c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801ef8e:	3b01      	subs	r3, #1
 801ef90:	3702      	adds	r7, #2
 801ef92:	9317      	str	r3, [sp, #92]	@ 0x5c
 801ef94:	e699      	b.n	801ecca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ef96:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ef98:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801ef9a:	441c      	add	r4, r3
 801ef9c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ef9e:	9425      	str	r4, [sp, #148]	@ 0x94
 801efa0:	441d      	add	r5, r3
 801efa2:	9b07      	ldr	r3, [sp, #28]
 801efa4:	3b01      	subs	r3, #1
 801efa6:	9307      	str	r3, [sp, #28]
 801efa8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801efaa:	3302      	adds	r3, #2
 801efac:	930a      	str	r3, [sp, #40]	@ 0x28
 801efae:	e66b      	b.n	801ec88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801efb0:	d024      	beq.n	801effc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801efb2:	9b07      	ldr	r3, [sp, #28]
 801efb4:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801efb6:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801efb8:	3b01      	subs	r3, #1
 801efba:	fb00 4003 	mla	r0, r0, r3, r4
 801efbe:	1400      	asrs	r0, r0, #16
 801efc0:	f53f ae80 	bmi.w	801ecc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801efc4:	3901      	subs	r1, #1
 801efc6:	4288      	cmp	r0, r1
 801efc8:	f6bf ae7c 	bge.w	801ecc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801efcc:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801efce:	fb01 5303 	mla	r3, r1, r3, r5
 801efd2:	141b      	asrs	r3, r3, #16
 801efd4:	f53f ae76 	bmi.w	801ecc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801efd8:	3a01      	subs	r2, #1
 801efda:	4293      	cmp	r3, r2
 801efdc:	f6bf ae72 	bge.w	801ecc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801efe0:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801efe4:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801efe8:	f1bb 0f00 	cmp.w	fp, #0
 801efec:	dc70      	bgt.n	801f0d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801efee:	9b07      	ldr	r3, [sp, #28]
 801eff0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801eff4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801eff6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801effa:	930a      	str	r3, [sp, #40]	@ 0x28
 801effc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801effe:	2b00      	cmp	r3, #0
 801f000:	f340 81ae 	ble.w	801f360 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801f004:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f008:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f00c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f010:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f012:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f016:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f01a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f01e:	eef0 6a62 	vmov.f32	s13, s5
 801f022:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f026:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f02a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f02e:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801f032:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f036:	eef0 6a43 	vmov.f32	s13, s6
 801f03a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f03e:	ee12 2a90 	vmov	r2, s5
 801f042:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f046:	fb92 f3f3 	sdiv	r3, r2, r3
 801f04a:	ee13 2a10 	vmov	r2, s6
 801f04e:	9327      	str	r3, [sp, #156]	@ 0x9c
 801f050:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f052:	fb92 f3f3 	sdiv	r3, r2, r3
 801f056:	9328      	str	r3, [sp, #160]	@ 0xa0
 801f058:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f05a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801f05c:	3b01      	subs	r3, #1
 801f05e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f062:	9316      	str	r3, [sp, #88]	@ 0x58
 801f064:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f066:	bf08      	it	eq
 801f068:	4613      	moveq	r3, r2
 801f06a:	ee16 5a90 	vmov	r5, s13
 801f06e:	9307      	str	r3, [sp, #28]
 801f070:	eeb0 3a67 	vmov.f32	s6, s15
 801f074:	eef0 2a47 	vmov.f32	s5, s14
 801f078:	e5f8      	b.n	801ec6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801f07a:	2800      	cmp	r0, #0
 801f07c:	f43f ae6b 	beq.w	801ed56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801f080:	f818 1001 	ldrb.w	r1, [r8, r1]
 801f084:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f088:	9108      	str	r1, [sp, #32]
 801f08a:	0e09      	lsrs	r1, r1, #24
 801f08c:	9110      	str	r1, [sp, #64]	@ 0x40
 801f08e:	e662      	b.n	801ed56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801f090:	f113 0801 	adds.w	r8, r3, #1
 801f094:	f53f af74 	bmi.w	801ef80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801f098:	4541      	cmp	r1, r8
 801f09a:	f6ff af71 	blt.w	801ef80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801f09e:	f11c 0801 	adds.w	r8, ip, #1
 801f0a2:	f53f af6d 	bmi.w	801ef80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801f0a6:	45c6      	cmp	lr, r8
 801f0a8:	f6ff af6a 	blt.w	801ef80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801f0ac:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801f0b0:	b209      	sxth	r1, r1
 801f0b2:	fa0f f38e 	sxth.w	r3, lr
 801f0b6:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801f0ba:	9301      	str	r3, [sp, #4]
 801f0bc:	9100      	str	r1, [sp, #0]
 801f0be:	4633      	mov	r3, r6
 801f0c0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f0c2:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801f0c4:	4639      	mov	r1, r7
 801f0c6:	f7ff fc7a 	bl	801e9be <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801f0ca:	e759      	b.n	801ef80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801f0cc:	fffff800 	.word	0xfffff800
 801f0d0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801f0d2:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801f0d4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801f0d8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f0da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f0de:	1427      	asrs	r7, r4, #16
 801f0e0:	142b      	asrs	r3, r5, #16
 801f0e2:	fb01 7303 	mla	r3, r1, r3, r7
 801f0e6:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801f0e8:	18e7      	adds	r7, r4, r3
 801f0ea:	5ce3      	ldrb	r3, [r4, r3]
 801f0ec:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801f0f0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801f0f4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f0f8:	2a00      	cmp	r2, #0
 801f0fa:	f000 8127 	beq.w	801f34c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801f0fe:	f897 e001 	ldrb.w	lr, [r7, #1]
 801f102:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801f106:	940d      	str	r4, [sp, #52]	@ 0x34
 801f108:	0e24      	lsrs	r4, r4, #24
 801f10a:	9414      	str	r4, [sp, #80]	@ 0x50
 801f10c:	b170      	cbz	r0, 801f12c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801f10e:	eb07 0e01 	add.w	lr, r7, r1
 801f112:	5c79      	ldrb	r1, [r7, r1]
 801f114:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f118:	9109      	str	r1, [sp, #36]	@ 0x24
 801f11a:	0e09      	lsrs	r1, r1, #24
 801f11c:	9111      	str	r1, [sp, #68]	@ 0x44
 801f11e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801f122:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f126:	910e      	str	r1, [sp, #56]	@ 0x38
 801f128:	0e09      	lsrs	r1, r1, #24
 801f12a:	9115      	str	r1, [sp, #84]	@ 0x54
 801f12c:	b292      	uxth	r2, r2
 801f12e:	b280      	uxth	r0, r0
 801f130:	fb02 f800 	mul.w	r8, r2, r0
 801f134:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801f138:	0112      	lsls	r2, r2, #4
 801f13a:	eba2 0e08 	sub.w	lr, r2, r8
 801f13e:	b280      	uxth	r0, r0
 801f140:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801f144:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f146:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801f148:	fa1f fe8e 	uxth.w	lr, lr
 801f14c:	1a09      	subs	r1, r1, r0
 801f14e:	b289      	uxth	r1, r1
 801f150:	fb0e f202 	mul.w	r2, lr, r2
 801f154:	fb01 220c 	mla	r2, r1, ip, r2
 801f158:	fb00 2204 	mla	r2, r0, r4, r2
 801f15c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801f15e:	fb08 2204 	mla	r2, r8, r4, r2
 801f162:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801f166:	2a00      	cmp	r2, #0
 801f168:	f000 80e5 	beq.w	801f336 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801f16c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801f170:	d019      	beq.n	801f1a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801f172:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801f176:	fb0c fa0a 	mul.w	sl, ip, sl
 801f17a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f17e:	fb0c fc03 	mul.w	ip, ip, r3
 801f182:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f186:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f18a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801f18e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801f192:	4453      	add	r3, sl
 801f194:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f198:	0a1b      	lsrs	r3, r3, #8
 801f19a:	0a3f      	lsrs	r7, r7, #8
 801f19c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f1a0:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801f1a4:	433b      	orrs	r3, r7
 801f1a6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801f1a8:	2cff      	cmp	r4, #255	@ 0xff
 801f1aa:	d020      	beq.n	801f1ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801f1ac:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801f1ae:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801f1b2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801f1b4:	4367      	muls	r7, r4
 801f1b6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801f1b8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801f1bc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801f1be:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f1c2:	fb04 fa0a 	mul.w	sl, r4, sl
 801f1c6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f1ca:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f1ce:	44bc      	add	ip, r7
 801f1d0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f1d4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f1d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f1dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f1e0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f1e4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f1e8:	ea4c 040a 	orr.w	r4, ip, sl
 801f1ec:	940d      	str	r4, [sp, #52]	@ 0x34
 801f1ee:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801f1f0:	2cff      	cmp	r4, #255	@ 0xff
 801f1f2:	d020      	beq.n	801f236 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801f1f4:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801f1f6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801f1fa:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801f1fc:	4367      	muls	r7, r4
 801f1fe:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801f200:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801f204:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801f206:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f20a:	fb04 fa0a 	mul.w	sl, r4, sl
 801f20e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f212:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f216:	44bc      	add	ip, r7
 801f218:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f21c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f220:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f224:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f228:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f22c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f230:	ea4c 040a 	orr.w	r4, ip, sl
 801f234:	9409      	str	r4, [sp, #36]	@ 0x24
 801f236:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801f238:	2cff      	cmp	r4, #255	@ 0xff
 801f23a:	d020      	beq.n	801f27e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801f23c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801f23e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801f242:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801f244:	4367      	muls	r7, r4
 801f246:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801f248:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801f24c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801f24e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f252:	fb04 fa0a 	mul.w	sl, r4, sl
 801f256:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f25a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f25e:	44bc      	add	ip, r7
 801f260:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f264:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f268:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f26c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f270:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f274:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f278:	ea4c 040a 	orr.w	r4, ip, sl
 801f27c:	940e      	str	r4, [sp, #56]	@ 0x38
 801f27e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801f280:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801f284:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801f286:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801f28a:	fb0e f707 	mul.w	r7, lr, r7
 801f28e:	fb01 770c 	mla	r7, r1, ip, r7
 801f292:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801f296:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801f298:	fb00 770c 	mla	r7, r0, ip, r7
 801f29c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801f2a0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801f2a2:	fb08 770c 	mla	r7, r8, ip, r7
 801f2a6:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801f2aa:	fb0e fe0c 	mul.w	lr, lr, ip
 801f2ae:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f2b2:	fb01 e303 	mla	r3, r1, r3, lr
 801f2b6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801f2b8:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801f2bc:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801f2be:	fb00 330a 	mla	r3, r0, sl, r3
 801f2c2:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801f2c6:	fb08 3c0c 	mla	ip, r8, ip, r3
 801f2ca:	f8b9 3000 	ldrh.w	r3, [r9]
 801f2ce:	43d2      	mvns	r2, r2
 801f2d0:	1218      	asrs	r0, r3, #8
 801f2d2:	b2d2      	uxtb	r2, r2
 801f2d4:	10d9      	asrs	r1, r3, #3
 801f2d6:	0a3f      	lsrs	r7, r7, #8
 801f2d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f2dc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801f2e0:	00db      	lsls	r3, r3, #3
 801f2e2:	4350      	muls	r0, r2
 801f2e4:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801f2e8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f2ec:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801f2f0:	b2db      	uxtb	r3, r3
 801f2f2:	ea47 070c 	orr.w	r7, r7, ip
 801f2f6:	4351      	muls	r1, r2
 801f2f8:	4353      	muls	r3, r2
 801f2fa:	1c42      	adds	r2, r0, #1
 801f2fc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f300:	0c3a      	lsrs	r2, r7, #16
 801f302:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f306:	4a18      	ldr	r2, [pc, #96]	@ (801f368 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801f308:	b2c0      	uxtb	r0, r0
 801f30a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801f30e:	1c4a      	adds	r2, r1, #1
 801f310:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f314:	0a3a      	lsrs	r2, r7, #8
 801f316:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f31a:	00c9      	lsls	r1, r1, #3
 801f31c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f320:	4301      	orrs	r1, r0
 801f322:	1c58      	adds	r0, r3, #1
 801f324:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801f328:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801f32c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801f330:	4308      	orrs	r0, r1
 801f332:	f8a9 0000 	strh.w	r0, [r9]
 801f336:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f338:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801f33a:	441a      	add	r2, r3
 801f33c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f33e:	9225      	str	r2, [sp, #148]	@ 0x94
 801f340:	f109 0902 	add.w	r9, r9, #2
 801f344:	441d      	add	r5, r3
 801f346:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f34a:	e64d      	b.n	801efe8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801f34c:	2800      	cmp	r0, #0
 801f34e:	f43f aeed 	beq.w	801f12c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801f352:	5c79      	ldrb	r1, [r7, r1]
 801f354:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f358:	9109      	str	r1, [sp, #36]	@ 0x24
 801f35a:	0e09      	lsrs	r1, r1, #24
 801f35c:	9111      	str	r1, [sp, #68]	@ 0x44
 801f35e:	e6e5      	b.n	801f12c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801f360:	b01b      	add	sp, #108	@ 0x6c
 801f362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f366:	bf00      	nop
 801f368:	fffff800 	.word	0xfffff800

0801f36c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801f36c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f370:	b085      	sub	sp, #20
 801f372:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801f376:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801f37a:	9103      	str	r1, [sp, #12]
 801f37c:	fb00 7406 	mla	r4, r0, r6, r7
 801f380:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801f384:	2800      	cmp	r0, #0
 801f386:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801f38a:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801f38e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801f392:	9501      	str	r5, [sp, #4]
 801f394:	eb03 0904 	add.w	r9, r3, r4
 801f398:	f2c0 8150 	blt.w	801f63c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801f39c:	4583      	cmp	fp, r0
 801f39e:	f340 814d 	ble.w	801f63c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801f3a2:	2f00      	cmp	r7, #0
 801f3a4:	f2c0 8146 	blt.w	801f634 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801f3a8:	42be      	cmp	r6, r7
 801f3aa:	f340 8143 	ble.w	801f634 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801f3ae:	f813 c004 	ldrb.w	ip, [r3, r4]
 801f3b2:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801f3b6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801f3ba:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801f3be:	4355      	muls	r5, r2
 801f3c0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f3c4:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801f3c8:	fb0c f203 	mul.w	r2, ip, r3
 801f3cc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801f3d0:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801f3d4:	441d      	add	r5, r3
 801f3d6:	f102 0320 	add.w	r3, r2, #32
 801f3da:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f3de:	0a1b      	lsrs	r3, r3, #8
 801f3e0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801f3e4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f3e8:	431c      	orrs	r4, r3
 801f3ea:	1c7b      	adds	r3, r7, #1
 801f3ec:	f100 812b 	bmi.w	801f646 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801f3f0:	429e      	cmp	r6, r3
 801f3f2:	f340 8128 	ble.w	801f646 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801f3f6:	2900      	cmp	r1, #0
 801f3f8:	f000 8128 	beq.w	801f64c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801f3fc:	9a01      	ldr	r2, [sp, #4]
 801f3fe:	f899 3001 	ldrb.w	r3, [r9, #1]
 801f402:	8855      	ldrh	r5, [r2, #2]
 801f404:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801f408:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801f40c:	fb08 f802 	mul.w	r8, r8, r2
 801f410:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f414:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801f418:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801f41c:	435d      	muls	r5, r3
 801f41e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801f422:	44d0      	add	r8, sl
 801f424:	f105 0a20 	add.w	sl, r5, #32
 801f428:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801f42c:	0a2d      	lsrs	r5, r5, #8
 801f42e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801f432:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f436:	432a      	orrs	r2, r5
 801f438:	3001      	adds	r0, #1
 801f43a:	f100 810d 	bmi.w	801f658 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801f43e:	4583      	cmp	fp, r0
 801f440:	f340 810a 	ble.w	801f658 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801f444:	f1be 0f00 	cmp.w	lr, #0
 801f448:	f000 810b 	beq.w	801f662 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801f44c:	2f00      	cmp	r7, #0
 801f44e:	f2c0 8100 	blt.w	801f652 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801f452:	42be      	cmp	r6, r7
 801f454:	f340 80fd 	ble.w	801f652 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801f458:	9801      	ldr	r0, [sp, #4]
 801f45a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801f45e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801f462:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801f466:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801f46a:	fb0a fa00 	mul.w	sl, sl, r0
 801f46e:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801f472:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801f476:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801f47a:	fb05 f808 	mul.w	r8, r5, r8
 801f47e:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801f482:	4482      	add	sl, r0
 801f484:	f108 0020 	add.w	r0, r8, #32
 801f488:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801f48c:	0a00      	lsrs	r0, r0, #8
 801f48e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801f492:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f496:	ea4b 0b00 	orr.w	fp, fp, r0
 801f49a:	3701      	adds	r7, #1
 801f49c:	f100 80e6 	bmi.w	801f66c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801f4a0:	42be      	cmp	r6, r7
 801f4a2:	f340 80e3 	ble.w	801f66c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801f4a6:	2900      	cmp	r1, #0
 801f4a8:	f000 80e3 	beq.w	801f672 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801f4ac:	3601      	adds	r6, #1
 801f4ae:	9801      	ldr	r0, [sp, #4]
 801f4b0:	f819 7006 	ldrb.w	r7, [r9, r6]
 801f4b4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801f4b8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801f4bc:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801f4c0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f4c4:	fb09 f906 	mul.w	r9, r9, r6
 801f4c8:	fb07 f800 	mul.w	r8, r7, r0
 801f4cc:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801f4d0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801f4d4:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801f4d8:	44d1      	add	r9, sl
 801f4da:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801f4de:	f108 0020 	add.w	r0, r8, #32
 801f4e2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801f4e6:	0a00      	lsrs	r0, r0, #8
 801f4e8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f4ec:	4330      	orrs	r0, r6
 801f4ee:	b28e      	uxth	r6, r1
 801f4f0:	fa1f f98e 	uxth.w	r9, lr
 801f4f4:	fb06 f809 	mul.w	r8, r6, r9
 801f4f8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801f4fc:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801f500:	0136      	lsls	r6, r6, #4
 801f502:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f506:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801f50a:	9601      	str	r6, [sp, #4]
 801f50c:	ea4a 0404 	orr.w	r4, sl, r4
 801f510:	fa1f f689 	uxth.w	r6, r9
 801f514:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801f518:	fb11 f90e 	smulbb	r9, r1, lr
 801f51c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801f520:	9602      	str	r6, [sp, #8]
 801f522:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f526:	4626      	mov	r6, r4
 801f528:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f52c:	f1ce 0410 	rsb	r4, lr, #16
 801f530:	1a64      	subs	r4, r4, r1
 801f532:	ea4a 0202 	orr.w	r2, sl, r2
 801f536:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801f53a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801f53e:	434a      	muls	r2, r1
 801f540:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801f544:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f548:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f54c:	fb04 2406 	mla	r4, r4, r6, r2
 801f550:	ea4a 0000 	orr.w	r0, sl, r0
 801f554:	fb09 4200 	mla	r2, r9, r0, r4
 801f558:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801f55c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801f560:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801f564:	ea44 0b0b 	orr.w	fp, r4, fp
 801f568:	9c01      	ldr	r4, [sp, #4]
 801f56a:	9e02      	ldr	r6, [sp, #8]
 801f56c:	9903      	ldr	r1, [sp, #12]
 801f56e:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801f572:	1ba4      	subs	r4, r4, r6
 801f574:	9e01      	ldr	r6, [sp, #4]
 801f576:	8808      	ldrh	r0, [r1, #0]
 801f578:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801f57c:	eba6 0608 	sub.w	r6, r6, r8
 801f580:	b2b6      	uxth	r6, r6
 801f582:	b2a4      	uxth	r4, r4
 801f584:	4373      	muls	r3, r6
 801f586:	fb0c 3304 	mla	r3, ip, r4, r3
 801f58a:	9c02      	ldr	r4, [sp, #8]
 801f58c:	fb04 3505 	mla	r5, r4, r5, r3
 801f590:	fb08 5707 	mla	r7, r8, r7, r5
 801f594:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801f598:	b289      	uxth	r1, r1
 801f59a:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801f59e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f5a2:	434f      	muls	r7, r1
 801f5a4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801f5a8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801f5ac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f5b0:	1c7b      	adds	r3, r7, #1
 801f5b2:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801f5b6:	ea42 0e0e 	orr.w	lr, r2, lr
 801f5ba:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f5be:	fa1f f28e 	uxth.w	r2, lr
 801f5c2:	1203      	asrs	r3, r0, #8
 801f5c4:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801f5c8:	b2ff      	uxtb	r7, r7
 801f5ca:	1215      	asrs	r5, r2, #8
 801f5cc:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801f5d0:	fb13 f307 	smulbb	r3, r3, r7
 801f5d4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801f5d8:	fb05 3501 	mla	r5, r5, r1, r3
 801f5dc:	10c3      	asrs	r3, r0, #3
 801f5de:	10d4      	asrs	r4, r2, #3
 801f5e0:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801f5e4:	fb13 f307 	smulbb	r3, r3, r7
 801f5e8:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801f5ec:	fb04 3401 	mla	r4, r4, r1, r3
 801f5f0:	00c3      	lsls	r3, r0, #3
 801f5f2:	00d2      	lsls	r2, r2, #3
 801f5f4:	b2db      	uxtb	r3, r3
 801f5f6:	fb13 f307 	smulbb	r3, r3, r7
 801f5fa:	b2d2      	uxtb	r2, r2
 801f5fc:	fb02 3101 	mla	r1, r2, r1, r3
 801f600:	b2ad      	uxth	r5, r5
 801f602:	b289      	uxth	r1, r1
 801f604:	b2a4      	uxth	r4, r4
 801f606:	1c6b      	adds	r3, r5, #1
 801f608:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f60c:	1c62      	adds	r2, r4, #1
 801f60e:	1c4b      	adds	r3, r1, #1
 801f610:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801f614:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801f618:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801f61c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f620:	0964      	lsrs	r4, r4, #5
 801f622:	432b      	orrs	r3, r5
 801f624:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801f628:	9a03      	ldr	r2, [sp, #12]
 801f62a:	4323      	orrs	r3, r4
 801f62c:	8013      	strh	r3, [r2, #0]
 801f62e:	b005      	add	sp, #20
 801f630:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f634:	f04f 0c00 	mov.w	ip, #0
 801f638:	4664      	mov	r4, ip
 801f63a:	e6d6      	b.n	801f3ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801f63c:	2300      	movs	r3, #0
 801f63e:	469c      	mov	ip, r3
 801f640:	461a      	mov	r2, r3
 801f642:	461c      	mov	r4, r3
 801f644:	e6f8      	b.n	801f438 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801f646:	2300      	movs	r3, #0
 801f648:	461a      	mov	r2, r3
 801f64a:	e6f5      	b.n	801f438 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801f64c:	460b      	mov	r3, r1
 801f64e:	460a      	mov	r2, r1
 801f650:	e6f2      	b.n	801f438 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801f652:	2500      	movs	r5, #0
 801f654:	46ab      	mov	fp, r5
 801f656:	e720      	b.n	801f49a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801f658:	2700      	movs	r7, #0
 801f65a:	463d      	mov	r5, r7
 801f65c:	4638      	mov	r0, r7
 801f65e:	46bb      	mov	fp, r7
 801f660:	e745      	b.n	801f4ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801f662:	4677      	mov	r7, lr
 801f664:	4675      	mov	r5, lr
 801f666:	4670      	mov	r0, lr
 801f668:	46f3      	mov	fp, lr
 801f66a:	e740      	b.n	801f4ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801f66c:	2700      	movs	r7, #0
 801f66e:	4638      	mov	r0, r7
 801f670:	e73d      	b.n	801f4ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801f672:	460f      	mov	r7, r1
 801f674:	4608      	mov	r0, r1
 801f676:	e73a      	b.n	801f4ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801f678 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f678:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f67c:	b097      	sub	sp, #92	@ 0x5c
 801f67e:	9214      	str	r2, [sp, #80]	@ 0x50
 801f680:	9308      	str	r3, [sp, #32]
 801f682:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801f684:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801f688:	9312      	str	r3, [sp, #72]	@ 0x48
 801f68a:	9111      	str	r1, [sp, #68]	@ 0x44
 801f68c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801f690:	9015      	str	r0, [sp, #84]	@ 0x54
 801f692:	6850      	ldr	r0, [r2, #4]
 801f694:	6812      	ldr	r2, [r2, #0]
 801f696:	fb00 1303 	mla	r3, r0, r3, r1
 801f69a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f69e:	9309      	str	r3, [sp, #36]	@ 0x24
 801f6a0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f6a2:	681b      	ldr	r3, [r3, #0]
 801f6a4:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f6a6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f6a8:	685b      	ldr	r3, [r3, #4]
 801f6aa:	930c      	str	r3, [sp, #48]	@ 0x30
 801f6ac:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801f6b0:	930a      	str	r3, [sp, #40]	@ 0x28
 801f6b2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f6b4:	2b00      	cmp	r3, #0
 801f6b6:	dc03      	bgt.n	801f6c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f6b8:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801f6ba:	2b00      	cmp	r3, #0
 801f6bc:	f340 83cb 	ble.w	801fe56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801f6c0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f6c2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f6c6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f6ca:	1e48      	subs	r0, r1, #1
 801f6cc:	1e55      	subs	r5, r2, #1
 801f6ce:	9b08      	ldr	r3, [sp, #32]
 801f6d0:	2b00      	cmp	r3, #0
 801f6d2:	f340 81a3 	ble.w	801fa1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801f6d6:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801f6d8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801f6da:	1436      	asrs	r6, r6, #16
 801f6dc:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f6e0:	d406      	bmi.n	801f6f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f6e2:	4286      	cmp	r6, r0
 801f6e4:	da04      	bge.n	801f6f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f6e6:	2b00      	cmp	r3, #0
 801f6e8:	db02      	blt.n	801f6f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f6ea:	42ab      	cmp	r3, r5
 801f6ec:	f2c0 8197 	blt.w	801fa1e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f6f0:	3601      	adds	r6, #1
 801f6f2:	f100 8184 	bmi.w	801f9fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801f6f6:	42b1      	cmp	r1, r6
 801f6f8:	f2c0 8181 	blt.w	801f9fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801f6fc:	3301      	adds	r3, #1
 801f6fe:	f100 817e 	bmi.w	801f9fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801f702:	429a      	cmp	r2, r3
 801f704:	f2c0 817b 	blt.w	801f9fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801f708:	9b08      	ldr	r3, [sp, #32]
 801f70a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801f70c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f70e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801f712:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801f714:	2b00      	cmp	r3, #0
 801f716:	f340 81a4 	ble.w	801fa62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801f71a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801f71c:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801f71e:	1418      	asrs	r0, r3, #16
 801f720:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801f722:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801f726:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801f728:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801f72c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f72e:	142d      	asrs	r5, r5, #16
 801f730:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801f734:	f100 81f8 	bmi.w	801fb28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f738:	f102 3eff 	add.w	lr, r2, #4294967295
 801f73c:	4575      	cmp	r5, lr
 801f73e:	f280 81f3 	bge.w	801fb28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f742:	2800      	cmp	r0, #0
 801f744:	f2c0 81f0 	blt.w	801fb28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f748:	f103 3eff 	add.w	lr, r3, #4294967295
 801f74c:	4570      	cmp	r0, lr
 801f74e:	f280 81eb 	bge.w	801fb28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f752:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f754:	b212      	sxth	r2, r2
 801f756:	fb00 5002 	mla	r0, r0, r2, r5
 801f75a:	fa1f fe81 	uxth.w	lr, r1
 801f75e:	eb03 0a00 	add.w	sl, r3, r0
 801f762:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801f766:	f813 9000 	ldrb.w	r9, [r3, r0]
 801f76a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f76e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801f772:	b29b      	uxth	r3, r3
 801f774:	f1bc 0f00 	cmp.w	ip, #0
 801f778:	f000 81b9 	beq.w	801faee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801f77c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801f780:	940d      	str	r4, [sp, #52]	@ 0x34
 801f782:	eb0a 0b02 	add.w	fp, sl, r2
 801f786:	fa1f fa8c 	uxth.w	sl, ip
 801f78a:	fb0a fe0e 	mul.w	lr, sl, lr
 801f78e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801f792:	fa1f fa8a 	uxth.w	sl, sl
 801f796:	eba5 050e 	sub.w	r5, r5, lr
 801f79a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801f79e:	940e      	str	r4, [sp, #56]	@ 0x38
 801f7a0:	eba3 030a 	sub.w	r3, r3, sl
 801f7a4:	b2ad      	uxth	r5, r5
 801f7a6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801f7a8:	b29b      	uxth	r3, r3
 801f7aa:	fb08 f505 	mul.w	r5, r8, r5
 801f7ae:	fb09 5303 	mla	r3, r9, r3, r5
 801f7b2:	fb0a 3304 	mla	r3, sl, r4, r3
 801f7b6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801f7b8:	fb0e 3304 	mla	r3, lr, r4, r3
 801f7bc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f7c0:	2b00      	cmp	r3, #0
 801f7c2:	f000 810f 	beq.w	801f9e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801f7c6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801f7c8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801f7cc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801f7d0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801f7d4:	f000 8190 	beq.w	801faf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801f7d8:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801f7dc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801f7e0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f7e4:	fb09 f000 	mul.w	r0, r9, r0
 801f7e8:	fb0a fe0e 	mul.w	lr, sl, lr
 801f7ec:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801f7f0:	f100 0b20 	add.w	fp, r0, #32
 801f7f4:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801f7f8:	44ce      	add	lr, r9
 801f7fa:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801f7fe:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f802:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801f806:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801f80a:	ea4e 0909 	orr.w	r9, lr, r9
 801f80e:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801f812:	8868      	ldrh	r0, [r5, #2]
 801f814:	d019      	beq.n	801f84a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801f816:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801f81a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801f81e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f822:	fb08 f800 	mul.w	r8, r8, r0
 801f826:	fb0a fe0e 	mul.w	lr, sl, lr
 801f82a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801f82e:	f108 0b20 	add.w	fp, r8, #32
 801f832:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801f836:	4486      	add	lr, r0
 801f838:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801f83c:	0a00      	lsrs	r0, r0, #8
 801f83e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801f842:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f846:	ea4e 0000 	orr.w	r0, lr, r0
 801f84a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801f84e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801f852:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801f856:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801f85a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f85e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f862:	ea4e 0909 	orr.w	r9, lr, r9
 801f866:	ea4a 0000 	orr.w	r0, sl, r0
 801f86a:	f1bc 0f00 	cmp.w	ip, #0
 801f86e:	f000 8145 	beq.w	801fafc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801f872:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801f876:	3a01      	subs	r2, #1
 801f878:	0052      	lsls	r2, r2, #1
 801f87a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801f87c:	3202      	adds	r2, #2
 801f87e:	2cff      	cmp	r4, #255	@ 0xff
 801f880:	eb05 0e02 	add.w	lr, r5, r2
 801f884:	5aaa      	ldrh	r2, [r5, r2]
 801f886:	d018      	beq.n	801f8ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801f888:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801f88c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f890:	fb04 fa02 	mul.w	sl, r4, r2
 801f894:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f898:	fb08 f805 	mul.w	r8, r8, r5
 801f89c:	f10a 0520 	add.w	r5, sl, #32
 801f8a0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801f8a4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801f8a8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801f8ac:	4442      	add	r2, r8
 801f8ae:	0a2d      	lsrs	r5, r5, #8
 801f8b0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801f8b4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f8b8:	432a      	orrs	r2, r5
 801f8ba:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801f8bc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801f8c0:	2cff      	cmp	r4, #255	@ 0xff
 801f8c2:	d01a      	beq.n	801f8fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801f8c4:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801f8c8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f8cc:	fb04 fa05 	mul.w	sl, r4, r5
 801f8d0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f8d4:	fb08 f80e 	mul.w	r8, r8, lr
 801f8d8:	f10a 0e20 	add.w	lr, sl, #32
 801f8dc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801f8e0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801f8e4:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801f8e8:	4445      	add	r5, r8
 801f8ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f8ee:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801f8f2:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801f8f6:	ea45 050e 	orr.w	r5, r5, lr
 801f8fa:	fb1c fe01 	smulbb	lr, ip, r1
 801f8fe:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801f902:	f1cc 0810 	rsb	r8, ip, #16
 801f906:	eba8 0801 	sub.w	r8, r8, r1
 801f90a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801f90e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801f912:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801f916:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801f91a:	4341      	muls	r1, r0
 801f91c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f920:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f924:	ea4a 0202 	orr.w	r2, sl, r2
 801f928:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801f92c:	fb09 1108 	mla	r1, r9, r8, r1
 801f930:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801f934:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801f938:	fb0c 1102 	mla	r1, ip, r2, r1
 801f93c:	ea4b 0505 	orr.w	r5, fp, r5
 801f940:	fb0e 1e05 	mla	lr, lr, r5, r1
 801f944:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801f948:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801f94c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f950:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801f954:	ea42 0e0e 	orr.w	lr, r2, lr
 801f958:	fa1f f28e 	uxth.w	r2, lr
 801f95c:	2bff      	cmp	r3, #255	@ 0xff
 801f95e:	d103      	bne.n	801f968 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801f960:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801f962:	29ff      	cmp	r1, #255	@ 0xff
 801f964:	f000 80de 	beq.w	801fb24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801f968:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801f96a:	8838      	ldrh	r0, [r7, #0]
 801f96c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801f96e:	434b      	muls	r3, r1
 801f970:	f103 0c01 	add.w	ip, r3, #1
 801f974:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801f978:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801f97c:	fa5f fc83 	uxtb.w	ip, r3
 801f980:	1203      	asrs	r3, r0, #8
 801f982:	1215      	asrs	r5, r2, #8
 801f984:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801f988:	fb13 f30c 	smulbb	r3, r3, ip
 801f98c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801f990:	fb05 3501 	mla	r5, r5, r1, r3
 801f994:	10c3      	asrs	r3, r0, #3
 801f996:	10d1      	asrs	r1, r2, #3
 801f998:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801f99c:	fb13 f30c 	smulbb	r3, r3, ip
 801f9a0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801f9a4:	fb01 3104 	mla	r1, r1, r4, r3
 801f9a8:	00c3      	lsls	r3, r0, #3
 801f9aa:	00d2      	lsls	r2, r2, #3
 801f9ac:	b2db      	uxtb	r3, r3
 801f9ae:	b2d2      	uxtb	r2, r2
 801f9b0:	fb13 f30c 	smulbb	r3, r3, ip
 801f9b4:	b2ad      	uxth	r5, r5
 801f9b6:	fb02 3304 	mla	r3, r2, r4, r3
 801f9ba:	b29a      	uxth	r2, r3
 801f9bc:	1c6b      	adds	r3, r5, #1
 801f9be:	b289      	uxth	r1, r1
 801f9c0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f9c4:	1c53      	adds	r3, r2, #1
 801f9c6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f9ca:	1c4a      	adds	r2, r1, #1
 801f9cc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f9d0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801f9d4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f9d8:	0949      	lsrs	r1, r1, #5
 801f9da:	432b      	orrs	r3, r5
 801f9dc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f9e0:	430b      	orrs	r3, r1
 801f9e2:	803b      	strh	r3, [r7, #0]
 801f9e4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801f9e6:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801f9e8:	4413      	add	r3, r2
 801f9ea:	9321      	str	r3, [sp, #132]	@ 0x84
 801f9ec:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801f9ee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f9f0:	441a      	add	r2, r3
 801f9f2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801f9f4:	9222      	str	r2, [sp, #136]	@ 0x88
 801f9f6:	3b01      	subs	r3, #1
 801f9f8:	3702      	adds	r7, #2
 801f9fa:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f9fc:	e689      	b.n	801f712 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f9fe:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801fa00:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801fa02:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801fa04:	4433      	add	r3, r6
 801fa06:	9321      	str	r3, [sp, #132]	@ 0x84
 801fa08:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fa0a:	441c      	add	r4, r3
 801fa0c:	9b08      	ldr	r3, [sp, #32]
 801fa0e:	9422      	str	r4, [sp, #136]	@ 0x88
 801fa10:	3b01      	subs	r3, #1
 801fa12:	9308      	str	r3, [sp, #32]
 801fa14:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fa16:	3302      	adds	r3, #2
 801fa18:	9309      	str	r3, [sp, #36]	@ 0x24
 801fa1a:	e658      	b.n	801f6ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801fa1c:	d028      	beq.n	801fa70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801fa1e:	9b08      	ldr	r3, [sp, #32]
 801fa20:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801fa22:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801fa24:	3b01      	subs	r3, #1
 801fa26:	fb00 5003 	mla	r0, r0, r3, r5
 801fa2a:	1400      	asrs	r0, r0, #16
 801fa2c:	f53f ae6c 	bmi.w	801f708 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801fa30:	3901      	subs	r1, #1
 801fa32:	4288      	cmp	r0, r1
 801fa34:	f6bf ae68 	bge.w	801f708 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801fa38:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801fa3a:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801fa3c:	fb01 0303 	mla	r3, r1, r3, r0
 801fa40:	141b      	asrs	r3, r3, #16
 801fa42:	f53f ae61 	bmi.w	801f708 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801fa46:	3a01      	subs	r2, #1
 801fa48:	4293      	cmp	r3, r2
 801fa4a:	f6bf ae5d 	bge.w	801f708 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801fa4e:	9b08      	ldr	r3, [sp, #32]
 801fa50:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801fa54:	9313      	str	r3, [sp, #76]	@ 0x4c
 801fa56:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801fa5a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801fa5c:	2b00      	cmp	r3, #0
 801fa5e:	f300 8082 	bgt.w	801fb66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801fa62:	9b08      	ldr	r3, [sp, #32]
 801fa64:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801fa68:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fa6a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801fa6e:	9309      	str	r3, [sp, #36]	@ 0x24
 801fa70:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801fa72:	2b00      	cmp	r3, #0
 801fa74:	f340 81ef 	ble.w	801fe56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801fa78:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fa7c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801fa80:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fa84:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fa86:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fa8a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fa8e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fa92:	eef0 6a62 	vmov.f32	s13, s5
 801fa96:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fa9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fa9e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801faa2:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801faa6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801faaa:	eef0 6a43 	vmov.f32	s13, s6
 801faae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fab2:	ee12 2a90 	vmov	r2, s5
 801fab6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801faba:	fb92 f3f3 	sdiv	r3, r2, r3
 801fabe:	ee13 2a10 	vmov	r2, s6
 801fac2:	9323      	str	r3, [sp, #140]	@ 0x8c
 801fac4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fac6:	fb92 f3f3 	sdiv	r3, r2, r3
 801faca:	9324      	str	r3, [sp, #144]	@ 0x90
 801facc:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801face:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801fad0:	3b01      	subs	r3, #1
 801fad2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fad6:	9311      	str	r3, [sp, #68]	@ 0x44
 801fad8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fada:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801fade:	bf08      	it	eq
 801fae0:	4613      	moveq	r3, r2
 801fae2:	9308      	str	r3, [sp, #32]
 801fae4:	eeb0 3a67 	vmov.f32	s6, s15
 801fae8:	eef0 2a47 	vmov.f32	s5, s14
 801faec:	e5e1      	b.n	801f6b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801faee:	fb08 f505 	mul.w	r5, r8, r5
 801faf2:	fb09 5303 	mla	r3, r9, r3, r5
 801faf6:	e661      	b.n	801f7bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801faf8:	4681      	mov	r9, r0
 801fafa:	e688      	b.n	801f80e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801fafc:	f1c1 0210 	rsb	r2, r1, #16
 801fb00:	4341      	muls	r1, r0
 801fb02:	fb09 1902 	mla	r9, r9, r2, r1
 801fb06:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801fb0a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801fb0e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801fb12:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fb16:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801fb1a:	ea42 0909 	orr.w	r9, r2, r9
 801fb1e:	fa1f f289 	uxth.w	r2, r9
 801fb22:	e71b      	b.n	801f95c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801fb24:	803a      	strh	r2, [r7, #0]
 801fb26:	e75d      	b.n	801f9e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801fb28:	f115 0e01 	adds.w	lr, r5, #1
 801fb2c:	f53f af5a 	bmi.w	801f9e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801fb30:	4572      	cmp	r2, lr
 801fb32:	f6ff af57 	blt.w	801f9e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801fb36:	f110 0e01 	adds.w	lr, r0, #1
 801fb3a:	f53f af53 	bmi.w	801f9e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801fb3e:	4573      	cmp	r3, lr
 801fb40:	f6ff af50 	blt.w	801f9e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801fb44:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801fb46:	9502      	str	r5, [sp, #8]
 801fb48:	b21b      	sxth	r3, r3
 801fb4a:	b212      	sxth	r2, r2
 801fb4c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801fb50:	9301      	str	r3, [sp, #4]
 801fb52:	9200      	str	r2, [sp, #0]
 801fb54:	e9cd c405 	strd	ip, r4, [sp, #20]
 801fb58:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801fb5c:	4639      	mov	r1, r7
 801fb5e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801fb60:	f7ff fc04 	bl	801f36c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801fb64:	e73e      	b.n	801f9e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801fb66:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801fb68:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801fb6c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801fb6e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801fb72:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fb74:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fb78:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801fb7a:	141f      	asrs	r7, r3, #16
 801fb7c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801fb7e:	141b      	asrs	r3, r3, #16
 801fb80:	fb01 3707 	mla	r7, r1, r7, r3
 801fb84:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801fb86:	fa1f fc82 	uxth.w	ip, r2
 801fb8a:	eb03 0a07 	add.w	sl, r3, r7
 801fb8e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801fb92:	f813 9007 	ldrb.w	r9, [r3, r7]
 801fb96:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801fb9a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801fb9e:	b29b      	uxth	r3, r3
 801fba0:	2d00      	cmp	r5, #0
 801fba2:	f000 813d 	beq.w	801fe20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801fba6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801fbaa:	940f      	str	r4, [sp, #60]	@ 0x3c
 801fbac:	eb0a 0b01 	add.w	fp, sl, r1
 801fbb0:	fa1f fa85 	uxth.w	sl, r5
 801fbb4:	fb0a fc0c 	mul.w	ip, sl, ip
 801fbb8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801fbbc:	fa1f fa8a 	uxth.w	sl, sl
 801fbc0:	eba0 000c 	sub.w	r0, r0, ip
 801fbc4:	eba3 030a 	sub.w	r3, r3, sl
 801fbc8:	b280      	uxth	r0, r0
 801fbca:	fb08 f000 	mul.w	r0, r8, r0
 801fbce:	b29b      	uxth	r3, r3
 801fbd0:	fb09 0303 	mla	r3, r9, r3, r0
 801fbd4:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801fbd6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801fbda:	9410      	str	r4, [sp, #64]	@ 0x40
 801fbdc:	fb0a 3300 	mla	r3, sl, r0, r3
 801fbe0:	fb0c 3304 	mla	r3, ip, r4, r3
 801fbe4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fbe8:	2b00      	cmp	r3, #0
 801fbea:	f000 810b 	beq.w	801fe04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801fbee:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801fbf0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801fbf2:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801fbf6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801fbfa:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801fbfe:	f000 8114 	beq.w	801fe2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801fc02:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801fc06:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801fc0a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801fc0e:	fb09 f707 	mul.w	r7, r9, r7
 801fc12:	fb0a fc0c 	mul.w	ip, sl, ip
 801fc16:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801fc1a:	f107 0b20 	add.w	fp, r7, #32
 801fc1e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801fc22:	44cc      	add	ip, r9
 801fc24:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801fc28:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fc2c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801fc30:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801fc34:	ea4c 0909 	orr.w	r9, ip, r9
 801fc38:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801fc3c:	8847      	ldrh	r7, [r0, #2]
 801fc3e:	d019      	beq.n	801fc74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801fc40:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801fc44:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801fc48:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801fc4c:	fb08 f807 	mul.w	r8, r8, r7
 801fc50:	fb0a fc0c 	mul.w	ip, sl, ip
 801fc54:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801fc58:	f108 0b20 	add.w	fp, r8, #32
 801fc5c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801fc60:	44bc      	add	ip, r7
 801fc62:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801fc66:	0a3f      	lsrs	r7, r7, #8
 801fc68:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801fc6c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801fc70:	ea4c 0707 	orr.w	r7, ip, r7
 801fc74:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801fc78:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801fc7c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801fc80:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801fc84:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801fc88:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801fc8c:	ea4c 0909 	orr.w	r9, ip, r9
 801fc90:	ea4a 0707 	orr.w	r7, sl, r7
 801fc94:	2d00      	cmp	r5, #0
 801fc96:	f000 80ca 	beq.w	801fe2e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801fc9a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801fc9e:	3901      	subs	r1, #1
 801fca0:	0049      	lsls	r1, r1, #1
 801fca2:	3102      	adds	r1, #2
 801fca4:	eb00 0c01 	add.w	ip, r0, r1
 801fca8:	5a41      	ldrh	r1, [r0, r1]
 801fcaa:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801fcac:	28ff      	cmp	r0, #255	@ 0xff
 801fcae:	d019      	beq.n	801fce4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801fcb0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801fcb2:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801fcb6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801fcba:	fb04 fa01 	mul.w	sl, r4, r1
 801fcbe:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801fcc2:	fb08 f800 	mul.w	r8, r8, r0
 801fcc6:	f10a 0020 	add.w	r0, sl, #32
 801fcca:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801fcce:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801fcd2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801fcd6:	4441      	add	r1, r8
 801fcd8:	0a00      	lsrs	r0, r0, #8
 801fcda:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801fcde:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fce2:	4301      	orrs	r1, r0
 801fce4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801fce6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801fcea:	2cff      	cmp	r4, #255	@ 0xff
 801fcec:	d01a      	beq.n	801fd24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801fcee:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801fcf2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fcf6:	fb04 fa00 	mul.w	sl, r4, r0
 801fcfa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801fcfe:	fb08 f80c 	mul.w	r8, r8, ip
 801fd02:	f10a 0c20 	add.w	ip, sl, #32
 801fd06:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801fd0a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801fd0e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801fd12:	4440      	add	r0, r8
 801fd14:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fd18:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801fd1c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801fd20:	ea40 000c 	orr.w	r0, r0, ip
 801fd24:	fb15 fc02 	smulbb	ip, r5, r2
 801fd28:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801fd2c:	f1c5 0810 	rsb	r8, r5, #16
 801fd30:	eba8 0802 	sub.w	r8, r8, r2
 801fd34:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801fd38:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801fd3c:	437a      	muls	r2, r7
 801fd3e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801fd42:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801fd46:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801fd4a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801fd4e:	fb09 2208 	mla	r2, r9, r8, r2
 801fd52:	ea4a 0101 	orr.w	r1, sl, r1
 801fd56:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801fd5a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801fd5e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801fd62:	fb05 2201 	mla	r2, r5, r1, r2
 801fd66:	ea4b 0000 	orr.w	r0, fp, r0
 801fd6a:	fb0c 2200 	mla	r2, ip, r0, r2
 801fd6e:	0d57      	lsrs	r7, r2, #21
 801fd70:	0952      	lsrs	r2, r2, #5
 801fd72:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801fd76:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801fd7a:	433a      	orrs	r2, r7
 801fd7c:	2bff      	cmp	r3, #255	@ 0xff
 801fd7e:	b292      	uxth	r2, r2
 801fd80:	d102      	bne.n	801fd88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801fd82:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801fd84:	29ff      	cmp	r1, #255	@ 0xff
 801fd86:	d063      	beq.n	801fe50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801fd88:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801fd8a:	f8be 1000 	ldrh.w	r1, [lr]
 801fd8e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801fd90:	4343      	muls	r3, r0
 801fd92:	1c58      	adds	r0, r3, #1
 801fd94:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801fd98:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801fd9c:	1208      	asrs	r0, r1, #8
 801fd9e:	b2db      	uxtb	r3, r3
 801fda0:	1215      	asrs	r5, r2, #8
 801fda2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801fda6:	fb10 f003 	smulbb	r0, r0, r3
 801fdaa:	10cf      	asrs	r7, r1, #3
 801fdac:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801fdb0:	00c9      	lsls	r1, r1, #3
 801fdb2:	fb05 0504 	mla	r5, r5, r4, r0
 801fdb6:	b2c9      	uxtb	r1, r1
 801fdb8:	10d0      	asrs	r0, r2, #3
 801fdba:	00d2      	lsls	r2, r2, #3
 801fdbc:	fb11 f103 	smulbb	r1, r1, r3
 801fdc0:	b2d2      	uxtb	r2, r2
 801fdc2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801fdc6:	fb02 1204 	mla	r2, r2, r4, r1
 801fdca:	fb17 f703 	smulbb	r7, r7, r3
 801fdce:	b2ad      	uxth	r5, r5
 801fdd0:	b292      	uxth	r2, r2
 801fdd2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801fdd6:	fb00 7004 	mla	r0, r0, r4, r7
 801fdda:	1c6b      	adds	r3, r5, #1
 801fddc:	1c57      	adds	r7, r2, #1
 801fdde:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801fde2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801fde6:	b280      	uxth	r0, r0
 801fde8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fdec:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801fdf0:	433d      	orrs	r5, r7
 801fdf2:	1c47      	adds	r7, r0, #1
 801fdf4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801fdf8:	097f      	lsrs	r7, r7, #5
 801fdfa:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801fdfe:	433d      	orrs	r5, r7
 801fe00:	f8ae 5000 	strh.w	r5, [lr]
 801fe04:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801fe06:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801fe08:	4413      	add	r3, r2
 801fe0a:	9321      	str	r3, [sp, #132]	@ 0x84
 801fe0c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801fe0e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fe10:	441a      	add	r2, r3
 801fe12:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801fe14:	9222      	str	r2, [sp, #136]	@ 0x88
 801fe16:	3b01      	subs	r3, #1
 801fe18:	f10e 0e02 	add.w	lr, lr, #2
 801fe1c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801fe1e:	e61c      	b.n	801fa5a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801fe20:	fb08 f000 	mul.w	r0, r8, r0
 801fe24:	fb09 0303 	mla	r3, r9, r3, r0
 801fe28:	e6dc      	b.n	801fbe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801fe2a:	46b9      	mov	r9, r7
 801fe2c:	e704      	b.n	801fc38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801fe2e:	f1c2 0110 	rsb	r1, r2, #16
 801fe32:	437a      	muls	r2, r7
 801fe34:	fb09 2901 	mla	r9, r9, r1, r2
 801fe38:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801fe3c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801fe40:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801fe44:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fe48:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801fe4c:	4302      	orrs	r2, r0
 801fe4e:	e795      	b.n	801fd7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801fe50:	f8ae 2000 	strh.w	r2, [lr]
 801fe54:	e7d6      	b.n	801fe04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801fe56:	b017      	add	sp, #92	@ 0x5c
 801fe58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fe5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801fe5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fe60:	b085      	sub	sp, #20
 801fe62:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801fe66:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801fe6a:	9103      	str	r1, [sp, #12]
 801fe6c:	fb00 7406 	mla	r4, r0, r6, r7
 801fe70:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801fe74:	2800      	cmp	r0, #0
 801fe76:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801fe7a:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801fe7e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801fe82:	9501      	str	r5, [sp, #4]
 801fe84:	eb02 0904 	add.w	r9, r2, r4
 801fe88:	f2c0 8141 	blt.w	802010e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801fe8c:	4583      	cmp	fp, r0
 801fe8e:	f340 813e 	ble.w	802010e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801fe92:	2f00      	cmp	r7, #0
 801fe94:	f2c0 8137 	blt.w	8020106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801fe98:	42be      	cmp	r6, r7
 801fe9a:	f340 8134 	ble.w	8020106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801fe9e:	f812 c004 	ldrb.w	ip, [r2, r4]
 801fea2:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801fea6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801feaa:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801feae:	4355      	muls	r5, r2
 801feb0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801feb4:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801feb8:	fb0c f203 	mul.w	r2, ip, r3
 801febc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801fec0:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801fec4:	441d      	add	r5, r3
 801fec6:	f102 0320 	add.w	r3, r2, #32
 801feca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fece:	0a1b      	lsrs	r3, r3, #8
 801fed0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801fed4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fed8:	431c      	orrs	r4, r3
 801feda:	1c7b      	adds	r3, r7, #1
 801fedc:	f100 811c 	bmi.w	8020118 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801fee0:	429e      	cmp	r6, r3
 801fee2:	f340 8119 	ble.w	8020118 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801fee6:	2900      	cmp	r1, #0
 801fee8:	f000 8119 	beq.w	802011e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801feec:	9a01      	ldr	r2, [sp, #4]
 801feee:	f899 3001 	ldrb.w	r3, [r9, #1]
 801fef2:	8855      	ldrh	r5, [r2, #2]
 801fef4:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801fef8:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801fefc:	fb08 f802 	mul.w	r8, r8, r2
 801ff00:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ff04:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801ff08:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801ff0c:	435d      	muls	r5, r3
 801ff0e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ff12:	44d0      	add	r8, sl
 801ff14:	f105 0a20 	add.w	sl, r5, #32
 801ff18:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801ff1c:	0a2d      	lsrs	r5, r5, #8
 801ff1e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801ff22:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ff26:	432a      	orrs	r2, r5
 801ff28:	3001      	adds	r0, #1
 801ff2a:	f100 80fe 	bmi.w	802012a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801ff2e:	4583      	cmp	fp, r0
 801ff30:	f340 80fb 	ble.w	802012a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801ff34:	f1be 0f00 	cmp.w	lr, #0
 801ff38:	f000 80fc 	beq.w	8020134 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801ff3c:	2f00      	cmp	r7, #0
 801ff3e:	f2c0 80f1 	blt.w	8020124 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801ff42:	42be      	cmp	r6, r7
 801ff44:	f340 80ee 	ble.w	8020124 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801ff48:	9801      	ldr	r0, [sp, #4]
 801ff4a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801ff4e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801ff52:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ff56:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801ff5a:	fb0a fa00 	mul.w	sl, sl, r0
 801ff5e:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801ff62:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801ff66:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801ff6a:	fb05 f808 	mul.w	r8, r5, r8
 801ff6e:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801ff72:	4482      	add	sl, r0
 801ff74:	f108 0020 	add.w	r0, r8, #32
 801ff78:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801ff7c:	0a00      	lsrs	r0, r0, #8
 801ff7e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801ff82:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ff86:	ea4b 0b00 	orr.w	fp, fp, r0
 801ff8a:	3701      	adds	r7, #1
 801ff8c:	f100 80d7 	bmi.w	802013e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801ff90:	42be      	cmp	r6, r7
 801ff92:	f340 80d4 	ble.w	802013e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801ff96:	2900      	cmp	r1, #0
 801ff98:	f000 80d4 	beq.w	8020144 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801ff9c:	3601      	adds	r6, #1
 801ff9e:	9801      	ldr	r0, [sp, #4]
 801ffa0:	f819 7006 	ldrb.w	r7, [r9, r6]
 801ffa4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801ffa8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801ffac:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801ffb0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ffb4:	fb09 f906 	mul.w	r9, r9, r6
 801ffb8:	fb07 f800 	mul.w	r8, r7, r0
 801ffbc:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801ffc0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801ffc4:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801ffc8:	44d1      	add	r9, sl
 801ffca:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801ffce:	f108 0020 	add.w	r0, r8, #32
 801ffd2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801ffd6:	0a00      	lsrs	r0, r0, #8
 801ffd8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ffdc:	4330      	orrs	r0, r6
 801ffde:	b28e      	uxth	r6, r1
 801ffe0:	fa1f f98e 	uxth.w	r9, lr
 801ffe4:	fb06 f809 	mul.w	r8, r6, r9
 801ffe8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801ffec:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801fff0:	0136      	lsls	r6, r6, #4
 801fff2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801fff6:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801fffa:	9601      	str	r6, [sp, #4]
 801fffc:	ea4a 0404 	orr.w	r4, sl, r4
 8020000:	fa1f f689 	uxth.w	r6, r9
 8020004:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8020008:	fb11 f90e 	smulbb	r9, r1, lr
 802000c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8020010:	9602      	str	r6, [sp, #8]
 8020012:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8020016:	4626      	mov	r6, r4
 8020018:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802001c:	f1ce 0410 	rsb	r4, lr, #16
 8020020:	1a64      	subs	r4, r4, r1
 8020022:	ea4a 0202 	orr.w	r2, sl, r2
 8020026:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802002a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802002e:	434a      	muls	r2, r1
 8020030:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8020034:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8020038:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802003c:	fb04 2406 	mla	r4, r4, r6, r2
 8020040:	ea4a 0000 	orr.w	r0, sl, r0
 8020044:	fb09 4200 	mla	r2, r9, r0, r4
 8020048:	ea4f 440b 	mov.w	r4, fp, lsl #16
 802004c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8020050:	9801      	ldr	r0, [sp, #4]
 8020052:	9903      	ldr	r1, [sp, #12]
 8020054:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8020058:	ea44 0b0b 	orr.w	fp, r4, fp
 802005c:	9c02      	ldr	r4, [sp, #8]
 802005e:	8809      	ldrh	r1, [r1, #0]
 8020060:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 8020064:	1b00      	subs	r0, r0, r4
 8020066:	9c01      	ldr	r4, [sp, #4]
 8020068:	eba4 0608 	sub.w	r6, r4, r8
 802006c:	b2b6      	uxth	r6, r6
 802006e:	b280      	uxth	r0, r0
 8020070:	4373      	muls	r3, r6
 8020072:	fb0c 3300 	mla	r3, ip, r0, r3
 8020076:	9802      	ldr	r0, [sp, #8]
 8020078:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 802007c:	fb00 3505 	mla	r5, r0, r5, r3
 8020080:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8020084:	fb08 5707 	mla	r7, r8, r7, r5
 8020088:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802008c:	120b      	asrs	r3, r1, #8
 802008e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8020092:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8020096:	b2ff      	uxtb	r7, r7
 8020098:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802009c:	10c8      	asrs	r0, r1, #3
 802009e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80200a2:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80200a6:	00c9      	lsls	r1, r1, #3
 80200a8:	437b      	muls	r3, r7
 80200aa:	ea42 0e0e 	orr.w	lr, r2, lr
 80200ae:	b2c9      	uxtb	r1, r1
 80200b0:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80200b4:	fa1f f28e 	uxth.w	r2, lr
 80200b8:	4378      	muls	r0, r7
 80200ba:	434f      	muls	r7, r1
 80200bc:	1c59      	adds	r1, r3, #1
 80200be:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80200c2:	1213      	asrs	r3, r2, #8
 80200c4:	f023 0307 	bic.w	r3, r3, #7
 80200c8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80200cc:	1c41      	adds	r1, r0, #1
 80200ce:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80200d2:	10d1      	asrs	r1, r2, #3
 80200d4:	f021 0103 	bic.w	r1, r1, #3
 80200d8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80200dc:	021b      	lsls	r3, r3, #8
 80200de:	00c9      	lsls	r1, r1, #3
 80200e0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80200e4:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80200e8:	430b      	orrs	r3, r1
 80200ea:	1c79      	adds	r1, r7, #1
 80200ec:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80200f0:	00d2      	lsls	r2, r2, #3
 80200f2:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80200f6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80200fa:	431a      	orrs	r2, r3
 80200fc:	9b03      	ldr	r3, [sp, #12]
 80200fe:	801a      	strh	r2, [r3, #0]
 8020100:	b005      	add	sp, #20
 8020102:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020106:	f04f 0c00 	mov.w	ip, #0
 802010a:	4664      	mov	r4, ip
 802010c:	e6e5      	b.n	801feda <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 802010e:	2300      	movs	r3, #0
 8020110:	469c      	mov	ip, r3
 8020112:	461a      	mov	r2, r3
 8020114:	461c      	mov	r4, r3
 8020116:	e707      	b.n	801ff28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8020118:	2300      	movs	r3, #0
 802011a:	461a      	mov	r2, r3
 802011c:	e704      	b.n	801ff28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802011e:	460b      	mov	r3, r1
 8020120:	460a      	mov	r2, r1
 8020122:	e701      	b.n	801ff28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8020124:	2500      	movs	r5, #0
 8020126:	46ab      	mov	fp, r5
 8020128:	e72f      	b.n	801ff8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 802012a:	2700      	movs	r7, #0
 802012c:	463d      	mov	r5, r7
 802012e:	4638      	mov	r0, r7
 8020130:	46bb      	mov	fp, r7
 8020132:	e754      	b.n	801ffde <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8020134:	4677      	mov	r7, lr
 8020136:	4675      	mov	r5, lr
 8020138:	4670      	mov	r0, lr
 802013a:	46f3      	mov	fp, lr
 802013c:	e74f      	b.n	801ffde <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802013e:	2700      	movs	r7, #0
 8020140:	4638      	mov	r0, r7
 8020142:	e74c      	b.n	801ffde <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8020144:	460f      	mov	r7, r1
 8020146:	4608      	mov	r0, r1
 8020148:	e749      	b.n	801ffde <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0802014c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802014c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020150:	b093      	sub	sp, #76	@ 0x4c
 8020152:	9210      	str	r2, [sp, #64]	@ 0x40
 8020154:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8020156:	910e      	str	r1, [sp, #56]	@ 0x38
 8020158:	9306      	str	r3, [sp, #24]
 802015a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 802015e:	9011      	str	r0, [sp, #68]	@ 0x44
 8020160:	6850      	ldr	r0, [r2, #4]
 8020162:	6812      	ldr	r2, [r2, #0]
 8020164:	fb00 1303 	mla	r3, r0, r3, r1
 8020168:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802016c:	9307      	str	r3, [sp, #28]
 802016e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020170:	681b      	ldr	r3, [r3, #0]
 8020172:	9308      	str	r3, [sp, #32]
 8020174:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020176:	685b      	ldr	r3, [r3, #4]
 8020178:	9309      	str	r3, [sp, #36]	@ 0x24
 802017a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802017c:	2b00      	cmp	r3, #0
 802017e:	dc03      	bgt.n	8020188 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020180:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020182:	2b00      	cmp	r3, #0
 8020184:	f340 83b4 	ble.w	80208f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8020188:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802018a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802018e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020192:	1e48      	subs	r0, r1, #1
 8020194:	1e55      	subs	r5, r2, #1
 8020196:	9b06      	ldr	r3, [sp, #24]
 8020198:	2b00      	cmp	r3, #0
 802019a:	f340 8163 	ble.w	8020464 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802019e:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 80201a0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80201a2:	1436      	asrs	r6, r6, #16
 80201a4:	ea4f 4323 	mov.w	r3, r3, asr #16
 80201a8:	d406      	bmi.n	80201b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80201aa:	4286      	cmp	r6, r0
 80201ac:	da04      	bge.n	80201b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80201ae:	2b00      	cmp	r3, #0
 80201b0:	db02      	blt.n	80201b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80201b2:	42ab      	cmp	r3, r5
 80201b4:	f2c0 8157 	blt.w	8020466 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 80201b8:	3601      	adds	r6, #1
 80201ba:	f100 8144 	bmi.w	8020446 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80201be:	42b1      	cmp	r1, r6
 80201c0:	f2c0 8141 	blt.w	8020446 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80201c4:	3301      	adds	r3, #1
 80201c6:	f100 813e 	bmi.w	8020446 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80201ca:	429a      	cmp	r2, r3
 80201cc:	f2c0 813b 	blt.w	8020446 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80201d0:	9b06      	ldr	r3, [sp, #24]
 80201d2:	9f07      	ldr	r7, [sp, #28]
 80201d4:	930f      	str	r3, [sp, #60]	@ 0x3c
 80201d6:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 80201da:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80201dc:	2b00      	cmp	r3, #0
 80201de:	f340 8164 	ble.w	80204aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80201e2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80201e4:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 80201e6:	1418      	asrs	r0, r3, #16
 80201e8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80201ea:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80201ee:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80201f0:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80201f4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80201f6:	142d      	asrs	r5, r5, #16
 80201f8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80201fc:	f100 81ee 	bmi.w	80205dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8020200:	f102 3eff 	add.w	lr, r2, #4294967295
 8020204:	4575      	cmp	r5, lr
 8020206:	f280 81e9 	bge.w	80205dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802020a:	2800      	cmp	r0, #0
 802020c:	f2c0 81e6 	blt.w	80205dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8020210:	f103 3eff 	add.w	lr, r3, #4294967295
 8020214:	4570      	cmp	r0, lr
 8020216:	f280 81e1 	bge.w	80205dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802021a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802021c:	b212      	sxth	r2, r2
 802021e:	fb00 5002 	mla	r0, r0, r2, r5
 8020222:	fa1f fe81 	uxth.w	lr, r1
 8020226:	eb03 0a00 	add.w	sl, r3, r0
 802022a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802022e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8020232:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8020236:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 802023a:	b29b      	uxth	r3, r3
 802023c:	f1bc 0f00 	cmp.w	ip, #0
 8020240:	f000 8179 	beq.w	8020536 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8020244:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8020248:	940a      	str	r4, [sp, #40]	@ 0x28
 802024a:	eb0a 0b02 	add.w	fp, sl, r2
 802024e:	fa1f fa8c 	uxth.w	sl, ip
 8020252:	fb0a fe0e 	mul.w	lr, sl, lr
 8020256:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802025a:	fa1f fa8a 	uxth.w	sl, sl
 802025e:	eba5 050e 	sub.w	r5, r5, lr
 8020262:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8020266:	940b      	str	r4, [sp, #44]	@ 0x2c
 8020268:	eba3 030a 	sub.w	r3, r3, sl
 802026c:	b2ad      	uxth	r5, r5
 802026e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8020270:	b29b      	uxth	r3, r3
 8020272:	fb08 f505 	mul.w	r5, r8, r5
 8020276:	fb09 5303 	mla	r3, r9, r3, r5
 802027a:	fb0a 3304 	mla	r3, sl, r4, r3
 802027e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020280:	fb0e 3304 	mla	r3, lr, r4, r3
 8020284:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020288:	2b00      	cmp	r3, #0
 802028a:	f000 80cf 	beq.w	802042c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802028e:	9c08      	ldr	r4, [sp, #32]
 8020290:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8020294:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8020298:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 802029c:	f000 8150 	beq.w	8020540 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 80202a0:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 80202a4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80202a8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80202ac:	fb09 f000 	mul.w	r0, r9, r0
 80202b0:	fb0a fe0e 	mul.w	lr, sl, lr
 80202b4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80202b8:	f100 0b20 	add.w	fp, r0, #32
 80202bc:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 80202c0:	44ce      	add	lr, r9
 80202c2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80202c6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80202ca:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80202ce:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80202d2:	ea4e 0909 	orr.w	r9, lr, r9
 80202d6:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 80202da:	8868      	ldrh	r0, [r5, #2]
 80202dc:	d019      	beq.n	8020312 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80202de:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 80202e2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80202e6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80202ea:	fb08 f800 	mul.w	r8, r8, r0
 80202ee:	fb0a fe0e 	mul.w	lr, sl, lr
 80202f2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80202f6:	f108 0b20 	add.w	fp, r8, #32
 80202fa:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 80202fe:	4486      	add	lr, r0
 8020300:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8020304:	0a00      	lsrs	r0, r0, #8
 8020306:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802030a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802030e:	ea4e 0000 	orr.w	r0, lr, r0
 8020312:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8020316:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802031a:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 802031e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8020322:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8020326:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802032a:	ea4e 0909 	orr.w	r9, lr, r9
 802032e:	ea4a 0000 	orr.w	r0, sl, r0
 8020332:	f1bc 0f00 	cmp.w	ip, #0
 8020336:	f000 8105 	beq.w	8020544 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802033a:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 802033e:	3a01      	subs	r2, #1
 8020340:	0052      	lsls	r2, r2, #1
 8020342:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8020344:	3202      	adds	r2, #2
 8020346:	2cff      	cmp	r4, #255	@ 0xff
 8020348:	eb05 0e02 	add.w	lr, r5, r2
 802034c:	5aaa      	ldrh	r2, [r5, r2]
 802034e:	d018      	beq.n	8020382 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8020350:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8020354:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020358:	fb04 fa02 	mul.w	sl, r4, r2
 802035c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020360:	fb08 f805 	mul.w	r8, r8, r5
 8020364:	f10a 0520 	add.w	r5, sl, #32
 8020368:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 802036c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8020370:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8020374:	4442      	add	r2, r8
 8020376:	0a2d      	lsrs	r5, r5, #8
 8020378:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 802037c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8020380:	432a      	orrs	r2, r5
 8020382:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020384:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8020388:	2cff      	cmp	r4, #255	@ 0xff
 802038a:	d01a      	beq.n	80203c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802038c:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8020390:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8020394:	fb04 fa05 	mul.w	sl, r4, r5
 8020398:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802039c:	fb08 f80e 	mul.w	r8, r8, lr
 80203a0:	f10a 0e20 	add.w	lr, sl, #32
 80203a4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80203a8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80203ac:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80203b0:	4445      	add	r5, r8
 80203b2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80203b6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80203ba:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 80203be:	ea45 050e 	orr.w	r5, r5, lr
 80203c2:	fb1c fe01 	smulbb	lr, ip, r1
 80203c6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80203ca:	f1cc 0810 	rsb	r8, ip, #16
 80203ce:	eba8 0801 	sub.w	r8, r8, r1
 80203d2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80203d6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80203da:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80203de:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80203e2:	4341      	muls	r1, r0
 80203e4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80203e8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80203ec:	ea4a 0202 	orr.w	r2, sl, r2
 80203f0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80203f4:	fb09 1108 	mla	r1, r9, r8, r1
 80203f8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80203fc:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8020400:	fb0c 1102 	mla	r1, ip, r2, r1
 8020404:	ea4b 0505 	orr.w	r5, fp, r5
 8020408:	fb0e 1e05 	mla	lr, lr, r5, r1
 802040c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8020410:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8020414:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020418:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 802041c:	ea42 0e0e 	orr.w	lr, r2, lr
 8020420:	fa1f f28e 	uxth.w	r2, lr
 8020424:	2bff      	cmp	r3, #255	@ 0xff
 8020426:	f040 80a1 	bne.w	802056c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802042a:	803a      	strh	r2, [r7, #0]
 802042c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 802042e:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8020430:	4413      	add	r3, r2
 8020432:	931d      	str	r3, [sp, #116]	@ 0x74
 8020434:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8020436:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020438:	441a      	add	r2, r3
 802043a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802043c:	921e      	str	r2, [sp, #120]	@ 0x78
 802043e:	3b01      	subs	r3, #1
 8020440:	3702      	adds	r7, #2
 8020442:	930f      	str	r3, [sp, #60]	@ 0x3c
 8020444:	e6c9      	b.n	80201da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020446:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8020448:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 802044a:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 802044c:	4433      	add	r3, r6
 802044e:	931d      	str	r3, [sp, #116]	@ 0x74
 8020450:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020452:	441c      	add	r4, r3
 8020454:	9b06      	ldr	r3, [sp, #24]
 8020456:	941e      	str	r4, [sp, #120]	@ 0x78
 8020458:	3b01      	subs	r3, #1
 802045a:	9306      	str	r3, [sp, #24]
 802045c:	9b07      	ldr	r3, [sp, #28]
 802045e:	3302      	adds	r3, #2
 8020460:	9307      	str	r3, [sp, #28]
 8020462:	e698      	b.n	8020196 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020464:	d028      	beq.n	80204b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8020466:	9b06      	ldr	r3, [sp, #24]
 8020468:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 802046a:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 802046c:	3b01      	subs	r3, #1
 802046e:	fb00 5003 	mla	r0, r0, r3, r5
 8020472:	1400      	asrs	r0, r0, #16
 8020474:	f53f aeac 	bmi.w	80201d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8020478:	3901      	subs	r1, #1
 802047a:	4288      	cmp	r0, r1
 802047c:	f6bf aea8 	bge.w	80201d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8020480:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8020482:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8020484:	fb01 0303 	mla	r3, r1, r3, r0
 8020488:	141b      	asrs	r3, r3, #16
 802048a:	f53f aea1 	bmi.w	80201d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802048e:	3a01      	subs	r2, #1
 8020490:	4293      	cmp	r3, r2
 8020492:	f6bf ae9d 	bge.w	80201d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8020496:	9b06      	ldr	r3, [sp, #24]
 8020498:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802049c:	930f      	str	r3, [sp, #60]	@ 0x3c
 802049e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 80204a2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80204a4:	2b00      	cmp	r3, #0
 80204a6:	f300 80b6 	bgt.w	8020616 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 80204aa:	9b06      	ldr	r3, [sp, #24]
 80204ac:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80204b0:	9b07      	ldr	r3, [sp, #28]
 80204b2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80204b6:	9307      	str	r3, [sp, #28]
 80204b8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80204ba:	2b00      	cmp	r3, #0
 80204bc:	f340 8218 	ble.w	80208f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80204c0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80204c4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80204c8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80204cc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80204ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80204d2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80204d6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80204da:	eef0 6a62 	vmov.f32	s13, s5
 80204de:	ee61 7a27 	vmul.f32	s15, s2, s15
 80204e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80204e6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80204ea:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 80204ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80204f2:	eef0 6a43 	vmov.f32	s13, s6
 80204f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80204fa:	ee12 2a90 	vmov	r2, s5
 80204fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020502:	fb92 f3f3 	sdiv	r3, r2, r3
 8020506:	ee13 2a10 	vmov	r2, s6
 802050a:	931f      	str	r3, [sp, #124]	@ 0x7c
 802050c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802050e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020512:	9320      	str	r3, [sp, #128]	@ 0x80
 8020514:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8020516:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8020518:	3b01      	subs	r3, #1
 802051a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802051e:	930e      	str	r3, [sp, #56]	@ 0x38
 8020520:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020522:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 8020526:	bf08      	it	eq
 8020528:	4613      	moveq	r3, r2
 802052a:	9306      	str	r3, [sp, #24]
 802052c:	eeb0 3a67 	vmov.f32	s6, s15
 8020530:	eef0 2a47 	vmov.f32	s5, s14
 8020534:	e621      	b.n	802017a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8020536:	fb08 f505 	mul.w	r5, r8, r5
 802053a:	fb09 5303 	mla	r3, r9, r3, r5
 802053e:	e6a1      	b.n	8020284 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8020540:	4681      	mov	r9, r0
 8020542:	e6c8      	b.n	80202d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8020544:	f1c1 0210 	rsb	r2, r1, #16
 8020548:	4341      	muls	r1, r0
 802054a:	fb09 1902 	mla	r9, r9, r2, r1
 802054e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8020552:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8020556:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802055a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802055e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8020562:	ea42 0909 	orr.w	r9, r2, r9
 8020566:	fa1f f289 	uxth.w	r2, r9
 802056a:	e75b      	b.n	8020424 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802056c:	f8b7 c000 	ldrh.w	ip, [r7]
 8020570:	43db      	mvns	r3, r3
 8020572:	ea4f 202c 	mov.w	r0, ip, asr #8
 8020576:	fa5f fe83 	uxtb.w	lr, r3
 802057a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802057e:	fb00 f00e 	mul.w	r0, r0, lr
 8020582:	1c41      	adds	r1, r0, #1
 8020584:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8020588:	1211      	asrs	r1, r2, #8
 802058a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802058e:	f021 0107 	bic.w	r1, r1, #7
 8020592:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8020596:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 802059a:	48d7      	ldr	r0, [pc, #860]	@ (80208f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802059c:	fb05 f50e 	mul.w	r5, r5, lr
 80205a0:	b2c9      	uxtb	r1, r1
 80205a2:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 80205a6:	1c69      	adds	r1, r5, #1
 80205a8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80205ac:	10d1      	asrs	r1, r2, #3
 80205ae:	f021 0103 	bic.w	r1, r1, #3
 80205b2:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80205b6:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80205ba:	b2db      	uxtb	r3, r3
 80205bc:	00c9      	lsls	r1, r1, #3
 80205be:	fb03 f30e 	mul.w	r3, r3, lr
 80205c2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80205c6:	4301      	orrs	r1, r0
 80205c8:	1c58      	adds	r0, r3, #1
 80205ca:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80205ce:	00d2      	lsls	r2, r2, #3
 80205d0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80205d4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80205d8:	430a      	orrs	r2, r1
 80205da:	e726      	b.n	802042a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 80205dc:	f115 0e01 	adds.w	lr, r5, #1
 80205e0:	f53f af24 	bmi.w	802042c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80205e4:	4572      	cmp	r2, lr
 80205e6:	f6ff af21 	blt.w	802042c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80205ea:	f110 0e01 	adds.w	lr, r0, #1
 80205ee:	f53f af1d 	bmi.w	802042c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80205f2:	4573      	cmp	r3, lr
 80205f4:	f6ff af1a 	blt.w	802042c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80205f8:	b21b      	sxth	r3, r3
 80205fa:	b212      	sxth	r2, r2
 80205fc:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8020600:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8020604:	9301      	str	r3, [sp, #4]
 8020606:	9200      	str	r2, [sp, #0]
 8020608:	4639      	mov	r1, r7
 802060a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802060e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8020610:	f7ff fc24 	bl	801fe5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8020614:	e70a      	b.n	802042c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8020616:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8020618:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802061c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802061e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8020622:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020624:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020628:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802062a:	141f      	asrs	r7, r3, #16
 802062c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 802062e:	141b      	asrs	r3, r3, #16
 8020630:	fb01 3707 	mla	r7, r1, r7, r3
 8020634:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020636:	fa1f fc82 	uxth.w	ip, r2
 802063a:	eb03 0a07 	add.w	sl, r3, r7
 802063e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8020642:	f813 9007 	ldrb.w	r9, [r3, r7]
 8020646:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802064a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 802064e:	b29b      	uxth	r3, r3
 8020650:	2d00      	cmp	r5, #0
 8020652:	f000 80fe 	beq.w	8020852 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8020656:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802065a:	940c      	str	r4, [sp, #48]	@ 0x30
 802065c:	eb0a 0b01 	add.w	fp, sl, r1
 8020660:	fa1f fa85 	uxth.w	sl, r5
 8020664:	fb0a fc0c 	mul.w	ip, sl, ip
 8020668:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802066c:	fa1f fa8a 	uxth.w	sl, sl
 8020670:	eba0 000c 	sub.w	r0, r0, ip
 8020674:	eba3 030a 	sub.w	r3, r3, sl
 8020678:	b280      	uxth	r0, r0
 802067a:	fb08 f000 	mul.w	r0, r8, r0
 802067e:	b29b      	uxth	r3, r3
 8020680:	fb09 0303 	mla	r3, r9, r3, r0
 8020684:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8020686:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802068a:	940d      	str	r4, [sp, #52]	@ 0x34
 802068c:	fb0a 3300 	mla	r3, sl, r0, r3
 8020690:	fb0c 3304 	mla	r3, ip, r4, r3
 8020694:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020698:	2b00      	cmp	r3, #0
 802069a:	f000 80cc 	beq.w	8020836 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802069e:	9808      	ldr	r0, [sp, #32]
 80206a0:	9c08      	ldr	r4, [sp, #32]
 80206a2:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80206a6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80206aa:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80206ae:	f000 80d5 	beq.w	802085c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80206b2:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 80206b6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80206ba:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80206be:	fb09 f707 	mul.w	r7, r9, r7
 80206c2:	fb0a fc0c 	mul.w	ip, sl, ip
 80206c6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80206ca:	f107 0b20 	add.w	fp, r7, #32
 80206ce:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 80206d2:	44cc      	add	ip, r9
 80206d4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80206d8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80206dc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80206e0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80206e4:	ea4c 0909 	orr.w	r9, ip, r9
 80206e8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 80206ec:	8847      	ldrh	r7, [r0, #2]
 80206ee:	d019      	beq.n	8020724 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 80206f0:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 80206f4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80206f8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80206fc:	fb08 f807 	mul.w	r8, r8, r7
 8020700:	fb0a fc0c 	mul.w	ip, sl, ip
 8020704:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8020708:	f108 0b20 	add.w	fp, r8, #32
 802070c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8020710:	44bc      	add	ip, r7
 8020712:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8020716:	0a3f      	lsrs	r7, r7, #8
 8020718:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802071c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8020720:	ea4c 0707 	orr.w	r7, ip, r7
 8020724:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8020728:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802072c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8020730:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8020734:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8020738:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 802073c:	ea4c 0909 	orr.w	r9, ip, r9
 8020740:	ea4a 0707 	orr.w	r7, sl, r7
 8020744:	2d00      	cmp	r5, #0
 8020746:	f000 808b 	beq.w	8020860 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802074a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 802074e:	3901      	subs	r1, #1
 8020750:	0049      	lsls	r1, r1, #1
 8020752:	3102      	adds	r1, #2
 8020754:	eb00 0c01 	add.w	ip, r0, r1
 8020758:	5a41      	ldrh	r1, [r0, r1]
 802075a:	980c      	ldr	r0, [sp, #48]	@ 0x30
 802075c:	28ff      	cmp	r0, #255	@ 0xff
 802075e:	d019      	beq.n	8020794 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8020760:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8020762:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8020766:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802076a:	fb04 fa01 	mul.w	sl, r4, r1
 802076e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020772:	fb08 f800 	mul.w	r8, r8, r0
 8020776:	f10a 0020 	add.w	r0, sl, #32
 802077a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802077e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8020782:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8020786:	4441      	add	r1, r8
 8020788:	0a00      	lsrs	r0, r0, #8
 802078a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802078e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020792:	4301      	orrs	r1, r0
 8020794:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8020796:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802079a:	2cff      	cmp	r4, #255	@ 0xff
 802079c:	d01a      	beq.n	80207d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802079e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 80207a2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80207a6:	fb04 fa00 	mul.w	sl, r4, r0
 80207aa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80207ae:	fb08 f80c 	mul.w	r8, r8, ip
 80207b2:	f10a 0c20 	add.w	ip, sl, #32
 80207b6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80207ba:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80207be:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80207c2:	4440      	add	r0, r8
 80207c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80207c8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80207cc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80207d0:	ea40 000c 	orr.w	r0, r0, ip
 80207d4:	fb15 fc02 	smulbb	ip, r5, r2
 80207d8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80207dc:	f1c5 0810 	rsb	r8, r5, #16
 80207e0:	eba8 0802 	sub.w	r8, r8, r2
 80207e4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80207e8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80207ec:	437a      	muls	r2, r7
 80207ee:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80207f2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80207f6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80207fa:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80207fe:	fb09 2208 	mla	r2, r9, r8, r2
 8020802:	ea4a 0101 	orr.w	r1, sl, r1
 8020806:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802080a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802080e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8020812:	fb05 2201 	mla	r2, r5, r1, r2
 8020816:	ea4b 0000 	orr.w	r0, fp, r0
 802081a:	fb0c 2200 	mla	r2, ip, r0, r2
 802081e:	0d57      	lsrs	r7, r2, #21
 8020820:	0952      	lsrs	r2, r2, #5
 8020822:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8020826:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802082a:	433a      	orrs	r2, r7
 802082c:	2bff      	cmp	r3, #255	@ 0xff
 802082e:	b292      	uxth	r2, r2
 8020830:	d127      	bne.n	8020882 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8020832:	f8ae 2000 	strh.w	r2, [lr]
 8020836:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8020838:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 802083a:	4413      	add	r3, r2
 802083c:	931d      	str	r3, [sp, #116]	@ 0x74
 802083e:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8020840:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020842:	441a      	add	r2, r3
 8020844:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8020846:	921e      	str	r2, [sp, #120]	@ 0x78
 8020848:	3b01      	subs	r3, #1
 802084a:	f10e 0e02 	add.w	lr, lr, #2
 802084e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8020850:	e627      	b.n	80204a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8020852:	fb08 f000 	mul.w	r0, r8, r0
 8020856:	fb09 0303 	mla	r3, r9, r3, r0
 802085a:	e71b      	b.n	8020694 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 802085c:	46b9      	mov	r9, r7
 802085e:	e743      	b.n	80206e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8020860:	f1c2 0110 	rsb	r1, r2, #16
 8020864:	437a      	muls	r2, r7
 8020866:	fb09 2901 	mla	r9, r9, r1, r2
 802086a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802086e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8020872:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8020876:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802087a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802087e:	4302      	orrs	r2, r0
 8020880:	e7d4      	b.n	802082c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8020882:	f8be 7000 	ldrh.w	r7, [lr]
 8020886:	4c1c      	ldr	r4, [pc, #112]	@ (80208f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8020888:	43db      	mvns	r3, r3
 802088a:	1238      	asrs	r0, r7, #8
 802088c:	fa5f fc83 	uxtb.w	ip, r3
 8020890:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020894:	10fd      	asrs	r5, r7, #3
 8020896:	fb00 f00c 	mul.w	r0, r0, ip
 802089a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 802089e:	fb05 f10c 	mul.w	r1, r5, ip
 80208a2:	1c45      	adds	r5, r0, #1
 80208a4:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80208a8:	1215      	asrs	r5, r2, #8
 80208aa:	f025 0507 	bic.w	r5, r5, #7
 80208ae:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80208b2:	1c4d      	adds	r5, r1, #1
 80208b4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80208b8:	10d1      	asrs	r1, r2, #3
 80208ba:	f021 0103 	bic.w	r1, r1, #3
 80208be:	00fb      	lsls	r3, r7, #3
 80208c0:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80208c4:	b2db      	uxtb	r3, r3
 80208c6:	b2c0      	uxtb	r0, r0
 80208c8:	00c9      	lsls	r1, r1, #3
 80208ca:	fb03 f30c 	mul.w	r3, r3, ip
 80208ce:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80208d2:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80208d6:	4308      	orrs	r0, r1
 80208d8:	1c59      	adds	r1, r3, #1
 80208da:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80208de:	00d2      	lsls	r2, r2, #3
 80208e0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80208e4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80208e8:	4318      	orrs	r0, r3
 80208ea:	f8ae 0000 	strh.w	r0, [lr]
 80208ee:	e7a2      	b.n	8020836 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80208f0:	b013      	add	sp, #76	@ 0x4c
 80208f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80208f6:	bf00      	nop
 80208f8:	fffff800 	.word	0xfffff800

080208fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80208fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020900:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 8020904:	fb05 4c03 	mla	ip, r5, r3, r4
 8020908:	2d00      	cmp	r5, #0
 802090a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802090e:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 8020912:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8020916:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 802091a:	8808      	ldrh	r0, [r1, #0]
 802091c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8020920:	f2c0 80a7 	blt.w	8020a72 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8020924:	45aa      	cmp	sl, r5
 8020926:	f340 80a4 	ble.w	8020a72 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802092a:	2c00      	cmp	r4, #0
 802092c:	f2c0 809f 	blt.w	8020a6e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8020930:	42a3      	cmp	r3, r4
 8020932:	f340 809c 	ble.w	8020a6e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8020936:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 802093a:	1c62      	adds	r2, r4, #1
 802093c:	f100 809c 	bmi.w	8020a78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8020940:	4293      	cmp	r3, r2
 8020942:	f340 8099 	ble.w	8020a78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8020946:	f1b9 0f00 	cmp.w	r9, #0
 802094a:	f000 8095 	beq.w	8020a78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802094e:	f8be c002 	ldrh.w	ip, [lr, #2]
 8020952:	3501      	adds	r5, #1
 8020954:	f100 8094 	bmi.w	8020a80 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8020958:	45aa      	cmp	sl, r5
 802095a:	f340 8091 	ble.w	8020a80 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802095e:	2f00      	cmp	r7, #0
 8020960:	f000 808e 	beq.w	8020a80 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8020964:	2c00      	cmp	r4, #0
 8020966:	f2c0 8089 	blt.w	8020a7c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802096a:	42a3      	cmp	r3, r4
 802096c:	f340 8086 	ble.w	8020a7c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8020970:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8020974:	3401      	adds	r4, #1
 8020976:	f100 8086 	bmi.w	8020a86 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802097a:	42a3      	cmp	r3, r4
 802097c:	f340 8083 	ble.w	8020a86 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8020980:	f1b9 0f00 	cmp.w	r9, #0
 8020984:	d07f      	beq.n	8020a86 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8020986:	3301      	adds	r3, #1
 8020988:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 802098c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8020990:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8020994:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8020998:	fb19 fe07 	smulbb	lr, r9, r7
 802099c:	ea44 0808 	orr.w	r8, r4, r8
 80209a0:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80209a4:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80209a8:	f1c7 0210 	rsb	r2, r7, #16
 80209ac:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80209b0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80209b4:	ea44 0c0c 	orr.w	ip, r4, ip
 80209b8:	eba2 0209 	sub.w	r2, r2, r9
 80209bc:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80209c0:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80209c4:	fb04 f40c 	mul.w	r4, r4, ip
 80209c8:	fb02 4808 	mla	r8, r2, r8, r4
 80209cc:	041a      	lsls	r2, r3, #16
 80209ce:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80209d2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80209d6:	4313      	orrs	r3, r2
 80209d8:	042a      	lsls	r2, r5, #16
 80209da:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80209de:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80209e2:	fb0e 8303 	mla	r3, lr, r3, r8
 80209e6:	432a      	orrs	r2, r5
 80209e8:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80209ec:	fb07 3202 	mla	r2, r7, r2, r3
 80209f0:	0d53      	lsrs	r3, r2, #21
 80209f2:	0952      	lsrs	r2, r2, #5
 80209f4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80209f8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80209fc:	431a      	orrs	r2, r3
 80209fe:	b293      	uxth	r3, r2
 8020a00:	b2b4      	uxth	r4, r6
 8020a02:	1202      	asrs	r2, r0, #8
 8020a04:	43f6      	mvns	r6, r6
 8020a06:	b2f6      	uxtb	r6, r6
 8020a08:	121d      	asrs	r5, r3, #8
 8020a0a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8020a0e:	fb12 f206 	smulbb	r2, r2, r6
 8020a12:	10c7      	asrs	r7, r0, #3
 8020a14:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8020a18:	00c0      	lsls	r0, r0, #3
 8020a1a:	fb05 2504 	mla	r5, r5, r4, r2
 8020a1e:	b2c0      	uxtb	r0, r0
 8020a20:	10da      	asrs	r2, r3, #3
 8020a22:	00db      	lsls	r3, r3, #3
 8020a24:	b2db      	uxtb	r3, r3
 8020a26:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8020a2a:	fb10 f006 	smulbb	r0, r0, r6
 8020a2e:	b2ad      	uxth	r5, r5
 8020a30:	fb03 0004 	mla	r0, r3, r4, r0
 8020a34:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8020a38:	fb17 f706 	smulbb	r7, r7, r6
 8020a3c:	b280      	uxth	r0, r0
 8020a3e:	1c6b      	adds	r3, r5, #1
 8020a40:	fb02 7204 	mla	r2, r2, r4, r7
 8020a44:	b292      	uxth	r2, r2
 8020a46:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020a4a:	1c43      	adds	r3, r0, #1
 8020a4c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020a50:	1c50      	adds	r0, r2, #1
 8020a52:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8020a56:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8020a5a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020a5e:	0952      	lsrs	r2, r2, #5
 8020a60:	432b      	orrs	r3, r5
 8020a62:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020a66:	4313      	orrs	r3, r2
 8020a68:	800b      	strh	r3, [r1, #0]
 8020a6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020a6e:	4680      	mov	r8, r0
 8020a70:	e763      	b.n	802093a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8020a72:	4684      	mov	ip, r0
 8020a74:	4680      	mov	r8, r0
 8020a76:	e76c      	b.n	8020952 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8020a78:	4684      	mov	ip, r0
 8020a7a:	e76a      	b.n	8020952 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8020a7c:	4605      	mov	r5, r0
 8020a7e:	e779      	b.n	8020974 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8020a80:	4603      	mov	r3, r0
 8020a82:	4605      	mov	r5, r0
 8020a84:	e782      	b.n	802098c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8020a86:	4603      	mov	r3, r0
 8020a88:	e780      	b.n	802098c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08020a8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020a8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a8e:	b093      	sub	sp, #76	@ 0x4c
 8020a90:	461d      	mov	r5, r3
 8020a92:	9210      	str	r2, [sp, #64]	@ 0x40
 8020a94:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8020a96:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 8020a9a:	920b      	str	r2, [sp, #44]	@ 0x2c
 8020a9c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 8020aa0:	910a      	str	r1, [sp, #40]	@ 0x28
 8020aa2:	6859      	ldr	r1, [r3, #4]
 8020aa4:	681b      	ldr	r3, [r3, #0]
 8020aa6:	9011      	str	r0, [sp, #68]	@ 0x44
 8020aa8:	fb01 2707 	mla	r7, r1, r7, r2
 8020aac:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8020ab0:	9307      	str	r3, [sp, #28]
 8020ab2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020ab4:	681b      	ldr	r3, [r3, #0]
 8020ab6:	9309      	str	r3, [sp, #36]	@ 0x24
 8020ab8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020aba:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8020abe:	43db      	mvns	r3, r3
 8020ac0:	b2db      	uxtb	r3, r3
 8020ac2:	9308      	str	r3, [sp, #32]
 8020ac4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020ac6:	2b00      	cmp	r3, #0
 8020ac8:	dc03      	bgt.n	8020ad2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8020aca:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020acc:	2b00      	cmp	r3, #0
 8020ace:	f340 8203 	ble.w	8020ed8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8020ad2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020ad4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020ad8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020adc:	1e48      	subs	r0, r1, #1
 8020ade:	f102 3cff 	add.w	ip, r2, #4294967295
 8020ae2:	2d00      	cmp	r5, #0
 8020ae4:	f340 80da 	ble.w	8020c9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8020ae8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020aec:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020af0:	d406      	bmi.n	8020b00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8020af2:	4586      	cmp	lr, r0
 8020af4:	da04      	bge.n	8020b00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8020af6:	2b00      	cmp	r3, #0
 8020af8:	db02      	blt.n	8020b00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8020afa:	4563      	cmp	r3, ip
 8020afc:	f2c0 80cf 	blt.w	8020c9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020b00:	f11e 0e01 	adds.w	lr, lr, #1
 8020b04:	f100 80c1 	bmi.w	8020c8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020b08:	4571      	cmp	r1, lr
 8020b0a:	f2c0 80be 	blt.w	8020c8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020b0e:	3301      	adds	r3, #1
 8020b10:	f100 80bb 	bmi.w	8020c8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020b14:	429a      	cmp	r2, r3
 8020b16:	f2c0 80b8 	blt.w	8020c8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020b1a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8020b1e:	46a9      	mov	r9, r5
 8020b20:	f1b9 0f00 	cmp.w	r9, #0
 8020b24:	f340 80d8 	ble.w	8020cd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8020b28:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020b2a:	1421      	asrs	r1, r4, #16
 8020b2c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8020b30:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020b34:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8020b38:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8020b3c:	f100 8111 	bmi.w	8020d62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8020b40:	f10e 3aff 	add.w	sl, lr, #4294967295
 8020b44:	4551      	cmp	r1, sl
 8020b46:	f280 810c 	bge.w	8020d62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8020b4a:	2800      	cmp	r0, #0
 8020b4c:	f2c0 8109 	blt.w	8020d62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8020b50:	f103 3aff 	add.w	sl, r3, #4294967295
 8020b54:	4550      	cmp	r0, sl
 8020b56:	f280 8104 	bge.w	8020d62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8020b5a:	fa0f f38e 	sxth.w	r3, lr
 8020b5e:	fb00 1103 	mla	r1, r0, r3, r1
 8020b62:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8020b64:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8020b68:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8020b6c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8020b70:	f1bc 0f00 	cmp.w	ip, #0
 8020b74:	d007      	beq.n	8020b86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8020b76:	005b      	lsls	r3, r3, #1
 8020b78:	eb0a 0003 	add.w	r0, sl, r3
 8020b7c:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8020b80:	930c      	str	r3, [sp, #48]	@ 0x30
 8020b82:	8843      	ldrh	r3, [r0, #2]
 8020b84:	930d      	str	r3, [sp, #52]	@ 0x34
 8020b86:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8020b8a:	fb12 f30c 	smulbb	r3, r2, ip
 8020b8e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8020b92:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8020b96:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8020b9a:	10db      	asrs	r3, r3, #3
 8020b9c:	ea40 000e 	orr.w	r0, r0, lr
 8020ba0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8020ba4:	f1cc 0e10 	rsb	lr, ip, #16
 8020ba8:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8020bac:	ebae 0e02 	sub.w	lr, lr, r2
 8020bb0:	ea4a 0101 	orr.w	r1, sl, r1
 8020bb4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8020bb8:	4351      	muls	r1, r2
 8020bba:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8020bbc:	9f08      	ldr	r7, [sp, #32]
 8020bbe:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8020bc2:	fb0e 1e00 	mla	lr, lr, r0, r1
 8020bc6:	0410      	lsls	r0, r2, #16
 8020bc8:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8020bcc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8020bd0:	4310      	orrs	r0, r2
 8020bd2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8020bd4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8020bd6:	0412      	lsls	r2, r2, #16
 8020bd8:	fb03 e000 	mla	r0, r3, r0, lr
 8020bdc:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8020be0:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8020be4:	ea42 020e 	orr.w	r2, r2, lr
 8020be8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8020bec:	fb03 0302 	mla	r3, r3, r2, r0
 8020bf0:	0d5a      	lsrs	r2, r3, #21
 8020bf2:	095b      	lsrs	r3, r3, #5
 8020bf4:	f8b8 0000 	ldrh.w	r0, [r8]
 8020bf8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020bfc:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8020c00:	4313      	orrs	r3, r2
 8020c02:	b29b      	uxth	r3, r3
 8020c04:	1201      	asrs	r1, r0, #8
 8020c06:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8020c0a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8020c0e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020c12:	fb11 f107 	smulbb	r1, r1, r7
 8020c16:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8020c1a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8020c1e:	00c0      	lsls	r0, r0, #3
 8020c20:	fb0c 1c02 	mla	ip, ip, r2, r1
 8020c24:	b2c0      	uxtb	r0, r0
 8020c26:	10d9      	asrs	r1, r3, #3
 8020c28:	00db      	lsls	r3, r3, #3
 8020c2a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8020c2e:	b2db      	uxtb	r3, r3
 8020c30:	fb10 f007 	smulbb	r0, r0, r7
 8020c34:	fa1f fc8c 	uxth.w	ip, ip
 8020c38:	fb03 0302 	mla	r3, r3, r2, r0
 8020c3c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8020c40:	fb1e fe07 	smulbb	lr, lr, r7
 8020c44:	fb01 e102 	mla	r1, r1, r2, lr
 8020c48:	b29a      	uxth	r2, r3
 8020c4a:	f10c 0301 	add.w	r3, ip, #1
 8020c4e:	b289      	uxth	r1, r1
 8020c50:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020c54:	1c53      	adds	r3, r2, #1
 8020c56:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020c5a:	1c4a      	adds	r2, r1, #1
 8020c5c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020c60:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8020c64:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020c68:	0949      	lsrs	r1, r1, #5
 8020c6a:	ea43 030c 	orr.w	r3, r3, ip
 8020c6e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8020c72:	430b      	orrs	r3, r1
 8020c74:	f8a8 3000 	strh.w	r3, [r8]
 8020c78:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020c7a:	441c      	add	r4, r3
 8020c7c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020c7e:	f108 0802 	add.w	r8, r8, #2
 8020c82:	441e      	add	r6, r3
 8020c84:	f109 39ff 	add.w	r9, r9, #4294967295
 8020c88:	e74a      	b.n	8020b20 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8020c8a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020c8c:	441c      	add	r4, r3
 8020c8e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020c90:	441e      	add	r6, r3
 8020c92:	9b07      	ldr	r3, [sp, #28]
 8020c94:	3302      	adds	r3, #2
 8020c96:	3d01      	subs	r5, #1
 8020c98:	9307      	str	r3, [sp, #28]
 8020c9a:	e722      	b.n	8020ae2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020c9c:	d022      	beq.n	8020ce4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8020c9e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8020ca0:	1e6b      	subs	r3, r5, #1
 8020ca2:	fb00 4003 	mla	r0, r0, r3, r4
 8020ca6:	1400      	asrs	r0, r0, #16
 8020ca8:	f53f af37 	bmi.w	8020b1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020cac:	3901      	subs	r1, #1
 8020cae:	4288      	cmp	r0, r1
 8020cb0:	f6bf af33 	bge.w	8020b1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020cb4:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8020cb6:	fb01 6303 	mla	r3, r1, r3, r6
 8020cba:	141b      	asrs	r3, r3, #16
 8020cbc:	f53f af2d 	bmi.w	8020b1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020cc0:	3a01      	subs	r2, #1
 8020cc2:	4293      	cmp	r3, r2
 8020cc4:	f6bf af29 	bge.w	8020b1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020cc8:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8020ccc:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 8020cd0:	46a8      	mov	r8, r5
 8020cd2:	f1b8 0f00 	cmp.w	r8, #0
 8020cd6:	dc5e      	bgt.n	8020d96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8020cd8:	9b07      	ldr	r3, [sp, #28]
 8020cda:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8020cde:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8020ce2:	9307      	str	r3, [sp, #28]
 8020ce4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020ce6:	2b00      	cmp	r3, #0
 8020ce8:	f340 80f6 	ble.w	8020ed8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8020cec:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020cf0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020cf4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020cf8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020cfa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020cfe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020d02:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020d06:	eef0 6a62 	vmov.f32	s13, s5
 8020d0a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020d0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020d12:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020d16:	ee16 4a90 	vmov	r4, s13
 8020d1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020d1e:	eef0 6a43 	vmov.f32	s13, s6
 8020d22:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020d26:	ee12 2a90 	vmov	r2, s5
 8020d2a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020d2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020d32:	ee13 2a10 	vmov	r2, s6
 8020d36:	931f      	str	r3, [sp, #124]	@ 0x7c
 8020d38:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020d3a:	fb92 f3f3 	sdiv	r3, r2, r3
 8020d3e:	9320      	str	r3, [sp, #128]	@ 0x80
 8020d40:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020d42:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8020d44:	3b01      	subs	r3, #1
 8020d46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020d4a:	930a      	str	r3, [sp, #40]	@ 0x28
 8020d4c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020d4e:	ee16 6a90 	vmov	r6, s13
 8020d52:	bf14      	ite	ne
 8020d54:	461d      	movne	r5, r3
 8020d56:	4615      	moveq	r5, r2
 8020d58:	eeb0 3a67 	vmov.f32	s6, s15
 8020d5c:	eef0 2a47 	vmov.f32	s5, s14
 8020d60:	e6b0      	b.n	8020ac4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8020d62:	f111 0a01 	adds.w	sl, r1, #1
 8020d66:	d487      	bmi.n	8020c78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020d68:	45d6      	cmp	lr, sl
 8020d6a:	db85      	blt.n	8020c78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020d6c:	f110 0a01 	adds.w	sl, r0, #1
 8020d70:	d482      	bmi.n	8020c78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020d72:	4553      	cmp	r3, sl
 8020d74:	db80      	blt.n	8020c78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020d76:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8020d78:	9101      	str	r1, [sp, #4]
 8020d7a:	b21b      	sxth	r3, r3
 8020d7c:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8020d80:	9300      	str	r3, [sp, #0]
 8020d82:	e9cd c704 	strd	ip, r7, [sp, #16]
 8020d86:	fa0f f38e 	sxth.w	r3, lr
 8020d8a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8020d8c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8020d8e:	4641      	mov	r1, r8
 8020d90:	f7ff fdb4 	bl	80208fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8020d94:	e770      	b.n	8020c78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020d96:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020d98:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8020d9a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020d9e:	1430      	asrs	r0, r6, #16
 8020da0:	1423      	asrs	r3, r4, #16
 8020da2:	fb01 3000 	mla	r0, r1, r0, r3
 8020da6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020da8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8020dac:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8020db0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8020db4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020db8:	8858      	ldrh	r0, [r3, #2]
 8020dba:	f1be 0f00 	cmp.w	lr, #0
 8020dbe:	d00b      	beq.n	8020dd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8020dc0:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8020dc4:	3901      	subs	r1, #1
 8020dc6:	0049      	lsls	r1, r1, #1
 8020dc8:	3102      	adds	r1, #2
 8020dca:	eb03 0b01 	add.w	fp, r3, r1
 8020dce:	5a5b      	ldrh	r3, [r3, r1]
 8020dd0:	930e      	str	r3, [sp, #56]	@ 0x38
 8020dd2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8020dd6:	930f      	str	r3, [sp, #60]	@ 0x3c
 8020dd8:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8020ddc:	fb12 f30e 	smulbb	r3, r2, lr
 8020de0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8020de4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8020de8:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 8020dec:	10db      	asrs	r3, r3, #3
 8020dee:	ea41 010c 	orr.w	r1, r1, ip
 8020df2:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8020df6:	f1ce 0c10 	rsb	ip, lr, #16
 8020dfa:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8020dfe:	ebac 0c02 	sub.w	ip, ip, r2
 8020e02:	ea4b 0000 	orr.w	r0, fp, r0
 8020e06:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8020e0a:	4350      	muls	r0, r2
 8020e0c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8020e0e:	9f08      	ldr	r7, [sp, #32]
 8020e10:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8020e14:	fb0c 0c01 	mla	ip, ip, r1, r0
 8020e18:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8020e1c:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 8020e20:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8020e22:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8020e24:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8020e28:	0412      	lsls	r2, r2, #16
 8020e2a:	ea4b 0101 	orr.w	r1, fp, r1
 8020e2e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8020e32:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8020e36:	fb03 c101 	mla	r1, r3, r1, ip
 8020e3a:	4302      	orrs	r2, r0
 8020e3c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8020e40:	fb03 1202 	mla	r2, r3, r2, r1
 8020e44:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8020e48:	0952      	lsrs	r2, r2, #5
 8020e4a:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 8020e4e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8020e52:	f8b9 2000 	ldrh.w	r2, [r9]
 8020e56:	ea4b 0303 	orr.w	r3, fp, r3
 8020e5a:	b29b      	uxth	r3, r3
 8020e5c:	1211      	asrs	r1, r2, #8
 8020e5e:	1218      	asrs	r0, r3, #8
 8020e60:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020e64:	fb11 f107 	smulbb	r1, r1, r7
 8020e68:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8020e6c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020e70:	00d2      	lsls	r2, r2, #3
 8020e72:	fb00 100a 	mla	r0, r0, sl, r1
 8020e76:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8020e7a:	10d9      	asrs	r1, r3, #3
 8020e7c:	b2d2      	uxtb	r2, r2
 8020e7e:	00db      	lsls	r3, r3, #3
 8020e80:	fb1c fc07 	smulbb	ip, ip, r7
 8020e84:	fb12 f207 	smulbb	r2, r2, r7
 8020e88:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8020e8c:	b2db      	uxtb	r3, r3
 8020e8e:	b280      	uxth	r0, r0
 8020e90:	fb01 c10a 	mla	r1, r1, sl, ip
 8020e94:	fb03 230a 	mla	r3, r3, sl, r2
 8020e98:	b29b      	uxth	r3, r3
 8020e9a:	b289      	uxth	r1, r1
 8020e9c:	1c42      	adds	r2, r0, #1
 8020e9e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020ea2:	f101 0c01 	add.w	ip, r1, #1
 8020ea6:	1c5a      	adds	r2, r3, #1
 8020ea8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8020eac:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8020eb0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020eb2:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8020eb6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020eba:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020ebe:	4310      	orrs	r0, r2
 8020ec0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8020ec4:	441c      	add	r4, r3
 8020ec6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020ec8:	ea40 000c 	orr.w	r0, r0, ip
 8020ecc:	f829 0b02 	strh.w	r0, [r9], #2
 8020ed0:	441e      	add	r6, r3
 8020ed2:	f108 38ff 	add.w	r8, r8, #4294967295
 8020ed6:	e6fc      	b.n	8020cd2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8020ed8:	b013      	add	sp, #76	@ 0x4c
 8020eda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020ede <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8020ede:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8020ee2:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8020ee6:	fb0e 4703 	mla	r7, lr, r3, r4
 8020eea:	f1be 0f00 	cmp.w	lr, #0
 8020eee:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8020ef2:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 8020ef6:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 8020efa:	8808      	ldrh	r0, [r1, #0]
 8020efc:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8020f00:	db60      	blt.n	8020fc4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8020f02:	45f1      	cmp	r9, lr
 8020f04:	dd5e      	ble.n	8020fc4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8020f06:	2c00      	cmp	r4, #0
 8020f08:	db5a      	blt.n	8020fc0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8020f0a:	42a3      	cmp	r3, r4
 8020f0c:	dd58      	ble.n	8020fc0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8020f0e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8020f12:	1c62      	adds	r2, r4, #1
 8020f14:	d459      	bmi.n	8020fca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8020f16:	4293      	cmp	r3, r2
 8020f18:	dd57      	ble.n	8020fca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8020f1a:	2d00      	cmp	r5, #0
 8020f1c:	d055      	beq.n	8020fca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8020f1e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8020f22:	f11e 0e01 	adds.w	lr, lr, #1
 8020f26:	d454      	bmi.n	8020fd2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8020f28:	45f1      	cmp	r9, lr
 8020f2a:	dd52      	ble.n	8020fd2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8020f2c:	2e00      	cmp	r6, #0
 8020f2e:	d050      	beq.n	8020fd2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8020f30:	2c00      	cmp	r4, #0
 8020f32:	db4c      	blt.n	8020fce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8020f34:	42a3      	cmp	r3, r4
 8020f36:	dd4a      	ble.n	8020fce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8020f38:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8020f3c:	3401      	adds	r4, #1
 8020f3e:	d405      	bmi.n	8020f4c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8020f40:	42a3      	cmp	r3, r4
 8020f42:	dd03      	ble.n	8020f4c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8020f44:	b115      	cbz	r5, 8020f4c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8020f46:	3301      	adds	r3, #1
 8020f48:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8020f4c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8020f50:	fb15 f406 	smulbb	r4, r5, r6
 8020f54:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8020f58:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8020f5c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8020f60:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8020f64:	ea43 0c0c 	orr.w	ip, r3, ip
 8020f68:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8020f6c:	f1c6 0310 	rsb	r3, r6, #16
 8020f70:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8020f74:	1b5b      	subs	r3, r3, r5
 8020f76:	ea4e 0707 	orr.w	r7, lr, r7
 8020f7a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8020f7e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020f82:	437d      	muls	r5, r7
 8020f84:	fb03 5c0c 	mla	ip, r3, ip, r5
 8020f88:	0403      	lsls	r3, r0, #16
 8020f8a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8020f8e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8020f92:	4318      	orrs	r0, r3
 8020f94:	0413      	lsls	r3, r2, #16
 8020f96:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8020f9a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8020f9e:	4313      	orrs	r3, r2
 8020fa0:	fb04 c000 	mla	r0, r4, r0, ip
 8020fa4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8020fa8:	fb06 0003 	mla	r0, r6, r3, r0
 8020fac:	0d43      	lsrs	r3, r0, #21
 8020fae:	0940      	lsrs	r0, r0, #5
 8020fb0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020fb4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8020fb8:	4318      	orrs	r0, r3
 8020fba:	8008      	strh	r0, [r1, #0]
 8020fbc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8020fc0:	4684      	mov	ip, r0
 8020fc2:	e7a6      	b.n	8020f12 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8020fc4:	4607      	mov	r7, r0
 8020fc6:	4684      	mov	ip, r0
 8020fc8:	e7ab      	b.n	8020f22 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8020fca:	4607      	mov	r7, r0
 8020fcc:	e7a9      	b.n	8020f22 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8020fce:	4602      	mov	r2, r0
 8020fd0:	e7b4      	b.n	8020f3c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8020fd2:	4602      	mov	r2, r0
 8020fd4:	e7ba      	b.n	8020f4c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08020fd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020fd6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020fda:	b08f      	sub	sp, #60	@ 0x3c
 8020fdc:	461d      	mov	r5, r3
 8020fde:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8020fe0:	920c      	str	r2, [sp, #48]	@ 0x30
 8020fe2:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 8020fe6:	9107      	str	r1, [sp, #28]
 8020fe8:	6859      	ldr	r1, [r3, #4]
 8020fea:	681b      	ldr	r3, [r3, #0]
 8020fec:	900d      	str	r0, [sp, #52]	@ 0x34
 8020fee:	fb01 2707 	mla	r7, r1, r7, r2
 8020ff2:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8020ff6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020ff8:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 8020ffc:	f8d3 8000 	ldr.w	r8, [r3]
 8021000:	9b07      	ldr	r3, [sp, #28]
 8021002:	2b00      	cmp	r3, #0
 8021004:	dc03      	bgt.n	802100e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8021006:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8021008:	2b00      	cmp	r3, #0
 802100a:	f340 8181 	ble.w	8021310 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802100e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021010:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021014:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021018:	1e48      	subs	r0, r1, #1
 802101a:	f102 3cff 	add.w	ip, r2, #4294967295
 802101e:	2d00      	cmp	r5, #0
 8021020:	f340 809b 	ble.w	802115a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8021024:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021028:	ea4f 4326 	mov.w	r3, r6, asr #16
 802102c:	d406      	bmi.n	802103c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802102e:	4586      	cmp	lr, r0
 8021030:	da04      	bge.n	802103c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8021032:	2b00      	cmp	r3, #0
 8021034:	db02      	blt.n	802103c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8021036:	4563      	cmp	r3, ip
 8021038:	f2c0 8090 	blt.w	802115c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802103c:	f11e 0e01 	adds.w	lr, lr, #1
 8021040:	f100 8084 	bmi.w	802114c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8021044:	4571      	cmp	r1, lr
 8021046:	f2c0 8081 	blt.w	802114c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802104a:	3301      	adds	r3, #1
 802104c:	d47e      	bmi.n	802114c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802104e:	429a      	cmp	r2, r3
 8021050:	db7c      	blt.n	802114c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8021052:	46aa      	mov	sl, r5
 8021054:	46b9      	mov	r9, r7
 8021056:	f1ba 0f00 	cmp.w	sl, #0
 802105a:	f340 8099 	ble.w	8021190 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802105e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021060:	1421      	asrs	r1, r4, #16
 8021062:	ea4f 4026 	mov.w	r0, r6, asr #16
 8021066:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802106a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802106e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8021072:	f100 80d0 	bmi.w	8021216 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8021076:	f10e 3bff 	add.w	fp, lr, #4294967295
 802107a:	4559      	cmp	r1, fp
 802107c:	f280 80cb 	bge.w	8021216 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8021080:	2800      	cmp	r0, #0
 8021082:	f2c0 80c8 	blt.w	8021216 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8021086:	f103 3bff 	add.w	fp, r3, #4294967295
 802108a:	4558      	cmp	r0, fp
 802108c:	f280 80c3 	bge.w	8021216 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8021090:	fa0f fe8e 	sxth.w	lr, lr
 8021094:	fb00 110e 	mla	r1, r0, lr, r1
 8021098:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802109c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 80210a0:	8841      	ldrh	r1, [r0, #2]
 80210a2:	f1bc 0f00 	cmp.w	ip, #0
 80210a6:	d00b      	beq.n	80210c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 80210a8:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 80210ac:	3b01      	subs	r3, #1
 80210ae:	005b      	lsls	r3, r3, #1
 80210b0:	3302      	adds	r3, #2
 80210b2:	eb00 0e03 	add.w	lr, r0, r3
 80210b6:	5ac3      	ldrh	r3, [r0, r3]
 80210b8:	9308      	str	r3, [sp, #32]
 80210ba:	f8be 3002 	ldrh.w	r3, [lr, #2]
 80210be:	9309      	str	r3, [sp, #36]	@ 0x24
 80210c0:	ea4f 400b 	mov.w	r0, fp, lsl #16
 80210c4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80210c8:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 80210cc:	ea40 000b 	orr.w	r0, r0, fp
 80210d0:	fb12 f30c 	smulbb	r3, r2, ip
 80210d4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80210d8:	10db      	asrs	r3, r3, #3
 80210da:	f1cc 0e10 	rsb	lr, ip, #16
 80210de:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80210e2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80210e6:	ebae 0e02 	sub.w	lr, lr, r2
 80210ea:	ea4b 0101 	orr.w	r1, fp, r1
 80210ee:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80210f2:	4351      	muls	r1, r2
 80210f4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80210f6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80210fa:	fb0e 1e00 	mla	lr, lr, r0, r1
 80210fe:	0410      	lsls	r0, r2, #16
 8021100:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8021104:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8021108:	4310      	orrs	r0, r2
 802110a:	9a08      	ldr	r2, [sp, #32]
 802110c:	9908      	ldr	r1, [sp, #32]
 802110e:	0412      	lsls	r2, r2, #16
 8021110:	fb03 e000 	mla	r0, r3, r0, lr
 8021114:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8021118:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 802111c:	ea42 020e 	orr.w	r2, r2, lr
 8021120:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8021124:	fb03 0302 	mla	r3, r3, r2, r0
 8021128:	0d5a      	lsrs	r2, r3, #21
 802112a:	095b      	lsrs	r3, r3, #5
 802112c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021130:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8021134:	4313      	orrs	r3, r2
 8021136:	f8a9 3000 	strh.w	r3, [r9]
 802113a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802113c:	441c      	add	r4, r3
 802113e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021140:	f109 0902 	add.w	r9, r9, #2
 8021144:	441e      	add	r6, r3
 8021146:	f10a 3aff 	add.w	sl, sl, #4294967295
 802114a:	e784      	b.n	8021056 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 802114c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802114e:	441c      	add	r4, r3
 8021150:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021152:	3d01      	subs	r5, #1
 8021154:	441e      	add	r6, r3
 8021156:	3702      	adds	r7, #2
 8021158:	e761      	b.n	802101e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802115a:	d01d      	beq.n	8021198 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802115c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 802115e:	1e6b      	subs	r3, r5, #1
 8021160:	fb00 4003 	mla	r0, r0, r3, r4
 8021164:	1400      	asrs	r0, r0, #16
 8021166:	f53f af74 	bmi.w	8021052 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802116a:	3901      	subs	r1, #1
 802116c:	4288      	cmp	r0, r1
 802116e:	f6bf af70 	bge.w	8021052 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021172:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8021174:	fb01 6303 	mla	r3, r1, r3, r6
 8021178:	141b      	asrs	r3, r3, #16
 802117a:	f53f af6a 	bmi.w	8021052 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802117e:	3a01      	subs	r2, #1
 8021180:	4293      	cmp	r3, r2
 8021182:	f6bf af66 	bge.w	8021052 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021186:	46a9      	mov	r9, r5
 8021188:	46ba      	mov	sl, r7
 802118a:	f1b9 0f00 	cmp.w	r9, #0
 802118e:	dc5a      	bgt.n	8021246 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8021190:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8021194:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8021198:	9b07      	ldr	r3, [sp, #28]
 802119a:	2b00      	cmp	r3, #0
 802119c:	f340 80b8 	ble.w	8021310 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80211a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80211a4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80211a8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80211ac:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80211ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80211b2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80211b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80211ba:	eef0 6a62 	vmov.f32	s13, s5
 80211be:	ee61 7a27 	vmul.f32	s15, s2, s15
 80211c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80211c6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80211ca:	ee16 4a90 	vmov	r4, s13
 80211ce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80211d2:	eef0 6a43 	vmov.f32	s13, s6
 80211d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80211da:	ee12 2a90 	vmov	r2, s5
 80211de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80211e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80211e6:	ee13 2a10 	vmov	r2, s6
 80211ea:	931b      	str	r3, [sp, #108]	@ 0x6c
 80211ec:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80211ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80211f2:	931c      	str	r3, [sp, #112]	@ 0x70
 80211f4:	9b07      	ldr	r3, [sp, #28]
 80211f6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80211f8:	3b01      	subs	r3, #1
 80211fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80211fe:	9307      	str	r3, [sp, #28]
 8021200:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8021202:	ee16 6a90 	vmov	r6, s13
 8021206:	bf14      	ite	ne
 8021208:	461d      	movne	r5, r3
 802120a:	4615      	moveq	r5, r2
 802120c:	eeb0 3a67 	vmov.f32	s6, s15
 8021210:	eef0 2a47 	vmov.f32	s5, s14
 8021214:	e6f4      	b.n	8021000 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8021216:	f111 0b01 	adds.w	fp, r1, #1
 802121a:	d48e      	bmi.n	802113a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802121c:	45de      	cmp	lr, fp
 802121e:	db8c      	blt.n	802113a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021220:	f110 0b01 	adds.w	fp, r0, #1
 8021224:	d489      	bmi.n	802113a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021226:	455b      	cmp	r3, fp
 8021228:	db87      	blt.n	802113a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802122a:	b21b      	sxth	r3, r3
 802122c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8021230:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8021234:	9300      	str	r3, [sp, #0]
 8021236:	4642      	mov	r2, r8
 8021238:	fa0f f38e 	sxth.w	r3, lr
 802123c:	4649      	mov	r1, r9
 802123e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8021240:	f7ff fe4d 	bl	8020ede <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8021244:	e779      	b.n	802113a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021246:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021248:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802124c:	1420      	asrs	r0, r4, #16
 802124e:	1431      	asrs	r1, r6, #16
 8021250:	fb03 0101 	mla	r1, r3, r1, r0
 8021254:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8021258:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 802125c:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8021260:	8841      	ldrh	r1, [r0, #2]
 8021262:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021266:	f1be 0f00 	cmp.w	lr, #0
 802126a:	d00b      	beq.n	8021284 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 802126c:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8021270:	3b01      	subs	r3, #1
 8021272:	005b      	lsls	r3, r3, #1
 8021274:	3302      	adds	r3, #2
 8021276:	eb00 0b03 	add.w	fp, r0, r3
 802127a:	5ac3      	ldrh	r3, [r0, r3]
 802127c:	930a      	str	r3, [sp, #40]	@ 0x28
 802127e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8021282:	930b      	str	r3, [sp, #44]	@ 0x2c
 8021284:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8021288:	fb12 f30e 	smulbb	r3, r2, lr
 802128c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8021290:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8021294:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8021298:	10db      	asrs	r3, r3, #3
 802129a:	ea40 000c 	orr.w	r0, r0, ip
 802129e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80212a2:	f1ce 0c10 	rsb	ip, lr, #16
 80212a6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80212aa:	ebac 0c02 	sub.w	ip, ip, r2
 80212ae:	ea4b 0101 	orr.w	r1, fp, r1
 80212b2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80212b6:	4351      	muls	r1, r2
 80212b8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80212ba:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80212be:	fb0c 1c00 	mla	ip, ip, r0, r1
 80212c2:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80212c6:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 80212ca:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80212cc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80212ce:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80212d2:	0412      	lsls	r2, r2, #16
 80212d4:	ea4b 0000 	orr.w	r0, fp, r0
 80212d8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80212dc:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 80212e0:	fb03 c000 	mla	r0, r3, r0, ip
 80212e4:	ea42 0b0b 	orr.w	fp, r2, fp
 80212e8:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80212ec:	fb03 000b 	mla	r0, r3, fp, r0
 80212f0:	0d43      	lsrs	r3, r0, #21
 80212f2:	0940      	lsrs	r0, r0, #5
 80212f4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80212f8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80212fc:	4318      	orrs	r0, r3
 80212fe:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8021300:	f82a 0b02 	strh.w	r0, [sl], #2
 8021304:	441c      	add	r4, r3
 8021306:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021308:	f109 39ff 	add.w	r9, r9, #4294967295
 802130c:	441e      	add	r6, r3
 802130e:	e73c      	b.n	802118a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021310:	b00f      	add	sp, #60	@ 0x3c
 8021312:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021316 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8021316:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802131a:	b085      	sub	sp, #20
 802131c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8021320:	9102      	str	r1, [sp, #8]
 8021322:	2c00      	cmp	r4, #0
 8021324:	fb04 7103 	mla	r1, r4, r3, r7
 8021328:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 802132c:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8021330:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8021334:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8021338:	f2c0 811b 	blt.w	8021572 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802133c:	45a6      	cmp	lr, r4
 802133e:	f340 8118 	ble.w	8021572 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8021342:	2f00      	cmp	r7, #0
 8021344:	f2c0 8113 	blt.w	802156e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8021348:	42bb      	cmp	r3, r7
 802134a:	f340 8110 	ble.w	802156e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802134e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8021352:	1c7a      	adds	r2, r7, #1
 8021354:	f100 8110 	bmi.w	8021578 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8021358:	4293      	cmp	r3, r2
 802135a:	f340 810d 	ble.w	8021578 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802135e:	2e00      	cmp	r6, #0
 8021360:	f000 810c 	beq.w	802157c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8021364:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8021368:	3401      	adds	r4, #1
 802136a:	f100 810b 	bmi.w	8021584 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802136e:	45a6      	cmp	lr, r4
 8021370:	f340 8108 	ble.w	8021584 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8021374:	2800      	cmp	r0, #0
 8021376:	f000 8108 	beq.w	802158a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 802137a:	2f00      	cmp	r7, #0
 802137c:	f2c0 8100 	blt.w	8021580 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8021380:	42bb      	cmp	r3, r7
 8021382:	f340 80fd 	ble.w	8021580 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8021386:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802138a:	3701      	adds	r7, #1
 802138c:	f100 8100 	bmi.w	8021590 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8021390:	42bb      	cmp	r3, r7
 8021392:	f340 80fd 	ble.w	8021590 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8021396:	2e00      	cmp	r6, #0
 8021398:	f000 80fc 	beq.w	8021594 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 802139c:	3301      	adds	r3, #1
 802139e:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 80213a2:	b2b6      	uxth	r6, r6
 80213a4:	b280      	uxth	r0, r0
 80213a6:	fb00 fe06 	mul.w	lr, r0, r6
 80213aa:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80213ae:	0136      	lsls	r6, r6, #4
 80213b0:	eba6 070e 	sub.w	r7, r6, lr
 80213b4:	b280      	uxth	r0, r0
 80213b6:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 80213ba:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80213be:	b2bf      	uxth	r7, r7
 80213c0:	1a1b      	subs	r3, r3, r0
 80213c2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80213c6:	b29b      	uxth	r3, r3
 80213c8:	fb0a f607 	mul.w	r6, sl, r7
 80213cc:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80213d0:	fb0b 6603 	mla	r6, fp, r3, r6
 80213d4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80213d8:	fb00 6609 	mla	r6, r0, r9, r6
 80213dc:	fb0e 6608 	mla	r6, lr, r8, r6
 80213e0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80213e4:	9600      	str	r6, [sp, #0]
 80213e6:	2e00      	cmp	r6, #0
 80213e8:	f000 80be 	beq.w	8021568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 80213ec:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80213f0:	fb0b fc0c 	mul.w	ip, fp, ip
 80213f4:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 80213f8:	fb0b f505 	mul.w	r5, fp, r5
 80213fc:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8021400:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8021404:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8021408:	44dc      	add	ip, fp
 802140a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802140e:	9501      	str	r5, [sp, #4]
 8021410:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8021414:	9503      	str	r5, [sp, #12]
 8021416:	9d01      	ldr	r5, [sp, #4]
 8021418:	9e02      	ldr	r6, [sp, #8]
 802141a:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 802141e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8021422:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8021426:	fb0a fc0c 	mul.w	ip, sl, ip
 802142a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802142e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8021432:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8021436:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802143a:	4465      	add	r5, ip
 802143c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8021440:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8021444:	fb09 fc0c 	mul.w	ip, r9, ip
 8021448:	fb09 f904 	mul.w	r9, r9, r4
 802144c:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8021450:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8021454:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8021458:	fb08 f404 	mul.w	r4, r8, r4
 802145c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8021460:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8021464:	fb08 f802 	mul.w	r8, r8, r2
 8021468:	fb0a fa01 	mul.w	sl, sl, r1
 802146c:	0a22      	lsrs	r2, r4, #8
 802146e:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8021472:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8021476:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 802147a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802147e:	4414      	add	r4, r2
 8021480:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8021484:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8021488:	0a2d      	lsrs	r5, r5, #8
 802148a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802148e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8021492:	9a03      	ldr	r2, [sp, #12]
 8021494:	8836      	ldrh	r6, [r6, #0]
 8021496:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802149a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802149e:	437d      	muls	r5, r7
 80214a0:	4461      	add	r1, ip
 80214a2:	0a24      	lsrs	r4, r4, #8
 80214a4:	fb02 5503 	mla	r5, r2, r3, r5
 80214a8:	0a09      	lsrs	r1, r1, #8
 80214aa:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80214ae:	fb04 540e 	mla	r4, r4, lr, r5
 80214b2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80214b6:	fb01 4100 	mla	r1, r1, r0, r4
 80214ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80214be:	0a09      	lsrs	r1, r1, #8
 80214c0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80214c4:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 80214c8:	fb07 f70a 	mul.w	r7, r7, sl
 80214cc:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80214d0:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 80214d4:	fb03 7101 	mla	r1, r3, r1, r7
 80214d8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80214dc:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 80214e0:	fb0e 1e08 	mla	lr, lr, r8, r1
 80214e4:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 80214e8:	fb00 e101 	mla	r1, r0, r1, lr
 80214ec:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 80214f0:	9a00      	ldr	r2, [sp, #0]
 80214f2:	b287      	uxth	r7, r0
 80214f4:	437a      	muls	r2, r7
 80214f6:	0a09      	lsrs	r1, r1, #8
 80214f8:	1c53      	adds	r3, r2, #1
 80214fa:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80214fe:	4321      	orrs	r1, r4
 8021500:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021504:	1235      	asrs	r5, r6, #8
 8021506:	0c0a      	lsrs	r2, r1, #16
 8021508:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802150c:	b2db      	uxtb	r3, r3
 802150e:	fb12 f207 	smulbb	r2, r2, r7
 8021512:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8021516:	fb05 2503 	mla	r5, r5, r3, r2
 802151a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802151e:	10f2      	asrs	r2, r6, #3
 8021520:	b2c8      	uxtb	r0, r1
 8021522:	00f6      	lsls	r6, r6, #3
 8021524:	fb14 f407 	smulbb	r4, r4, r7
 8021528:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802152c:	b2f6      	uxtb	r6, r6
 802152e:	fb10 f007 	smulbb	r0, r0, r7
 8021532:	fb02 4203 	mla	r2, r2, r3, r4
 8021536:	b2ad      	uxth	r5, r5
 8021538:	fb06 0303 	mla	r3, r6, r3, r0
 802153c:	b299      	uxth	r1, r3
 802153e:	b294      	uxth	r4, r2
 8021540:	1c6b      	adds	r3, r5, #1
 8021542:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021546:	1c62      	adds	r2, r4, #1
 8021548:	1c4b      	adds	r3, r1, #1
 802154a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802154e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8021552:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8021556:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802155a:	0952      	lsrs	r2, r2, #5
 802155c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021560:	432b      	orrs	r3, r5
 8021562:	4313      	orrs	r3, r2
 8021564:	9a02      	ldr	r2, [sp, #8]
 8021566:	8013      	strh	r3, [r2, #0]
 8021568:	b005      	add	sp, #20
 802156a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802156e:	2500      	movs	r5, #0
 8021570:	e6ef      	b.n	8021352 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8021572:	2100      	movs	r1, #0
 8021574:	460d      	mov	r5, r1
 8021576:	e6f7      	b.n	8021368 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8021578:	2100      	movs	r1, #0
 802157a:	e6f5      	b.n	8021368 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802157c:	4631      	mov	r1, r6
 802157e:	e6f3      	b.n	8021368 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8021580:	2400      	movs	r4, #0
 8021582:	e702      	b.n	802138a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8021584:	2200      	movs	r2, #0
 8021586:	4614      	mov	r4, r2
 8021588:	e70b      	b.n	80213a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802158a:	4602      	mov	r2, r0
 802158c:	4604      	mov	r4, r0
 802158e:	e708      	b.n	80213a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8021590:	2200      	movs	r2, #0
 8021592:	e706      	b.n	80213a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8021594:	4632      	mov	r2, r6
 8021596:	e704      	b.n	80213a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08021598 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021598:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802159c:	b09d      	sub	sp, #116	@ 0x74
 802159e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 80215a2:	9219      	str	r2, [sp, #100]	@ 0x64
 80215a4:	9307      	str	r3, [sp, #28]
 80215a6:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 80215a8:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 80215ac:	931a      	str	r3, [sp, #104]	@ 0x68
 80215ae:	9117      	str	r1, [sp, #92]	@ 0x5c
 80215b0:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 80215b4:	901b      	str	r0, [sp, #108]	@ 0x6c
 80215b6:	6850      	ldr	r0, [r2, #4]
 80215b8:	6812      	ldr	r2, [r2, #0]
 80215ba:	fb00 1303 	mla	r3, r0, r3, r1
 80215be:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80215c2:	930a      	str	r3, [sp, #40]	@ 0x28
 80215c4:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 80215c6:	681b      	ldr	r3, [r3, #0]
 80215c8:	9310      	str	r3, [sp, #64]	@ 0x40
 80215ca:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 80215ce:	930b      	str	r3, [sp, #44]	@ 0x2c
 80215d0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80215d2:	2b00      	cmp	r3, #0
 80215d4:	dc03      	bgt.n	80215de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80215d6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80215d8:	2b00      	cmp	r3, #0
 80215da:	f340 8375 	ble.w	8021cc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80215de:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 80215e0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80215e4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80215e8:	1e48      	subs	r0, r1, #1
 80215ea:	1e57      	subs	r7, r2, #1
 80215ec:	9b07      	ldr	r3, [sp, #28]
 80215ee:	2b00      	cmp	r3, #0
 80215f0:	f340 818e 	ble.w	8021910 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80215f4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80215f8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80215fc:	d406      	bmi.n	802160c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80215fe:	4584      	cmp	ip, r0
 8021600:	da04      	bge.n	802160c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8021602:	2b00      	cmp	r3, #0
 8021604:	db02      	blt.n	802160c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8021606:	42bb      	cmp	r3, r7
 8021608:	f2c0 8183 	blt.w	8021912 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802160c:	f11c 0c01 	adds.w	ip, ip, #1
 8021610:	f100 8173 	bmi.w	80218fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8021614:	4561      	cmp	r1, ip
 8021616:	f2c0 8170 	blt.w	80218fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802161a:	3301      	adds	r3, #1
 802161c:	f100 816d 	bmi.w	80218fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8021620:	429a      	cmp	r2, r3
 8021622:	f2c0 816a 	blt.w	80218fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8021626:	9b07      	ldr	r3, [sp, #28]
 8021628:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 802162a:	9318      	str	r3, [sp, #96]	@ 0x60
 802162c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802162e:	2b00      	cmp	r3, #0
 8021630:	f340 818c 	ble.w	802194c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8021634:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 8021636:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8021638:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802163c:	689b      	ldr	r3, [r3, #8]
 802163e:	1422      	asrs	r2, r4, #16
 8021640:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8021644:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8021648:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802164c:	f100 81cd 	bmi.w	80219ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8021650:	f103 38ff 	add.w	r8, r3, #4294967295
 8021654:	4542      	cmp	r2, r8
 8021656:	f280 81c8 	bge.w	80219ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802165a:	f1bc 0f00 	cmp.w	ip, #0
 802165e:	f2c0 81c4 	blt.w	80219ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8021662:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021666:	45c4      	cmp	ip, r8
 8021668:	f280 81bf 	bge.w	80219ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802166c:	b21b      	sxth	r3, r3
 802166e:	fb0c 2203 	mla	r2, ip, r3, r2
 8021672:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8021674:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8021678:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802167c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8021680:	2800      	cmp	r0, #0
 8021682:	f000 81a9 	beq.w	80219d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8021686:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802168a:	950c      	str	r5, [sp, #48]	@ 0x30
 802168c:	0e2d      	lsrs	r5, r5, #24
 802168e:	9513      	str	r5, [sp, #76]	@ 0x4c
 8021690:	b181      	cbz	r1, 80216b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8021692:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8021696:	3b01      	subs	r3, #1
 8021698:	009b      	lsls	r3, r3, #2
 802169a:	3304      	adds	r3, #4
 802169c:	eb08 0c03 	add.w	ip, r8, r3
 80216a0:	f858 3003 	ldr.w	r3, [r8, r3]
 80216a4:	9308      	str	r3, [sp, #32]
 80216a6:	0e1b      	lsrs	r3, r3, #24
 80216a8:	9311      	str	r3, [sp, #68]	@ 0x44
 80216aa:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80216ae:	930d      	str	r3, [sp, #52]	@ 0x34
 80216b0:	0e1b      	lsrs	r3, r3, #24
 80216b2:	9314      	str	r3, [sp, #80]	@ 0x50
 80216b4:	b280      	uxth	r0, r0
 80216b6:	b289      	uxth	r1, r1
 80216b8:	fb00 f901 	mul.w	r9, r0, r1
 80216bc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80216c0:	0100      	lsls	r0, r0, #4
 80216c2:	eba0 0809 	sub.w	r8, r0, r9
 80216c6:	b289      	uxth	r1, r1
 80216c8:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 80216cc:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80216ce:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80216d0:	fa1f f888 	uxth.w	r8, r8
 80216d4:	1a5b      	subs	r3, r3, r1
 80216d6:	b29b      	uxth	r3, r3
 80216d8:	fb08 f000 	mul.w	r0, r8, r0
 80216dc:	fb03 000e 	mla	r0, r3, lr, r0
 80216e0:	fb01 0005 	mla	r0, r1, r5, r0
 80216e4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80216e6:	fb09 0005 	mla	r0, r9, r5, r0
 80216ea:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80216ee:	2800      	cmp	r0, #0
 80216f0:	f000 80fa 	beq.w	80218e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80216f4:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 80216f8:	d01b      	beq.n	8021732 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80216fa:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 80216fe:	fb0e fa0a 	mul.w	sl, lr, sl
 8021702:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8021706:	fb0e fe02 	mul.w	lr, lr, r2
 802170a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802170e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8021712:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8021716:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802171a:	4452      	add	r2, sl
 802171c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021720:	0a12      	lsrs	r2, r2, #8
 8021722:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021726:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802172a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802172e:	ea42 020c 	orr.w	r2, r2, ip
 8021732:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8021734:	2dff      	cmp	r5, #255	@ 0xff
 8021736:	d021      	beq.n	802177c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8021738:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802173a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802173e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8021740:	fb05 fb0b 	mul.w	fp, r5, fp
 8021744:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8021746:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802174a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802174c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021750:	fb05 fa0a 	mul.w	sl, r5, sl
 8021754:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021758:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802175c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8021760:	44de      	add	lr, fp
 8021762:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021766:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802176a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802176e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021772:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021776:	ea4e 050a 	orr.w	r5, lr, sl
 802177a:	950c      	str	r5, [sp, #48]	@ 0x30
 802177c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802177e:	2dff      	cmp	r5, #255	@ 0xff
 8021780:	d021      	beq.n	80217c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8021782:	9d08      	ldr	r5, [sp, #32]
 8021784:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8021788:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802178a:	fb05 fb0b 	mul.w	fp, r5, fp
 802178e:	9d08      	ldr	r5, [sp, #32]
 8021790:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8021794:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8021796:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802179a:	fb05 fa0a 	mul.w	sl, r5, sl
 802179e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80217a2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80217a6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80217aa:	44de      	add	lr, fp
 80217ac:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80217b0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80217b4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80217b8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80217bc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80217c0:	ea4e 050a 	orr.w	r5, lr, sl
 80217c4:	9508      	str	r5, [sp, #32]
 80217c6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80217c8:	2dff      	cmp	r5, #255	@ 0xff
 80217ca:	d021      	beq.n	8021810 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80217cc:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80217ce:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 80217d2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80217d4:	fb05 fb0b 	mul.w	fp, r5, fp
 80217d8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80217da:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80217de:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80217e0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80217e4:	fb05 fa0a 	mul.w	sl, r5, sl
 80217e8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80217ec:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80217f0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80217f4:	44de      	add	lr, fp
 80217f6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80217fa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80217fe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021802:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021806:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802180a:	ea4e 050a 	orr.w	r5, lr, sl
 802180e:	950d      	str	r5, [sp, #52]	@ 0x34
 8021810:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8021812:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8021816:	9d08      	ldr	r5, [sp, #32]
 8021818:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 802181c:	fb08 fc0c 	mul.w	ip, r8, ip
 8021820:	fb03 cc0e 	mla	ip, r3, lr, ip
 8021824:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8021828:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802182a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802182e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8021832:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8021834:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021838:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 802183c:	fb08 f80e 	mul.w	r8, r8, lr
 8021840:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8021844:	fb03 8202 	mla	r2, r3, r2, r8
 8021848:	9b08      	ldr	r3, [sp, #32]
 802184a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802184c:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 8021850:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8021852:	fb01 220a 	mla	r2, r1, sl, r2
 8021856:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 802185a:	fb09 2901 	mla	r9, r9, r1, r2
 802185e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8021860:	883b      	ldrh	r3, [r7, #0]
 8021862:	4342      	muls	r2, r0
 8021864:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021868:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802186c:	1c50      	adds	r0, r2, #1
 802186e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021872:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8021876:	ea4c 0c09 	orr.w	ip, ip, r9
 802187a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802187e:	1219      	asrs	r1, r3, #8
 8021880:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8021884:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8021888:	b2c0      	uxtb	r0, r0
 802188a:	fb12 f205 	smulbb	r2, r2, r5
 802188e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8021892:	fb01 2100 	mla	r1, r1, r0, r2
 8021896:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802189a:	10da      	asrs	r2, r3, #3
 802189c:	fa5f fc8c 	uxtb.w	ip, ip
 80218a0:	00db      	lsls	r3, r3, #3
 80218a2:	fb1c fc05 	smulbb	ip, ip, r5
 80218a6:	b2db      	uxtb	r3, r3
 80218a8:	b289      	uxth	r1, r1
 80218aa:	fb03 c300 	mla	r3, r3, r0, ip
 80218ae:	fa1f fc83 	uxth.w	ip, r3
 80218b2:	1c4b      	adds	r3, r1, #1
 80218b4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80218b8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80218bc:	fb1e fe05 	smulbb	lr, lr, r5
 80218c0:	f10c 0301 	add.w	r3, ip, #1
 80218c4:	fb02 e200 	mla	r2, r2, r0, lr
 80218c8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80218cc:	b292      	uxth	r2, r2
 80218ce:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80218d2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80218d6:	430b      	orrs	r3, r1
 80218d8:	1c51      	adds	r1, r2, #1
 80218da:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80218de:	0952      	lsrs	r2, r2, #5
 80218e0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80218e4:	4313      	orrs	r3, r2
 80218e6:	803b      	strh	r3, [r7, #0]
 80218e8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80218ea:	441c      	add	r4, r3
 80218ec:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80218ee:	441e      	add	r6, r3
 80218f0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80218f2:	3b01      	subs	r3, #1
 80218f4:	3702      	adds	r7, #2
 80218f6:	9318      	str	r3, [sp, #96]	@ 0x60
 80218f8:	e698      	b.n	802162c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80218fa:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80218fc:	441c      	add	r4, r3
 80218fe:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8021900:	441e      	add	r6, r3
 8021902:	9b07      	ldr	r3, [sp, #28]
 8021904:	3b01      	subs	r3, #1
 8021906:	9307      	str	r3, [sp, #28]
 8021908:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802190a:	3302      	adds	r3, #2
 802190c:	930a      	str	r3, [sp, #40]	@ 0x28
 802190e:	e66d      	b.n	80215ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8021910:	d023      	beq.n	802195a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8021912:	9b07      	ldr	r3, [sp, #28]
 8021914:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8021916:	3b01      	subs	r3, #1
 8021918:	fb00 4003 	mla	r0, r0, r3, r4
 802191c:	1400      	asrs	r0, r0, #16
 802191e:	f53f ae82 	bmi.w	8021626 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021922:	3901      	subs	r1, #1
 8021924:	4288      	cmp	r0, r1
 8021926:	f6bf ae7e 	bge.w	8021626 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802192a:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 802192c:	fb01 6303 	mla	r3, r1, r3, r6
 8021930:	141b      	asrs	r3, r3, #16
 8021932:	f53f ae78 	bmi.w	8021626 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021936:	3a01      	subs	r2, #1
 8021938:	4293      	cmp	r3, r2
 802193a:	f6bf ae74 	bge.w	8021626 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802193e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8021942:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8021946:	f1bb 0f00 	cmp.w	fp, #0
 802194a:	dc6c      	bgt.n	8021a26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802194c:	9b07      	ldr	r3, [sp, #28]
 802194e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8021952:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8021954:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8021958:	930a      	str	r3, [sp, #40]	@ 0x28
 802195a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802195c:	2b00      	cmp	r3, #0
 802195e:	f340 81b3 	ble.w	8021cc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8021962:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021966:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802196a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802196e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8021970:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021974:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021978:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802197c:	eef0 6a62 	vmov.f32	s13, s5
 8021980:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021984:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021988:	ee77 2a62 	vsub.f32	s5, s14, s5
 802198c:	ee16 4a90 	vmov	r4, s13
 8021990:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021994:	eef0 6a43 	vmov.f32	s13, s6
 8021998:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802199c:	ee12 2a90 	vmov	r2, s5
 80219a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80219a4:	fb92 f3f3 	sdiv	r3, r2, r3
 80219a8:	ee13 2a10 	vmov	r2, s6
 80219ac:	9329      	str	r3, [sp, #164]	@ 0xa4
 80219ae:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80219b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80219b4:	932a      	str	r3, [sp, #168]	@ 0xa8
 80219b6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80219b8:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80219ba:	3b01      	subs	r3, #1
 80219bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80219c0:	9317      	str	r3, [sp, #92]	@ 0x5c
 80219c2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80219c4:	bf08      	it	eq
 80219c6:	4613      	moveq	r3, r2
 80219c8:	ee16 6a90 	vmov	r6, s13
 80219cc:	9307      	str	r3, [sp, #28]
 80219ce:	eeb0 3a67 	vmov.f32	s6, s15
 80219d2:	eef0 2a47 	vmov.f32	s5, s14
 80219d6:	e5fb      	b.n	80215d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80219d8:	2900      	cmp	r1, #0
 80219da:	f43f ae6b 	beq.w	80216b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80219de:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80219e2:	9308      	str	r3, [sp, #32]
 80219e4:	0e1b      	lsrs	r3, r3, #24
 80219e6:	9311      	str	r3, [sp, #68]	@ 0x44
 80219e8:	e664      	b.n	80216b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80219ea:	f112 0801 	adds.w	r8, r2, #1
 80219ee:	f53f af7b 	bmi.w	80218e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80219f2:	4543      	cmp	r3, r8
 80219f4:	f6ff af78 	blt.w	80218e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80219f8:	f11c 0801 	adds.w	r8, ip, #1
 80219fc:	f53f af74 	bmi.w	80218e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8021a00:	45c6      	cmp	lr, r8
 8021a02:	f6ff af71 	blt.w	80218e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8021a06:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8021a08:	9201      	str	r2, [sp, #4]
 8021a0a:	fa0f f28e 	sxth.w	r2, lr
 8021a0e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8021a12:	e9cd c002 	strd	ip, r0, [sp, #8]
 8021a16:	9200      	str	r2, [sp, #0]
 8021a18:	b21b      	sxth	r3, r3
 8021a1a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8021a1c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8021a1e:	4639      	mov	r1, r7
 8021a20:	f7ff fc79 	bl	8021316 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8021a24:	e760      	b.n	80218e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8021a26:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8021a28:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8021a2a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021a2e:	1427      	asrs	r7, r4, #16
 8021a30:	1433      	asrs	r3, r6, #16
 8021a32:	fb01 7303 	mla	r3, r1, r3, r7
 8021a36:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8021a3a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8021a3e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021a42:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8021a46:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021a4a:	2a00      	cmp	r2, #0
 8021a4c:	f000 8133 	beq.w	8021cb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8021a50:	687d      	ldr	r5, [r7, #4]
 8021a52:	950e      	str	r5, [sp, #56]	@ 0x38
 8021a54:	0e2d      	lsrs	r5, r5, #24
 8021a56:	9515      	str	r5, [sp, #84]	@ 0x54
 8021a58:	b178      	cbz	r0, 8021a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8021a5a:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 8021a5e:	3901      	subs	r1, #1
 8021a60:	0089      	lsls	r1, r1, #2
 8021a62:	3104      	adds	r1, #4
 8021a64:	eb07 0e01 	add.w	lr, r7, r1
 8021a68:	5879      	ldr	r1, [r7, r1]
 8021a6a:	9109      	str	r1, [sp, #36]	@ 0x24
 8021a6c:	0e09      	lsrs	r1, r1, #24
 8021a6e:	9112      	str	r1, [sp, #72]	@ 0x48
 8021a70:	f8de 1004 	ldr.w	r1, [lr, #4]
 8021a74:	910f      	str	r1, [sp, #60]	@ 0x3c
 8021a76:	0e09      	lsrs	r1, r1, #24
 8021a78:	9116      	str	r1, [sp, #88]	@ 0x58
 8021a7a:	b292      	uxth	r2, r2
 8021a7c:	b280      	uxth	r0, r0
 8021a7e:	fb02 f800 	mul.w	r8, r2, r0
 8021a82:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8021a86:	0112      	lsls	r2, r2, #4
 8021a88:	eba2 0e08 	sub.w	lr, r2, r8
 8021a8c:	b280      	uxth	r0, r0
 8021a8e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8021a92:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8021a94:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8021a96:	fa1f fe8e 	uxth.w	lr, lr
 8021a9a:	1a12      	subs	r2, r2, r0
 8021a9c:	b292      	uxth	r2, r2
 8021a9e:	fb0e f101 	mul.w	r1, lr, r1
 8021aa2:	fb02 110c 	mla	r1, r2, ip, r1
 8021aa6:	fb00 1105 	mla	r1, r0, r5, r1
 8021aaa:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8021aac:	fb08 1105 	mla	r1, r8, r5, r1
 8021ab0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021ab4:	2900      	cmp	r1, #0
 8021ab6:	f000 80f5 	beq.w	8021ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8021aba:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8021abe:	d019      	beq.n	8021af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8021ac0:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8021ac4:	fb0c fa0a 	mul.w	sl, ip, sl
 8021ac8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8021acc:	fb0c fc03 	mul.w	ip, ip, r3
 8021ad0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021ad4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8021ad8:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8021adc:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8021ae0:	4453      	add	r3, sl
 8021ae2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021ae6:	0a1b      	lsrs	r3, r3, #8
 8021ae8:	0a3f      	lsrs	r7, r7, #8
 8021aea:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8021aee:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8021af2:	433b      	orrs	r3, r7
 8021af4:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8021af6:	2dff      	cmp	r5, #255	@ 0xff
 8021af8:	d020      	beq.n	8021b3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8021afa:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8021afc:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8021b00:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8021b02:	436f      	muls	r7, r5
 8021b04:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8021b06:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8021b0a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8021b0c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021b10:	fb05 fa0a 	mul.w	sl, r5, sl
 8021b14:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8021b18:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021b1c:	44bc      	add	ip, r7
 8021b1e:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8021b22:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021b26:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021b2a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021b2e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021b32:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021b36:	ea4c 050a 	orr.w	r5, ip, sl
 8021b3a:	950e      	str	r5, [sp, #56]	@ 0x38
 8021b3c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8021b3e:	2dff      	cmp	r5, #255	@ 0xff
 8021b40:	d020      	beq.n	8021b84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8021b42:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8021b44:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8021b48:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8021b4a:	436f      	muls	r7, r5
 8021b4c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8021b4e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8021b52:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8021b54:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021b58:	fb05 fa0a 	mul.w	sl, r5, sl
 8021b5c:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8021b60:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021b64:	44bc      	add	ip, r7
 8021b66:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8021b6a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021b6e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021b72:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021b76:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021b7a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021b7e:	ea4c 050a 	orr.w	r5, ip, sl
 8021b82:	9509      	str	r5, [sp, #36]	@ 0x24
 8021b84:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8021b86:	2dff      	cmp	r5, #255	@ 0xff
 8021b88:	d020      	beq.n	8021bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8021b8a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8021b8c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8021b90:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8021b92:	436f      	muls	r7, r5
 8021b94:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8021b96:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8021b9a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8021b9c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021ba0:	fb05 fa0a 	mul.w	sl, r5, sl
 8021ba4:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8021ba8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021bac:	44bc      	add	ip, r7
 8021bae:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8021bb2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021bb6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021bba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021bbe:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021bc2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021bc6:	ea4c 050a 	orr.w	r5, ip, sl
 8021bca:	950f      	str	r5, [sp, #60]	@ 0x3c
 8021bcc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8021bce:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8021bd2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8021bd4:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8021bd8:	fb0e f707 	mul.w	r7, lr, r7
 8021bdc:	fb02 770c 	mla	r7, r2, ip, r7
 8021be0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8021be4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8021be6:	fb00 770c 	mla	r7, r0, ip, r7
 8021bea:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8021bee:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8021bf0:	fb08 770c 	mla	r7, r8, ip, r7
 8021bf4:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8021bf8:	fb0e fe0c 	mul.w	lr, lr, ip
 8021bfc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8021c00:	fb02 e303 	mla	r3, r2, r3, lr
 8021c04:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8021c06:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8021c08:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8021c0c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8021c0e:	fb00 330a 	mla	r3, r0, sl, r3
 8021c12:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8021c16:	fb08 3c0c 	mla	ip, r8, ip, r3
 8021c1a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8021c1c:	f8b9 0000 	ldrh.w	r0, [r9]
 8021c20:	4359      	muls	r1, r3
 8021c22:	0a3f      	lsrs	r7, r7, #8
 8021c24:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021c28:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8021c2c:	1c4b      	adds	r3, r1, #1
 8021c2e:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8021c32:	ea47 070c 	orr.w	r7, r7, ip
 8021c36:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8021c3a:	1202      	asrs	r2, r0, #8
 8021c3c:	0c3b      	lsrs	r3, r7, #16
 8021c3e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8021c42:	b2c9      	uxtb	r1, r1
 8021c44:	fb13 f305 	smulbb	r3, r3, r5
 8021c48:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8021c4c:	fb02 3201 	mla	r2, r2, r1, r3
 8021c50:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8021c54:	10c3      	asrs	r3, r0, #3
 8021c56:	b2ff      	uxtb	r7, r7
 8021c58:	00c0      	lsls	r0, r0, #3
 8021c5a:	b2c0      	uxtb	r0, r0
 8021c5c:	fb17 f705 	smulbb	r7, r7, r5
 8021c60:	fb00 7001 	mla	r0, r0, r1, r7
 8021c64:	b292      	uxth	r2, r2
 8021c66:	fb1c fc05 	smulbb	ip, ip, r5
 8021c6a:	b280      	uxth	r0, r0
 8021c6c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8021c70:	fb03 c301 	mla	r3, r3, r1, ip
 8021c74:	1c51      	adds	r1, r2, #1
 8021c76:	f100 0c01 	add.w	ip, r0, #1
 8021c7a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8021c7e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8021c82:	b29b      	uxth	r3, r3
 8021c84:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8021c88:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8021c8c:	ea4c 0202 	orr.w	r2, ip, r2
 8021c90:	f103 0c01 	add.w	ip, r3, #1
 8021c94:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8021c98:	095b      	lsrs	r3, r3, #5
 8021c9a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021c9e:	431a      	orrs	r2, r3
 8021ca0:	f8a9 2000 	strh.w	r2, [r9]
 8021ca4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8021ca6:	441c      	add	r4, r3
 8021ca8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8021caa:	f109 0902 	add.w	r9, r9, #2
 8021cae:	441e      	add	r6, r3
 8021cb0:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021cb4:	e647      	b.n	8021946 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8021cb6:	2800      	cmp	r0, #0
 8021cb8:	f43f aedf 	beq.w	8021a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8021cbc:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8021cc0:	9109      	str	r1, [sp, #36]	@ 0x24
 8021cc2:	0e09      	lsrs	r1, r1, #24
 8021cc4:	9112      	str	r1, [sp, #72]	@ 0x48
 8021cc6:	e6d8      	b.n	8021a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8021cc8:	b01d      	add	sp, #116	@ 0x74
 8021cca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021cce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8021cce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021cd2:	b085      	sub	sp, #20
 8021cd4:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8021cd8:	9102      	str	r1, [sp, #8]
 8021cda:	2c00      	cmp	r4, #0
 8021cdc:	fb04 7103 	mla	r1, r4, r3, r7
 8021ce0:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8021ce4:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8021ce8:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8021cec:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8021cf0:	f2c0 810c 	blt.w	8021f0c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8021cf4:	45a6      	cmp	lr, r4
 8021cf6:	f340 8109 	ble.w	8021f0c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8021cfa:	2f00      	cmp	r7, #0
 8021cfc:	f2c0 8104 	blt.w	8021f08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8021d00:	42bb      	cmp	r3, r7
 8021d02:	f340 8101 	ble.w	8021f08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8021d06:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8021d0a:	1c7a      	adds	r2, r7, #1
 8021d0c:	f100 8101 	bmi.w	8021f12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8021d10:	4293      	cmp	r3, r2
 8021d12:	f340 80fe 	ble.w	8021f12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8021d16:	2e00      	cmp	r6, #0
 8021d18:	f000 80fd 	beq.w	8021f16 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8021d1c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8021d20:	3401      	adds	r4, #1
 8021d22:	f100 80fc 	bmi.w	8021f1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8021d26:	45a6      	cmp	lr, r4
 8021d28:	f340 80f9 	ble.w	8021f1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8021d2c:	2800      	cmp	r0, #0
 8021d2e:	f000 80f9 	beq.w	8021f24 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8021d32:	2f00      	cmp	r7, #0
 8021d34:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8021d38:	f2c0 80ef 	blt.w	8021f1a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8021d3c:	42bb      	cmp	r3, r7
 8021d3e:	f340 80ec 	ble.w	8021f1a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8021d42:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8021d46:	3701      	adds	r7, #1
 8021d48:	f100 80ef 	bmi.w	8021f2a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8021d4c:	42bb      	cmp	r3, r7
 8021d4e:	f340 80ec 	ble.w	8021f2a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8021d52:	2e00      	cmp	r6, #0
 8021d54:	f000 80eb 	beq.w	8021f2e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8021d58:	6852      	ldr	r2, [r2, #4]
 8021d5a:	b2b6      	uxth	r6, r6
 8021d5c:	b280      	uxth	r0, r0
 8021d5e:	fb00 fe06 	mul.w	lr, r0, r6
 8021d62:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8021d66:	0136      	lsls	r6, r6, #4
 8021d68:	eba6 070e 	sub.w	r7, r6, lr
 8021d6c:	b280      	uxth	r0, r0
 8021d6e:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8021d72:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8021d76:	b2bf      	uxth	r7, r7
 8021d78:	1a1b      	subs	r3, r3, r0
 8021d7a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8021d7e:	b29b      	uxth	r3, r3
 8021d80:	fb07 f60a 	mul.w	r6, r7, sl
 8021d84:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8021d88:	fb0b 6603 	mla	r6, fp, r3, r6
 8021d8c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8021d90:	fb00 6609 	mla	r6, r0, r9, r6
 8021d94:	fb0e 6608 	mla	r6, lr, r8, r6
 8021d98:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021d9c:	9600      	str	r6, [sp, #0]
 8021d9e:	2e00      	cmp	r6, #0
 8021da0:	f000 80af 	beq.w	8021f02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8021da4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8021da8:	fb0b fc0c 	mul.w	ip, fp, ip
 8021dac:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8021db0:	fb0b f505 	mul.w	r5, fp, r5
 8021db4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8021db8:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8021dbc:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8021dc0:	44dc      	add	ip, fp
 8021dc2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021dc6:	9501      	str	r5, [sp, #4]
 8021dc8:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8021dcc:	9503      	str	r5, [sp, #12]
 8021dce:	9d01      	ldr	r5, [sp, #4]
 8021dd0:	9e02      	ldr	r6, [sp, #8]
 8021dd2:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8021dd6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8021dda:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8021dde:	fb0a fc0c 	mul.w	ip, sl, ip
 8021de2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8021de6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8021dea:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8021dee:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8021df2:	4465      	add	r5, ip
 8021df4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8021df8:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8021dfc:	fb09 fc0c 	mul.w	ip, r9, ip
 8021e00:	fb09 f904 	mul.w	r9, r9, r4
 8021e04:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8021e08:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8021e0c:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8021e10:	fb08 f404 	mul.w	r4, r8, r4
 8021e14:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8021e18:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8021e1c:	fb08 f802 	mul.w	r8, r8, r2
 8021e20:	fb0a fa01 	mul.w	sl, sl, r1
 8021e24:	0a22      	lsrs	r2, r4, #8
 8021e26:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8021e2a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8021e2e:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8021e32:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8021e36:	4414      	add	r4, r2
 8021e38:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8021e3c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8021e40:	0a2d      	lsrs	r5, r5, #8
 8021e42:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8021e46:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8021e4a:	9a03      	ldr	r2, [sp, #12]
 8021e4c:	8836      	ldrh	r6, [r6, #0]
 8021e4e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8021e52:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8021e56:	437d      	muls	r5, r7
 8021e58:	4461      	add	r1, ip
 8021e5a:	0a24      	lsrs	r4, r4, #8
 8021e5c:	fb02 5503 	mla	r5, r2, r3, r5
 8021e60:	0a09      	lsrs	r1, r1, #8
 8021e62:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8021e66:	fb04 540e 	mla	r4, r4, lr, r5
 8021e6a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8021e6e:	fb01 4100 	mla	r1, r1, r0, r4
 8021e72:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021e76:	0a09      	lsrs	r1, r1, #8
 8021e78:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021e7c:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8021e80:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8021e84:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8021e88:	fb07 f70a 	mul.w	r7, r7, sl
 8021e8c:	fb03 7101 	mla	r1, r3, r1, r7
 8021e90:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021e94:	9b00      	ldr	r3, [sp, #0]
 8021e96:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8021e9a:	fb0e 1e08 	mla	lr, lr, r8, r1
 8021e9e:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8021ea2:	fb00 e101 	mla	r1, r0, r1, lr
 8021ea6:	43da      	mvns	r2, r3
 8021ea8:	1233      	asrs	r3, r6, #8
 8021eaa:	b2d2      	uxtb	r2, r2
 8021eac:	10f0      	asrs	r0, r6, #3
 8021eae:	0a09      	lsrs	r1, r1, #8
 8021eb0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8021eb4:	00f6      	lsls	r6, r6, #3
 8021eb6:	4353      	muls	r3, r2
 8021eb8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8021ebc:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8021ec0:	b2f6      	uxtb	r6, r6
 8021ec2:	4321      	orrs	r1, r4
 8021ec4:	4350      	muls	r0, r2
 8021ec6:	4356      	muls	r6, r2
 8021ec8:	1c5a      	adds	r2, r3, #1
 8021eca:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8021ece:	0c0b      	lsrs	r3, r1, #16
 8021ed0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021ed4:	1c42      	adds	r2, r0, #1
 8021ed6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021eda:	0a0a      	lsrs	r2, r1, #8
 8021edc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8021ee0:	021b      	lsls	r3, r3, #8
 8021ee2:	00d2      	lsls	r2, r2, #3
 8021ee4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021ee8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8021eec:	4313      	orrs	r3, r2
 8021eee:	1c72      	adds	r2, r6, #1
 8021ef0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8021ef4:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8021ef8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8021efc:	4319      	orrs	r1, r3
 8021efe:	9b02      	ldr	r3, [sp, #8]
 8021f00:	8019      	strh	r1, [r3, #0]
 8021f02:	b005      	add	sp, #20
 8021f04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021f08:	2500      	movs	r5, #0
 8021f0a:	e6fe      	b.n	8021d0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8021f0c:	2100      	movs	r1, #0
 8021f0e:	460d      	mov	r5, r1
 8021f10:	e706      	b.n	8021d20 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8021f12:	2100      	movs	r1, #0
 8021f14:	e704      	b.n	8021d20 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8021f16:	4631      	mov	r1, r6
 8021f18:	e702      	b.n	8021d20 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8021f1a:	2400      	movs	r4, #0
 8021f1c:	e713      	b.n	8021d46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8021f1e:	2200      	movs	r2, #0
 8021f20:	4614      	mov	r4, r2
 8021f22:	e71a      	b.n	8021d5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8021f24:	4602      	mov	r2, r0
 8021f26:	4604      	mov	r4, r0
 8021f28:	e717      	b.n	8021d5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8021f2a:	2200      	movs	r2, #0
 8021f2c:	e715      	b.n	8021d5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8021f2e:	4632      	mov	r2, r6
 8021f30:	e713      	b.n	8021d5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08021f34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021f34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021f38:	b09b      	sub	sp, #108	@ 0x6c
 8021f3a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 8021f3e:	9218      	str	r2, [sp, #96]	@ 0x60
 8021f40:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8021f42:	9116      	str	r1, [sp, #88]	@ 0x58
 8021f44:	9307      	str	r3, [sp, #28]
 8021f46:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 8021f4a:	9019      	str	r0, [sp, #100]	@ 0x64
 8021f4c:	6850      	ldr	r0, [r2, #4]
 8021f4e:	6812      	ldr	r2, [r2, #0]
 8021f50:	fb00 1303 	mla	r3, r0, r3, r1
 8021f54:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021f58:	930a      	str	r3, [sp, #40]	@ 0x28
 8021f5a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021f5c:	681b      	ldr	r3, [r3, #0]
 8021f5e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8021f60:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8021f62:	2b00      	cmp	r3, #0
 8021f64:	dc03      	bgt.n	8021f6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8021f66:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8021f68:	2b00      	cmp	r3, #0
 8021f6a:	f340 8386 	ble.w	802267a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8021f6e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021f70:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021f74:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021f78:	1e48      	subs	r0, r1, #1
 8021f7a:	1e57      	subs	r7, r2, #1
 8021f7c:	9b07      	ldr	r3, [sp, #28]
 8021f7e:	2b00      	cmp	r3, #0
 8021f80:	f340 8166 	ble.w	8022250 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8021f84:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021f88:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021f8c:	d406      	bmi.n	8021f9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8021f8e:	4584      	cmp	ip, r0
 8021f90:	da04      	bge.n	8021f9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8021f92:	2b00      	cmp	r3, #0
 8021f94:	db02      	blt.n	8021f9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8021f96:	42bb      	cmp	r3, r7
 8021f98:	f2c0 815b 	blt.w	8022252 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8021f9c:	f11c 0c01 	adds.w	ip, ip, #1
 8021fa0:	f100 814b 	bmi.w	802223a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8021fa4:	4561      	cmp	r1, ip
 8021fa6:	f2c0 8148 	blt.w	802223a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8021faa:	3301      	adds	r3, #1
 8021fac:	f100 8145 	bmi.w	802223a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8021fb0:	429a      	cmp	r2, r3
 8021fb2:	f2c0 8142 	blt.w	802223a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8021fb6:	9b07      	ldr	r3, [sp, #28]
 8021fb8:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8021fba:	9317      	str	r3, [sp, #92]	@ 0x5c
 8021fbc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8021fbe:	2b00      	cmp	r3, #0
 8021fc0:	f340 8165 	ble.w	802228e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021fc4:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 8021fc6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021fc8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8021fcc:	689b      	ldr	r3, [r3, #8]
 8021fce:	1422      	asrs	r2, r4, #16
 8021fd0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8021fd4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8021fd8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8021fdc:	f100 81d5 	bmi.w	802238a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8021fe0:	f103 38ff 	add.w	r8, r3, #4294967295
 8021fe4:	4542      	cmp	r2, r8
 8021fe6:	f280 81d0 	bge.w	802238a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8021fea:	f1bc 0f00 	cmp.w	ip, #0
 8021fee:	f2c0 81cc 	blt.w	802238a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8021ff2:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021ff6:	45c4      	cmp	ip, r8
 8021ff8:	f280 81c7 	bge.w	802238a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8021ffc:	b21b      	sxth	r3, r3
 8021ffe:	fb0c 2203 	mla	r2, ip, r3, r2
 8022002:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8022004:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8022008:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802200c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8022010:	2900      	cmp	r1, #0
 8022012:	f000 8182 	beq.w	802231a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8022016:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802201a:	950b      	str	r5, [sp, #44]	@ 0x2c
 802201c:	0e2d      	lsrs	r5, r5, #24
 802201e:	9512      	str	r5, [sp, #72]	@ 0x48
 8022020:	b180      	cbz	r0, 8022044 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8022022:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8022026:	3b01      	subs	r3, #1
 8022028:	009b      	lsls	r3, r3, #2
 802202a:	3304      	adds	r3, #4
 802202c:	eb08 0c03 	add.w	ip, r8, r3
 8022030:	f858 3003 	ldr.w	r3, [r8, r3]
 8022034:	9308      	str	r3, [sp, #32]
 8022036:	0e1b      	lsrs	r3, r3, #24
 8022038:	9310      	str	r3, [sp, #64]	@ 0x40
 802203a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802203e:	930c      	str	r3, [sp, #48]	@ 0x30
 8022040:	0e1b      	lsrs	r3, r3, #24
 8022042:	9313      	str	r3, [sp, #76]	@ 0x4c
 8022044:	b289      	uxth	r1, r1
 8022046:	b280      	uxth	r0, r0
 8022048:	fb01 f900 	mul.w	r9, r1, r0
 802204c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8022050:	0109      	lsls	r1, r1, #4
 8022052:	eba1 0809 	sub.w	r8, r1, r9
 8022056:	b280      	uxth	r0, r0
 8022058:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 802205c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 802205e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8022060:	fa1f f888 	uxth.w	r8, r8
 8022064:	1a09      	subs	r1, r1, r0
 8022066:	b289      	uxth	r1, r1
 8022068:	fb08 f303 	mul.w	r3, r8, r3
 802206c:	fb01 330e 	mla	r3, r1, lr, r3
 8022070:	fb00 3305 	mla	r3, r0, r5, r3
 8022074:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8022076:	fb09 3305 	mla	r3, r9, r5, r3
 802207a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802207e:	2b00      	cmp	r3, #0
 8022080:	f000 80d2 	beq.w	8022228 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022084:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8022088:	d01b      	beq.n	80220c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 802208a:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 802208e:	fb0e fa0a 	mul.w	sl, lr, sl
 8022092:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8022096:	fb0e fe02 	mul.w	lr, lr, r2
 802209a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802209e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80220a2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80220a6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 80220aa:	4452      	add	r2, sl
 80220ac:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80220b0:	0a12      	lsrs	r2, r2, #8
 80220b2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80220b6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80220ba:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80220be:	ea42 020c 	orr.w	r2, r2, ip
 80220c2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80220c4:	2dff      	cmp	r5, #255	@ 0xff
 80220c6:	d021      	beq.n	802210c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 80220c8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80220ca:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 80220ce:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80220d0:	fb05 fb0b 	mul.w	fp, r5, fp
 80220d4:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80220d6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80220da:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80220dc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80220e0:	fb05 fa0a 	mul.w	sl, r5, sl
 80220e4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80220e8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80220ec:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80220f0:	44de      	add	lr, fp
 80220f2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80220f6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80220fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80220fe:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8022102:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8022106:	ea4e 050a 	orr.w	r5, lr, sl
 802210a:	950b      	str	r5, [sp, #44]	@ 0x2c
 802210c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802210e:	2dff      	cmp	r5, #255	@ 0xff
 8022110:	d021      	beq.n	8022156 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8022112:	9d08      	ldr	r5, [sp, #32]
 8022114:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8022118:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802211a:	fb05 fb0b 	mul.w	fp, r5, fp
 802211e:	9d08      	ldr	r5, [sp, #32]
 8022120:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8022124:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8022126:	fb05 fa0e 	mul.w	sl, r5, lr
 802212a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802212e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8022132:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8022136:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802213a:	44de      	add	lr, fp
 802213c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022140:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022144:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022148:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802214c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8022150:	ea4e 050a 	orr.w	r5, lr, sl
 8022154:	9508      	str	r5, [sp, #32]
 8022156:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8022158:	2dff      	cmp	r5, #255	@ 0xff
 802215a:	d021      	beq.n	80221a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 802215c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802215e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8022162:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8022164:	fb05 fb0b 	mul.w	fp, r5, fp
 8022168:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802216a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802216e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8022170:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022174:	fb05 fa0a 	mul.w	sl, r5, sl
 8022178:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802217c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8022180:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8022184:	44de      	add	lr, fp
 8022186:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802218a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802218e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022192:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8022196:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802219a:	ea4e 050a 	orr.w	r5, lr, sl
 802219e:	950c      	str	r5, [sp, #48]	@ 0x30
 80221a0:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80221a2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80221a6:	9d08      	ldr	r5, [sp, #32]
 80221a8:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 80221ac:	fb08 fc0c 	mul.w	ip, r8, ip
 80221b0:	fb01 cc0e 	mla	ip, r1, lr, ip
 80221b4:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 80221b8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80221ba:	fb00 cc0e 	mla	ip, r0, lr, ip
 80221be:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 80221c2:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80221c4:	fb09 cc0e 	mla	ip, r9, lr, ip
 80221c8:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 80221cc:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80221d0:	fb08 f80e 	mul.w	r8, r8, lr
 80221d4:	fb01 8202 	mla	r2, r1, r2, r8
 80221d8:	9908      	ldr	r1, [sp, #32]
 80221da:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 80221de:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80221e0:	fb00 220a 	mla	r2, r0, sl, r2
 80221e4:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 80221e8:	fb09 2900 	mla	r9, r9, r0, r2
 80221ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80221f0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80221f4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80221f8:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80221fc:	ea4c 0c09 	orr.w	ip, ip, r9
 8022200:	2bff      	cmp	r3, #255	@ 0xff
 8022202:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8022206:	f040 8091 	bne.w	802232c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802220a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 802220e:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 8022212:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022216:	f022 0207 	bic.w	r2, r2, #7
 802221a:	431a      	orrs	r2, r3
 802221c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8022220:	ea4c 0c02 	orr.w	ip, ip, r2
 8022224:	f8a7 c000 	strh.w	ip, [r7]
 8022228:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802222a:	441c      	add	r4, r3
 802222c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802222e:	441e      	add	r6, r3
 8022230:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8022232:	3b01      	subs	r3, #1
 8022234:	3702      	adds	r7, #2
 8022236:	9317      	str	r3, [sp, #92]	@ 0x5c
 8022238:	e6c0      	b.n	8021fbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802223a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802223c:	441c      	add	r4, r3
 802223e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8022240:	441e      	add	r6, r3
 8022242:	9b07      	ldr	r3, [sp, #28]
 8022244:	3b01      	subs	r3, #1
 8022246:	9307      	str	r3, [sp, #28]
 8022248:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802224a:	3302      	adds	r3, #2
 802224c:	930a      	str	r3, [sp, #40]	@ 0x28
 802224e:	e695      	b.n	8021f7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022250:	d024      	beq.n	802229c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8022252:	9b07      	ldr	r3, [sp, #28]
 8022254:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8022256:	3b01      	subs	r3, #1
 8022258:	fb00 4003 	mla	r0, r0, r3, r4
 802225c:	1400      	asrs	r0, r0, #16
 802225e:	f53f aeaa 	bmi.w	8021fb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8022262:	3901      	subs	r1, #1
 8022264:	4288      	cmp	r0, r1
 8022266:	f6bf aea6 	bge.w	8021fb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802226a:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 802226c:	fb01 6303 	mla	r3, r1, r3, r6
 8022270:	141b      	asrs	r3, r3, #16
 8022272:	f53f aea0 	bmi.w	8021fb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8022276:	3a01      	subs	r2, #1
 8022278:	4293      	cmp	r3, r2
 802227a:	f6bf ae9c 	bge.w	8021fb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802227e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8022282:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8022286:	f1bb 0f00 	cmp.w	fp, #0
 802228a:	f300 809a 	bgt.w	80223c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802228e:	9b07      	ldr	r3, [sp, #28]
 8022290:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022294:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022296:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802229a:	930a      	str	r3, [sp, #40]	@ 0x28
 802229c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802229e:	2b00      	cmp	r3, #0
 80222a0:	f340 81eb 	ble.w	802267a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80222a4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80222a8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80222ac:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80222b0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80222b2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80222b6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80222ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80222be:	eef0 6a62 	vmov.f32	s13, s5
 80222c2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80222c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80222ca:	ee77 2a62 	vsub.f32	s5, s14, s5
 80222ce:	ee16 4a90 	vmov	r4, s13
 80222d2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80222d6:	eef0 6a43 	vmov.f32	s13, s6
 80222da:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80222de:	ee12 2a90 	vmov	r2, s5
 80222e2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80222e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80222ea:	ee13 2a10 	vmov	r2, s6
 80222ee:	9327      	str	r3, [sp, #156]	@ 0x9c
 80222f0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80222f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80222f6:	9328      	str	r3, [sp, #160]	@ 0xa0
 80222f8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80222fa:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80222fc:	3b01      	subs	r3, #1
 80222fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022302:	9316      	str	r3, [sp, #88]	@ 0x58
 8022304:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022306:	bf08      	it	eq
 8022308:	4613      	moveq	r3, r2
 802230a:	ee16 6a90 	vmov	r6, s13
 802230e:	9307      	str	r3, [sp, #28]
 8022310:	eeb0 3a67 	vmov.f32	s6, s15
 8022314:	eef0 2a47 	vmov.f32	s5, s14
 8022318:	e622      	b.n	8021f60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 802231a:	2800      	cmp	r0, #0
 802231c:	f43f ae92 	beq.w	8022044 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8022320:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8022324:	9308      	str	r3, [sp, #32]
 8022326:	0e1b      	lsrs	r3, r3, #24
 8022328:	9310      	str	r3, [sp, #64]	@ 0x40
 802232a:	e68b      	b.n	8022044 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802232c:	8839      	ldrh	r1, [r7, #0]
 802232e:	4dd4      	ldr	r5, [pc, #848]	@ (8022680 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8022330:	43db      	mvns	r3, r3
 8022332:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8022336:	fa5f f883 	uxtb.w	r8, r3
 802233a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 802233e:	fb0e fe08 	mul.w	lr, lr, r8
 8022342:	10c8      	asrs	r0, r1, #3
 8022344:	00cb      	lsls	r3, r1, #3
 8022346:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802234a:	f10e 0101 	add.w	r1, lr, #1
 802234e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8022352:	fb00 f008 	mul.w	r0, r0, r8
 8022356:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802235a:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802235e:	f100 0e01 	add.w	lr, r0, #1
 8022362:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8022366:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802236a:	b2db      	uxtb	r3, r3
 802236c:	b2c9      	uxtb	r1, r1
 802236e:	00d2      	lsls	r2, r2, #3
 8022370:	fb03 f308 	mul.w	r3, r3, r8
 8022374:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8022378:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802237c:	430a      	orrs	r2, r1
 802237e:	1c59      	adds	r1, r3, #1
 8022380:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8022384:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8022388:	e748      	b.n	802221c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802238a:	f112 0801 	adds.w	r8, r2, #1
 802238e:	f53f af4b 	bmi.w	8022228 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022392:	4543      	cmp	r3, r8
 8022394:	f6ff af48 	blt.w	8022228 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022398:	f11c 0801 	adds.w	r8, ip, #1
 802239c:	f53f af44 	bmi.w	8022228 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80223a0:	45c6      	cmp	lr, r8
 80223a2:	f6ff af41 	blt.w	8022228 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80223a6:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 80223aa:	fa0f f28e 	sxth.w	r2, lr
 80223ae:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80223b2:	9200      	str	r2, [sp, #0]
 80223b4:	b21b      	sxth	r3, r3
 80223b6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80223b8:	9819      	ldr	r0, [sp, #100]	@ 0x64
 80223ba:	4639      	mov	r1, r7
 80223bc:	f7ff fc87 	bl	8021cce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80223c0:	e732      	b.n	8022228 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80223c2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80223c4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80223c6:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 80223ca:	1421      	asrs	r1, r4, #16
 80223cc:	1433      	asrs	r3, r6, #16
 80223ce:	fb07 1303 	mla	r3, r7, r3, r1
 80223d2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80223d4:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80223d8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80223dc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80223e0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80223e4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80223e8:	2a00      	cmp	r2, #0
 80223ea:	f000 8107 	beq.w	80225fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 80223ee:	684d      	ldr	r5, [r1, #4]
 80223f0:	950d      	str	r5, [sp, #52]	@ 0x34
 80223f2:	0e2d      	lsrs	r5, r5, #24
 80223f4:	9514      	str	r5, [sp, #80]	@ 0x50
 80223f6:	b178      	cbz	r0, 8022418 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80223f8:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 80223fc:	3f01      	subs	r7, #1
 80223fe:	00bf      	lsls	r7, r7, #2
 8022400:	3704      	adds	r7, #4
 8022402:	eb01 0e07 	add.w	lr, r1, r7
 8022406:	59c9      	ldr	r1, [r1, r7]
 8022408:	9109      	str	r1, [sp, #36]	@ 0x24
 802240a:	0e09      	lsrs	r1, r1, #24
 802240c:	9111      	str	r1, [sp, #68]	@ 0x44
 802240e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8022412:	910e      	str	r1, [sp, #56]	@ 0x38
 8022414:	0e09      	lsrs	r1, r1, #24
 8022416:	9115      	str	r1, [sp, #84]	@ 0x54
 8022418:	b292      	uxth	r2, r2
 802241a:	b280      	uxth	r0, r0
 802241c:	fb02 f900 	mul.w	r9, r2, r0
 8022420:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8022424:	0112      	lsls	r2, r2, #4
 8022426:	eba2 0e09 	sub.w	lr, r2, r9
 802242a:	b280      	uxth	r0, r0
 802242c:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8022430:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8022432:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8022434:	fa1f fe8e 	uxth.w	lr, lr
 8022438:	1a09      	subs	r1, r1, r0
 802243a:	b289      	uxth	r1, r1
 802243c:	fb0e f202 	mul.w	r2, lr, r2
 8022440:	fb01 220c 	mla	r2, r1, ip, r2
 8022444:	fb00 2205 	mla	r2, r0, r5, r2
 8022448:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802244a:	fb09 2205 	mla	r2, r9, r5, r2
 802244e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8022452:	2a00      	cmp	r2, #0
 8022454:	f000 80c9 	beq.w	80225ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8022458:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802245c:	d019      	beq.n	8022492 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802245e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8022462:	fb0c fa0a 	mul.w	sl, ip, sl
 8022466:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802246a:	fb0c fc03 	mul.w	ip, ip, r3
 802246e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022472:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8022476:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802247a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802247e:	4453      	add	r3, sl
 8022480:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022484:	0a1b      	lsrs	r3, r3, #8
 8022486:	0a3f      	lsrs	r7, r7, #8
 8022488:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802248c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8022490:	433b      	orrs	r3, r7
 8022492:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8022494:	2dff      	cmp	r5, #255	@ 0xff
 8022496:	d020      	beq.n	80224da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8022498:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802249a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802249e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80224a0:	436f      	muls	r7, r5
 80224a2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80224a4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80224a8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80224aa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80224ae:	fb05 fa0a 	mul.w	sl, r5, sl
 80224b2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80224b6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80224ba:	44bc      	add	ip, r7
 80224bc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80224c0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80224c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80224c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80224cc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80224d0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80224d4:	ea4c 050a 	orr.w	r5, ip, sl
 80224d8:	950d      	str	r5, [sp, #52]	@ 0x34
 80224da:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80224dc:	2dff      	cmp	r5, #255	@ 0xff
 80224de:	d020      	beq.n	8022522 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 80224e0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80224e2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80224e6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80224e8:	436f      	muls	r7, r5
 80224ea:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80224ec:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 80224f0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80224f2:	fb05 fa0c 	mul.w	sl, r5, ip
 80224f6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80224fa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80224fe:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8022502:	44bc      	add	ip, r7
 8022504:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8022508:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802250c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022510:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022514:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022518:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802251c:	ea4c 050a 	orr.w	r5, ip, sl
 8022520:	9509      	str	r5, [sp, #36]	@ 0x24
 8022522:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8022524:	2dff      	cmp	r5, #255	@ 0xff
 8022526:	d020      	beq.n	802256a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8022528:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802252a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802252e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8022530:	436f      	muls	r7, r5
 8022532:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8022534:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8022538:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802253a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802253e:	fb05 fa0a 	mul.w	sl, r5, sl
 8022542:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8022546:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802254a:	44bc      	add	ip, r7
 802254c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8022550:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022554:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022558:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802255c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022560:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8022564:	ea4c 050a 	orr.w	r5, ip, sl
 8022568:	950e      	str	r5, [sp, #56]	@ 0x38
 802256a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802256c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8022570:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8022572:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8022576:	fb0e f707 	mul.w	r7, lr, r7
 802257a:	fb01 770c 	mla	r7, r1, ip, r7
 802257e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8022582:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8022584:	fb00 770c 	mla	r7, r0, ip, r7
 8022588:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802258c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802258e:	fb09 770c 	mla	r7, r9, ip, r7
 8022592:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8022596:	fb0e fe0c 	mul.w	lr, lr, ip
 802259a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802259e:	fb01 e303 	mla	r3, r1, r3, lr
 80225a2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80225a4:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 80225a8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80225aa:	fb00 330a 	mla	r3, r0, sl, r3
 80225ae:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 80225b2:	fb09 3c0c 	mla	ip, r9, ip, r3
 80225b6:	0a3f      	lsrs	r7, r7, #8
 80225b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80225bc:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80225c0:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80225c4:	ea47 070c 	orr.w	r7, r7, ip
 80225c8:	2aff      	cmp	r2, #255	@ 0xff
 80225ca:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80225ce:	d11e      	bne.n	802260e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 80225d0:	097a      	lsrs	r2, r7, #5
 80225d2:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 80225d6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80225da:	f023 0307 	bic.w	r3, r3, #7
 80225de:	4313      	orrs	r3, r2
 80225e0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80225e4:	431f      	orrs	r7, r3
 80225e6:	f8a8 7000 	strh.w	r7, [r8]
 80225ea:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80225ec:	441c      	add	r4, r3
 80225ee:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80225f0:	f108 0802 	add.w	r8, r8, #2
 80225f4:	441e      	add	r6, r3
 80225f6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80225fa:	e644      	b.n	8022286 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80225fc:	2800      	cmp	r0, #0
 80225fe:	f43f af0b 	beq.w	8022418 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8022602:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8022606:	9109      	str	r1, [sp, #36]	@ 0x24
 8022608:	0e09      	lsrs	r1, r1, #24
 802260a:	9111      	str	r1, [sp, #68]	@ 0x44
 802260c:	e704      	b.n	8022418 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802260e:	f8b8 1000 	ldrh.w	r1, [r8]
 8022612:	43d2      	mvns	r2, r2
 8022614:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8022618:	fa5f fe82 	uxtb.w	lr, r2
 802261c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8022620:	fb0c fc0e 	mul.w	ip, ip, lr
 8022624:	10c8      	asrs	r0, r1, #3
 8022626:	00ca      	lsls	r2, r1, #3
 8022628:	f10c 0101 	add.w	r1, ip, #1
 802262c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8022630:	0c39      	lsrs	r1, r7, #16
 8022632:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8022636:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802263a:	4911      	ldr	r1, [pc, #68]	@ (8022680 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802263c:	fb00 f00e 	mul.w	r0, r0, lr
 8022640:	fa5f fc8c 	uxtb.w	ip, ip
 8022644:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8022648:	b2d2      	uxtb	r2, r2
 802264a:	1c41      	adds	r1, r0, #1
 802264c:	fb02 f20e 	mul.w	r2, r2, lr
 8022650:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022654:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8022658:	1c51      	adds	r1, r2, #1
 802265a:	00c0      	lsls	r0, r0, #3
 802265c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8022660:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022664:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8022668:	ea4c 0c00 	orr.w	ip, ip, r0
 802266c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8022670:	ea47 0c0c 	orr.w	ip, r7, ip
 8022674:	f8a8 c000 	strh.w	ip, [r8]
 8022678:	e7b7      	b.n	80225ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802267a:	b01b      	add	sp, #108	@ 0x6c
 802267c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022680:	fffff800 	.word	0xfffff800

08022684 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8022684:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022688:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 802268c:	2d00      	cmp	r5, #0
 802268e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8022692:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8022696:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 802269a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 802269e:	fb05 0e03 	mla	lr, r5, r3, r0
 80226a2:	f2c0 808c 	blt.w	80227be <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80226a6:	45a9      	cmp	r9, r5
 80226a8:	f340 8089 	ble.w	80227be <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80226ac:	2800      	cmp	r0, #0
 80226ae:	f2c0 8084 	blt.w	80227ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80226b2:	4580      	cmp	r8, r0
 80226b4:	f340 8081 	ble.w	80227ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80226b8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80226bc:	f01e 0f01 	tst.w	lr, #1
 80226c0:	5d16      	ldrb	r6, [r2, r4]
 80226c2:	bf0c      	ite	eq
 80226c4:	f006 060f 	andeq.w	r6, r6, #15
 80226c8:	1136      	asrne	r6, r6, #4
 80226ca:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80226ce:	b2f6      	uxtb	r6, r6
 80226d0:	1c44      	adds	r4, r0, #1
 80226d2:	d477      	bmi.n	80227c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80226d4:	45a0      	cmp	r8, r4
 80226d6:	dd75      	ble.n	80227c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80226d8:	2f00      	cmp	r7, #0
 80226da:	d075      	beq.n	80227c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80226dc:	f10e 0a01 	add.w	sl, lr, #1
 80226e0:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80226e4:	f01a 0f01 	tst.w	sl, #1
 80226e8:	5d14      	ldrb	r4, [r2, r4]
 80226ea:	bf0c      	ite	eq
 80226ec:	f004 040f 	andeq.w	r4, r4, #15
 80226f0:	1124      	asrne	r4, r4, #4
 80226f2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80226f6:	b2e4      	uxtb	r4, r4
 80226f8:	3501      	adds	r5, #1
 80226fa:	d469      	bmi.n	80227d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80226fc:	45a9      	cmp	r9, r5
 80226fe:	dd67      	ble.n	80227d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8022700:	f1bc 0f00 	cmp.w	ip, #0
 8022704:	d067      	beq.n	80227d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8022706:	2800      	cmp	r0, #0
 8022708:	db60      	blt.n	80227cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802270a:	4580      	cmp	r8, r0
 802270c:	dd5e      	ble.n	80227cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802270e:	eb03 090e 	add.w	r9, r3, lr
 8022712:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8022716:	f019 0f01 	tst.w	r9, #1
 802271a:	5d55      	ldrb	r5, [r2, r5]
 802271c:	bf0c      	ite	eq
 802271e:	f005 050f 	andeq.w	r5, r5, #15
 8022722:	112d      	asrne	r5, r5, #4
 8022724:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8022728:	b2ed      	uxtb	r5, r5
 802272a:	3001      	adds	r0, #1
 802272c:	d456      	bmi.n	80227dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802272e:	4580      	cmp	r8, r0
 8022730:	dd54      	ble.n	80227dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8022732:	2f00      	cmp	r7, #0
 8022734:	d054      	beq.n	80227e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8022736:	3301      	adds	r3, #1
 8022738:	449e      	add	lr, r3
 802273a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802273e:	f01e 0f01 	tst.w	lr, #1
 8022742:	5cd0      	ldrb	r0, [r2, r3]
 8022744:	bf0c      	ite	eq
 8022746:	f000 000f 	andeq.w	r0, r0, #15
 802274a:	1100      	asrne	r0, r0, #4
 802274c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8022750:	b2c3      	uxtb	r3, r0
 8022752:	b2ba      	uxth	r2, r7
 8022754:	fa1f fc8c 	uxth.w	ip, ip
 8022758:	fb02 f00c 	mul.w	r0, r2, ip
 802275c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8022760:	0112      	lsls	r2, r2, #4
 8022762:	fa1f fc8c 	uxth.w	ip, ip
 8022766:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 802276a:	1a12      	subs	r2, r2, r0
 802276c:	eba7 070c 	sub.w	r7, r7, ip
 8022770:	b292      	uxth	r2, r2
 8022772:	b2bf      	uxth	r7, r7
 8022774:	4362      	muls	r2, r4
 8022776:	fb06 2207 	mla	r2, r6, r7, r2
 802277a:	fb0c 2505 	mla	r5, ip, r5, r2
 802277e:	fb00 5303 	mla	r3, r0, r3, r5
 8022782:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022786:	b1b3      	cbz	r3, 80227b6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8022788:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 802278c:	435a      	muls	r2, r3
 802278e:	1c53      	adds	r3, r2, #1
 8022790:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022794:	4a2d      	ldr	r2, [pc, #180]	@ (802284c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8022796:	121b      	asrs	r3, r3, #8
 8022798:	6812      	ldr	r2, [r2, #0]
 802279a:	2bff      	cmp	r3, #255	@ 0xff
 802279c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80227a0:	d120      	bne.n	80227e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 80227a2:	4b2b      	ldr	r3, [pc, #172]	@ (8022850 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80227a4:	0950      	lsrs	r0, r2, #5
 80227a6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80227aa:	4033      	ands	r3, r6
 80227ac:	4318      	orrs	r0, r3
 80227ae:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80227b2:	4302      	orrs	r2, r0
 80227b4:	800a      	strh	r2, [r1, #0]
 80227b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80227ba:	2600      	movs	r6, #0
 80227bc:	e788      	b.n	80226d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80227be:	2400      	movs	r4, #0
 80227c0:	4626      	mov	r6, r4
 80227c2:	e799      	b.n	80226f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80227c4:	2400      	movs	r4, #0
 80227c6:	e797      	b.n	80226f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80227c8:	463c      	mov	r4, r7
 80227ca:	e795      	b.n	80226f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80227cc:	2500      	movs	r5, #0
 80227ce:	e7ac      	b.n	802272a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80227d0:	2300      	movs	r3, #0
 80227d2:	461d      	mov	r5, r3
 80227d4:	e7bd      	b.n	8022752 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80227d6:	4663      	mov	r3, ip
 80227d8:	4665      	mov	r5, ip
 80227da:	e7ba      	b.n	8022752 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80227dc:	2300      	movs	r3, #0
 80227de:	e7b8      	b.n	8022752 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80227e0:	463b      	mov	r3, r7
 80227e2:	e7b6      	b.n	8022752 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80227e4:	880d      	ldrh	r5, [r1, #0]
 80227e6:	b29f      	uxth	r7, r3
 80227e8:	122c      	asrs	r4, r5, #8
 80227ea:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80227ee:	43db      	mvns	r3, r3
 80227f0:	b2db      	uxtb	r3, r3
 80227f2:	fb10 f007 	smulbb	r0, r0, r7
 80227f6:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80227fa:	fb04 0403 	mla	r4, r4, r3, r0
 80227fe:	b2f6      	uxtb	r6, r6
 8022800:	10e8      	asrs	r0, r5, #3
 8022802:	b2d2      	uxtb	r2, r2
 8022804:	00ed      	lsls	r5, r5, #3
 8022806:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802280a:	fb12 f207 	smulbb	r2, r2, r7
 802280e:	fb16 f607 	smulbb	r6, r6, r7
 8022812:	b2ed      	uxtb	r5, r5
 8022814:	b2a4      	uxth	r4, r4
 8022816:	fb00 6603 	mla	r6, r0, r3, r6
 802281a:	fb05 2303 	mla	r3, r5, r3, r2
 802281e:	b29a      	uxth	r2, r3
 8022820:	1c63      	adds	r3, r4, #1
 8022822:	b2b0      	uxth	r0, r6
 8022824:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8022828:	1c53      	adds	r3, r2, #1
 802282a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802282e:	1c42      	adds	r2, r0, #1
 8022830:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022834:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8022838:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802283c:	0940      	lsrs	r0, r0, #5
 802283e:	4323      	orrs	r3, r4
 8022840:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022844:	4303      	orrs	r3, r0
 8022846:	800b      	strh	r3, [r1, #0]
 8022848:	e7b5      	b.n	80227b6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802284a:	bf00      	nop
 802284c:	200152fc 	.word	0x200152fc
 8022850:	00fff800 	.word	0x00fff800

08022854 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022854:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022858:	b097      	sub	sp, #92	@ 0x5c
 802285a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 802285e:	9214      	str	r2, [sp, #80]	@ 0x50
 8022860:	9309      	str	r3, [sp, #36]	@ 0x24
 8022862:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8022864:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8022868:	910d      	str	r1, [sp, #52]	@ 0x34
 802286a:	930f      	str	r3, [sp, #60]	@ 0x3c
 802286c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8022870:	9015      	str	r0, [sp, #84]	@ 0x54
 8022872:	6850      	ldr	r0, [r2, #4]
 8022874:	6812      	ldr	r2, [r2, #0]
 8022876:	fb00 1303 	mla	r3, r0, r3, r1
 802287a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802287e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8022880:	689b      	ldr	r3, [r3, #8]
 8022882:	3301      	adds	r3, #1
 8022884:	f023 0301 	bic.w	r3, r3, #1
 8022888:	930a      	str	r3, [sp, #40]	@ 0x28
 802288a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802288c:	681f      	ldr	r7, [r3, #0]
 802288e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8022890:	2b00      	cmp	r3, #0
 8022892:	dc03      	bgt.n	802289c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022894:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8022896:	2b00      	cmp	r3, #0
 8022898:	f340 8287 	ble.w	8022daa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802289c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802289e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80228a2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80228a6:	1e48      	subs	r0, r1, #1
 80228a8:	f102 3cff 	add.w	ip, r2, #4294967295
 80228ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80228ae:	2b00      	cmp	r3, #0
 80228b0:	f340 80c4 	ble.w	8022a3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80228b4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80228b8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80228bc:	d406      	bmi.n	80228cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80228be:	4586      	cmp	lr, r0
 80228c0:	da04      	bge.n	80228cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80228c2:	2b00      	cmp	r3, #0
 80228c4:	db02      	blt.n	80228cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80228c6:	4563      	cmp	r3, ip
 80228c8:	f2c0 80b9 	blt.w	8022a3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80228cc:	f11e 0e01 	adds.w	lr, lr, #1
 80228d0:	f100 80aa 	bmi.w	8022a28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80228d4:	4571      	cmp	r1, lr
 80228d6:	f2c0 80a7 	blt.w	8022a28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80228da:	3301      	adds	r3, #1
 80228dc:	f100 80a4 	bmi.w	8022a28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80228e0:	429a      	cmp	r2, r3
 80228e2:	f2c0 80a1 	blt.w	8022a28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80228e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80228e8:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 80228ec:	930e      	str	r3, [sp, #56]	@ 0x38
 80228ee:	46c8      	mov	r8, r9
 80228f0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80228f2:	2b00      	cmp	r3, #0
 80228f4:	f340 80c3 	ble.w	8022a7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80228f8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80228fa:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80228fe:	1423      	asrs	r3, r4, #16
 8022900:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022904:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022908:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802290c:	f100 814d 	bmi.w	8022baa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8022910:	f10c 3bff 	add.w	fp, ip, #4294967295
 8022914:	455b      	cmp	r3, fp
 8022916:	f280 8148 	bge.w	8022baa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802291a:	2800      	cmp	r0, #0
 802291c:	f2c0 8145 	blt.w	8022baa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8022920:	f10e 3bff 	add.w	fp, lr, #4294967295
 8022924:	4558      	cmp	r0, fp
 8022926:	f280 8140 	bge.w	8022baa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802292a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802292c:	fb00 3305 	mla	r3, r0, r5, r3
 8022930:	0858      	lsrs	r0, r3, #1
 8022932:	07dd      	lsls	r5, r3, #31
 8022934:	f817 c000 	ldrb.w	ip, [r7, r0]
 8022938:	bf54      	ite	pl
 802293a:	f00c 0c0f 	andpl.w	ip, ip, #15
 802293e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8022942:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8022946:	fa5f fc8c 	uxtb.w	ip, ip
 802294a:	2a00      	cmp	r2, #0
 802294c:	f000 80db 	beq.w	8022b06 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8022950:	1c58      	adds	r0, r3, #1
 8022952:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8022956:	07c0      	lsls	r0, r0, #31
 8022958:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802295c:	bf54      	ite	pl
 802295e:	f00e 0e0f 	andpl.w	lr, lr, #15
 8022962:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8022966:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802296a:	fa5f f08e 	uxtb.w	r0, lr
 802296e:	9010      	str	r0, [sp, #64]	@ 0x40
 8022970:	b1c9      	cbz	r1, 80229a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8022972:	4453      	add	r3, sl
 8022974:	0858      	lsrs	r0, r3, #1
 8022976:	07dd      	lsls	r5, r3, #31
 8022978:	5c38      	ldrb	r0, [r7, r0]
 802297a:	bf54      	ite	pl
 802297c:	f000 000f 	andpl.w	r0, r0, #15
 8022980:	1100      	asrmi	r0, r0, #4
 8022982:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8022986:	3301      	adds	r3, #1
 8022988:	b2c0      	uxtb	r0, r0
 802298a:	900b      	str	r0, [sp, #44]	@ 0x2c
 802298c:	0858      	lsrs	r0, r3, #1
 802298e:	07dd      	lsls	r5, r3, #31
 8022990:	f817 e000 	ldrb.w	lr, [r7, r0]
 8022994:	bf54      	ite	pl
 8022996:	f00e 030f 	andpl.w	r3, lr, #15
 802299a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802299e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80229a2:	b2db      	uxtb	r3, r3
 80229a4:	9311      	str	r3, [sp, #68]	@ 0x44
 80229a6:	b292      	uxth	r2, r2
 80229a8:	b289      	uxth	r1, r1
 80229aa:	fb02 f301 	mul.w	r3, r2, r1
 80229ae:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80229b2:	0112      	lsls	r2, r2, #4
 80229b4:	b289      	uxth	r1, r1
 80229b6:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 80229ba:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80229bc:	1ad2      	subs	r2, r2, r3
 80229be:	1a40      	subs	r0, r0, r1
 80229c0:	b292      	uxth	r2, r2
 80229c2:	436a      	muls	r2, r5
 80229c4:	b280      	uxth	r0, r0
 80229c6:	fb0c 2c00 	mla	ip, ip, r0, r2
 80229ca:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80229cc:	fb01 c102 	mla	r1, r1, r2, ip
 80229d0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80229d2:	fb03 1302 	mla	r3, r3, r2, r1
 80229d6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80229da:	b1db      	cbz	r3, 8022a14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80229dc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80229de:	4353      	muls	r3, r2
 80229e0:	1c5a      	adds	r2, r3, #1
 80229e2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80229e6:	4ac6      	ldr	r2, [pc, #792]	@ (8022d00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80229e8:	121b      	asrs	r3, r3, #8
 80229ea:	6812      	ldr	r2, [r2, #0]
 80229ec:	2bff      	cmp	r3, #255	@ 0xff
 80229ee:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80229f2:	f040 8099 	bne.w	8022b28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 80229f6:	0953      	lsrs	r3, r2, #5
 80229f8:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 80229fc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022a00:	f02c 0c07 	bic.w	ip, ip, #7
 8022a04:	ea43 0c0c 	orr.w	ip, r3, ip
 8022a08:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022a0c:	ea4c 0202 	orr.w	r2, ip, r2
 8022a10:	f8a8 2000 	strh.w	r2, [r8]
 8022a14:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8022a16:	441c      	add	r4, r3
 8022a18:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022a1a:	441e      	add	r6, r3
 8022a1c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8022a1e:	3b01      	subs	r3, #1
 8022a20:	f108 0802 	add.w	r8, r8, #2
 8022a24:	930e      	str	r3, [sp, #56]	@ 0x38
 8022a26:	e763      	b.n	80228f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8022a28:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8022a2a:	441c      	add	r4, r3
 8022a2c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022a2e:	441e      	add	r6, r3
 8022a30:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022a32:	3b01      	subs	r3, #1
 8022a34:	9309      	str	r3, [sp, #36]	@ 0x24
 8022a36:	f109 0902 	add.w	r9, r9, #2
 8022a3a:	e737      	b.n	80228ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022a3c:	d024      	beq.n	8022a88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8022a3e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022a40:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8022a42:	3b01      	subs	r3, #1
 8022a44:	fb00 4003 	mla	r0, r0, r3, r4
 8022a48:	1400      	asrs	r0, r0, #16
 8022a4a:	f53f af4c 	bmi.w	80228e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022a4e:	3901      	subs	r1, #1
 8022a50:	4288      	cmp	r0, r1
 8022a52:	f6bf af48 	bge.w	80228e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022a56:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8022a58:	fb01 6303 	mla	r3, r1, r3, r6
 8022a5c:	141b      	asrs	r3, r3, #16
 8022a5e:	f53f af42 	bmi.w	80228e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022a62:	3a01      	subs	r2, #1
 8022a64:	4293      	cmp	r3, r2
 8022a66:	f6bf af3e 	bge.w	80228e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022a6a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8022a6e:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8022a72:	930e      	str	r3, [sp, #56]	@ 0x38
 8022a74:	46c8      	mov	r8, r9
 8022a76:	f1bb 0f00 	cmp.w	fp, #0
 8022a7a:	f300 80b7 	bgt.w	8022bec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8022a7e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022a80:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022a84:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8022a88:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8022a8a:	2b00      	cmp	r3, #0
 8022a8c:	f340 818d 	ble.w	8022daa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8022a90:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022a94:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022a98:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022a9c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022a9e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022aa2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022aa6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022aaa:	eef0 6a62 	vmov.f32	s13, s5
 8022aae:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022ab2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022ab6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022aba:	ee16 4a90 	vmov	r4, s13
 8022abe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022ac2:	eef0 6a43 	vmov.f32	s13, s6
 8022ac6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022aca:	ee12 2a90 	vmov	r2, s5
 8022ace:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022ad2:	fb92 f3f3 	sdiv	r3, r2, r3
 8022ad6:	ee13 2a10 	vmov	r2, s6
 8022ada:	9323      	str	r3, [sp, #140]	@ 0x8c
 8022adc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022ade:	fb92 f3f3 	sdiv	r3, r2, r3
 8022ae2:	9324      	str	r3, [sp, #144]	@ 0x90
 8022ae4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8022ae6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8022ae8:	3b01      	subs	r3, #1
 8022aea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022aee:	930d      	str	r3, [sp, #52]	@ 0x34
 8022af0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022af2:	bf08      	it	eq
 8022af4:	4613      	moveq	r3, r2
 8022af6:	ee16 6a90 	vmov	r6, s13
 8022afa:	9309      	str	r3, [sp, #36]	@ 0x24
 8022afc:	eeb0 3a67 	vmov.f32	s6, s15
 8022b00:	eef0 2a47 	vmov.f32	s5, s14
 8022b04:	e6c3      	b.n	802288e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022b06:	2900      	cmp	r1, #0
 8022b08:	f43f af4d 	beq.w	80229a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8022b0c:	eb0a 0003 	add.w	r0, sl, r3
 8022b10:	0843      	lsrs	r3, r0, #1
 8022b12:	07c0      	lsls	r0, r0, #31
 8022b14:	5cfb      	ldrb	r3, [r7, r3]
 8022b16:	bf54      	ite	pl
 8022b18:	f003 030f 	andpl.w	r3, r3, #15
 8022b1c:	111b      	asrmi	r3, r3, #4
 8022b1e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8022b22:	b2db      	uxtb	r3, r3
 8022b24:	930b      	str	r3, [sp, #44]	@ 0x2c
 8022b26:	e73e      	b.n	80229a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8022b28:	f8b8 e000 	ldrh.w	lr, [r8]
 8022b2c:	fa1f fb83 	uxth.w	fp, r3
 8022b30:	ea4f 202e 	mov.w	r0, lr, asr #8
 8022b34:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8022b38:	43db      	mvns	r3, r3
 8022b3a:	b2db      	uxtb	r3, r3
 8022b3c:	fb11 f10b 	smulbb	r1, r1, fp
 8022b40:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8022b44:	fb00 1003 	mla	r0, r0, r3, r1
 8022b48:	fa5f fc8c 	uxtb.w	ip, ip
 8022b4c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8022b50:	b2d2      	uxtb	r2, r2
 8022b52:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8022b56:	b280      	uxth	r0, r0
 8022b58:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8022b5c:	fb1c fc0b 	smulbb	ip, ip, fp
 8022b60:	fa5f fe8e 	uxtb.w	lr, lr
 8022b64:	fb12 fb0b 	smulbb	fp, r2, fp
 8022b68:	fb01 cc03 	mla	ip, r1, r3, ip
 8022b6c:	fb0e bb03 	mla	fp, lr, r3, fp
 8022b70:	1c43      	adds	r3, r0, #1
 8022b72:	fa1f fc8c 	uxth.w	ip, ip
 8022b76:	fa1f fb8b 	uxth.w	fp, fp
 8022b7a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8022b7e:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 8022b82:	f10c 0101 	add.w	r1, ip, #1
 8022b86:	f10b 0001 	add.w	r0, fp, #1
 8022b8a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8022b8e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8022b92:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8022b96:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022b9a:	4318      	orrs	r0, r3
 8022b9c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8022ba0:	ea40 000c 	orr.w	r0, r0, ip
 8022ba4:	f8a8 0000 	strh.w	r0, [r8]
 8022ba8:	e734      	b.n	8022a14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8022baa:	f113 0b01 	adds.w	fp, r3, #1
 8022bae:	f53f af31 	bmi.w	8022a14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8022bb2:	45dc      	cmp	ip, fp
 8022bb4:	f6ff af2e 	blt.w	8022a14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8022bb8:	f110 0b01 	adds.w	fp, r0, #1
 8022bbc:	f53f af2a 	bmi.w	8022a14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8022bc0:	45de      	cmp	lr, fp
 8022bc2:	f6ff af27 	blt.w	8022a14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8022bc6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8022bc8:	9302      	str	r3, [sp, #8]
 8022bca:	fa0f f38e 	sxth.w	r3, lr
 8022bce:	9301      	str	r3, [sp, #4]
 8022bd0:	fa0f f38c 	sxth.w	r3, ip
 8022bd4:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8022bd8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8022bdc:	9300      	str	r3, [sp, #0]
 8022bde:	463a      	mov	r2, r7
 8022be0:	4653      	mov	r3, sl
 8022be2:	4641      	mov	r1, r8
 8022be4:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8022be6:	f7ff fd4d 	bl	8022684 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8022bea:	e713      	b.n	8022a14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8022bec:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8022bee:	1422      	asrs	r2, r4, #16
 8022bf0:	1433      	asrs	r3, r6, #16
 8022bf2:	fb05 2303 	mla	r3, r5, r3, r2
 8022bf6:	085a      	lsrs	r2, r3, #1
 8022bf8:	07dd      	lsls	r5, r3, #31
 8022bfa:	5cba      	ldrb	r2, [r7, r2]
 8022bfc:	bf54      	ite	pl
 8022bfe:	f002 020f 	andpl.w	r2, r2, #15
 8022c02:	1112      	asrmi	r2, r2, #4
 8022c04:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8022c08:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8022c0c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022c10:	b2d2      	uxtb	r2, r2
 8022c12:	2900      	cmp	r1, #0
 8022c14:	d076      	beq.n	8022d04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022c16:	f103 0e01 	add.w	lr, r3, #1
 8022c1a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8022c1e:	f01e 0f01 	tst.w	lr, #1
 8022c22:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8022c26:	bf0c      	ite	eq
 8022c28:	f00c 0c0f 	andeq.w	ip, ip, #15
 8022c2c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8022c30:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8022c34:	fa5f f58c 	uxtb.w	r5, ip
 8022c38:	9512      	str	r5, [sp, #72]	@ 0x48
 8022c3a:	b300      	cbz	r0, 8022c7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8022c3c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8022c3e:	442b      	add	r3, r5
 8022c40:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8022c44:	07dd      	lsls	r5, r3, #31
 8022c46:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8022c4a:	bf54      	ite	pl
 8022c4c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8022c50:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8022c54:	3301      	adds	r3, #1
 8022c56:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8022c5a:	fa5f f58c 	uxtb.w	r5, ip
 8022c5e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8022c62:	950c      	str	r5, [sp, #48]	@ 0x30
 8022c64:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8022c68:	07dd      	lsls	r5, r3, #31
 8022c6a:	bf54      	ite	pl
 8022c6c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8022c70:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8022c74:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8022c78:	fa5f f38c 	uxtb.w	r3, ip
 8022c7c:	9313      	str	r3, [sp, #76]	@ 0x4c
 8022c7e:	b289      	uxth	r1, r1
 8022c80:	b280      	uxth	r0, r0
 8022c82:	fb01 f300 	mul.w	r3, r1, r0
 8022c86:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8022c8a:	0109      	lsls	r1, r1, #4
 8022c8c:	b280      	uxth	r0, r0
 8022c8e:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 8022c92:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8022c94:	1ac9      	subs	r1, r1, r3
 8022c96:	ebac 0c00 	sub.w	ip, ip, r0
 8022c9a:	b289      	uxth	r1, r1
 8022c9c:	4369      	muls	r1, r5
 8022c9e:	fa1f fc8c 	uxth.w	ip, ip
 8022ca2:	fb02 120c 	mla	r2, r2, ip, r1
 8022ca6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8022ca8:	fb00 2001 	mla	r0, r0, r1, r2
 8022cac:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8022cae:	fb03 0302 	mla	r3, r3, r2, r0
 8022cb2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022cb6:	b1d3      	cbz	r3, 8022cee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8022cb8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8022cba:	4353      	muls	r3, r2
 8022cbc:	1c5a      	adds	r2, r3, #1
 8022cbe:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8022cc2:	4a0f      	ldr	r2, [pc, #60]	@ (8022d00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8022cc4:	121b      	asrs	r3, r3, #8
 8022cc6:	6812      	ldr	r2, [r2, #0]
 8022cc8:	2bff      	cmp	r3, #255	@ 0xff
 8022cca:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8022cce:	d12d      	bne.n	8022d2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8022cd0:	0953      	lsrs	r3, r2, #5
 8022cd2:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8022cd6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022cda:	f02c 0c07 	bic.w	ip, ip, #7
 8022cde:	ea43 0c0c 	orr.w	ip, r3, ip
 8022ce2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022ce6:	ea4c 0202 	orr.w	r2, ip, r2
 8022cea:	f8a8 2000 	strh.w	r2, [r8]
 8022cee:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8022cf0:	441c      	add	r4, r3
 8022cf2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022cf4:	f108 0802 	add.w	r8, r8, #2
 8022cf8:	441e      	add	r6, r3
 8022cfa:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022cfe:	e6ba      	b.n	8022a76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8022d00:	200152fc 	.word	0x200152fc
 8022d04:	2800      	cmp	r0, #0
 8022d06:	d0ba      	beq.n	8022c7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8022d08:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8022d0a:	442b      	add	r3, r5
 8022d0c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8022d10:	07db      	lsls	r3, r3, #31
 8022d12:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8022d16:	bf54      	ite	pl
 8022d18:	f00c 0c0f 	andpl.w	ip, ip, #15
 8022d1c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8022d20:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8022d24:	fa5f f38c 	uxtb.w	r3, ip
 8022d28:	930c      	str	r3, [sp, #48]	@ 0x30
 8022d2a:	e7a8      	b.n	8022c7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8022d2c:	f8b8 e000 	ldrh.w	lr, [r8]
 8022d30:	fa1f fa83 	uxth.w	sl, r3
 8022d34:	ea4f 202e 	mov.w	r0, lr, asr #8
 8022d38:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8022d3c:	43db      	mvns	r3, r3
 8022d3e:	b2db      	uxtb	r3, r3
 8022d40:	fb11 f10a 	smulbb	r1, r1, sl
 8022d44:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8022d48:	fb00 1003 	mla	r0, r0, r3, r1
 8022d4c:	b2d2      	uxtb	r2, r2
 8022d4e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8022d52:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8022d56:	fa5f fe8e 	uxtb.w	lr, lr
 8022d5a:	fb12 f20a 	smulbb	r2, r2, sl
 8022d5e:	fb0e 2203 	mla	r2, lr, r3, r2
 8022d62:	fa5f fc8c 	uxtb.w	ip, ip
 8022d66:	b280      	uxth	r0, r0
 8022d68:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8022d6c:	b292      	uxth	r2, r2
 8022d6e:	fb1c fc0a 	smulbb	ip, ip, sl
 8022d72:	fb01 cc03 	mla	ip, r1, r3, ip
 8022d76:	1c43      	adds	r3, r0, #1
 8022d78:	1c51      	adds	r1, r2, #1
 8022d7a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8022d7e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8022d82:	fa1f fc8c 	uxth.w	ip, ip
 8022d86:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8022d8a:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8022d8e:	4308      	orrs	r0, r1
 8022d90:	f10c 0101 	add.w	r1, ip, #1
 8022d94:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8022d98:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022d9c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8022da0:	ea40 000c 	orr.w	r0, r0, ip
 8022da4:	f8a8 0000 	strh.w	r0, [r8]
 8022da8:	e7a1      	b.n	8022cee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8022daa:	b017      	add	sp, #92	@ 0x5c
 8022dac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022db0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8022db0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022db4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8022db8:	2d00      	cmp	r5, #0
 8022dba:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8022dbe:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8022dc2:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8022dc6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 8022dca:	fb05 0e03 	mla	lr, r5, r3, r0
 8022dce:	f2c0 80b0 	blt.w	8022f32 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8022dd2:	45a9      	cmp	r9, r5
 8022dd4:	f340 80ad 	ble.w	8022f32 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8022dd8:	2800      	cmp	r0, #0
 8022dda:	f2c0 80a8 	blt.w	8022f2e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8022dde:	4580      	cmp	r8, r0
 8022de0:	f340 80a5 	ble.w	8022f2e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8022de4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8022de8:	f01e 0f01 	tst.w	lr, #1
 8022dec:	5d16      	ldrb	r6, [r2, r4]
 8022dee:	bf0c      	ite	eq
 8022df0:	f006 060f 	andeq.w	r6, r6, #15
 8022df4:	1136      	asrne	r6, r6, #4
 8022df6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8022dfa:	b2f6      	uxtb	r6, r6
 8022dfc:	1c44      	adds	r4, r0, #1
 8022dfe:	f100 809b 	bmi.w	8022f38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8022e02:	45a0      	cmp	r8, r4
 8022e04:	f340 8098 	ble.w	8022f38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8022e08:	2f00      	cmp	r7, #0
 8022e0a:	f000 8097 	beq.w	8022f3c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8022e0e:	f10e 0a01 	add.w	sl, lr, #1
 8022e12:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8022e16:	f01a 0f01 	tst.w	sl, #1
 8022e1a:	5d14      	ldrb	r4, [r2, r4]
 8022e1c:	bf0c      	ite	eq
 8022e1e:	f004 040f 	andeq.w	r4, r4, #15
 8022e22:	1124      	asrne	r4, r4, #4
 8022e24:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8022e28:	b2e4      	uxtb	r4, r4
 8022e2a:	3501      	adds	r5, #1
 8022e2c:	f100 808a 	bmi.w	8022f44 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8022e30:	45a9      	cmp	r9, r5
 8022e32:	f340 8087 	ble.w	8022f44 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8022e36:	f1bc 0f00 	cmp.w	ip, #0
 8022e3a:	f000 8086 	beq.w	8022f4a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8022e3e:	2800      	cmp	r0, #0
 8022e40:	db7e      	blt.n	8022f40 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8022e42:	4580      	cmp	r8, r0
 8022e44:	dd7c      	ble.n	8022f40 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8022e46:	eb03 090e 	add.w	r9, r3, lr
 8022e4a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8022e4e:	f019 0f01 	tst.w	r9, #1
 8022e52:	5d55      	ldrb	r5, [r2, r5]
 8022e54:	bf0c      	ite	eq
 8022e56:	f005 050f 	andeq.w	r5, r5, #15
 8022e5a:	112d      	asrne	r5, r5, #4
 8022e5c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8022e60:	b2ed      	uxtb	r5, r5
 8022e62:	3001      	adds	r0, #1
 8022e64:	d474      	bmi.n	8022f50 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8022e66:	4580      	cmp	r8, r0
 8022e68:	dd72      	ble.n	8022f50 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8022e6a:	2f00      	cmp	r7, #0
 8022e6c:	d072      	beq.n	8022f54 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8022e6e:	3301      	adds	r3, #1
 8022e70:	449e      	add	lr, r3
 8022e72:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8022e76:	f01e 0f01 	tst.w	lr, #1
 8022e7a:	5cd0      	ldrb	r0, [r2, r3]
 8022e7c:	bf0c      	ite	eq
 8022e7e:	f000 000f 	andeq.w	r0, r0, #15
 8022e82:	1100      	asrne	r0, r0, #4
 8022e84:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8022e88:	b2c3      	uxtb	r3, r0
 8022e8a:	b2ba      	uxth	r2, r7
 8022e8c:	fa1f fc8c 	uxth.w	ip, ip
 8022e90:	fb02 f00c 	mul.w	r0, r2, ip
 8022e94:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8022e98:	0112      	lsls	r2, r2, #4
 8022e9a:	fa1f fc8c 	uxth.w	ip, ip
 8022e9e:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8022ea2:	1a12      	subs	r2, r2, r0
 8022ea4:	eba7 070c 	sub.w	r7, r7, ip
 8022ea8:	b292      	uxth	r2, r2
 8022eaa:	b2bf      	uxth	r7, r7
 8022eac:	4362      	muls	r2, r4
 8022eae:	fb06 2207 	mla	r2, r6, r7, r2
 8022eb2:	fb0c 2505 	mla	r5, ip, r5, r2
 8022eb6:	fb00 5303 	mla	r3, r0, r3, r5
 8022eba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022ebe:	b3a3      	cbz	r3, 8022f2a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8022ec0:	4a25      	ldr	r2, [pc, #148]	@ (8022f58 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8022ec2:	880e      	ldrh	r6, [r1, #0]
 8022ec4:	6815      	ldr	r5, [r2, #0]
 8022ec6:	1234      	asrs	r4, r6, #8
 8022ec8:	b29a      	uxth	r2, r3
 8022eca:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8022ece:	43db      	mvns	r3, r3
 8022ed0:	b2db      	uxtb	r3, r3
 8022ed2:	fb10 f002 	smulbb	r0, r0, r2
 8022ed6:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8022eda:	fb04 0403 	mla	r4, r4, r3, r0
 8022ede:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8022ee2:	10f0      	asrs	r0, r6, #3
 8022ee4:	b2ed      	uxtb	r5, r5
 8022ee6:	00f6      	lsls	r6, r6, #3
 8022ee8:	fb17 f702 	smulbb	r7, r7, r2
 8022eec:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8022ef0:	fb15 f202 	smulbb	r2, r5, r2
 8022ef4:	b2f6      	uxtb	r6, r6
 8022ef6:	b2a4      	uxth	r4, r4
 8022ef8:	fb00 7003 	mla	r0, r0, r3, r7
 8022efc:	fb06 2303 	mla	r3, r6, r3, r2
 8022f00:	b29a      	uxth	r2, r3
 8022f02:	1c63      	adds	r3, r4, #1
 8022f04:	b280      	uxth	r0, r0
 8022f06:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8022f0a:	1c53      	adds	r3, r2, #1
 8022f0c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022f10:	1c42      	adds	r2, r0, #1
 8022f12:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022f16:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8022f1a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022f1e:	0940      	lsrs	r0, r0, #5
 8022f20:	4323      	orrs	r3, r4
 8022f22:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022f26:	4303      	orrs	r3, r0
 8022f28:	800b      	strh	r3, [r1, #0]
 8022f2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022f2e:	2600      	movs	r6, #0
 8022f30:	e764      	b.n	8022dfc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8022f32:	2400      	movs	r4, #0
 8022f34:	4626      	mov	r6, r4
 8022f36:	e778      	b.n	8022e2a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8022f38:	2400      	movs	r4, #0
 8022f3a:	e776      	b.n	8022e2a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8022f3c:	463c      	mov	r4, r7
 8022f3e:	e774      	b.n	8022e2a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8022f40:	2500      	movs	r5, #0
 8022f42:	e78e      	b.n	8022e62 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8022f44:	2300      	movs	r3, #0
 8022f46:	461d      	mov	r5, r3
 8022f48:	e79f      	b.n	8022e8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8022f4a:	4663      	mov	r3, ip
 8022f4c:	4665      	mov	r5, ip
 8022f4e:	e79c      	b.n	8022e8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8022f50:	2300      	movs	r3, #0
 8022f52:	e79a      	b.n	8022e8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8022f54:	463b      	mov	r3, r7
 8022f56:	e798      	b.n	8022e8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8022f58:	200152fc 	.word	0x200152fc

08022f5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022f5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f60:	b093      	sub	sp, #76	@ 0x4c
 8022f62:	461d      	mov	r5, r3
 8022f64:	920c      	str	r2, [sp, #48]	@ 0x30
 8022f66:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8022f68:	9107      	str	r1, [sp, #28]
 8022f6a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8022f6e:	9011      	str	r0, [sp, #68]	@ 0x44
 8022f70:	6850      	ldr	r0, [r2, #4]
 8022f72:	6812      	ldr	r2, [r2, #0]
 8022f74:	fb00 1303 	mla	r3, r0, r3, r1
 8022f78:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8022f7c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022f7e:	689b      	ldr	r3, [r3, #8]
 8022f80:	3301      	adds	r3, #1
 8022f82:	f023 0301 	bic.w	r3, r3, #1
 8022f86:	9306      	str	r3, [sp, #24]
 8022f88:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022f8a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8022f8e:	681f      	ldr	r7, [r3, #0]
 8022f90:	9b07      	ldr	r3, [sp, #28]
 8022f92:	2b00      	cmp	r3, #0
 8022f94:	dc03      	bgt.n	8022f9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8022f96:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8022f98:	2b00      	cmp	r3, #0
 8022f9a:	f340 8267 	ble.w	802346c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8022f9e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022fa0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022fa4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022fa8:	1e48      	subs	r0, r1, #1
 8022faa:	f102 3cff 	add.w	ip, r2, #4294967295
 8022fae:	2d00      	cmp	r5, #0
 8022fb0:	f340 80b8 	ble.w	8023124 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8022fb4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022fb8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022fbc:	d406      	bmi.n	8022fcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8022fbe:	4586      	cmp	lr, r0
 8022fc0:	da04      	bge.n	8022fcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8022fc2:	2b00      	cmp	r3, #0
 8022fc4:	db02      	blt.n	8022fcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8022fc6:	4563      	cmp	r3, ip
 8022fc8:	f2c0 80ad 	blt.w	8023126 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8022fcc:	f11e 0e01 	adds.w	lr, lr, #1
 8022fd0:	f100 80a0 	bmi.w	8023114 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8022fd4:	4571      	cmp	r1, lr
 8022fd6:	f2c0 809d 	blt.w	8023114 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8022fda:	3301      	adds	r3, #1
 8022fdc:	f100 809a 	bmi.w	8023114 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8022fe0:	429a      	cmp	r2, r3
 8022fe2:	f2c0 8097 	blt.w	8023114 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8022fe6:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8022fea:	9509      	str	r5, [sp, #36]	@ 0x24
 8022fec:	46c8      	mov	r8, r9
 8022fee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022ff0:	2b00      	cmp	r3, #0
 8022ff2:	f340 80b6 	ble.w	8023162 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8022ff6:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8022ffa:	9308      	str	r3, [sp, #32]
 8022ffc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022ffe:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8023002:	1423      	asrs	r3, r4, #16
 8023004:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023008:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802300c:	f100 813e 	bmi.w	802328c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8023010:	f10c 3bff 	add.w	fp, ip, #4294967295
 8023014:	455b      	cmp	r3, fp
 8023016:	f280 8139 	bge.w	802328c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802301a:	2800      	cmp	r0, #0
 802301c:	f2c0 8136 	blt.w	802328c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8023020:	f10e 3bff 	add.w	fp, lr, #4294967295
 8023024:	4558      	cmp	r0, fp
 8023026:	f280 8131 	bge.w	802328c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802302a:	9a06      	ldr	r2, [sp, #24]
 802302c:	fb00 3302 	mla	r3, r0, r2, r3
 8023030:	0858      	lsrs	r0, r3, #1
 8023032:	07da      	lsls	r2, r3, #31
 8023034:	f817 c000 	ldrb.w	ip, [r7, r0]
 8023038:	9a08      	ldr	r2, [sp, #32]
 802303a:	bf54      	ite	pl
 802303c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8023040:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8023044:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8023048:	fa5f fc8c 	uxtb.w	ip, ip
 802304c:	2a00      	cmp	r2, #0
 802304e:	f000 80cb 	beq.w	80231e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8023052:	1c58      	adds	r0, r3, #1
 8023054:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8023058:	07c0      	lsls	r0, r0, #31
 802305a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802305e:	bf54      	ite	pl
 8023060:	f00e 0e0f 	andpl.w	lr, lr, #15
 8023064:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8023068:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802306c:	fa5f fe8e 	uxtb.w	lr, lr
 8023070:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 8023074:	b1b9      	cbz	r1, 80230a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8023076:	4453      	add	r3, sl
 8023078:	0858      	lsrs	r0, r3, #1
 802307a:	07da      	lsls	r2, r3, #31
 802307c:	5c38      	ldrb	r0, [r7, r0]
 802307e:	bf54      	ite	pl
 8023080:	f000 000f 	andpl.w	r0, r0, #15
 8023084:	1100      	asrmi	r0, r0, #4
 8023086:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802308a:	b2c0      	uxtb	r0, r0
 802308c:	900a      	str	r0, [sp, #40]	@ 0x28
 802308e:	1c58      	adds	r0, r3, #1
 8023090:	0843      	lsrs	r3, r0, #1
 8023092:	07c2      	lsls	r2, r0, #31
 8023094:	5cfb      	ldrb	r3, [r7, r3]
 8023096:	bf54      	ite	pl
 8023098:	f003 030f 	andpl.w	r3, r3, #15
 802309c:	111b      	asrmi	r3, r3, #4
 802309e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80230a2:	b2db      	uxtb	r3, r3
 80230a4:	930e      	str	r3, [sp, #56]	@ 0x38
 80230a6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80230aa:	b289      	uxth	r1, r1
 80230ac:	fb02 f301 	mul.w	r3, r2, r1
 80230b0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80230b4:	0112      	lsls	r2, r2, #4
 80230b6:	b289      	uxth	r1, r1
 80230b8:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 80230bc:	1a40      	subs	r0, r0, r1
 80230be:	fa1f fe80 	uxth.w	lr, r0
 80230c2:	1ad2      	subs	r2, r2, r3
 80230c4:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80230c6:	b292      	uxth	r2, r2
 80230c8:	4342      	muls	r2, r0
 80230ca:	fb0c 2c0e 	mla	ip, ip, lr, r2
 80230ce:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80230d0:	fb01 c102 	mla	r1, r1, r2, ip
 80230d4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80230d6:	fb03 1302 	mla	r3, r3, r2, r1
 80230da:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80230de:	2bff      	cmp	r3, #255	@ 0xff
 80230e0:	f040 8093 	bne.w	802320a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80230e4:	4bbe      	ldr	r3, [pc, #760]	@ (80233e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80230e6:	681a      	ldr	r2, [r3, #0]
 80230e8:	4bbe      	ldr	r3, [pc, #760]	@ (80233e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80230ea:	0951      	lsrs	r1, r2, #5
 80230ec:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80230f0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80230f4:	430b      	orrs	r3, r1
 80230f6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80230fa:	4313      	orrs	r3, r2
 80230fc:	f8a8 3000 	strh.w	r3, [r8]
 8023100:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8023102:	441c      	add	r4, r3
 8023104:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8023106:	441e      	add	r6, r3
 8023108:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802310a:	3b01      	subs	r3, #1
 802310c:	f108 0802 	add.w	r8, r8, #2
 8023110:	9309      	str	r3, [sp, #36]	@ 0x24
 8023112:	e76c      	b.n	8022fee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023114:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8023116:	441c      	add	r4, r3
 8023118:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802311a:	3d01      	subs	r5, #1
 802311c:	441e      	add	r6, r3
 802311e:	f109 0902 	add.w	r9, r9, #2
 8023122:	e744      	b.n	8022fae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8023124:	d021      	beq.n	802316a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8023126:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8023128:	1e6b      	subs	r3, r5, #1
 802312a:	fb00 4003 	mla	r0, r0, r3, r4
 802312e:	1400      	asrs	r0, r0, #16
 8023130:	f53f af59 	bmi.w	8022fe6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8023134:	3901      	subs	r1, #1
 8023136:	4288      	cmp	r0, r1
 8023138:	f6bf af55 	bge.w	8022fe6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802313c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 802313e:	fb01 6303 	mla	r3, r1, r3, r6
 8023142:	141b      	asrs	r3, r3, #16
 8023144:	f53f af4f 	bmi.w	8022fe6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8023148:	3a01      	subs	r2, #1
 802314a:	4293      	cmp	r3, r2
 802314c:	f6bf af4b 	bge.w	8022fe6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8023150:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8023154:	9308      	str	r3, [sp, #32]
 8023156:	46a8      	mov	r8, r5
 8023158:	46ce      	mov	lr, r9
 802315a:	f1b8 0f00 	cmp.w	r8, #0
 802315e:	f300 80b5 	bgt.w	80232cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023162:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023166:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802316a:	9b07      	ldr	r3, [sp, #28]
 802316c:	2b00      	cmp	r3, #0
 802316e:	f340 817d 	ble.w	802346c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8023172:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023176:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802317a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802317e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8023180:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023184:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023188:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802318c:	eef0 6a62 	vmov.f32	s13, s5
 8023190:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023194:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023198:	ee77 2a62 	vsub.f32	s5, s14, s5
 802319c:	ee16 4a90 	vmov	r4, s13
 80231a0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80231a4:	eef0 6a43 	vmov.f32	s13, s6
 80231a8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80231ac:	ee12 2a90 	vmov	r2, s5
 80231b0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80231b4:	fb92 f3f3 	sdiv	r3, r2, r3
 80231b8:	ee13 2a10 	vmov	r2, s6
 80231bc:	931f      	str	r3, [sp, #124]	@ 0x7c
 80231be:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80231c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80231c4:	9320      	str	r3, [sp, #128]	@ 0x80
 80231c6:	9b07      	ldr	r3, [sp, #28]
 80231c8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80231ca:	3b01      	subs	r3, #1
 80231cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80231d0:	9307      	str	r3, [sp, #28]
 80231d2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80231d4:	ee16 6a90 	vmov	r6, s13
 80231d8:	bf14      	ite	ne
 80231da:	461d      	movne	r5, r3
 80231dc:	4615      	moveq	r5, r2
 80231de:	eeb0 3a67 	vmov.f32	s6, s15
 80231e2:	eef0 2a47 	vmov.f32	s5, s14
 80231e6:	e6d3      	b.n	8022f90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80231e8:	2900      	cmp	r1, #0
 80231ea:	f43f af5c 	beq.w	80230a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80231ee:	eb0a 0003 	add.w	r0, sl, r3
 80231f2:	0843      	lsrs	r3, r0, #1
 80231f4:	07c0      	lsls	r0, r0, #31
 80231f6:	5cfb      	ldrb	r3, [r7, r3]
 80231f8:	bf54      	ite	pl
 80231fa:	f003 030f 	andpl.w	r3, r3, #15
 80231fe:	111b      	asrmi	r3, r3, #4
 8023200:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8023204:	b2db      	uxtb	r3, r3
 8023206:	930a      	str	r3, [sp, #40]	@ 0x28
 8023208:	e74d      	b.n	80230a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802320a:	2b00      	cmp	r3, #0
 802320c:	f43f af78 	beq.w	8023100 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023210:	4a73      	ldr	r2, [pc, #460]	@ (80233e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8023212:	f8b8 c000 	ldrh.w	ip, [r8]
 8023216:	6810      	ldr	r0, [r2, #0]
 8023218:	fa1f fe83 	uxth.w	lr, r3
 802321c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8023220:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8023224:	43db      	mvns	r3, r3
 8023226:	b2db      	uxtb	r3, r3
 8023228:	fb12 f20e 	smulbb	r2, r2, lr
 802322c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8023230:	fb01 2103 	mla	r1, r1, r3, r2
 8023234:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8023238:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802323c:	b2c0      	uxtb	r0, r0
 802323e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8023242:	fb1b fb0e 	smulbb	fp, fp, lr
 8023246:	b289      	uxth	r1, r1
 8023248:	fb10 fe0e 	smulbb	lr, r0, lr
 802324c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8023250:	fa5f fc8c 	uxtb.w	ip, ip
 8023254:	fb02 b203 	mla	r2, r2, r3, fp
 8023258:	1c48      	adds	r0, r1, #1
 802325a:	fb0c e303 	mla	r3, ip, r3, lr
 802325e:	b292      	uxth	r2, r2
 8023260:	b29b      	uxth	r3, r3
 8023262:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8023266:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 802326a:	f102 0b01 	add.w	fp, r2, #1
 802326e:	1c59      	adds	r1, r3, #1
 8023270:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8023274:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8023278:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802327c:	0952      	lsrs	r2, r2, #5
 802327e:	4301      	orrs	r1, r0
 8023280:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023284:	4311      	orrs	r1, r2
 8023286:	f8a8 1000 	strh.w	r1, [r8]
 802328a:	e739      	b.n	8023100 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802328c:	f113 0b01 	adds.w	fp, r3, #1
 8023290:	f53f af36 	bmi.w	8023100 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023294:	45dc      	cmp	ip, fp
 8023296:	f6ff af33 	blt.w	8023100 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802329a:	f110 0b01 	adds.w	fp, r0, #1
 802329e:	f53f af2f 	bmi.w	8023100 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80232a2:	45de      	cmp	lr, fp
 80232a4:	f6ff af2c 	blt.w	8023100 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80232a8:	9a08      	ldr	r2, [sp, #32]
 80232aa:	9302      	str	r3, [sp, #8]
 80232ac:	fa0f f38e 	sxth.w	r3, lr
 80232b0:	9301      	str	r3, [sp, #4]
 80232b2:	fa0f f38c 	sxth.w	r3, ip
 80232b6:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80232ba:	9105      	str	r1, [sp, #20]
 80232bc:	9300      	str	r3, [sp, #0]
 80232be:	463a      	mov	r2, r7
 80232c0:	4653      	mov	r3, sl
 80232c2:	4641      	mov	r1, r8
 80232c4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80232c6:	f7ff fd73 	bl	8022db0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 80232ca:	e719      	b.n	8023100 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80232cc:	9906      	ldr	r1, [sp, #24]
 80232ce:	1422      	asrs	r2, r4, #16
 80232d0:	1433      	asrs	r3, r6, #16
 80232d2:	fb01 2303 	mla	r3, r1, r3, r2
 80232d6:	085a      	lsrs	r2, r3, #1
 80232d8:	07d9      	lsls	r1, r3, #31
 80232da:	5cba      	ldrb	r2, [r7, r2]
 80232dc:	bf54      	ite	pl
 80232de:	f002 020f 	andpl.w	r2, r2, #15
 80232e2:	1112      	asrmi	r2, r2, #4
 80232e4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80232e8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80232ec:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80232f0:	b2d2      	uxtb	r2, r2
 80232f2:	2800      	cmp	r0, #0
 80232f4:	d062      	beq.n	80233bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80232f6:	f103 0a01 	add.w	sl, r3, #1
 80232fa:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80232fe:	f01a 0f01 	tst.w	sl, #1
 8023302:	5c79      	ldrb	r1, [r7, r1]
 8023304:	bf0c      	ite	eq
 8023306:	f001 010f 	andeq.w	r1, r1, #15
 802330a:	1109      	asrne	r1, r1, #4
 802330c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8023310:	b2c9      	uxtb	r1, r1
 8023312:	910f      	str	r1, [sp, #60]	@ 0x3c
 8023314:	f1bc 0f00 	cmp.w	ip, #0
 8023318:	d019      	beq.n	802334e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802331a:	9908      	ldr	r1, [sp, #32]
 802331c:	440b      	add	r3, r1
 802331e:	0859      	lsrs	r1, r3, #1
 8023320:	f013 0f01 	tst.w	r3, #1
 8023324:	5c79      	ldrb	r1, [r7, r1]
 8023326:	bf0c      	ite	eq
 8023328:	f001 010f 	andeq.w	r1, r1, #15
 802332c:	1109      	asrne	r1, r1, #4
 802332e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8023332:	b2c9      	uxtb	r1, r1
 8023334:	3301      	adds	r3, #1
 8023336:	910b      	str	r1, [sp, #44]	@ 0x2c
 8023338:	0859      	lsrs	r1, r3, #1
 802333a:	07db      	lsls	r3, r3, #31
 802333c:	5c79      	ldrb	r1, [r7, r1]
 802333e:	bf54      	ite	pl
 8023340:	f001 010f 	andpl.w	r1, r1, #15
 8023344:	1109      	asrmi	r1, r1, #4
 8023346:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802334a:	b2c9      	uxtb	r1, r1
 802334c:	9110      	str	r1, [sp, #64]	@ 0x40
 802334e:	b280      	uxth	r0, r0
 8023350:	fa1f fc8c 	uxth.w	ip, ip
 8023354:	fb00 f30c 	mul.w	r3, r0, ip
 8023358:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 802335c:	0100      	lsls	r0, r0, #4
 802335e:	fa1f fc8c 	uxth.w	ip, ip
 8023362:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 8023366:	eba1 010c 	sub.w	r1, r1, ip
 802336a:	fa1f fa81 	uxth.w	sl, r1
 802336e:	1ac0      	subs	r0, r0, r3
 8023370:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8023372:	b280      	uxth	r0, r0
 8023374:	4348      	muls	r0, r1
 8023376:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8023378:	fb02 020a 	mla	r2, r2, sl, r0
 802337c:	fb0c 2c01 	mla	ip, ip, r1, r2
 8023380:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8023382:	fb03 c302 	mla	r3, r3, r2, ip
 8023386:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802338a:	2bff      	cmp	r3, #255	@ 0xff
 802338c:	d12c      	bne.n	80233e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802338e:	4b14      	ldr	r3, [pc, #80]	@ (80233e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8023390:	681a      	ldr	r2, [r3, #0]
 8023392:	4b14      	ldr	r3, [pc, #80]	@ (80233e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8023394:	0951      	lsrs	r1, r2, #5
 8023396:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802339a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802339e:	430b      	orrs	r3, r1
 80233a0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80233a4:	4313      	orrs	r3, r2
 80233a6:	f8ae 3000 	strh.w	r3, [lr]
 80233aa:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80233ac:	441c      	add	r4, r3
 80233ae:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80233b0:	f10e 0e02 	add.w	lr, lr, #2
 80233b4:	441e      	add	r6, r3
 80233b6:	f108 38ff 	add.w	r8, r8, #4294967295
 80233ba:	e6ce      	b.n	802315a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80233bc:	f1bc 0f00 	cmp.w	ip, #0
 80233c0:	d0c5      	beq.n	802334e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80233c2:	9908      	ldr	r1, [sp, #32]
 80233c4:	440b      	add	r3, r1
 80233c6:	0859      	lsrs	r1, r3, #1
 80233c8:	07db      	lsls	r3, r3, #31
 80233ca:	5c79      	ldrb	r1, [r7, r1]
 80233cc:	bf54      	ite	pl
 80233ce:	f001 010f 	andpl.w	r1, r1, #15
 80233d2:	1109      	asrmi	r1, r1, #4
 80233d4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80233d8:	b2c9      	uxtb	r1, r1
 80233da:	910b      	str	r1, [sp, #44]	@ 0x2c
 80233dc:	e7b7      	b.n	802334e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80233de:	bf00      	nop
 80233e0:	200152fc 	.word	0x200152fc
 80233e4:	fffff800 	.word	0xfffff800
 80233e8:	2b00      	cmp	r3, #0
 80233ea:	d0de      	beq.n	80233aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80233ec:	4a21      	ldr	r2, [pc, #132]	@ (8023474 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80233ee:	f8be c000 	ldrh.w	ip, [lr]
 80233f2:	6810      	ldr	r0, [r2, #0]
 80233f4:	fa1f fa83 	uxth.w	sl, r3
 80233f8:	ea4f 212c 	mov.w	r1, ip, asr #8
 80233fc:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8023400:	43db      	mvns	r3, r3
 8023402:	b2db      	uxtb	r3, r3
 8023404:	fb12 f20a 	smulbb	r2, r2, sl
 8023408:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802340c:	fb01 2103 	mla	r1, r1, r3, r2
 8023410:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8023414:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8023418:	b2c0      	uxtb	r0, r0
 802341a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802341e:	fa5f fc8c 	uxtb.w	ip, ip
 8023422:	fb10 f00a 	smulbb	r0, r0, sl
 8023426:	fb0c 0003 	mla	r0, ip, r3, r0
 802342a:	b289      	uxth	r1, r1
 802342c:	fb1b fb0a 	smulbb	fp, fp, sl
 8023430:	b280      	uxth	r0, r0
 8023432:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8023436:	fb02 b203 	mla	r2, r2, r3, fp
 802343a:	1c4b      	adds	r3, r1, #1
 802343c:	f100 0b01 	add.w	fp, r0, #1
 8023440:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023444:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8023448:	b292      	uxth	r2, r2
 802344a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802344e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8023452:	ea4b 0101 	orr.w	r1, fp, r1
 8023456:	f102 0b01 	add.w	fp, r2, #1
 802345a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802345e:	0952      	lsrs	r2, r2, #5
 8023460:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023464:	4311      	orrs	r1, r2
 8023466:	f8ae 1000 	strh.w	r1, [lr]
 802346a:	e79e      	b.n	80233aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802346c:	b013      	add	sp, #76	@ 0x4c
 802346e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023472:	bf00      	nop
 8023474:	200152fc 	.word	0x200152fc

08023478 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8023478:	b570      	push	{r4, r5, r6, lr}
 802347a:	1208      	asrs	r0, r1, #8
 802347c:	b29e      	uxth	r6, r3
 802347e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8023482:	1213      	asrs	r3, r2, #8
 8023484:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8023488:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 802348c:	fb13 f305 	smulbb	r3, r3, r5
 8023490:	fb10 f006 	smulbb	r0, r0, r6
 8023494:	4418      	add	r0, r3
 8023496:	10cc      	asrs	r4, r1, #3
 8023498:	10d3      	asrs	r3, r2, #3
 802349a:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802349e:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80234a2:	fb13 f305 	smulbb	r3, r3, r5
 80234a6:	fb14 f406 	smulbb	r4, r4, r6
 80234aa:	00c9      	lsls	r1, r1, #3
 80234ac:	00d2      	lsls	r2, r2, #3
 80234ae:	441c      	add	r4, r3
 80234b0:	b2d2      	uxtb	r2, r2
 80234b2:	b2cb      	uxtb	r3, r1
 80234b4:	fb12 f205 	smulbb	r2, r2, r5
 80234b8:	b280      	uxth	r0, r0
 80234ba:	fb13 f306 	smulbb	r3, r3, r6
 80234be:	4413      	add	r3, r2
 80234c0:	1c42      	adds	r2, r0, #1
 80234c2:	b29b      	uxth	r3, r3
 80234c4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80234c8:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 80234cc:	1c58      	adds	r0, r3, #1
 80234ce:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80234d2:	b2a4      	uxth	r4, r4
 80234d4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80234d8:	4310      	orrs	r0, r2
 80234da:	1c62      	adds	r2, r4, #1
 80234dc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80234e0:	0964      	lsrs	r4, r4, #5
 80234e2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80234e6:	4320      	orrs	r0, r4
 80234e8:	bd70      	pop	{r4, r5, r6, pc}
	...

080234ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80234ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80234f0:	b08f      	sub	sp, #60	@ 0x3c
 80234f2:	461c      	mov	r4, r3
 80234f4:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 80234f8:	9004      	str	r0, [sp, #16]
 80234fa:	460d      	mov	r5, r1
 80234fc:	4616      	mov	r6, r2
 80234fe:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8023500:	2f00      	cmp	r7, #0
 8023502:	f000 80f6 	beq.w	80236f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8023506:	6820      	ldr	r0, [r4, #0]
 8023508:	6861      	ldr	r1, [r4, #4]
 802350a:	aa0a      	add	r2, sp, #40	@ 0x28
 802350c:	c203      	stmia	r2!, {r0, r1}
 802350e:	6818      	ldr	r0, [r3, #0]
 8023510:	6859      	ldr	r1, [r3, #4]
 8023512:	aa0c      	add	r2, sp, #48	@ 0x30
 8023514:	c203      	stmia	r2!, {r0, r1}
 8023516:	a80a      	add	r0, sp, #40	@ 0x28
 8023518:	f7ee fa9e 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802351c:	4621      	mov	r1, r4
 802351e:	a80c      	add	r0, sp, #48	@ 0x30
 8023520:	f7ee fac2 	bl	8011aa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023524:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8023528:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 802352c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8023530:	f002 0301 	and.w	r3, r2, #1
 8023534:	9306      	str	r3, [sp, #24]
 8023536:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802353a:	f003 0101 	and.w	r1, r3, #1
 802353e:	9105      	str	r1, [sp, #20]
 8023540:	9805      	ldr	r0, [sp, #20]
 8023542:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8023546:	4403      	add	r3, r0
 8023548:	fb01 2303 	mla	r3, r1, r3, r2
 802354c:	f04f 0802 	mov.w	r8, #2
 8023550:	fb93 f3f8 	sdiv	r3, r3, r8
 8023554:	441d      	add	r5, r3
 8023556:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 802355a:	441a      	add	r2, r3
 802355c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8023560:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8023564:	4419      	add	r1, r3
 8023566:	4b64      	ldr	r3, [pc, #400]	@ (80236f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8023568:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 802356c:	6818      	ldr	r0, [r3, #0]
 802356e:	6803      	ldr	r3, [r0, #0]
 8023570:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023572:	4798      	blx	r3
 8023574:	4a61      	ldr	r2, [pc, #388]	@ (80236fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8023576:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 802357a:	8813      	ldrh	r3, [r2, #0]
 802357c:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 8023580:	2fff      	cmp	r7, #255	@ 0xff
 8023582:	fb03 a404 	mla	r4, r3, r4, sl
 8023586:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802358a:	f106 0604 	add.w	r6, r6, #4
 802358e:	4611      	mov	r1, r2
 8023590:	fb03 fb0b 	mul.w	fp, r3, fp
 8023594:	d06b      	beq.n	802366e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8023596:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 802359a:	9303      	str	r3, [sp, #12]
 802359c:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80235a0:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80235a4:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 80235a8:	9b07      	ldr	r3, [sp, #28]
 80235aa:	42a3      	cmp	r3, r4
 80235ac:	f240 809c 	bls.w	80236e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80235b0:	9b06      	ldr	r3, [sp, #24]
 80235b2:	2b00      	cmp	r3, #0
 80235b4:	d039      	beq.n	802362a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80235b6:	782b      	ldrb	r3, [r5, #0]
 80235b8:	8822      	ldrh	r2, [r4, #0]
 80235ba:	9804      	ldr	r0, [sp, #16]
 80235bc:	f003 030f 	and.w	r3, r3, #15
 80235c0:	f105 0801 	add.w	r8, r5, #1
 80235c4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80235c8:	9b03      	ldr	r3, [sp, #12]
 80235ca:	9300      	str	r3, [sp, #0]
 80235cc:	463b      	mov	r3, r7
 80235ce:	f7ff ff53 	bl	8023478 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80235d2:	f824 0b02 	strh.w	r0, [r4], #2
 80235d6:	f109 3bff 	add.w	fp, r9, #4294967295
 80235da:	f1bb 0f01 	cmp.w	fp, #1
 80235de:	46a2      	mov	sl, r4
 80235e0:	f104 0404 	add.w	r4, r4, #4
 80235e4:	dd24      	ble.n	8023630 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80235e6:	f898 3000 	ldrb.w	r3, [r8]
 80235ea:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80235ee:	9804      	ldr	r0, [sp, #16]
 80235f0:	091b      	lsrs	r3, r3, #4
 80235f2:	f1ab 0b02 	sub.w	fp, fp, #2
 80235f6:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80235fa:	9b03      	ldr	r3, [sp, #12]
 80235fc:	9300      	str	r3, [sp, #0]
 80235fe:	463b      	mov	r3, r7
 8023600:	f7ff ff3a 	bl	8023478 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8023604:	f824 0c04 	strh.w	r0, [r4, #-4]
 8023608:	f818 3b01 	ldrb.w	r3, [r8], #1
 802360c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8023610:	9804      	ldr	r0, [sp, #16]
 8023612:	f003 030f 	and.w	r3, r3, #15
 8023616:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802361a:	9b03      	ldr	r3, [sp, #12]
 802361c:	9300      	str	r3, [sp, #0]
 802361e:	463b      	mov	r3, r7
 8023620:	f7ff ff2a 	bl	8023478 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8023624:	f824 0c02 	strh.w	r0, [r4, #-2]
 8023628:	e7d7      	b.n	80235da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802362a:	46a8      	mov	r8, r5
 802362c:	46cb      	mov	fp, r9
 802362e:	e7d4      	b.n	80235da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8023630:	d10e      	bne.n	8023650 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8023632:	f898 3000 	ldrb.w	r3, [r8]
 8023636:	f8ba 2000 	ldrh.w	r2, [sl]
 802363a:	9804      	ldr	r0, [sp, #16]
 802363c:	091b      	lsrs	r3, r3, #4
 802363e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8023642:	9b03      	ldr	r3, [sp, #12]
 8023644:	9300      	str	r3, [sp, #0]
 8023646:	463b      	mov	r3, r7
 8023648:	f7ff ff16 	bl	8023478 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802364c:	f82a 0b02 	strh.w	r0, [sl], #2
 8023650:	9b08      	ldr	r3, [sp, #32]
 8023652:	9a05      	ldr	r2, [sp, #20]
 8023654:	881c      	ldrh	r4, [r3, #0]
 8023656:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802365a:	eba4 0409 	sub.w	r4, r4, r9
 802365e:	4413      	add	r3, r2
 8023660:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8023664:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8023666:	fb93 f3f2 	sdiv	r3, r3, r2
 802366a:	441d      	add	r5, r3
 802366c:	e79c      	b.n	80235a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802366e:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8023672:	45a3      	cmp	fp, r4
 8023674:	d938      	bls.n	80236e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8023676:	9b06      	ldr	r3, [sp, #24]
 8023678:	b1f3      	cbz	r3, 80236b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802367a:	782b      	ldrb	r3, [r5, #0]
 802367c:	f003 030f 	and.w	r3, r3, #15
 8023680:	1c6a      	adds	r2, r5, #1
 8023682:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8023686:	8023      	strh	r3, [r4, #0]
 8023688:	f109 30ff 	add.w	r0, r9, #4294967295
 802368c:	3402      	adds	r4, #2
 802368e:	2801      	cmp	r0, #1
 8023690:	4623      	mov	r3, r4
 8023692:	f104 0404 	add.w	r4, r4, #4
 8023696:	dd12      	ble.n	80236be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8023698:	7813      	ldrb	r3, [r2, #0]
 802369a:	091b      	lsrs	r3, r3, #4
 802369c:	3802      	subs	r0, #2
 802369e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80236a2:	f824 3c04 	strh.w	r3, [r4, #-4]
 80236a6:	f812 3b01 	ldrb.w	r3, [r2], #1
 80236aa:	f003 030f 	and.w	r3, r3, #15
 80236ae:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80236b2:	f824 3c02 	strh.w	r3, [r4, #-2]
 80236b6:	e7ea      	b.n	802368e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80236b8:	462a      	mov	r2, r5
 80236ba:	4648      	mov	r0, r9
 80236bc:	e7e7      	b.n	802368e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80236be:	d106      	bne.n	80236ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80236c0:	7812      	ldrb	r2, [r2, #0]
 80236c2:	0912      	lsrs	r2, r2, #4
 80236c4:	3302      	adds	r3, #2
 80236c6:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80236ca:	f823 2c02 	strh.w	r2, [r3, #-2]
 80236ce:	880c      	ldrh	r4, [r1, #0]
 80236d0:	9a05      	ldr	r2, [sp, #20]
 80236d2:	eba4 0409 	sub.w	r4, r4, r9
 80236d6:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80236da:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80236de:	4413      	add	r3, r2
 80236e0:	fb93 f3f8 	sdiv	r3, r3, r8
 80236e4:	441d      	add	r5, r3
 80236e6:	e7c4      	b.n	8023672 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80236e8:	4b03      	ldr	r3, [pc, #12]	@ (80236f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80236ea:	6818      	ldr	r0, [r3, #0]
 80236ec:	6803      	ldr	r3, [r0, #0]
 80236ee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80236f0:	4798      	blx	r3
 80236f2:	b00f      	add	sp, #60	@ 0x3c
 80236f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80236f8:	200152ec 	.word	0x200152ec
 80236fc:	200152e6 	.word	0x200152e6

08023700 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8023700:	b5f0      	push	{r4, r5, r6, r7, lr}
 8023702:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8023706:	2dff      	cmp	r5, #255	@ 0xff
 8023708:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802370c:	d10c      	bne.n	8023728 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802370e:	2bff      	cmp	r3, #255	@ 0xff
 8023710:	d10a      	bne.n	8023728 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8023712:	4b25      	ldr	r3, [pc, #148]	@ (80237a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8023714:	0948      	lsrs	r0, r1, #5
 8023716:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802371a:	403b      	ands	r3, r7
 802371c:	4318      	orrs	r0, r3
 802371e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8023722:	4308      	orrs	r0, r1
 8023724:	b280      	uxth	r0, r0
 8023726:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023728:	fb15 f503 	smulbb	r5, r5, r3
 802372c:	b2ab      	uxth	r3, r5
 802372e:	1c5d      	adds	r5, r3, #1
 8023730:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8023734:	1214      	asrs	r4, r2, #8
 8023736:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802373a:	fa1f fc85 	uxth.w	ip, r5
 802373e:	10d6      	asrs	r6, r2, #3
 8023740:	00d0      	lsls	r0, r2, #3
 8023742:	43ed      	mvns	r5, r5
 8023744:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8023748:	f3c1 4207 	ubfx	r2, r1, #16, #8
 802374c:	b2eb      	uxtb	r3, r5
 802374e:	b2c0      	uxtb	r0, r0
 8023750:	fb12 f20c 	smulbb	r2, r2, ip
 8023754:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8023758:	fb04 2403 	mla	r4, r4, r3, r2
 802375c:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8023760:	b2c8      	uxtb	r0, r1
 8023762:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8023766:	b2fd      	uxtb	r5, r7
 8023768:	fb10 f00c 	smulbb	r0, r0, ip
 802376c:	b2a4      	uxth	r4, r4
 802376e:	fb02 0003 	mla	r0, r2, r3, r0
 8023772:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8023776:	fb15 f50c 	smulbb	r5, r5, ip
 802377a:	fb06 5503 	mla	r5, r6, r3, r5
 802377e:	b283      	uxth	r3, r0
 8023780:	1c60      	adds	r0, r4, #1
 8023782:	b2ad      	uxth	r5, r5
 8023784:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8023788:	1c58      	adds	r0, r3, #1
 802378a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802378e:	1c6b      	adds	r3, r5, #1
 8023790:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023794:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8023798:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802379c:	096d      	lsrs	r5, r5, #5
 802379e:	4320      	orrs	r0, r4
 80237a0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80237a4:	4328      	orrs	r0, r5
 80237a6:	e7be      	b.n	8023726 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80237a8:	00fff800 	.word	0x00fff800

080237ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80237ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80237b0:	461c      	mov	r4, r3
 80237b2:	b08d      	sub	sp, #52	@ 0x34
 80237b4:	460d      	mov	r5, r1
 80237b6:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80237b8:	6861      	ldr	r1, [r4, #4]
 80237ba:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 80237be:	4680      	mov	r8, r0
 80237c0:	6820      	ldr	r0, [r4, #0]
 80237c2:	4616      	mov	r6, r2
 80237c4:	aa08      	add	r2, sp, #32
 80237c6:	c203      	stmia	r2!, {r0, r1}
 80237c8:	6818      	ldr	r0, [r3, #0]
 80237ca:	6859      	ldr	r1, [r3, #4]
 80237cc:	aa0a      	add	r2, sp, #40	@ 0x28
 80237ce:	c203      	stmia	r2!, {r0, r1}
 80237d0:	a808      	add	r0, sp, #32
 80237d2:	f7ee f941 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80237d6:	4621      	mov	r1, r4
 80237d8:	a80a      	add	r0, sp, #40	@ 0x28
 80237da:	f7ee f965 	bl	8011aa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80237de:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 80237e2:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 80237e6:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 80237ea:	f002 0301 	and.w	r3, r2, #1
 80237ee:	9303      	str	r3, [sp, #12]
 80237f0:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80237f4:	f003 0101 	and.w	r1, r3, #1
 80237f8:	9102      	str	r1, [sp, #8]
 80237fa:	9802      	ldr	r0, [sp, #8]
 80237fc:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8023800:	4403      	add	r3, r0
 8023802:	fb01 2303 	mla	r3, r1, r3, r2
 8023806:	f04f 0a02 	mov.w	sl, #2
 802380a:	fb93 f3fa 	sdiv	r3, r3, sl
 802380e:	441d      	add	r5, r3
 8023810:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8023814:	441a      	add	r2, r3
 8023816:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 802381a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 802381e:	4a3f      	ldr	r2, [pc, #252]	@ (802391c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8023820:	9205      	str	r2, [sp, #20]
 8023822:	4419      	add	r1, r3
 8023824:	6810      	ldr	r0, [r2, #0]
 8023826:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 802382a:	6803      	ldr	r3, [r0, #0]
 802382c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802382e:	4798      	blx	r3
 8023830:	4b3b      	ldr	r3, [pc, #236]	@ (8023920 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8023832:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 8023836:	8819      	ldrh	r1, [r3, #0]
 8023838:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 802383c:	fb01 c404 	mla	r4, r1, r4, ip
 8023840:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8023844:	434f      	muls	r7, r1
 8023846:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802384a:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802384e:	3604      	adds	r6, #4
 8023850:	9204      	str	r2, [sp, #16]
 8023852:	9b04      	ldr	r3, [sp, #16]
 8023854:	429c      	cmp	r4, r3
 8023856:	d258      	bcs.n	802390a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8023858:	9b03      	ldr	r3, [sp, #12]
 802385a:	2b00      	cmp	r3, #0
 802385c:	d034      	beq.n	80238c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802385e:	782b      	ldrb	r3, [r5, #0]
 8023860:	f003 030f 	and.w	r3, r3, #15
 8023864:	1c6f      	adds	r7, r5, #1
 8023866:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802386a:	0e0b      	lsrs	r3, r1, #24
 802386c:	d006      	beq.n	802387c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802386e:	8822      	ldrh	r2, [r4, #0]
 8023870:	9300      	str	r3, [sp, #0]
 8023872:	4640      	mov	r0, r8
 8023874:	464b      	mov	r3, r9
 8023876:	f7ff ff43 	bl	8023700 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802387a:	8020      	strh	r0, [r4, #0]
 802387c:	3402      	adds	r4, #2
 802387e:	f10b 3aff 	add.w	sl, fp, #4294967295
 8023882:	f1ba 0f01 	cmp.w	sl, #1
 8023886:	dd22      	ble.n	80238ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8023888:	783b      	ldrb	r3, [r7, #0]
 802388a:	091b      	lsrs	r3, r3, #4
 802388c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8023890:	0e0b      	lsrs	r3, r1, #24
 8023892:	d006      	beq.n	80238a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8023894:	8822      	ldrh	r2, [r4, #0]
 8023896:	9300      	str	r3, [sp, #0]
 8023898:	4640      	mov	r0, r8
 802389a:	464b      	mov	r3, r9
 802389c:	f7ff ff30 	bl	8023700 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80238a0:	8020      	strh	r0, [r4, #0]
 80238a2:	f817 3b01 	ldrb.w	r3, [r7], #1
 80238a6:	f003 030f 	and.w	r3, r3, #15
 80238aa:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80238ae:	0e0b      	lsrs	r3, r1, #24
 80238b0:	d006      	beq.n	80238c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80238b2:	8862      	ldrh	r2, [r4, #2]
 80238b4:	9300      	str	r3, [sp, #0]
 80238b6:	4640      	mov	r0, r8
 80238b8:	464b      	mov	r3, r9
 80238ba:	f7ff ff21 	bl	8023700 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80238be:	8060      	strh	r0, [r4, #2]
 80238c0:	3404      	adds	r4, #4
 80238c2:	f1aa 0a02 	sub.w	sl, sl, #2
 80238c6:	e7dc      	b.n	8023882 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80238c8:	462f      	mov	r7, r5
 80238ca:	46da      	mov	sl, fp
 80238cc:	e7d9      	b.n	8023882 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80238ce:	d10d      	bne.n	80238ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80238d0:	783b      	ldrb	r3, [r7, #0]
 80238d2:	091b      	lsrs	r3, r3, #4
 80238d4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80238d8:	0e0b      	lsrs	r3, r1, #24
 80238da:	d006      	beq.n	80238ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80238dc:	8822      	ldrh	r2, [r4, #0]
 80238de:	9300      	str	r3, [sp, #0]
 80238e0:	4640      	mov	r0, r8
 80238e2:	464b      	mov	r3, r9
 80238e4:	f7ff ff0c 	bl	8023700 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80238e8:	8020      	strh	r0, [r4, #0]
 80238ea:	3402      	adds	r4, #2
 80238ec:	9b06      	ldr	r3, [sp, #24]
 80238ee:	9a02      	ldr	r2, [sp, #8]
 80238f0:	881b      	ldrh	r3, [r3, #0]
 80238f2:	eba3 030b 	sub.w	r3, r3, fp
 80238f6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80238fa:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80238fe:	4413      	add	r3, r2
 8023900:	9a07      	ldr	r2, [sp, #28]
 8023902:	fb93 f3f2 	sdiv	r3, r3, r2
 8023906:	441d      	add	r5, r3
 8023908:	e7a3      	b.n	8023852 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802390a:	9b05      	ldr	r3, [sp, #20]
 802390c:	6818      	ldr	r0, [r3, #0]
 802390e:	6803      	ldr	r3, [r0, #0]
 8023910:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8023912:	4798      	blx	r3
 8023914:	b00d      	add	sp, #52	@ 0x34
 8023916:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802391a:	bf00      	nop
 802391c:	200152ec 	.word	0x200152ec
 8023920:	200152e6 	.word	0x200152e6

08023924 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8023924:	b570      	push	{r4, r5, r6, lr}
 8023926:	1214      	asrs	r4, r2, #8
 8023928:	788d      	ldrb	r5, [r1, #2]
 802392a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802392e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8023932:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8023936:	fb15 f503 	smulbb	r5, r5, r3
 802393a:	fb04 5506 	mla	r5, r4, r6, r5
 802393e:	10d0      	asrs	r0, r2, #3
 8023940:	784c      	ldrb	r4, [r1, #1]
 8023942:	7809      	ldrb	r1, [r1, #0]
 8023944:	00d2      	lsls	r2, r2, #3
 8023946:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802394a:	b2d2      	uxtb	r2, r2
 802394c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8023950:	fb14 f403 	smulbb	r4, r4, r3
 8023954:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8023958:	fb11 f303 	smulbb	r3, r1, r3
 802395c:	fb00 4406 	mla	r4, r0, r6, r4
 8023960:	fb02 3306 	mla	r3, r2, r6, r3
 8023964:	b2ad      	uxth	r5, r5
 8023966:	b29b      	uxth	r3, r3
 8023968:	b2a4      	uxth	r4, r4
 802396a:	1c68      	adds	r0, r5, #1
 802396c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8023970:	1c62      	adds	r2, r4, #1
 8023972:	1c58      	adds	r0, r3, #1
 8023974:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8023978:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802397c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8023980:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8023984:	0964      	lsrs	r4, r4, #5
 8023986:	4328      	orrs	r0, r5
 8023988:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802398c:	4320      	orrs	r0, r4
 802398e:	bd70      	pop	{r4, r5, r6, pc}

08023990 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8023990:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023994:	b08f      	sub	sp, #60	@ 0x3c
 8023996:	461c      	mov	r4, r3
 8023998:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 802399c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802399e:	4682      	mov	sl, r0
 80239a0:	460e      	mov	r6, r1
 80239a2:	4615      	mov	r5, r2
 80239a4:	2f00      	cmp	r7, #0
 80239a6:	f000 8142 	beq.w	8023c2e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 80239aa:	6820      	ldr	r0, [r4, #0]
 80239ac:	6861      	ldr	r1, [r4, #4]
 80239ae:	aa0a      	add	r2, sp, #40	@ 0x28
 80239b0:	c203      	stmia	r2!, {r0, r1}
 80239b2:	6818      	ldr	r0, [r3, #0]
 80239b4:	6859      	ldr	r1, [r3, #4]
 80239b6:	aa0c      	add	r2, sp, #48	@ 0x30
 80239b8:	c203      	stmia	r2!, {r0, r1}
 80239ba:	a80a      	add	r0, sp, #40	@ 0x28
 80239bc:	f7ee f84c 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80239c0:	4621      	mov	r1, r4
 80239c2:	a80c      	add	r0, sp, #48	@ 0x30
 80239c4:	f7ee f870 	bl	8011aa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80239c8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80239cc:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 80239d0:	f002 0301 	and.w	r3, r2, #1
 80239d4:	9306      	str	r3, [sp, #24]
 80239d6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80239da:	f003 0101 	and.w	r1, r3, #1
 80239de:	9105      	str	r1, [sp, #20]
 80239e0:	9805      	ldr	r0, [sp, #20]
 80239e2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80239e6:	4403      	add	r3, r0
 80239e8:	fb01 2303 	mla	r3, r1, r3, r2
 80239ec:	f04f 0802 	mov.w	r8, #2
 80239f0:	fb93 f3f8 	sdiv	r3, r3, r8
 80239f4:	441e      	add	r6, r3
 80239f6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80239fa:	441a      	add	r2, r3
 80239fc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8023a00:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8023a04:	4419      	add	r1, r3
 8023a06:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8023a0a:	9303      	str	r3, [sp, #12]
 8023a0c:	4b89      	ldr	r3, [pc, #548]	@ (8023c34 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8023a0e:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8023a12:	6818      	ldr	r0, [r3, #0]
 8023a14:	6803      	ldr	r3, [r0, #0]
 8023a16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023a18:	4798      	blx	r3
 8023a1a:	4a87      	ldr	r2, [pc, #540]	@ (8023c38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8023a1c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8023a20:	8813      	ldrh	r3, [r2, #0]
 8023a22:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8023a26:	2fff      	cmp	r7, #255	@ 0xff
 8023a28:	fb03 9404 	mla	r4, r3, r4, r9
 8023a2c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8023a30:	f105 0504 	add.w	r5, r5, #4
 8023a34:	4694      	mov	ip, r2
 8023a36:	fb03 f30b 	mul.w	r3, r3, fp
 8023a3a:	d071      	beq.n	8023b20 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8023a3c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8023a40:	43f9      	mvns	r1, r7
 8023a42:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8023a46:	b2c9      	uxtb	r1, r1
 8023a48:	9104      	str	r1, [sp, #16]
 8023a4a:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8023a4e:	9b07      	ldr	r3, [sp, #28]
 8023a50:	42a3      	cmp	r3, r4
 8023a52:	f240 80e7 	bls.w	8023c24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8023a56:	9b06      	ldr	r3, [sp, #24]
 8023a58:	2b00      	cmp	r3, #0
 8023a5a:	d03d      	beq.n	8023ad8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8023a5c:	7831      	ldrb	r1, [r6, #0]
 8023a5e:	9b04      	ldr	r3, [sp, #16]
 8023a60:	8822      	ldrh	r2, [r4, #0]
 8023a62:	9300      	str	r3, [sp, #0]
 8023a64:	f001 010f 	and.w	r1, r1, #15
 8023a68:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023a6c:	463b      	mov	r3, r7
 8023a6e:	4429      	add	r1, r5
 8023a70:	4650      	mov	r0, sl
 8023a72:	f7ff ff57 	bl	8023924 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8023a76:	9b03      	ldr	r3, [sp, #12]
 8023a78:	f824 0b02 	strh.w	r0, [r4], #2
 8023a7c:	f106 0801 	add.w	r8, r6, #1
 8023a80:	f103 3bff 	add.w	fp, r3, #4294967295
 8023a84:	f1bb 0f01 	cmp.w	fp, #1
 8023a88:	46a1      	mov	r9, r4
 8023a8a:	f104 0404 	add.w	r4, r4, #4
 8023a8e:	dd27      	ble.n	8023ae0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8023a90:	f898 1000 	ldrb.w	r1, [r8]
 8023a94:	9b04      	ldr	r3, [sp, #16]
 8023a96:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8023a9a:	9300      	str	r3, [sp, #0]
 8023a9c:	0909      	lsrs	r1, r1, #4
 8023a9e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023aa2:	463b      	mov	r3, r7
 8023aa4:	4429      	add	r1, r5
 8023aa6:	4650      	mov	r0, sl
 8023aa8:	f7ff ff3c 	bl	8023924 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8023aac:	f824 0c04 	strh.w	r0, [r4, #-4]
 8023ab0:	f818 1b01 	ldrb.w	r1, [r8], #1
 8023ab4:	9b04      	ldr	r3, [sp, #16]
 8023ab6:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8023aba:	9300      	str	r3, [sp, #0]
 8023abc:	f001 010f 	and.w	r1, r1, #15
 8023ac0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023ac4:	463b      	mov	r3, r7
 8023ac6:	4429      	add	r1, r5
 8023ac8:	4650      	mov	r0, sl
 8023aca:	f7ff ff2b 	bl	8023924 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8023ace:	f1ab 0b02 	sub.w	fp, fp, #2
 8023ad2:	f824 0c02 	strh.w	r0, [r4, #-2]
 8023ad6:	e7d5      	b.n	8023a84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8023ad8:	46b0      	mov	r8, r6
 8023ada:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8023ade:	e7d1      	b.n	8023a84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8023ae0:	d10f      	bne.n	8023b02 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8023ae2:	f898 1000 	ldrb.w	r1, [r8]
 8023ae6:	9b04      	ldr	r3, [sp, #16]
 8023ae8:	f8b9 2000 	ldrh.w	r2, [r9]
 8023aec:	9300      	str	r3, [sp, #0]
 8023aee:	0909      	lsrs	r1, r1, #4
 8023af0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023af4:	463b      	mov	r3, r7
 8023af6:	4429      	add	r1, r5
 8023af8:	4650      	mov	r0, sl
 8023afa:	f7ff ff13 	bl	8023924 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8023afe:	f829 0b02 	strh.w	r0, [r9], #2
 8023b02:	9b08      	ldr	r3, [sp, #32]
 8023b04:	9a05      	ldr	r2, [sp, #20]
 8023b06:	881c      	ldrh	r4, [r3, #0]
 8023b08:	9b03      	ldr	r3, [sp, #12]
 8023b0a:	1ae4      	subs	r4, r4, r3
 8023b0c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8023b10:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8023b14:	4413      	add	r3, r2
 8023b16:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8023b18:	fb93 f3f2 	sdiv	r3, r3, r2
 8023b1c:	441e      	add	r6, r3
 8023b1e:	e796      	b.n	8023a4e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8023b20:	4f46      	ldr	r7, [pc, #280]	@ (8023c3c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8023b22:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8023b26:	42a3      	cmp	r3, r4
 8023b28:	d97c      	bls.n	8023c24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8023b2a:	9a06      	ldr	r2, [sp, #24]
 8023b2c:	2a00      	cmp	r2, #0
 8023b2e:	d054      	beq.n	8023bda <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8023b30:	7830      	ldrb	r0, [r6, #0]
 8023b32:	f000 000f 	and.w	r0, r0, #15
 8023b36:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023b3a:	eb05 0e00 	add.w	lr, r5, r0
 8023b3e:	5c28      	ldrb	r0, [r5, r0]
 8023b40:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8023b44:	f89e e001 	ldrb.w	lr, [lr, #1]
 8023b48:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8023b4c:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8023b50:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8023b54:	ea42 020e 	orr.w	r2, r2, lr
 8023b58:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8023b5c:	f824 2b02 	strh.w	r2, [r4], #2
 8023b60:	9a03      	ldr	r2, [sp, #12]
 8023b62:	1c71      	adds	r1, r6, #1
 8023b64:	f102 3eff 	add.w	lr, r2, #4294967295
 8023b68:	f1be 0f01 	cmp.w	lr, #1
 8023b6c:	4620      	mov	r0, r4
 8023b6e:	f104 0404 	add.w	r4, r4, #4
 8023b72:	dd36      	ble.n	8023be2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8023b74:	7808      	ldrb	r0, [r1, #0]
 8023b76:	0900      	lsrs	r0, r0, #4
 8023b78:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023b7c:	eb05 0a00 	add.w	sl, r5, r0
 8023b80:	f1ae 0e02 	sub.w	lr, lr, #2
 8023b84:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8023b88:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8023b8c:	00d2      	lsls	r2, r2, #3
 8023b8e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8023b92:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023b96:	ea49 0202 	orr.w	r2, r9, r2
 8023b9a:	f815 9000 	ldrb.w	r9, [r5, r0]
 8023b9e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8023ba2:	f824 2c04 	strh.w	r2, [r4, #-4]
 8023ba6:	f811 0b01 	ldrb.w	r0, [r1], #1
 8023baa:	f000 000f 	and.w	r0, r0, #15
 8023bae:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023bb2:	eb05 0a00 	add.w	sl, r5, r0
 8023bb6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8023bba:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8023bbe:	00d2      	lsls	r2, r2, #3
 8023bc0:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8023bc4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023bc8:	ea49 0202 	orr.w	r2, r9, r2
 8023bcc:	f815 9000 	ldrb.w	r9, [r5, r0]
 8023bd0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8023bd4:	f824 2c02 	strh.w	r2, [r4, #-2]
 8023bd8:	e7c6      	b.n	8023b68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8023bda:	4631      	mov	r1, r6
 8023bdc:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8023be0:	e7c2      	b.n	8023b68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8023be2:	d111      	bne.n	8023c08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8023be4:	7809      	ldrb	r1, [r1, #0]
 8023be6:	0909      	lsrs	r1, r1, #4
 8023be8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023bec:	186c      	adds	r4, r5, r1
 8023bee:	5c69      	ldrb	r1, [r5, r1]
 8023bf0:	78a2      	ldrb	r2, [r4, #2]
 8023bf2:	7864      	ldrb	r4, [r4, #1]
 8023bf4:	00e4      	lsls	r4, r4, #3
 8023bf6:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8023bfa:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8023bfe:	4322      	orrs	r2, r4
 8023c00:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8023c04:	f820 2b02 	strh.w	r2, [r0], #2
 8023c08:	9a03      	ldr	r2, [sp, #12]
 8023c0a:	f8bc 4000 	ldrh.w	r4, [ip]
 8023c0e:	9905      	ldr	r1, [sp, #20]
 8023c10:	1aa4      	subs	r4, r4, r2
 8023c12:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8023c16:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8023c1a:	440a      	add	r2, r1
 8023c1c:	fb92 f2f8 	sdiv	r2, r2, r8
 8023c20:	4416      	add	r6, r2
 8023c22:	e780      	b.n	8023b26 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8023c24:	4b03      	ldr	r3, [pc, #12]	@ (8023c34 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8023c26:	6818      	ldr	r0, [r3, #0]
 8023c28:	6803      	ldr	r3, [r0, #0]
 8023c2a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8023c2c:	4798      	blx	r3
 8023c2e:	b00f      	add	sp, #60	@ 0x3c
 8023c30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023c34:	200152ec 	.word	0x200152ec
 8023c38:	200152e6 	.word	0x200152e6
 8023c3c:	fffff800 	.word	0xfffff800

08023c40 <CRC_Lock>:
 8023c40:	b530      	push	{r4, r5, lr}
 8023c42:	4a2d      	ldr	r2, [pc, #180]	@ (8023cf8 <CRC_Lock+0xb8>)
 8023c44:	6813      	ldr	r3, [r2, #0]
 8023c46:	f023 0301 	bic.w	r3, r3, #1
 8023c4a:	6013      	str	r3, [r2, #0]
 8023c4c:	4b2b      	ldr	r3, [pc, #172]	@ (8023cfc <CRC_Lock+0xbc>)
 8023c4e:	681c      	ldr	r4, [r3, #0]
 8023c50:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8023c54:	4014      	ands	r4, r2
 8023c56:	f24c 2540 	movw	r5, #49728	@ 0xc240
 8023c5a:	42ac      	cmp	r4, r5
 8023c5c:	d005      	beq.n	8023c6a <CRC_Lock+0x2a>
 8023c5e:	681c      	ldr	r4, [r3, #0]
 8023c60:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8023c64:	4014      	ands	r4, r2
 8023c66:	42ac      	cmp	r4, r5
 8023c68:	d125      	bne.n	8023cb6 <CRC_Lock+0x76>
 8023c6a:	4b25      	ldr	r3, [pc, #148]	@ (8023d00 <CRC_Lock+0xc0>)
 8023c6c:	681b      	ldr	r3, [r3, #0]
 8023c6e:	2b00      	cmp	r3, #0
 8023c70:	d139      	bne.n	8023ce6 <CRC_Lock+0xa6>
 8023c72:	4b24      	ldr	r3, [pc, #144]	@ (8023d04 <CRC_Lock+0xc4>)
 8023c74:	681a      	ldr	r2, [r3, #0]
 8023c76:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8023c7a:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 8023c7e:	d00d      	beq.n	8023c9c <CRC_Lock+0x5c>
 8023c80:	681a      	ldr	r2, [r3, #0]
 8023c82:	f240 4483 	movw	r4, #1155	@ 0x483
 8023c86:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8023c8a:	42a2      	cmp	r2, r4
 8023c8c:	d006      	beq.n	8023c9c <CRC_Lock+0x5c>
 8023c8e:	681b      	ldr	r3, [r3, #0]
 8023c90:	f240 4285 	movw	r2, #1157	@ 0x485
 8023c94:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8023c98:	4293      	cmp	r3, r2
 8023c9a:	d124      	bne.n	8023ce6 <CRC_Lock+0xa6>
 8023c9c:	4b1a      	ldr	r3, [pc, #104]	@ (8023d08 <CRC_Lock+0xc8>)
 8023c9e:	2201      	movs	r2, #1
 8023ca0:	601a      	str	r2, [r3, #0]
 8023ca2:	681a      	ldr	r2, [r3, #0]
 8023ca4:	2a00      	cmp	r2, #0
 8023ca6:	d1fc      	bne.n	8023ca2 <CRC_Lock+0x62>
 8023ca8:	4b18      	ldr	r3, [pc, #96]	@ (8023d0c <CRC_Lock+0xcc>)
 8023caa:	6018      	str	r0, [r3, #0]
 8023cac:	6818      	ldr	r0, [r3, #0]
 8023cae:	1a43      	subs	r3, r0, r1
 8023cb0:	4258      	negs	r0, r3
 8023cb2:	4158      	adcs	r0, r3
 8023cb4:	e00e      	b.n	8023cd4 <CRC_Lock+0x94>
 8023cb6:	681b      	ldr	r3, [r3, #0]
 8023cb8:	4013      	ands	r3, r2
 8023cba:	f24d 2220 	movw	r2, #53792	@ 0xd220
 8023cbe:	4293      	cmp	r3, r2
 8023cc0:	d111      	bne.n	8023ce6 <CRC_Lock+0xa6>
 8023cc2:	4b13      	ldr	r3, [pc, #76]	@ (8023d10 <CRC_Lock+0xd0>)
 8023cc4:	681b      	ldr	r3, [r3, #0]
 8023cc6:	f240 4286 	movw	r2, #1158	@ 0x486
 8023cca:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8023cce:	4293      	cmp	r3, r2
 8023cd0:	d001      	beq.n	8023cd6 <CRC_Lock+0x96>
 8023cd2:	2000      	movs	r0, #0
 8023cd4:	bd30      	pop	{r4, r5, pc}
 8023cd6:	4b0f      	ldr	r3, [pc, #60]	@ (8023d14 <CRC_Lock+0xd4>)
 8023cd8:	2201      	movs	r2, #1
 8023cda:	601a      	str	r2, [r3, #0]
 8023cdc:	681a      	ldr	r2, [r3, #0]
 8023cde:	2a00      	cmp	r2, #0
 8023ce0:	d1fc      	bne.n	8023cdc <CRC_Lock+0x9c>
 8023ce2:	4b0d      	ldr	r3, [pc, #52]	@ (8023d18 <CRC_Lock+0xd8>)
 8023ce4:	e7e1      	b.n	8023caa <CRC_Lock+0x6a>
 8023ce6:	4b0d      	ldr	r3, [pc, #52]	@ (8023d1c <CRC_Lock+0xdc>)
 8023ce8:	2201      	movs	r2, #1
 8023cea:	601a      	str	r2, [r3, #0]
 8023cec:	681a      	ldr	r2, [r3, #0]
 8023cee:	2a00      	cmp	r2, #0
 8023cf0:	d1fc      	bne.n	8023cec <CRC_Lock+0xac>
 8023cf2:	4b0b      	ldr	r3, [pc, #44]	@ (8023d20 <CRC_Lock+0xe0>)
 8023cf4:	e7d9      	b.n	8023caa <CRC_Lock+0x6a>
 8023cf6:	bf00      	nop
 8023cf8:	e0002000 	.word	0xe0002000
 8023cfc:	e000ed00 	.word	0xe000ed00
 8023d00:	e0042000 	.word	0xe0042000
 8023d04:	5c001000 	.word	0x5c001000
 8023d08:	58024c08 	.word	0x58024c08
 8023d0c:	58024c00 	.word	0x58024c00
 8023d10:	46008ff0 	.word	0x46008ff0
 8023d14:	46024c08 	.word	0x46024c08
 8023d18:	46024c00 	.word	0x46024c00
 8023d1c:	40023008 	.word	0x40023008
 8023d20:	40023000 	.word	0x40023000

08023d24 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8023d24:	6101      	str	r1, [r0, #16]
 8023d26:	4770      	bx	lr

08023d28 <_ZN8touchgfx8Gestures4tickEv>:
 8023d28:	7b83      	ldrb	r3, [r0, #14]
 8023d2a:	b14b      	cbz	r3, 8023d40 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8023d2c:	8903      	ldrh	r3, [r0, #8]
 8023d2e:	3301      	adds	r3, #1
 8023d30:	b29b      	uxth	r3, r3
 8023d32:	2b07      	cmp	r3, #7
 8023d34:	8103      	strh	r3, [r0, #8]
 8023d36:	bf81      	itttt	hi
 8023d38:	2300      	movhi	r3, #0
 8023d3a:	8143      	strhhi	r3, [r0, #10]
 8023d3c:	8183      	strhhi	r3, [r0, #12]
 8023d3e:	7383      	strbhi	r3, [r0, #14]
 8023d40:	4770      	bx	lr
	...

08023d44 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8023d44:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8023d48:	4698      	mov	r8, r3
 8023d4a:	8883      	ldrh	r3, [r0, #4]
 8023d4c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8023d50:	eba8 0303 	sub.w	r3, r8, r3
 8023d54:	b21b      	sxth	r3, r3
 8023d56:	4604      	mov	r4, r0
 8023d58:	2b00      	cmp	r3, #0
 8023d5a:	4617      	mov	r7, r2
 8023d5c:	4a18      	ldr	r2, [pc, #96]	@ (8023dc0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8023d5e:	9200      	str	r2, [sp, #0]
 8023d60:	bfb8      	it	lt
 8023d62:	425b      	neglt	r3, r3
 8023d64:	8aa2      	ldrh	r2, [r4, #20]
 8023d66:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 8023d6a:	f8ad 800a 	strh.w	r8, [sp, #10]
 8023d6e:	b21b      	sxth	r3, r3
 8023d70:	460e      	mov	r6, r1
 8023d72:	4293      	cmp	r3, r2
 8023d74:	88c1      	ldrh	r1, [r0, #6]
 8023d76:	f8ad 1008 	strh.w	r1, [sp, #8]
 8023d7a:	f04f 0000 	mov.w	r0, #0
 8023d7e:	f88d 0004 	strb.w	r0, [sp, #4]
 8023d82:	f8ad 500c 	strh.w	r5, [sp, #12]
 8023d86:	dc07      	bgt.n	8023d98 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8023d88:	1a69      	subs	r1, r5, r1
 8023d8a:	b209      	sxth	r1, r1
 8023d8c:	2900      	cmp	r1, #0
 8023d8e:	bfb8      	it	lt
 8023d90:	4249      	neglt	r1, r1
 8023d92:	b209      	sxth	r1, r1
 8023d94:	428a      	cmp	r2, r1
 8023d96:	da10      	bge.n	8023dba <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8023d98:	6920      	ldr	r0, [r4, #16]
 8023d9a:	6803      	ldr	r3, [r0, #0]
 8023d9c:	4669      	mov	r1, sp
 8023d9e:	685b      	ldr	r3, [r3, #4]
 8023da0:	4798      	blx	r3
 8023da2:	eba8 0606 	sub.w	r6, r8, r6
 8023da6:	2300      	movs	r3, #0
 8023da8:	1bef      	subs	r7, r5, r7
 8023daa:	2001      	movs	r0, #1
 8023dac:	8123      	strh	r3, [r4, #8]
 8023dae:	8166      	strh	r6, [r4, #10]
 8023db0:	81a7      	strh	r7, [r4, #12]
 8023db2:	f8a4 8004 	strh.w	r8, [r4, #4]
 8023db6:	80e5      	strh	r5, [r4, #6]
 8023db8:	73a0      	strb	r0, [r4, #14]
 8023dba:	b004      	add	sp, #16
 8023dbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023dc0:	08028d70 	.word	0x08028d70

08023dc4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8023dc4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8023dc6:	461e      	mov	r6, r3
 8023dc8:	1e4b      	subs	r3, r1, #1
 8023dca:	2b01      	cmp	r3, #1
 8023dcc:	b085      	sub	sp, #20
 8023dce:	4604      	mov	r4, r0
 8023dd0:	460d      	mov	r5, r1
 8023dd2:	4617      	mov	r7, r2
 8023dd4:	d84b      	bhi.n	8023e6e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8023dd6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8023dda:	1cd3      	adds	r3, r2, #3
 8023ddc:	b29b      	uxth	r3, r3
 8023dde:	2b06      	cmp	r3, #6
 8023de0:	d916      	bls.n	8023e10 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8023de2:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8023e84 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8023de6:	f8cd c004 	str.w	ip, [sp, #4]
 8023dea:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8023dee:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8023df2:	6900      	ldr	r0, [r0, #16]
 8023df4:	f8ad 100c 	strh.w	r1, [sp, #12]
 8023df8:	f04f 0c00 	mov.w	ip, #0
 8023dfc:	f88d c008 	strb.w	ip, [sp, #8]
 8023e00:	f8ad 200a 	strh.w	r2, [sp, #10]
 8023e04:	f8ad 300e 	strh.w	r3, [sp, #14]
 8023e08:	6803      	ldr	r3, [r0, #0]
 8023e0a:	a901      	add	r1, sp, #4
 8023e0c:	689b      	ldr	r3, [r3, #8]
 8023e0e:	4798      	blx	r3
 8023e10:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8023e14:	1cd3      	adds	r3, r2, #3
 8023e16:	b29b      	uxth	r3, r3
 8023e18:	2b06      	cmp	r3, #6
 8023e1a:	d916      	bls.n	8023e4a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8023e1c:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8023e84 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8023e20:	f8cd c004 	str.w	ip, [sp, #4]
 8023e24:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8023e28:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8023e2c:	6920      	ldr	r0, [r4, #16]
 8023e2e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8023e32:	f04f 0c01 	mov.w	ip, #1
 8023e36:	f88d c008 	strb.w	ip, [sp, #8]
 8023e3a:	f8ad 200a 	strh.w	r2, [sp, #10]
 8023e3e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8023e42:	6803      	ldr	r3, [r0, #0]
 8023e44:	a901      	add	r1, sp, #4
 8023e46:	689b      	ldr	r3, [r3, #8]
 8023e48:	4798      	blx	r3
 8023e4a:	4b0d      	ldr	r3, [pc, #52]	@ (8023e80 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8023e4c:	9301      	str	r3, [sp, #4]
 8023e4e:	6920      	ldr	r0, [r4, #16]
 8023e50:	f88d 5008 	strb.w	r5, [sp, #8]
 8023e54:	2300      	movs	r3, #0
 8023e56:	f8ad 700a 	strh.w	r7, [sp, #10]
 8023e5a:	f8ad 600c 	strh.w	r6, [sp, #12]
 8023e5e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8023e62:	6803      	ldr	r3, [r0, #0]
 8023e64:	a901      	add	r1, sp, #4
 8023e66:	681b      	ldr	r3, [r3, #0]
 8023e68:	4798      	blx	r3
 8023e6a:	b005      	add	sp, #20
 8023e6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023e6e:	2900      	cmp	r1, #0
 8023e70:	d1eb      	bne.n	8023e4a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8023e72:	80a2      	strh	r2, [r4, #4]
 8023e74:	80c6      	strh	r6, [r0, #6]
 8023e76:	60a1      	str	r1, [r4, #8]
 8023e78:	81a1      	strh	r1, [r4, #12]
 8023e7a:	73a1      	strb	r1, [r4, #14]
 8023e7c:	e7e5      	b.n	8023e4a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8023e7e:	bf00      	nop
 8023e80:	08028d5c 	.word	0x08028d5c
 8023e84:	08028d84 	.word	0x08028d84

08023e88 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 8023e88:	10c9      	asrs	r1, r1, #3
 8023e8a:	2900      	cmp	r1, #0
 8023e8c:	bfb8      	it	lt
 8023e8e:	4249      	neglt	r1, r1
 8023e90:	2801      	cmp	r0, #1
 8023e92:	d108      	bne.n	8023ea6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8023e94:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8023e98:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8023e9c:	4601      	mov	r1, r0
 8023e9e:	dd02      	ble.n	8023ea6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8023ea0:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 8023ea4:	4770      	bx	lr
 8023ea6:	29ff      	cmp	r1, #255	@ 0xff
 8023ea8:	bfa8      	it	ge
 8023eaa:	21ff      	movge	r1, #255	@ 0xff
 8023eac:	4608      	mov	r0, r1
 8023eae:	4770      	bx	lr

08023eb0 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8023eb0:	b410      	push	{r4}
 8023eb2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8023eb6:	429c      	cmp	r4, r3
 8023eb8:	d803      	bhi.n	8023ec2 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8023eba:	f85d 4b04 	ldr.w	r4, [sp], #4
 8023ebe:	f7ec b8d1 	b.w	8010064 <_ZN8touchgfx7Outline6lineToEii>
 8023ec2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8023ec6:	4770      	bx	lr

08023ec8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8023ec8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023ecc:	b08b      	sub	sp, #44	@ 0x2c
 8023ece:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8023ed2:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8023ed6:	9308      	str	r3, [sp, #32]
 8023ed8:	4606      	mov	r6, r0
 8023eda:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8023ede:	9309      	str	r3, [sp, #36]	@ 0x24
 8023ee0:	468a      	mov	sl, r1
 8023ee2:	f7ec fa2c 	bl	801033e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8023ee6:	68b5      	ldr	r5, [r6, #8]
 8023ee8:	4604      	mov	r4, r0
 8023eea:	2d00      	cmp	r5, #0
 8023eec:	d044      	beq.n	8023f78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8023eee:	6873      	ldr	r3, [r6, #4]
 8023ef0:	42ab      	cmp	r3, r5
 8023ef2:	d33d      	bcc.n	8023f70 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8023ef4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8023ef8:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 8023efc:	eb02 0b03 	add.w	fp, r2, r3
 8023f00:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8023f04:	fb02 1203 	mla	r2, r2, r3, r1
 8023f08:	9205      	str	r2, [sp, #20]
 8023f0a:	1e6a      	subs	r2, r5, #1
 8023f0c:	9204      	str	r2, [sp, #16]
 8023f0e:	f04f 0800 	mov.w	r8, #0
 8023f12:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8023f16:	f9b4 7000 	ldrsh.w	r7, [r4]
 8023f1a:	454b      	cmp	r3, r9
 8023f1c:	463a      	mov	r2, r7
 8023f1e:	d008      	beq.n	8023f32 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8023f20:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 8023f24:	eb03 0b09 	add.w	fp, r3, r9
 8023f28:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8023f2c:	fb03 1309 	mla	r3, r3, r9, r1
 8023f30:	9305      	str	r3, [sp, #20]
 8023f32:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8023f36:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8023f3a:	4498      	add	r8, r3
 8023f3c:	9b04      	ldr	r3, [sp, #16]
 8023f3e:	3b01      	subs	r3, #1
 8023f40:	9304      	str	r3, [sp, #16]
 8023f42:	9b04      	ldr	r3, [sp, #16]
 8023f44:	3301      	adds	r3, #1
 8023f46:	d015      	beq.n	8023f74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8023f48:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8023f4c:	42bb      	cmp	r3, r7
 8023f4e:	d117      	bne.n	8023f80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8023f50:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8023f54:	9b04      	ldr	r3, [sp, #16]
 8023f56:	4548      	cmp	r0, r9
 8023f58:	f103 33ff 	add.w	r3, r3, #4294967295
 8023f5c:	d17f      	bne.n	802405e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8023f5e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8023f62:	4401      	add	r1, r0
 8023f64:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8023f68:	4480      	add	r8, r0
 8023f6a:	e7e9      	b.n	8023f40 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8023f6c:	461f      	mov	r7, r3
 8023f6e:	e044      	b.n	8023ffa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8023f70:	2000      	movs	r0, #0
 8023f72:	e002      	b.n	8023f7a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8023f74:	2900      	cmp	r1, #0
 8023f76:	d16f      	bne.n	8024058 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8023f78:	2001      	movs	r0, #1
 8023f7a:	b00b      	add	sp, #44	@ 0x2c
 8023f7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023f80:	2900      	cmp	r1, #0
 8023f82:	d030      	beq.n	8023fe6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8023f84:	2f00      	cmp	r7, #0
 8023f86:	db29      	blt.n	8023fdc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8023f88:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 8023f8c:	42bb      	cmp	r3, r7
 8023f8e:	dd25      	ble.n	8023fdc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8023f90:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8023f94:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8023f98:	f7ff ff76 	bl	8023e88 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8023f9c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023f9e:	fb10 f003 	smulbb	r0, r0, r3
 8023fa2:	b280      	uxth	r0, r0
 8023fa4:	1c41      	adds	r1, r0, #1
 8023fa6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8023faa:	1209      	asrs	r1, r1, #8
 8023fac:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8023fb0:	d014      	beq.n	8023fdc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8023fb2:	9808      	ldr	r0, [sp, #32]
 8023fb4:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8023fb6:	b2c9      	uxtb	r1, r1
 8023fb8:	b2ba      	uxth	r2, r7
 8023fba:	9102      	str	r1, [sp, #8]
 8023fbc:	2101      	movs	r1, #1
 8023fbe:	4413      	add	r3, r2
 8023fc0:	9101      	str	r1, [sp, #4]
 8023fc2:	4402      	add	r2, r0
 8023fc4:	fa0f f18b 	sxth.w	r1, fp
 8023fc8:	f8da 0000 	ldr.w	r0, [sl]
 8023fcc:	9100      	str	r1, [sp, #0]
 8023fce:	6941      	ldr	r1, [r0, #20]
 8023fd0:	b21b      	sxth	r3, r3
 8023fd2:	460d      	mov	r5, r1
 8023fd4:	b212      	sxth	r2, r2
 8023fd6:	9905      	ldr	r1, [sp, #20]
 8023fd8:	4650      	mov	r0, sl
 8023fda:	47a8      	blx	r5
 8023fdc:	9b04      	ldr	r3, [sp, #16]
 8023fde:	3301      	adds	r3, #1
 8023fe0:	f107 0201 	add.w	r2, r7, #1
 8023fe4:	d0c8      	beq.n	8023f78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8023fe6:	f9b4 7000 	ldrsh.w	r7, [r4]
 8023fea:	1abb      	subs	r3, r7, r2
 8023fec:	2b00      	cmp	r3, #0
 8023fee:	dd31      	ble.n	8024054 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8023ff0:	2a00      	cmp	r2, #0
 8023ff2:	dabb      	bge.n	8023f6c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8023ff4:	2f00      	cmp	r7, #0
 8023ff6:	dd2d      	ble.n	8024054 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8023ff8:	2200      	movs	r2, #0
 8023ffa:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 8023ffe:	19d1      	adds	r1, r2, r7
 8024000:	4299      	cmp	r1, r3
 8024002:	db02      	blt.n	802400a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8024004:	1a9f      	subs	r7, r3, r2
 8024006:	2f00      	cmp	r7, #0
 8024008:	dd24      	ble.n	8024054 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802400a:	ea4f 1188 	mov.w	r1, r8, lsl #6
 802400e:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8024012:	f7ff ff39 	bl	8023e88 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8024016:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024018:	fb10 f003 	smulbb	r0, r0, r3
 802401c:	b280      	uxth	r0, r0
 802401e:	1c41      	adds	r1, r0, #1
 8024020:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8024024:	1209      	asrs	r1, r1, #8
 8024026:	f011 0fff 	tst.w	r1, #255	@ 0xff
 802402a:	d013      	beq.n	8024054 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802402c:	9808      	ldr	r0, [sp, #32]
 802402e:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8024030:	b292      	uxth	r2, r2
 8024032:	b2c9      	uxtb	r1, r1
 8024034:	4413      	add	r3, r2
 8024036:	9102      	str	r1, [sp, #8]
 8024038:	4402      	add	r2, r0
 802403a:	b23f      	sxth	r7, r7
 802403c:	f8da 0000 	ldr.w	r0, [sl]
 8024040:	9701      	str	r7, [sp, #4]
 8024042:	fa0f f18b 	sxth.w	r1, fp
 8024046:	9100      	str	r1, [sp, #0]
 8024048:	6947      	ldr	r7, [r0, #20]
 802404a:	9905      	ldr	r1, [sp, #20]
 802404c:	b21b      	sxth	r3, r3
 802404e:	b212      	sxth	r2, r2
 8024050:	4650      	mov	r0, sl
 8024052:	47b8      	blx	r7
 8024054:	464b      	mov	r3, r9
 8024056:	e75c      	b.n	8023f12 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8024058:	2f00      	cmp	r7, #0
 802405a:	da95      	bge.n	8023f88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 802405c:	e78c      	b.n	8023f78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802405e:	2900      	cmp	r1, #0
 8024060:	d0f8      	beq.n	8024054 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8024062:	e78f      	b.n	8023f84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08024064 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 8024064:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8024068:	461e      	mov	r6, r3
 802406a:	4b36      	ldr	r3, [pc, #216]	@ (8024144 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 802406c:	e9c0 3100 	strd	r3, r1, [r0]
 8024070:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8024074:	8103      	strh	r3, [r0, #8]
 8024076:	2500      	movs	r5, #0
 8024078:	f89d 3020 	ldrb.w	r3, [sp, #32]
 802407c:	7283      	strb	r3, [r0, #10]
 802407e:	f100 0814 	add.w	r8, r0, #20
 8024082:	4604      	mov	r4, r0
 8024084:	8185      	strh	r5, [r0, #12]
 8024086:	81c5      	strh	r5, [r0, #14]
 8024088:	8205      	strh	r5, [r0, #16]
 802408a:	8245      	strh	r5, [r0, #18]
 802408c:	4640      	mov	r0, r8
 802408e:	4617      	mov	r7, r2
 8024090:	f7eb fb20 	bl	800f6d4 <_ZN8touchgfx7OutlineC1Ev>
 8024094:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 8024098:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 802409c:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 80240a0:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 80240a4:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 80240a8:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 80240ac:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 80240b0:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 80240b4:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 80240b8:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 80240bc:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 80240c0:	6830      	ldr	r0, [r6, #0]
 80240c2:	6871      	ldr	r1, [r6, #4]
 80240c4:	8872      	ldrh	r2, [r6, #2]
 80240c6:	8835      	ldrh	r5, [r6, #0]
 80240c8:	466b      	mov	r3, sp
 80240ca:	c303      	stmia	r3!, {r0, r1}
 80240cc:	887b      	ldrh	r3, [r7, #2]
 80240ce:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 80240d2:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 80240d6:	4413      	add	r3, r2
 80240d8:	883a      	ldrh	r2, [r7, #0]
 80240da:	81e3      	strh	r3, [r4, #14]
 80240dc:	442a      	add	r2, r5
 80240de:	81a2      	strh	r2, [r4, #12]
 80240e0:	8220      	strh	r0, [r4, #16]
 80240e2:	8261      	strh	r1, [r4, #18]
 80240e4:	4668      	mov	r0, sp
 80240e6:	4639      	mov	r1, r7
 80240e8:	f7ed fcde 	bl	8011aa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80240ec:	f104 000c 	add.w	r0, r4, #12
 80240f0:	f7ed fcb2 	bl	8011a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80240f4:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80240f8:	f8bd 2000 	ldrh.w	r2, [sp]
 80240fc:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 8024100:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 8024104:	4640      	mov	r0, r8
 8024106:	f7eb fac9 	bl	800f69c <_ZN8touchgfx7Outline5resetEv>
 802410a:	f9bd 3000 	ldrsh.w	r3, [sp]
 802410e:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 8024112:	015b      	lsls	r3, r3, #5
 8024114:	64e3      	str	r3, [r4, #76]	@ 0x4c
 8024116:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802411a:	015b      	lsls	r3, r3, #5
 802411c:	6523      	str	r3, [r4, #80]	@ 0x50
 802411e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8024122:	015b      	lsls	r3, r3, #5
 8024124:	6563      	str	r3, [r4, #84]	@ 0x54
 8024126:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 802412a:	015b      	lsls	r3, r3, #5
 802412c:	65a3      	str	r3, [r4, #88]	@ 0x58
 802412e:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 8024132:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 8024136:	4620      	mov	r0, r4
 8024138:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 802413c:	b002      	add	sp, #8
 802413e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8024142:	bf00      	nop
 8024144:	080290c0 	.word	0x080290c0

08024148 <_ZN8touchgfx6Canvas5closeEv>:
 8024148:	b538      	push	{r3, r4, r5, lr}
 802414a:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 802414e:	4604      	mov	r4, r0
 8024150:	b193      	cbz	r3, 8024178 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8024152:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 8024156:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 802415a:	4213      	tst	r3, r2
 802415c:	d10c      	bne.n	8024178 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802415e:	f100 0514 	add.w	r5, r0, #20
 8024162:	b123      	cbz	r3, 802416e <_ZN8touchgfx6Canvas5closeEv+0x26>
 8024164:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 8024168:	4628      	mov	r0, r5
 802416a:	f7ff fea1 	bl	8023eb0 <_ZN8touchgfx10Rasterizer6lineToEii>
 802416e:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 8024172:	4628      	mov	r0, r5
 8024174:	f7ff fe9c 	bl	8023eb0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8024178:	2300      	movs	r3, #0
 802417a:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802417e:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 8024182:	4298      	cmp	r0, r3
 8024184:	bf34      	ite	cc
 8024186:	2000      	movcc	r0, #0
 8024188:	2001      	movcs	r0, #1
 802418a:	bd38      	pop	{r3, r4, r5, pc}

0802418c <_ZN8touchgfx6Canvas6renderEh>:
 802418c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8024190:	7a85      	ldrb	r5, [r0, #10]
 8024192:	4369      	muls	r1, r5
 8024194:	1c4d      	adds	r5, r1, #1
 8024196:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802419a:	122d      	asrs	r5, r5, #8
 802419c:	4604      	mov	r4, r0
 802419e:	f000 8099 	beq.w	80242d4 <_ZN8touchgfx6Canvas6renderEh+0x148>
 80241a2:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 80241a6:	2b00      	cmp	r3, #0
 80241a8:	f000 8094 	beq.w	80242d4 <_ZN8touchgfx6Canvas6renderEh+0x148>
 80241ac:	f7ff ffcc 	bl	8024148 <_ZN8touchgfx6Canvas5closeEv>
 80241b0:	4607      	mov	r7, r0
 80241b2:	2800      	cmp	r0, #0
 80241b4:	d045      	beq.n	8024242 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 80241b6:	6860      	ldr	r0, [r4, #4]
 80241b8:	4e47      	ldr	r6, [pc, #284]	@ (80242d8 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 80241ba:	6803      	ldr	r3, [r0, #0]
 80241bc:	6837      	ldr	r7, [r6, #0]
 80241be:	689b      	ldr	r3, [r3, #8]
 80241c0:	4798      	blx	r3
 80241c2:	4601      	mov	r1, r0
 80241c4:	4638      	mov	r0, r7
 80241c6:	f7e9 f99b 	bl	800d500 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 80241ca:	4607      	mov	r7, r0
 80241cc:	f7de fb88 	bl	80028e0 <_ZN8touchgfx3HAL3lcdEv>
 80241d0:	6803      	ldr	r3, [r0, #0]
 80241d2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80241d4:	4798      	blx	r3
 80241d6:	4680      	mov	r8, r0
 80241d8:	f7de fb82 	bl	80028e0 <_ZN8touchgfx3HAL3lcdEv>
 80241dc:	6803      	ldr	r3, [r0, #0]
 80241de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80241e0:	4798      	blx	r3
 80241e2:	280b      	cmp	r0, #11
 80241e4:	d85b      	bhi.n	802429e <_ZN8touchgfx6Canvas6renderEh+0x112>
 80241e6:	e8df f000 	tbb	[pc, r0]
 80241ea:	5c51      	.short	0x5c51
 80241ec:	305a066c 	.word	0x305a066c
 80241f0:	65656540 	.word	0x65656540
 80241f4:	6565      	.short	0x6565
 80241f6:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80241fa:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80241fe:	2208      	movs	r2, #8
 8024200:	fb91 f2f2 	sdiv	r2, r1, r2
 8024204:	fb08 2303 	mla	r3, r8, r3, r2
 8024208:	441f      	add	r7, r3
 802420a:	424b      	negs	r3, r1
 802420c:	f003 0307 	and.w	r3, r3, #7
 8024210:	f001 0107 	and.w	r1, r1, #7
 8024214:	bf58      	it	pl
 8024216:	4259      	negpl	r1, r3
 8024218:	b2c9      	uxtb	r1, r1
 802421a:	b2ed      	uxtb	r5, r5
 802421c:	463a      	mov	r2, r7
 802421e:	e9cd 1500 	strd	r1, r5, [sp]
 8024222:	fa0f f388 	sxth.w	r3, r8
 8024226:	6861      	ldr	r1, [r4, #4]
 8024228:	f104 0014 	add.w	r0, r4, #20
 802422c:	f7ff fe4c 	bl	8023ec8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8024230:	4607      	mov	r7, r0
 8024232:	6860      	ldr	r0, [r4, #4]
 8024234:	6803      	ldr	r3, [r0, #0]
 8024236:	691b      	ldr	r3, [r3, #16]
 8024238:	4798      	blx	r3
 802423a:	6830      	ldr	r0, [r6, #0]
 802423c:	6803      	ldr	r3, [r0, #0]
 802423e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024240:	4798      	blx	r3
 8024242:	4638      	mov	r0, r7
 8024244:	b002      	add	sp, #8
 8024246:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802424a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802424e:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8024252:	2204      	movs	r2, #4
 8024254:	fb91 f2f2 	sdiv	r2, r1, r2
 8024258:	fb08 2303 	mla	r3, r8, r3, r2
 802425c:	441f      	add	r7, r3
 802425e:	424b      	negs	r3, r1
 8024260:	f003 0303 	and.w	r3, r3, #3
 8024264:	f001 0103 	and.w	r1, r1, #3
 8024268:	e7d4      	b.n	8024214 <_ZN8touchgfx6Canvas6renderEh+0x88>
 802426a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802426e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8024272:	2900      	cmp	r1, #0
 8024274:	f04f 0202 	mov.w	r2, #2
 8024278:	fb91 f2f2 	sdiv	r2, r1, r2
 802427c:	f001 0101 	and.w	r1, r1, #1
 8024280:	fb08 2303 	mla	r3, r8, r3, r2
 8024284:	441f      	add	r7, r3
 8024286:	bfb8      	it	lt
 8024288:	4249      	neglt	r1, r1
 802428a:	e7c5      	b.n	8024218 <_ZN8touchgfx6Canvas6renderEh+0x8c>
 802428c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8024290:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8024294:	fb08 f303 	mul.w	r3, r8, r3
 8024298:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802429c:	441f      	add	r7, r3
 802429e:	2100      	movs	r1, #0
 80242a0:	e7bb      	b.n	802421a <_ZN8touchgfx6Canvas6renderEh+0x8e>
 80242a2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80242a6:	fb08 f203 	mul.w	r2, r8, r3
 80242aa:	89a3      	ldrh	r3, [r4, #12]
 80242ac:	2103      	movs	r1, #3
 80242ae:	fb13 2301 	smlabb	r3, r3, r1, r2
 80242b2:	e7f3      	b.n	802429c <_ZN8touchgfx6Canvas6renderEh+0x110>
 80242b4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80242b8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80242bc:	fb08 2303 	mla	r3, r8, r3, r2
 80242c0:	e7ec      	b.n	802429c <_ZN8touchgfx6Canvas6renderEh+0x110>
 80242c2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80242c6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80242ca:	fb08 f303 	mul.w	r3, r8, r3
 80242ce:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80242d2:	e7e3      	b.n	802429c <_ZN8touchgfx6Canvas6renderEh+0x110>
 80242d4:	2701      	movs	r7, #1
 80242d6:	e7b4      	b.n	8024242 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 80242d8:	200152ec 	.word	0x200152ec

080242dc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80242dc:	b510      	push	{r4, lr}
 80242de:	4b06      	ldr	r3, [pc, #24]	@ (80242f8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 80242e0:	781b      	ldrb	r3, [r3, #0]
 80242e2:	2b01      	cmp	r3, #1
 80242e4:	d107      	bne.n	80242f6 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 80242e6:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 80242ea:	680b      	ldr	r3, [r1, #0]
 80242ec:	6814      	ldr	r4, [r2, #0]
 80242ee:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80242f2:	6013      	str	r3, [r2, #0]
 80242f4:	600c      	str	r4, [r1, #0]
 80242f6:	bd10      	pop	{r4, pc}
 80242f8:	200152e4 	.word	0x200152e4

080242fc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80242fc:	b513      	push	{r0, r1, r4, lr}
 80242fe:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 8024302:	4604      	mov	r4, r0
 8024304:	e9cd 2100 	strd	r2, r1, [sp]
 8024308:	b9a3      	cbnz	r3, 8024334 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802430a:	466a      	mov	r2, sp
 802430c:	a901      	add	r1, sp, #4
 802430e:	4620      	mov	r0, r4
 8024310:	f7ff ffe4 	bl	80242dc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8024314:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8024316:	9901      	ldr	r1, [sp, #4]
 8024318:	9a00      	ldr	r2, [sp, #0]
 802431a:	1ac9      	subs	r1, r1, r3
 802431c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 802431e:	9101      	str	r1, [sp, #4]
 8024320:	1ad2      	subs	r2, r2, r3
 8024322:	2a00      	cmp	r2, #0
 8024324:	9200      	str	r2, [sp, #0]
 8024326:	da0b      	bge.n	8024340 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8024328:	2301      	movs	r3, #1
 802432a:	2900      	cmp	r1, #0
 802432c:	da0e      	bge.n	802434c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802432e:	f043 0304 	orr.w	r3, r3, #4
 8024332:	e013      	b.n	802435c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8024334:	f7ff ff08 	bl	8024148 <_ZN8touchgfx6Canvas5closeEv>
 8024338:	2800      	cmp	r0, #0
 802433a:	d1e6      	bne.n	802430a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 802433c:	b002      	add	sp, #8
 802433e:	bd10      	pop	{r4, pc}
 8024340:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8024342:	429a      	cmp	r2, r3
 8024344:	bfac      	ite	ge
 8024346:	2302      	movge	r3, #2
 8024348:	2300      	movlt	r3, #0
 802434a:	e7ee      	b.n	802432a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 802434c:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 802434e:	4281      	cmp	r1, r0
 8024350:	bfac      	ite	ge
 8024352:	2008      	movge	r0, #8
 8024354:	2000      	movlt	r0, #0
 8024356:	4318      	orrs	r0, r3
 8024358:	b2c3      	uxtb	r3, r0
 802435a:	b158      	cbz	r0, 8024374 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 802435c:	2200      	movs	r2, #0
 802435e:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 8024362:	9901      	ldr	r1, [sp, #4]
 8024364:	9a00      	ldr	r2, [sp, #0]
 8024366:	66e1      	str	r1, [r4, #108]	@ 0x6c
 8024368:	6722      	str	r2, [r4, #112]	@ 0x70
 802436a:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 802436e:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 8024372:	e7e3      	b.n	802433c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8024374:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8024378:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 802437c:	4298      	cmp	r0, r3
 802437e:	d803      	bhi.n	8024388 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8024380:	f104 0014 	add.w	r0, r4, #20
 8024384:	f7eb fe88 	bl	8010098 <_ZN8touchgfx7Outline6moveToEii>
 8024388:	2301      	movs	r3, #1
 802438a:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802438e:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8024392:	2300      	movs	r3, #0
 8024394:	e7e5      	b.n	8024362 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08024396 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8024396:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8024398:	ab02      	add	r3, sp, #8
 802439a:	4604      	mov	r4, r0
 802439c:	f843 2d08 	str.w	r2, [r3, #-8]!
 80243a0:	9101      	str	r1, [sp, #4]
 80243a2:	461a      	mov	r2, r3
 80243a4:	a901      	add	r1, sp, #4
 80243a6:	f7ff ff99 	bl	80242dc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80243aa:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 80243ac:	9901      	ldr	r1, [sp, #4]
 80243ae:	9a00      	ldr	r2, [sp, #0]
 80243b0:	1ac9      	subs	r1, r1, r3
 80243b2:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80243b4:	9101      	str	r1, [sp, #4]
 80243b6:	1ad2      	subs	r2, r2, r3
 80243b8:	2a00      	cmp	r2, #0
 80243ba:	9200      	str	r2, [sp, #0]
 80243bc:	db1c      	blt.n	80243f8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80243be:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80243c0:	429a      	cmp	r2, r3
 80243c2:	bfac      	ite	ge
 80243c4:	2002      	movge	r0, #2
 80243c6:	2000      	movlt	r0, #0
 80243c8:	2900      	cmp	r1, #0
 80243ca:	db17      	blt.n	80243fc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80243cc:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80243ce:	4299      	cmp	r1, r3
 80243d0:	bfac      	ite	ge
 80243d2:	2308      	movge	r3, #8
 80243d4:	2300      	movlt	r3, #0
 80243d6:	4303      	orrs	r3, r0
 80243d8:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 80243dc:	b2dd      	uxtb	r5, r3
 80243de:	b978      	cbnz	r0, 8024400 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80243e0:	f104 0014 	add.w	r0, r4, #20
 80243e4:	f7ff fd64 	bl	8023eb0 <_ZN8touchgfx10Rasterizer6lineToEii>
 80243e8:	9b01      	ldr	r3, [sp, #4]
 80243ea:	6623      	str	r3, [r4, #96]	@ 0x60
 80243ec:	9b00      	ldr	r3, [sp, #0]
 80243ee:	6663      	str	r3, [r4, #100]	@ 0x64
 80243f0:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 80243f4:	b002      	add	sp, #8
 80243f6:	bd70      	pop	{r4, r5, r6, pc}
 80243f8:	2001      	movs	r0, #1
 80243fa:	e7e5      	b.n	80243c8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80243fc:	2304      	movs	r3, #4
 80243fe:	e7ea      	b.n	80243d6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8024400:	b113      	cbz	r3, 8024408 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8024402:	ea10 0305 	ands.w	r3, r0, r5
 8024406:	d11c      	bne.n	8024442 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8024408:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 802440c:	f104 0614 	add.w	r6, r4, #20
 8024410:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 8024414:	b98b      	cbnz	r3, 802443a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8024416:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 802441a:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 802441e:	4298      	cmp	r0, r3
 8024420:	d802      	bhi.n	8024428 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8024422:	4630      	mov	r0, r6
 8024424:	f7eb fe38 	bl	8010098 <_ZN8touchgfx7Outline6moveToEii>
 8024428:	2301      	movs	r3, #1
 802442a:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802442e:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8024432:	e9dd 2100 	ldrd	r2, r1, [sp]
 8024436:	4630      	mov	r0, r6
 8024438:	e7d4      	b.n	80243e4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802443a:	4630      	mov	r0, r6
 802443c:	f7ff fd38 	bl	8023eb0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8024440:	e7f7      	b.n	8024432 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8024442:	461d      	mov	r5, r3
 8024444:	e7d0      	b.n	80243e8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08024448 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
 8024448:	b538      	push	{r3, r4, r5, lr}
 802444a:	ed2d 8b10 	vpush	{d8-d15}
 802444e:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
 8024452:	ed9f ba5a 	vldr	s22, [pc, #360]	@ 80245bc <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
 8024456:	4605      	mov	r5, r0
 8024458:	eeb0 ca40 	vmov.f32	s24, s0
 802445c:	eef0 ca60 	vmov.f32	s25, s1
 8024460:	eeb0 da41 	vmov.f32	s26, s2
 8024464:	eef0 da61 	vmov.f32	s27, s3
 8024468:	eeb0 ea42 	vmov.f32	s28, s4
 802446c:	eef0 ea62 	vmov.f32	s29, s5
 8024470:	460c      	mov	r4, r1
 8024472:	eef0 aa6b 	vmov.f32	s21, s23
 8024476:	2c08      	cmp	r4, #8
 8024478:	d86e      	bhi.n	8024558 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
 802447a:	ee7e 6a4c 	vsub.f32	s13, s28, s24
 802447e:	ee7d 7aee 	vsub.f32	s15, s27, s29
 8024482:	ee3d 6a4e 	vsub.f32	s12, s26, s28
 8024486:	ee3e 7aec 	vsub.f32	s14, s29, s25
 802448a:	ee66 7ae7 	vnmul.f32	s15, s13, s15
 802448e:	ee3c fa0d 	vadd.f32	s30, s24, s26
 8024492:	eee6 7a07 	vfma.f32	s15, s12, s14
 8024496:	ee7c faad 	vadd.f32	s31, s25, s27
 802449a:	ee7d 9a0e 	vadd.f32	s19, s26, s28
 802449e:	ee3d aaae 	vadd.f32	s20, s27, s29
 80244a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80244a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80244aa:	ee2f fa2b 	vmul.f32	s30, s30, s23
 80244ae:	ee6f faab 	vmul.f32	s31, s31, s23
 80244b2:	ee69 9aab 	vmul.f32	s19, s19, s23
 80244b6:	ee2a aa2b 	vmul.f32	s20, s20, s23
 80244ba:	bf48      	it	mi
 80244bc:	eef1 7a67 	vnegmi.f32	s15, s15
 80244c0:	ee7f 8a29 	vadd.f32	s17, s30, s19
 80244c4:	ee3f 9a8a 	vadd.f32	s18, s31, s20
 80244c8:	eef4 7acb 	vcmpe.f32	s15, s22
 80244cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80244d0:	ee68 8aab 	vmul.f32	s17, s17, s23
 80244d4:	ee29 9a2b 	vmul.f32	s18, s18, s23
 80244d8:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
 80244dc:	dd3f      	ble.n	802455e <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
 80244de:	ee27 7a07 	vmul.f32	s14, s14, s14
 80244e2:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80244e6:	eea6 7aa6 	vfma.f32	s14, s13, s13
 80244ea:	ee27 7a06 	vmul.f32	s14, s14, s12
 80244ee:	eef4 7ac7 	vcmpe.f32	s15, s14
 80244f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80244f6:	d847      	bhi.n	8024588 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 80244f8:	ee7e 0a4d 	vsub.f32	s1, s28, s26
 80244fc:	ee3e 0aed 	vsub.f32	s0, s29, s27
 8024500:	f000 fa3b 	bl	802497a <atan2f>
 8024504:	ee7d 0a4c 	vsub.f32	s1, s26, s24
 8024508:	eeb0 8a40 	vmov.f32	s16, s0
 802450c:	ee3d 0aec 	vsub.f32	s0, s27, s25
 8024510:	f000 fa33 	bl	802497a <atan2f>
 8024514:	ee38 0a40 	vsub.f32	s0, s16, s0
 8024518:	eddf 7a29 	vldr	s15, [pc, #164]	@ 80245c0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
 802451c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8024520:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024524:	bf48      	it	mi
 8024526:	eeb1 0a40 	vnegmi.f32	s0, s0
 802452a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802452e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024532:	bfa4      	itt	ge
 8024534:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 80245c4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
 8024538:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 802453c:	eddf 7a22 	vldr	s15, [pc, #136]	@ 80245c8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
 8024540:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8024544:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024548:	d51e      	bpl.n	8024588 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 802454a:	eef0 0a49 	vmov.f32	s1, s18
 802454e:	eeb0 0a68 	vmov.f32	s0, s17
 8024552:	4628      	mov	r0, r5
 8024554:	f7ea f9dc 	bl	800e910 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8024558:	ecbd 8b10 	vpop	{d8-d15}
 802455c:	bd38      	pop	{r3, r4, r5, pc}
 802455e:	ee7c 7a0e 	vadd.f32	s15, s24, s28
 8024562:	eeb0 7a68 	vmov.f32	s14, s17
 8024566:	eea7 7aea 	vfms.f32	s14, s15, s21
 802456a:	ee7c 7aae 	vadd.f32	s15, s25, s29
 802456e:	eef0 6a49 	vmov.f32	s13, s18
 8024572:	eee7 6aea 	vfms.f32	s13, s15, s21
 8024576:	ee66 7aa6 	vmul.f32	s15, s13, s13
 802457a:	eee7 7a07 	vfma.f32	s15, s14, s14
 802457e:	eef4 7ac6 	vcmpe.f32	s15, s12
 8024582:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024586:	d9e0      	bls.n	802454a <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
 8024588:	3401      	adds	r4, #1
 802458a:	eef0 0a6c 	vmov.f32	s1, s25
 802458e:	eeb0 0a4c 	vmov.f32	s0, s24
 8024592:	4621      	mov	r1, r4
 8024594:	eef0 2a49 	vmov.f32	s5, s18
 8024598:	eeb0 2a68 	vmov.f32	s4, s17
 802459c:	eef0 1a6f 	vmov.f32	s3, s31
 80245a0:	eeb0 1a4f 	vmov.f32	s2, s30
 80245a4:	4628      	mov	r0, r5
 80245a6:	f7ff ff4f 	bl	8024448 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 80245aa:	eef0 da4a 	vmov.f32	s27, s20
 80245ae:	eeb0 da69 	vmov.f32	s26, s19
 80245b2:	eef0 ca49 	vmov.f32	s25, s18
 80245b6:	eeb0 ca68 	vmov.f32	s24, s17
 80245ba:	e75c      	b.n	8024476 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
 80245bc:	2edbe6ff 	.word	0x2edbe6ff
 80245c0:	40490fdb 	.word	0x40490fdb
 80245c4:	40c90fdb 	.word	0x40c90fdb
 80245c8:	3dcccccd 	.word	0x3dcccccd

080245cc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
 80245cc:	b530      	push	{r4, r5, lr}
 80245ce:	ed2d 8b10 	vpush	{d8-d15}
 80245d2:	4604      	mov	r4, r0
 80245d4:	b085      	sub	sp, #20
 80245d6:	eef0 8a40 	vmov.f32	s17, s0
 80245da:	eef0 9a60 	vmov.f32	s19, s1
 80245de:	eef0 fa41 	vmov.f32	s31, s2
 80245e2:	eeb0 fa61 	vmov.f32	s30, s3
 80245e6:	eef0 ba42 	vmov.f32	s23, s4
 80245ea:	eeb0 ca62 	vmov.f32	s24, s5
 80245ee:	eef0 aa43 	vmov.f32	s21, s6
 80245f2:	eeb0 ba63 	vmov.f32	s22, s7
 80245f6:	460d      	mov	r5, r1
 80245f8:	2d08      	cmp	r5, #8
 80245fa:	f200 8115 	bhi.w	8024828 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x25c>
 80245fe:	ee3b 6aaa 	vadd.f32	s12, s23, s21
 8024602:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8024606:	ee7f 6aab 	vadd.f32	s13, s31, s23
 802460a:	ee26 6a27 	vmul.f32	s12, s12, s15
 802460e:	ee38 daaf 	vadd.f32	s26, s17, s31
 8024612:	ed8d 6a01 	vstr	s12, [sp, #4]
 8024616:	eea6 6aa7 	vfma.f32	s12, s13, s15
 802461a:	ee2d da27 	vmul.f32	s26, s26, s15
 802461e:	ee7c ca0b 	vadd.f32	s25, s24, s22
 8024622:	eeb0 ea4d 	vmov.f32	s28, s26
 8024626:	eea6 eaa7 	vfma.f32	s28, s13, s15
 802462a:	ee6c caa7 	vmul.f32	s25, s25, s15
 802462e:	ee66 6a27 	vmul.f32	s13, s12, s15
 8024632:	ee3f 7a0c 	vadd.f32	s14, s30, s24
 8024636:	edcd 6a03 	vstr	s13, [sp, #12]
 802463a:	ee79 da8f 	vadd.f32	s27, s19, s30
 802463e:	eef0 6a6c 	vmov.f32	s13, s25
 8024642:	eee7 6a27 	vfma.f32	s13, s14, s15
 8024646:	ee6d daa7 	vmul.f32	s27, s27, s15
 802464a:	ee2e ea27 	vmul.f32	s28, s28, s15
 802464e:	eef0 ea6d 	vmov.f32	s29, s27
 8024652:	eee7 ea27 	vfma.f32	s29, s14, s15
 8024656:	ee26 7aa7 	vmul.f32	s14, s13, s15
 802465a:	ee6e eaa7 	vmul.f32	s29, s29, s15
 802465e:	ed8d 7a02 	vstr	s14, [sp, #8]
 8024662:	ed9d 7a03 	vldr	s14, [sp, #12]
 8024666:	ee3e 9a07 	vadd.f32	s18, s28, s14
 802466a:	ed9d 7a02 	vldr	s14, [sp, #8]
 802466e:	ee3e aa87 	vadd.f32	s20, s29, s14
 8024672:	ee29 9a27 	vmul.f32	s18, s18, s15
 8024676:	ee2a aa27 	vmul.f32	s20, s20, s15
 802467a:	eef0 6a67 	vmov.f32	s13, s15
 802467e:	2d00      	cmp	r5, #0
 8024680:	f000 810d 	beq.w	802489e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8024684:	ee7a 5ae8 	vsub.f32	s11, s21, s17
 8024688:	ee3f 7a4b 	vsub.f32	s14, s30, s22
 802468c:	ee7b 7a69 	vsub.f32	s15, s22, s19
 8024690:	ee3f 6aea 	vsub.f32	s12, s31, s21
 8024694:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8024698:	ee3b 5aea 	vsub.f32	s10, s23, s21
 802469c:	eea6 7a27 	vfma.f32	s14, s12, s15
 80246a0:	ee3c 6a4b 	vsub.f32	s12, s24, s22
 80246a4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80246a8:	ee25 6ac6 	vnmul.f32	s12, s11, s12
 80246ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80246b0:	eea5 6a27 	vfma.f32	s12, s10, s15
 80246b4:	eddf 4a8b 	vldr	s9, [pc, #556]	@ 80248e4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 80246b8:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80246bc:	bf48      	it	mi
 80246be:	eeb1 7a47 	vnegmi.f32	s14, s14
 80246c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80246c6:	eeb4 7ae4 	vcmpe.f32	s14, s9
 80246ca:	bf48      	it	mi
 80246cc:	eeb1 6a46 	vnegmi.f32	s12, s12
 80246d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80246d4:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
 80246d8:	f340 80aa 	ble.w	8024830 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x264>
 80246dc:	eeb4 6ae4 	vcmpe.f32	s12, s9
 80246e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80246e4:	dd5c      	ble.n	80247a0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d4>
 80246e6:	ee65 5aa5 	vmul.f32	s11, s11, s11
 80246ea:	ee37 7a06 	vadd.f32	s14, s14, s12
 80246ee:	eee7 5aa7 	vfma.f32	s11, s15, s15
 80246f2:	ee27 7a07 	vmul.f32	s14, s14, s14
 80246f6:	ee65 7a85 	vmul.f32	s15, s11, s10
 80246fa:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80246fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024702:	f200 80cc 	bhi.w	802489e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8024706:	ee7b 0aef 	vsub.f32	s1, s23, s31
 802470a:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 802470e:	f000 f934 	bl	802497a <atan2f>
 8024712:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 8024716:	eeb0 8a40 	vmov.f32	s16, s0
 802471a:	ee3f 0a69 	vsub.f32	s0, s30, s19
 802471e:	f000 f92c 	bl	802497a <atan2f>
 8024722:	ee38 fa40 	vsub.f32	s30, s16, s0
 8024726:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 802472a:	eeb5 fac0 	vcmpe.f32	s30, #0.0
 802472e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024732:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 8024736:	bf48      	it	mi
 8024738:	eeb1 fa4f 	vnegmi.f32	s30, s30
 802473c:	f000 f91d 	bl	802497a <atan2f>
 8024740:	ee30 0a48 	vsub.f32	s0, s0, s16
 8024744:	eddf 7a68 	vldr	s15, [pc, #416]	@ 80248e8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8024748:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802474c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024750:	eeb4 fae7 	vcmpe.f32	s30, s15
 8024754:	bf48      	it	mi
 8024756:	eeb1 0a40 	vnegmi.f32	s0, s0
 802475a:	eddf 7a63 	vldr	s15, [pc, #396]	@ 80248e8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 802475e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024762:	bfa8      	it	ge
 8024764:	ed9f 7a61 	vldrge	s14, [pc, #388]	@ 80248ec <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8024768:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802476c:	bfa8      	it	ge
 802476e:	ee37 fa4f 	vsubge.f32	s30, s14, s30
 8024772:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024776:	bfa8      	it	ge
 8024778:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 80248ec <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 802477c:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 80248f0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 8024780:	bfa8      	it	ge
 8024782:	ee37 0a40 	vsubge.f32	s0, s14, s0
 8024786:	ee3f 0a00 	vadd.f32	s0, s30, s0
 802478a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802478e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024792:	f140 8084 	bpl.w	802489e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8024796:	eef0 0a4a 	vmov.f32	s1, s20
 802479a:	eeb0 0a49 	vmov.f32	s0, s18
 802479e:	e040      	b.n	8024822 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x256>
 80247a0:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80247a4:	ee27 7a07 	vmul.f32	s14, s14, s14
 80247a8:	eee5 7aa5 	vfma.f32	s15, s11, s11
 80247ac:	ee67 7a85 	vmul.f32	s15, s15, s10
 80247b0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80247b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80247b8:	d871      	bhi.n	802489e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80247ba:	ee7b 0aef 	vsub.f32	s1, s23, s31
 80247be:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 80247c2:	f000 f8da 	bl	802497a <atan2f>
 80247c6:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 80247ca:	eeb0 8a40 	vmov.f32	s16, s0
 80247ce:	ee3f 0a69 	vsub.f32	s0, s30, s19
 80247d2:	f000 f8d2 	bl	802497a <atan2f>
 80247d6:	ee38 0a40 	vsub.f32	s0, s16, s0
 80247da:	eddf 7a43 	vldr	s15, [pc, #268]	@ 80248e8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 80247de:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80247e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80247e6:	bf48      	it	mi
 80247e8:	eeb1 0a40 	vnegmi.f32	s0, s0
 80247ec:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80247f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80247f4:	bfa4      	itt	ge
 80247f6:	eddf 7a3d 	vldrge	s15, [pc, #244]	@ 80248ec <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 80247fa:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 80247fe:	eddf 7a3c 	vldr	s15, [pc, #240]	@ 80248f0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 8024802:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8024806:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802480a:	d548      	bpl.n	802489e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802480c:	eef0 0a4f 	vmov.f32	s1, s30
 8024810:	eeb0 0a6f 	vmov.f32	s0, s31
 8024814:	4620      	mov	r0, r4
 8024816:	f7ea f87b 	bl	800e910 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 802481a:	eef0 0a4c 	vmov.f32	s1, s24
 802481e:	eeb0 0a6b 	vmov.f32	s0, s23
 8024822:	4620      	mov	r0, r4
 8024824:	f7ea f874 	bl	800e910 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8024828:	b005      	add	sp, #20
 802482a:	ecbd 8b10 	vpop	{d8-d15}
 802482e:	bd30      	pop	{r4, r5, pc}
 8024830:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 80248e4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 8024834:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8024838:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802483c:	dd19      	ble.n	8024872 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a6>
 802483e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8024842:	ee26 7a06 	vmul.f32	s14, s12, s12
 8024846:	eee5 7aa5 	vfma.f32	s15, s11, s11
 802484a:	ee67 7a85 	vmul.f32	s15, s15, s10
 802484e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8024852:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024856:	d822      	bhi.n	802489e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8024858:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 802485c:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 8024860:	f000 f88b 	bl	802497a <atan2f>
 8024864:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8024868:	eeb0 8a40 	vmov.f32	s16, s0
 802486c:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8024870:	e7af      	b.n	80247d2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x206>
 8024872:	ee78 7aaa 	vadd.f32	s15, s17, s21
 8024876:	eeb0 7a49 	vmov.f32	s14, s18
 802487a:	eea7 7ae6 	vfms.f32	s14, s15, s13
 802487e:	ee79 7a8b 	vadd.f32	s15, s19, s22
 8024882:	eeb0 6a4a 	vmov.f32	s12, s20
 8024886:	eea7 6ae6 	vfms.f32	s12, s15, s13
 802488a:	ee66 7a06 	vmul.f32	s15, s12, s12
 802488e:	eee7 7a07 	vfma.f32	s15, s14, s14
 8024892:	eef4 7ac5 	vcmpe.f32	s15, s10
 8024896:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802489a:	f67f af7c 	bls.w	8024796 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1ca>
 802489e:	3501      	adds	r5, #1
 80248a0:	eef0 0a69 	vmov.f32	s1, s19
 80248a4:	eeb0 0a68 	vmov.f32	s0, s17
 80248a8:	4629      	mov	r1, r5
 80248aa:	eef0 3a4a 	vmov.f32	s7, s20
 80248ae:	eeb0 3a49 	vmov.f32	s6, s18
 80248b2:	eef0 2a6e 	vmov.f32	s5, s29
 80248b6:	eeb0 2a4e 	vmov.f32	s4, s28
 80248ba:	eef0 1a6d 	vmov.f32	s3, s27
 80248be:	eeb0 1a4d 	vmov.f32	s2, s26
 80248c2:	4620      	mov	r0, r4
 80248c4:	f7ff fe82 	bl	80245cc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 80248c8:	eeb0 ca6c 	vmov.f32	s24, s25
 80248cc:	eddd ba01 	vldr	s23, [sp, #4]
 80248d0:	ed9d fa02 	vldr	s30, [sp, #8]
 80248d4:	eddd fa03 	vldr	s31, [sp, #12]
 80248d8:	eef0 9a4a 	vmov.f32	s19, s20
 80248dc:	eef0 8a49 	vmov.f32	s17, s18
 80248e0:	e68a      	b.n	80245f8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
 80248e2:	bf00      	nop
 80248e4:	2edbe6ff 	.word	0x2edbe6ff
 80248e8:	40490fdb 	.word	0x40490fdb
 80248ec:	40c90fdb 	.word	0x40c90fdb
 80248f0:	3dcccccd 	.word	0x3dcccccd

080248f4 <_ZN8touchgfx6CanvasD1Ev>:
 80248f4:	b510      	push	{r4, lr}
 80248f6:	4b04      	ldr	r3, [pc, #16]	@ (8024908 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 80248f8:	4604      	mov	r4, r0
 80248fa:	f840 3b14 	str.w	r3, [r0], #20
 80248fe:	f7ea fec5 	bl	800f68c <_ZN8touchgfx7OutlineD1Ev>
 8024902:	4620      	mov	r0, r4
 8024904:	bd10      	pop	{r4, pc}
 8024906:	bf00      	nop
 8024908:	080290c0 	.word	0x080290c0

0802490c <_ZN8touchgfx6CanvasD0Ev>:
 802490c:	b510      	push	{r4, lr}
 802490e:	4604      	mov	r4, r0
 8024910:	f7ff fff0 	bl	80248f4 <_ZN8touchgfx6CanvasD1Ev>
 8024914:	4620      	mov	r0, r4
 8024916:	2174      	movs	r1, #116	@ 0x74
 8024918:	f000 f807 	bl	802492a <_ZdlPvj>
 802491c:	4620      	mov	r0, r4
 802491e:	bd10      	pop	{r4, pc}

08024920 <__aeabi_atexit>:
 8024920:	460b      	mov	r3, r1
 8024922:	4601      	mov	r1, r0
 8024924:	4618      	mov	r0, r3
 8024926:	f001 b81f 	b.w	8025968 <__cxa_atexit>

0802492a <_ZdlPvj>:
 802492a:	f000 b812 	b.w	8024952 <_ZdlPv>

0802492e <__cxa_guard_acquire>:
 802492e:	6802      	ldr	r2, [r0, #0]
 8024930:	07d2      	lsls	r2, r2, #31
 8024932:	4603      	mov	r3, r0
 8024934:	d405      	bmi.n	8024942 <__cxa_guard_acquire+0x14>
 8024936:	7842      	ldrb	r2, [r0, #1]
 8024938:	b102      	cbz	r2, 802493c <__cxa_guard_acquire+0xe>
 802493a:	deff      	udf	#255	@ 0xff
 802493c:	2001      	movs	r0, #1
 802493e:	7058      	strb	r0, [r3, #1]
 8024940:	4770      	bx	lr
 8024942:	2000      	movs	r0, #0
 8024944:	4770      	bx	lr

08024946 <__cxa_guard_release>:
 8024946:	2301      	movs	r3, #1
 8024948:	6003      	str	r3, [r0, #0]
 802494a:	4770      	bx	lr

0802494c <__cxa_pure_virtual>:
 802494c:	b508      	push	{r3, lr}
 802494e:	f000 f80f 	bl	8024970 <_ZSt9terminatev>

08024952 <_ZdlPv>:
 8024952:	f000 bf53 	b.w	80257fc <free>

08024956 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8024956:	b508      	push	{r3, lr}
 8024958:	4780      	blx	r0
 802495a:	f000 ff1b 	bl	8025794 <abort>
	...

08024960 <_ZSt13get_terminatev>:
 8024960:	4b02      	ldr	r3, [pc, #8]	@ (802496c <_ZSt13get_terminatev+0xc>)
 8024962:	6818      	ldr	r0, [r3, #0]
 8024964:	f3bf 8f5b 	dmb	ish
 8024968:	4770      	bx	lr
 802496a:	bf00      	nop
 802496c:	20000100 	.word	0x20000100

08024970 <_ZSt9terminatev>:
 8024970:	b508      	push	{r3, lr}
 8024972:	f7ff fff5 	bl	8024960 <_ZSt13get_terminatev>
 8024976:	f7ff ffee 	bl	8024956 <_ZN10__cxxabiv111__terminateEPFvvE>

0802497a <atan2f>:
 802497a:	f000 b94d 	b.w	8024c18 <__ieee754_atan2f>
	...

08024980 <sqrtf>:
 8024980:	b508      	push	{r3, lr}
 8024982:	ed2d 8b02 	vpush	{d8}
 8024986:	eeb0 8a40 	vmov.f32	s16, s0
 802498a:	f000 f8a1 	bl	8024ad0 <__ieee754_sqrtf>
 802498e:	eeb4 8a48 	vcmp.f32	s16, s16
 8024992:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024996:	d60c      	bvs.n	80249b2 <sqrtf+0x32>
 8024998:	eddf 8a07 	vldr	s17, [pc, #28]	@ 80249b8 <sqrtf+0x38>
 802499c:	eeb4 8ae8 	vcmpe.f32	s16, s17
 80249a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80249a4:	d505      	bpl.n	80249b2 <sqrtf+0x32>
 80249a6:	f001 f9a7 	bl	8025cf8 <__errno>
 80249aa:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 80249ae:	2321      	movs	r3, #33	@ 0x21
 80249b0:	6003      	str	r3, [r0, #0]
 80249b2:	ecbd 8b02 	vpop	{d8}
 80249b6:	bd08      	pop	{r3, pc}
 80249b8:	00000000 	.word	0x00000000

080249bc <cosf>:
 80249bc:	ee10 3a10 	vmov	r3, s0
 80249c0:	b507      	push	{r0, r1, r2, lr}
 80249c2:	4a1e      	ldr	r2, [pc, #120]	@ (8024a3c <cosf+0x80>)
 80249c4:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80249c8:	4293      	cmp	r3, r2
 80249ca:	d806      	bhi.n	80249da <cosf+0x1e>
 80249cc:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 8024a40 <cosf+0x84>
 80249d0:	b003      	add	sp, #12
 80249d2:	f85d eb04 	ldr.w	lr, [sp], #4
 80249d6:	f000 b87f 	b.w	8024ad8 <__kernel_cosf>
 80249da:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80249de:	d304      	bcc.n	80249ea <cosf+0x2e>
 80249e0:	ee30 0a40 	vsub.f32	s0, s0, s0
 80249e4:	b003      	add	sp, #12
 80249e6:	f85d fb04 	ldr.w	pc, [sp], #4
 80249ea:	4668      	mov	r0, sp
 80249ec:	f000 f9b4 	bl	8024d58 <__ieee754_rem_pio2f>
 80249f0:	f000 0003 	and.w	r0, r0, #3
 80249f4:	2801      	cmp	r0, #1
 80249f6:	d009      	beq.n	8024a0c <cosf+0x50>
 80249f8:	2802      	cmp	r0, #2
 80249fa:	d010      	beq.n	8024a1e <cosf+0x62>
 80249fc:	b9b0      	cbnz	r0, 8024a2c <cosf+0x70>
 80249fe:	eddd 0a01 	vldr	s1, [sp, #4]
 8024a02:	ed9d 0a00 	vldr	s0, [sp]
 8024a06:	f000 f867 	bl	8024ad8 <__kernel_cosf>
 8024a0a:	e7eb      	b.n	80249e4 <cosf+0x28>
 8024a0c:	eddd 0a01 	vldr	s1, [sp, #4]
 8024a10:	ed9d 0a00 	vldr	s0, [sp]
 8024a14:	f000 f8b8 	bl	8024b88 <__kernel_sinf>
 8024a18:	eeb1 0a40 	vneg.f32	s0, s0
 8024a1c:	e7e2      	b.n	80249e4 <cosf+0x28>
 8024a1e:	eddd 0a01 	vldr	s1, [sp, #4]
 8024a22:	ed9d 0a00 	vldr	s0, [sp]
 8024a26:	f000 f857 	bl	8024ad8 <__kernel_cosf>
 8024a2a:	e7f5      	b.n	8024a18 <cosf+0x5c>
 8024a2c:	eddd 0a01 	vldr	s1, [sp, #4]
 8024a30:	ed9d 0a00 	vldr	s0, [sp]
 8024a34:	2001      	movs	r0, #1
 8024a36:	f000 f8a7 	bl	8024b88 <__kernel_sinf>
 8024a3a:	e7d3      	b.n	80249e4 <cosf+0x28>
 8024a3c:	3f490fd8 	.word	0x3f490fd8
 8024a40:	00000000 	.word	0x00000000

08024a44 <sinf>:
 8024a44:	ee10 3a10 	vmov	r3, s0
 8024a48:	b507      	push	{r0, r1, r2, lr}
 8024a4a:	4a1f      	ldr	r2, [pc, #124]	@ (8024ac8 <sinf+0x84>)
 8024a4c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8024a50:	4293      	cmp	r3, r2
 8024a52:	d807      	bhi.n	8024a64 <sinf+0x20>
 8024a54:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 8024acc <sinf+0x88>
 8024a58:	2000      	movs	r0, #0
 8024a5a:	b003      	add	sp, #12
 8024a5c:	f85d eb04 	ldr.w	lr, [sp], #4
 8024a60:	f000 b892 	b.w	8024b88 <__kernel_sinf>
 8024a64:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8024a68:	d304      	bcc.n	8024a74 <sinf+0x30>
 8024a6a:	ee30 0a40 	vsub.f32	s0, s0, s0
 8024a6e:	b003      	add	sp, #12
 8024a70:	f85d fb04 	ldr.w	pc, [sp], #4
 8024a74:	4668      	mov	r0, sp
 8024a76:	f000 f96f 	bl	8024d58 <__ieee754_rem_pio2f>
 8024a7a:	f000 0003 	and.w	r0, r0, #3
 8024a7e:	2801      	cmp	r0, #1
 8024a80:	d00a      	beq.n	8024a98 <sinf+0x54>
 8024a82:	2802      	cmp	r0, #2
 8024a84:	d00f      	beq.n	8024aa6 <sinf+0x62>
 8024a86:	b9c0      	cbnz	r0, 8024aba <sinf+0x76>
 8024a88:	eddd 0a01 	vldr	s1, [sp, #4]
 8024a8c:	ed9d 0a00 	vldr	s0, [sp]
 8024a90:	2001      	movs	r0, #1
 8024a92:	f000 f879 	bl	8024b88 <__kernel_sinf>
 8024a96:	e7ea      	b.n	8024a6e <sinf+0x2a>
 8024a98:	eddd 0a01 	vldr	s1, [sp, #4]
 8024a9c:	ed9d 0a00 	vldr	s0, [sp]
 8024aa0:	f000 f81a 	bl	8024ad8 <__kernel_cosf>
 8024aa4:	e7e3      	b.n	8024a6e <sinf+0x2a>
 8024aa6:	eddd 0a01 	vldr	s1, [sp, #4]
 8024aaa:	ed9d 0a00 	vldr	s0, [sp]
 8024aae:	2001      	movs	r0, #1
 8024ab0:	f000 f86a 	bl	8024b88 <__kernel_sinf>
 8024ab4:	eeb1 0a40 	vneg.f32	s0, s0
 8024ab8:	e7d9      	b.n	8024a6e <sinf+0x2a>
 8024aba:	eddd 0a01 	vldr	s1, [sp, #4]
 8024abe:	ed9d 0a00 	vldr	s0, [sp]
 8024ac2:	f000 f809 	bl	8024ad8 <__kernel_cosf>
 8024ac6:	e7f5      	b.n	8024ab4 <sinf+0x70>
 8024ac8:	3f490fd8 	.word	0x3f490fd8
 8024acc:	00000000 	.word	0x00000000

08024ad0 <__ieee754_sqrtf>:
 8024ad0:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8024ad4:	4770      	bx	lr
	...

08024ad8 <__kernel_cosf>:
 8024ad8:	ee10 3a10 	vmov	r3, s0
 8024adc:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8024ae0:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8024ae4:	eef0 6a40 	vmov.f32	s13, s0
 8024ae8:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8024aec:	d204      	bcs.n	8024af8 <__kernel_cosf+0x20>
 8024aee:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 8024af2:	ee17 2a90 	vmov	r2, s15
 8024af6:	b342      	cbz	r2, 8024b4a <__kernel_cosf+0x72>
 8024af8:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8024afc:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8024b68 <__kernel_cosf+0x90>
 8024b00:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 8024b6c <__kernel_cosf+0x94>
 8024b04:	4a1a      	ldr	r2, [pc, #104]	@ (8024b70 <__kernel_cosf+0x98>)
 8024b06:	eea7 6a27 	vfma.f32	s12, s14, s15
 8024b0a:	4293      	cmp	r3, r2
 8024b0c:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8024b74 <__kernel_cosf+0x9c>
 8024b10:	eee6 7a07 	vfma.f32	s15, s12, s14
 8024b14:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 8024b78 <__kernel_cosf+0xa0>
 8024b18:	eea7 6a87 	vfma.f32	s12, s15, s14
 8024b1c:	eddf 7a17 	vldr	s15, [pc, #92]	@ 8024b7c <__kernel_cosf+0xa4>
 8024b20:	eee6 7a07 	vfma.f32	s15, s12, s14
 8024b24:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 8024b80 <__kernel_cosf+0xa8>
 8024b28:	eea7 6a87 	vfma.f32	s12, s15, s14
 8024b2c:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 8024b30:	ee26 6a07 	vmul.f32	s12, s12, s14
 8024b34:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8024b38:	eee7 0a06 	vfma.f32	s1, s14, s12
 8024b3c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8024b40:	d804      	bhi.n	8024b4c <__kernel_cosf+0x74>
 8024b42:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8024b46:	ee30 0a67 	vsub.f32	s0, s0, s15
 8024b4a:	4770      	bx	lr
 8024b4c:	4a0d      	ldr	r2, [pc, #52]	@ (8024b84 <__kernel_cosf+0xac>)
 8024b4e:	4293      	cmp	r3, r2
 8024b50:	bf9a      	itte	ls
 8024b52:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 8024b56:	ee07 3a10 	vmovls	s14, r3
 8024b5a:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 8024b5e:	ee30 0a47 	vsub.f32	s0, s0, s14
 8024b62:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8024b66:	e7ec      	b.n	8024b42 <__kernel_cosf+0x6a>
 8024b68:	ad47d74e 	.word	0xad47d74e
 8024b6c:	310f74f6 	.word	0x310f74f6
 8024b70:	3e999999 	.word	0x3e999999
 8024b74:	b493f27c 	.word	0xb493f27c
 8024b78:	37d00d01 	.word	0x37d00d01
 8024b7c:	bab60b61 	.word	0xbab60b61
 8024b80:	3d2aaaab 	.word	0x3d2aaaab
 8024b84:	3f480000 	.word	0x3f480000

08024b88 <__kernel_sinf>:
 8024b88:	ee10 3a10 	vmov	r3, s0
 8024b8c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8024b90:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8024b94:	d204      	bcs.n	8024ba0 <__kernel_sinf+0x18>
 8024b96:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8024b9a:	ee17 3a90 	vmov	r3, s15
 8024b9e:	b35b      	cbz	r3, 8024bf8 <__kernel_sinf+0x70>
 8024ba0:	ee20 7a00 	vmul.f32	s14, s0, s0
 8024ba4:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8024bfc <__kernel_sinf+0x74>
 8024ba8:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 8024c00 <__kernel_sinf+0x78>
 8024bac:	eea7 6a27 	vfma.f32	s12, s14, s15
 8024bb0:	eddf 7a14 	vldr	s15, [pc, #80]	@ 8024c04 <__kernel_sinf+0x7c>
 8024bb4:	eee6 7a07 	vfma.f32	s15, s12, s14
 8024bb8:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 8024c08 <__kernel_sinf+0x80>
 8024bbc:	eea7 6a87 	vfma.f32	s12, s15, s14
 8024bc0:	eddf 7a12 	vldr	s15, [pc, #72]	@ 8024c0c <__kernel_sinf+0x84>
 8024bc4:	ee60 6a07 	vmul.f32	s13, s0, s14
 8024bc8:	eee6 7a07 	vfma.f32	s15, s12, s14
 8024bcc:	b930      	cbnz	r0, 8024bdc <__kernel_sinf+0x54>
 8024bce:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 8024c10 <__kernel_sinf+0x88>
 8024bd2:	eea7 6a27 	vfma.f32	s12, s14, s15
 8024bd6:	eea6 0a26 	vfma.f32	s0, s12, s13
 8024bda:	4770      	bx	lr
 8024bdc:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8024be0:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8024be4:	eee0 7a86 	vfma.f32	s15, s1, s12
 8024be8:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8024bec:	eddf 7a09 	vldr	s15, [pc, #36]	@ 8024c14 <__kernel_sinf+0x8c>
 8024bf0:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8024bf4:	ee30 0a60 	vsub.f32	s0, s0, s1
 8024bf8:	4770      	bx	lr
 8024bfa:	bf00      	nop
 8024bfc:	2f2ec9d3 	.word	0x2f2ec9d3
 8024c00:	b2d72f34 	.word	0xb2d72f34
 8024c04:	3638ef1b 	.word	0x3638ef1b
 8024c08:	b9500d01 	.word	0xb9500d01
 8024c0c:	3c088889 	.word	0x3c088889
 8024c10:	be2aaaab 	.word	0xbe2aaaab
 8024c14:	3e2aaaab 	.word	0x3e2aaaab

08024c18 <__ieee754_atan2f>:
 8024c18:	ee10 2a90 	vmov	r2, s1
 8024c1c:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 8024c20:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8024c24:	b510      	push	{r4, lr}
 8024c26:	eef0 7a40 	vmov.f32	s15, s0
 8024c2a:	d806      	bhi.n	8024c3a <__ieee754_atan2f+0x22>
 8024c2c:	ee10 0a10 	vmov	r0, s0
 8024c30:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 8024c34:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8024c38:	d904      	bls.n	8024c44 <__ieee754_atan2f+0x2c>
 8024c3a:	ee77 7aa0 	vadd.f32	s15, s15, s1
 8024c3e:	eeb0 0a67 	vmov.f32	s0, s15
 8024c42:	bd10      	pop	{r4, pc}
 8024c44:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8024c48:	d103      	bne.n	8024c52 <__ieee754_atan2f+0x3a>
 8024c4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024c4e:	f000 b9b3 	b.w	8024fb8 <atanf>
 8024c52:	1794      	asrs	r4, r2, #30
 8024c54:	f004 0402 	and.w	r4, r4, #2
 8024c58:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 8024c5c:	b943      	cbnz	r3, 8024c70 <__ieee754_atan2f+0x58>
 8024c5e:	2c02      	cmp	r4, #2
 8024c60:	d05e      	beq.n	8024d20 <__ieee754_atan2f+0x108>
 8024c62:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8024d34 <__ieee754_atan2f+0x11c>
 8024c66:	2c03      	cmp	r4, #3
 8024c68:	bf08      	it	eq
 8024c6a:	eef0 7a47 	vmoveq.f32	s15, s14
 8024c6e:	e7e6      	b.n	8024c3e <__ieee754_atan2f+0x26>
 8024c70:	b941      	cbnz	r1, 8024c84 <__ieee754_atan2f+0x6c>
 8024c72:	eddf 7a31 	vldr	s15, [pc, #196]	@ 8024d38 <__ieee754_atan2f+0x120>
 8024c76:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8024d3c <__ieee754_atan2f+0x124>
 8024c7a:	2800      	cmp	r0, #0
 8024c7c:	bfa8      	it	ge
 8024c7e:	eef0 7a47 	vmovge.f32	s15, s14
 8024c82:	e7dc      	b.n	8024c3e <__ieee754_atan2f+0x26>
 8024c84:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8024c88:	d110      	bne.n	8024cac <__ieee754_atan2f+0x94>
 8024c8a:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8024c8e:	f104 34ff 	add.w	r4, r4, #4294967295
 8024c92:	d107      	bne.n	8024ca4 <__ieee754_atan2f+0x8c>
 8024c94:	2c02      	cmp	r4, #2
 8024c96:	d846      	bhi.n	8024d26 <__ieee754_atan2f+0x10e>
 8024c98:	4b29      	ldr	r3, [pc, #164]	@ (8024d40 <__ieee754_atan2f+0x128>)
 8024c9a:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8024c9e:	edd3 7a00 	vldr	s15, [r3]
 8024ca2:	e7cc      	b.n	8024c3e <__ieee754_atan2f+0x26>
 8024ca4:	2c02      	cmp	r4, #2
 8024ca6:	d841      	bhi.n	8024d2c <__ieee754_atan2f+0x114>
 8024ca8:	4b26      	ldr	r3, [pc, #152]	@ (8024d44 <__ieee754_atan2f+0x12c>)
 8024caa:	e7f6      	b.n	8024c9a <__ieee754_atan2f+0x82>
 8024cac:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8024cb0:	d0df      	beq.n	8024c72 <__ieee754_atan2f+0x5a>
 8024cb2:	1a5b      	subs	r3, r3, r1
 8024cb4:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 8024cb8:	ea4f 51e3 	mov.w	r1, r3, asr #23
 8024cbc:	da1a      	bge.n	8024cf4 <__ieee754_atan2f+0xdc>
 8024cbe:	2a00      	cmp	r2, #0
 8024cc0:	da01      	bge.n	8024cc6 <__ieee754_atan2f+0xae>
 8024cc2:	313c      	adds	r1, #60	@ 0x3c
 8024cc4:	db19      	blt.n	8024cfa <__ieee754_atan2f+0xe2>
 8024cc6:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 8024cca:	f000 fa49 	bl	8025160 <fabsf>
 8024cce:	f000 f973 	bl	8024fb8 <atanf>
 8024cd2:	eef0 7a40 	vmov.f32	s15, s0
 8024cd6:	2c01      	cmp	r4, #1
 8024cd8:	d012      	beq.n	8024d00 <__ieee754_atan2f+0xe8>
 8024cda:	2c02      	cmp	r4, #2
 8024cdc:	d017      	beq.n	8024d0e <__ieee754_atan2f+0xf6>
 8024cde:	2c00      	cmp	r4, #0
 8024ce0:	d0ad      	beq.n	8024c3e <__ieee754_atan2f+0x26>
 8024ce2:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8024d48 <__ieee754_atan2f+0x130>
 8024ce6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8024cea:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 8024d4c <__ieee754_atan2f+0x134>
 8024cee:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8024cf2:	e7a4      	b.n	8024c3e <__ieee754_atan2f+0x26>
 8024cf4:	eddf 7a11 	vldr	s15, [pc, #68]	@ 8024d3c <__ieee754_atan2f+0x124>
 8024cf8:	e7ed      	b.n	8024cd6 <__ieee754_atan2f+0xbe>
 8024cfa:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8024d50 <__ieee754_atan2f+0x138>
 8024cfe:	e7ea      	b.n	8024cd6 <__ieee754_atan2f+0xbe>
 8024d00:	ee17 3a90 	vmov	r3, s15
 8024d04:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8024d08:	ee07 3a90 	vmov	s15, r3
 8024d0c:	e797      	b.n	8024c3e <__ieee754_atan2f+0x26>
 8024d0e:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8024d48 <__ieee754_atan2f+0x130>
 8024d12:	ee77 7a87 	vadd.f32	s15, s15, s14
 8024d16:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 8024d4c <__ieee754_atan2f+0x134>
 8024d1a:	ee77 7a67 	vsub.f32	s15, s14, s15
 8024d1e:	e78e      	b.n	8024c3e <__ieee754_atan2f+0x26>
 8024d20:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 8024d4c <__ieee754_atan2f+0x134>
 8024d24:	e78b      	b.n	8024c3e <__ieee754_atan2f+0x26>
 8024d26:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 8024d54 <__ieee754_atan2f+0x13c>
 8024d2a:	e788      	b.n	8024c3e <__ieee754_atan2f+0x26>
 8024d2c:	eddf 7a08 	vldr	s15, [pc, #32]	@ 8024d50 <__ieee754_atan2f+0x138>
 8024d30:	e785      	b.n	8024c3e <__ieee754_atan2f+0x26>
 8024d32:	bf00      	nop
 8024d34:	c0490fdb 	.word	0xc0490fdb
 8024d38:	bfc90fdb 	.word	0xbfc90fdb
 8024d3c:	3fc90fdb 	.word	0x3fc90fdb
 8024d40:	080290d8 	.word	0x080290d8
 8024d44:	080290cc 	.word	0x080290cc
 8024d48:	33bbbd2e 	.word	0x33bbbd2e
 8024d4c:	40490fdb 	.word	0x40490fdb
 8024d50:	00000000 	.word	0x00000000
 8024d54:	3f490fdb 	.word	0x3f490fdb

08024d58 <__ieee754_rem_pio2f>:
 8024d58:	b5f0      	push	{r4, r5, r6, r7, lr}
 8024d5a:	ee10 6a10 	vmov	r6, s0
 8024d5e:	4b88      	ldr	r3, [pc, #544]	@ (8024f80 <__ieee754_rem_pio2f+0x228>)
 8024d60:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8024d64:	429d      	cmp	r5, r3
 8024d66:	b087      	sub	sp, #28
 8024d68:	4604      	mov	r4, r0
 8024d6a:	d805      	bhi.n	8024d78 <__ieee754_rem_pio2f+0x20>
 8024d6c:	2300      	movs	r3, #0
 8024d6e:	ed80 0a00 	vstr	s0, [r0]
 8024d72:	6043      	str	r3, [r0, #4]
 8024d74:	2000      	movs	r0, #0
 8024d76:	e022      	b.n	8024dbe <__ieee754_rem_pio2f+0x66>
 8024d78:	4b82      	ldr	r3, [pc, #520]	@ (8024f84 <__ieee754_rem_pio2f+0x22c>)
 8024d7a:	429d      	cmp	r5, r3
 8024d7c:	d83a      	bhi.n	8024df4 <__ieee754_rem_pio2f+0x9c>
 8024d7e:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8024d82:	2e00      	cmp	r6, #0
 8024d84:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 8024f88 <__ieee754_rem_pio2f+0x230>
 8024d88:	4a80      	ldr	r2, [pc, #512]	@ (8024f8c <__ieee754_rem_pio2f+0x234>)
 8024d8a:	f023 030f 	bic.w	r3, r3, #15
 8024d8e:	dd18      	ble.n	8024dc2 <__ieee754_rem_pio2f+0x6a>
 8024d90:	4293      	cmp	r3, r2
 8024d92:	ee70 7a47 	vsub.f32	s15, s0, s14
 8024d96:	bf09      	itett	eq
 8024d98:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 8024f90 <__ieee754_rem_pio2f+0x238>
 8024d9c:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 8024f94 <__ieee754_rem_pio2f+0x23c>
 8024da0:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 8024f98 <__ieee754_rem_pio2f+0x240>
 8024da4:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8024da8:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8024dac:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8024db0:	ed80 7a00 	vstr	s14, [r0]
 8024db4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8024db8:	edc0 7a01 	vstr	s15, [r0, #4]
 8024dbc:	2001      	movs	r0, #1
 8024dbe:	b007      	add	sp, #28
 8024dc0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8024dc2:	4293      	cmp	r3, r2
 8024dc4:	ee70 7a07 	vadd.f32	s15, s0, s14
 8024dc8:	bf09      	itett	eq
 8024dca:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 8024f90 <__ieee754_rem_pio2f+0x238>
 8024dce:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 8024f94 <__ieee754_rem_pio2f+0x23c>
 8024dd2:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 8024f98 <__ieee754_rem_pio2f+0x240>
 8024dd6:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8024dda:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8024dde:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8024de2:	ed80 7a00 	vstr	s14, [r0]
 8024de6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8024dea:	edc0 7a01 	vstr	s15, [r0, #4]
 8024dee:	f04f 30ff 	mov.w	r0, #4294967295
 8024df2:	e7e4      	b.n	8024dbe <__ieee754_rem_pio2f+0x66>
 8024df4:	4b69      	ldr	r3, [pc, #420]	@ (8024f9c <__ieee754_rem_pio2f+0x244>)
 8024df6:	429d      	cmp	r5, r3
 8024df8:	d873      	bhi.n	8024ee2 <__ieee754_rem_pio2f+0x18a>
 8024dfa:	f000 f9b1 	bl	8025160 <fabsf>
 8024dfe:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 8024fa0 <__ieee754_rem_pio2f+0x248>
 8024e02:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8024e06:	eee0 7a07 	vfma.f32	s15, s0, s14
 8024e0a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8024e0e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8024e12:	ee17 0a90 	vmov	r0, s15
 8024e16:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8024f88 <__ieee754_rem_pio2f+0x230>
 8024e1a:	eea7 0a67 	vfms.f32	s0, s14, s15
 8024e1e:	281f      	cmp	r0, #31
 8024e20:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8024f94 <__ieee754_rem_pio2f+0x23c>
 8024e24:	ee67 7a27 	vmul.f32	s15, s14, s15
 8024e28:	eeb1 6a47 	vneg.f32	s12, s14
 8024e2c:	ee70 6a67 	vsub.f32	s13, s0, s15
 8024e30:	ee16 1a90 	vmov	r1, s13
 8024e34:	dc09      	bgt.n	8024e4a <__ieee754_rem_pio2f+0xf2>
 8024e36:	4a5b      	ldr	r2, [pc, #364]	@ (8024fa4 <__ieee754_rem_pio2f+0x24c>)
 8024e38:	1e47      	subs	r7, r0, #1
 8024e3a:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8024e3e:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8024e42:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8024e46:	4293      	cmp	r3, r2
 8024e48:	d107      	bne.n	8024e5a <__ieee754_rem_pio2f+0x102>
 8024e4a:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 8024e4e:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8024e52:	2a08      	cmp	r2, #8
 8024e54:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8024e58:	dc14      	bgt.n	8024e84 <__ieee754_rem_pio2f+0x12c>
 8024e5a:	6021      	str	r1, [r4, #0]
 8024e5c:	ed94 7a00 	vldr	s14, [r4]
 8024e60:	ee30 0a47 	vsub.f32	s0, s0, s14
 8024e64:	2e00      	cmp	r6, #0
 8024e66:	ee30 0a67 	vsub.f32	s0, s0, s15
 8024e6a:	ed84 0a01 	vstr	s0, [r4, #4]
 8024e6e:	daa6      	bge.n	8024dbe <__ieee754_rem_pio2f+0x66>
 8024e70:	eeb1 7a47 	vneg.f32	s14, s14
 8024e74:	eeb1 0a40 	vneg.f32	s0, s0
 8024e78:	ed84 7a00 	vstr	s14, [r4]
 8024e7c:	ed84 0a01 	vstr	s0, [r4, #4]
 8024e80:	4240      	negs	r0, r0
 8024e82:	e79c      	b.n	8024dbe <__ieee754_rem_pio2f+0x66>
 8024e84:	eddf 5a42 	vldr	s11, [pc, #264]	@ 8024f90 <__ieee754_rem_pio2f+0x238>
 8024e88:	eef0 6a40 	vmov.f32	s13, s0
 8024e8c:	eee6 6a25 	vfma.f32	s13, s12, s11
 8024e90:	ee70 7a66 	vsub.f32	s15, s0, s13
 8024e94:	eee6 7a25 	vfma.f32	s15, s12, s11
 8024e98:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8024f98 <__ieee754_rem_pio2f+0x240>
 8024e9c:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8024ea0:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8024ea4:	ee15 2a90 	vmov	r2, s11
 8024ea8:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8024eac:	1a5b      	subs	r3, r3, r1
 8024eae:	2b19      	cmp	r3, #25
 8024eb0:	dc04      	bgt.n	8024ebc <__ieee754_rem_pio2f+0x164>
 8024eb2:	edc4 5a00 	vstr	s11, [r4]
 8024eb6:	eeb0 0a66 	vmov.f32	s0, s13
 8024eba:	e7cf      	b.n	8024e5c <__ieee754_rem_pio2f+0x104>
 8024ebc:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 8024fa8 <__ieee754_rem_pio2f+0x250>
 8024ec0:	eeb0 0a66 	vmov.f32	s0, s13
 8024ec4:	eea6 0a25 	vfma.f32	s0, s12, s11
 8024ec8:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8024ecc:	eddf 6a37 	vldr	s13, [pc, #220]	@ 8024fac <__ieee754_rem_pio2f+0x254>
 8024ed0:	eee6 7a25 	vfma.f32	s15, s12, s11
 8024ed4:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8024ed8:	ee30 7a67 	vsub.f32	s14, s0, s15
 8024edc:	ed84 7a00 	vstr	s14, [r4]
 8024ee0:	e7bc      	b.n	8024e5c <__ieee754_rem_pio2f+0x104>
 8024ee2:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 8024ee6:	d306      	bcc.n	8024ef6 <__ieee754_rem_pio2f+0x19e>
 8024ee8:	ee70 7a40 	vsub.f32	s15, s0, s0
 8024eec:	edc0 7a01 	vstr	s15, [r0, #4]
 8024ef0:	edc0 7a00 	vstr	s15, [r0]
 8024ef4:	e73e      	b.n	8024d74 <__ieee754_rem_pio2f+0x1c>
 8024ef6:	15ea      	asrs	r2, r5, #23
 8024ef8:	3a86      	subs	r2, #134	@ 0x86
 8024efa:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8024efe:	ee07 3a90 	vmov	s15, r3
 8024f02:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8024f06:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 8024fb0 <__ieee754_rem_pio2f+0x258>
 8024f0a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8024f0e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8024f12:	ed8d 7a03 	vstr	s14, [sp, #12]
 8024f16:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8024f1a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8024f1e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8024f22:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8024f26:	ed8d 7a04 	vstr	s14, [sp, #16]
 8024f2a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8024f2e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8024f32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024f36:	edcd 7a05 	vstr	s15, [sp, #20]
 8024f3a:	d11e      	bne.n	8024f7a <__ieee754_rem_pio2f+0x222>
 8024f3c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8024f40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024f44:	bf0c      	ite	eq
 8024f46:	2301      	moveq	r3, #1
 8024f48:	2302      	movne	r3, #2
 8024f4a:	491a      	ldr	r1, [pc, #104]	@ (8024fb4 <__ieee754_rem_pio2f+0x25c>)
 8024f4c:	9101      	str	r1, [sp, #4]
 8024f4e:	2102      	movs	r1, #2
 8024f50:	9100      	str	r1, [sp, #0]
 8024f52:	a803      	add	r0, sp, #12
 8024f54:	4621      	mov	r1, r4
 8024f56:	f000 f90b 	bl	8025170 <__kernel_rem_pio2f>
 8024f5a:	2e00      	cmp	r6, #0
 8024f5c:	f6bf af2f 	bge.w	8024dbe <__ieee754_rem_pio2f+0x66>
 8024f60:	edd4 7a00 	vldr	s15, [r4]
 8024f64:	eef1 7a67 	vneg.f32	s15, s15
 8024f68:	edc4 7a00 	vstr	s15, [r4]
 8024f6c:	edd4 7a01 	vldr	s15, [r4, #4]
 8024f70:	eef1 7a67 	vneg.f32	s15, s15
 8024f74:	edc4 7a01 	vstr	s15, [r4, #4]
 8024f78:	e782      	b.n	8024e80 <__ieee754_rem_pio2f+0x128>
 8024f7a:	2303      	movs	r3, #3
 8024f7c:	e7e5      	b.n	8024f4a <__ieee754_rem_pio2f+0x1f2>
 8024f7e:	bf00      	nop
 8024f80:	3f490fd8 	.word	0x3f490fd8
 8024f84:	4016cbe3 	.word	0x4016cbe3
 8024f88:	3fc90f80 	.word	0x3fc90f80
 8024f8c:	3fc90fd0 	.word	0x3fc90fd0
 8024f90:	37354400 	.word	0x37354400
 8024f94:	37354443 	.word	0x37354443
 8024f98:	2e85a308 	.word	0x2e85a308
 8024f9c:	43490f80 	.word	0x43490f80
 8024fa0:	3f22f984 	.word	0x3f22f984
 8024fa4:	080290e4 	.word	0x080290e4
 8024fa8:	2e85a300 	.word	0x2e85a300
 8024fac:	248d3132 	.word	0x248d3132
 8024fb0:	43800000 	.word	0x43800000
 8024fb4:	08029164 	.word	0x08029164

08024fb8 <atanf>:
 8024fb8:	b538      	push	{r3, r4, r5, lr}
 8024fba:	ee10 5a10 	vmov	r5, s0
 8024fbe:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 8024fc2:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 8024fc6:	eef0 7a40 	vmov.f32	s15, s0
 8024fca:	d310      	bcc.n	8024fee <atanf+0x36>
 8024fcc:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 8024fd0:	d904      	bls.n	8024fdc <atanf+0x24>
 8024fd2:	ee70 7a00 	vadd.f32	s15, s0, s0
 8024fd6:	eeb0 0a67 	vmov.f32	s0, s15
 8024fda:	bd38      	pop	{r3, r4, r5, pc}
 8024fdc:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 8025114 <atanf+0x15c>
 8024fe0:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 8025118 <atanf+0x160>
 8024fe4:	2d00      	cmp	r5, #0
 8024fe6:	bfc8      	it	gt
 8024fe8:	eef0 7a47 	vmovgt.f32	s15, s14
 8024fec:	e7f3      	b.n	8024fd6 <atanf+0x1e>
 8024fee:	4b4b      	ldr	r3, [pc, #300]	@ (802511c <atanf+0x164>)
 8024ff0:	429c      	cmp	r4, r3
 8024ff2:	d810      	bhi.n	8025016 <atanf+0x5e>
 8024ff4:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 8024ff8:	d20a      	bcs.n	8025010 <atanf+0x58>
 8024ffa:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 8025120 <atanf+0x168>
 8024ffe:	ee30 7a07 	vadd.f32	s14, s0, s14
 8025002:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8025006:	eeb4 7ae6 	vcmpe.f32	s14, s13
 802500a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802500e:	dce2      	bgt.n	8024fd6 <atanf+0x1e>
 8025010:	f04f 33ff 	mov.w	r3, #4294967295
 8025014:	e013      	b.n	802503e <atanf+0x86>
 8025016:	f000 f8a3 	bl	8025160 <fabsf>
 802501a:	4b42      	ldr	r3, [pc, #264]	@ (8025124 <atanf+0x16c>)
 802501c:	429c      	cmp	r4, r3
 802501e:	d84f      	bhi.n	80250c0 <atanf+0x108>
 8025020:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 8025024:	429c      	cmp	r4, r3
 8025026:	d841      	bhi.n	80250ac <atanf+0xf4>
 8025028:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 802502c:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8025030:	eea0 7a27 	vfma.f32	s14, s0, s15
 8025034:	2300      	movs	r3, #0
 8025036:	ee30 0a27 	vadd.f32	s0, s0, s15
 802503a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802503e:	1c5a      	adds	r2, r3, #1
 8025040:	ee27 6aa7 	vmul.f32	s12, s15, s15
 8025044:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 8025128 <atanf+0x170>
 8025048:	eddf 5a38 	vldr	s11, [pc, #224]	@ 802512c <atanf+0x174>
 802504c:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 8025130 <atanf+0x178>
 8025050:	ee66 6a06 	vmul.f32	s13, s12, s12
 8025054:	eee6 5a87 	vfma.f32	s11, s13, s14
 8025058:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 8025134 <atanf+0x17c>
 802505c:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8025060:	eddf 5a35 	vldr	s11, [pc, #212]	@ 8025138 <atanf+0x180>
 8025064:	eee7 5a26 	vfma.f32	s11, s14, s13
 8025068:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 802513c <atanf+0x184>
 802506c:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8025070:	eddf 5a33 	vldr	s11, [pc, #204]	@ 8025140 <atanf+0x188>
 8025074:	eee7 5a26 	vfma.f32	s11, s14, s13
 8025078:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 8025144 <atanf+0x18c>
 802507c:	eea6 5a87 	vfma.f32	s10, s13, s14
 8025080:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8025148 <atanf+0x190>
 8025084:	eea5 7a26 	vfma.f32	s14, s10, s13
 8025088:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 802514c <atanf+0x194>
 802508c:	eea7 5a26 	vfma.f32	s10, s14, s13
 8025090:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 8025150 <atanf+0x198>
 8025094:	eea5 7a26 	vfma.f32	s14, s10, s13
 8025098:	ee27 7a26 	vmul.f32	s14, s14, s13
 802509c:	eea5 7a86 	vfma.f32	s14, s11, s12
 80250a0:	ee27 7a87 	vmul.f32	s14, s15, s14
 80250a4:	d121      	bne.n	80250ea <atanf+0x132>
 80250a6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80250aa:	e794      	b.n	8024fd6 <atanf+0x1e>
 80250ac:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 80250b0:	ee30 7a67 	vsub.f32	s14, s0, s15
 80250b4:	ee30 0a27 	vadd.f32	s0, s0, s15
 80250b8:	2301      	movs	r3, #1
 80250ba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80250be:	e7be      	b.n	802503e <atanf+0x86>
 80250c0:	4b24      	ldr	r3, [pc, #144]	@ (8025154 <atanf+0x19c>)
 80250c2:	429c      	cmp	r4, r3
 80250c4:	d80b      	bhi.n	80250de <atanf+0x126>
 80250c6:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 80250ca:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80250ce:	eea0 7a27 	vfma.f32	s14, s0, s15
 80250d2:	2302      	movs	r3, #2
 80250d4:	ee70 6a67 	vsub.f32	s13, s0, s15
 80250d8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80250dc:	e7af      	b.n	802503e <atanf+0x86>
 80250de:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 80250e2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80250e6:	2303      	movs	r3, #3
 80250e8:	e7a9      	b.n	802503e <atanf+0x86>
 80250ea:	4a1b      	ldr	r2, [pc, #108]	@ (8025158 <atanf+0x1a0>)
 80250ec:	491b      	ldr	r1, [pc, #108]	@ (802515c <atanf+0x1a4>)
 80250ee:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 80250f2:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80250f6:	edd3 6a00 	vldr	s13, [r3]
 80250fa:	ee37 7a66 	vsub.f32	s14, s14, s13
 80250fe:	2d00      	cmp	r5, #0
 8025100:	ee37 7a67 	vsub.f32	s14, s14, s15
 8025104:	edd2 7a00 	vldr	s15, [r2]
 8025108:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802510c:	bfb8      	it	lt
 802510e:	eef1 7a67 	vneglt.f32	s15, s15
 8025112:	e760      	b.n	8024fd6 <atanf+0x1e>
 8025114:	bfc90fdb 	.word	0xbfc90fdb
 8025118:	3fc90fdb 	.word	0x3fc90fdb
 802511c:	3edfffff 	.word	0x3edfffff
 8025120:	7149f2ca 	.word	0x7149f2ca
 8025124:	3f97ffff 	.word	0x3f97ffff
 8025128:	3c8569d7 	.word	0x3c8569d7
 802512c:	3d4bda59 	.word	0x3d4bda59
 8025130:	bd6ef16b 	.word	0xbd6ef16b
 8025134:	3d886b35 	.word	0x3d886b35
 8025138:	3dba2e6e 	.word	0x3dba2e6e
 802513c:	3e124925 	.word	0x3e124925
 8025140:	3eaaaaab 	.word	0x3eaaaaab
 8025144:	bd15a221 	.word	0xbd15a221
 8025148:	bd9d8795 	.word	0xbd9d8795
 802514c:	bde38e38 	.word	0xbde38e38
 8025150:	be4ccccd 	.word	0xbe4ccccd
 8025154:	401bffff 	.word	0x401bffff
 8025158:	0802948c 	.word	0x0802948c
 802515c:	0802947c 	.word	0x0802947c

08025160 <fabsf>:
 8025160:	ee10 3a10 	vmov	r3, s0
 8025164:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8025168:	ee00 3a10 	vmov	s0, r3
 802516c:	4770      	bx	lr
	...

08025170 <__kernel_rem_pio2f>:
 8025170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025174:	ed2d 8b04 	vpush	{d8-d9}
 8025178:	b0d9      	sub	sp, #356	@ 0x164
 802517a:	4690      	mov	r8, r2
 802517c:	9001      	str	r0, [sp, #4]
 802517e:	4ab6      	ldr	r2, [pc, #728]	@ (8025458 <__kernel_rem_pio2f+0x2e8>)
 8025180:	9866      	ldr	r0, [sp, #408]	@ 0x198
 8025182:	f118 0f04 	cmn.w	r8, #4
 8025186:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 802518a:	460f      	mov	r7, r1
 802518c:	f103 3bff 	add.w	fp, r3, #4294967295
 8025190:	db26      	blt.n	80251e0 <__kernel_rem_pio2f+0x70>
 8025192:	f1b8 0203 	subs.w	r2, r8, #3
 8025196:	bf48      	it	mi
 8025198:	f108 0204 	addmi.w	r2, r8, #4
 802519c:	10d2      	asrs	r2, r2, #3
 802519e:	1c55      	adds	r5, r2, #1
 80251a0:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 80251a2:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 8025468 <__kernel_rem_pio2f+0x2f8>
 80251a6:	00e8      	lsls	r0, r5, #3
 80251a8:	eba2 060b 	sub.w	r6, r2, fp
 80251ac:	9002      	str	r0, [sp, #8]
 80251ae:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 80251b2:	eb0a 0c0b 	add.w	ip, sl, fp
 80251b6:	ac1c      	add	r4, sp, #112	@ 0x70
 80251b8:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 80251bc:	2000      	movs	r0, #0
 80251be:	4560      	cmp	r0, ip
 80251c0:	dd10      	ble.n	80251e4 <__kernel_rem_pio2f+0x74>
 80251c2:	a91c      	add	r1, sp, #112	@ 0x70
 80251c4:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 80251c8:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 80251cc:	2600      	movs	r6, #0
 80251ce:	4556      	cmp	r6, sl
 80251d0:	dc24      	bgt.n	802521c <__kernel_rem_pio2f+0xac>
 80251d2:	f8dd e004 	ldr.w	lr, [sp, #4]
 80251d6:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 8025468 <__kernel_rem_pio2f+0x2f8>
 80251da:	4684      	mov	ip, r0
 80251dc:	2400      	movs	r4, #0
 80251de:	e016      	b.n	802520e <__kernel_rem_pio2f+0x9e>
 80251e0:	2200      	movs	r2, #0
 80251e2:	e7dc      	b.n	802519e <__kernel_rem_pio2f+0x2e>
 80251e4:	42c6      	cmn	r6, r0
 80251e6:	bf5d      	ittte	pl
 80251e8:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 80251ec:	ee07 1a90 	vmovpl	s15, r1
 80251f0:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 80251f4:	eef0 7a47 	vmovmi.f32	s15, s14
 80251f8:	ece4 7a01 	vstmia	r4!, {s15}
 80251fc:	3001      	adds	r0, #1
 80251fe:	e7de      	b.n	80251be <__kernel_rem_pio2f+0x4e>
 8025200:	ecfe 6a01 	vldmia	lr!, {s13}
 8025204:	ed3c 7a01 	vldmdb	ip!, {s14}
 8025208:	eee6 7a87 	vfma.f32	s15, s13, s14
 802520c:	3401      	adds	r4, #1
 802520e:	455c      	cmp	r4, fp
 8025210:	ddf6      	ble.n	8025200 <__kernel_rem_pio2f+0x90>
 8025212:	ece9 7a01 	vstmia	r9!, {s15}
 8025216:	3601      	adds	r6, #1
 8025218:	3004      	adds	r0, #4
 802521a:	e7d8      	b.n	80251ce <__kernel_rem_pio2f+0x5e>
 802521c:	a908      	add	r1, sp, #32
 802521e:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8025222:	9104      	str	r1, [sp, #16]
 8025224:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8025226:	eddf 8a8f 	vldr	s17, [pc, #572]	@ 8025464 <__kernel_rem_pio2f+0x2f4>
 802522a:	ed9f 9a8d 	vldr	s18, [pc, #564]	@ 8025460 <__kernel_rem_pio2f+0x2f0>
 802522e:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8025232:	9203      	str	r2, [sp, #12]
 8025234:	4654      	mov	r4, sl
 8025236:	00a2      	lsls	r2, r4, #2
 8025238:	9205      	str	r2, [sp, #20]
 802523a:	aa58      	add	r2, sp, #352	@ 0x160
 802523c:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8025240:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 8025244:	a944      	add	r1, sp, #272	@ 0x110
 8025246:	aa08      	add	r2, sp, #32
 8025248:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 802524c:	4694      	mov	ip, r2
 802524e:	4626      	mov	r6, r4
 8025250:	2e00      	cmp	r6, #0
 8025252:	dc4c      	bgt.n	80252ee <__kernel_rem_pio2f+0x17e>
 8025254:	4628      	mov	r0, r5
 8025256:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802525a:	f000 f9f1 	bl	8025640 <scalbnf>
 802525e:	eeb0 8a40 	vmov.f32	s16, s0
 8025262:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 8025266:	ee28 0a00 	vmul.f32	s0, s16, s0
 802526a:	f000 fa4f 	bl	802570c <floorf>
 802526e:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 8025272:	eea0 8a67 	vfms.f32	s16, s0, s15
 8025276:	2d00      	cmp	r5, #0
 8025278:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 802527c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8025280:	ee17 9a90 	vmov	r9, s15
 8025284:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8025288:	ee38 8a67 	vsub.f32	s16, s16, s15
 802528c:	dd41      	ble.n	8025312 <__kernel_rem_pio2f+0x1a2>
 802528e:	f104 3cff 	add.w	ip, r4, #4294967295
 8025292:	a908      	add	r1, sp, #32
 8025294:	f1c5 0e08 	rsb	lr, r5, #8
 8025298:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 802529c:	fa46 f00e 	asr.w	r0, r6, lr
 80252a0:	4481      	add	r9, r0
 80252a2:	fa00 f00e 	lsl.w	r0, r0, lr
 80252a6:	1a36      	subs	r6, r6, r0
 80252a8:	f1c5 0007 	rsb	r0, r5, #7
 80252ac:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 80252b0:	4106      	asrs	r6, r0
 80252b2:	2e00      	cmp	r6, #0
 80252b4:	dd3c      	ble.n	8025330 <__kernel_rem_pio2f+0x1c0>
 80252b6:	f04f 0e00 	mov.w	lr, #0
 80252ba:	f109 0901 	add.w	r9, r9, #1
 80252be:	4670      	mov	r0, lr
 80252c0:	4574      	cmp	r4, lr
 80252c2:	dc68      	bgt.n	8025396 <__kernel_rem_pio2f+0x226>
 80252c4:	2d00      	cmp	r5, #0
 80252c6:	dd03      	ble.n	80252d0 <__kernel_rem_pio2f+0x160>
 80252c8:	2d01      	cmp	r5, #1
 80252ca:	d074      	beq.n	80253b6 <__kernel_rem_pio2f+0x246>
 80252cc:	2d02      	cmp	r5, #2
 80252ce:	d07d      	beq.n	80253cc <__kernel_rem_pio2f+0x25c>
 80252d0:	2e02      	cmp	r6, #2
 80252d2:	d12d      	bne.n	8025330 <__kernel_rem_pio2f+0x1c0>
 80252d4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80252d8:	ee30 8a48 	vsub.f32	s16, s0, s16
 80252dc:	b340      	cbz	r0, 8025330 <__kernel_rem_pio2f+0x1c0>
 80252de:	4628      	mov	r0, r5
 80252e0:	9306      	str	r3, [sp, #24]
 80252e2:	f000 f9ad 	bl	8025640 <scalbnf>
 80252e6:	9b06      	ldr	r3, [sp, #24]
 80252e8:	ee38 8a40 	vsub.f32	s16, s16, s0
 80252ec:	e020      	b.n	8025330 <__kernel_rem_pio2f+0x1c0>
 80252ee:	ee60 7a28 	vmul.f32	s15, s0, s17
 80252f2:	3e01      	subs	r6, #1
 80252f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80252f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80252fc:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8025300:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8025304:	ecac 0a01 	vstmia	ip!, {s0}
 8025308:	ed30 0a01 	vldmdb	r0!, {s0}
 802530c:	ee37 0a80 	vadd.f32	s0, s15, s0
 8025310:	e79e      	b.n	8025250 <__kernel_rem_pio2f+0xe0>
 8025312:	d105      	bne.n	8025320 <__kernel_rem_pio2f+0x1b0>
 8025314:	1e60      	subs	r0, r4, #1
 8025316:	a908      	add	r1, sp, #32
 8025318:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 802531c:	11f6      	asrs	r6, r6, #7
 802531e:	e7c8      	b.n	80252b2 <__kernel_rem_pio2f+0x142>
 8025320:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8025324:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8025328:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802532c:	da31      	bge.n	8025392 <__kernel_rem_pio2f+0x222>
 802532e:	2600      	movs	r6, #0
 8025330:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8025334:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025338:	f040 8098 	bne.w	802546c <__kernel_rem_pio2f+0x2fc>
 802533c:	1e60      	subs	r0, r4, #1
 802533e:	2200      	movs	r2, #0
 8025340:	4550      	cmp	r0, sl
 8025342:	da4b      	bge.n	80253dc <__kernel_rem_pio2f+0x26c>
 8025344:	2a00      	cmp	r2, #0
 8025346:	d065      	beq.n	8025414 <__kernel_rem_pio2f+0x2a4>
 8025348:	3c01      	subs	r4, #1
 802534a:	ab08      	add	r3, sp, #32
 802534c:	3d08      	subs	r5, #8
 802534e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8025352:	2b00      	cmp	r3, #0
 8025354:	d0f8      	beq.n	8025348 <__kernel_rem_pio2f+0x1d8>
 8025356:	4628      	mov	r0, r5
 8025358:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 802535c:	f000 f970 	bl	8025640 <scalbnf>
 8025360:	1c63      	adds	r3, r4, #1
 8025362:	aa44      	add	r2, sp, #272	@ 0x110
 8025364:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 8025464 <__kernel_rem_pio2f+0x2f4>
 8025368:	0099      	lsls	r1, r3, #2
 802536a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802536e:	4623      	mov	r3, r4
 8025370:	2b00      	cmp	r3, #0
 8025372:	f280 80a9 	bge.w	80254c8 <__kernel_rem_pio2f+0x358>
 8025376:	4623      	mov	r3, r4
 8025378:	2b00      	cmp	r3, #0
 802537a:	f2c0 80c7 	blt.w	802550c <__kernel_rem_pio2f+0x39c>
 802537e:	aa44      	add	r2, sp, #272	@ 0x110
 8025380:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8025384:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 802545c <__kernel_rem_pio2f+0x2ec>
 8025388:	eddf 7a37 	vldr	s15, [pc, #220]	@ 8025468 <__kernel_rem_pio2f+0x2f8>
 802538c:	2000      	movs	r0, #0
 802538e:	1ae2      	subs	r2, r4, r3
 8025390:	e0b1      	b.n	80254f6 <__kernel_rem_pio2f+0x386>
 8025392:	2602      	movs	r6, #2
 8025394:	e78f      	b.n	80252b6 <__kernel_rem_pio2f+0x146>
 8025396:	f852 1b04 	ldr.w	r1, [r2], #4
 802539a:	b948      	cbnz	r0, 80253b0 <__kernel_rem_pio2f+0x240>
 802539c:	b121      	cbz	r1, 80253a8 <__kernel_rem_pio2f+0x238>
 802539e:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 80253a2:	f842 1c04 	str.w	r1, [r2, #-4]
 80253a6:	2101      	movs	r1, #1
 80253a8:	f10e 0e01 	add.w	lr, lr, #1
 80253ac:	4608      	mov	r0, r1
 80253ae:	e787      	b.n	80252c0 <__kernel_rem_pio2f+0x150>
 80253b0:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 80253b4:	e7f5      	b.n	80253a2 <__kernel_rem_pio2f+0x232>
 80253b6:	f104 3cff 	add.w	ip, r4, #4294967295
 80253ba:	aa08      	add	r2, sp, #32
 80253bc:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 80253c0:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80253c4:	a908      	add	r1, sp, #32
 80253c6:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 80253ca:	e781      	b.n	80252d0 <__kernel_rem_pio2f+0x160>
 80253cc:	f104 3cff 	add.w	ip, r4, #4294967295
 80253d0:	aa08      	add	r2, sp, #32
 80253d2:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 80253d6:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80253da:	e7f3      	b.n	80253c4 <__kernel_rem_pio2f+0x254>
 80253dc:	a908      	add	r1, sp, #32
 80253de:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 80253e2:	3801      	subs	r0, #1
 80253e4:	430a      	orrs	r2, r1
 80253e6:	e7ab      	b.n	8025340 <__kernel_rem_pio2f+0x1d0>
 80253e8:	3201      	adds	r2, #1
 80253ea:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 80253ee:	2e00      	cmp	r6, #0
 80253f0:	d0fa      	beq.n	80253e8 <__kernel_rem_pio2f+0x278>
 80253f2:	9905      	ldr	r1, [sp, #20]
 80253f4:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 80253f8:	eb0d 0001 	add.w	r0, sp, r1
 80253fc:	18e6      	adds	r6, r4, r3
 80253fe:	a91c      	add	r1, sp, #112	@ 0x70
 8025400:	f104 0c01 	add.w	ip, r4, #1
 8025404:	384c      	subs	r0, #76	@ 0x4c
 8025406:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 802540a:	4422      	add	r2, r4
 802540c:	4562      	cmp	r2, ip
 802540e:	da04      	bge.n	802541a <__kernel_rem_pio2f+0x2aa>
 8025410:	4614      	mov	r4, r2
 8025412:	e710      	b.n	8025236 <__kernel_rem_pio2f+0xc6>
 8025414:	9804      	ldr	r0, [sp, #16]
 8025416:	2201      	movs	r2, #1
 8025418:	e7e7      	b.n	80253ea <__kernel_rem_pio2f+0x27a>
 802541a:	9903      	ldr	r1, [sp, #12]
 802541c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8025420:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 8025424:	9105      	str	r1, [sp, #20]
 8025426:	ee07 1a90 	vmov	s15, r1
 802542a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802542e:	2400      	movs	r4, #0
 8025430:	ece6 7a01 	vstmia	r6!, {s15}
 8025434:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 8025468 <__kernel_rem_pio2f+0x2f8>
 8025438:	46b1      	mov	r9, r6
 802543a:	455c      	cmp	r4, fp
 802543c:	dd04      	ble.n	8025448 <__kernel_rem_pio2f+0x2d8>
 802543e:	ece0 7a01 	vstmia	r0!, {s15}
 8025442:	f10c 0c01 	add.w	ip, ip, #1
 8025446:	e7e1      	b.n	802540c <__kernel_rem_pio2f+0x29c>
 8025448:	ecfe 6a01 	vldmia	lr!, {s13}
 802544c:	ed39 7a01 	vldmdb	r9!, {s14}
 8025450:	3401      	adds	r4, #1
 8025452:	eee6 7a87 	vfma.f32	s15, s13, s14
 8025456:	e7f0      	b.n	802543a <__kernel_rem_pio2f+0x2ca>
 8025458:	080294c8 	.word	0x080294c8
 802545c:	0802949c 	.word	0x0802949c
 8025460:	43800000 	.word	0x43800000
 8025464:	3b800000 	.word	0x3b800000
 8025468:	00000000 	.word	0x00000000
 802546c:	9b02      	ldr	r3, [sp, #8]
 802546e:	eeb0 0a48 	vmov.f32	s0, s16
 8025472:	eba3 0008 	sub.w	r0, r3, r8
 8025476:	f000 f8e3 	bl	8025640 <scalbnf>
 802547a:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 8025460 <__kernel_rem_pio2f+0x2f0>
 802547e:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8025482:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025486:	db19      	blt.n	80254bc <__kernel_rem_pio2f+0x34c>
 8025488:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 8025464 <__kernel_rem_pio2f+0x2f4>
 802548c:	ee60 7a27 	vmul.f32	s15, s0, s15
 8025490:	aa08      	add	r2, sp, #32
 8025492:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8025496:	3508      	adds	r5, #8
 8025498:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802549c:	eea7 0ac7 	vfms.f32	s0, s15, s14
 80254a0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80254a4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80254a8:	ee10 3a10 	vmov	r3, s0
 80254ac:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 80254b0:	ee17 3a90 	vmov	r3, s15
 80254b4:	3401      	adds	r4, #1
 80254b6:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 80254ba:	e74c      	b.n	8025356 <__kernel_rem_pio2f+0x1e6>
 80254bc:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80254c0:	aa08      	add	r2, sp, #32
 80254c2:	ee10 3a10 	vmov	r3, s0
 80254c6:	e7f6      	b.n	80254b6 <__kernel_rem_pio2f+0x346>
 80254c8:	a808      	add	r0, sp, #32
 80254ca:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 80254ce:	9001      	str	r0, [sp, #4]
 80254d0:	ee07 0a90 	vmov	s15, r0
 80254d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80254d8:	3b01      	subs	r3, #1
 80254da:	ee67 7a80 	vmul.f32	s15, s15, s0
 80254de:	ee20 0a07 	vmul.f32	s0, s0, s14
 80254e2:	ed62 7a01 	vstmdb	r2!, {s15}
 80254e6:	e743      	b.n	8025370 <__kernel_rem_pio2f+0x200>
 80254e8:	ecfc 6a01 	vldmia	ip!, {s13}
 80254ec:	ecb5 7a01 	vldmia	r5!, {s14}
 80254f0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80254f4:	3001      	adds	r0, #1
 80254f6:	4550      	cmp	r0, sl
 80254f8:	dc01      	bgt.n	80254fe <__kernel_rem_pio2f+0x38e>
 80254fa:	4290      	cmp	r0, r2
 80254fc:	ddf4      	ble.n	80254e8 <__kernel_rem_pio2f+0x378>
 80254fe:	a858      	add	r0, sp, #352	@ 0x160
 8025500:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8025504:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 8025508:	3b01      	subs	r3, #1
 802550a:	e735      	b.n	8025378 <__kernel_rem_pio2f+0x208>
 802550c:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 802550e:	2b02      	cmp	r3, #2
 8025510:	dc09      	bgt.n	8025526 <__kernel_rem_pio2f+0x3b6>
 8025512:	2b00      	cmp	r3, #0
 8025514:	dc27      	bgt.n	8025566 <__kernel_rem_pio2f+0x3f6>
 8025516:	d040      	beq.n	802559a <__kernel_rem_pio2f+0x42a>
 8025518:	f009 0007 	and.w	r0, r9, #7
 802551c:	b059      	add	sp, #356	@ 0x164
 802551e:	ecbd 8b04 	vpop	{d8-d9}
 8025522:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025526:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8025528:	2b03      	cmp	r3, #3
 802552a:	d1f5      	bne.n	8025518 <__kernel_rem_pio2f+0x3a8>
 802552c:	aa30      	add	r2, sp, #192	@ 0xc0
 802552e:	1f0b      	subs	r3, r1, #4
 8025530:	4413      	add	r3, r2
 8025532:	461a      	mov	r2, r3
 8025534:	4620      	mov	r0, r4
 8025536:	2800      	cmp	r0, #0
 8025538:	dc50      	bgt.n	80255dc <__kernel_rem_pio2f+0x46c>
 802553a:	4622      	mov	r2, r4
 802553c:	2a01      	cmp	r2, #1
 802553e:	dc5d      	bgt.n	80255fc <__kernel_rem_pio2f+0x48c>
 8025540:	ab30      	add	r3, sp, #192	@ 0xc0
 8025542:	ed5f 7a37 	vldr	s15, [pc, #-220]	@ 8025468 <__kernel_rem_pio2f+0x2f8>
 8025546:	440b      	add	r3, r1
 8025548:	2c01      	cmp	r4, #1
 802554a:	dc67      	bgt.n	802561c <__kernel_rem_pio2f+0x4ac>
 802554c:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 8025550:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 8025554:	2e00      	cmp	r6, #0
 8025556:	d167      	bne.n	8025628 <__kernel_rem_pio2f+0x4b8>
 8025558:	edc7 6a00 	vstr	s13, [r7]
 802555c:	ed87 7a01 	vstr	s14, [r7, #4]
 8025560:	edc7 7a02 	vstr	s15, [r7, #8]
 8025564:	e7d8      	b.n	8025518 <__kernel_rem_pio2f+0x3a8>
 8025566:	ab30      	add	r3, sp, #192	@ 0xc0
 8025568:	ed1f 7a41 	vldr	s14, [pc, #-260]	@ 8025468 <__kernel_rem_pio2f+0x2f8>
 802556c:	440b      	add	r3, r1
 802556e:	4622      	mov	r2, r4
 8025570:	2a00      	cmp	r2, #0
 8025572:	da24      	bge.n	80255be <__kernel_rem_pio2f+0x44e>
 8025574:	b34e      	cbz	r6, 80255ca <__kernel_rem_pio2f+0x45a>
 8025576:	eef1 7a47 	vneg.f32	s15, s14
 802557a:	edc7 7a00 	vstr	s15, [r7]
 802557e:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 8025582:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8025586:	aa31      	add	r2, sp, #196	@ 0xc4
 8025588:	2301      	movs	r3, #1
 802558a:	429c      	cmp	r4, r3
 802558c:	da20      	bge.n	80255d0 <__kernel_rem_pio2f+0x460>
 802558e:	b10e      	cbz	r6, 8025594 <__kernel_rem_pio2f+0x424>
 8025590:	eef1 7a67 	vneg.f32	s15, s15
 8025594:	edc7 7a01 	vstr	s15, [r7, #4]
 8025598:	e7be      	b.n	8025518 <__kernel_rem_pio2f+0x3a8>
 802559a:	ab30      	add	r3, sp, #192	@ 0xc0
 802559c:	ed5f 7a4e 	vldr	s15, [pc, #-312]	@ 8025468 <__kernel_rem_pio2f+0x2f8>
 80255a0:	440b      	add	r3, r1
 80255a2:	2c00      	cmp	r4, #0
 80255a4:	da05      	bge.n	80255b2 <__kernel_rem_pio2f+0x442>
 80255a6:	b10e      	cbz	r6, 80255ac <__kernel_rem_pio2f+0x43c>
 80255a8:	eef1 7a67 	vneg.f32	s15, s15
 80255ac:	edc7 7a00 	vstr	s15, [r7]
 80255b0:	e7b2      	b.n	8025518 <__kernel_rem_pio2f+0x3a8>
 80255b2:	ed33 7a01 	vldmdb	r3!, {s14}
 80255b6:	3c01      	subs	r4, #1
 80255b8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80255bc:	e7f1      	b.n	80255a2 <__kernel_rem_pio2f+0x432>
 80255be:	ed73 7a01 	vldmdb	r3!, {s15}
 80255c2:	3a01      	subs	r2, #1
 80255c4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80255c8:	e7d2      	b.n	8025570 <__kernel_rem_pio2f+0x400>
 80255ca:	eef0 7a47 	vmov.f32	s15, s14
 80255ce:	e7d4      	b.n	802557a <__kernel_rem_pio2f+0x40a>
 80255d0:	ecb2 7a01 	vldmia	r2!, {s14}
 80255d4:	3301      	adds	r3, #1
 80255d6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80255da:	e7d6      	b.n	802558a <__kernel_rem_pio2f+0x41a>
 80255dc:	ed72 7a01 	vldmdb	r2!, {s15}
 80255e0:	edd2 6a01 	vldr	s13, [r2, #4]
 80255e4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80255e8:	3801      	subs	r0, #1
 80255ea:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80255ee:	ed82 7a00 	vstr	s14, [r2]
 80255f2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80255f6:	edc2 7a01 	vstr	s15, [r2, #4]
 80255fa:	e79c      	b.n	8025536 <__kernel_rem_pio2f+0x3c6>
 80255fc:	ed73 7a01 	vldmdb	r3!, {s15}
 8025600:	edd3 6a01 	vldr	s13, [r3, #4]
 8025604:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8025608:	3a01      	subs	r2, #1
 802560a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802560e:	ed83 7a00 	vstr	s14, [r3]
 8025612:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8025616:	edc3 7a01 	vstr	s15, [r3, #4]
 802561a:	e78f      	b.n	802553c <__kernel_rem_pio2f+0x3cc>
 802561c:	ed33 7a01 	vldmdb	r3!, {s14}
 8025620:	3c01      	subs	r4, #1
 8025622:	ee77 7a87 	vadd.f32	s15, s15, s14
 8025626:	e78f      	b.n	8025548 <__kernel_rem_pio2f+0x3d8>
 8025628:	eef1 6a66 	vneg.f32	s13, s13
 802562c:	eeb1 7a47 	vneg.f32	s14, s14
 8025630:	edc7 6a00 	vstr	s13, [r7]
 8025634:	ed87 7a01 	vstr	s14, [r7, #4]
 8025638:	eef1 7a67 	vneg.f32	s15, s15
 802563c:	e790      	b.n	8025560 <__kernel_rem_pio2f+0x3f0>
 802563e:	bf00      	nop

08025640 <scalbnf>:
 8025640:	ee10 3a10 	vmov	r3, s0
 8025644:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8025648:	d02b      	beq.n	80256a2 <scalbnf+0x62>
 802564a:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 802564e:	d302      	bcc.n	8025656 <scalbnf+0x16>
 8025650:	ee30 0a00 	vadd.f32	s0, s0, s0
 8025654:	4770      	bx	lr
 8025656:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 802565a:	d123      	bne.n	80256a4 <scalbnf+0x64>
 802565c:	4b24      	ldr	r3, [pc, #144]	@ (80256f0 <scalbnf+0xb0>)
 802565e:	eddf 7a25 	vldr	s15, [pc, #148]	@ 80256f4 <scalbnf+0xb4>
 8025662:	4298      	cmp	r0, r3
 8025664:	ee20 0a27 	vmul.f32	s0, s0, s15
 8025668:	db17      	blt.n	802569a <scalbnf+0x5a>
 802566a:	ee10 3a10 	vmov	r3, s0
 802566e:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8025672:	3a19      	subs	r2, #25
 8025674:	f24c 3150 	movw	r1, #50000	@ 0xc350
 8025678:	4288      	cmp	r0, r1
 802567a:	dd15      	ble.n	80256a8 <scalbnf+0x68>
 802567c:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 80256f8 <scalbnf+0xb8>
 8025680:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 80256fc <scalbnf+0xbc>
 8025684:	ee10 3a10 	vmov	r3, s0
 8025688:	eeb0 7a67 	vmov.f32	s14, s15
 802568c:	2b00      	cmp	r3, #0
 802568e:	bfb8      	it	lt
 8025690:	eef0 7a66 	vmovlt.f32	s15, s13
 8025694:	ee27 0a87 	vmul.f32	s0, s15, s14
 8025698:	4770      	bx	lr
 802569a:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8025700 <scalbnf+0xc0>
 802569e:	ee27 0a80 	vmul.f32	s0, s15, s0
 80256a2:	4770      	bx	lr
 80256a4:	0dd2      	lsrs	r2, r2, #23
 80256a6:	e7e5      	b.n	8025674 <scalbnf+0x34>
 80256a8:	4410      	add	r0, r2
 80256aa:	28fe      	cmp	r0, #254	@ 0xfe
 80256ac:	dce6      	bgt.n	802567c <scalbnf+0x3c>
 80256ae:	2800      	cmp	r0, #0
 80256b0:	dd06      	ble.n	80256c0 <scalbnf+0x80>
 80256b2:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 80256b6:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80256ba:	ee00 3a10 	vmov	s0, r3
 80256be:	4770      	bx	lr
 80256c0:	f110 0f16 	cmn.w	r0, #22
 80256c4:	da09      	bge.n	80256da <scalbnf+0x9a>
 80256c6:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8025700 <scalbnf+0xc0>
 80256ca:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 8025704 <scalbnf+0xc4>
 80256ce:	ee10 3a10 	vmov	r3, s0
 80256d2:	eeb0 7a67 	vmov.f32	s14, s15
 80256d6:	2b00      	cmp	r3, #0
 80256d8:	e7d9      	b.n	802568e <scalbnf+0x4e>
 80256da:	3019      	adds	r0, #25
 80256dc:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 80256e0:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80256e4:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 8025708 <scalbnf+0xc8>
 80256e8:	ee07 3a90 	vmov	s15, r3
 80256ec:	e7d7      	b.n	802569e <scalbnf+0x5e>
 80256ee:	bf00      	nop
 80256f0:	ffff3cb0 	.word	0xffff3cb0
 80256f4:	4c000000 	.word	0x4c000000
 80256f8:	7149f2ca 	.word	0x7149f2ca
 80256fc:	f149f2ca 	.word	0xf149f2ca
 8025700:	0da24260 	.word	0x0da24260
 8025704:	8da24260 	.word	0x8da24260
 8025708:	33000000 	.word	0x33000000

0802570c <floorf>:
 802570c:	ee10 3a10 	vmov	r3, s0
 8025710:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8025714:	3a7f      	subs	r2, #127	@ 0x7f
 8025716:	2a16      	cmp	r2, #22
 8025718:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 802571c:	dc2b      	bgt.n	8025776 <floorf+0x6a>
 802571e:	2a00      	cmp	r2, #0
 8025720:	da12      	bge.n	8025748 <floorf+0x3c>
 8025722:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8025788 <floorf+0x7c>
 8025726:	ee30 0a27 	vadd.f32	s0, s0, s15
 802572a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802572e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025732:	dd06      	ble.n	8025742 <floorf+0x36>
 8025734:	2b00      	cmp	r3, #0
 8025736:	da24      	bge.n	8025782 <floorf+0x76>
 8025738:	2900      	cmp	r1, #0
 802573a:	4b14      	ldr	r3, [pc, #80]	@ (802578c <floorf+0x80>)
 802573c:	bf08      	it	eq
 802573e:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 8025742:	ee00 3a10 	vmov	s0, r3
 8025746:	4770      	bx	lr
 8025748:	4911      	ldr	r1, [pc, #68]	@ (8025790 <floorf+0x84>)
 802574a:	4111      	asrs	r1, r2
 802574c:	420b      	tst	r3, r1
 802574e:	d0fa      	beq.n	8025746 <floorf+0x3a>
 8025750:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 8025788 <floorf+0x7c>
 8025754:	ee30 0a27 	vadd.f32	s0, s0, s15
 8025758:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802575c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025760:	ddef      	ble.n	8025742 <floorf+0x36>
 8025762:	2b00      	cmp	r3, #0
 8025764:	bfbe      	ittt	lt
 8025766:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 802576a:	fa40 f202 	asrlt.w	r2, r0, r2
 802576e:	189b      	addlt	r3, r3, r2
 8025770:	ea23 0301 	bic.w	r3, r3, r1
 8025774:	e7e5      	b.n	8025742 <floorf+0x36>
 8025776:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 802577a:	d3e4      	bcc.n	8025746 <floorf+0x3a>
 802577c:	ee30 0a00 	vadd.f32	s0, s0, s0
 8025780:	4770      	bx	lr
 8025782:	2300      	movs	r3, #0
 8025784:	e7dd      	b.n	8025742 <floorf+0x36>
 8025786:	bf00      	nop
 8025788:	7149f2ca 	.word	0x7149f2ca
 802578c:	bf800000 	.word	0xbf800000
 8025790:	007fffff 	.word	0x007fffff

08025794 <abort>:
 8025794:	b508      	push	{r3, lr}
 8025796:	2006      	movs	r0, #6
 8025798:	f000 fa3c 	bl	8025c14 <raise>
 802579c:	2001      	movs	r0, #1
 802579e:	f7db ffa7 	bl	80016f0 <_exit>
	...

080257a4 <__assert_func>:
 80257a4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80257a6:	4614      	mov	r4, r2
 80257a8:	461a      	mov	r2, r3
 80257aa:	4b09      	ldr	r3, [pc, #36]	@ (80257d0 <__assert_func+0x2c>)
 80257ac:	681b      	ldr	r3, [r3, #0]
 80257ae:	4605      	mov	r5, r0
 80257b0:	68d8      	ldr	r0, [r3, #12]
 80257b2:	b14c      	cbz	r4, 80257c8 <__assert_func+0x24>
 80257b4:	4b07      	ldr	r3, [pc, #28]	@ (80257d4 <__assert_func+0x30>)
 80257b6:	9100      	str	r1, [sp, #0]
 80257b8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80257bc:	4906      	ldr	r1, [pc, #24]	@ (80257d8 <__assert_func+0x34>)
 80257be:	462b      	mov	r3, r5
 80257c0:	f000 f984 	bl	8025acc <fiprintf>
 80257c4:	f7ff ffe6 	bl	8025794 <abort>
 80257c8:	4b04      	ldr	r3, [pc, #16]	@ (80257dc <__assert_func+0x38>)
 80257ca:	461c      	mov	r4, r3
 80257cc:	e7f3      	b.n	80257b6 <__assert_func+0x12>
 80257ce:	bf00      	nop
 80257d0:	20000110 	.word	0x20000110
 80257d4:	08027742 	.word	0x08027742
 80257d8:	0802774f 	.word	0x0802774f
 80257dc:	0802777d 	.word	0x0802777d

080257e0 <atexit>:
 80257e0:	2300      	movs	r3, #0
 80257e2:	4601      	mov	r1, r0
 80257e4:	461a      	mov	r2, r3
 80257e6:	4618      	mov	r0, r3
 80257e8:	f000 bac2 	b.w	8025d70 <__register_exitproc>

080257ec <malloc>:
 80257ec:	4b02      	ldr	r3, [pc, #8]	@ (80257f8 <malloc+0xc>)
 80257ee:	4601      	mov	r1, r0
 80257f0:	6818      	ldr	r0, [r3, #0]
 80257f2:	f000 b82d 	b.w	8025850 <_malloc_r>
 80257f6:	bf00      	nop
 80257f8:	20000110 	.word	0x20000110

080257fc <free>:
 80257fc:	4b02      	ldr	r3, [pc, #8]	@ (8025808 <free+0xc>)
 80257fe:	4601      	mov	r1, r0
 8025800:	6818      	ldr	r0, [r3, #0]
 8025802:	f000 bb11 	b.w	8025e28 <_free_r>
 8025806:	bf00      	nop
 8025808:	20000110 	.word	0x20000110

0802580c <sbrk_aligned>:
 802580c:	b570      	push	{r4, r5, r6, lr}
 802580e:	4e0f      	ldr	r6, [pc, #60]	@ (802584c <sbrk_aligned+0x40>)
 8025810:	460c      	mov	r4, r1
 8025812:	6831      	ldr	r1, [r6, #0]
 8025814:	4605      	mov	r5, r0
 8025816:	b911      	cbnz	r1, 802581e <sbrk_aligned+0x12>
 8025818:	f000 fa4c 	bl	8025cb4 <_sbrk_r>
 802581c:	6030      	str	r0, [r6, #0]
 802581e:	4621      	mov	r1, r4
 8025820:	4628      	mov	r0, r5
 8025822:	f000 fa47 	bl	8025cb4 <_sbrk_r>
 8025826:	1c43      	adds	r3, r0, #1
 8025828:	d103      	bne.n	8025832 <sbrk_aligned+0x26>
 802582a:	f04f 34ff 	mov.w	r4, #4294967295
 802582e:	4620      	mov	r0, r4
 8025830:	bd70      	pop	{r4, r5, r6, pc}
 8025832:	1cc4      	adds	r4, r0, #3
 8025834:	f024 0403 	bic.w	r4, r4, #3
 8025838:	42a0      	cmp	r0, r4
 802583a:	d0f8      	beq.n	802582e <sbrk_aligned+0x22>
 802583c:	1a21      	subs	r1, r4, r0
 802583e:	4628      	mov	r0, r5
 8025840:	f000 fa38 	bl	8025cb4 <_sbrk_r>
 8025844:	3001      	adds	r0, #1
 8025846:	d1f2      	bne.n	802582e <sbrk_aligned+0x22>
 8025848:	e7ef      	b.n	802582a <sbrk_aligned+0x1e>
 802584a:	bf00      	nop
 802584c:	20015d48 	.word	0x20015d48

08025850 <_malloc_r>:
 8025850:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025854:	1ccd      	adds	r5, r1, #3
 8025856:	f025 0503 	bic.w	r5, r5, #3
 802585a:	3508      	adds	r5, #8
 802585c:	2d0c      	cmp	r5, #12
 802585e:	bf38      	it	cc
 8025860:	250c      	movcc	r5, #12
 8025862:	2d00      	cmp	r5, #0
 8025864:	4606      	mov	r6, r0
 8025866:	db01      	blt.n	802586c <_malloc_r+0x1c>
 8025868:	42a9      	cmp	r1, r5
 802586a:	d904      	bls.n	8025876 <_malloc_r+0x26>
 802586c:	230c      	movs	r3, #12
 802586e:	6033      	str	r3, [r6, #0]
 8025870:	2000      	movs	r0, #0
 8025872:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025876:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 802594c <_malloc_r+0xfc>
 802587a:	f000 f869 	bl	8025950 <__malloc_lock>
 802587e:	f8d8 3000 	ldr.w	r3, [r8]
 8025882:	461c      	mov	r4, r3
 8025884:	bb44      	cbnz	r4, 80258d8 <_malloc_r+0x88>
 8025886:	4629      	mov	r1, r5
 8025888:	4630      	mov	r0, r6
 802588a:	f7ff ffbf 	bl	802580c <sbrk_aligned>
 802588e:	1c43      	adds	r3, r0, #1
 8025890:	4604      	mov	r4, r0
 8025892:	d158      	bne.n	8025946 <_malloc_r+0xf6>
 8025894:	f8d8 4000 	ldr.w	r4, [r8]
 8025898:	4627      	mov	r7, r4
 802589a:	2f00      	cmp	r7, #0
 802589c:	d143      	bne.n	8025926 <_malloc_r+0xd6>
 802589e:	2c00      	cmp	r4, #0
 80258a0:	d04b      	beq.n	802593a <_malloc_r+0xea>
 80258a2:	6823      	ldr	r3, [r4, #0]
 80258a4:	4639      	mov	r1, r7
 80258a6:	4630      	mov	r0, r6
 80258a8:	eb04 0903 	add.w	r9, r4, r3
 80258ac:	f000 fa02 	bl	8025cb4 <_sbrk_r>
 80258b0:	4581      	cmp	r9, r0
 80258b2:	d142      	bne.n	802593a <_malloc_r+0xea>
 80258b4:	6821      	ldr	r1, [r4, #0]
 80258b6:	1a6d      	subs	r5, r5, r1
 80258b8:	4629      	mov	r1, r5
 80258ba:	4630      	mov	r0, r6
 80258bc:	f7ff ffa6 	bl	802580c <sbrk_aligned>
 80258c0:	3001      	adds	r0, #1
 80258c2:	d03a      	beq.n	802593a <_malloc_r+0xea>
 80258c4:	6823      	ldr	r3, [r4, #0]
 80258c6:	442b      	add	r3, r5
 80258c8:	6023      	str	r3, [r4, #0]
 80258ca:	f8d8 3000 	ldr.w	r3, [r8]
 80258ce:	685a      	ldr	r2, [r3, #4]
 80258d0:	bb62      	cbnz	r2, 802592c <_malloc_r+0xdc>
 80258d2:	f8c8 7000 	str.w	r7, [r8]
 80258d6:	e00f      	b.n	80258f8 <_malloc_r+0xa8>
 80258d8:	6822      	ldr	r2, [r4, #0]
 80258da:	1b52      	subs	r2, r2, r5
 80258dc:	d420      	bmi.n	8025920 <_malloc_r+0xd0>
 80258de:	2a0b      	cmp	r2, #11
 80258e0:	d917      	bls.n	8025912 <_malloc_r+0xc2>
 80258e2:	1961      	adds	r1, r4, r5
 80258e4:	42a3      	cmp	r3, r4
 80258e6:	6025      	str	r5, [r4, #0]
 80258e8:	bf18      	it	ne
 80258ea:	6059      	strne	r1, [r3, #4]
 80258ec:	6863      	ldr	r3, [r4, #4]
 80258ee:	bf08      	it	eq
 80258f0:	f8c8 1000 	streq.w	r1, [r8]
 80258f4:	5162      	str	r2, [r4, r5]
 80258f6:	604b      	str	r3, [r1, #4]
 80258f8:	4630      	mov	r0, r6
 80258fa:	f000 f82f 	bl	802595c <__malloc_unlock>
 80258fe:	f104 000b 	add.w	r0, r4, #11
 8025902:	1d23      	adds	r3, r4, #4
 8025904:	f020 0007 	bic.w	r0, r0, #7
 8025908:	1ac2      	subs	r2, r0, r3
 802590a:	bf1c      	itt	ne
 802590c:	1a1b      	subne	r3, r3, r0
 802590e:	50a3      	strne	r3, [r4, r2]
 8025910:	e7af      	b.n	8025872 <_malloc_r+0x22>
 8025912:	6862      	ldr	r2, [r4, #4]
 8025914:	42a3      	cmp	r3, r4
 8025916:	bf0c      	ite	eq
 8025918:	f8c8 2000 	streq.w	r2, [r8]
 802591c:	605a      	strne	r2, [r3, #4]
 802591e:	e7eb      	b.n	80258f8 <_malloc_r+0xa8>
 8025920:	4623      	mov	r3, r4
 8025922:	6864      	ldr	r4, [r4, #4]
 8025924:	e7ae      	b.n	8025884 <_malloc_r+0x34>
 8025926:	463c      	mov	r4, r7
 8025928:	687f      	ldr	r7, [r7, #4]
 802592a:	e7b6      	b.n	802589a <_malloc_r+0x4a>
 802592c:	461a      	mov	r2, r3
 802592e:	685b      	ldr	r3, [r3, #4]
 8025930:	42a3      	cmp	r3, r4
 8025932:	d1fb      	bne.n	802592c <_malloc_r+0xdc>
 8025934:	2300      	movs	r3, #0
 8025936:	6053      	str	r3, [r2, #4]
 8025938:	e7de      	b.n	80258f8 <_malloc_r+0xa8>
 802593a:	230c      	movs	r3, #12
 802593c:	6033      	str	r3, [r6, #0]
 802593e:	4630      	mov	r0, r6
 8025940:	f000 f80c 	bl	802595c <__malloc_unlock>
 8025944:	e794      	b.n	8025870 <_malloc_r+0x20>
 8025946:	6005      	str	r5, [r0, #0]
 8025948:	e7d6      	b.n	80258f8 <_malloc_r+0xa8>
 802594a:	bf00      	nop
 802594c:	20015d4c 	.word	0x20015d4c

08025950 <__malloc_lock>:
 8025950:	4801      	ldr	r0, [pc, #4]	@ (8025958 <__malloc_lock+0x8>)
 8025952:	f000 b9fc 	b.w	8025d4e <__retarget_lock_acquire_recursive>
 8025956:	bf00      	nop
 8025958:	20015e90 	.word	0x20015e90

0802595c <__malloc_unlock>:
 802595c:	4801      	ldr	r0, [pc, #4]	@ (8025964 <__malloc_unlock+0x8>)
 802595e:	f000 b9f7 	b.w	8025d50 <__retarget_lock_release_recursive>
 8025962:	bf00      	nop
 8025964:	20015e90 	.word	0x20015e90

08025968 <__cxa_atexit>:
 8025968:	b510      	push	{r4, lr}
 802596a:	4604      	mov	r4, r0
 802596c:	4804      	ldr	r0, [pc, #16]	@ (8025980 <__cxa_atexit+0x18>)
 802596e:	4613      	mov	r3, r2
 8025970:	b120      	cbz	r0, 802597c <__cxa_atexit+0x14>
 8025972:	460a      	mov	r2, r1
 8025974:	2002      	movs	r0, #2
 8025976:	4621      	mov	r1, r4
 8025978:	f000 f9fa 	bl	8025d70 <__register_exitproc>
 802597c:	bd10      	pop	{r4, pc}
 802597e:	bf00      	nop
 8025980:	08025d71 	.word	0x08025d71

08025984 <std>:
 8025984:	2300      	movs	r3, #0
 8025986:	b510      	push	{r4, lr}
 8025988:	4604      	mov	r4, r0
 802598a:	e9c0 3300 	strd	r3, r3, [r0]
 802598e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8025992:	6083      	str	r3, [r0, #8]
 8025994:	8181      	strh	r1, [r0, #12]
 8025996:	6643      	str	r3, [r0, #100]	@ 0x64
 8025998:	81c2      	strh	r2, [r0, #14]
 802599a:	6183      	str	r3, [r0, #24]
 802599c:	4619      	mov	r1, r3
 802599e:	2208      	movs	r2, #8
 80259a0:	305c      	adds	r0, #92	@ 0x5c
 80259a2:	f000 f906 	bl	8025bb2 <memset>
 80259a6:	4b0d      	ldr	r3, [pc, #52]	@ (80259dc <std+0x58>)
 80259a8:	6263      	str	r3, [r4, #36]	@ 0x24
 80259aa:	4b0d      	ldr	r3, [pc, #52]	@ (80259e0 <std+0x5c>)
 80259ac:	62a3      	str	r3, [r4, #40]	@ 0x28
 80259ae:	4b0d      	ldr	r3, [pc, #52]	@ (80259e4 <std+0x60>)
 80259b0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80259b2:	4b0d      	ldr	r3, [pc, #52]	@ (80259e8 <std+0x64>)
 80259b4:	6323      	str	r3, [r4, #48]	@ 0x30
 80259b6:	4b0d      	ldr	r3, [pc, #52]	@ (80259ec <std+0x68>)
 80259b8:	6224      	str	r4, [r4, #32]
 80259ba:	429c      	cmp	r4, r3
 80259bc:	d006      	beq.n	80259cc <std+0x48>
 80259be:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80259c2:	4294      	cmp	r4, r2
 80259c4:	d002      	beq.n	80259cc <std+0x48>
 80259c6:	33d0      	adds	r3, #208	@ 0xd0
 80259c8:	429c      	cmp	r4, r3
 80259ca:	d105      	bne.n	80259d8 <std+0x54>
 80259cc:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80259d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80259d4:	f000 b9ba 	b.w	8025d4c <__retarget_lock_init_recursive>
 80259d8:	bd10      	pop	{r4, pc}
 80259da:	bf00      	nop
 80259dc:	08025b2d 	.word	0x08025b2d
 80259e0:	08025b4f 	.word	0x08025b4f
 80259e4:	08025b87 	.word	0x08025b87
 80259e8:	08025bab 	.word	0x08025bab
 80259ec:	20015d50 	.word	0x20015d50

080259f0 <stdio_exit_handler>:
 80259f0:	4a02      	ldr	r2, [pc, #8]	@ (80259fc <stdio_exit_handler+0xc>)
 80259f2:	4903      	ldr	r1, [pc, #12]	@ (8025a00 <stdio_exit_handler+0x10>)
 80259f4:	4803      	ldr	r0, [pc, #12]	@ (8025a04 <stdio_exit_handler+0x14>)
 80259f6:	f000 b87b 	b.w	8025af0 <_fwalk_sglue>
 80259fa:	bf00      	nop
 80259fc:	20000104 	.word	0x20000104
 8025a00:	08026561 	.word	0x08026561
 8025a04:	20000114 	.word	0x20000114

08025a08 <cleanup_stdio>:
 8025a08:	6841      	ldr	r1, [r0, #4]
 8025a0a:	4b0c      	ldr	r3, [pc, #48]	@ (8025a3c <cleanup_stdio+0x34>)
 8025a0c:	4299      	cmp	r1, r3
 8025a0e:	b510      	push	{r4, lr}
 8025a10:	4604      	mov	r4, r0
 8025a12:	d001      	beq.n	8025a18 <cleanup_stdio+0x10>
 8025a14:	f000 fda4 	bl	8026560 <_fflush_r>
 8025a18:	68a1      	ldr	r1, [r4, #8]
 8025a1a:	4b09      	ldr	r3, [pc, #36]	@ (8025a40 <cleanup_stdio+0x38>)
 8025a1c:	4299      	cmp	r1, r3
 8025a1e:	d002      	beq.n	8025a26 <cleanup_stdio+0x1e>
 8025a20:	4620      	mov	r0, r4
 8025a22:	f000 fd9d 	bl	8026560 <_fflush_r>
 8025a26:	68e1      	ldr	r1, [r4, #12]
 8025a28:	4b06      	ldr	r3, [pc, #24]	@ (8025a44 <cleanup_stdio+0x3c>)
 8025a2a:	4299      	cmp	r1, r3
 8025a2c:	d004      	beq.n	8025a38 <cleanup_stdio+0x30>
 8025a2e:	4620      	mov	r0, r4
 8025a30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025a34:	f000 bd94 	b.w	8026560 <_fflush_r>
 8025a38:	bd10      	pop	{r4, pc}
 8025a3a:	bf00      	nop
 8025a3c:	20015d50 	.word	0x20015d50
 8025a40:	20015db8 	.word	0x20015db8
 8025a44:	20015e20 	.word	0x20015e20

08025a48 <global_stdio_init.part.0>:
 8025a48:	b510      	push	{r4, lr}
 8025a4a:	4b0b      	ldr	r3, [pc, #44]	@ (8025a78 <global_stdio_init.part.0+0x30>)
 8025a4c:	4c0b      	ldr	r4, [pc, #44]	@ (8025a7c <global_stdio_init.part.0+0x34>)
 8025a4e:	4a0c      	ldr	r2, [pc, #48]	@ (8025a80 <global_stdio_init.part.0+0x38>)
 8025a50:	601a      	str	r2, [r3, #0]
 8025a52:	4620      	mov	r0, r4
 8025a54:	2200      	movs	r2, #0
 8025a56:	2104      	movs	r1, #4
 8025a58:	f7ff ff94 	bl	8025984 <std>
 8025a5c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8025a60:	2201      	movs	r2, #1
 8025a62:	2109      	movs	r1, #9
 8025a64:	f7ff ff8e 	bl	8025984 <std>
 8025a68:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8025a6c:	2202      	movs	r2, #2
 8025a6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025a72:	2112      	movs	r1, #18
 8025a74:	f7ff bf86 	b.w	8025984 <std>
 8025a78:	20015e88 	.word	0x20015e88
 8025a7c:	20015d50 	.word	0x20015d50
 8025a80:	080259f1 	.word	0x080259f1

08025a84 <__sfp_lock_acquire>:
 8025a84:	4801      	ldr	r0, [pc, #4]	@ (8025a8c <__sfp_lock_acquire+0x8>)
 8025a86:	f000 b962 	b.w	8025d4e <__retarget_lock_acquire_recursive>
 8025a8a:	bf00      	nop
 8025a8c:	20015e92 	.word	0x20015e92

08025a90 <__sfp_lock_release>:
 8025a90:	4801      	ldr	r0, [pc, #4]	@ (8025a98 <__sfp_lock_release+0x8>)
 8025a92:	f000 b95d 	b.w	8025d50 <__retarget_lock_release_recursive>
 8025a96:	bf00      	nop
 8025a98:	20015e92 	.word	0x20015e92

08025a9c <__sinit>:
 8025a9c:	b510      	push	{r4, lr}
 8025a9e:	4604      	mov	r4, r0
 8025aa0:	f7ff fff0 	bl	8025a84 <__sfp_lock_acquire>
 8025aa4:	6a23      	ldr	r3, [r4, #32]
 8025aa6:	b11b      	cbz	r3, 8025ab0 <__sinit+0x14>
 8025aa8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025aac:	f7ff bff0 	b.w	8025a90 <__sfp_lock_release>
 8025ab0:	4b04      	ldr	r3, [pc, #16]	@ (8025ac4 <__sinit+0x28>)
 8025ab2:	6223      	str	r3, [r4, #32]
 8025ab4:	4b04      	ldr	r3, [pc, #16]	@ (8025ac8 <__sinit+0x2c>)
 8025ab6:	681b      	ldr	r3, [r3, #0]
 8025ab8:	2b00      	cmp	r3, #0
 8025aba:	d1f5      	bne.n	8025aa8 <__sinit+0xc>
 8025abc:	f7ff ffc4 	bl	8025a48 <global_stdio_init.part.0>
 8025ac0:	e7f2      	b.n	8025aa8 <__sinit+0xc>
 8025ac2:	bf00      	nop
 8025ac4:	08025a09 	.word	0x08025a09
 8025ac8:	20015e88 	.word	0x20015e88

08025acc <fiprintf>:
 8025acc:	b40e      	push	{r1, r2, r3}
 8025ace:	b503      	push	{r0, r1, lr}
 8025ad0:	4601      	mov	r1, r0
 8025ad2:	ab03      	add	r3, sp, #12
 8025ad4:	4805      	ldr	r0, [pc, #20]	@ (8025aec <fiprintf+0x20>)
 8025ad6:	f853 2b04 	ldr.w	r2, [r3], #4
 8025ada:	6800      	ldr	r0, [r0, #0]
 8025adc:	9301      	str	r3, [sp, #4]
 8025ade:	f000 fa17 	bl	8025f10 <_vfiprintf_r>
 8025ae2:	b002      	add	sp, #8
 8025ae4:	f85d eb04 	ldr.w	lr, [sp], #4
 8025ae8:	b003      	add	sp, #12
 8025aea:	4770      	bx	lr
 8025aec:	20000110 	.word	0x20000110

08025af0 <_fwalk_sglue>:
 8025af0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025af4:	4607      	mov	r7, r0
 8025af6:	4688      	mov	r8, r1
 8025af8:	4614      	mov	r4, r2
 8025afa:	2600      	movs	r6, #0
 8025afc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8025b00:	f1b9 0901 	subs.w	r9, r9, #1
 8025b04:	d505      	bpl.n	8025b12 <_fwalk_sglue+0x22>
 8025b06:	6824      	ldr	r4, [r4, #0]
 8025b08:	2c00      	cmp	r4, #0
 8025b0a:	d1f7      	bne.n	8025afc <_fwalk_sglue+0xc>
 8025b0c:	4630      	mov	r0, r6
 8025b0e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025b12:	89ab      	ldrh	r3, [r5, #12]
 8025b14:	2b01      	cmp	r3, #1
 8025b16:	d907      	bls.n	8025b28 <_fwalk_sglue+0x38>
 8025b18:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8025b1c:	3301      	adds	r3, #1
 8025b1e:	d003      	beq.n	8025b28 <_fwalk_sglue+0x38>
 8025b20:	4629      	mov	r1, r5
 8025b22:	4638      	mov	r0, r7
 8025b24:	47c0      	blx	r8
 8025b26:	4306      	orrs	r6, r0
 8025b28:	3568      	adds	r5, #104	@ 0x68
 8025b2a:	e7e9      	b.n	8025b00 <_fwalk_sglue+0x10>

08025b2c <__sread>:
 8025b2c:	b510      	push	{r4, lr}
 8025b2e:	460c      	mov	r4, r1
 8025b30:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025b34:	f000 f898 	bl	8025c68 <_read_r>
 8025b38:	2800      	cmp	r0, #0
 8025b3a:	bfab      	itete	ge
 8025b3c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8025b3e:	89a3      	ldrhlt	r3, [r4, #12]
 8025b40:	181b      	addge	r3, r3, r0
 8025b42:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8025b46:	bfac      	ite	ge
 8025b48:	6563      	strge	r3, [r4, #84]	@ 0x54
 8025b4a:	81a3      	strhlt	r3, [r4, #12]
 8025b4c:	bd10      	pop	{r4, pc}

08025b4e <__swrite>:
 8025b4e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025b52:	461f      	mov	r7, r3
 8025b54:	898b      	ldrh	r3, [r1, #12]
 8025b56:	05db      	lsls	r3, r3, #23
 8025b58:	4605      	mov	r5, r0
 8025b5a:	460c      	mov	r4, r1
 8025b5c:	4616      	mov	r6, r2
 8025b5e:	d505      	bpl.n	8025b6c <__swrite+0x1e>
 8025b60:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025b64:	2302      	movs	r3, #2
 8025b66:	2200      	movs	r2, #0
 8025b68:	f000 f86c 	bl	8025c44 <_lseek_r>
 8025b6c:	89a3      	ldrh	r3, [r4, #12]
 8025b6e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8025b72:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8025b76:	81a3      	strh	r3, [r4, #12]
 8025b78:	4632      	mov	r2, r6
 8025b7a:	463b      	mov	r3, r7
 8025b7c:	4628      	mov	r0, r5
 8025b7e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8025b82:	f000 b8a7 	b.w	8025cd4 <_write_r>

08025b86 <__sseek>:
 8025b86:	b510      	push	{r4, lr}
 8025b88:	460c      	mov	r4, r1
 8025b8a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025b8e:	f000 f859 	bl	8025c44 <_lseek_r>
 8025b92:	1c43      	adds	r3, r0, #1
 8025b94:	89a3      	ldrh	r3, [r4, #12]
 8025b96:	bf15      	itete	ne
 8025b98:	6560      	strne	r0, [r4, #84]	@ 0x54
 8025b9a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8025b9e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8025ba2:	81a3      	strheq	r3, [r4, #12]
 8025ba4:	bf18      	it	ne
 8025ba6:	81a3      	strhne	r3, [r4, #12]
 8025ba8:	bd10      	pop	{r4, pc}

08025baa <__sclose>:
 8025baa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025bae:	f000 b839 	b.w	8025c24 <_close_r>

08025bb2 <memset>:
 8025bb2:	4402      	add	r2, r0
 8025bb4:	4603      	mov	r3, r0
 8025bb6:	4293      	cmp	r3, r2
 8025bb8:	d100      	bne.n	8025bbc <memset+0xa>
 8025bba:	4770      	bx	lr
 8025bbc:	f803 1b01 	strb.w	r1, [r3], #1
 8025bc0:	e7f9      	b.n	8025bb6 <memset+0x4>

08025bc2 <_raise_r>:
 8025bc2:	291f      	cmp	r1, #31
 8025bc4:	b538      	push	{r3, r4, r5, lr}
 8025bc6:	4605      	mov	r5, r0
 8025bc8:	460c      	mov	r4, r1
 8025bca:	d904      	bls.n	8025bd6 <_raise_r+0x14>
 8025bcc:	2316      	movs	r3, #22
 8025bce:	6003      	str	r3, [r0, #0]
 8025bd0:	f04f 30ff 	mov.w	r0, #4294967295
 8025bd4:	bd38      	pop	{r3, r4, r5, pc}
 8025bd6:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8025bd8:	b112      	cbz	r2, 8025be0 <_raise_r+0x1e>
 8025bda:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8025bde:	b94b      	cbnz	r3, 8025bf4 <_raise_r+0x32>
 8025be0:	4628      	mov	r0, r5
 8025be2:	f000 f865 	bl	8025cb0 <_getpid_r>
 8025be6:	4622      	mov	r2, r4
 8025be8:	4601      	mov	r1, r0
 8025bea:	4628      	mov	r0, r5
 8025bec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8025bf0:	f000 b84c 	b.w	8025c8c <_kill_r>
 8025bf4:	2b01      	cmp	r3, #1
 8025bf6:	d00a      	beq.n	8025c0e <_raise_r+0x4c>
 8025bf8:	1c59      	adds	r1, r3, #1
 8025bfa:	d103      	bne.n	8025c04 <_raise_r+0x42>
 8025bfc:	2316      	movs	r3, #22
 8025bfe:	6003      	str	r3, [r0, #0]
 8025c00:	2001      	movs	r0, #1
 8025c02:	e7e7      	b.n	8025bd4 <_raise_r+0x12>
 8025c04:	2100      	movs	r1, #0
 8025c06:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8025c0a:	4620      	mov	r0, r4
 8025c0c:	4798      	blx	r3
 8025c0e:	2000      	movs	r0, #0
 8025c10:	e7e0      	b.n	8025bd4 <_raise_r+0x12>
	...

08025c14 <raise>:
 8025c14:	4b02      	ldr	r3, [pc, #8]	@ (8025c20 <raise+0xc>)
 8025c16:	4601      	mov	r1, r0
 8025c18:	6818      	ldr	r0, [r3, #0]
 8025c1a:	f7ff bfd2 	b.w	8025bc2 <_raise_r>
 8025c1e:	bf00      	nop
 8025c20:	20000110 	.word	0x20000110

08025c24 <_close_r>:
 8025c24:	b538      	push	{r3, r4, r5, lr}
 8025c26:	4d06      	ldr	r5, [pc, #24]	@ (8025c40 <_close_r+0x1c>)
 8025c28:	2300      	movs	r3, #0
 8025c2a:	4604      	mov	r4, r0
 8025c2c:	4608      	mov	r0, r1
 8025c2e:	602b      	str	r3, [r5, #0]
 8025c30:	f7db fd80 	bl	8001734 <_close>
 8025c34:	1c43      	adds	r3, r0, #1
 8025c36:	d102      	bne.n	8025c3e <_close_r+0x1a>
 8025c38:	682b      	ldr	r3, [r5, #0]
 8025c3a:	b103      	cbz	r3, 8025c3e <_close_r+0x1a>
 8025c3c:	6023      	str	r3, [r4, #0]
 8025c3e:	bd38      	pop	{r3, r4, r5, pc}
 8025c40:	20015e8c 	.word	0x20015e8c

08025c44 <_lseek_r>:
 8025c44:	b538      	push	{r3, r4, r5, lr}
 8025c46:	4d07      	ldr	r5, [pc, #28]	@ (8025c64 <_lseek_r+0x20>)
 8025c48:	4604      	mov	r4, r0
 8025c4a:	4608      	mov	r0, r1
 8025c4c:	4611      	mov	r1, r2
 8025c4e:	2200      	movs	r2, #0
 8025c50:	602a      	str	r2, [r5, #0]
 8025c52:	461a      	mov	r2, r3
 8025c54:	f7db fd78 	bl	8001748 <_lseek>
 8025c58:	1c43      	adds	r3, r0, #1
 8025c5a:	d102      	bne.n	8025c62 <_lseek_r+0x1e>
 8025c5c:	682b      	ldr	r3, [r5, #0]
 8025c5e:	b103      	cbz	r3, 8025c62 <_lseek_r+0x1e>
 8025c60:	6023      	str	r3, [r4, #0]
 8025c62:	bd38      	pop	{r3, r4, r5, pc}
 8025c64:	20015e8c 	.word	0x20015e8c

08025c68 <_read_r>:
 8025c68:	b538      	push	{r3, r4, r5, lr}
 8025c6a:	4d07      	ldr	r5, [pc, #28]	@ (8025c88 <_read_r+0x20>)
 8025c6c:	4604      	mov	r4, r0
 8025c6e:	4608      	mov	r0, r1
 8025c70:	4611      	mov	r1, r2
 8025c72:	2200      	movs	r2, #0
 8025c74:	602a      	str	r2, [r5, #0]
 8025c76:	461a      	mov	r2, r3
 8025c78:	f7db fd40 	bl	80016fc <_read>
 8025c7c:	1c43      	adds	r3, r0, #1
 8025c7e:	d102      	bne.n	8025c86 <_read_r+0x1e>
 8025c80:	682b      	ldr	r3, [r5, #0]
 8025c82:	b103      	cbz	r3, 8025c86 <_read_r+0x1e>
 8025c84:	6023      	str	r3, [r4, #0]
 8025c86:	bd38      	pop	{r3, r4, r5, pc}
 8025c88:	20015e8c 	.word	0x20015e8c

08025c8c <_kill_r>:
 8025c8c:	b538      	push	{r3, r4, r5, lr}
 8025c8e:	4d07      	ldr	r5, [pc, #28]	@ (8025cac <_kill_r+0x20>)
 8025c90:	2300      	movs	r3, #0
 8025c92:	4604      	mov	r4, r0
 8025c94:	4608      	mov	r0, r1
 8025c96:	4611      	mov	r1, r2
 8025c98:	602b      	str	r3, [r5, #0]
 8025c9a:	f7db fd21 	bl	80016e0 <_kill>
 8025c9e:	1c43      	adds	r3, r0, #1
 8025ca0:	d102      	bne.n	8025ca8 <_kill_r+0x1c>
 8025ca2:	682b      	ldr	r3, [r5, #0]
 8025ca4:	b103      	cbz	r3, 8025ca8 <_kill_r+0x1c>
 8025ca6:	6023      	str	r3, [r4, #0]
 8025ca8:	bd38      	pop	{r3, r4, r5, pc}
 8025caa:	bf00      	nop
 8025cac:	20015e8c 	.word	0x20015e8c

08025cb0 <_getpid_r>:
 8025cb0:	f7db bd14 	b.w	80016dc <_getpid>

08025cb4 <_sbrk_r>:
 8025cb4:	b538      	push	{r3, r4, r5, lr}
 8025cb6:	4d06      	ldr	r5, [pc, #24]	@ (8025cd0 <_sbrk_r+0x1c>)
 8025cb8:	2300      	movs	r3, #0
 8025cba:	4604      	mov	r4, r0
 8025cbc:	4608      	mov	r0, r1
 8025cbe:	602b      	str	r3, [r5, #0]
 8025cc0:	f7db fd44 	bl	800174c <_sbrk>
 8025cc4:	1c43      	adds	r3, r0, #1
 8025cc6:	d102      	bne.n	8025cce <_sbrk_r+0x1a>
 8025cc8:	682b      	ldr	r3, [r5, #0]
 8025cca:	b103      	cbz	r3, 8025cce <_sbrk_r+0x1a>
 8025ccc:	6023      	str	r3, [r4, #0]
 8025cce:	bd38      	pop	{r3, r4, r5, pc}
 8025cd0:	20015e8c 	.word	0x20015e8c

08025cd4 <_write_r>:
 8025cd4:	b538      	push	{r3, r4, r5, lr}
 8025cd6:	4d07      	ldr	r5, [pc, #28]	@ (8025cf4 <_write_r+0x20>)
 8025cd8:	4604      	mov	r4, r0
 8025cda:	4608      	mov	r0, r1
 8025cdc:	4611      	mov	r1, r2
 8025cde:	2200      	movs	r2, #0
 8025ce0:	602a      	str	r2, [r5, #0]
 8025ce2:	461a      	mov	r2, r3
 8025ce4:	f7db fd18 	bl	8001718 <_write>
 8025ce8:	1c43      	adds	r3, r0, #1
 8025cea:	d102      	bne.n	8025cf2 <_write_r+0x1e>
 8025cec:	682b      	ldr	r3, [r5, #0]
 8025cee:	b103      	cbz	r3, 8025cf2 <_write_r+0x1e>
 8025cf0:	6023      	str	r3, [r4, #0]
 8025cf2:	bd38      	pop	{r3, r4, r5, pc}
 8025cf4:	20015e8c 	.word	0x20015e8c

08025cf8 <__errno>:
 8025cf8:	4b01      	ldr	r3, [pc, #4]	@ (8025d00 <__errno+0x8>)
 8025cfa:	6818      	ldr	r0, [r3, #0]
 8025cfc:	4770      	bx	lr
 8025cfe:	bf00      	nop
 8025d00:	20000110 	.word	0x20000110

08025d04 <__libc_init_array>:
 8025d04:	b570      	push	{r4, r5, r6, lr}
 8025d06:	4d0d      	ldr	r5, [pc, #52]	@ (8025d3c <__libc_init_array+0x38>)
 8025d08:	4c0d      	ldr	r4, [pc, #52]	@ (8025d40 <__libc_init_array+0x3c>)
 8025d0a:	1b64      	subs	r4, r4, r5
 8025d0c:	10a4      	asrs	r4, r4, #2
 8025d0e:	2600      	movs	r6, #0
 8025d10:	42a6      	cmp	r6, r4
 8025d12:	d109      	bne.n	8025d28 <__libc_init_array+0x24>
 8025d14:	4d0b      	ldr	r5, [pc, #44]	@ (8025d44 <__libc_init_array+0x40>)
 8025d16:	4c0c      	ldr	r4, [pc, #48]	@ (8025d48 <__libc_init_array+0x44>)
 8025d18:	f000 fd62 	bl	80267e0 <_init>
 8025d1c:	1b64      	subs	r4, r4, r5
 8025d1e:	10a4      	asrs	r4, r4, #2
 8025d20:	2600      	movs	r6, #0
 8025d22:	42a6      	cmp	r6, r4
 8025d24:	d105      	bne.n	8025d32 <__libc_init_array+0x2e>
 8025d26:	bd70      	pop	{r4, r5, r6, pc}
 8025d28:	f855 3b04 	ldr.w	r3, [r5], #4
 8025d2c:	4798      	blx	r3
 8025d2e:	3601      	adds	r6, #1
 8025d30:	e7ee      	b.n	8025d10 <__libc_init_array+0xc>
 8025d32:	f855 3b04 	ldr.w	r3, [r5], #4
 8025d36:	4798      	blx	r3
 8025d38:	3601      	adds	r6, #1
 8025d3a:	e7f2      	b.n	8025d22 <__libc_init_array+0x1e>
 8025d3c:	081d05d0 	.word	0x081d05d0
 8025d40:	081d05d0 	.word	0x081d05d0
 8025d44:	081d05d0 	.word	0x081d05d0
 8025d48:	081d05e4 	.word	0x081d05e4

08025d4c <__retarget_lock_init_recursive>:
 8025d4c:	4770      	bx	lr

08025d4e <__retarget_lock_acquire_recursive>:
 8025d4e:	4770      	bx	lr

08025d50 <__retarget_lock_release_recursive>:
 8025d50:	4770      	bx	lr

08025d52 <memcpy>:
 8025d52:	440a      	add	r2, r1
 8025d54:	4291      	cmp	r1, r2
 8025d56:	f100 33ff 	add.w	r3, r0, #4294967295
 8025d5a:	d100      	bne.n	8025d5e <memcpy+0xc>
 8025d5c:	4770      	bx	lr
 8025d5e:	b510      	push	{r4, lr}
 8025d60:	f811 4b01 	ldrb.w	r4, [r1], #1
 8025d64:	f803 4f01 	strb.w	r4, [r3, #1]!
 8025d68:	4291      	cmp	r1, r2
 8025d6a:	d1f9      	bne.n	8025d60 <memcpy+0xe>
 8025d6c:	bd10      	pop	{r4, pc}
	...

08025d70 <__register_exitproc>:
 8025d70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025d74:	4d27      	ldr	r5, [pc, #156]	@ (8025e14 <__register_exitproc+0xa4>)
 8025d76:	4607      	mov	r7, r0
 8025d78:	6828      	ldr	r0, [r5, #0]
 8025d7a:	4691      	mov	r9, r2
 8025d7c:	460e      	mov	r6, r1
 8025d7e:	4698      	mov	r8, r3
 8025d80:	f7ff ffe5 	bl	8025d4e <__retarget_lock_acquire_recursive>
 8025d84:	4a24      	ldr	r2, [pc, #144]	@ (8025e18 <__register_exitproc+0xa8>)
 8025d86:	6814      	ldr	r4, [r2, #0]
 8025d88:	b93c      	cbnz	r4, 8025d9a <__register_exitproc+0x2a>
 8025d8a:	4b24      	ldr	r3, [pc, #144]	@ (8025e1c <__register_exitproc+0xac>)
 8025d8c:	6013      	str	r3, [r2, #0]
 8025d8e:	4a24      	ldr	r2, [pc, #144]	@ (8025e20 <__register_exitproc+0xb0>)
 8025d90:	b112      	cbz	r2, 8025d98 <__register_exitproc+0x28>
 8025d92:	6812      	ldr	r2, [r2, #0]
 8025d94:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8025d98:	4c20      	ldr	r4, [pc, #128]	@ (8025e1c <__register_exitproc+0xac>)
 8025d9a:	6863      	ldr	r3, [r4, #4]
 8025d9c:	2b1f      	cmp	r3, #31
 8025d9e:	dd06      	ble.n	8025dae <__register_exitproc+0x3e>
 8025da0:	6828      	ldr	r0, [r5, #0]
 8025da2:	f7ff ffd5 	bl	8025d50 <__retarget_lock_release_recursive>
 8025da6:	f04f 30ff 	mov.w	r0, #4294967295
 8025daa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025dae:	b32f      	cbz	r7, 8025dfc <__register_exitproc+0x8c>
 8025db0:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8025db4:	b968      	cbnz	r0, 8025dd2 <__register_exitproc+0x62>
 8025db6:	4b1b      	ldr	r3, [pc, #108]	@ (8025e24 <__register_exitproc+0xb4>)
 8025db8:	2b00      	cmp	r3, #0
 8025dba:	d0f1      	beq.n	8025da0 <__register_exitproc+0x30>
 8025dbc:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8025dc0:	f7ff fd14 	bl	80257ec <malloc>
 8025dc4:	2800      	cmp	r0, #0
 8025dc6:	d0eb      	beq.n	8025da0 <__register_exitproc+0x30>
 8025dc8:	2300      	movs	r3, #0
 8025dca:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 8025dce:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8025dd2:	6863      	ldr	r3, [r4, #4]
 8025dd4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8025dd8:	2201      	movs	r2, #1
 8025dda:	409a      	lsls	r2, r3
 8025ddc:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8025de0:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8025de4:	4313      	orrs	r3, r2
 8025de6:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 8025dea:	2f02      	cmp	r7, #2
 8025dec:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8025df0:	bf02      	ittt	eq
 8025df2:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 8025df6:	4313      	orreq	r3, r2
 8025df8:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 8025dfc:	6863      	ldr	r3, [r4, #4]
 8025dfe:	6828      	ldr	r0, [r5, #0]
 8025e00:	1c5a      	adds	r2, r3, #1
 8025e02:	3302      	adds	r3, #2
 8025e04:	6062      	str	r2, [r4, #4]
 8025e06:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 8025e0a:	f7ff ffa1 	bl	8025d50 <__retarget_lock_release_recursive>
 8025e0e:	2000      	movs	r0, #0
 8025e10:	e7cb      	b.n	8025daa <__register_exitproc+0x3a>
 8025e12:	bf00      	nop
 8025e14:	20000160 	.word	0x20000160
 8025e18:	20015f20 	.word	0x20015f20
 8025e1c:	20015e94 	.word	0x20015e94
 8025e20:	080294d4 	.word	0x080294d4
 8025e24:	080257ed 	.word	0x080257ed

08025e28 <_free_r>:
 8025e28:	b538      	push	{r3, r4, r5, lr}
 8025e2a:	4605      	mov	r5, r0
 8025e2c:	2900      	cmp	r1, #0
 8025e2e:	d041      	beq.n	8025eb4 <_free_r+0x8c>
 8025e30:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8025e34:	1f0c      	subs	r4, r1, #4
 8025e36:	2b00      	cmp	r3, #0
 8025e38:	bfb8      	it	lt
 8025e3a:	18e4      	addlt	r4, r4, r3
 8025e3c:	f7ff fd88 	bl	8025950 <__malloc_lock>
 8025e40:	4a1d      	ldr	r2, [pc, #116]	@ (8025eb8 <_free_r+0x90>)
 8025e42:	6813      	ldr	r3, [r2, #0]
 8025e44:	b933      	cbnz	r3, 8025e54 <_free_r+0x2c>
 8025e46:	6063      	str	r3, [r4, #4]
 8025e48:	6014      	str	r4, [r2, #0]
 8025e4a:	4628      	mov	r0, r5
 8025e4c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8025e50:	f7ff bd84 	b.w	802595c <__malloc_unlock>
 8025e54:	42a3      	cmp	r3, r4
 8025e56:	d908      	bls.n	8025e6a <_free_r+0x42>
 8025e58:	6820      	ldr	r0, [r4, #0]
 8025e5a:	1821      	adds	r1, r4, r0
 8025e5c:	428b      	cmp	r3, r1
 8025e5e:	bf01      	itttt	eq
 8025e60:	6819      	ldreq	r1, [r3, #0]
 8025e62:	685b      	ldreq	r3, [r3, #4]
 8025e64:	1809      	addeq	r1, r1, r0
 8025e66:	6021      	streq	r1, [r4, #0]
 8025e68:	e7ed      	b.n	8025e46 <_free_r+0x1e>
 8025e6a:	461a      	mov	r2, r3
 8025e6c:	685b      	ldr	r3, [r3, #4]
 8025e6e:	b10b      	cbz	r3, 8025e74 <_free_r+0x4c>
 8025e70:	42a3      	cmp	r3, r4
 8025e72:	d9fa      	bls.n	8025e6a <_free_r+0x42>
 8025e74:	6811      	ldr	r1, [r2, #0]
 8025e76:	1850      	adds	r0, r2, r1
 8025e78:	42a0      	cmp	r0, r4
 8025e7a:	d10b      	bne.n	8025e94 <_free_r+0x6c>
 8025e7c:	6820      	ldr	r0, [r4, #0]
 8025e7e:	4401      	add	r1, r0
 8025e80:	1850      	adds	r0, r2, r1
 8025e82:	4283      	cmp	r3, r0
 8025e84:	6011      	str	r1, [r2, #0]
 8025e86:	d1e0      	bne.n	8025e4a <_free_r+0x22>
 8025e88:	6818      	ldr	r0, [r3, #0]
 8025e8a:	685b      	ldr	r3, [r3, #4]
 8025e8c:	6053      	str	r3, [r2, #4]
 8025e8e:	4408      	add	r0, r1
 8025e90:	6010      	str	r0, [r2, #0]
 8025e92:	e7da      	b.n	8025e4a <_free_r+0x22>
 8025e94:	d902      	bls.n	8025e9c <_free_r+0x74>
 8025e96:	230c      	movs	r3, #12
 8025e98:	602b      	str	r3, [r5, #0]
 8025e9a:	e7d6      	b.n	8025e4a <_free_r+0x22>
 8025e9c:	6820      	ldr	r0, [r4, #0]
 8025e9e:	1821      	adds	r1, r4, r0
 8025ea0:	428b      	cmp	r3, r1
 8025ea2:	bf04      	itt	eq
 8025ea4:	6819      	ldreq	r1, [r3, #0]
 8025ea6:	685b      	ldreq	r3, [r3, #4]
 8025ea8:	6063      	str	r3, [r4, #4]
 8025eaa:	bf04      	itt	eq
 8025eac:	1809      	addeq	r1, r1, r0
 8025eae:	6021      	streq	r1, [r4, #0]
 8025eb0:	6054      	str	r4, [r2, #4]
 8025eb2:	e7ca      	b.n	8025e4a <_free_r+0x22>
 8025eb4:	bd38      	pop	{r3, r4, r5, pc}
 8025eb6:	bf00      	nop
 8025eb8:	20015d4c 	.word	0x20015d4c

08025ebc <__sfputc_r>:
 8025ebc:	6893      	ldr	r3, [r2, #8]
 8025ebe:	3b01      	subs	r3, #1
 8025ec0:	2b00      	cmp	r3, #0
 8025ec2:	b410      	push	{r4}
 8025ec4:	6093      	str	r3, [r2, #8]
 8025ec6:	da08      	bge.n	8025eda <__sfputc_r+0x1e>
 8025ec8:	6994      	ldr	r4, [r2, #24]
 8025eca:	42a3      	cmp	r3, r4
 8025ecc:	db01      	blt.n	8025ed2 <__sfputc_r+0x16>
 8025ece:	290a      	cmp	r1, #10
 8025ed0:	d103      	bne.n	8025eda <__sfputc_r+0x1e>
 8025ed2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025ed6:	f000 bb6b 	b.w	80265b0 <__swbuf_r>
 8025eda:	6813      	ldr	r3, [r2, #0]
 8025edc:	1c58      	adds	r0, r3, #1
 8025ede:	6010      	str	r0, [r2, #0]
 8025ee0:	7019      	strb	r1, [r3, #0]
 8025ee2:	4608      	mov	r0, r1
 8025ee4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025ee8:	4770      	bx	lr

08025eea <__sfputs_r>:
 8025eea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025eec:	4606      	mov	r6, r0
 8025eee:	460f      	mov	r7, r1
 8025ef0:	4614      	mov	r4, r2
 8025ef2:	18d5      	adds	r5, r2, r3
 8025ef4:	42ac      	cmp	r4, r5
 8025ef6:	d101      	bne.n	8025efc <__sfputs_r+0x12>
 8025ef8:	2000      	movs	r0, #0
 8025efa:	e007      	b.n	8025f0c <__sfputs_r+0x22>
 8025efc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8025f00:	463a      	mov	r2, r7
 8025f02:	4630      	mov	r0, r6
 8025f04:	f7ff ffda 	bl	8025ebc <__sfputc_r>
 8025f08:	1c43      	adds	r3, r0, #1
 8025f0a:	d1f3      	bne.n	8025ef4 <__sfputs_r+0xa>
 8025f0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08025f10 <_vfiprintf_r>:
 8025f10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025f14:	460d      	mov	r5, r1
 8025f16:	b09d      	sub	sp, #116	@ 0x74
 8025f18:	4614      	mov	r4, r2
 8025f1a:	4698      	mov	r8, r3
 8025f1c:	4606      	mov	r6, r0
 8025f1e:	b118      	cbz	r0, 8025f28 <_vfiprintf_r+0x18>
 8025f20:	6a03      	ldr	r3, [r0, #32]
 8025f22:	b90b      	cbnz	r3, 8025f28 <_vfiprintf_r+0x18>
 8025f24:	f7ff fdba 	bl	8025a9c <__sinit>
 8025f28:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8025f2a:	07d9      	lsls	r1, r3, #31
 8025f2c:	d405      	bmi.n	8025f3a <_vfiprintf_r+0x2a>
 8025f2e:	89ab      	ldrh	r3, [r5, #12]
 8025f30:	059a      	lsls	r2, r3, #22
 8025f32:	d402      	bmi.n	8025f3a <_vfiprintf_r+0x2a>
 8025f34:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8025f36:	f7ff ff0a 	bl	8025d4e <__retarget_lock_acquire_recursive>
 8025f3a:	89ab      	ldrh	r3, [r5, #12]
 8025f3c:	071b      	lsls	r3, r3, #28
 8025f3e:	d501      	bpl.n	8025f44 <_vfiprintf_r+0x34>
 8025f40:	692b      	ldr	r3, [r5, #16]
 8025f42:	b99b      	cbnz	r3, 8025f6c <_vfiprintf_r+0x5c>
 8025f44:	4629      	mov	r1, r5
 8025f46:	4630      	mov	r0, r6
 8025f48:	f000 fb70 	bl	802662c <__swsetup_r>
 8025f4c:	b170      	cbz	r0, 8025f6c <_vfiprintf_r+0x5c>
 8025f4e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8025f50:	07dc      	lsls	r4, r3, #31
 8025f52:	d504      	bpl.n	8025f5e <_vfiprintf_r+0x4e>
 8025f54:	f04f 30ff 	mov.w	r0, #4294967295
 8025f58:	b01d      	add	sp, #116	@ 0x74
 8025f5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025f5e:	89ab      	ldrh	r3, [r5, #12]
 8025f60:	0598      	lsls	r0, r3, #22
 8025f62:	d4f7      	bmi.n	8025f54 <_vfiprintf_r+0x44>
 8025f64:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8025f66:	f7ff fef3 	bl	8025d50 <__retarget_lock_release_recursive>
 8025f6a:	e7f3      	b.n	8025f54 <_vfiprintf_r+0x44>
 8025f6c:	2300      	movs	r3, #0
 8025f6e:	9309      	str	r3, [sp, #36]	@ 0x24
 8025f70:	2320      	movs	r3, #32
 8025f72:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8025f76:	f8cd 800c 	str.w	r8, [sp, #12]
 8025f7a:	2330      	movs	r3, #48	@ 0x30
 8025f7c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 802612c <_vfiprintf_r+0x21c>
 8025f80:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8025f84:	f04f 0901 	mov.w	r9, #1
 8025f88:	4623      	mov	r3, r4
 8025f8a:	469a      	mov	sl, r3
 8025f8c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8025f90:	b10a      	cbz	r2, 8025f96 <_vfiprintf_r+0x86>
 8025f92:	2a25      	cmp	r2, #37	@ 0x25
 8025f94:	d1f9      	bne.n	8025f8a <_vfiprintf_r+0x7a>
 8025f96:	ebba 0b04 	subs.w	fp, sl, r4
 8025f9a:	d00b      	beq.n	8025fb4 <_vfiprintf_r+0xa4>
 8025f9c:	465b      	mov	r3, fp
 8025f9e:	4622      	mov	r2, r4
 8025fa0:	4629      	mov	r1, r5
 8025fa2:	4630      	mov	r0, r6
 8025fa4:	f7ff ffa1 	bl	8025eea <__sfputs_r>
 8025fa8:	3001      	adds	r0, #1
 8025faa:	f000 80a7 	beq.w	80260fc <_vfiprintf_r+0x1ec>
 8025fae:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8025fb0:	445a      	add	r2, fp
 8025fb2:	9209      	str	r2, [sp, #36]	@ 0x24
 8025fb4:	f89a 3000 	ldrb.w	r3, [sl]
 8025fb8:	2b00      	cmp	r3, #0
 8025fba:	f000 809f 	beq.w	80260fc <_vfiprintf_r+0x1ec>
 8025fbe:	2300      	movs	r3, #0
 8025fc0:	f04f 32ff 	mov.w	r2, #4294967295
 8025fc4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8025fc8:	f10a 0a01 	add.w	sl, sl, #1
 8025fcc:	9304      	str	r3, [sp, #16]
 8025fce:	9307      	str	r3, [sp, #28]
 8025fd0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8025fd4:	931a      	str	r3, [sp, #104]	@ 0x68
 8025fd6:	4654      	mov	r4, sl
 8025fd8:	2205      	movs	r2, #5
 8025fda:	f814 1b01 	ldrb.w	r1, [r4], #1
 8025fde:	4853      	ldr	r0, [pc, #332]	@ (802612c <_vfiprintf_r+0x21c>)
 8025fe0:	f7da f906 	bl	80001f0 <memchr>
 8025fe4:	9a04      	ldr	r2, [sp, #16]
 8025fe6:	b9d8      	cbnz	r0, 8026020 <_vfiprintf_r+0x110>
 8025fe8:	06d1      	lsls	r1, r2, #27
 8025fea:	bf44      	itt	mi
 8025fec:	2320      	movmi	r3, #32
 8025fee:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8025ff2:	0713      	lsls	r3, r2, #28
 8025ff4:	bf44      	itt	mi
 8025ff6:	232b      	movmi	r3, #43	@ 0x2b
 8025ff8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8025ffc:	f89a 3000 	ldrb.w	r3, [sl]
 8026000:	2b2a      	cmp	r3, #42	@ 0x2a
 8026002:	d015      	beq.n	8026030 <_vfiprintf_r+0x120>
 8026004:	9a07      	ldr	r2, [sp, #28]
 8026006:	4654      	mov	r4, sl
 8026008:	2000      	movs	r0, #0
 802600a:	f04f 0c0a 	mov.w	ip, #10
 802600e:	4621      	mov	r1, r4
 8026010:	f811 3b01 	ldrb.w	r3, [r1], #1
 8026014:	3b30      	subs	r3, #48	@ 0x30
 8026016:	2b09      	cmp	r3, #9
 8026018:	d94b      	bls.n	80260b2 <_vfiprintf_r+0x1a2>
 802601a:	b1b0      	cbz	r0, 802604a <_vfiprintf_r+0x13a>
 802601c:	9207      	str	r2, [sp, #28]
 802601e:	e014      	b.n	802604a <_vfiprintf_r+0x13a>
 8026020:	eba0 0308 	sub.w	r3, r0, r8
 8026024:	fa09 f303 	lsl.w	r3, r9, r3
 8026028:	4313      	orrs	r3, r2
 802602a:	9304      	str	r3, [sp, #16]
 802602c:	46a2      	mov	sl, r4
 802602e:	e7d2      	b.n	8025fd6 <_vfiprintf_r+0xc6>
 8026030:	9b03      	ldr	r3, [sp, #12]
 8026032:	1d19      	adds	r1, r3, #4
 8026034:	681b      	ldr	r3, [r3, #0]
 8026036:	9103      	str	r1, [sp, #12]
 8026038:	2b00      	cmp	r3, #0
 802603a:	bfbb      	ittet	lt
 802603c:	425b      	neglt	r3, r3
 802603e:	f042 0202 	orrlt.w	r2, r2, #2
 8026042:	9307      	strge	r3, [sp, #28]
 8026044:	9307      	strlt	r3, [sp, #28]
 8026046:	bfb8      	it	lt
 8026048:	9204      	strlt	r2, [sp, #16]
 802604a:	7823      	ldrb	r3, [r4, #0]
 802604c:	2b2e      	cmp	r3, #46	@ 0x2e
 802604e:	d10a      	bne.n	8026066 <_vfiprintf_r+0x156>
 8026050:	7863      	ldrb	r3, [r4, #1]
 8026052:	2b2a      	cmp	r3, #42	@ 0x2a
 8026054:	d132      	bne.n	80260bc <_vfiprintf_r+0x1ac>
 8026056:	9b03      	ldr	r3, [sp, #12]
 8026058:	1d1a      	adds	r2, r3, #4
 802605a:	681b      	ldr	r3, [r3, #0]
 802605c:	9203      	str	r2, [sp, #12]
 802605e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8026062:	3402      	adds	r4, #2
 8026064:	9305      	str	r3, [sp, #20]
 8026066:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 802613c <_vfiprintf_r+0x22c>
 802606a:	7821      	ldrb	r1, [r4, #0]
 802606c:	2203      	movs	r2, #3
 802606e:	4650      	mov	r0, sl
 8026070:	f7da f8be 	bl	80001f0 <memchr>
 8026074:	b138      	cbz	r0, 8026086 <_vfiprintf_r+0x176>
 8026076:	9b04      	ldr	r3, [sp, #16]
 8026078:	eba0 000a 	sub.w	r0, r0, sl
 802607c:	2240      	movs	r2, #64	@ 0x40
 802607e:	4082      	lsls	r2, r0
 8026080:	4313      	orrs	r3, r2
 8026082:	3401      	adds	r4, #1
 8026084:	9304      	str	r3, [sp, #16]
 8026086:	f814 1b01 	ldrb.w	r1, [r4], #1
 802608a:	4829      	ldr	r0, [pc, #164]	@ (8026130 <_vfiprintf_r+0x220>)
 802608c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8026090:	2206      	movs	r2, #6
 8026092:	f7da f8ad 	bl	80001f0 <memchr>
 8026096:	2800      	cmp	r0, #0
 8026098:	d03f      	beq.n	802611a <_vfiprintf_r+0x20a>
 802609a:	4b26      	ldr	r3, [pc, #152]	@ (8026134 <_vfiprintf_r+0x224>)
 802609c:	bb1b      	cbnz	r3, 80260e6 <_vfiprintf_r+0x1d6>
 802609e:	9b03      	ldr	r3, [sp, #12]
 80260a0:	3307      	adds	r3, #7
 80260a2:	f023 0307 	bic.w	r3, r3, #7
 80260a6:	3308      	adds	r3, #8
 80260a8:	9303      	str	r3, [sp, #12]
 80260aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80260ac:	443b      	add	r3, r7
 80260ae:	9309      	str	r3, [sp, #36]	@ 0x24
 80260b0:	e76a      	b.n	8025f88 <_vfiprintf_r+0x78>
 80260b2:	fb0c 3202 	mla	r2, ip, r2, r3
 80260b6:	460c      	mov	r4, r1
 80260b8:	2001      	movs	r0, #1
 80260ba:	e7a8      	b.n	802600e <_vfiprintf_r+0xfe>
 80260bc:	2300      	movs	r3, #0
 80260be:	3401      	adds	r4, #1
 80260c0:	9305      	str	r3, [sp, #20]
 80260c2:	4619      	mov	r1, r3
 80260c4:	f04f 0c0a 	mov.w	ip, #10
 80260c8:	4620      	mov	r0, r4
 80260ca:	f810 2b01 	ldrb.w	r2, [r0], #1
 80260ce:	3a30      	subs	r2, #48	@ 0x30
 80260d0:	2a09      	cmp	r2, #9
 80260d2:	d903      	bls.n	80260dc <_vfiprintf_r+0x1cc>
 80260d4:	2b00      	cmp	r3, #0
 80260d6:	d0c6      	beq.n	8026066 <_vfiprintf_r+0x156>
 80260d8:	9105      	str	r1, [sp, #20]
 80260da:	e7c4      	b.n	8026066 <_vfiprintf_r+0x156>
 80260dc:	fb0c 2101 	mla	r1, ip, r1, r2
 80260e0:	4604      	mov	r4, r0
 80260e2:	2301      	movs	r3, #1
 80260e4:	e7f0      	b.n	80260c8 <_vfiprintf_r+0x1b8>
 80260e6:	ab03      	add	r3, sp, #12
 80260e8:	9300      	str	r3, [sp, #0]
 80260ea:	462a      	mov	r2, r5
 80260ec:	4b12      	ldr	r3, [pc, #72]	@ (8026138 <_vfiprintf_r+0x228>)
 80260ee:	a904      	add	r1, sp, #16
 80260f0:	4630      	mov	r0, r6
 80260f2:	f3af 8000 	nop.w
 80260f6:	4607      	mov	r7, r0
 80260f8:	1c78      	adds	r0, r7, #1
 80260fa:	d1d6      	bne.n	80260aa <_vfiprintf_r+0x19a>
 80260fc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80260fe:	07d9      	lsls	r1, r3, #31
 8026100:	d405      	bmi.n	802610e <_vfiprintf_r+0x1fe>
 8026102:	89ab      	ldrh	r3, [r5, #12]
 8026104:	059a      	lsls	r2, r3, #22
 8026106:	d402      	bmi.n	802610e <_vfiprintf_r+0x1fe>
 8026108:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802610a:	f7ff fe21 	bl	8025d50 <__retarget_lock_release_recursive>
 802610e:	89ab      	ldrh	r3, [r5, #12]
 8026110:	065b      	lsls	r3, r3, #25
 8026112:	f53f af1f 	bmi.w	8025f54 <_vfiprintf_r+0x44>
 8026116:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8026118:	e71e      	b.n	8025f58 <_vfiprintf_r+0x48>
 802611a:	ab03      	add	r3, sp, #12
 802611c:	9300      	str	r3, [sp, #0]
 802611e:	462a      	mov	r2, r5
 8026120:	4b05      	ldr	r3, [pc, #20]	@ (8026138 <_vfiprintf_r+0x228>)
 8026122:	a904      	add	r1, sp, #16
 8026124:	4630      	mov	r0, r6
 8026126:	f000 f879 	bl	802621c <_printf_i>
 802612a:	e7e4      	b.n	80260f6 <_vfiprintf_r+0x1e6>
 802612c:	0802777e 	.word	0x0802777e
 8026130:	08027788 	.word	0x08027788
 8026134:	00000000 	.word	0x00000000
 8026138:	08025eeb 	.word	0x08025eeb
 802613c:	08027784 	.word	0x08027784

08026140 <_printf_common>:
 8026140:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026144:	4616      	mov	r6, r2
 8026146:	4698      	mov	r8, r3
 8026148:	688a      	ldr	r2, [r1, #8]
 802614a:	690b      	ldr	r3, [r1, #16]
 802614c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8026150:	4293      	cmp	r3, r2
 8026152:	bfb8      	it	lt
 8026154:	4613      	movlt	r3, r2
 8026156:	6033      	str	r3, [r6, #0]
 8026158:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 802615c:	4607      	mov	r7, r0
 802615e:	460c      	mov	r4, r1
 8026160:	b10a      	cbz	r2, 8026166 <_printf_common+0x26>
 8026162:	3301      	adds	r3, #1
 8026164:	6033      	str	r3, [r6, #0]
 8026166:	6823      	ldr	r3, [r4, #0]
 8026168:	0699      	lsls	r1, r3, #26
 802616a:	bf42      	ittt	mi
 802616c:	6833      	ldrmi	r3, [r6, #0]
 802616e:	3302      	addmi	r3, #2
 8026170:	6033      	strmi	r3, [r6, #0]
 8026172:	6825      	ldr	r5, [r4, #0]
 8026174:	f015 0506 	ands.w	r5, r5, #6
 8026178:	d106      	bne.n	8026188 <_printf_common+0x48>
 802617a:	f104 0a19 	add.w	sl, r4, #25
 802617e:	68e3      	ldr	r3, [r4, #12]
 8026180:	6832      	ldr	r2, [r6, #0]
 8026182:	1a9b      	subs	r3, r3, r2
 8026184:	42ab      	cmp	r3, r5
 8026186:	dc26      	bgt.n	80261d6 <_printf_common+0x96>
 8026188:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 802618c:	6822      	ldr	r2, [r4, #0]
 802618e:	3b00      	subs	r3, #0
 8026190:	bf18      	it	ne
 8026192:	2301      	movne	r3, #1
 8026194:	0692      	lsls	r2, r2, #26
 8026196:	d42b      	bmi.n	80261f0 <_printf_common+0xb0>
 8026198:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 802619c:	4641      	mov	r1, r8
 802619e:	4638      	mov	r0, r7
 80261a0:	47c8      	blx	r9
 80261a2:	3001      	adds	r0, #1
 80261a4:	d01e      	beq.n	80261e4 <_printf_common+0xa4>
 80261a6:	6823      	ldr	r3, [r4, #0]
 80261a8:	6922      	ldr	r2, [r4, #16]
 80261aa:	f003 0306 	and.w	r3, r3, #6
 80261ae:	2b04      	cmp	r3, #4
 80261b0:	bf02      	ittt	eq
 80261b2:	68e5      	ldreq	r5, [r4, #12]
 80261b4:	6833      	ldreq	r3, [r6, #0]
 80261b6:	1aed      	subeq	r5, r5, r3
 80261b8:	68a3      	ldr	r3, [r4, #8]
 80261ba:	bf0c      	ite	eq
 80261bc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80261c0:	2500      	movne	r5, #0
 80261c2:	4293      	cmp	r3, r2
 80261c4:	bfc4      	itt	gt
 80261c6:	1a9b      	subgt	r3, r3, r2
 80261c8:	18ed      	addgt	r5, r5, r3
 80261ca:	2600      	movs	r6, #0
 80261cc:	341a      	adds	r4, #26
 80261ce:	42b5      	cmp	r5, r6
 80261d0:	d11a      	bne.n	8026208 <_printf_common+0xc8>
 80261d2:	2000      	movs	r0, #0
 80261d4:	e008      	b.n	80261e8 <_printf_common+0xa8>
 80261d6:	2301      	movs	r3, #1
 80261d8:	4652      	mov	r2, sl
 80261da:	4641      	mov	r1, r8
 80261dc:	4638      	mov	r0, r7
 80261de:	47c8      	blx	r9
 80261e0:	3001      	adds	r0, #1
 80261e2:	d103      	bne.n	80261ec <_printf_common+0xac>
 80261e4:	f04f 30ff 	mov.w	r0, #4294967295
 80261e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80261ec:	3501      	adds	r5, #1
 80261ee:	e7c6      	b.n	802617e <_printf_common+0x3e>
 80261f0:	18e1      	adds	r1, r4, r3
 80261f2:	1c5a      	adds	r2, r3, #1
 80261f4:	2030      	movs	r0, #48	@ 0x30
 80261f6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80261fa:	4422      	add	r2, r4
 80261fc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8026200:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8026204:	3302      	adds	r3, #2
 8026206:	e7c7      	b.n	8026198 <_printf_common+0x58>
 8026208:	2301      	movs	r3, #1
 802620a:	4622      	mov	r2, r4
 802620c:	4641      	mov	r1, r8
 802620e:	4638      	mov	r0, r7
 8026210:	47c8      	blx	r9
 8026212:	3001      	adds	r0, #1
 8026214:	d0e6      	beq.n	80261e4 <_printf_common+0xa4>
 8026216:	3601      	adds	r6, #1
 8026218:	e7d9      	b.n	80261ce <_printf_common+0x8e>
	...

0802621c <_printf_i>:
 802621c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8026220:	7e0f      	ldrb	r7, [r1, #24]
 8026222:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8026224:	2f78      	cmp	r7, #120	@ 0x78
 8026226:	4691      	mov	r9, r2
 8026228:	4680      	mov	r8, r0
 802622a:	460c      	mov	r4, r1
 802622c:	469a      	mov	sl, r3
 802622e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8026232:	d807      	bhi.n	8026244 <_printf_i+0x28>
 8026234:	2f62      	cmp	r7, #98	@ 0x62
 8026236:	d80a      	bhi.n	802624e <_printf_i+0x32>
 8026238:	2f00      	cmp	r7, #0
 802623a:	f000 80d1 	beq.w	80263e0 <_printf_i+0x1c4>
 802623e:	2f58      	cmp	r7, #88	@ 0x58
 8026240:	f000 80b8 	beq.w	80263b4 <_printf_i+0x198>
 8026244:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8026248:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 802624c:	e03a      	b.n	80262c4 <_printf_i+0xa8>
 802624e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8026252:	2b15      	cmp	r3, #21
 8026254:	d8f6      	bhi.n	8026244 <_printf_i+0x28>
 8026256:	a101      	add	r1, pc, #4	@ (adr r1, 802625c <_printf_i+0x40>)
 8026258:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802625c:	080262b5 	.word	0x080262b5
 8026260:	080262c9 	.word	0x080262c9
 8026264:	08026245 	.word	0x08026245
 8026268:	08026245 	.word	0x08026245
 802626c:	08026245 	.word	0x08026245
 8026270:	08026245 	.word	0x08026245
 8026274:	080262c9 	.word	0x080262c9
 8026278:	08026245 	.word	0x08026245
 802627c:	08026245 	.word	0x08026245
 8026280:	08026245 	.word	0x08026245
 8026284:	08026245 	.word	0x08026245
 8026288:	080263c7 	.word	0x080263c7
 802628c:	080262f3 	.word	0x080262f3
 8026290:	08026381 	.word	0x08026381
 8026294:	08026245 	.word	0x08026245
 8026298:	08026245 	.word	0x08026245
 802629c:	080263e9 	.word	0x080263e9
 80262a0:	08026245 	.word	0x08026245
 80262a4:	080262f3 	.word	0x080262f3
 80262a8:	08026245 	.word	0x08026245
 80262ac:	08026245 	.word	0x08026245
 80262b0:	08026389 	.word	0x08026389
 80262b4:	6833      	ldr	r3, [r6, #0]
 80262b6:	1d1a      	adds	r2, r3, #4
 80262b8:	681b      	ldr	r3, [r3, #0]
 80262ba:	6032      	str	r2, [r6, #0]
 80262bc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80262c0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80262c4:	2301      	movs	r3, #1
 80262c6:	e09c      	b.n	8026402 <_printf_i+0x1e6>
 80262c8:	6833      	ldr	r3, [r6, #0]
 80262ca:	6820      	ldr	r0, [r4, #0]
 80262cc:	1d19      	adds	r1, r3, #4
 80262ce:	6031      	str	r1, [r6, #0]
 80262d0:	0606      	lsls	r6, r0, #24
 80262d2:	d501      	bpl.n	80262d8 <_printf_i+0xbc>
 80262d4:	681d      	ldr	r5, [r3, #0]
 80262d6:	e003      	b.n	80262e0 <_printf_i+0xc4>
 80262d8:	0645      	lsls	r5, r0, #25
 80262da:	d5fb      	bpl.n	80262d4 <_printf_i+0xb8>
 80262dc:	f9b3 5000 	ldrsh.w	r5, [r3]
 80262e0:	2d00      	cmp	r5, #0
 80262e2:	da03      	bge.n	80262ec <_printf_i+0xd0>
 80262e4:	232d      	movs	r3, #45	@ 0x2d
 80262e6:	426d      	negs	r5, r5
 80262e8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80262ec:	4858      	ldr	r0, [pc, #352]	@ (8026450 <_printf_i+0x234>)
 80262ee:	230a      	movs	r3, #10
 80262f0:	e011      	b.n	8026316 <_printf_i+0xfa>
 80262f2:	6821      	ldr	r1, [r4, #0]
 80262f4:	6833      	ldr	r3, [r6, #0]
 80262f6:	0608      	lsls	r0, r1, #24
 80262f8:	f853 5b04 	ldr.w	r5, [r3], #4
 80262fc:	d402      	bmi.n	8026304 <_printf_i+0xe8>
 80262fe:	0649      	lsls	r1, r1, #25
 8026300:	bf48      	it	mi
 8026302:	b2ad      	uxthmi	r5, r5
 8026304:	2f6f      	cmp	r7, #111	@ 0x6f
 8026306:	4852      	ldr	r0, [pc, #328]	@ (8026450 <_printf_i+0x234>)
 8026308:	6033      	str	r3, [r6, #0]
 802630a:	bf14      	ite	ne
 802630c:	230a      	movne	r3, #10
 802630e:	2308      	moveq	r3, #8
 8026310:	2100      	movs	r1, #0
 8026312:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8026316:	6866      	ldr	r6, [r4, #4]
 8026318:	60a6      	str	r6, [r4, #8]
 802631a:	2e00      	cmp	r6, #0
 802631c:	db05      	blt.n	802632a <_printf_i+0x10e>
 802631e:	6821      	ldr	r1, [r4, #0]
 8026320:	432e      	orrs	r6, r5
 8026322:	f021 0104 	bic.w	r1, r1, #4
 8026326:	6021      	str	r1, [r4, #0]
 8026328:	d04b      	beq.n	80263c2 <_printf_i+0x1a6>
 802632a:	4616      	mov	r6, r2
 802632c:	fbb5 f1f3 	udiv	r1, r5, r3
 8026330:	fb03 5711 	mls	r7, r3, r1, r5
 8026334:	5dc7      	ldrb	r7, [r0, r7]
 8026336:	f806 7d01 	strb.w	r7, [r6, #-1]!
 802633a:	462f      	mov	r7, r5
 802633c:	42bb      	cmp	r3, r7
 802633e:	460d      	mov	r5, r1
 8026340:	d9f4      	bls.n	802632c <_printf_i+0x110>
 8026342:	2b08      	cmp	r3, #8
 8026344:	d10b      	bne.n	802635e <_printf_i+0x142>
 8026346:	6823      	ldr	r3, [r4, #0]
 8026348:	07df      	lsls	r7, r3, #31
 802634a:	d508      	bpl.n	802635e <_printf_i+0x142>
 802634c:	6923      	ldr	r3, [r4, #16]
 802634e:	6861      	ldr	r1, [r4, #4]
 8026350:	4299      	cmp	r1, r3
 8026352:	bfde      	ittt	le
 8026354:	2330      	movle	r3, #48	@ 0x30
 8026356:	f806 3c01 	strble.w	r3, [r6, #-1]
 802635a:	f106 36ff 	addle.w	r6, r6, #4294967295
 802635e:	1b92      	subs	r2, r2, r6
 8026360:	6122      	str	r2, [r4, #16]
 8026362:	f8cd a000 	str.w	sl, [sp]
 8026366:	464b      	mov	r3, r9
 8026368:	aa03      	add	r2, sp, #12
 802636a:	4621      	mov	r1, r4
 802636c:	4640      	mov	r0, r8
 802636e:	f7ff fee7 	bl	8026140 <_printf_common>
 8026372:	3001      	adds	r0, #1
 8026374:	d14a      	bne.n	802640c <_printf_i+0x1f0>
 8026376:	f04f 30ff 	mov.w	r0, #4294967295
 802637a:	b004      	add	sp, #16
 802637c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026380:	6823      	ldr	r3, [r4, #0]
 8026382:	f043 0320 	orr.w	r3, r3, #32
 8026386:	6023      	str	r3, [r4, #0]
 8026388:	4832      	ldr	r0, [pc, #200]	@ (8026454 <_printf_i+0x238>)
 802638a:	2778      	movs	r7, #120	@ 0x78
 802638c:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8026390:	6823      	ldr	r3, [r4, #0]
 8026392:	6831      	ldr	r1, [r6, #0]
 8026394:	061f      	lsls	r7, r3, #24
 8026396:	f851 5b04 	ldr.w	r5, [r1], #4
 802639a:	d402      	bmi.n	80263a2 <_printf_i+0x186>
 802639c:	065f      	lsls	r7, r3, #25
 802639e:	bf48      	it	mi
 80263a0:	b2ad      	uxthmi	r5, r5
 80263a2:	6031      	str	r1, [r6, #0]
 80263a4:	07d9      	lsls	r1, r3, #31
 80263a6:	bf44      	itt	mi
 80263a8:	f043 0320 	orrmi.w	r3, r3, #32
 80263ac:	6023      	strmi	r3, [r4, #0]
 80263ae:	b11d      	cbz	r5, 80263b8 <_printf_i+0x19c>
 80263b0:	2310      	movs	r3, #16
 80263b2:	e7ad      	b.n	8026310 <_printf_i+0xf4>
 80263b4:	4826      	ldr	r0, [pc, #152]	@ (8026450 <_printf_i+0x234>)
 80263b6:	e7e9      	b.n	802638c <_printf_i+0x170>
 80263b8:	6823      	ldr	r3, [r4, #0]
 80263ba:	f023 0320 	bic.w	r3, r3, #32
 80263be:	6023      	str	r3, [r4, #0]
 80263c0:	e7f6      	b.n	80263b0 <_printf_i+0x194>
 80263c2:	4616      	mov	r6, r2
 80263c4:	e7bd      	b.n	8026342 <_printf_i+0x126>
 80263c6:	6833      	ldr	r3, [r6, #0]
 80263c8:	6825      	ldr	r5, [r4, #0]
 80263ca:	6961      	ldr	r1, [r4, #20]
 80263cc:	1d18      	adds	r0, r3, #4
 80263ce:	6030      	str	r0, [r6, #0]
 80263d0:	062e      	lsls	r6, r5, #24
 80263d2:	681b      	ldr	r3, [r3, #0]
 80263d4:	d501      	bpl.n	80263da <_printf_i+0x1be>
 80263d6:	6019      	str	r1, [r3, #0]
 80263d8:	e002      	b.n	80263e0 <_printf_i+0x1c4>
 80263da:	0668      	lsls	r0, r5, #25
 80263dc:	d5fb      	bpl.n	80263d6 <_printf_i+0x1ba>
 80263de:	8019      	strh	r1, [r3, #0]
 80263e0:	2300      	movs	r3, #0
 80263e2:	6123      	str	r3, [r4, #16]
 80263e4:	4616      	mov	r6, r2
 80263e6:	e7bc      	b.n	8026362 <_printf_i+0x146>
 80263e8:	6833      	ldr	r3, [r6, #0]
 80263ea:	1d1a      	adds	r2, r3, #4
 80263ec:	6032      	str	r2, [r6, #0]
 80263ee:	681e      	ldr	r6, [r3, #0]
 80263f0:	6862      	ldr	r2, [r4, #4]
 80263f2:	2100      	movs	r1, #0
 80263f4:	4630      	mov	r0, r6
 80263f6:	f7d9 fefb 	bl	80001f0 <memchr>
 80263fa:	b108      	cbz	r0, 8026400 <_printf_i+0x1e4>
 80263fc:	1b80      	subs	r0, r0, r6
 80263fe:	6060      	str	r0, [r4, #4]
 8026400:	6863      	ldr	r3, [r4, #4]
 8026402:	6123      	str	r3, [r4, #16]
 8026404:	2300      	movs	r3, #0
 8026406:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802640a:	e7aa      	b.n	8026362 <_printf_i+0x146>
 802640c:	6923      	ldr	r3, [r4, #16]
 802640e:	4632      	mov	r2, r6
 8026410:	4649      	mov	r1, r9
 8026412:	4640      	mov	r0, r8
 8026414:	47d0      	blx	sl
 8026416:	3001      	adds	r0, #1
 8026418:	d0ad      	beq.n	8026376 <_printf_i+0x15a>
 802641a:	6823      	ldr	r3, [r4, #0]
 802641c:	079b      	lsls	r3, r3, #30
 802641e:	d413      	bmi.n	8026448 <_printf_i+0x22c>
 8026420:	68e0      	ldr	r0, [r4, #12]
 8026422:	9b03      	ldr	r3, [sp, #12]
 8026424:	4298      	cmp	r0, r3
 8026426:	bfb8      	it	lt
 8026428:	4618      	movlt	r0, r3
 802642a:	e7a6      	b.n	802637a <_printf_i+0x15e>
 802642c:	2301      	movs	r3, #1
 802642e:	4632      	mov	r2, r6
 8026430:	4649      	mov	r1, r9
 8026432:	4640      	mov	r0, r8
 8026434:	47d0      	blx	sl
 8026436:	3001      	adds	r0, #1
 8026438:	d09d      	beq.n	8026376 <_printf_i+0x15a>
 802643a:	3501      	adds	r5, #1
 802643c:	68e3      	ldr	r3, [r4, #12]
 802643e:	9903      	ldr	r1, [sp, #12]
 8026440:	1a5b      	subs	r3, r3, r1
 8026442:	42ab      	cmp	r3, r5
 8026444:	dcf2      	bgt.n	802642c <_printf_i+0x210>
 8026446:	e7eb      	b.n	8026420 <_printf_i+0x204>
 8026448:	2500      	movs	r5, #0
 802644a:	f104 0619 	add.w	r6, r4, #25
 802644e:	e7f5      	b.n	802643c <_printf_i+0x220>
 8026450:	0802778f 	.word	0x0802778f
 8026454:	080277a0 	.word	0x080277a0

08026458 <__sflush_r>:
 8026458:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 802645c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026460:	0716      	lsls	r6, r2, #28
 8026462:	4605      	mov	r5, r0
 8026464:	460c      	mov	r4, r1
 8026466:	d454      	bmi.n	8026512 <__sflush_r+0xba>
 8026468:	684b      	ldr	r3, [r1, #4]
 802646a:	2b00      	cmp	r3, #0
 802646c:	dc02      	bgt.n	8026474 <__sflush_r+0x1c>
 802646e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8026470:	2b00      	cmp	r3, #0
 8026472:	dd48      	ble.n	8026506 <__sflush_r+0xae>
 8026474:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8026476:	2e00      	cmp	r6, #0
 8026478:	d045      	beq.n	8026506 <__sflush_r+0xae>
 802647a:	2300      	movs	r3, #0
 802647c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8026480:	682f      	ldr	r7, [r5, #0]
 8026482:	6a21      	ldr	r1, [r4, #32]
 8026484:	602b      	str	r3, [r5, #0]
 8026486:	d030      	beq.n	80264ea <__sflush_r+0x92>
 8026488:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 802648a:	89a3      	ldrh	r3, [r4, #12]
 802648c:	0759      	lsls	r1, r3, #29
 802648e:	d505      	bpl.n	802649c <__sflush_r+0x44>
 8026490:	6863      	ldr	r3, [r4, #4]
 8026492:	1ad2      	subs	r2, r2, r3
 8026494:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8026496:	b10b      	cbz	r3, 802649c <__sflush_r+0x44>
 8026498:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 802649a:	1ad2      	subs	r2, r2, r3
 802649c:	2300      	movs	r3, #0
 802649e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80264a0:	6a21      	ldr	r1, [r4, #32]
 80264a2:	4628      	mov	r0, r5
 80264a4:	47b0      	blx	r6
 80264a6:	1c43      	adds	r3, r0, #1
 80264a8:	89a3      	ldrh	r3, [r4, #12]
 80264aa:	d106      	bne.n	80264ba <__sflush_r+0x62>
 80264ac:	6829      	ldr	r1, [r5, #0]
 80264ae:	291d      	cmp	r1, #29
 80264b0:	d82b      	bhi.n	802650a <__sflush_r+0xb2>
 80264b2:	4a2a      	ldr	r2, [pc, #168]	@ (802655c <__sflush_r+0x104>)
 80264b4:	40ca      	lsrs	r2, r1
 80264b6:	07d6      	lsls	r6, r2, #31
 80264b8:	d527      	bpl.n	802650a <__sflush_r+0xb2>
 80264ba:	2200      	movs	r2, #0
 80264bc:	6062      	str	r2, [r4, #4]
 80264be:	04d9      	lsls	r1, r3, #19
 80264c0:	6922      	ldr	r2, [r4, #16]
 80264c2:	6022      	str	r2, [r4, #0]
 80264c4:	d504      	bpl.n	80264d0 <__sflush_r+0x78>
 80264c6:	1c42      	adds	r2, r0, #1
 80264c8:	d101      	bne.n	80264ce <__sflush_r+0x76>
 80264ca:	682b      	ldr	r3, [r5, #0]
 80264cc:	b903      	cbnz	r3, 80264d0 <__sflush_r+0x78>
 80264ce:	6560      	str	r0, [r4, #84]	@ 0x54
 80264d0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80264d2:	602f      	str	r7, [r5, #0]
 80264d4:	b1b9      	cbz	r1, 8026506 <__sflush_r+0xae>
 80264d6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80264da:	4299      	cmp	r1, r3
 80264dc:	d002      	beq.n	80264e4 <__sflush_r+0x8c>
 80264de:	4628      	mov	r0, r5
 80264e0:	f7ff fca2 	bl	8025e28 <_free_r>
 80264e4:	2300      	movs	r3, #0
 80264e6:	6363      	str	r3, [r4, #52]	@ 0x34
 80264e8:	e00d      	b.n	8026506 <__sflush_r+0xae>
 80264ea:	2301      	movs	r3, #1
 80264ec:	4628      	mov	r0, r5
 80264ee:	47b0      	blx	r6
 80264f0:	4602      	mov	r2, r0
 80264f2:	1c50      	adds	r0, r2, #1
 80264f4:	d1c9      	bne.n	802648a <__sflush_r+0x32>
 80264f6:	682b      	ldr	r3, [r5, #0]
 80264f8:	2b00      	cmp	r3, #0
 80264fa:	d0c6      	beq.n	802648a <__sflush_r+0x32>
 80264fc:	2b1d      	cmp	r3, #29
 80264fe:	d001      	beq.n	8026504 <__sflush_r+0xac>
 8026500:	2b16      	cmp	r3, #22
 8026502:	d11e      	bne.n	8026542 <__sflush_r+0xea>
 8026504:	602f      	str	r7, [r5, #0]
 8026506:	2000      	movs	r0, #0
 8026508:	e022      	b.n	8026550 <__sflush_r+0xf8>
 802650a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802650e:	b21b      	sxth	r3, r3
 8026510:	e01b      	b.n	802654a <__sflush_r+0xf2>
 8026512:	690f      	ldr	r7, [r1, #16]
 8026514:	2f00      	cmp	r7, #0
 8026516:	d0f6      	beq.n	8026506 <__sflush_r+0xae>
 8026518:	0793      	lsls	r3, r2, #30
 802651a:	680e      	ldr	r6, [r1, #0]
 802651c:	bf08      	it	eq
 802651e:	694b      	ldreq	r3, [r1, #20]
 8026520:	600f      	str	r7, [r1, #0]
 8026522:	bf18      	it	ne
 8026524:	2300      	movne	r3, #0
 8026526:	eba6 0807 	sub.w	r8, r6, r7
 802652a:	608b      	str	r3, [r1, #8]
 802652c:	f1b8 0f00 	cmp.w	r8, #0
 8026530:	dde9      	ble.n	8026506 <__sflush_r+0xae>
 8026532:	6a21      	ldr	r1, [r4, #32]
 8026534:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8026536:	4643      	mov	r3, r8
 8026538:	463a      	mov	r2, r7
 802653a:	4628      	mov	r0, r5
 802653c:	47b0      	blx	r6
 802653e:	2800      	cmp	r0, #0
 8026540:	dc08      	bgt.n	8026554 <__sflush_r+0xfc>
 8026542:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026546:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802654a:	81a3      	strh	r3, [r4, #12]
 802654c:	f04f 30ff 	mov.w	r0, #4294967295
 8026550:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026554:	4407      	add	r7, r0
 8026556:	eba8 0800 	sub.w	r8, r8, r0
 802655a:	e7e7      	b.n	802652c <__sflush_r+0xd4>
 802655c:	20400001 	.word	0x20400001

08026560 <_fflush_r>:
 8026560:	b538      	push	{r3, r4, r5, lr}
 8026562:	690b      	ldr	r3, [r1, #16]
 8026564:	4605      	mov	r5, r0
 8026566:	460c      	mov	r4, r1
 8026568:	b913      	cbnz	r3, 8026570 <_fflush_r+0x10>
 802656a:	2500      	movs	r5, #0
 802656c:	4628      	mov	r0, r5
 802656e:	bd38      	pop	{r3, r4, r5, pc}
 8026570:	b118      	cbz	r0, 802657a <_fflush_r+0x1a>
 8026572:	6a03      	ldr	r3, [r0, #32]
 8026574:	b90b      	cbnz	r3, 802657a <_fflush_r+0x1a>
 8026576:	f7ff fa91 	bl	8025a9c <__sinit>
 802657a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802657e:	2b00      	cmp	r3, #0
 8026580:	d0f3      	beq.n	802656a <_fflush_r+0xa>
 8026582:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8026584:	07d0      	lsls	r0, r2, #31
 8026586:	d404      	bmi.n	8026592 <_fflush_r+0x32>
 8026588:	0599      	lsls	r1, r3, #22
 802658a:	d402      	bmi.n	8026592 <_fflush_r+0x32>
 802658c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802658e:	f7ff fbde 	bl	8025d4e <__retarget_lock_acquire_recursive>
 8026592:	4628      	mov	r0, r5
 8026594:	4621      	mov	r1, r4
 8026596:	f7ff ff5f 	bl	8026458 <__sflush_r>
 802659a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 802659c:	07da      	lsls	r2, r3, #31
 802659e:	4605      	mov	r5, r0
 80265a0:	d4e4      	bmi.n	802656c <_fflush_r+0xc>
 80265a2:	89a3      	ldrh	r3, [r4, #12]
 80265a4:	059b      	lsls	r3, r3, #22
 80265a6:	d4e1      	bmi.n	802656c <_fflush_r+0xc>
 80265a8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80265aa:	f7ff fbd1 	bl	8025d50 <__retarget_lock_release_recursive>
 80265ae:	e7dd      	b.n	802656c <_fflush_r+0xc>

080265b0 <__swbuf_r>:
 80265b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80265b2:	460e      	mov	r6, r1
 80265b4:	4614      	mov	r4, r2
 80265b6:	4605      	mov	r5, r0
 80265b8:	b118      	cbz	r0, 80265c2 <__swbuf_r+0x12>
 80265ba:	6a03      	ldr	r3, [r0, #32]
 80265bc:	b90b      	cbnz	r3, 80265c2 <__swbuf_r+0x12>
 80265be:	f7ff fa6d 	bl	8025a9c <__sinit>
 80265c2:	69a3      	ldr	r3, [r4, #24]
 80265c4:	60a3      	str	r3, [r4, #8]
 80265c6:	89a3      	ldrh	r3, [r4, #12]
 80265c8:	071a      	lsls	r2, r3, #28
 80265ca:	d501      	bpl.n	80265d0 <__swbuf_r+0x20>
 80265cc:	6923      	ldr	r3, [r4, #16]
 80265ce:	b943      	cbnz	r3, 80265e2 <__swbuf_r+0x32>
 80265d0:	4621      	mov	r1, r4
 80265d2:	4628      	mov	r0, r5
 80265d4:	f000 f82a 	bl	802662c <__swsetup_r>
 80265d8:	b118      	cbz	r0, 80265e2 <__swbuf_r+0x32>
 80265da:	f04f 37ff 	mov.w	r7, #4294967295
 80265de:	4638      	mov	r0, r7
 80265e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80265e2:	6823      	ldr	r3, [r4, #0]
 80265e4:	6922      	ldr	r2, [r4, #16]
 80265e6:	1a98      	subs	r0, r3, r2
 80265e8:	6963      	ldr	r3, [r4, #20]
 80265ea:	b2f6      	uxtb	r6, r6
 80265ec:	4283      	cmp	r3, r0
 80265ee:	4637      	mov	r7, r6
 80265f0:	dc05      	bgt.n	80265fe <__swbuf_r+0x4e>
 80265f2:	4621      	mov	r1, r4
 80265f4:	4628      	mov	r0, r5
 80265f6:	f7ff ffb3 	bl	8026560 <_fflush_r>
 80265fa:	2800      	cmp	r0, #0
 80265fc:	d1ed      	bne.n	80265da <__swbuf_r+0x2a>
 80265fe:	68a3      	ldr	r3, [r4, #8]
 8026600:	3b01      	subs	r3, #1
 8026602:	60a3      	str	r3, [r4, #8]
 8026604:	6823      	ldr	r3, [r4, #0]
 8026606:	1c5a      	adds	r2, r3, #1
 8026608:	6022      	str	r2, [r4, #0]
 802660a:	701e      	strb	r6, [r3, #0]
 802660c:	6962      	ldr	r2, [r4, #20]
 802660e:	1c43      	adds	r3, r0, #1
 8026610:	429a      	cmp	r2, r3
 8026612:	d004      	beq.n	802661e <__swbuf_r+0x6e>
 8026614:	89a3      	ldrh	r3, [r4, #12]
 8026616:	07db      	lsls	r3, r3, #31
 8026618:	d5e1      	bpl.n	80265de <__swbuf_r+0x2e>
 802661a:	2e0a      	cmp	r6, #10
 802661c:	d1df      	bne.n	80265de <__swbuf_r+0x2e>
 802661e:	4621      	mov	r1, r4
 8026620:	4628      	mov	r0, r5
 8026622:	f7ff ff9d 	bl	8026560 <_fflush_r>
 8026626:	2800      	cmp	r0, #0
 8026628:	d0d9      	beq.n	80265de <__swbuf_r+0x2e>
 802662a:	e7d6      	b.n	80265da <__swbuf_r+0x2a>

0802662c <__swsetup_r>:
 802662c:	b538      	push	{r3, r4, r5, lr}
 802662e:	4b29      	ldr	r3, [pc, #164]	@ (80266d4 <__swsetup_r+0xa8>)
 8026630:	4605      	mov	r5, r0
 8026632:	6818      	ldr	r0, [r3, #0]
 8026634:	460c      	mov	r4, r1
 8026636:	b118      	cbz	r0, 8026640 <__swsetup_r+0x14>
 8026638:	6a03      	ldr	r3, [r0, #32]
 802663a:	b90b      	cbnz	r3, 8026640 <__swsetup_r+0x14>
 802663c:	f7ff fa2e 	bl	8025a9c <__sinit>
 8026640:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026644:	0719      	lsls	r1, r3, #28
 8026646:	d422      	bmi.n	802668e <__swsetup_r+0x62>
 8026648:	06da      	lsls	r2, r3, #27
 802664a:	d407      	bmi.n	802665c <__swsetup_r+0x30>
 802664c:	2209      	movs	r2, #9
 802664e:	602a      	str	r2, [r5, #0]
 8026650:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8026654:	81a3      	strh	r3, [r4, #12]
 8026656:	f04f 30ff 	mov.w	r0, #4294967295
 802665a:	e033      	b.n	80266c4 <__swsetup_r+0x98>
 802665c:	0758      	lsls	r0, r3, #29
 802665e:	d512      	bpl.n	8026686 <__swsetup_r+0x5a>
 8026660:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8026662:	b141      	cbz	r1, 8026676 <__swsetup_r+0x4a>
 8026664:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8026668:	4299      	cmp	r1, r3
 802666a:	d002      	beq.n	8026672 <__swsetup_r+0x46>
 802666c:	4628      	mov	r0, r5
 802666e:	f7ff fbdb 	bl	8025e28 <_free_r>
 8026672:	2300      	movs	r3, #0
 8026674:	6363      	str	r3, [r4, #52]	@ 0x34
 8026676:	89a3      	ldrh	r3, [r4, #12]
 8026678:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 802667c:	81a3      	strh	r3, [r4, #12]
 802667e:	2300      	movs	r3, #0
 8026680:	6063      	str	r3, [r4, #4]
 8026682:	6923      	ldr	r3, [r4, #16]
 8026684:	6023      	str	r3, [r4, #0]
 8026686:	89a3      	ldrh	r3, [r4, #12]
 8026688:	f043 0308 	orr.w	r3, r3, #8
 802668c:	81a3      	strh	r3, [r4, #12]
 802668e:	6923      	ldr	r3, [r4, #16]
 8026690:	b94b      	cbnz	r3, 80266a6 <__swsetup_r+0x7a>
 8026692:	89a3      	ldrh	r3, [r4, #12]
 8026694:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8026698:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 802669c:	d003      	beq.n	80266a6 <__swsetup_r+0x7a>
 802669e:	4621      	mov	r1, r4
 80266a0:	4628      	mov	r0, r5
 80266a2:	f000 f83f 	bl	8026724 <__smakebuf_r>
 80266a6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80266aa:	f013 0201 	ands.w	r2, r3, #1
 80266ae:	d00a      	beq.n	80266c6 <__swsetup_r+0x9a>
 80266b0:	2200      	movs	r2, #0
 80266b2:	60a2      	str	r2, [r4, #8]
 80266b4:	6962      	ldr	r2, [r4, #20]
 80266b6:	4252      	negs	r2, r2
 80266b8:	61a2      	str	r2, [r4, #24]
 80266ba:	6922      	ldr	r2, [r4, #16]
 80266bc:	b942      	cbnz	r2, 80266d0 <__swsetup_r+0xa4>
 80266be:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80266c2:	d1c5      	bne.n	8026650 <__swsetup_r+0x24>
 80266c4:	bd38      	pop	{r3, r4, r5, pc}
 80266c6:	0799      	lsls	r1, r3, #30
 80266c8:	bf58      	it	pl
 80266ca:	6962      	ldrpl	r2, [r4, #20]
 80266cc:	60a2      	str	r2, [r4, #8]
 80266ce:	e7f4      	b.n	80266ba <__swsetup_r+0x8e>
 80266d0:	2000      	movs	r0, #0
 80266d2:	e7f7      	b.n	80266c4 <__swsetup_r+0x98>
 80266d4:	20000110 	.word	0x20000110

080266d8 <__swhatbuf_r>:
 80266d8:	b570      	push	{r4, r5, r6, lr}
 80266da:	460c      	mov	r4, r1
 80266dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80266e0:	2900      	cmp	r1, #0
 80266e2:	b096      	sub	sp, #88	@ 0x58
 80266e4:	4615      	mov	r5, r2
 80266e6:	461e      	mov	r6, r3
 80266e8:	da0d      	bge.n	8026706 <__swhatbuf_r+0x2e>
 80266ea:	89a3      	ldrh	r3, [r4, #12]
 80266ec:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80266f0:	f04f 0100 	mov.w	r1, #0
 80266f4:	bf14      	ite	ne
 80266f6:	2340      	movne	r3, #64	@ 0x40
 80266f8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80266fc:	2000      	movs	r0, #0
 80266fe:	6031      	str	r1, [r6, #0]
 8026700:	602b      	str	r3, [r5, #0]
 8026702:	b016      	add	sp, #88	@ 0x58
 8026704:	bd70      	pop	{r4, r5, r6, pc}
 8026706:	466a      	mov	r2, sp
 8026708:	f000 f848 	bl	802679c <_fstat_r>
 802670c:	2800      	cmp	r0, #0
 802670e:	dbec      	blt.n	80266ea <__swhatbuf_r+0x12>
 8026710:	9901      	ldr	r1, [sp, #4]
 8026712:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8026716:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 802671a:	4259      	negs	r1, r3
 802671c:	4159      	adcs	r1, r3
 802671e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8026722:	e7eb      	b.n	80266fc <__swhatbuf_r+0x24>

08026724 <__smakebuf_r>:
 8026724:	898b      	ldrh	r3, [r1, #12]
 8026726:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8026728:	079d      	lsls	r5, r3, #30
 802672a:	4606      	mov	r6, r0
 802672c:	460c      	mov	r4, r1
 802672e:	d507      	bpl.n	8026740 <__smakebuf_r+0x1c>
 8026730:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8026734:	6023      	str	r3, [r4, #0]
 8026736:	6123      	str	r3, [r4, #16]
 8026738:	2301      	movs	r3, #1
 802673a:	6163      	str	r3, [r4, #20]
 802673c:	b003      	add	sp, #12
 802673e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026740:	ab01      	add	r3, sp, #4
 8026742:	466a      	mov	r2, sp
 8026744:	f7ff ffc8 	bl	80266d8 <__swhatbuf_r>
 8026748:	9f00      	ldr	r7, [sp, #0]
 802674a:	4605      	mov	r5, r0
 802674c:	4639      	mov	r1, r7
 802674e:	4630      	mov	r0, r6
 8026750:	f7ff f87e 	bl	8025850 <_malloc_r>
 8026754:	b948      	cbnz	r0, 802676a <__smakebuf_r+0x46>
 8026756:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802675a:	059a      	lsls	r2, r3, #22
 802675c:	d4ee      	bmi.n	802673c <__smakebuf_r+0x18>
 802675e:	f023 0303 	bic.w	r3, r3, #3
 8026762:	f043 0302 	orr.w	r3, r3, #2
 8026766:	81a3      	strh	r3, [r4, #12]
 8026768:	e7e2      	b.n	8026730 <__smakebuf_r+0xc>
 802676a:	89a3      	ldrh	r3, [r4, #12]
 802676c:	6020      	str	r0, [r4, #0]
 802676e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8026772:	81a3      	strh	r3, [r4, #12]
 8026774:	9b01      	ldr	r3, [sp, #4]
 8026776:	e9c4 0704 	strd	r0, r7, [r4, #16]
 802677a:	b15b      	cbz	r3, 8026794 <__smakebuf_r+0x70>
 802677c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8026780:	4630      	mov	r0, r6
 8026782:	f000 f81d 	bl	80267c0 <_isatty_r>
 8026786:	b128      	cbz	r0, 8026794 <__smakebuf_r+0x70>
 8026788:	89a3      	ldrh	r3, [r4, #12]
 802678a:	f023 0303 	bic.w	r3, r3, #3
 802678e:	f043 0301 	orr.w	r3, r3, #1
 8026792:	81a3      	strh	r3, [r4, #12]
 8026794:	89a3      	ldrh	r3, [r4, #12]
 8026796:	431d      	orrs	r5, r3
 8026798:	81a5      	strh	r5, [r4, #12]
 802679a:	e7cf      	b.n	802673c <__smakebuf_r+0x18>

0802679c <_fstat_r>:
 802679c:	b538      	push	{r3, r4, r5, lr}
 802679e:	4d07      	ldr	r5, [pc, #28]	@ (80267bc <_fstat_r+0x20>)
 80267a0:	2300      	movs	r3, #0
 80267a2:	4604      	mov	r4, r0
 80267a4:	4608      	mov	r0, r1
 80267a6:	4611      	mov	r1, r2
 80267a8:	602b      	str	r3, [r5, #0]
 80267aa:	f7da ffc6 	bl	800173a <_fstat>
 80267ae:	1c43      	adds	r3, r0, #1
 80267b0:	d102      	bne.n	80267b8 <_fstat_r+0x1c>
 80267b2:	682b      	ldr	r3, [r5, #0]
 80267b4:	b103      	cbz	r3, 80267b8 <_fstat_r+0x1c>
 80267b6:	6023      	str	r3, [r4, #0]
 80267b8:	bd38      	pop	{r3, r4, r5, pc}
 80267ba:	bf00      	nop
 80267bc:	20015e8c 	.word	0x20015e8c

080267c0 <_isatty_r>:
 80267c0:	b538      	push	{r3, r4, r5, lr}
 80267c2:	4d06      	ldr	r5, [pc, #24]	@ (80267dc <_isatty_r+0x1c>)
 80267c4:	2300      	movs	r3, #0
 80267c6:	4604      	mov	r4, r0
 80267c8:	4608      	mov	r0, r1
 80267ca:	602b      	str	r3, [r5, #0]
 80267cc:	f7da ffba 	bl	8001744 <_isatty>
 80267d0:	1c43      	adds	r3, r0, #1
 80267d2:	d102      	bne.n	80267da <_isatty_r+0x1a>
 80267d4:	682b      	ldr	r3, [r5, #0]
 80267d6:	b103      	cbz	r3, 80267da <_isatty_r+0x1a>
 80267d8:	6023      	str	r3, [r4, #0]
 80267da:	bd38      	pop	{r3, r4, r5, pc}
 80267dc:	20015e8c 	.word	0x20015e8c

080267e0 <_init>:
 80267e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80267e2:	bf00      	nop
 80267e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80267e6:	bc08      	pop	{r3}
 80267e8:	469e      	mov	lr, r3
 80267ea:	4770      	bx	lr

080267ec <_fini>:
 80267ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80267ee:	bf00      	nop
 80267f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80267f2:	bc08      	pop	{r3}
 80267f4:	469e      	mov	lr, r3
 80267f6:	4770      	bx	lr
